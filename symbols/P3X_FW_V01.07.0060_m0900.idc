//
// +-------------------------------------------------------------------------+
// |   This file has been generated by The Interactive Disassembler (IDA)    |
// |           Copyright (c) 2017 Hex-Rays, <support@hex-rays.com>           |
// +-------------------------------------------------------------------------+
//
//
//      This file should be used in the following way:
//         - reload executable into IDA with using switch -c
//         - use File, Load IDC file and load this file.
//
//      NOTE: This file doesn't contain all information from the database.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
  // set 'loading idc file' mode
  set_inf_attr(INF_GENFLAGS, INFFL_LOADIDC|get_inf_attr(INF_GENFLAGS));
  GenInfo();            // various settings
  Segments();           // segmentation
  Enums();              // enumerations
  Structures();         // structure types
  ApplyStrucTInfos();   // structure type infos
  Patches();            // manual patches
  SegRegs();            // segment register values
  Bytes();              // individual bytes (code,data)
  Functions();          // function definitions
  // clear 'loading idc file' mode
  set_inf_attr(INF_GENFLAGS, ~INFFL_LOADIDC&get_inf_attr(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        delete_all_segments();    // purge database
	set_processor_type("ARM", SETPROC_USER);
	set_inf_attr(INF_COMPILER, 6);
	set_inf_attr(INF_STRLIT_BREAK, 0xA);
	set_flag(INF_CMTFLAG, SW_ALLCMT, 0);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_VOID, 0);
	set_inf_attr(INF_XREFNUM, 2);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_AUTO, 1);
	set_inf_attr(INF_INDENT, 16);
	set_inf_attr(INF_COMMENT, 40);
	set_inf_attr(INF_MAXREF, 0x10);
	add_default_til("armv12");
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	set_selector(0X1,0);
	set_selector(0X2,0);
	set_selector(0X3,0);
	set_selector(0X4,0);
	set_selector(0X5,0);
	set_selector(0X6,0);
	set_selector(0X7,0);
	set_selector(0X8,0);
	set_selector(0X9,0);
	set_selector(0XA,0);
	;
	add_segm_ex(0X8008000,0X8015500,0X3,1,8,2,ADDSEG_NOSREG);
	SegRename(0X8008000,".text");
	SegClass (0X8008000,"CODE");
	SegDefReg(0x8008000,"T",0x0);
	SegDefReg(0x8008000,"DS",0x4);
	set_segm_type(0X8008000,2);
	add_segm_ex(0X8015500,0X801BD84,0X4,1,8,2,ADDSEG_NOSREG);
	SegRename(0X8015500,".data");
	SegClass (0X8015500,"DATA");
	SegDefReg(0x8015500,"T",0x0);
	SegDefReg(0x8015500,"DS",0x4);
	set_segm_type(0X8015500,3);
	add_segm_ex(0X1FFFF700,0X20005100,0X5,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X1FFFF700,".bss");
	SegClass (0X1FFFF700,"BSS");
	SegDefReg(0x1FFFF700,"T",0x0);
	SegDefReg(0x1FFFF700,"DS",0x4);
	set_segm_type(0X1FFFF700,9);
	add_segm_ex(0X40000000,0X40006700,0XA,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X40000000,".bss2");
	SegClass (0X40000000,"BSS");
	SegDefReg(0x40000000,"T",0x0);
	SegDefReg(0x40000000,"DS",0x4);
	set_segm_type(0X40000000,9);
	add_segm_ex(0X40010000,0X40015500,0X9,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X40010000,".bss3");
	SegClass (0X40010000,"BSS");
	SegDefReg(0x40010000,"T",0x0);
	SegDefReg(0x40010000,"DS",0x4);
	set_segm_type(0X40010000,9);
	add_segm_ex(0X40020000,0X40022200,0X8,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X40020000,".bss4");
	SegClass (0X40020000,"BSS");
	SegDefReg(0x40020000,"T",0x0);
	SegDefReg(0x40020000,"DS",0x4);
	set_segm_type(0X40020000,9);
	add_segm_ex(0X42200000,0X42200100,0X7,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X42200000,".bss5");
	SegClass (0X42200000,"BSS");
	SegDefReg(0x42200000,"T",0x0);
	SegDefReg(0x42200000,"DS",0x4);
	set_segm_type(0X42200000,9);
	add_segm_ex(0X42420000,0X42420500,0X6,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X42420000,".bss6");
	SegClass (0X42420000,"BSS");
	SegDefReg(0x42420000,"T",0x0);
	SegDefReg(0x42420000,"DS",0x4);
	set_segm_type(0X42420000,9);
	add_segm_ex(0XA0001020,0XA0001028,0X1,1,5,2,ADDSEG_NOSREG);
	SegRename(0XA0001020,"EXIDX");
	SegClass (0XA0001020,"DATA");
	SegDefReg(0xA0001020,"T",0x0);
	SegDefReg(0xA0001020,"DS",0x4);
	set_segm_type(0XA0001020,3);
	set_inf_attr(INF_LOW_OFF, 0x8008000);
	set_inf_attr(INF_HIGH_OFF, 0x42420500);
}

static Enums_0(id) {

	id = add_enum(-1,"BoardVersion",0x1100000);
	add_enum_member(id,"BOARD_VER_0",	0,	-1);
	add_enum_member(id,"BOARD_VER_1",	0X1,	-1);
	add_enum_member(id,"BOARD_VER_AD_2",	0X2,	-1);
	add_enum_member(id,"BOARD_VER_3",	0X3,	-1);
	add_enum_member(id,"BOARD_VER_AD_4",	0X4,	-1);
	add_enum_member(id,"BOARD_VER_AD_5",	0X5,	-1);
	add_enum_member(id,"BOARD_VER_AR_6",	0X6,	-1);
	add_enum_member(id,"BOARD_VER_AR_7",	0X7,	-1);
	id = add_enum(-1,"SPI_AD9363_REG_DEFINES",0x1100000);
	add_enum_member(id,"AD9363_REG_SPI_CONF",	0,	-1);
	add_enum_member(id,"AD9363_REG_MULTICHIP_SYNC_AND_TX_MON_CTRL",	0X1,	-1);
	add_enum_member(id,"AD9363_REG_TX_ENABLE_FILTER_CTRL",	0X2,	-1);
	add_enum_member(id,"AD9363_REG_RX_ENABLE_FILTER_CTRL",	0X3,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_SELECT",	0X4,	-1);
	add_enum_member(id,"AD9363_REG_RFPLL_DIVIDERS",	0X5,	-1);
	add_enum_member(id,"AD9363_REG_RX_CLOCK_DATA_DELAY",	0X6,	-1);
	add_enum_member(id,"AD9363_REG_TX_CLOCK_DATA_DELAY",	0X7,	-1);
	add_enum_member(id,"AD9363_REG_CLOCK_ENABLE",	0X9,	-1);
	add_enum_member(id,"AD9363_REG_BBPLL",	0XA,	-1);
	add_enum_member(id,"AD9363_REG_TEMP_OFFSET",	0XB,	-1);
	add_enum_member(id,"AD9363_REG_START_TEMP_READING",	0XC,	-1);
	add_enum_member(id,"AD9363_REG_TEMP_SENSE2",	0XD,	-1);
	add_enum_member(id,"AD9363_REG_TEMPERATURE",	0XE,	-1);
	add_enum_member(id,"AD9363_REG_TEMP_SENSOR_CONFIG",	0XF,	-1);
	add_enum_member(id,"AD9363_REG_PARALLEL_PORT_CONF_1",	0X10,	-1);
	add_enum_member(id,"AD9363_REG_PARALLEL_PORT_CONF_2",	0X11,	-1);
	add_enum_member(id,"AD9363_REG_PARALLEL_PORT_CONF_3",	0X12,	-1);
	add_enum_member(id,"AD9363_REG_ENSM_MODE",	0X13,	-1);
	add_enum_member(id,"AD9363_REG_ENSM_CONFIG_1",	0X14,	-1);
	add_enum_member(id,"AD9363_REG_ENSM_CONFIG_2",	0X15,	-1);
	add_enum_member(id,"AD9363_REG_CALIBRATION_CTRL",	0X16,	-1);
	add_enum_member(id,"AD9363_REG_STATE",	0X17,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_1_WORD",	0X18,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_2_WORD",	0X19,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_1_CONFIG",	0X1A,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_2_CONFIG",	0X1B,	-1);
	add_enum_member(id,"AD9363_REG_AUXADC_CLOCK_DIVIDER",	0X1C,	-1);
	add_enum_member(id,"AD9363_REG_AUXADC_CONFIG",	0X1D,	-1);
	add_enum_member(id,"AD9363_REG_AUXADC_WORD_MSB",	0X1E,	-1);
	add_enum_member(id,"AD9363_REG_AUXADC_LSB",	0X1F,	-1);
	add_enum_member(id,"AD9363_REG_AUTO_GPO",	0X20,	-1);
	add_enum_member(id,"AD9363_REG_AGC_GAIN_LOCK_DELAY",	0X21,	-1);
	add_enum_member(id,"AD9363_REG_AGC_ATTACK_DELAY",	0X22,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_ENABLE_CTRL",	0X23,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOAD_SYNTH_DELAY",	0X24,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOAD_SYNTH_DELAY",	0X25,	-1);
	add_enum_member(id,"AD9363_REG_EXTERNAL_LNA_CTRL",	0X26,	-1);
	add_enum_member(id,"AD9363_REG_GPO_FORCE_AND_INIT",	0X27,	-1);
	add_enum_member(id,"AD9363_REG_GPO0_RX_DELAY",	0X28,	-1);
	add_enum_member(id,"AD9363_REG_GPO1_RX_DELAY",	0X29,	-1);
	add_enum_member(id,"AD9363_REG_GPO2_RX_DELAY",	0X2A,	-1);
	add_enum_member(id,"AD9363_REG_GPO3_RX_DELAY",	0X2B,	-1);
	add_enum_member(id,"AD9363_REG_GPO0_TX_DELAY",	0X2C,	-1);
	add_enum_member(id,"AD9363_REG_GPO1_TX_DELAY",	0X2D,	-1);
	add_enum_member(id,"AD9363_REG_GPO2_TX_DELAY",	0X2E,	-1);
	add_enum_member(id,"AD9363_REG_GPO3_TX_DELAY",	0X2F,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC1_RX_DELAY",	0X30,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC1_TX_DELAY",	0X31,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC2_RX_DELAY",	0X32,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC2_TX_DELAY",	0X33,	-1);
	add_enum_member(id,"AD9363_REG_CTRL_OUTPUT_POINTER",	0X35,	-1);
	add_enum_member(id,"AD9363_REG_CTRL_OUTPUT_ENABLE",	0X36,	-1);
	add_enum_member(id,"AD9363_REG_PRODUCT_ID",	0X37,	-1);
	add_enum_member(id,"AD9363_REG_REFERENCE_CLOCK_CYCLES",	0X3A,	-1);
	add_enum_member(id,"AD9363_REG_DIGITAL_IO_CTRL",	0X3B,	-1);
	add_enum_member(id,"AD9363_REG_LVDS_BIAS_CTRL",	0X3C,	-1);
	add_enum_member(id,"AD9363_REG_LVDS_INVERT_CTRL1",	0X3D,	-1);
	add_enum_member(id,"AD9363_REG_LVDS_INVERT_CTRL2",	0X3E,	-1);
	add_enum_member(id,"AD9363_REG_SDM_CTRL_1",	0X3F,	-1);
	add_enum_member(id,"AD9363_REG_FRACT_BB_FREQ_WORD_1",	0X41,	-1);
	add_enum_member(id,"AD9363_REG_FRACT_BB_FREQ_WORD_2",	0X42,	-1);
	add_enum_member(id,"AD9363_REG_FRACT_BB_FREQ_WORD_3",	0X43,	-1);
	add_enum_member(id,"AD9363_REG_INTEGER_BB_FREQ_WORD",	0X44,	-1);
	add_enum_member(id,"AD9363_REG_CLOCK_CTRL",	0X45,	-1);
	add_enum_member(id,"AD9363_REG_CP_CURRENT",	0X46,	-1);
	add_enum_member(id,"AD9363_REG_CP_BLEED_CURRENT",	0X47,	-1);
	add_enum_member(id,"AD9363_REG_LOOP_FILTER_1",	0X48,	-1);
	add_enum_member(id,"AD9363_REG_LOOP_FILTER_2",	0X49,	-1);
	add_enum_member(id,"AD9363_REG_LOOP_FILTER_3",	0X4A,	-1);
	add_enum_member(id,"AD9363_REG_VCO_CTRL",	0X4B,	-1);
	add_enum_member(id,"AD9363_REG_VCO_PROGRAM_1",	0X4C,	-1);
	add_enum_member(id,"AD9363_REG_VCO_PROGRAM_2",	0X4D,	-1);
	add_enum_member(id,"AD9363_REG_SDM_CTRL",	0X4E,	-1);
	add_enum_member(id,"AD9363_REG_UNKNOWN_50",	0X50,	-1);
	add_enum_member(id,"AD9363_REG_RX_ANALOG_POWER_DOWN_OVERRIDE_1",	0X52,	-1);
	add_enum_member(id,"AD9363_REG_RX_ANALOG_POWER_DOWN_OVERRIDE_2",	0X53,	-1);
	add_enum_member(id,"AD9363_REG_RX1_ADC_POWER_DOWN_OVERRIDE",	0X54,	-1);
	add_enum_member(id,"AD9363_REG_RX2_ADC_POWER_DOWN_OVERRIDE",	0X55,	-1);
	add_enum_member(id,"AD9363_REG_TX_ANALOG_POWER_DOWN_OVERRIDE_1",	0X56,	-1);
	add_enum_member(id,"AD9363_REG_ANALOG_POWER_DOWN_OVERRIDE",	0X57,	-1);
	add_enum_member(id,"AD9363_REG_MISC_POWER_DOWN_OVERRIDE",	0X58,	-1);
	add_enum_member(id,"AD9363_REG_UNKNOWN_5C",	0X5C,	-1);
	add_enum_member(id,"AD9363_REG_CH_1_OVERFLOW",	0X5E,	-1);
	add_enum_member(id,"AD9363_REG_CH_2_OVERFLOW",	0X5F,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_ADDR",	0X60,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_WRITE_DATA_1",	0X61,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_WRITE_DATA_2",	0X62,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_READ_DATA_1",	0X63,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_READ_DATA_2",	0X64,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_CONF",	0X65,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_LOW_GAIN",	0X67,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_HIGH_GAIN",	0X68,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_DELAY",	0X69,	-1);
	add_enum_member(id,"AD9363_REG_TX_LEVEL_THRESH",	0X6A,	-1);
	add_enum_member(id,"AD9363_REG_TX_RSSI1",	0X6B,	-1);
	add_enum_member(id,"AD9363_REG_TX_RSSI2",	0X6C,	-1);
	add_enum_member(id,"AD9363_REG_TX_RSSI_LSB",	0X6D,	-1);
	add_enum_member(id,"AD9363_REG_TPM_MODE_ENABLE",	0X6E,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_TEMP_GAIN_COEF",	0X6F,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_1_CONFIG",	0X70,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_2_CONFIG",	0X71,	-1);
	add_enum_member(id,"AD9363_REG_TX1_ATTEN_0",	0X73,	-1);
	add_enum_member(id,"AD9363_REG_TX1_ATTEN_1",	0X74,	-1);
	add_enum_member(id,"AD9363_REG_TX2_ATTEN_0",	0X75,	-1);
	add_enum_member(id,"AD9363_REG_TX2_ATTEN_1",	0X76,	-1);
	add_enum_member(id,"AD9363_REG_TX_ATTEN_OFFSET",	0X77,	-1);
	add_enum_member(id,"AD9363_REG_TX_ATTEN_THRESH",	0X78,	-1);
	add_enum_member(id,"AD9363_REG_TX1_DIG_ATTEN",	0X79,	-1);
	add_enum_member(id,"AD9363_REG_TX2_DIG_ATTEN",	0X7C,	-1);
	add_enum_member(id,"AD9363_REG_TX1_SYMBOL_ATTEN",	0X7F,	-1);
	add_enum_member(id,"AD9363_REG_TX2_SYMBOL_ATTEN",	0X80,	-1);
	add_enum_member(id,"AD9363_REG_TX_SYMBOL_ATTEN_CONFIG",	0X81,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_1_PHASE_CORR",	0X8E,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_1_GAIN_CORR",	0X8F,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_1_PHASE_CORR",	0X90,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_1_GAIN_CORR",	0X91,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_1_OFFSET_I",	0X92,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_1_OFFSET_Q",	0X93,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_1_OFFSET_I",	0X94,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_1_OFFSET_Q",	0X95,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_2_PHASE_CORR",	0X96,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_2_GAIN_CORR",	0X97,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_2_PHASE_CORR",	0X98,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_2_GAIN_CORR",	0X99,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_2_OFFSET_I",	0X9A,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_2_OFFSET_Q",	0X9B,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_2_OFFSET_I",	0X9C,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_2_OFFSET_Q",	0X9D,	-1);
	add_enum_member(id,"AD9363_REG_TX_FORCE_BITS",	0X9F,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_NCO_FREQ_PHASE_OFFSET",	0XA0,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_CTRL",	0XA1,	-1);
	add_enum_member(id,"AD9363_REG_KEXP_1",	0XA2,	-1);
	add_enum_member(id,"AD9363_REG_KEXP_2",	0XA3,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_SETTLE_COUNT",	0XA4,	-1);
	add_enum_member(id,"AD9363_REG_MAG_FTEST_THRESH",	0XA5,	-1);
	add_enum_member(id,"AD9363_REG_MAG_FTEST_THRESH_2",	0XA6,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_STATUS_TX1",	0XA7,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_STATUS_TX2",	0XA8,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_COUNT",	0XA9,	-1);
	add_enum_member(id,"AD9363_REG_TX_QUAD_FULL_LMT_GAIN",	0XAA,	-1);
	add_enum_member(id,"AD9363_REG_SQUARER_CONFIG",	0XAB,	-1);
	add_enum_member(id,"AD9363_REG_TX_QUAD_CAL_ATTEN",	0XAC,	-1);
	add_enum_member(id,"AD9363_REG_THRESH_ACCUM",	0XAD,	-1);
	add_enum_member(id,"AD9363_REG_TX_QUAD_LPF_GAIN",	0XAE,	-1);
	add_enum_member(id,"AD9363_REG_TXDAC_VDS_I",	0XB0,	-1);
	add_enum_member(id,"AD9363_REG_TXDAC_VDS_Q",	0XB1,	-1);
	add_enum_member(id,"AD9363_REG_TXDAC_GN_I",	0XB2,	-1);
	add_enum_member(id,"AD9363_REG_TXDAC_GN_Q",	0XB3,	-1);
	add_enum_member(id,"AD9363_REG_TXBBF_OPAMP_A",	0XC0,	-1);
	add_enum_member(id,"AD9363_REG_TXBBF_OPAMP_B",	0XC1,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R1",	0XC2,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R2",	0XC3,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R3",	0XC4,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R4",	0XC5,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_RP",	0XC6,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_C1",	0XC7,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_C2",	0XC8,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_CP",	0XC9,	-1);
	add_enum_member(id,"AD9363_REG_TX_TUNE_CTRL",	0XCA,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R2B",	0XCB,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_TUNE",	0XCC,	-1);
	add_enum_member(id,"AD9363_REG_CONFIG0",	0XD0,	-1);
	add_enum_member(id,"AD9363_REG_RESISTOR",	0XD1,	-1);
	add_enum_member(id,"AD9363_REG_CAPACITOR",	0XD2,	-1);
	add_enum_member(id,"AD9363_REG_LO_CM",	0XD3,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_TUNE_DIVIDER",	0XD6,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_TUNE_MODE",	0XD7,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_ADDR",	0XF0,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_DATA_1",	0XF1,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_DATA_2",	0XF2,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_READ_DATA_1",	0XF3,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_READ_DATA_2",	0XF4,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_CONFIG",	0XF5,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_GAIN",	0XF6,	-1);
	add_enum_member(id,"AD9363_REG_AGC_CONFIG_1",	0XFA,	-1);
	add_enum_member(id,"AD9363_REG_AGC_CONFIG_2",	0XFB,	-1);
	add_enum_member(id,"AD9363_REG_AGC_CONFIG_3",	0XFC,	-1);
	add_enum_member(id,"AD9363_REG_MAX_LMT_FULL_GAIN",	0XFD,	-1);
	add_enum_member(id,"AD9363_REG_PEAK_WAIT_TIME",	0XFE,	-1);
	add_enum_member(id,"AD9363_REG_DIGITAL_GAIN",	0X100,	-1);
	add_enum_member(id,"AD9363_REG_AGC_LOCK_LEVEL",	0X101,	-1);
	add_enum_member(id,"AD9363_REG_ADC_NOISE_CORRECTION_FACTOR",	0X102,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_STP_CONFIG1",	0X103,	-1);
	add_enum_member(id,"AD9363_REG_ADC_SMALL_OVERLOAD_THRESH",	0X104,	-1);
	add_enum_member(id,"AD9363_REG_ADC_LARGE_OVERLOAD_THRESH",	0X105,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_STP_CONFIG_2",	0X106,	-1);
	add_enum_member(id,"AD9363_REG_SMALL_LMT_OVERLOAD_THRESH",	0X107,	-1);
	add_enum_member(id,"AD9363_REG_LARGE_LMT_OVERLOAD_THRESH",	0X108,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MANUAL_LMT_FULL_GAIN",	0X109,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MANUAL_LPF_GAIN",	0X10A,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MANUAL_DIGITALFORCED_GAIN",	0X10B,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MANUAL_LMT_FULL_GAIN",	0X10C,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MANUAL_LPF_GAIN",	0X10D,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MANUAL_DIGITALFORCED_GAIN",	0X10E,	-1);
	add_enum_member(id,"AD9363_REG_FAST_CONFIG_1",	0X110,	-1);
	add_enum_member(id,"AD9363_REG_FAST_CONFIG_2_SETTLING_DELAY",	0X111,	-1);
	add_enum_member(id,"AD9363_REG_FAST_ENERGY_LOST_THRESH",	0X112,	-1);
	add_enum_member(id,"AD9363_REG_FAST_STRONGER_SIGNAL_THRESH",	0X113,	-1);
	add_enum_member(id,"AD9363_REG_FAST_LOW_POWER_THRESH",	0X114,	-1);
	add_enum_member(id,"AD9363_REG_FAST_STRONG_SIGNAL_FREEZE",	0X115,	-1);
	add_enum_member(id,"AD9363_REG_FAST_FINAL_OVER_RANGE_AND_OPT_GAIN",	0X116,	-1);
	add_enum_member(id,"AD9363_REG_FAST_ENERGY_DETECT_COUNT",	0X117,	-1);
	add_enum_member(id,"AD9363_REG_FAST_AGCLL_UPPER_LIMIT",	0X118,	-1);
	add_enum_member(id,"AD9363_REG_FAST_GAIN_LOCK_EXIT_COUNT",	0X119,	-1);
	add_enum_member(id,"AD9363_REG_FAST_INITIAL_LMT_GAIN_LIMIT",	0X11A,	-1);
	add_enum_member(id,"AD9363_REG_FAST_INCREMENT_TIME",	0X11B,	-1);
	add_enum_member(id,"AD9363_REG_AGC_INNER_LOW_THRESH",	0X120,	-1);
	add_enum_member(id,"AD9363_REG_LMT_OVERLOAD_COUNTERS",	0X121,	-1);
	add_enum_member(id,"AD9363_REG_ADC_OVERLOAD_COUNTERS",	0X122,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_STP1",	0X123,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_UPDATE_COUNTER1",	0X124,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_UPDATE_COUNTER2",	0X125,	-1);
	add_enum_member(id,"AD9363_REG_DIGITAL_SAT_COUNTER",	0X128,	-1);
	add_enum_member(id,"AD9363_REG_OUTER_POWER_THRESHS",	0X129,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_STP_2",	0X12A,	-1);
	add_enum_member(id,"AD9363_REG_EXT_LNA_HIGH_GAIN",	0X12C,	-1);
	add_enum_member(id,"AD9363_REG_EXT_LNA_LOW_GAIN",	0X12D,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_ADDRESS",	0X130,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_WRITE_DATA1",	0X131,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_WRITE_DATA2",	0X132,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_WRITE_DATA3",	0X133,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_READ_DATA1",	0X134,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_READ_DATA2",	0X135,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_READ_DATA3",	0X136,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_CONFIG",	0X137,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_ADDRESS",	0X138,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_GAIN_WRITE",	0X139,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_BIAS_WRITE",	0X13A,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_CTRL_WRITE",	0X13B,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_GAIN_READ",	0X13C,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_BIAS_READ",	0X13D,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_CTRL_READ",	0X13E,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_CONFIG",	0X13F,	-1);
	add_enum_member(id,"AD9363_REG_WORD_ADDRESS",	0X140,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_DIFF_WORDERROR_WRITE",	0X141,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_ERROR_READ",	0X142,	-1);
	add_enum_member(id,"AD9363_REG_CONFIG",	0X143,	-1);
	add_enum_member(id,"AD9363_REG_LNA_GAIN_DIFF_READ_BACK",	0X144,	-1);
	add_enum_member(id,"AD9363_REG_MAX_MIXER_CALIBRATION_GAIN_INDEX",	0X145,	-1);
	add_enum_member(id,"AD9363_REG_TEMP_GAIN_COEF",	0X146,	-1);
	add_enum_member(id,"AD9363_REG_SETTLE_TIME",	0X147,	-1);
	add_enum_member(id,"AD9363_REG_MEASURE_DURATION",	0X148,	-1);
	add_enum_member(id,"AD9363_REG_CAL_TEMP_SENSOR_WORD",	0X149,	-1);
	add_enum_member(id,"AD9363_REG_MEASURE_DURATION_01",	0X150,	-1);
	add_enum_member(id,"AD9363_REG_MEASURE_DURATION_23",	0X151,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WEIGHT_0",	0X152,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WEIGHT_1",	0X153,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WEIGHT_2",	0X154,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WEIGHT_3",	0X155,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_DELAY",	0X156,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WAIT_TIME",	0X157,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_CONFIG",	0X158,	-1);
	add_enum_member(id,"AD9363_REG_ADC_MEASURE_DURATION_01",	0X159,	-1);
	add_enum_member(id,"AD9363_REG_ADC_WEIGHT_0",	0X15A,	-1);
	add_enum_member(id,"AD9363_REG_ADC_WEIGHT_1",	0X15B,	-1);
	add_enum_member(id,"AD9363_REG_DEC_POWER_MEASURE_DURATION_0",	0X15C,	-1);
	add_enum_member(id,"AD9363_REG_LNA_GAIN",	0X15D,	-1);
	add_enum_member(id,"AD9363_REG_CH1_ADC_POWER",	0X160,	-1);
	add_enum_member(id,"AD9363_REG_CH1_RX_FILTER_POWER",	0X161,	-1);
	add_enum_member(id,"AD9363_REG_CH2_ADC_POWER",	0X162,	-1);
	add_enum_member(id,"AD9363_REG_CH2_RX_FILTER_POWER",	0X163,	-1);
	add_enum_member(id,"AD9363_REG_RX_QUAD_CAL_LEVEL",	0X168,	-1);
	add_enum_member(id,"AD9363_REG_CALIBRATION_CONFIG_1",	0X169,	-1);
	add_enum_member(id,"AD9363_REG_CALIBRATION_CONFIG_2",	0X16A,	-1);
	add_enum_member(id,"AD9363_REG_CALIBRATION_CONFIG_3",	0X16B,	-1);
	add_enum_member(id,"AD9363_REG_CALIB_COUNT",	0X16C,	-1);
	add_enum_member(id,"AD9363_REG_RX_QUAD_GAIN1",	0X16E,	-1);
	add_enum_member(id,"AD9363_REG_RX_QUAD_GAIN2",	0X16F,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_A_PHASE_CORR",	0X170,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_A_GAIN_CORR",	0X171,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_A_PHASE_CORR",	0X172,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_A_GAIN_CORR",	0X173,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_A_Q_OFFSET",	0X174,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_A_OFFSETS",	0X175,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_OFFSETS_1",	0X176,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_A_OFFSETS",	0X177,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_A_I_OFFSET",	0X178,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_BC_PHASE_CORR",	0X179,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_BC_GAIN_CORR",	0X17A,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_BC_PHASE_CORR",	0X17B,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_BC_GAIN_CORR",	0X17C,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_BC_Q_OFFSET",	0X17D,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_BC_OFFSETS",	0X17E,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_BC_OFFSETS_1",	0X17F,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_BC_OFFSETS",	0X180,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_BC_I_OFFSET",	0X181,	-1);
	add_enum_member(id,"AD9363_REG_FORCE_BITS",	0X182,	-1);
	add_enum_member(id,"AD9363_REG_WAIT_COUNT",	0X185,	-1);
	add_enum_member(id,"AD9363_REG_RF_DC_OFFSET_COUNT",	0X186,	-1);
	add_enum_member(id,"AD9363_REG_RF_DC_OFFSET_CONFIG_1",	0X187,	-1);
	add_enum_member(id,"AD9363_REG_RF_DC_OFFSET_ATTEN",	0X188,	-1);
	add_enum_member(id,"AD9363_REG_INVERT_BITS",	0X189,	-1);
	add_enum_member(id,"AD9363_REG_DC_OFFSET_CONFIG2",	0X18B,	-1);
	add_enum_member(id,"AD9363_REG_RF_CAL_GAIN_INDEX",	0X18C,	-1);
	add_enum_member(id,"AD9363_REG_SOI_THRESH",	0X18D,	-1);
	add_enum_member(id,"AD9363_REG_BB_DC_OFFSET_SHIFT",	0X190,	-1);
	add_enum_member(id,"AD9363_REG_BB_DC_OFFSET_FAST_SETTLE_SHIFT",	0X191,	-1);
	add_enum_member(id,"AD9363_REG_BB_FAST_SETTLE_DUR",	0X192,	-1);
	add_enum_member(id,"AD9363_REG_BB_DC_OFFSET_COUNT",	0X193,	-1);
	add_enum_member(id,"AD9363_REG_BB_DC_OFFSET_ATTEN",	0X194,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BB_DC_WORD_I_MSB",	0X19A,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BB_DC_WORD_I_LSB",	0X19B,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BB_DC_WORD_Q_MSB",	0X19C,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BB_DC_WORD_Q_LSB",	0X19D,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BB_DC_WORD_I_MSB",	0X19E,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BB_DC_WORD_I_LSB",	0X19F,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BB_DC_WORD_Q_MSB",	0X1A0,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BB_DC_WORD_Q_LSB",	0X1A1,	-1);
	add_enum_member(id,"AD9363_REG_BB_TRACK_CORR_WORD_I_MSB",	0X1A2,	-1);
	add_enum_member(id,"AD9363_REG_BB_TRACK_CORR_WORD_I_LSB",	0X1A3,	-1);
	add_enum_member(id,"AD9363_REG_BB_TRACK_CORR_WORD_Q_MSB",	0X1A4,	-1);
	add_enum_member(id,"AD9363_REG_BB_TRACK_CORR_WORD_Q_LSB",	0X1A5,	-1);
	add_enum_member(id,"AD9363_REG_RX1_RSSI_SYMBOL",	0X1A7,	-1);
	add_enum_member(id,"AD9363_REG_RX1_RSSI_PREAMBLE",	0X1A8,	-1);
	add_enum_member(id,"AD9363_REG_RX2_RSSI_SYMBOL",	0X1A9,	-1);
	add_enum_member(id,"AD9363_REG_RX2_RSSI_PREAMBLE",	0X1AA,	-1);
	add_enum_member(id,"AD9363_REG_SYMBOL_LSB",	0X1AB,	-1);
	add_enum_member(id,"AD9363_REG_PREAMBLE_LSB",	0X1AC,	-1);
	add_enum_member(id,"AD9363_REG_RX_PATH_GAIN_MSB",	0X1AD,	-1);
	add_enum_member(id,"AD9363_REG_RX_PATH_GAIN_LSB",	0X1AE,	-1);
	add_enum_member(id,"AD9363_REG_RX_DIFF_LNA_FORCE",	0X1B0,	-1);
	add_enum_member(id,"AD9363_REG_RX_LNA_BIAS_COARSE",	0X1B1,	-1);
	add_enum_member(id,"AD9363_REG_RX_LNA_BIAS_FINE_0",	0X1B2,	-1);
	add_enum_member(id,"AD9363_REG_RX_LNA_BIAS_FINE_1",	0X1B3,	-1);
	add_enum_member(id,"AD9363_REG_RX_MIX_GM_CONFIG",	0X1C0,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MIX_GM_FORCE",	0X1C1,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MIX_GM_BIAS_FORCE",	0X1C2,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MIX_GM_FORCE",	0X1C3,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MIX_GM_BIAS_FORCE",	0X1C4,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_MSBS",	0X1C8,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_RX1_I",	0X1C9,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_RX1_Q",	0X1CA,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_RX2_I",	0X1CB,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_RX2_Q",	0X1CC,	-1);
	add_enum_member(id,"AD9363_REG_INPUTS_BC_RX1_I",	0X1CD,	-1);
	add_enum_member(id,"AD9363_REG_BAND1_RX1_Q",	0X1CE,	-1);
	add_enum_member(id,"AD9363_REG_INPUTS_BC_RX2_I",	0X1CF,	-1);
	add_enum_member(id,"AD9363_REG_INPUTS_BC_RX2_Q",	0X1D0,	-1);
	add_enum_member(id,"AD9363_REG_INPUTS_BC_MSBS",	0X1D1,	-1);
	add_enum_member(id,"AD9363_REG_FORCE_OS_DAC",	0X1D2,	-1);
	add_enum_member(id,"AD9363_REG_RX_MIX_LO_CM",	0X1D5,	-1);
	add_enum_member(id,"AD9363_REG_RX_CGB_SEG_ENABLE",	0X1D6,	-1);
	add_enum_member(id,"AD9363_REG_RX_MIX_INPUTBIAS",	0X1D7,	-1);
	add_enum_member(id,"AD9363_REG_RX_TIA_CONFIG",	0X1DB,	-1);
	add_enum_member(id,"AD9363_REG_TIA1_C_LSB",	0X1DC,	-1);
	add_enum_member(id,"AD9363_REG_TIA1_C_MSB",	0X1DD,	-1);
	add_enum_member(id,"AD9363_REG_TIA2_C_LSB",	0X1DE,	-1);
	add_enum_member(id,"AD9363_REG_TIA2_C_MSB",	0X1DF,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BBF_R1A",	0X1E0,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BBF_R1A",	0X1E1,	-1);
	add_enum_member(id,"AD9363_REG_RX1_TUNE_CTRL",	0X1E2,	-1);
	add_enum_member(id,"AD9363_REG_RX2_TUNE_CTRL",	0X1E3,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BBF_R5",	0X1E4,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BBF_R5",	0X1E5,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_R2346",	0X1E6,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C1_MSB",	0X1E7,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C1_LSB",	0X1E8,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C2_MSB",	0X1E9,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C2_LSB",	0X1EA,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C3_MSB",	0X1EB,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C3_LSB",	0X1EC,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_CC1_CTR",	0X1ED,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_POW_RZ_BYTE0",	0X1EE,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_CC2_CTR",	0X1EF,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_POW_RZ_BYTE1",	0X1F0,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_CC3_CTR",	0X1F1,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_R5_TUNE",	0X1F2,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_TUNE",	0X1F3,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BBF_MAN_GAIN",	0X1F4,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BBF_MAN_GAIN",	0X1F5,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_TUNE_DIVIDE",	0X1F8,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_TUNE_CONFIG",	0X1F9,	-1);
	add_enum_member(id,"AD9363_REG_POLE_GAIN",	0X1FA,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBBW_MHZ",	0X1FB,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBBW_KHZ",	0X1FC,	-1);
	add_enum_member(id,"AD9363_REG_FB_DAC_CLK_DELAY1",	0X201,	-1);
	add_enum_member(id,"AD9363_REG_FB_DAC_CLK_DELAY2",	0X202,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_SAMPLE_CLK_DELAY_3P",	0X203,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_SAMPLE_CLK_DELAY_3N",	0X204,	-1);
	add_enum_member(id,"AD9363_REG_TEST_MUX_2I",	0X205,	-1);
	add_enum_member(id,"AD9363_REG_TEST_MUX_2Q",	0X206,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_1_RESISTANCE",	0X207,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_1_CAPACITANCE",	0X208,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_23_RESISTANCE",	0X209,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_2_RESISTANCE",	0X20A,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_2_CAPACITANCE",	0X20B,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_3_RESISTANCE",	0X20C,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_3_CAPACITANCE",	0X20D,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_AMP_CC",	0X20E,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_FB_DAC_NMOS_CURRENT_SOURCE",	0X20F,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_FB_DAC_NMOS_CASOADE_BIAS_CURRENT",	0X210,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_FB_DAC_PMOS_CURRENT_SOURCE",	0X211,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_FB_DAC_NMOS_CURRENT_SOURCE",	0X212,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_FB_DAC_NMOS_CASCODE_BIAS_CURRENT",	0X213,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_FB_DAC_PMOS_CURRENT_SOURCE",	0X214,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_FB_DAC_NMOS_CURRENT_SOURCE",	0X215,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_FB_DAC_NMOS_CASCODE_BIAS_CURRENT",	0X216,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_FB_DAC_PMOS_CURRENT_SOURCE",	0X217,	-1);
	add_enum_member(id,"AD9363_REG_FB_DAC_BIAS_CURRENT",	0X218,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_1ST_STAGE_CURRENT",	0X219,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_1ST_STAGE_CASCODE_CURRENT",	0X21A,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_2ND_STAGE_CURRENT",	0X21B,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_2_1ST_STAGE_CURRENT",	0X21C,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_1ST_STAGE_CASCODE_CURRENT",	0X21D,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_2ND_STAGE_CURRENT",	0X21E,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_1ST_STAGE_CURRENT",	0X21F,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_1ST_STAGE_CASCODE_CURRENT",	0X220,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_2ND_STAGE_CURRENT",	0X221,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_BIAS_CURRENT",	0X222,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_LADDER_BIAS",	0X223,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_LADDER_BIAS2",	0X225,	-1);
	add_enum_member(id,"AD9363_REG_RESET",	0X226,	-1);
	add_enum_member(id,"AD9363_REG_RX_PFD_CONFIG",	0X230,	-1);
	add_enum_member(id,"AD9363_REG_RX_INTEGER_BYTE_0",	0X231,	-1);
	add_enum_member(id,"AD9363_REG_RX_INTEGER_BYTE_1",	0X232,	-1);
	add_enum_member(id,"AD9363_REG_RX_FRACT_BYTE_0",	0X233,	-1);
	add_enum_member(id,"AD9363_REG_RX_FRACT_BYTE_1",	0X234,	-1);
	add_enum_member(id,"AD9363_REG_RX_FRACT_BYTE_2",	0X235,	-1);
	add_enum_member(id,"AD9363_REG_RX_FORCE_ALC",	0X236,	-1);
	add_enum_member(id,"AD9363_REG_RX_FORCE_VCO_TUNE_0",	0X237,	-1);
	add_enum_member(id,"AD9363_REG_RX_FORCE_VCO_TUNE_1",	0X238,	-1);
	add_enum_member(id,"AD9363_REG_RX_ALC_VARACTOR",	0X239,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_OUTPUT",	0X23A,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_CURRENT",	0X23B,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_OFFSET",	0X23C,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_CONFIG",	0X23D,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOOP_FILTER_1",	0X23E,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOOP_FILTER_2",	0X23F,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOOP_FILTER_3",	0X240,	-1);
	add_enum_member(id,"AD9363_REG_RX_DITHERCP_CAL",	0X241,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_BIAS_1",	0X242,	-1);
	add_enum_member(id,"AD9363_REG_RX_CAL_STATUS",	0X244,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_CAL_REF",	0X245,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_PD_OVERRIDES",	0X246,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_OVERRANGE_VCO_LOCK",	0X247,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_LDO",	0X248,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_CAL",	0X249,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOCK_DETECT_CONFIG",	0X24A,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_LEVEL_DETECT",	0X24B,	-1);
	add_enum_member(id,"AD9363_REG_RX_DSM_SETUP_0",	0X24C,	-1);
	add_enum_member(id,"AD9363_REG_RX_DSM_SETUP_1",	0X24D,	-1);
	add_enum_member(id,"AD9363_REG_RX_CORRECTION_WORD0",	0X24E,	-1);
	add_enum_member(id,"AD9363_REG_RX_CORRECTION_WORD1",	0X24F,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_VARACTOR_CTRL_0",	0X250,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_VARACTOR_CTRL_1",	0X251,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_SETUP",	0X25A,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_SETUP_INIT_DELAY",	0X25B,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_PROGRAM_ADDR",	0X25C,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_PROGRAM_DATA",	0X25D,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_PROGRAM_READ",	0X25E,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_PROGRAM_CTRL",	0X25F,	-1);
	add_enum_member(id,"AD9363_REG_RX_LO_GEN_POWER_MODE",	0X261,	-1);
	add_enum_member(id,"AD9363_REG_TX_PFD_CONFIG",	0X270,	-1);
	add_enum_member(id,"AD9363_REG_TX_INTEGER_BYTE_0",	0X271,	-1);
	add_enum_member(id,"AD9363_REG_TX_INTEGER_BYTE_1",	0X272,	-1);
	add_enum_member(id,"AD9363_REG_TX_FRACT_BYTE_0",	0X273,	-1);
	add_enum_member(id,"AD9363_REG_TX_FRACT_BYTE_1",	0X274,	-1);
	add_enum_member(id,"AD9363_REG_TX_FRACT_BYTE_2",	0X275,	-1);
	add_enum_member(id,"AD9363_REG_TX_FORCE_ALC",	0X276,	-1);
	add_enum_member(id,"AD9363_REG_TX_FORCE_VCO_TUNE_0",	0X277,	-1);
	add_enum_member(id,"AD9363_REG_TX_FORCE_VCO_TUNE_1",	0X278,	-1);
	add_enum_member(id,"AD9363_REG_TX_ALCVARACT_OR",	0X279,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_OUTPUT",	0X27A,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_CURRENT",	0X27B,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_OFFSET",	0X27C,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_CONFIG",	0X27D,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOOP_FILTER_1",	0X27E,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOOP_FILTER_2",	0X27F,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOOP_FILTER_3",	0X280,	-1);
	add_enum_member(id,"AD9363_REG_TX_DITHERCP_CAL",	0X281,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_BIAS_1",	0X282,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_BIAS_2",	0X283,	-1);
	add_enum_member(id,"AD9363_REG_TX_CAL_STATUS",	0X284,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_CAL_REF",	0X285,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_PD_OVERRIDES",	0X286,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_OVERRANGE_VCO_LOCK",	0X287,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_LDO",	0X288,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_CAL",	0X289,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOCK_DETECT_CONFIG",	0X28A,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_LEVEL_DETECT",	0X28B,	-1);
	add_enum_member(id,"AD9363_REG_TX_DSM_SETUP_0",	0X28C,	-1);
	add_enum_member(id,"AD9363_REG_TX_DSM_SETUP_1",	0X28D,	-1);
	add_enum_member(id,"AD9363_REG_TX_CORRECTION_WORD0",	0X28E,	-1);
	add_enum_member(id,"AD9363_REG_TX_CORRECTION_WORD1",	0X28F,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_VARACTOR_CTRL_0",	0X290,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_VARACTOR_CTRL_1",	0X291,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_COARSE_TUNE",	0X292,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_FINE_TUNE_HIGH",	0X293,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_FINE_TUNE_LOW",	0X294,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_CONFIG",	0X295,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_TEMPCO_WRITE",	0X296,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_TEMPCO_READ",	0X297,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_TEMPCO_ADDR",	0X298,	-1);
	add_enum_member(id,"AD9363_REG_DELTA_T_READ",	0X299,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_SETUP",	0X29A,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_SETUP_INIT_DELAY",	0X29B,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_PROGRAM_ADDR",	0X29C,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_PROGRAM_DATA",	0X29D,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_PROGRAM_READ",	0X29E,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_PROGRAM_CTRL",	0X29F,	-1);
	add_enum_member(id,"AD9363_REG_TX_LO_GEN_POWER_MODE",	0X2A1,	-1);
	add_enum_member(id,"AD9363_REG_BANDGAP_CONFIG0",	0X2A6,	-1);
	add_enum_member(id,"AD9363_REG_BANDGAP_CONFIG1",	0X2A8,	-1);
	add_enum_member(id,"AD9363_REG_REF_DIVIDE_CONFIG_1",	0X2AB,	-1);
	add_enum_member(id,"AD9363_REG_REF_DIVIDE_CONFIG_2",	0X2AC,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_RX1",	0X2B0,	-1);
	add_enum_member(id,"AD9363_REG_LPF_GAIN_RX1",	0X2B1,	-1);
	add_enum_member(id,"AD9363_REG_DIG_GAIN_RX1",	0X2B2,	-1);
	add_enum_member(id,"AD9363_REG_FAST_ATTACK_STATE",	0X2B3,	-1);
	add_enum_member(id,"AD9363_REG_SLOW_LOOP_STATE",	0X2B4,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_RX2",	0X2B5,	-1);
	add_enum_member(id,"AD9363_REG_LPF_GAIN_RX2",	0X2B6,	-1);
	add_enum_member(id,"AD9363_REG_DIG_GAIN_RX2",	0X2B7,	-1);
	add_enum_member(id,"AD9363_REG_OVRG_SIGS_RX1",	0X2B8,	-1);
	add_enum_member(id,"AD9363_REG_OVRG_SIGS_RX2",	0X2B9,	-1);
	add_enum_member(id,"AD9363_REG_CTRL",	0X3DF,	-1);
	add_enum_member(id,"AD9363_REG_BIST_CONFIG",	0X3F4,	-1);
	add_enum_member(id,"AD9363_REG_OBSERVE_CONFIG",	0X3F5,	-1);
	add_enum_member(id,"AD9363_REG_BIST_AND_DATA_PORT_TEST_CONFIG",	0X3F6,	-1);
	add_enum_member(id,"AD9363_REG_DAC_TEST_0",	0X3FC,	-1);
	add_enum_member(id,"AD9363_REG_DAC_TEST_1",	0X3FD,	-1);
	add_enum_member(id,"AD9363_REG_DAC_TEST_2",	0X3FE,	-1);
	id = add_enum(-1,"SPI_AR9003_REG_DEFINES",0x1100000);
	add_enum_member(id,"AR8003_REG_UNKN_2A",	0X2A,	-1);
	add_enum_member(id,"AR8003_REG_UNKN_42",	0X42,	-1);
	add_enum_member(id,"AR8003_REG_TX1_ATTEN_0",	0X54,	-1);
	add_enum_member(id,"AR8003_REG_TX2_ATTEN_0",	0X5C,	-1);
	add_enum_member(id,"AR8003_REG_UNKN_6A",	0X6A,	-1);
	add_enum_member(id,"AR8003_REG_STATE_FLAGS",	0X7C,	-1);
	id = add_enum(-1,"SPI_FPGA_REG_DEFINES",0x1100000);
	add_enum_member(id,"FPGA_REG_UNKN_00",	0,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_01",	0X1,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_02",	0X2,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_04",	0X4,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_05",	0X5,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_06",	0X6,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_07",	0X7,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_08",	0X8,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_09",	0X9,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_10",	0X10,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_12",	0X12,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_20",	0X20,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_23",	0X23,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_8B",	0X8B,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_8C",	0X8C,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_8D",	0X8D,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_8E",	0X8E,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_90",	0X90,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_91",	0X91,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_92",	0X92,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_93",	0X93,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_94",	0X94,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_95",	0X95,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_96",	0X96,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_97",	0X97,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_98",	0X98,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_99",	0X99,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_9A",	0X9A,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_9B",	0X9B,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_9E",	0X9E,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_9F",	0X9F,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A0",	0XA0,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A1",	0XA1,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A3",	0XA3,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A5",	0XA5,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A6",	0XA6,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A7",	0XA7,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A8",	0XA8,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A9",	0XA9,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AA",	0XAA,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AB",	0XAB,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AC",	0XAC,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AD",	0XAD,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AE",	0XAE,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B0",	0XB0,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B1",	0XB1,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B2",	0XB2,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B3",	0XB3,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B4",	0XB4,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B8",	0XB8,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B9",	0XB9,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_BA",	0XBA,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_BB",	0XBB,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_BC",	0XBC,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_BD",	0XBD,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_CE",	0XCE,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_E9",	0XE9,	-1);
	id = add_enum(-1,"SPI_AR9001_REG_DEFINES",0x1100000);
	add_enum_member(id,"AR8001_REG_UNKN_00",	0,	-1);
	add_enum_member(id,"AR8001_REG_UNKN_01",	0X1,	-1);
	add_enum_member(id,"AR8001_REG_UNKN_CE",	0XCE,	-1);
	id = add_enum(-1,"OFDM_TCX_STATE_FLAGS",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"OFDM_FPGA_BOOT_ERR",	0X1,	0x1);
	add_enum_member(id,"OFDM_FPGA_CONFIG_ERR",	0X2,	0x2);
	add_enum_member(id,"OFDM_EXEC_FAIL_1_ERR",	0X4,	0x4);
	add_enum_member(id,"OFDM_EXEC_FAIL_2_ERR",	0X8,	0x8);
	add_enum_member(id,"OFDM_VER_MISMATCH_ERR",	0X20,	0x20);
	add_enum_member(id,"OFDM_TCX_REGISTER_ERR",	0X40,	0x40);
	add_enum_member(id,"OFDM_RECEIVED_DATA_CRC_FAIL",	0X400,	0x400);
	add_enum_member(id,"OFDM_RECEIVED_DATA_SEQ_FAIL",	0X800,	0x800);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
	id = Enums_0(id);
        end_type_updating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = get_struc_id("DjiPacketHead");
	id = get_struc_id("DjiPacket");
	id = get_struc_id("PktPayloadS03Caa");
	id = get_struc_id("UnknStruct01");
	SetType(get_member_id(id, 0x0), "struct DjiPacket *");
	SetType(get_member_id(id, 0x4), "bool (__cdecl *)(uint8_t *)");
	id = get_struc_id("DjiPacketS09C12");
	SetType(get_member_id(id, 0x0), "struct DjiPacketHead");
	SetType(get_member_id(id, 0xB), "uint8_t");
	SetType(get_member_id(id, 0xC), "uint8_t");
	SetType(get_member_id(id, 0xD), "uint8_t");
	SetType(get_member_id(id, 0xE), "uint8_t");
	id = get_struc_id("UnknStruct02");
	SetType(get_member_id(id, 0x0), "void (__cdecl *)(uint8_t *)");
	id = get_struc_id("OFDMPacketExecCallback");
	SetType(get_member_id(id, 0x0), "void (__cdecl *)(uint8_t *)");
	SetType(get_member_id(id, 0x6), "uint8_t");
	SetType(get_member_id(id, 0x7), "uint8_t");
	id = get_struc_id("PktPayloadOsdHome");
	SetType(get_member_id(id, 0x0), "double");
	SetType(get_member_id(id, 0x8), "double");
	SetType(get_member_id(id, 0x10), "float");
	id = get_struc_id("OfdmInitInstr");
	id = get_struc_id("USART_TypeDef");
	id = get_struc_id("USART_InitTypeDef");
	id = get_struc_id("SPI_TypeDef");
	id = get_struc_id("PktPayloadOsdGeneral");
	SetType(get_member_id(id, 0x0), "double");
	SetType(get_member_id(id, 0x8), "double");
	id = get_struc_id("PktPayloadS09C00");
	id = get_struc_id("DjiPckt0C");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
}

static Structures_0(id) {
        auto mid;

	id = add_struc(-1,"DjiPacketHead",0);
	id = add_struc(-1,"DjiPacket",0);
	id = add_struc(-1,"PktPayloadS03Caa",0);
	id = add_struc(-1,"UnknStruct01",0);
	id = add_struc(-1,"DjiPacketS09C12",0);
	id = add_struc(-1,"UnknStruct02",0);
	id = add_struc(-1,"OFDMPacketExecCallback",0);
	id = add_struc(-1,"PktPayloadOsdHome",0);
	id = add_struc(-1,"OfdmInitInstr",0);
	id = add_struc(-1,"USART_TypeDef",0);
	id = add_struc(-1,"USART_InitTypeDef",0);
	id = add_struc(-1,"SPI_TypeDef",0);
	id = add_struc(-1,"PktPayloadOsdGeneral",0);
	id = add_struc(-1,"PktPayloadS09C00",0);
	id = add_struc(-1,"DjiPckt0C",0);
	
	id = get_struc_id("DjiPacket");
	mid = add_struc_member(id,"delimiter",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"protover_length",	0X1,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"hdr_crc",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"sender",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"receiver",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"seqctr",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ack",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmdset",	0X9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmd",	0XA,	0x000400,	-1,	1);
	mid = add_struc_member(id,"payload",	0XB,	0x000400,	-1,	1);
	
	id = get_struc_id("PktPayloadS03Caa");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	23);
	mid = add_struc_member(id,"field_17",	0X17,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_18",	0X18,	0x000400,	-1,	1);
	
	id = get_struc_id("UnknStruct01");
	mid = add_struc_member(id,"pkt",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"callback",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_8",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"pkt_len",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_C",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_E",	0XE,	0x10000400,	-1,	2);
	
	id = get_struc_id("DjiPacketHead");
	mid = add_struc_member(id,"delimiter",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"protover_length",	0X1,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"hdr_crc",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"sender",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"receiver",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"seqctr",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ack",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmdset",	0X9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmd",	0XA,	0x000400,	-1,	1);
	
	id = get_struc_id("DjiPacketS09C12");
	mid = add_struc_member(id,"head",	0,	0x60000400,	get_struc_id("DjiPacketHead"),	11);
	mid = add_struc_member(id,"field_B",	0XB,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_C",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_D",	0XD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_E",	0XE,	0x000400,	-1,	1);
	
	id = get_struc_id("UnknStruct02");
	mid = add_struc_member(id,"func",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	
	id = get_struc_id("OFDMPacketExecCallback");
	mid = add_struc_member(id,"func",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"receiver",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"recv_flg",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmdset",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmd",	0X7,	0x000400,	-1,	1);
	
	id = get_struc_id("PktPayloadOsdHome");
	mid = add_struc_member(id,"lon",	0,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"lat",	0X8,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"alt",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"home_state",	0X14,	0x000400,	-1,	1);
	
	id = get_struc_id("OfdmInitInstr");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3",	0X3,	0x000400,	-1,	1);
	
	id = get_struc_id("USART_TypeDef");
	mid = add_struc_member(id,"SR",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED0",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"DR",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED1",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"BRR",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED2",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"CR1",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED3",	0XE,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"CR2",	0X10,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED4",	0X12,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"CR3",	0X14,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED5",	0X16,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"GTPR",	0X18,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED6",	0X1A,	0x10000400,	-1,	2);
	
	id = get_struc_id("USART_InitTypeDef");
	mid = add_struc_member(id,"USART_BaudRate",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"USART_WordLength",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"USART_StopBits",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"USART_Parity",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"USART_Mode",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"USART_HardwareFlowControl",	0XC,	0x10000400,	-1,	2);
	
	id = get_struc_id("SPI_TypeDef");
	mid = add_struc_member(id,"CR1",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED0",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"CR2",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED1",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"SR",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED2",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"DR",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED3",	0XE,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"CRCPR",	0X10,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED4",	0X12,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RXCRCR",	0X14,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED5",	0X16,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"TXCRCR",	0X18,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED6",	0X1A,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"I2SCFGR",	0X1C,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED7",	0X1E,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"I2SPR",	0X20,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED8",	0X22,	0x10000400,	-1,	2);
	
	id = get_struc_id("PktPayloadOsdGeneral");
	mid = add_struc_member(id,"longtitude",	0,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"latitude",	0X8,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"relative_height",	0X10,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"vgx",	0X12,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"vgy",	0X14,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"vgz",	0X16,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"pitch",	0X18,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"roll",	0X1A,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"yaw",	0X1C,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ctrl_info",	0X1E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"latest_cmd",	0X1F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"controller_state",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"gps_nums",	0X24,	0x000400,	-1,	1);
	mid = add_struc_member(id,"gohome_landing_reason",	0X25,	0x000400,	-1,	1);
	mid = add_struc_member(id,"start_fail_state",	0X26,	0x000400,	-1,	1);
	mid = add_struc_member(id,"controller_state_ext",	0X27,	0x000400,	-1,	1);
	mid = add_struc_member(id,"batt_remain",	0X28,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ultrasonic_height",	0X29,	0x000400,	-1,	1);
	mid = add_struc_member(id,"motor_startup_time",	0X2A,	0x10000400,	-1,	2);
	
	id = get_struc_id("PktPayloadS09C00");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	32);
	mid = add_struc_member(id,"field_20",	0X20,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_21",	0X21,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_22",	0X22,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_26",	0X26,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_27",	0X27,	0x000400,	-1,	6);
	mid = add_struc_member(id,"field_2D",	0X2D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2E",	0X2E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2F",	0X2F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_30",	0X30,	0x000400,	-1,	3);
	mid = add_struc_member(id,"field_33",	0X33,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_34",	0X34,	0x000400,	-1,	7);
	mid = add_struc_member(id,"field_3B",	0X3B,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3C",	0X3C,	0x000400,	-1,	2);
	mid = add_struc_member(id,"field_3E",	0X3E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3F",	0X3F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_40",	0X40,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_41",	0X41,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_42",	0X42,	0x000400,	-1,	1);
	
	id = get_struc_id("DjiPckt0C");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1",	0X1,	0x000400,	-1,	14);
	mid = add_struc_member(id,"crc",	0XF,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_11",	0X11,	0x000400,	-1,	34);
	mid = add_struc_member(id,"seqno",	0X33,	0x20000400,	-1,	4);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
	id = Structures_0(id);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	update_extra_cmt		(0X8008000,	E_PREV + 0,	"; File Name   : P3X_FW_V01.07.0060_m0900.elf");
	update_extra_cmt		(0X8008000,	E_PREV + 1,	"; Format      : ELF for ARM (Executable)");
	update_extra_cmt		(0X8008000,	E_PREV + 2,	"; Imagebase   : 8008000");
	update_extra_cmt		(0X8008000,	E_PREV + 3,	"; ");
	update_extra_cmt		(0X8008000,	E_PREV + 4,	"; Options     : EF_ARM_VFP_FLOAT");
	update_extra_cmt		(0X8008000,	E_PREV + 5,	"; EABI version: 5");
	update_extra_cmt		(0X8008000,	E_PREV + 6,	"; ");
	create_dword	(x=0X8008000);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008004);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008008);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800800C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008010);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008014);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008018);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X80080EC);
	create_insn	(0X80080F0);
	create_insn	(x=0X80080F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800810A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008112);
	op_hex		(x,	1);
	create_insn	(x=0X800811A);
	op_hex		(x,	1);
	create_insn	(0X8008120);
	create_insn	(x=0X8008132);
	op_hex		(x,	1);
	create_insn	(x=0X8008154);
	op_hex		(x,	1);
	create_insn	(0X8008170);
	make_array	(0X8008182,	0X2);
	create_insn	(0X8008184);
	create_insn	(0X80081A0);
	create_insn	(0X80081A4);
	create_insn	(0X80081A8);
	create_word	(0X80081B6);
	create_dword	(0X80081B8);
	make_array	(0X80081B8,	0X4);
	create_insn	(x=0X80081C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X80081C8,	"init_sub_80081C8");
	create_insn	(x=0X80081CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80081D0);
	create_insn	(0X80081D2);
	create_insn	(0X80081D4);
	create_insn	(0X80081D6);
	create_insn	(0X80081D8);
	create_insn	(0X80081DA);
	create_insn	(0X80081DC);
	create_insn	(0X80081DE);
	create_insn	(0X80081E0);
	create_insn	(0X80081E2);
	create_insn	(x=0X80081E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80081E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80081E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80081EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X80081EE,	0X2);
	create_dword	(x=0X80081F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80081F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80081F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80081FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008200);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008204);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8008208);
	create_insn	(0X8008212);
	create_insn	(x=0X8008222);
	op_hex		(x,	1);
	create_insn	(x=0X8008248);
	op_hex		(x,	1);
	create_insn	(0X8008262);
	create_insn	(x=0X8008264);
	op_hex		(x,	1);
	create_insn	(x=0X8008278);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8008286);
	create_insn	(0X8008298);
	create_insn	(0X80082A8);
	create_insn	(x=0X80082B0);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X80082B2);
	op_hex		(x,	1);
	create_insn	(x=0X80082BA);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(0X80082BE);
	create_insn	(x=0X80082C2);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X80082C4);
	op_hex		(x,	1);
	create_insn	(x=0X80082CC);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_dword	(0X80082D0);
	create_dword	(x=0X80082D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X80082D8);
	create_dword	(0X80082DC);
	create_dword	(x=0X80082E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X80082E4);
	create_insn	(x=0X80082E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008300);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008318);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8008332);
	create_insn	(x=0X8008364);
	op_hex		(x,	1);
	create_insn	(0X8008378);
	create_insn	(0X800838A);
	create_insn	(x=0X800838E);
	op_hex		(x,	1);
	create_insn	(0X8008396);
	create_insn	(x=0X8008398);
	op_hex		(x,	1);
	create_insn	(0X80083A0);
	create_insn	(x=0X80083A4);
	op_hex		(x,	1);
	create_insn	(0X80083AC);
	create_insn	(x=0X80083AE);
	op_hex		(x,	1);
	create_insn	(0X80083B6);
	create_insn	(0X80083C6);
	create_insn	(0X80083CE);
	create_insn	(x=0X80083D0);
	op_hex		(x,	1);
	create_insn	(0X80083D8);
	create_insn	(x=0X80083DE);
	op_hex		(x,	1);
	create_insn	(0X80083E8);
	create_insn	(0X80083EC);
	create_insn	(x=0X80083EE);
	op_hex		(x,	1);
	create_insn	(0X80083F6);
	create_insn	(x=0X80083FC);
	op_hex		(x,	1);
	create_insn	(0X8008406);
	create_insn	(0X800840A);
	create_insn	(x=0X800840E);
	op_hex		(x,	1);
	create_insn	(0X8008416);
	create_insn	(x=0X8008418);
	op_hex		(x,	1);
	create_insn	(0X8008420);
	create_insn	(x=0X8008426);
	op_hex		(x,	1);
	create_insn	(0X8008430);
	create_insn	(0X8008434);
	create_insn	(x=0X800843E);
	op_hex		(x,	1);
	create_insn	(0X800844C);
	create_insn	(x=0X8008450);
	op_hex		(x,	1);
	create_insn	(0X8008458);
	create_insn	(x=0X800845A);
	op_hex		(x,	1);
	create_insn	(0X8008462);
	create_insn	(0X8008494);
	create_insn	(0X80084D2);
	create_insn	(0X80084F6);
	create_insn	(0X800851A);
	create_insn	(x=0X800851E);
	op_hex		(x,	1);
	create_insn	(0X8008526);
	create_insn	(x=0X8008528);
	op_hex		(x,	1);
	create_insn	(0X8008530);
	create_insn	(x=0X8008538);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8008540);
	create_insn	(x=0X8008544);
	op_hex		(x,	1);
	create_insn	(0X800854C);
	create_insn	(x=0X800854E);
	op_hex		(x,	1);
	create_insn	(0X8008556);
	create_insn	(x=0X800855A);
	op_hex		(x,	1);
	create_insn	(0X8008562);
	create_insn	(x=0X8008564);
	op_hex		(x,	1);
	create_insn	(0X800856C);
	create_insn	(x=0X8008572);
	op_hex		(x,	1);
	create_insn	(0X800857C);
	create_insn	(x=0X8008580);
	op_hex		(x,	1);
	create_insn	(0X8008588);
	create_insn	(x=0X800858A);
	op_hex		(x,	1);
	create_insn	(0X8008592);
	create_insn	(x=0X8008596);
	op_hex		(x,	1);
	create_insn	(0X800859E);
	create_insn	(x=0X80085A0);
	op_hex		(x,	1);
	create_insn	(0X80085A8);
	create_insn	(x=0X80085AE);
	op_hex		(x,	1);
	create_insn	(0X80085B8);
	create_insn	(0X80085BC);
	create_insn	(0X80085F0);
	create_insn	(0X800863E);
	create_insn	(x=0X8008648);
	op_hex		(x,	1);
	create_insn	(0X8008656);
	create_insn	(0X800866A);
	create_insn	(0X8008686);
	create_insn	(0X8008696);
	create_insn	(0X800869C);
	create_insn	(x=0X80086A2);
	op_hex		(x,	1);
	create_insn	(0X80086AC);
	create_insn	(x=0X80086AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80086B4);
	op_hex		(x,	1);
	create_insn	(x=0X80086B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80086C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80086C6);
	op_hex		(x,	1);
	create_insn	(x=0X80086CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X80086D2,	0X2);
	create_dword	(x=0X80086D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80086D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80086DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X80086E0);
	create_dword	(0X80086E4);
	create_dword	(0X80086E8);
	create_insn	(0X80086EC);
	create_insn	(0X80086FA);
	create_insn	(0X80086FE);
	create_insn	(0X8008704);
	create_insn	(0X8008724);
	create_insn	(0X8008728);
	make_array	(0X8008732,	0X2);
	create_insn	(0X8008734);
	create_insn	(x=0X8008738);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8008752);
	create_insn	(0X8008766);
	create_insn	(x=0X8008770);
	op_hex		(x,	1);
	create_insn	(x=0X8008778);
	op_hex		(x,	1);
	create_insn	(0X8008780);
	create_insn	(x=0X8008784);
	op_hex		(x,	1);
	create_insn	(x=0X8008794);
	op_hex		(x,	1);
	create_insn	(0X800879E);
	create_insn	(x=0X80087A6);
	op_hex		(x,	1);
	create_insn	(0X80087AE);
	create_insn	(x=0X80087B0);
	op_hex		(x,	1);
	create_insn	(x=0X80087BE);
	op_hex		(x,	1);
	create_insn	(0X80087C6);
	create_insn	(x=0X80087C8);
	op_hex		(x,	1);
	create_insn	(x=0X80087D6);
	op_hex		(x,	1);
	create_insn	(0X80087DE);
	create_insn	(x=0X80087E0);
	op_hex		(x,	1);
	create_insn	(x=0X80087EE);
	op_hex		(x,	1);
	create_insn	(0X80087F6);
	create_insn	(x=0X80087F8);
	op_hex		(x,	1);
	create_insn	(x=0X8008806);
	op_hex		(x,	1);
	create_insn	(0X800880E);
	create_insn	(x=0X8008810);
	op_hex		(x,	1);
	create_insn	(x=0X800881E);
	op_hex		(x,	1);
	create_insn	(0X8008826);
	create_insn	(x=0X8008828);
	op_hex		(x,	1);
	create_insn	(x=0X800884E);
	op_hex		(x,	1);
	create_insn	(0X8008858);
	create_insn	(x=0X800885C);
	op_hex		(x,	1);
	create_insn	(x=0X800886C);
	op_hex		(x,	1);
	create_insn	(0X8008876);
	create_insn	(0X800887A);
	create_insn	(x=0X8008886);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800888A);
	op_hex		(x,	1);
	create_insn	(x=0X800888E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008892);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800889A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80088A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80088AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80088BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80088CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80088DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80088E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80088F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008906);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008916);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800891E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008926);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800892E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008938);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008940);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800894C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008954);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008960);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008968);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800896E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008972);
	op_hex		(x,	1);
	create_insn	(x=0X8008976);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800897C);
	create_insn	(x=0X800899C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80089A0);
	op_hex		(x,	1);
	create_insn	(x=0X80089A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80089B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80089C4);
	op_hex		(x,	1);
	create_insn	(0X80089CC);
	create_insn	(x=0X80089D0);
	op_hex		(x,	1);
	create_insn	(0X80089D8);
	create_insn	(x=0X80089DA);
	op_hex		(x,	1);
	create_insn	(0X80089E2);
	create_insn	(x=0X80089E6);
	op_hex		(x,	1);
	create_insn	(x=0X80089F2);
	op_hex		(x,	1);
	create_insn	(x=0X8008A02);
	op_hex		(x,	1);
	create_insn	(x=0X8008A12);
	op_hex		(x,	1);
	create_insn	(0X8008A1E);
	create_insn	(x=0X8008A20);
	op_hex		(x,	1);
	create_insn	(x=0X8008A2C);
	op_hex		(x,	1);
	create_insn	(x=0X8008A3C);
	op_hex		(x,	1);
	create_insn	(x=0X8008A4C);
	op_hex		(x,	1);
	create_insn	(0X8008A58);
	create_insn	(x=0X8008A60);
	op_hex		(x,	1);
	create_insn	(0X8008A6C);
	create_insn	(x=0X8008A6E);
	op_hex		(x,	1);
	create_insn	(0X8008A7C);
	create_insn	(x=0X8008A7E);
	op_hex		(x,	1);
	create_insn	(0X8008A8C);
	create_insn	(x=0X8008A9C);
	op_hex		(x,	1);
	create_insn	(0X8008ACE);
	create_insn	(x=0X8008AF2);
	op_hex		(x,	1);
	create_insn	(x=0X8008B02);
	op_hex		(x,	1);
	create_dword	(x=0X8008B34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008B38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8008B3C);
	create_insn	(x=0X8008B78);
	op_hex		(x,	1);
	create_insn	(0X8008B88);
	create_insn	(0X8008B9A);
	create_insn	(0X8008BA4);
	create_insn	(0X8008BAE);
	create_insn	(0X8008BB8);
	create_insn	(0X8008BD8);
	create_insn	(0X8008BEC);
	create_insn	(0X8008BF0);
	create_insn	(0X8008BF4);
	create_insn	(0X8008BF8);
	create_insn	(0X8008BFC);
	create_insn	(0X8008C00);
	create_insn	(0X8008C04);
	create_insn	(0X8008C08);
	create_insn	(0X8008C12);
	create_insn	(0X8008C1E);
	create_insn	(x=0X8008C20);
	op_hex		(x,	1);
	create_insn	(0X8008C28);
	create_insn	(x=0X8008C2A);
	op_hex		(x,	1);
	create_insn	(0X8008C32);
	create_insn	(x=0X8008C34);
	op_hex		(x,	1);
	create_insn	(0X8008C3C);
	create_insn	(0X8008C42);
	create_insn	(x=0X8008C4E);
	op_hex		(x,	1);
	create_insn	(0X8008C6E);
	create_insn	(x=0X8008C8C);
	op_hex		(x,	1);
	create_insn	(x=0X8008C9C);
	op_hex		(x,	1);
	create_insn	(x=0X8008D20);
	op_hex		(x,	1);
	create_insn	(0X8008D28);
	create_insn	(x=0X8008D2A);
	op_hex		(x,	1);
	create_insn	(0X8008D32);
	create_insn	(x=0X8008D36);
	op_hex		(x,	1);
	create_insn	(0X8008D3E);
	create_insn	(x=0X8008D40);
	op_hex		(x,	1);
	create_insn	(0X8008D48);
	create_insn	(x=0X8008D50);
	op_hex		(x,	1);
	create_insn	(0X8008D56);
	create_insn	(x=0X8008D5C);
	op_hex		(x,	1);
	create_insn	(0X8008D62);
	create_insn	(0X8008D66);
	create_insn	(x=0X8008D76);
	op_hex		(x,	1);
	create_insn	(x=0X8008D7A);
	op_hex		(x,	1);
	create_insn	(0X8008D82);
	create_insn	(x=0X8008D86);
	op_hex		(x,	1);
	create_insn	(x=0X8008D94);
	op_hex		(x,	1);
	create_insn	(0X8008DA0);
	create_insn	(0X8008DA4);
	create_insn	(x=0X8008DAA);
	op_hex		(x,	1);
	create_insn	(0X8008DB2);
	create_insn	(x=0X8008DB6);
	op_hex		(x,	1);
	create_insn	(x=0X8008DC2);
	op_hex		(x,	1);
	create_insn	(0X8008DCC);
	create_insn	(0X8008DD0);
	create_insn	(x=0X8008DD6);
	op_hex		(x,	1);
	create_insn	(x=0X8008DDA);
	op_hex		(x,	1);
	create_insn	(0X8008DE2);
	create_insn	(x=0X8008DE6);
	op_hex		(x,	1);
	create_insn	(x=0X8008DF4);
	op_hex		(x,	1);
	create_insn	(0X8008E00);
	create_insn	(0X8008E04);
	create_insn	(0X8008E08);
	create_insn	(x=0X8008E0E);
	op_hex		(x,	1);
	create_insn	(x=0X8008E12);
	op_hex		(x,	1);
	create_insn	(x=0X8008E1A);
	op_hex		(x,	1);
	create_insn	(0X8008E26);
	create_insn	(x=0X8008E30);
	op_hex		(x,	1);
	create_insn	(0X8008E38);
	create_insn	(x=0X8008E3C);
	op_hex		(x,	1);
	create_insn	(x=0X8008E4A);
	op_hex		(x,	1);
	create_insn	(0X8008E56);
	create_insn	(x=0X8008E5C);
	op_hex		(x,	1);
	create_insn	(0X8008E62);
	create_insn	(0X8008E6C);
	create_insn	(0X8008E78);
	create_insn	(0X8008E82);
	create_insn	(0X8008E8A);
	create_insn	(x=0X8008E90);
	op_hex		(x,	1);
	create_insn	(0X8008EA4);
	create_insn	(x=0X8008EA8);
	op_hex		(x,	1);
	create_insn	(0X8008EBC);
	create_insn	(x=0X8008EC0);
	op_hex		(x,	1);
	create_insn	(0X8008ED4);
	create_insn	(x=0X8008ED8);
	op_hex		(x,	1);
	create_insn	(0X8008EEC);
	create_insn	(0X8008EF0);
	create_insn	(0X8008EFE);
	create_insn	(0X8008F02);
	create_insn	(0X8008F10);
	create_insn	(x=0X8008F14);
	op_hex		(x,	1);
	create_insn	(x=0X8008F1E);
	op_hex		(x,	1);
	create_insn	(x=0X8008F28);
	op_hex		(x,	1);
	create_insn	(0X8008F32);
	create_insn	(0X8008F36);
	create_insn	(0X8008F42);
	create_insn	(0X8008F46);
	create_insn	(0X8008F70);
	make_array	(0X8008F7E,	0X2);
	create_dword	(0X8008F80);
	create_dword	(0X8008F84);
	create_dword	(0X8008F88);
	create_dword	(0X8008F8C);
	create_dword	(0X8008F90);
	create_dword	(0X8008F94);
	create_insn	(0X8008F98);
	create_insn	(0X8008FB4);
	create_insn	(0X8008FC2);
	create_insn	(0X8008FCE);
	create_insn	(0X8008FDA);
	create_insn	(0X8008FE6);
	create_insn	(0X8008FF2);
	create_insn	(0X8008FFE);
	create_insn	(0X800900A);
	create_insn	(0X8009016);
	create_insn	(0X8009022);
	create_insn	(0X800902E);
	create_insn	(0X800903A);
	create_insn	(0X800903C);
	create_insn	(0X8009048);
	create_insn	(0X8009054);
	create_insn	(0X8009056);
	create_insn	(0X8009062);
	create_insn	(0X800906E);
	create_insn	(0X8009074);
	create_insn	(0X800907A);
	create_insn	(0X8009096);
	create_insn	(0X80090A2);
	create_insn	(0X80090B8);
	create_insn	(0X80090C6);
	create_insn	(0X80090CC);
	create_insn	(0X80090D2);
	create_insn	(0X80090D8);
	create_insn	(0X80090DE);
	create_insn	(0X80090E4);
	create_insn	(0X80090EA);
	create_insn	(0X80090F0);
	create_insn	(0X80090F6);
	create_insn	(0X80090FC);
	create_insn	(0X8009102);
	create_insn	(0X800910C);
	create_insn	(0X8009116);
	create_dword	(0X800911C);
	create_insn	(0X8009120);
	create_insn	(x=0X8009134);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800913A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800913E);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X8009140);
	op_hex		(x,	1);
	create_insn	(x=0X8009144);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009148);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X800914C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009154);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009158);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X800915A);
	op_hex		(x,	1);
	create_insn	(x=0X800915E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009162);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X8009166);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800916E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009172);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X8009174);
	op_hex		(x,	1);
	create_insn	(x=0X8009178);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800917C);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X8009180);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009188);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800918C);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X800918E);
	op_hex		(x,	1);
	create_insn	(x=0X8009192);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009196);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X800919A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091A6);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X80091A8);
	op_hex		(x,	1);
	create_insn	(x=0X80091AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091B0);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X80091B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091C0);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X80091C2);
	op_hex		(x,	1);
	create_insn	(x=0X80091C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091CA);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X80091CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091DA);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X80091DC);
	op_hex		(x,	1);
	create_insn	(x=0X80091E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091E4);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X80091E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091F2);
	op_hex		(x,	1);
	create_insn	(x=0X80091FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009204);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800920A);
	op_hex		(x,	1);
	create_insn	(x=0X800920E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009216);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800921E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009224);
	op_hex		(x,	1);
	create_insn	(x=0X8009228);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009230);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009238);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800923E);
	op_hex		(x,	1);
	create_insn	(x=0X8009242);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800924A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009252);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009258);
	op_hex		(x,	1);
	create_insn	(x=0X800925C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009264);
	create_insn	(0X80092A0);
	create_insn	(0X80092BA);
	create_insn	(x=0X80092BE);
	op_hex		(x,	1);
	create_insn	(0X80092C6);
	create_insn	(0X80092D2);
	create_insn	(0X80092DC);
	create_insn	(0X80092E4);
	create_insn	(0X80092E8);
	create_insn	(0X80092F0);
	create_insn	(x=0X80092F6);
	op_hex		(x,	1);
	create_insn	(x=0X80092FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009304);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009312);
	create_insn	(x=0X8009316);
	op_hex		(x,	1);
	create_insn	(x=0X800931C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009324);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009328);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(0X800932C);
	create_insn	(x=0X8009332);
	op_hex		(x,	1);
	create_insn	(x=0X8009338);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009340);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800934E);
	create_insn	(x=0X8009352);
	op_hex		(x,	1);
	create_insn	(x=0X8009358);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009360);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009364);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_dword	(x=0X8009368);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800936C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8009370);
	create_insn	(x=0X8009372);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009384);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800938C);
	create_insn	(x=0X800938E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80093BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80093C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80093D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80093E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80093F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80093FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800940C);
	create_insn	(0X800941A);
	create_insn	(x=0X800942A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009432);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800943A);
	create_insn	(x=0X800943E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800944C);
	create_insn	(x=0X8009450);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009458);
	create_insn	(x=0X800945E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009466);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009476);
	create_insn	(x=0X800947A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X8009482,	0X2);
	create_dword	(x=0X8009484);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8009488);
	create_insn	(0X800948C);
	create_insn	(x=0X8009490);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009494);
	op_hex		(x,	1);
	create_insn	(x=0X800949E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80094A2);
	op_hex		(x,	1);
	create_insn	(x=0X80094A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80094B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80094B8);
	op_hex		(x,	1);
	create_insn	(x=0X80094BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80094CA);
	create_insn	(x=0X80094CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80094CE);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80094D2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80094D6);
	create_insn	(x=0X80094D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80094DA);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80094DE);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80094E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80094E4);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80094E6);
	op_hex		(x,	1);
	create_insn	(x=0X80094EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80094EC);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80094F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80094F2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80094F4);
	op_hex		(x,	1);
	create_insn	(x=0X80094F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80094FA);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80094FE);
	create_insn	(x=0X8009500);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009502);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009504);
	op_hex		(x,	1);
	create_insn	(x=0X800950E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009510);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009512);
	op_hex		(x,	1);
	create_insn	(x=0X800951C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800951E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009520);
	op_hex		(x,	1);
	create_insn	(0X800952A);
	create_insn	(0X800952E);
	create_insn	(0X800953C);
	create_insn	(0X8009554);
	create_insn	(x=0X8009568);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800956A);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800956C);
	op_hex		(x,	1);
	create_insn	(x=0X8009570);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009572);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009576);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009578);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800957A);
	op_hex		(x,	1);
	create_insn	(x=0X800957E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800958A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800958C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009594);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009596);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X800959C);
	create_insn	(x=0X80095AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80095B0);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80095B2);
	op_hex		(x,	1);
	create_insn	(x=0X80095B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80095B8);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80095BC);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80095BE);
	op_hex		(x,	1);
	create_insn	(x=0X80095C2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80095CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80095D0);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80095D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80095DA);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80095E0);
	create_insn	(0X80095EE);
	create_insn	(0X8009606);
	create_insn	(x=0X8009618);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800961A);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800961C);
	op_hex		(x,	1);
	create_insn	(x=0X8009620);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009622);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009626);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009628);
	op_hex		(x,	1);
	create_insn	(x=0X800962C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009638);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800963A);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009642);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009644);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X800964A);
	create_insn	(x=0X800964C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800964E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009650);
	op_hex		(x,	1);
	create_insn	(0X800965A);
	create_insn	(0X800965E);
	create_insn	(x=0X800967C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800967E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009682);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009686);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009688);
	op_hex		(x,	1);
	create_insn	(x=0X800968C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009690);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009692);
	op_hex		(x,	1);
	create_insn	(x=0X8009696);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80096A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80096A8);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80096B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80096B2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80096B6);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80096B8);
	op_hex		(x,	1);
	create_insn	(x=0X80096BC);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80096BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80096CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80096D0);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80096D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80096DA);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80096DE);
	create_insn	(x=0X80096E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80096E4);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80096EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80096EE);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80096F4);
	create_insn	(x=0X800970C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800970E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009710);
	op_hex		(x,	1);
	create_insn	(x=0X8009714);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009716);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009738);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800973A);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009742);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009744);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009748);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800974A);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009752);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009754);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X800975A);
	create_insn	(x=0X800976E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009770);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009772);
	op_hex		(x,	1);
	create_insn	(x=0X8009776);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009778);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009784);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009786);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800978E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009790);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X8009796);
	create_insn	(x=0X80097AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80097AE);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80097B2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80097B6);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80097B8);
	op_hex		(x,	1);
	create_insn	(x=0X80097BC);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80097CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80097CE);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80097D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80097D8);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80097DE);
	create_insn	(x=0X800980E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009810);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009814);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009818);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800981A);
	op_hex		(x,	1);
	create_insn	(x=0X800981E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009824);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800983A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009852);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800986C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009880);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009882);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_dword	(x=0X800988C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8009890);
	create_dword	(0X8009894);
	create_dword	(x=0X8009898);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800989C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800989E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80098A6);
	create_insn	(x=0X80098BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80098BE);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80098C2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80098C6);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80098C8);
	op_hex		(x,	1);
	create_insn	(x=0X80098CC);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80098D0);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80098D2);
	op_hex		(x,	1);
	create_insn	(x=0X80098D6);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80098E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80098E8);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80098F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80098F2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80098F6);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80098F8);
	op_hex		(x,	1);
	create_insn	(x=0X80098FC);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009902);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009908);
	create_insn	(x=0X800990A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800991C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800991E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009926);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009928);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X800992C);
	create_insn	(x=0X8009930);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009932);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800993A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800993C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X8009942);
	create_insn	(x=0X800994E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009950);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009954);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009962);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009964);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009966);
	op_hex		(x,	1);
	create_insn	(x=0X800996A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800996C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800996E);
	op_hex		(x,	1);
	create_insn	(x=0X8009976);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009988);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800998A);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009992);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009994);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800999A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800999C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80099A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80099A4);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80099A8);
	create_insn	(x=0X80099AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80099AE);
	op_hex		(x,	1);
	create_insn	(0X80099B8);
	create_insn	(0X80099BC);
	create_insn	(x=0X80099BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80099C0);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80099C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80099C6);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80099CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80099CC);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80099D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80099D2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80099D6);
	create_insn	(x=0X80099DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80099E0);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80099E2);
	op_hex		(x,	1);
	create_insn	(0X80099EC);
	create_insn	(x=0X80099F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80099F2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80099FC);
	create_insn	(x=0X8009A00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009A02);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X8009A06);
	create_insn	(x=0X8009A08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009A0A);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009A0C);
	op_hex		(x,	1);
	create_insn	(x=0X8009A16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009A18);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009A1A);
	op_hex		(x,	1);
	create_insn	(x=0X8009A24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009A26);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009A28);
	op_hex		(x,	1);
	create_insn	(0X8009A32);
	make_array	(0X8009A36,	0X2);
	create_dword	(x=0X8009A38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8009A3C);
	create_dword	(0X8009A40);
	create_dword	(x=0X8009A44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8009A48);
	create_insn	(x=0X8009A4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009A64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009A7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009A94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009AAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009AC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009ADC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009AF4);
	create_insn	(0X8009B08);
	create_insn	(x=0X8009B1E);
	op_hex		(x,	1);
	create_insn	(x=0X8009B26);
	op_hex		(x,	1);
	create_insn	(0X8009B44);
	create_insn	(0X8009B84);
	create_insn	(0X8009BB2);
	create_insn	(0X8009C1A);
	create_insn	(0X8009C2A);
	create_insn	(0X8009C38);
	create_insn	(0X8009C3C);
	create_insn	(0X8009C44);
	create_insn	(0X8009C52);
	create_insn	(0X8009C56);
	create_insn	(0X8009C5E);
	create_insn	(0X8009C62);
	create_insn	(0X8009C66);
	create_insn	(0X8009C6C);
	create_insn	(0X8009C70);
	create_insn	(0X8009C74);
	create_insn	(0X8009C86);
	create_insn	(x=0X8009C8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009C9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009CA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009CA2);
	op_plain_offset	(x,	1,	0X42200000);
	op_plain_offset	(x,	129,	0X42200000);
	create_insn	(0X8009CA6);
	create_insn	(x=0X8009CB2);
	op_hex		(x,	1);
	create_insn	(x=0X8009CBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009CBE);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X8009CC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009CC4);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X8009CCC);
	op_hex		(x,	1);
	create_insn	(x=0X8009CD6);
	op_hex		(x,	1);
	create_insn	(x=0X8009CDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009CDC);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X8009CDE);
	op_hex		(x,	1);
	create_insn	(x=0X8009CE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009CE4);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X8009CE8);
	op_hex		(x,	1);
	create_insn	(x=0X8009CFA);
	op_hex		(x,	1);
	create_insn	(0X8009D00);
	create_insn	(x=0X8009D0A);
	op_hex		(x,	1);
	create_insn	(x=0X8009D1A);
	op_hex		(x,	1);
	create_insn	(x=0X8009D24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009D26);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X8009D2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009D2C);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(0X8009D30);
	create_insn	(x=0X8009D3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009D4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009D66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009D72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X8009D78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009D7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009D80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009D84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009D88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009D8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009D90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009D94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009D98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009D9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X8009DA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009DA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009DA8);
	op_plain_offset	(x,	1,	0X40003000);
	op_plain_offset	(x,	129,	0X40003000);
	create_insn	(x=0X8009DAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009DAE);
	op_plain_offset	(x,	1,	0X40003000);
	op_plain_offset	(x,	129,	0X40003000);
	create_insn	(0X8009DB2);
	create_insn	(x=0X8009DB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009DBC);
	create_insn	(x=0X8009DC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009DC6);
	create_insn	(x=0X8009DCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009DCC);
	op_plain_offset	(x,	1,	0X40003000);
	op_plain_offset	(x,	129,	0X40003000);
	create_insn	(0X8009DD6);
	make_array	(0X8009DDA,	0X2);
	create_dword	(x=0X8009DDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X8009DE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009DE4);
	op_hex		(x,	1);
	create_insn	(x=0X8009DE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009DEE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009DF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009DF6);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009E00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009E08);
	op_hex		(x,	1);
	create_insn	(x=0X8009E10);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009E12);
	op_hex		(x,	1);
	create_insn	(x=0X8009E16);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009E1C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009E20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009E24);
	op_hex		(x,	1);
	create_insn	(x=0X8009E28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009E30);
	op_hex		(x,	1);
	create_insn	(x=0X8009E44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009E48);
	op_hex		(x,	1);
	create_insn	(x=0X8009E4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009E52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009E56);
	op_hex		(x,	1);
	create_insn	(x=0X8009E5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009E60);
	create_insn	(0X8009E66);
	create_insn	(x=0X8009E76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009E7C);
	create_insn	(x=0X8009E80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009E82);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009E86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009E88);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009E8A);
	op_hex		(x,	1);
	create_insn	(0X8009E9A);
	create_insn	(0X8009E9E);
	create_insn	(0X8009ED0);
	create_insn	(0X8009ED6);
	create_insn	(x=0X8009EDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009EDE);
	op_hex		(x,	1);
	create_insn	(x=0X8009EEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009EF0);
	create_insn	(x=0X8009EF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009EF6);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009EF8);
	op_hex		(x,	1);
	create_insn	(x=0X8009F02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F04);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F0A);
	op_plain_offset	(x,	1,	0X42420000);
	op_plain_offset	(x,	129,	0X42420000);
	create_insn	(0X8009F0E);
	create_insn	(x=0X8009F12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F14);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F16);
	op_hex		(x,	1);
	create_insn	(x=0X8009F1C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F22);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F24);
	op_hex		(x,	1);
	create_insn	(0X8009F2A);
	create_insn	(x=0X8009F2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F30);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F32);
	op_hex		(x,	1);
	create_insn	(x=0X8009F38);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X8009F3C);
	create_insn	(x=0X8009F40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F42);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F44);
	op_hex		(x,	1);
	create_insn	(x=0X8009F4A);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X8009F4E);
	create_insn	(x=0X8009F52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F54);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F56);
	op_hex		(x,	1);
	create_insn	(x=0X8009F5E);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X8009F62);
	create_insn	(x=0X8009F64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F66);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F6C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F72);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F78);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009F82);
	create_insn	(x=0X8009F86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F88);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F8A);
	op_hex		(x,	1);
	create_insn	(x=0X8009F90);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X8009F94);
	create_insn	(x=0X8009F96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F9C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X8009FAA);
	create_insn	(x=0X8009FAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009FB2);
	create_insn	(x=0X8009FB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009FBA);
	create_insn	(x=0X8009FC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009FC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009FC8);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009FCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009FCE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009FD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009FDA);
	create_insn	(x=0X8009FE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009FE6);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009FE8);
	op_hex		(x,	1);
	create_insn	(0X8009FF8);
	create_insn	(0X8009FFE);
	create_insn	(x=0X800A004);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A006);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A008);
	op_hex		(x,	1);
	create_insn	(x=0X800A00C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A00E);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A010);
	op_hex		(x,	1);
	create_insn	(x=0X800A024);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A026);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A028);
	op_hex		(x,	1);
	create_insn	(0X800A036);
	create_insn	(0X800A03E);
	create_insn	(x=0X800A046);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A048);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A04A);
	op_hex		(x,	1);
	create_insn	(x=0X800A050);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A05A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A05C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A05E);
	op_hex		(x,	1);
	create_insn	(x=0X800A06E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A070);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A072);
	op_hex		(x,	1);
	create_insn	(x=0X800A082);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A084);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A086);
	op_hex		(x,	1);
	create_insn	(x=0X800A08C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A09A);
	create_insn	(x=0X800A09C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A09E);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0A4);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0AA);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0B0);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X800A0B4);
	create_insn	(x=0X800A0B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0B8);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0BE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0C4);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0CA);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X800A0CE);
	create_insn	(x=0X800A0D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0D2);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0D8);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0DE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0E4);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X800A0E8);
	create_insn	(x=0X800A0EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0EC);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0F2);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0F8);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0FE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X800A102);
	create_insn	(x=0X800A104);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A106);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A10A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A10C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A110);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A112);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A116);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A118);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A11C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A124);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A126);
	op_plain_offset	(x,	1,	0X42420000);
	op_plain_offset	(x,	129,	0X42420000);
	create_insn	(x=0X800A12A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A12C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A130);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A132);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A134);
	op_hex		(x,	1);
	create_insn	(x=0X800A138);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A13A);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X800A13E);
	create_insn	(x=0X800A142);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A144);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X800A14E);
	create_insn	(x=0X800A152);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A154);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_dword	(x=0X800A158);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800A15C);
	create_dword	(0X800A160);
	create_dword	(x=0X800A164);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A168);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A16C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A170);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800A174);
	create_dword	(0X800A178);
	create_dword	(0X800A17C);
	create_dword	(0X800A180);
	create_dword	(x=0X800A184);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A188);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800A18C);
	create_insn	(x=0X800A190);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A1A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A1C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A1D8);
	create_insn	(x=0X800A1DE);
	op_hex		(x,	1);
	create_insn	(0X800A214);
	create_insn	(0X800A24C);
	create_insn	(0X800A256);
	create_insn	(x=0X800A25A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A262);
	create_insn	(0X800A28C);
	create_insn	(x=0X800A2AA);
	op_hex		(x,	1);
	create_insn	(x=0X800A2E4);
	op_hex		(x,	1);
	create_insn	(0X800A2F6);
	create_insn	(0X800A30E);
	create_insn	(0X800A322);
	create_insn	(x=0X800A326);
	op_hex		(x,	1);
	create_insn	(0X800A32E);
	create_insn	(0X800A33A);
	create_insn	(x=0X800A33E);
	op_hex		(x,	1);
	create_insn	(0X800A346);
	create_insn	(0X800A352);
	create_insn	(0X800A36A);
	create_insn	(0X800A372);
	create_insn	(0X800A37C);
	create_insn	(0X800A384);
	create_insn	(0X800A388);
	create_insn	(0X800A38E);
	create_insn	(x=0X800A398);
	op_hex		(x,	1);
	create_insn	(0X800A3A0);
	create_insn	(0X800A3AC);
	create_insn	(x=0X800A3B0);
	op_hex		(x,	1);
	create_insn	(0X800A3B8);
	create_insn	(0X800A3C4);
	create_insn	(0X800A3D6);
	create_insn	(x=0X800A3D8);
	op_hex		(x,	1);
	create_insn	(0X800A3E0);
	create_insn	(x=0X800A3E4);
	op_hex		(x,	1);
	create_insn	(0X800A3EC);
	create_insn	(0X800A3F8);
	create_insn	(0X800A404);
	create_insn	(0X800A408);
	create_insn	(0X800A40E);
	create_insn	(x=0X800A416);
	op_hex		(x,	1);
	create_insn	(0X800A41E);
	create_insn	(0X800A42A);
	create_insn	(0X800A438);
	create_insn	(0X800A43C);
	create_insn	(0X800A442);
	create_insn	(x=0X800A44E);
	op_hex		(x,	1);
	create_insn	(0X800A472);
	create_insn	(0X800A476);
	create_insn	(x=0X800A47A);
	op_hex		(x,	1);
	make_array	(0X800A48A,	0X2);
	create_dword	(x=0X800A48C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A490);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A494);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800A498);
	create_insn	(x=0X800A49C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A4B4);
	create_insn	(x=0X800A4CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A4E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A4FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A514);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A52C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A544);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A55C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A576);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A590);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A5AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A5C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A5DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A5F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A60C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A626);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A640);
	create_insn	(x=0X800A644);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A64A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A692);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A698);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A69E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A6A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A6AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A6BA);
	create_insn	(x=0X800A6EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A6F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A6F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A6FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A704);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A73E);
	create_insn	(x=0X800A784);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A78A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A7D8);
	create_insn	(x=0X800A81A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A820);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A86E);
	make_array	(0X800A896,	0X2);
	create_dword	(x=0X800A898);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A89C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800A8D8);
	create_insn	(x=0X800A8F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A8FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A924);
	create_insn	(0X800A93E);
	create_insn	(x=0X800A97C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A982);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A98E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A994);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A99A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A9A6);
	op_hex		(x,	1);
	create_insn	(0X800A9AE);
	create_insn	(x=0X800A9B4);
	op_hex		(x,	1);
	create_insn	(0X800A9C0);
	create_insn	(0X800A9D2);
	create_insn	(x=0X800AA08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AA0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AA32);
	op_hex		(x,	1);
	create_insn	(0X800AA3A);
	create_insn	(x=0X800AA40);
	op_hex		(x,	1);
	create_insn	(0X800AA4C);
	create_insn	(0X800AA66);
	create_insn	(x=0X800AAA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AAAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AACE);
	op_hex		(x,	1);
	create_insn	(0X800AAD6);
	create_insn	(x=0X800AADC);
	op_hex		(x,	1);
	create_insn	(0X800AAE8);
	create_insn	(0X800AAFA);
	create_insn	(x=0X800AB22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AB28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AB4C);
	op_hex		(x,	1);
	create_insn	(0X800AB54);
	create_insn	(x=0X800AB5A);
	op_hex		(x,	1);
	create_insn	(0X800AB66);
	create_insn	(x=0X800AB6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AB72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800AB92);
	create_insn	(0X800ABAE);
	create_insn	(0X800ABCA);
	create_insn	(0X800ABE6);
	create_insn	(0X800ABFC);
	create_insn	(0X800AC10);
	create_insn	(0X800AC1C);
	create_insn	(0X800AC4C);
	create_insn	(0X800AC78);
	create_insn	(0X800AC98);
	create_insn	(0X800ACAA);
	create_insn	(0X800ACBE);
	create_insn	(0X800ACD0);
	make_array	(0X800ACE2,	0X2);
	create_dword	(x=0X800ACE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800ACE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800ACEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800ACF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800ACF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800ACF8);
	create_insn	(x=0X800ACFC);
	op_hex		(x,	1);
	create_insn	(0X800AD04);
	create_insn	(0X800AD10);
	create_insn	(x=0X800AD16);
	op_hex		(x,	1);
	create_insn	(0X800AD20);
	create_insn	(0X800AD2E);
	create_insn	(0X800AD38);
	create_insn	(0X800AD40);
	create_insn	(0X800AD44);
	create_insn	(0X800AD4E);
	create_insn	(0X800AD58);
	create_insn	(0X800AD60);
	create_insn	(0X800AD6C);
	create_insn	(0X800AD7E);
	create_insn	(x=0X800AD8E);
	op_hex		(x,	1);
	create_insn	(0X800AD96);
	create_insn	(0X800ADB4);
	create_insn	(x=0X800ADCA);
	op_hex		(x,	1);
	create_insn	(0X800ADD4);
	create_insn	(0X800ADF0);
	create_insn	(x=0X800AE12);
	op_hex		(x,	1);
	create_insn	(x=0X800AE1C);
	op_hex		(x,	1);
	create_insn	(0X800AE26);
	create_insn	(x=0X800AE3E);
	op_hex		(x,	1);
	create_insn	(0X800AE46);
	create_insn	(0X800AE4C);
	create_insn	(0X800AE5E);
	create_insn	(0X800AEA0);
	create_insn	(0X800AEB2);
	create_insn	(0X800AECC);
	create_insn	(0X800AEDE);
	create_insn	(0X800AEF8);
	create_insn	(x=0X800AEFC);
	op_hex		(x,	1);
	create_insn	(0X800AF04);
	create_insn	(0X800AF10);
	create_insn	(x=0X800AF14);
	op_hex		(x,	1);
	create_insn	(0X800AF1C);
	create_insn	(0X800AF28);
	create_insn	(x=0X800AF2C);
	op_hex		(x,	1);
	create_insn	(0X800AF34);
	create_insn	(0X800AF40);
	create_insn	(x=0X800AF44);
	op_hex		(x,	1);
	create_insn	(0X800AF4C);
	create_insn	(0X800AF58);
	create_insn	(0X800AF6A);
	create_insn	(0X800AF84);
	create_insn	(0X800AF96);
	create_insn	(0X800AFB0);
	create_insn	(0X800AFC2);
	create_insn	(0X800AFDC);
	create_insn	(0X800AFEE);
	create_insn	(0X800B008);
	create_insn	(0X800B01A);
	create_insn	(0X800B032);
	create_insn	(0X800B044);
	create_insn	(0X800B05C);
	create_insn	(0X800B06E);
	create_insn	(0X800B080);
	create_insn	(0X800B09A);
	create_insn	(0X800B0B4);
	create_insn	(0X800B0CE);
	create_insn	(0X800B0E8);
	create_insn	(0X800B102);
	create_insn	(0X800B120);
	create_insn	(0X800B13E);
	create_insn	(x=0X800B162);
	op_hex		(x,	1);
	create_insn	(0X800B170);
	create_insn	(x=0X800B17A);
	op_hex		(x,	1);
	create_insn	(0X800B190);
	create_insn	(x=0X800B194);
	op_hex		(x,	1);
	create_insn	(0X800B19C);
	create_insn	(0X800B1A8);
	create_insn	(x=0X800B1AC);
	op_hex		(x,	1);
	create_insn	(0X800B1B4);
	create_insn	(0X800B1C0);
	create_insn	(x=0X800B1C4);
	op_hex		(x,	1);
	create_insn	(0X800B1CC);
	create_insn	(0X800B1D8);
	create_insn	(0X800B1EA);
	create_insn	(0X800B1FC);
	create_insn	(0X800B20E);
	create_insn	(0X800B220);
	create_insn	(0X800B224);
	create_insn	(0X800B228);
	create_insn	(0X800B22C);
	create_insn	(0X800B230);
	create_insn	(0X800B234);
	create_insn	(0X800B23A);
	create_insn	(0X800B24C);
	create_insn	(0X800B252);
	create_insn	(0X800B258);
	create_insn	(0X800B25E);
	create_insn	(0X800B266);
	create_insn	(0X800B26C);
	create_insn	(0X800B272);
	create_insn	(0X800B280);
	create_insn	(0X800B284);
	create_insn	(0X800B28A);
	create_insn	(0X800B2A8);
	create_insn	(0X800B2AC);
	make_array	(0X800B2B2,	0X2);
	create_insn	(0X800B2B4);
	create_insn	(x=0X800B2B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B2D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B2EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B306);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B320);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B33A);
	create_insn	(x=0X800B388);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B38E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B394);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B39A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B3A0);
	op_hex		(x,	1);
	create_insn	(0X800B3B8);
	create_insn	(x=0X800B3DA);
	op_hex		(x,	1);
	create_insn	(x=0X800B3EA);
	op_hex		(x,	1);
	create_insn	(0X800B3F2);
	create_insn	(x=0X800B3FE);
	op_hex		(x,	1);
	create_insn	(0X800B40C);
	create_insn	(0X800B424);
	create_insn	(0X800B446);
	create_insn	(0X800B452);
	create_insn	(x=0X800B456);
	op_hex		(x,	1);
	create_insn	(0X800B45E);
	create_insn	(0X800B46A);
	create_insn	(x=0X800B486);
	op_hex		(x,	1);
	create_insn	(0X800B498);
	create_insn	(0X800B4A0);
	create_insn	(0X800B4AC);
	create_insn	(0X800B4B4);
	create_insn	(0X800B4BE);
	create_insn	(0X800B4C6);
	create_insn	(0X800B4D8);
	create_insn	(0X800B4EA);
	create_insn	(x=0X800B4EE);
	op_hex		(x,	1);
	create_insn	(0X800B4F6);
	create_insn	(0X800B502);
	create_insn	(0X800B514);
	create_insn	(x=0X800B518);
	op_hex		(x,	1);
	create_insn	(0X800B520);
	create_insn	(0X800B52C);
	create_insn	(0X800B534);
	create_insn	(0X800B53E);
	create_insn	(x=0X800B540);
	op_hex		(x,	1);
	create_insn	(0X800B548);
	create_insn	(0X800B558);
	create_insn	(x=0X800B55A);
	op_hex		(x,	1);
	create_insn	(0X800B568);
	create_insn	(x=0X800B56C);
	op_hex		(x,	1);
	create_insn	(0X800B574);
	create_insn	(0X800B580);
	create_insn	(x=0X800B584);
	op_hex		(x,	1);
	create_insn	(0X800B58C);
	create_insn	(0X800B598);
	create_insn	(x=0X800B59C);
	op_hex		(x,	1);
	create_insn	(0X800B5A4);
	create_insn	(0X800B5B0);
	create_insn	(x=0X800B5B4);
	op_hex		(x,	1);
	create_insn	(0X800B5BC);
	create_insn	(0X800B5C6);
	create_insn	(x=0X800B5CA);
	op_hex		(x,	1);
	create_insn	(0X800B5D2);
	create_insn	(0X800B5DE);
	create_insn	(0X800B5F0);
	create_insn	(x=0X800B5F4);
	op_hex		(x,	1);
	create_insn	(0X800B5FC);
	create_insn	(0X800B608);
	create_insn	(0X800B61E);
	create_insn	(x=0X800B622);
	op_hex		(x,	1);
	create_insn	(0X800B634);
	create_insn	(x=0X800B64E);
	op_hex		(x,	1);
	create_insn	(0X800B662);
	create_insn	(0X800B66C);
	create_insn	(0X800B684);
	create_insn	(0X800B688);
	make_array	(0X800B6A6,	0X2);
	create_dword	(x=0X800B6A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B6AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B6B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B6B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B6B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800B6BC);
	create_insn	(0X800B6C8);
	create_insn	(x=0X800B6D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B6D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B6DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B6E0);
	op_stkvar	(x,	1);
	create_insn	(0X800B6EC);
	create_insn	(0X800B704);
	create_insn	(x=0X800B712);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B72A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B730);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B73E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B746);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B74E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B758);
	create_insn	(x=0X800B75A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B762);
	create_insn	(x=0X800B770);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B788);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B78E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B79C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B7A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B7B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B7BC);
	create_insn	(x=0X800B7BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B7C8);
	create_insn	(x=0X800B7D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B7EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B7F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B800);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B80A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B814);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B820);
	create_insn	(x=0X800B822);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B82C);
	create_insn	(x=0X800B836);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B83E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B848);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B850);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B862);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B866);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B878);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B882);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B88E);
	create_insn	(x=0X800B898);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B8A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B8AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B8B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B8C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B8C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B8DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B8E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B8F0);
	create_insn	(x=0X800B8FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B902);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B90C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B914);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B926);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B92A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B93C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B946);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B952);
	create_insn	(x=0X800B968);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B96E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B972);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B974);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B976);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B97A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B97E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B982);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B986);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B98A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B98C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B98E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B994);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B998);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B99A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B99C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B9A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B9B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B9BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B9C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B9C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B9F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BA0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA14);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BA2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA30);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA34);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BA3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BA46);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA52);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA56);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA60);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BA78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BA84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BA90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BA9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BAA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BAAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BACA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BAD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BAD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BAD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BADA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BADE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BAE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BAE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BAEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BAEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BAF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BAF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BAF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BAFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BAFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BB00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800BB0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB3C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800BB50);
	create_insn	(x=0X800BB52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BB62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BB6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BB6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BB6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BB70);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BB74);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BB7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BB7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BB82);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BB86);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BB88);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BB8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BB90);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BB96);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BB98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BBA2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BBB8);
	create_insn	(x=0X800BBBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BBC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BBC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BBCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BBCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BBD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BBDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BBDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BBE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BBE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BBF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BBF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BBF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BBFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC00);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC06);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BC24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BC32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BC40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BC4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BC58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BC62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BC7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BC82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BC84);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BC88);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC90);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC94);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC98);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BCA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BCA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BCAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BCAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BCAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BCBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BCCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BCD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BCD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BCD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BCDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BCDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BCE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BCE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BCEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BCF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BCF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BCF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BCFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BCFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD00);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BD0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BD22);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD28);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD32);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BD3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD44);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD48);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BD50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BD5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD60);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD64);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD68);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD72);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD76);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BD90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BD9E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BDAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BDB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BDC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BDCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BDDA);
	create_insn	(x=0X800BDEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BDF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BDFC);
	create_insn	(x=0X800BE00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BE14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BE18);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X800BE1A);
	op_hex		(x,	1);
	create_insn	(x=0X800BE20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BE38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BE3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BE4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BE54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BE5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BE64);
	create_insn	(x=0X800BE68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BE70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BE76);
	create_insn	(x=0X800BE7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BE8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BE92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BE96);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X800BE98);
	op_hex		(x,	1);
	create_insn	(x=0X800BE9E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BEB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BEBE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BECA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BED4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BEDE);
	create_insn	(x=0X800BEE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BEEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BEF0);
	create_insn	(x=0X800BEF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BF08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BF0C);
	op_hex		(x,	1);
	create_insn	(x=0X800BF12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BF2A);
	create_dword	(x=0X800BF2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800BF3C);
	create_dword	(x=0X800BF40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800BF6C);
	create_insn	(x=0X800BF6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BF74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BF80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BF88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BF90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800BF98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BFA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BFA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800BFA8);
	create_insn	(x=0X800BFB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BFC0);
	create_insn	(x=0X800BFC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BFDC);
	create_insn	(x=0X800BFE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BFFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C00C);
	create_insn	(x=0X800C01A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C030);
	create_insn	(x=0X800C036);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C056);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C070);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C07A);
	create_insn	(x=0X800C080);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C08E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C096);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C09E);
	create_insn	(x=0X800C0AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C0B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C0B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C0BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C0C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C0CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C0D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C0D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C0D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C0E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C0F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C0F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C0FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C102);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C106);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C10A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C10E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C112);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C118);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C11E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C124);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C12A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C134);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C152);
	create_insn	(x=0X800C154);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C164);
	create_insn	(x=0X800C166);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C174);
	create_insn	(x=0X800C180);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C19E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C1AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C1B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C1B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C1BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C1C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C1CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C1D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C1D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C1E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C1F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C1F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C1FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C202);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C208);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C212);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C21A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C21E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C228);
	create_insn	(0X800C23C);
	create_insn	(x=0X800C24C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C264);
	create_insn	(x=0X800C26E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C274);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C278);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C27A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C27E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C284);
	op_stkvar	(x,	1);
	create_insn	(0X800C28C);
	create_insn	(x=0X800C292);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C2A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C2A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C2AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C2B8);
	create_dword	(x=0X800C2C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C2C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C2C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C2CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C2D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C2D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C2D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C2DC);
	set_name	(0X800C2DC,	"SPI_UsrWaitTransferComplete");
	create_insn	(0X800C2E2);
	create_insn	(x=0X800C2F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C2F4);
	op_hex		(x,	1);
	create_insn	(x=0X800C2FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C304);
	create_insn	(x=0X800C312);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C316);
	op_hex		(x,	1);
	create_insn	(x=0X800C31C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C326);
	create_insn	(x=0X800C33E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C344);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C34A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C34E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C35A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C360);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C364);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C370);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C376);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C37A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C38E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C396);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C39C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C3A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C3A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C3AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C3B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C3B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C3BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C3C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C3C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C3CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C3E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X800C3E0,	"spi_fpga_or_tcx_transfer_mark");
	create_insn	(x=0X800C3E6);
	op_hex		(x,	1);
	create_insn	(x=0X800C3EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C3F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X800C3F2,	"spi_fpga_or_tcx_transfer_clear");
	create_insn	(x=0X800C3F8);
	op_hex		(x,	1);
	create_insn	(x=0X800C3FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800C404);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C408);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C40C);
	create_insn	(x=0X800C428);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C42E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C434);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C43A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C442);
	create_insn	(x=0X800C45E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C464);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C46A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C470);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C478);
	create_insn	(x=0X800C48C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C492);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C498);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C49E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C4A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C4AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C4B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C4BC);
	create_insn	(x=0X800C4C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C4C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C4CE);
	create_insn	(x=0X800C4D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C4D8);
	create_insn	(x=0X800C4EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C4F0);
	op_hex		(x,	1);
	create_insn	(0X800C4FA);
	create_insn	(x=0X800C50A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C50C);
	op_plain_offset	(x,	1,	0X40011000);
	op_plain_offset	(x,	129,	0X40011000);
	create_insn	(x=0X800C50E);
	op_hex		(x,	1);
	create_insn	(0X800C518);
	create_insn	(x=0X800C520);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C526);
	op_hex		(x,	1);
	create_insn	(0X800C530);
	create_insn	(0X800C534);
	create_insn	(x=0X800C53C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C542);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C548);
	create_insn	(x=0X800C54A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800C550);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C554);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C558);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C55C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C560);
	create_insn	(x=0X800C56E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C574);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C57A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C580);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C58A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C592);
	op_hex		(x,	1);
	create_insn	(x=0X800C598);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C59E);
	op_hex		(x,	1);
	create_insn	(x=0X800C5A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5A8);
	op_hex		(x,	1);
	create_insn	(x=0X800C5AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5B4);
	op_hex		(x,	1);
	create_insn	(x=0X800C5B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5C0);
	op_hex		(x,	1);
	create_insn	(x=0X800C5C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5CC);
	op_hex		(x,	1);
	create_insn	(x=0X800C5D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5D6);
	op_hex		(x,	1);
	create_insn	(x=0X800C5DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5E2);
	op_hex		(x,	1);
	create_insn	(x=0X800C5E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5EE);
	op_hex		(x,	1);
	create_insn	(x=0X800C5F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5FA);
	op_hex		(x,	1);
	create_insn	(x=0X800C5FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C604);
	op_hex		(x,	1);
	create_insn	(x=0X800C60A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C610);
	op_hex		(x,	1);
	create_insn	(x=0X800C614);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800C61C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C620);
	create_insn	(x=0X800C62C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C632);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C638);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C63E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C646);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C64E);
	create_insn	(x=0X800C652);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C65E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C664);
	op_hex		(x,	1);
	create_insn	(x=0X800C668);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C676);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C67C);
	op_hex		(x,	1);
	create_insn	(x=0X800C680);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C690);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C694);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C69C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C6A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C6A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C6AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C6B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C6BA);
	op_hex		(x,	1);
	create_insn	(x=0X800C6BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800C6C6,	0X2);
	create_dword	(x=0X800C6C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C6CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C6D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C6D4);
	create_insn	(x=0X800C6D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C6E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C6E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C6EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C6F6);
	create_insn	(x=0X800C704);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C70A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C710);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C714);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C71A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C724);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C736);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C73E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C744);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C748);
	op_hex		(x,	1);
	create_insn	(x=0X800C74C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C752);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C756);
	op_hex		(x,	1);
	create_insn	(x=0X800C75A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C760);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C764);
	op_hex		(x,	1);
	create_insn	(x=0X800C768);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C76E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C774);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C778);
	op_hex		(x,	1);
	create_insn	(x=0X800C77C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800C782,	0X2);
	create_dword	(x=0X800C784);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C788);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C78C);
	create_insn	(x=0X800C792);
	op_hex		(x,	1);
	create_insn	(0X800C79E);
	create_insn	(x=0X800C7B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C7BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C7C2);
	create_insn	(x=0X800C7D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C7DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C7E2);
	create_insn	(x=0X800C7F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C7FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C802);
	create_insn	(x=0X800C814);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C81A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C826);
	create_insn	(0X800C83E);
	create_insn	(x=0X800C84E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C854);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C85A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C85E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C862);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C86E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C874);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C87C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C88E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C8A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C8B2);
	op_stkvar	(x,	1);
	create_insn	(0X800C8E2);
	create_insn	(x=0X800C8F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C8F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C8FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C904);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C90E);
	create_insn	(x=0X800C914);
	op_hex		(x,	1);
	create_insn	(0X800C920);
	create_insn	(x=0X800C926);
	op_hex		(x,	1);
	create_insn	(x=0X800C932);
	op_plain_offset	(x,	1,	0X40000000);
	op_plain_offset	(x,	129,	0X40000000);
	create_insn	(x=0X800C938);
	op_hex		(x,	1);
	create_dword	(x=0X800C940);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C944);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C948);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C94C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C950);
	create_insn	(x=0X800C958);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C95E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C966);
	create_insn	(x=0X800C972);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C978);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C97E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C982);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C984);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C994);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C998);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C99E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C9A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C9BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C9C0);
	create_insn	(0X800C9CA);
	create_insn	(x=0X800C9CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C9D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C9D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C9DE);
	op_stkvar	(x,	1);
	create_insn	(0X800C9EA);
	create_insn	(x=0X800C9EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C9F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C9F6);
	op_stkvar	(x,	1);
	make_array	(0X800CA02,	0X2);
	create_dword	(x=0X800CA04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CA08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800CA0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X800CA16,	"switch_active_quadrant");
	create_insn	(x=0X800CA1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA22);
	op_hex		(x,	1);
	create_insn	(x=0X800CA26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA2E);
	op_hex		(x,	1);
	create_insn	(x=0X800CA32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA44);
	op_hex		(x,	1);
	create_insn	(x=0X800CA48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA50);
	op_hex		(x,	1);
	create_insn	(x=0X800CA54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA64);
	op_hex		(x,	1);
	create_insn	(x=0X800CA68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA70);
	op_hex		(x,	1);
	create_insn	(x=0X800CA78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA84);
	op_hex		(x,	1);
	create_insn	(x=0X800CA88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA90);
	op_hex		(x,	1);
	create_insn	(x=0X800CA96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA9E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CAA2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CAA8);
	create_insn	(x=0X800CAB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CABA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CAC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CAC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CAD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CAD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CAEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CAF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800CAF6,	0X2);
	create_dword	(x=0X800CAF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CAFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CB00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CB04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CB08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CB0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800CB10);
	create_insn	(x=0X800CB1C);
	op_stkvar	(x,	1);
	create_insn	(0X800CB20);
	create_insn	(x=0X800CB28);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CB36);
	op_stkvar	(x,	1);
	create_insn	(0X800CB42);
	set_name	(0X800CB42,	"memcpy");
	create_insn	(0X800CB4A);
	create_insn	(0X800CB58);
	create_insn	(x=0X800CB6C);
	op_stkvar	(x,	1);
	create_insn	(0X800CB8A);
	create_insn	(x=0X800CB8E);
	op_stkvar	(x,	1);
	create_insn	(0X800CB9A);
	create_insn	(x=0X800CB9E);
	op_stkvar	(x,	1);
	create_insn	(0X800CBA8);
	create_insn	(x=0X800CBBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CBBE);
	op_stkvar	(x,	1);
	create_insn	(0X800CBD0);
	create_insn	(0X800CBD4);
	create_insn	(x=0X800CBDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CBEC);
	op_stkvar	(x,	1);
	create_insn	(0X800CBF6);
	create_insn	(0X800CC06);
	create_insn	(0X800CC20);
	create_insn	(0X800CC24);
	create_insn	(0X800CC2E);
	create_insn	(0X800CC46);
	create_insn	(0X800CC5E);
	make_array	(0X800CC6E,	0X2);
	create_insn	(0X800CC70);
	create_insn	(0X800CC8E);
	create_insn	(0X800CCAE);
	create_insn	(0X800CCB6);
	create_insn	(x=0X800CCB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CCC0);
	create_insn	(0X800CCC8);
	create_insn	(x=0X800CCCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CCD0);
	create_insn	(x=0X800CCD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800CCD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800CCDC);
	create_insn	(x=0X800CCF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CCF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CCFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CCFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CD06);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CD0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CD0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CD14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CD22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CD28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CD30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CD3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CD42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CD50);
	create_insn	(x=0X800CD58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CD60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CD6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CD74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CD7C);
	create_insn	(x=0X800CDBE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CDC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CDCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CDE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CDEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CDFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CE04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CE08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800CE10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800CE14);
	create_dword	(0X800CE18);
	create_dword	(0X800CE1C);
	create_dword	(0X800CE20);
	create_dword	(0X800CE24);
	create_dword	(x=0X800CE28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CE2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800CE30);
	create_dword	(x=0X800CE34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800CE38);
	set_name	(0X800CE38,	"nullsub_1");
	create_insn	(0X800CE3A);
	create_insn	(0X800CE3C);
	create_insn	(0X800CE3E);
	create_insn	(0X800CE40);
	create_insn	(x=0X800CE44);
	op_hex		(x,	1);
	make_array	(0X800CE5E,	0X2);
	create_dword	(x=0X800CE60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800CE64);
	create_insn	(0X800CE7A);
	create_insn	(0X800CE88);
	create_insn	(x=0X800CE8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CE92);
	op_hex		(x,	1);
	create_insn	(x=0X800CE96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CE9C);
	create_insn	(x=0X800CEAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CEB0);
	op_hex		(x,	1);
	create_insn	(x=0X800CEB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CEBA);
	create_insn	(0X800CED0);
	create_insn	(0X800CEDE);
	create_insn	(x=0X800CEE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CEE8);
	op_hex		(x,	1);
	create_insn	(x=0X800CEEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CEF2);
	create_insn	(x=0X800CF02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CF06);
	op_hex		(x,	1);
	create_insn	(x=0X800CF0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CF10);
	create_insn	(0X800CF26);
	create_insn	(0X800CF34);
	create_insn	(x=0X800CF44);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CF4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CF50);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CF56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CF60);
	create_insn	(x=0X800CF7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CF80);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CF86);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CF8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800CF9A,	0X2);
	create_dword	(x=0X800CF9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CFA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800CFA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CFAA);
	create_insn	(x=0X800CFAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CFB2);
	op_hex		(x,	1);
	create_insn	(x=0X800CFB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CFBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CFC2);
	create_insn	(x=0X800CFC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CFCA);
	op_hex		(x,	1);
	create_insn	(x=0X800CFCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CFD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CFDA);
	create_insn	(x=0X800CFE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CFEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CFF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CFF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800D008);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D00C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800D010);
	create_insn	(x=0X800D018);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D028);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D038);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D046);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D04C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D050);
	op_stkvar	(x,	1);
	create_insn	(0X800D05E);
	create_insn	(0X800D06E);
	create_insn	(0X800D07E);
	create_insn	(0X800D092);
	make_array	(0X800D096,	0X2);
	create_dword	(x=0X800D098);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D09C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D0A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800D0A4);
	set_name	(0X800D0A4,	"update_board_version");
	create_insn	(x=0X800D0B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D0B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D0BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D0C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D0CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D0D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D0D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D0DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D0E4);
	op_hex		(x,	1);
	create_insn	(x=0X800D0EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D0EE);
	op_hex		(x,	1);
	create_insn	(x=0X800D0F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D0F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D0FC);
	op_hex		(x,	1);
	create_insn	(x=0X800D100);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D104);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D106);
	op_plain_offset	(x,	1,	0X40011000);
	op_plain_offset	(x,	129,	0X40011000);
	create_insn	(x=0X800D108);
	op_hex		(x,	1);
	create_insn	(x=0X800D10E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D112);
	op_hex		(x,	1);
	create_insn	(x=0X800D116);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D11C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D120);
	op_hex		(x,	1);
	create_insn	(x=0X800D124);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D128);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D12A);
	op_plain_offset	(x,	1,	0X40011000);
	op_plain_offset	(x,	129,	0X40011000);
	create_insn	(x=0X800D12C);
	op_hex		(x,	1);
	create_insn	(x=0X800D132);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D136);
	op_hex		(x,	1);
	create_insn	(x=0X800D13A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D140);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D144);
	op_hex		(x,	1);
	create_insn	(x=0X800D148);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D14E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X800D14E,	"get_board_version");
	create_dword	(x=0X800D154);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D158);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D15C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800D160);
	create_insn	(x=0X800D162);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D16A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D172);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D176);
	op_hex		(x,	1);
	create_insn	(x=0X800D17E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D186);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D18A);
	op_hex		(x,	1);
	create_insn	(x=0X800D190);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D196);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D198);
	op_plain_offset	(x,	1,	0X40013000);
	op_plain_offset	(x,	129,	0X40013000);
	create_insn	(x=0X800D19A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D19E);
	op_hex		(x,	1);
	create_insn	(x=0X800D1A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D1A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D1AC);
	op_hex		(x,	1);
	create_insn	(x=0X800D1B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D1B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D1BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D1C0);
	create_insn	(x=0X800D1E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D1FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D216);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D22C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D238);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D272);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D27C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D28E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D296);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D2A0);
	create_insn	(x=0X800D2A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D2B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D2B6);
	create_insn	(x=0X800D2BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D2CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D2CE);
	op_hex		(x,	1);
	create_insn	(x=0X800D2D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D2E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D2E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D2EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D2F0);
	op_plain_offset	(x,	1,	0X40013000);
	op_plain_offset	(x,	129,	0X40013000);
	create_insn	(x=0X800D2F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D2F6);
	op_hex		(x,	1);
	create_insn	(x=0X800D2FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D302);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D30A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800D310);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D314);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D318);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D31C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D320);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D324);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D328);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800D32C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D332);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D348);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D34C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D35E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D362);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D374);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D37A);
	create_insn	(0X800D38E);
	create_insn	(x=0X800D394);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X800D3A4);
	op_hex		(x,	1);
	create_insn	(0X800D3AE);
	create_insn	(x=0X800D3BE);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X800D3C2);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(0X800D3C8);
	create_insn	(x=0X800D3CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D3D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D3E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800D3F2,	0X2);
	create_dword	(x=0X800D3F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D3F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D3FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D400);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800D404);
	create_dword	(0X800D408);
	create_dword	(0X800D40C);
	create_insn	(0X800D410);
	create_insn	(0X800D42A);
	create_insn	(0X800D43C);
	create_insn	(0X800D442);
	create_insn	(0X800D45C);
	create_insn	(0X800D47A);
	create_insn	(0X800D482);
	set_name	(0X800D482,	"log_printf");
	create_insn	(0X800D484);
	create_insn	(x=0X800D49E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D4A8);
	create_insn	(x=0X800D4AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D4C0);
	create_insn	(0X800D4D4);
	create_insn	(x=0X800D4D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D4EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D4F6);
	create_insn	(0X800D500);
	create_insn	(x=0X800D50A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D520);
	set_name	(0X800D520,	"decrypt_payload");
	create_insn	(0X800D52A);
	create_insn	(x=0X800D534);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800D54A,	0X2);
	create_dword	(x=0X800D54C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D550);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D554);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D558);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800D55C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X800D55C,	"ofdm_tx_state_set_flag");
	create_insn	(x=0X800D562);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D568);
	create_insn	(x=0X800D56A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D576);
	create_insn	(x=0X800D57A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D580);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D586);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D58C);
	create_insn	(x=0X800D590);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D596);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D5AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D5AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D5B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D5BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D5C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D5CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D5CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D5CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D5D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D5DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D5E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D5F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D5F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D5F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D5FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D604);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800D60E,	0X2);
	create_dword	(x=0X800D610);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D614);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D618);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D61C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800D620);
	create_insn	(x=0X800D626);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D62E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D63A);
	create_insn	(x=0X800D640);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D64A);
	create_insn	(x=0X800D656);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D65E);
	set_name	(0X800D65E,	"spi_fpga_raw_write");
	create_insn	(0X800D680);
	set_name	(0X800D680,	"spi_fpga_raw_read");
	create_insn	(0X800D6A6);
	set_name	(0X800D6A6,	"ad936x_reg_sync_write");
	create_insn	(x=0X800D6BA);
	op_hex		(x,	1);
	create_insn	(0X800D6E0);
	create_insn	(0X800D6EA);
	set_name	(0X800D6EA,	"ad936x_reg_sync_read");
	create_insn	(0X800D724);
	create_dword	(x=0X800D730);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800D734);
	create_insn	(x=0X800D73C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D74C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D758);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D766);
	create_insn	(x=0X800D76E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D77E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D78A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D798);
	create_insn	(x=0X800D7A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D7B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D7BA);
	create_insn	(x=0X800D7BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D7C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D7D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D7D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D7E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D7E2);
	op_stkvar	(x,	1);
	create_insn	(0X800D7E6);
	create_insn	(x=0X800D7FA);
	op_hex		(x,	1);
	create_insn	(0X800D820);
	create_insn	(0X800D828);
	create_insn	(0X800D846);
	create_insn	(0X800D856);
	create_insn	(0X800D868);
	create_insn	(0X800D888);
	create_insn	(0X800D89C);
	create_insn	(0X800D8AE);
	create_insn	(x=0X800D8B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D8D4);
	create_insn	(0X800D8E4);
	create_insn	(0X800D8F6);
	create_insn	(x=0X800D92E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D932);
	op_hex		(x,	1);
	create_insn	(x=0X800D936);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D93E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D942);
	op_hex		(x,	1);
	create_insn	(x=0X800D946);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D94E);
	create_insn	(x=0X800D952);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D95A);
	create_insn	(0X800D970);
	create_insn	(x=0X800D984);
	op_hex		(x,	1);
	create_insn	(0X800D9A4);
	create_insn	(0X800D9AC);
	create_insn	(0X800D9CA);
	create_insn	(0X800D9DA);
	create_insn	(0X800D9EC);
	create_insn	(0X800DA0C);
	create_insn	(0X800DA20);
	create_insn	(0X800DA32);
	create_insn	(x=0X800DA54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DA58);
	op_hex		(x,	1);
	create_insn	(x=0X800DA5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DA64);
	create_insn	(0X800DA72);
	create_insn	(0X800DA80);
	create_insn	(x=0X800DA82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DA9C);
	create_insn	(x=0X800DAB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DAD6);
	create_insn	(0X800DAF4);
	create_insn	(0X800DB04);
	create_insn	(0X800DB16);
	create_dword	(x=0X800DB38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DB3C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DB40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DB44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800DB48);
	create_insn	(0X800DB4C);
	create_insn	(0X800DB64);
	create_insn	(0X800DB68);
	create_insn	(0X800DB72);
	create_insn	(x=0X800DB78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DB7C);
	op_hex		(x,	1);
	create_insn	(x=0X800DB80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DB88);
	create_insn	(0X800DB9E);
	create_insn	(0X800DBC4);
	make_array	(0X800DBDA,	0X2);
	create_dword	(x=0X800DBDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800DBE0);
	set_name	(0X800DBE0,	"ofdm_init_instruction");
	set_cmt	(0X800DBF0,	"switch 9 cases ",	0);
	set_cmt	(0X800DBF6,	"switch jump",	0);
	set_cmt	(0X800DBFA,	"jump table for switch statement",	0);
	create_byte	(0X800DBFA);
	set_name	(0X800DBFA,	"jpt_800DBF6");
	create_byte	(0X800DBFB);
	create_byte	(0X800DBFC);
	create_byte	(0X800DBFD);
	create_byte	(0X800DBFE);
	create_byte	(0X800DBFF);
	create_byte	(0X800DC00);
	create_byte	(0X800DC01);
	create_byte	(0X800DC02);
	set_cmt	(0X800DC04,	"jumptable 0800DBF6 case 5",	1);
	create_insn	(0X800DC04);
	set_cmt	(0X800DC10,	"jumptable 0800DBF6 default case",	1);
	set_name	(0X800DC10,	"def_800DBF6");
	set_cmt	(0X800DC12,	"jumptable 0800DBF6 case 6",	1);
	create_insn	(0X800DC12);
	create_insn	(x=0X800DC22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DC26);
	op_hex		(x,	1);
	create_insn	(x=0X800DC2A);
	op_hex		(x,	1);
	set_cmt	(0X800DC2E,	"wrflag",	0);
	set_cmt	(0X800DC30,	"val",	0);
	set_cmt	(0X800DC32,	"addr10",	0);
	set_cmt	(0X800DC3A,	"val",	0);
	create_insn	(0X800DC3A);
	set_cmt	(0X800DC3C,	"wrflag",	0);
	set_cmt	(0X800DC3E,	"addr10",	0);
	set_cmt	(0X800DC4A,	"jumptable 0800DBF6 case 7",	1);
	create_insn	(0X800DC4A);
	set_cmt	(0X800DC58,	"jumptable 0800DBF6 case 8",	1);
	create_insn	(0X800DC58);
	create_insn	(x=0X800DC72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800DC7C,	"jumptable 0800DBF6 case 9",	1);
	create_insn	(0X800DC7C);
	create_insn	(x=0X800DC88);
	op_hex		(x,	1);
	create_insn	(0X800DC9C);
	create_insn	(0X800DCA0);
	create_insn	(0X800DCAE);
	set_cmt	(0X800DCB4,	"jumptable 0800DBF6 case 10",	1);
	create_insn	(0X800DCB4);
	create_insn	(x=0X800DCBC);
	op_hex		(x,	1);
	create_insn	(0X800DCCA);
	create_insn	(x=0X800DCE0);
	op_hex		(x,	1);
	create_insn	(x=0X800DCE6);
	op_hex		(x,	1);
	create_insn	(0X800DCF4);
	set_cmt	(0X800DD16,	"jumptable 0800DBF6 case 11",	1);
	create_insn	(0X800DD16);
	set_cmt	(0X800DD22,	"jumptable 0800DBF6 case 12",	1);
	create_insn	(0X800DD22);
	create_insn	(0X800DD3A);
	create_insn	(0X800DD44);
	create_insn	(0X800DD4E);
	create_insn	(0X800DD58);
	set_cmt	(0X800DD66,	"jumptable 0800DBF6 case 13",	1);
	create_insn	(0X800DD66);
	create_insn	(0X800DD72);
	create_insn	(0X800DD82);
	create_insn	(x=0X800DD88);
	op_hex		(x,	1);
	create_insn	(x=0X800DD90);
	op_hex		(x,	1);
	create_insn	(x=0X800DD96);
	op_hex		(x,	1);
	create_insn	(0X800DDA6);
	create_insn	(x=0X800DDAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DDAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DDAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DDC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DDD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DDDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DDE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DDEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DDF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DE02);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DE0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DE16);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DE20);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DE2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DE34);
	op_hex		(x,	1);
	create_insn	(x=0X800DE38);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DE3C);
	op_hex		(x,	1);
	create_insn	(x=0X800DE52);
	op_hex		(x,	1);
	create_insn	(x=0X800DE56);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DE70);
	op_hex		(x,	1);
	create_insn	(x=0X800DE74);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DE90);
	op_hex		(x,	1);
	create_insn	(x=0X800DE94);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DEB0);
	op_hex		(x,	1);
	create_insn	(x=0X800DEB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DED0);
	op_hex		(x,	1);
	create_insn	(x=0X800DED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DEF0);
	op_hex		(x,	1);
	create_insn	(x=0X800DEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DF0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DF14);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DF18);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DF1C);
	op_hex		(x,	1);
	create_insn	(x=0X800DF24);
	op_hex		(x,	1);
	create_insn	(x=0X800DF2A);
	op_hex		(x,	1);
	create_insn	(x=0X800DF2E);
	op_hex		(x,	1);
	create_insn	(x=0X800DF44);
	op_hex		(x,	1);
	create_insn	(x=0X800DF48);
	op_hex		(x,	1);
	create_insn	(0X800DF56);
	create_insn	(x=0X800DF60);
	op_hex		(x,	1);
	create_insn	(x=0X800DF64);
	op_hex		(x,	1);
	create_insn	(0X800DF72);
	create_insn	(x=0X800DF7C);
	op_hex		(x,	1);
	create_insn	(x=0X800DF80);
	op_hex		(x,	1);
	create_insn	(0X800DF8E);
	create_insn	(x=0X800DF98);
	op_hex		(x,	1);
	create_insn	(x=0X800DF9C);
	op_hex		(x,	1);
	create_insn	(0X800DFAA);
	create_insn	(x=0X800DFB4);
	op_hex		(x,	1);
	create_insn	(x=0X800DFB8);
	op_hex		(x,	1);
	create_insn	(0X800DFC6);
	create_insn	(x=0X800DFD0);
	op_hex		(x,	1);
	create_insn	(x=0X800DFD4);
	op_hex		(x,	1);
	create_insn	(0X800DFE2);
	create_insn	(x=0X800DFEC);
	op_hex		(x,	1);
	create_insn	(x=0X800DFF0);
	op_hex		(x,	1);
	make_array	(0X800DFFE,	0X2);
	create_dword	(x=0X800E000);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800E004);
	create_insn	(x=0X800E00E);
	op_hex		(x,	1);
	create_insn	(x=0X800E012);
	op_hex		(x,	1);
	create_insn	(0X800E020);
	create_insn	(x=0X800E02A);
	op_hex		(x,	1);
	create_insn	(0X800E03A);
	create_insn	(x=0X800E040);
	op_hex		(x,	1);
	create_insn	(x=0X800E054);
	op_hex		(x,	1);
	create_insn	(x=0X800E058);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E05C);
	op_hex		(x,	1);
	create_insn	(x=0X800E072);
	op_hex		(x,	1);
	create_insn	(x=0X800E076);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E090);
	op_hex		(x,	1);
	create_insn	(x=0X800E094);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E0B0);
	op_hex		(x,	1);
	create_insn	(x=0X800E0B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E0D0);
	op_hex		(x,	1);
	create_insn	(x=0X800E0D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E0F0);
	op_hex		(x,	1);
	create_insn	(x=0X800E0F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E110);
	op_hex		(x,	1);
	create_insn	(x=0X800E114);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E128);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E132);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E136);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E13A);
	op_hex		(x,	1);
	create_insn	(x=0X800E142);
	op_hex		(x,	1);
	create_insn	(x=0X800E148);
	op_hex		(x,	1);
	create_insn	(x=0X800E14C);
	op_hex		(x,	1);
	create_insn	(x=0X800E162);
	op_hex		(x,	1);
	create_insn	(x=0X800E166);
	op_hex		(x,	1);
	create_insn	(0X800E174);
	create_insn	(x=0X800E17E);
	op_hex		(x,	1);
	create_insn	(x=0X800E182);
	op_hex		(x,	1);
	create_insn	(0X800E190);
	create_insn	(x=0X800E19A);
	op_hex		(x,	1);
	create_insn	(x=0X800E19E);
	op_hex		(x,	1);
	create_insn	(0X800E1AC);
	create_insn	(x=0X800E1B6);
	op_hex		(x,	1);
	create_insn	(x=0X800E1BA);
	op_hex		(x,	1);
	create_insn	(0X800E1C8);
	create_insn	(x=0X800E1D2);
	op_hex		(x,	1);
	create_insn	(x=0X800E1D6);
	op_hex		(x,	1);
	create_insn	(0X800E1E4);
	create_insn	(x=0X800E1EE);
	op_hex		(x,	1);
	create_insn	(x=0X800E1F2);
	op_hex		(x,	1);
	create_insn	(0X800E200);
	create_insn	(x=0X800E20A);
	op_hex		(x,	1);
	create_insn	(x=0X800E20E);
	op_hex		(x,	1);
	create_insn	(0X800E21C);
	create_insn	(x=0X800E226);
	op_hex		(x,	1);
	create_insn	(x=0X800E22A);
	op_hex		(x,	1);
	create_insn	(0X800E238);
	create_insn	(x=0X800E242);
	op_hex		(x,	1);
	create_insn	(0X800E252);
	create_insn	(x=0X800E258);
	op_hex		(x,	1);
	create_insn	(x=0X800E266);
	op_stkvar	(x,	1);
	create_insn	(0X800E290);
	create_insn	(x=0X800E29A);
	op_hex		(x,	1);
	create_insn	(x=0X800E29E);
	op_hex		(x,	1);
	create_insn	(x=0X800E2AA);
	op_hex		(x,	1);
	create_insn	(0X800E2B8);
	set_name	(0X800E2B8,	"init_fpga_config");
	create_insn	(0X800E2CC);
	create_insn	(0X800E2D0);
	create_insn	(x=0X800E2F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E2FA);
	create_insn	(x=0X800E314);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E31C);
	create_insn	(0X800E31E);
	create_insn	(0X800E328);
	create_insn	(x=0X800E33A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E348);
	create_insn	(x=0X800E34E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E35E);
	set_cmt	(0X800E36C,	"wrflag",	0);
	set_cmt	(0X800E36E,	"val",	0);
	set_cmt	(0X800E370,	"addr10",	0);
	create_insn	(x=0X800E370);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800E376,	"wrflag",	0);
	set_cmt	(0X800E378,	"val",	0);
	set_cmt	(0X800E37A,	"addr10",	0);
	create_insn	(x=0X800E37A);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(0X800E382);
	set_cmt	(0X800E38A,	"wrflag",	0);
	set_cmt	(0X800E38C,	"val",	0);
	set_cmt	(0X800E38E,	"addr10",	0);
	create_insn	(x=0X800E38E);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800E394,	"wrflag",	0);
	set_cmt	(0X800E396,	"val",	0);
	set_cmt	(0X800E398,	"addr10",	0);
	create_insn	(x=0X800E398);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(0X800E3A0);
	create_insn	(x=0X800E3B0);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	set_cmt	(0X800E3BC,	"wrflag",	0);
	set_cmt	(0X800E3BE,	"val",	0);
	set_cmt	(0X800E3C0,	"addr10",	0);
	create_insn	(x=0X800E3C0);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800E3C6,	"wrflag",	0);
	set_cmt	(0X800E3C8,	"val",	0);
	set_cmt	(0X800E3CA,	"addr10",	0);
	create_insn	(x=0X800E3CA);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(x=0X800E3E0);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	set_cmt	(0X800E3EC,	"wrflag",	0);
	set_cmt	(0X800E3EE,	"val",	0);
	set_cmt	(0X800E3F0,	"addr10",	0);
	create_insn	(x=0X800E3F0);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800E3F6,	"wrflag",	0);
	set_cmt	(0X800E3F8,	"val",	0);
	set_cmt	(0X800E3FA,	"addr10",	0);
	create_insn	(x=0X800E3FA);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(0X800E402);
	set_cmt	(0X800E40A,	"wrflag",	0);
	set_cmt	(0X800E40C,	"val",	0);
	set_cmt	(0X800E40E,	"addr10",	0);
	create_insn	(x=0X800E40E);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800E414,	"wrflag",	0);
	set_cmt	(0X800E416,	"val",	0);
	set_cmt	(0X800E418,	"addr10",	0);
	create_insn	(x=0X800E418);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800E436,	"wrflag",	0);
	set_cmt	(0X800E438,	"val",	0);
	set_cmt	(0X800E43A,	"addr10",	0);
	create_insn	(x=0X800E43A);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800E442);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(0X800E452);
	create_insn	(x=0X800E458);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800E466);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800E478);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(0X800E48A);
	create_insn	(x=0X800E48E);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X800E496);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	set_cmt	(0X800E49A,	"wrflag",	0);
	set_cmt	(0X800E49C,	"val",	0);
	set_cmt	(0X800E49E,	"addr10",	0);
	create_insn	(x=0X800E49E);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800E4A4,	"wrflag",	0);
	set_cmt	(0X800E4A6,	"val",	0);
	set_cmt	(0X800E4A8,	"addr10",	0);
	create_insn	(x=0X800E4A8);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_1(void) {
        auto x;
#define id x

	set_cmt	(0X800E4AE,	"wrflag",	0);
	set_cmt	(0X800E4B0,	"val",	0);
	set_cmt	(0X800E4B2,	"addr10",	0);
	create_insn	(x=0X800E4B2);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800E4BE,	"wrflag",	0);
	set_cmt	(0X800E4C0,	"val",	0);
	set_cmt	(0X800E4C2,	"addr10",	0);
	create_insn	(x=0X800E4C2);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(x=0X800E4D0);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(x=0X800E4EA);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800E4F0);
	op_hex		(x,	1);
	create_insn	(x=0X800E4F6);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800E504);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(0X800E530);
	create_insn	(0X800E542);
	create_insn	(x=0X800E54C);
	op_hex		(x,	1);
	create_insn	(x=0X800E550);
	op_hex		(x,	1);
	create_insn	(x=0X800E55C);
	op_hex		(x,	1);
	create_insn	(0X800E56A);
	create_insn	(x=0X800E574);
	op_hex		(x,	1);
	create_insn	(x=0X800E578);
	op_hex		(x,	1);
	create_insn	(x=0X800E584);
	op_hex		(x,	1);
	make_array	(0X800E592,	0X2);
	create_dword	(x=0X800E594);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E598);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E59C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800E5A0);
	create_dword	(x=0X800E5A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800E5A8);
	create_insn	(x=0X800E5C0);
	op_stkvar	(x,	1);
	create_insn	(0X800E61A);
	create_insn	(x=0X800E62E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E63A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E640);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E642);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E666);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E688);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E69A);
	create_insn	(x=0X800E6BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E6C8);
	create_insn	(x=0X800E6CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E6D8);
	create_insn	(0X800E6E8);
	create_insn	(x=0X800E71A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E728);
	create_insn	(x=0X800E72E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E73C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E744);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E750);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E758);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E77C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E784);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800E78E,	0X2);
	create_dword	(0X800E790);
	create_strlit	(0X800E794,	0X800E7A0);
	set_name	(0X800E794,	"aPhantom2x");
	create_strlit	(0X800E7A0,	0X800E7B1);
	set_name	(0X800E7A0,	"aDDDDD");
	create_byte	(0X800E7B1);
	make_array	(0X800E7B1,	0X3);
	create_strlit	(0X800E7B4,	0X800E7BE);
	set_name	(0X800E7B4,	"aVerD");
	make_array	(0X800E7BE,	0X2);
	create_strlit	(0X800E7C0,	0X800E7D1);
	set_name	(0X800E7C0,	"aFpgaBootD");
	create_byte	(0X800E7D1);
	make_array	(0X800E7D1,	0X3);
	create_strlit	(0X800E7D4,	0X800E7E4);
	set_name	(0X800E7D4,	"aFpgaCfgOk");
	create_strlit	(0X800E7E4,	0X800E7F7);
	set_name	(0X800E7E4,	"aFpgaCfgError");
	create_byte	(0X800E7F7);
	create_dword	(x=0X800E7F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E7FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E800);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800E804);
	create_byte	(0X800E806);
	create_insn	(0X800E808);
	create_byte	(0X800E80A);
	create_insn	(0X800E80C);
	create_byte	(0X800E80E);
	create_insn	(0X800E810);
	create_byte	(0X800E812);
	create_insn	(0X800E814);
	create_insn	(0X800E816);
	create_insn	(0X800E818);
	create_insn	(0X800E81A);
	create_insn	(0X800E81C);
	create_insn	(x=0X800E820);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E822);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E824);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E828);
	op_hex		(x,	1);
	create_insn	(x=0X800E82C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E832);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E836);
	op_hex		(x,	1);
	create_insn	(x=0X800E83A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E83C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E840);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E842);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E846);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E84E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E852);
	op_hex		(x,	1);
	create_insn	(x=0X800E85A);
	op_stkvar	(x,	1);
	create_insn	(0X800E85E);
	create_insn	(x=0X800E860);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E862);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E868);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E86C);
	op_hex		(x,	1);
	create_insn	(x=0X800E870);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E878);
	op_hex		(x,	1);
	create_insn	(x=0X800E882);
	op_hex		(x,	1);
	create_insn	(x=0X800E888);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E88A);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E88C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E88E);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E892);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E894);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E898);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E89A);
	op_hex		(x,	1);
	create_insn	(x=0X800E89E);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E8A2);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E8A4);
	op_hex		(x,	1);
	create_insn	(x=0X800E8A8);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E8AC);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E8AE);
	op_hex		(x,	1);
	create_insn	(x=0X800E8B2);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E8B8);
	op_hex		(x,	1);
	create_insn	(x=0X800E8C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E8C4);
	op_hex		(x,	1);
	create_insn	(x=0X800E8CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E8CC);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E8CE);
	op_hex		(x,	1);
	create_insn	(x=0X800E8D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E8D4);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E8D8);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E8DA);
	op_hex		(x,	1);
	create_insn	(x=0X800E8DE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E8E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E8E4);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E8E6);
	op_hex		(x,	1);
	create_insn	(0X800E8F0);
	create_insn	(0X800E8F8);
	create_insn	(x=0X800E8FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E8FE);
	op_hex		(x,	1);
	create_insn	(x=0X800E902);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E908);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E90E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E910);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E91A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E922);
	op_hex		(x,	1);
	create_insn	(x=0X800E92A);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E92C);
	op_hex		(x,	1);
	create_insn	(x=0X800E930);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E936);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X800E93E);
	create_insn	(x=0X800E946);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E948);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E94A);
	op_hex		(x,	1);
	create_insn	(0X800E95A);
	create_insn	(x=0X800E95C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E962);
	create_insn	(x=0X800E964);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E96A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E96C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E96E);
	op_hex		(x,	1);
	create_insn	(x=0X800E972);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E974);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E976);
	op_hex		(x,	1);
	create_insn	(x=0X800E986);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E98C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E98E);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E990);
	op_hex		(x,	1);
	create_insn	(x=0X800E99A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E9A0);
	create_insn	(x=0X800E9A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E9AA);
	create_insn	(x=0X800E9AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E9B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E9B6);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800E9BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E9C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E9C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800E9CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E9D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800E9D4);
	create_dword	(0X800E9D8);
	create_dword	(0X800E9DC);
	create_dword	(x=0X800E9E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800E9E4);
	create_dword	(0X800E9E8);
	create_dword	(0X800E9EC);
	create_dword	(x=0X800E9F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800E9F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E9F6);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(0X800E9FE);
	create_insn	(x=0X800EA00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA02);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EA04);
	op_hex		(x,	1);
	create_insn	(x=0X800EA10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA12);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EA14);
	op_hex		(x,	1);
	create_insn	(0X800EA20);
	create_insn	(0X800EA24);
	create_insn	(x=0X800EA2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA2C);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EA2E);
	op_hex		(x,	1);
	create_insn	(0X800EA38);
	create_insn	(x=0X800EA3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA3C);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EA46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA50);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EA54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800EA5A);
	create_insn	(x=0X800EA62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA64);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EA6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA6E);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EA7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA7C);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(0X800EA84);
	create_insn	(x=0X800EA88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA8A);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EA92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA94);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EA9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA9C);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(0X800EAA4);
	create_insn	(x=0X800EAA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EAA8);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EAAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EAB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EAB6);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(0X800EAC2);
	create_insn	(0X800EAC6);
	create_insn	(x=0X800EACC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EACE);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EAD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800EAD8);
	create_insn	(x=0X800EADA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EADC);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EAE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EAEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EAEC);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(0X800EAFA);
	create_insn	(0X800EAFE);
	create_insn	(x=0X800EB04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EB06);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EB0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800EB12);
	create_insn	(x=0X800EB14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EB16);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EB18);
	op_hex		(x,	1);
	create_insn	(x=0X800EB1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EB24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EB26);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EB28);
	op_hex		(x,	1);
	create_insn	(0X800EB34);
	create_insn	(0X800EB38);
	create_insn	(x=0X800EB3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EB40);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EB42);
	op_hex		(x,	1);
	create_insn	(x=0X800EB46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800EB4C);
	create_insn	(x=0X800EB4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EB50);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EB56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EB5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EB60);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(0X800EB6E);
	create_insn	(0X800EB72);
	create_insn	(x=0X800EB78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EB7A);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EB80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800EB86);
	create_insn	(x=0X800EB88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EB8A);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EB90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EB98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EB9A);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(0X800EBA8);
	create_insn	(0X800EBAC);
	create_insn	(x=0X800EBB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EBB4);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EBBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800EBC0);
	create_insn	(0X800EBCC);
	create_insn	(0X800EBEA);
	create_insn	(0X800EBF0);
	create_insn	(0X800EC0C);
	create_insn	(x=0X800EC10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC20);
	op_plain_offset	(x,	1,	0X20001A99);
	op_plain_offset	(x,	129,	0X20001A99);
	create_insn	(x=0X800EC24);
	op_plain_offset	(x,	1,	0X20001A99);
	op_plain_offset	(x,	129,	0X20001A99);
	create_insn	(0X800EC2E);
	create_insn	(x=0X800EC36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800EC4A);
	create_insn	(x=0X800EC5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC60);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EC6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC72);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EC7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC7E);
	op_plain_offset	(x,	1,	0X20001A68);
	op_plain_offset	(x,	129,	0X20001A68);
	create_insn	(x=0X800EC80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC82);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800EC8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC90);
	op_plain_offset	(x,	1,	0X20001A68);
	op_plain_offset	(x,	129,	0X20001A68);
	create_insn	(x=0X800EC92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC94);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800ECA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ECA2);
	op_plain_offset	(x,	1,	0X20001A68);
	op_plain_offset	(x,	129,	0X20001A68);
	create_insn	(0X800ECB8);
	create_insn	(x=0X800ECC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ECC2);
	op_plain_offset	(x,	1,	0X20001A68);
	op_plain_offset	(x,	129,	0X20001A68);
	create_insn	(0X800ECC6);
	create_insn	(x=0X800ECCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ECD0);
	op_plain_offset	(x,	1,	0X20001A68);
	op_plain_offset	(x,	129,	0X20001A68);
	create_insn	(0X800ECD4);
	create_insn	(x=0X800ECDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ECDE);
	op_plain_offset	(x,	1,	0X20001A68);
	op_plain_offset	(x,	129,	0X20001A68);
	create_insn	(0X800ECE2);
	create_insn	(x=0X800ECEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ECEC);
	op_plain_offset	(x,	1,	0X20001A68);
	op_plain_offset	(x,	129,	0X20001A68);
	create_insn	(0X800ED02);
	create_insn	(x=0X800ED0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED0C);
	op_plain_offset	(x,	1,	0X20001A68);
	op_plain_offset	(x,	129,	0X20001A68);
	create_insn	(0X800ED10);
	create_insn	(x=0X800ED18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED1A);
	op_plain_offset	(x,	1,	0X20001A68);
	op_plain_offset	(x,	129,	0X20001A68);
	create_insn	(0X800ED1E);
	create_insn	(x=0X800ED26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED28);
	op_plain_offset	(x,	1,	0X20001A68);
	op_plain_offset	(x,	129,	0X20001A68);
	create_insn	(0X800ED3E);
	create_insn	(x=0X800ED46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED48);
	op_plain_offset	(x,	1,	0X20001A68);
	op_plain_offset	(x,	129,	0X20001A68);
	create_insn	(0X800ED4C);
	create_insn	(x=0X800ED54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED56);
	op_plain_offset	(x,	1,	0X20001A68);
	op_plain_offset	(x,	129,	0X20001A68);
	create_insn	(0X800ED5A);
	create_insn	(x=0X800ED62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED64);
	op_plain_offset	(x,	1,	0X20001A68);
	op_plain_offset	(x,	129,	0X20001A68);
	create_insn	(0X800ED68);
	create_insn	(x=0X800ED70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED72);
	op_plain_offset	(x,	1,	0X20001A68);
	op_plain_offset	(x,	129,	0X20001A68);
	create_insn	(x=0X800ED86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED88);
	op_plain_offset	(x,	1,	0X20001A68);
	op_plain_offset	(x,	129,	0X20001A68);
	create_insn	(0X800ED8C);
	create_insn	(x=0X800ED94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED96);
	op_plain_offset	(x,	1,	0X20001A68);
	op_plain_offset	(x,	129,	0X20001A68);
	create_insn	(x=0X800ED9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800ED9E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EDA2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800EDAC);
	create_insn	(x=0X800EDBE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EDC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EDC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EDCC);
	op_hex		(x,	1);
	create_insn	(x=0X800EDE0);
	op_hex		(x,	1);
	create_dword	(x=0X800EDF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EDF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EDF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EDFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EE00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EE04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EE08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EE0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EE10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EE14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EE18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EE1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800EE20);
	create_insn	(x=0X800EE5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EE66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800EE6C);
	create_insn	(x=0X800EE7C);
	op_hex		(x,	1);
	create_insn	(x=0X800EEC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EED0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EEE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800EEE8);
	op_stkvar	(x,	1);
	create_insn	(0X800EEF0);
	create_insn	(x=0X800EEFA);
	op_hex		(x,	1);
	create_insn	(0X800EF26);
	set_cmt	(0X800EF30,	"len",	0);
	set_cmt	(0X800EF32,	"seed",	0);
	set_cmt	(0X800EF34,	"buf",	0);
	create_insn	(0X800EF4A);
	create_insn	(0X800EF4E);
	create_insn	(x=0X800EF5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EF64);
	op_plain_offset	(x,	1,	0X20001AAD);
	op_plain_offset	(x,	129,	0X20001AAD);
	create_insn	(x=0X800EF66);
	op_hex		(x,	1);
	create_insn	(x=0X800EF6C);
	op_plain_offset	(x,	1,	0X20001AAD);
	op_plain_offset	(x,	129,	0X20001AAD);
	create_insn	(x=0X800EF70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800EF76);
	create_insn	(x=0X800EF78);
	op_plain_offset	(x,	1,	0X20001AAD);
	op_plain_offset	(x,	129,	0X20001AAD);
	create_insn	(x=0X800EF7A);
	op_hex		(x,	1);
	create_insn	(x=0X800EF80);
	op_plain_offset	(x,	1,	0X20001AAD);
	op_plain_offset	(x,	129,	0X20001AAD);
	create_insn	(x=0X800EF86);
	op_plain_offset	(x,	1,	0X20001AAD);
	op_plain_offset	(x,	129,	0X20001AAD);
	create_insn	(x=0X800EF88);
	op_hex		(x,	1);
	create_insn	(x=0X800EF8E);
	op_plain_offset	(x,	1,	0X20001AAD);
	op_plain_offset	(x,	129,	0X20001AAD);
	create_insn	(x=0X800EF94);
	op_plain_offset	(x,	1,	0X20001AAD);
	op_plain_offset	(x,	129,	0X20001AAD);
	create_insn	(x=0X800EF96);
	op_hex		(x,	1);
	create_insn	(x=0X800EF9C);
	op_plain_offset	(x,	1,	0X20001AAD);
	op_plain_offset	(x,	129,	0X20001AAD);
	create_insn	(x=0X800EFA2);
	op_plain_offset	(x,	1,	0X20001AAD);
	op_plain_offset	(x,	129,	0X20001AAD);
	create_insn	(x=0X800EFA4);
	op_hex		(x,	1);
	create_insn	(x=0X800EFAA);
	op_plain_offset	(x,	1,	0X20001AAD);
	op_plain_offset	(x,	129,	0X20001AAD);
	create_insn	(x=0X800EFBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800EFC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800EFC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800EFC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EFCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EFD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800EFE0);
	create_insn	(x=0X800EFE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EFF0);
	op_plain_offset	(x,	1,	0X20001A99);
	op_plain_offset	(x,	129,	0X20001A99);
	create_insn	(x=0X800EFF2);
	op_plain_offset	(x,	1,	0X20001A99);
	op_plain_offset	(x,	129,	0X20001A99);
	create_insn	(x=0X800EFF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EFF6);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800F002);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F004);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800F00C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F00E);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800F014);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F016);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800F01C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F01E);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800F026);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F028);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800F030);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F032);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800F03A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F03C);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800F044);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F046);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800F04C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F04E);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800F054);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F056);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800F05E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F060);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800F068);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F06A);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800F072);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F074);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800F07C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F07E);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800F084);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F086);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800F08A);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X800F08C);
	op_hex		(x,	1);
	create_insn	(x=0X800F092);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(0X800F096);
	create_insn	(x=0X800F09E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F0A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F0A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F0B0);
	op_stkvar	(x,	1);
	create_insn	(0X800F0BA);
	create_insn	(0X800F0D2);
	create_insn	(x=0X800F0D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F0DC);
	op_hex		(x,	1);
	create_insn	(x=0X800F0E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F0E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F0EC);
	op_hex		(x,	1);
	create_insn	(x=0X800F0F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F0FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F0FE);
	op_hex		(x,	1);
	create_insn	(x=0X800F104);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F10A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F10E);
	op_hex		(x,	1);
	create_insn	(x=0X800F112);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F11C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F120);
	op_hex		(x,	1);
	create_insn	(x=0X800F126);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F12C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F130);
	op_hex		(x,	1);
	create_insn	(x=0X800F134);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F13E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F142);
	op_hex		(x,	1);
	create_insn	(x=0X800F148);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F14E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F152);
	op_hex		(x,	1);
	create_insn	(x=0X800F156);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F15E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F166);
	op_stkvar	(x,	1);
	create_insn	(0X800F170);
	create_insn	(x=0X800F184);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F18E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F194);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F19C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F1A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F1AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F1AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F1B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F1B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F1BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F1BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F1C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F1C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F1CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F1D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F1DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F1DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F1E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F1EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F1EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F1EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F1F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F200);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F206);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F20A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F210);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F214);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F216);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F218);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F21A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F222);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F22C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800F236,	0X2);
	create_dword	(x=0X800F238);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F23C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F240);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F244);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F248);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F24C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F250);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F254);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800F258);
	create_dword	(x=0X800F25C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F260);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800F264);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F26A);
	op_plain_offset	(x,	1,	0X20001CC6);
	op_plain_offset	(x,	129,	0X20001CC6);
	create_insn	(x=0X800F26C);
	op_plain_offset	(x,	1,	0X20001CC6);
	op_plain_offset	(x,	129,	0X20001CC6);
	create_insn	(x=0X800F270);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F272);
	op_plain_offset	(x,	1,	0X20001CC6);
	op_plain_offset	(x,	129,	0X20001CC6);
	create_insn	(x=0X800F27A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F282);
	op_plain_offset	(x,	1,	0X20001CC6);
	op_plain_offset	(x,	129,	0X20001CC6);
	create_insn	(x=0X800F284);
	op_plain_offset	(x,	1,	0X20001CC6);
	op_plain_offset	(x,	129,	0X20001CC6);
	create_insn	(0X800F28A);
	create_insn	(x=0X800F28C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F28E);
	op_plain_offset	(x,	1,	0X20001CC6);
	op_plain_offset	(x,	129,	0X20001CC6);
	create_insn	(x=0X800F294);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F29A);
	op_plain_offset	(x,	1,	0X20001CC6);
	op_plain_offset	(x,	129,	0X20001CC6);
	create_insn	(0X800F2A2);
	create_insn	(x=0X800F2A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F2A8);
	op_plain_offset	(x,	1,	0X20001CC6);
	op_plain_offset	(x,	129,	0X20001CC6);
	make_array	(0X800F2AE,	0X2);
	create_dword	(x=0X800F2B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800F2B4);
	create_insn	(x=0X800F2C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F2CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800F2EE);
	create_insn	(x=0X800F2F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F316);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F318);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F31E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F334);
	op_hex		(x,	1);
	create_insn	(x=0X800F338);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F33A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X800F340);
	create_insn	(x=0X800F346);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800F36E);
	create_insn	(0X800F380);
	create_insn	(x=0X800F384);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F3A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F3AA);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F3B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F3C6);
	op_hex		(x,	1);
	create_insn	(x=0X800F3CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F3CC);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X800F3D2);
	create_insn	(x=0X800F3D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800F400);
	create_insn	(0X800F410);
	create_insn	(x=0X800F414);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F416);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F418);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F41A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F41E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F420);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F424);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F426);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F442);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F444);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F44A);
	op_hex		(x,	1);
	create_insn	(x=0X800F452);
	op_hex		(x,	1);
	create_insn	(x=0X800F458);
	op_hex		(x,	1);
	create_insn	(x=0X800F460);
	op_hex		(x,	1);
	create_insn	(0X800F466);
	create_insn	(x=0X800F476);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F478);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F47E);
	op_hex		(x,	1);
	create_insn	(x=0X800F486);
	op_hex		(x,	1);
	create_insn	(x=0X800F48C);
	op_hex		(x,	1);
	create_insn	(x=0X800F494);
	op_hex		(x,	1);
	create_insn	(x=0X800F498);
	op_hex		(x,	1);
	create_insn	(x=0X800F49C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F49E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X800F4A2);
	create_insn	(x=0X800F4B6);
	op_hex		(x,	1);
	create_insn	(x=0X800F4BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F4C2);
	op_hex		(x,	1);
	create_insn	(x=0X800F4E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F4F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F4F6);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F502);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800F510);
	create_insn	(x=0X800F514);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800F522);
	create_insn	(0X800F530);
	create_insn	(x=0X800F558);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F566);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F576);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F586);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F596);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F5A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F5A4);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F5AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F5B0);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F5B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F5CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F5D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F5D8);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X800F5DC);
	create_insn	(x=0X800F5F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F600);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F610);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F620);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F62A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F62C);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F636);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F638);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F63E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F656);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F65E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F660);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X800F664);
	create_insn	(0X800F666);
	create_insn	(0X800F670);
	create_insn	(x=0X800F672);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F674);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F678);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F680);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F682);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F688);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F690);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F692);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F694);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F69E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F6A0);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F6AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F6AC);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F6B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F6B8);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F6BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F6C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800F6C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F6C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F6CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F6D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F6D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F6D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F6DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F6E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F6E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F6E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F6EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F6F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800F6F4);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F6FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F6FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F700);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F704);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F720);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F722);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F726);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F730);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F73A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F73C);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F740);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F74A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F756);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F758);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F75C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F766);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F772);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F774);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F778);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F782);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F78E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F790);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F794);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800F79C);
	create_insn	(0X800F79E);
	create_insn	(x=0X800F7A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800F7B0);
	create_insn	(x=0X800F7C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F7C2);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F7C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F7D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F7DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F7DE);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F7E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F7EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F7F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F7FA);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F7FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F808);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F814);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F816);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F81A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F824);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F834);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F836);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F83C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F83E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F84C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F84E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800F862);
	create_insn	(0X800F864);
	create_insn	(x=0X800F87C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F87E);
	op_plain_offset	(x,	1,	0X20001DBC);
	op_plain_offset	(x,	129,	0X20001DBC);
	create_insn	(x=0X800F882);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F890);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F892);
	op_plain_offset	(x,	1,	0X20001DBC);
	op_plain_offset	(x,	129,	0X20001DBC);
	create_insn	(x=0X800F896);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F8A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F8A6);
	op_plain_offset	(x,	1,	0X20001DBC);
	op_plain_offset	(x,	129,	0X20001DBC);
	create_insn	(x=0X800F8AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F8B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F8BA);
	op_plain_offset	(x,	1,	0X20001DBC);
	op_plain_offset	(x,	129,	0X20001DBC);
	create_insn	(x=0X800F8BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F8CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F8CE);
	op_plain_offset	(x,	1,	0X20001DBC);
	op_plain_offset	(x,	129,	0X20001DBC);
	create_insn	(x=0X800F8D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800F8E2);
	create_insn	(x=0X800F8F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F8F4);
	op_plain_offset	(x,	1,	0X20001DBC);
	op_plain_offset	(x,	129,	0X20001DBC);
	create_insn	(x=0X800F8F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F906);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F908);
	op_plain_offset	(x,	1,	0X20001DBC);
	op_plain_offset	(x,	129,	0X20001DBC);
	create_insn	(x=0X800F90C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F91A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F91C);
	op_plain_offset	(x,	1,	0X20001DBC);
	op_plain_offset	(x,	129,	0X20001DBC);
	create_insn	(x=0X800F920);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F92E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F930);
	op_plain_offset	(x,	1,	0X20001DBC);
	op_plain_offset	(x,	129,	0X20001DBC);
	create_insn	(x=0X800F934);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800F944);
	create_insn	(0X800F946);
	create_insn	(x=0X800F948);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F94A);
	op_plain_offset	(x,	1,	0X20001DBC);
	op_plain_offset	(x,	129,	0X20001DBC);
	create_insn	(0X800F956);
	create_insn	(x=0X800F958);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F95A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F960);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F968);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F96A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F970);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F978);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F980);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F988);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F98A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F990);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F99C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F9A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F9A4);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X800F9A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F9B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F9B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F9BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F9C0);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F9CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F9D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F9D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F9DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F9DE);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800F9E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F9F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F9F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F9FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA10);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FA1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA2E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FA34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA48);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X800FA4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA5A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FA60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA9C);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X800FAA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FAA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FAAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FAB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FAC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FAC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FACE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FAD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800FADA,	0X2);
	create_dword	(x=0X800FADC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FAE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FAE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FAE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FAEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FAF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FAF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FAF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FAFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FB00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FB04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FB08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FB0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FB10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FB14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800FB18);
	set_name	(0X800FB18,	"tcx_config_update1");
	create_insn	(x=0X800FB1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FB1C);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FB24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FB26);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FB2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FB32);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800FB38);
	op_hex		(x,	1);
	create_insn	(x=0X800FB46);
	op_hex		(x,	1);
	create_insn	(x=0X800FB4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FB52);
	op_hex		(x,	1);
	create_insn	(x=0X800FB60);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X800FB68);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X800FB70);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X800FB76);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800FB7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FB7E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FB86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800FB88,	"val",	0);
	create_insn	(x=0X800FB88);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	set_cmt	(0X800FB8C,	"wrflag",	0);
	set_cmt	(0X800FB8E,	"addr10",	0);
	create_insn	(x=0X800FB8E);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800FB96);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800FB9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FB9E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FBA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800FBA8,	"val",	0);
	create_insn	(x=0X800FBA8);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	set_cmt	(0X800FBAC,	"wrflag",	0);
	set_cmt	(0X800FBAE,	"addr10",	0);
	create_insn	(x=0X800FBAE);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(0X800FBB6);
	create_insn	(x=0X800FBCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FBCE);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FBE0);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(x=0X800FBE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FBE8);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FBF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800FBF2,	"val",	0);
	create_insn	(x=0X800FBF2);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	set_cmt	(0X800FBF6,	"wrflag",	0);
	set_cmt	(0X800FBF8,	"addr10",	0);
	create_insn	(x=0X800FC06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FC08);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FC10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800FC12,	"val",	0);
	create_insn	(x=0X800FC12);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	set_cmt	(0X800FC16,	"wrflag",	0);
	set_cmt	(0X800FC18,	"addr10",	0);
	create_insn	(0X800FC20);
	create_insn	(x=0X800FC22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FC2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FC2E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FC32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FC36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FC38);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FC40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FC42);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FC44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FC4E);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800FC54);
	op_hex		(x,	1);
	create_insn	(x=0X800FC5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FC5E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	set_cmt	(0X800FC6C,	"wrflag",	0);
	set_cmt	(0X800FC6E,	"val",	0);
	set_cmt	(0X800FC70,	"addr10",	0);
	create_insn	(x=0X800FC70);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800FC76,	"wrflag",	0);
	set_cmt	(0X800FC78,	"val",	0);
	set_cmt	(0X800FC7A,	"addr10",	0);
	create_insn	(x=0X800FC7A);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(0X800FC82);
	set_cmt	(0X800FC8A,	"wrflag",	0);
	set_cmt	(0X800FC8C,	"val",	0);
	set_cmt	(0X800FC8E,	"addr10",	0);
	create_insn	(x=0X800FC8E);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800FC94,	"wrflag",	0);
	set_cmt	(0X800FC96,	"val",	0);
	set_cmt	(0X800FC98,	"addr10",	0);
	create_insn	(x=0X800FC98);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(0X800FCA0);
	create_insn	(x=0X800FCB0);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	set_cmt	(0X800FCBC,	"wrflag",	0);
	set_cmt	(0X800FCBE,	"val",	0);
	set_cmt	(0X800FCC0,	"addr10",	0);
	create_insn	(x=0X800FCC0);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800FCC6,	"wrflag",	0);
	set_cmt	(0X800FCC8,	"val",	0);
	set_cmt	(0X800FCCA,	"addr10",	0);
	create_insn	(x=0X800FCCA);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(x=0X800FCE0);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	set_cmt	(0X800FCEC,	"wrflag",	0);
	set_cmt	(0X800FCEE,	"val",	0);
	set_cmt	(0X800FCF0,	"addr10",	0);
	create_insn	(x=0X800FCF0);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800FCF6,	"wrflag",	0);
	set_cmt	(0X800FCF8,	"val",	0);
	set_cmt	(0X800FCFA,	"addr10",	0);
	create_insn	(x=0X800FCFA);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(0X800FD02);
	set_cmt	(0X800FD0A,	"wrflag",	0);
	set_cmt	(0X800FD0C,	"val",	0);
	set_cmt	(0X800FD0E,	"addr10",	0);
	create_insn	(x=0X800FD0E);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800FD14,	"wrflag",	0);
	set_cmt	(0X800FD16,	"val",	0);
	set_cmt	(0X800FD18,	"addr10",	0);
	create_insn	(x=0X800FD18);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(0X800FD20);
	create_insn	(0X800FD22);
	set_cmt	(0X800FD2A,	"wrflag",	0);
	set_cmt	(0X800FD2C,	"val",	0);
	set_cmt	(0X800FD2E,	"addr10",	0);
	create_insn	(x=0X800FD2E);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800FD34,	"wrflag",	0);
	set_cmt	(0X800FD36,	"val",	0);
	set_cmt	(0X800FD38,	"addr10",	0);
	create_insn	(x=0X800FD38);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(0X800FD40);
	set_cmt	(0X800FD48,	"wrflag",	0);
	set_cmt	(0X800FD4A,	"val",	0);
	set_cmt	(0X800FD4C,	"addr10",	0);
	create_insn	(x=0X800FD4C);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800FD52,	"wrflag",	0);
	set_cmt	(0X800FD54,	"val",	0);
	set_cmt	(0X800FD56,	"addr10",	0);
	create_insn	(x=0X800FD56);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(0X800FD5E);
	create_insn	(x=0X800FD6E);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	set_cmt	(0X800FD7A,	"wrflag",	0);
	set_cmt	(0X800FD7C,	"val",	0);
	set_cmt	(0X800FD7E,	"addr10",	0);
	create_insn	(x=0X800FD7E);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800FD84,	"wrflag",	0);
	set_cmt	(0X800FD86,	"val",	0);
	set_cmt	(0X800FD88,	"addr10",	0);
	create_insn	(x=0X800FD88);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(x=0X800FD9E);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	set_cmt	(0X800FDAA,	"wrflag",	0);
	set_cmt	(0X800FDAC,	"val",	0);
	set_cmt	(0X800FDAE,	"addr10",	0);
	create_insn	(x=0X800FDAE);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800FDB4,	"wrflag",	0);
	set_cmt	(0X800FDB6,	"val",	0);
	set_cmt	(0X800FDB8,	"addr10",	0);
	create_insn	(x=0X800FDB8);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(0X800FDC0);
	set_cmt	(0X800FDC8,	"wrflag",	0);
	set_cmt	(0X800FDCA,	"val",	0);
	set_cmt	(0X800FDCC,	"addr10",	0);
	create_insn	(x=0X800FDCC);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800FDD2,	"wrflag",	0);
	set_cmt	(0X800FDD4,	"val",	0);
	set_cmt	(0X800FDD6,	"addr10",	0);
	create_insn	(x=0X800FDD6);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800FDDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FDDE);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FDE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FDE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FDE8);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FE14);
	op_hex		(x,	1);
	create_insn	(x=0X800FE18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FE1A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FE1E);
	op_hex		(x,	1);
	create_insn	(x=0X800FE26);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800FE2C);
	op_hex		(x,	1);
	create_insn	(x=0X800FE30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FE32);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FE36);
	op_hex		(x,	1);
	create_insn	(x=0X800FE40);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800FE4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FE4E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FE56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FE5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FE6C);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800FE72);
	op_hex		(x,	1);
	create_insn	(x=0X800FE78);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800FE98);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(0X800FEAE);
	create_insn	(x=0X800FEC0);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(x=0X800FEC6);
	op_hex		(x,	1);
	create_insn	(x=0X800FEDC);
	op_hex		(x,	1);
	create_insn	(0X800FEE6);
	create_insn	(0X800FEE8);
	create_insn	(0X800FEEE);
	create_insn	(x=0X800FEF2);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800FEFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FEFC);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FF04);
	op_hex		(x,	1);
	create_dword	(x=0X800FF10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FF14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FF18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FF1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FF20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800FF24);
	op_hex		(x,	1);
	create_insn	(x=0X800FF2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF30);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FF38);
	op_hex		(x,	1);
	create_insn	(x=0X800FF42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF50);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X800FF5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF60);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X800FF66);
	set_name	(0X800FF66,	"fpga_set_receiver_id");
	create_insn	(x=0X800FF9C);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800FFA4);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800FFAC);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800FFB4);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(0X800FFC2);
	create_insn	(x=0X800FFC6);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800FFCE);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800FFD6);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800FFDE);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800FFE6);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800FFF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FFF4);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X800FFFA);
	create_insn	(x=0X800FFFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010000);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010006);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X801000E);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X8010016);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X801001A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801001C);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010022);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010026);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X801002C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801002E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010034);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801003A);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X8010040);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010042);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010048);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801004E);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X8010054);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010056);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801005C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010062);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X8010068);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801006A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010070);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X801007E);
	create_insn	(x=0X8010082);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X801008A);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X801008E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010090);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010096);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80100A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80100A4);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80100AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80100B0);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X80100B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80100B8);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80100BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80100C4);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X80100CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80100CC);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80100D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80100DE);
	create_insn	(x=0X80100E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80100E2);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80100E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80100F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80100F2);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X80100F8);
	create_insn	(x=0X8010104);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010106);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010110);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010112);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010116);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010118);
	op_plain_offset	(x,	1,	0X20001DBC);
	op_plain_offset	(x,	129,	0X20001DBC);
	create_insn	(x=0X8010126);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010128);
	op_plain_offset	(x,	1,	0X20001DBC);
	op_plain_offset	(x,	129,	0X20001DBC);
	create_insn	(0X801015C);
	create_insn	(0X801018C);
	create_insn	(x=0X80101D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80101D2);
	op_plain_offset	(x,	1,	0X20001DBC);
	op_plain_offset	(x,	129,	0X20001DBC);
	create_insn	(0X80101DC);
	create_insn	(x=0X8010218);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801021A);
	op_plain_offset	(x,	1,	0X20001DBC);
	op_plain_offset	(x,	129,	0X20001DBC);
	create_insn	(0X8010220);
	create_insn	(0X8010222);
	create_insn	(x=0X8010226);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010228);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801022E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010230);
	op_plain_offset	(x,	1,	0X20001DBC);
	op_plain_offset	(x,	129,	0X20001DBC);
	create_insn	(0X8010238);
	create_insn	(x=0X801023E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801024A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010254);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010256);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801025E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010260);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010268);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801026A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010272);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010274);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010282);
	op_stkvar	(x,	1);
	create_insn	(x=0X801028C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010296);
	op_stkvar	(x,	1);
	create_insn	(x=0X80102A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80102AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80102B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80102BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80102C8);
	op_stkvar	(x,	1);
	create_insn	(0X80102D0);
	create_insn	(x=0X80102F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80102FC);
	op_stkvar	(x,	1);
	make_array	(0X801030A,	0X2);
	create_dword	(x=0X801030C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010310);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010314);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010318);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801031C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8010320);
	create_dword	(0X8010324);
	create_dword	(0X8010328);
	create_dword	(0X801032C);
	create_insn	(0X8010330);
	create_insn	(x=0X8010332);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010334);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X801033A);
	create_insn	(x=0X801033C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801033E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010352);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010354);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801035A);
	op_stkvar	(x,	1);
	create_insn	(x=0X801035E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010366);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010372);
	create_insn	(x=0X801038C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801038E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010392);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801039A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801039C);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80103A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80103A4);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X80103BE);
	create_insn	(0X80103D0);
	create_insn	(x=0X80103E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80103E2);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80103E6);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80103EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80103F0);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80103F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80103F8);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X801040A);
	create_insn	(0X8010414);
	create_insn	(x=0X8010426);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010432);
	create_insn	(0X8010444);
	create_insn	(0X801044C);
	create_insn	(0X8010454);
	create_insn	(0X8010456);
	create_insn	(x=0X801045E);
	op_hex		(x,	1);
	create_insn	(x=0X801047A);
	op_hex		(x,	1);
	create_insn	(x=0X8010496);
	op_hex		(x,	1);
	create_insn	(x=0X80104B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80104BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80104CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80104D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X80104DA);
	op_stkvar	(x,	1);
	create_insn	(0X80104FA);
	create_insn	(x=0X8010502);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010522);
	op_stkvar	(x,	1);
	set_cmt	(0X801053E,	"wrflag",	0);
	set_cmt	(0X8010540,	"addr10",	0);
	create_insn	(x=0X8010540);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(0X801054E);
	set_cmt	(0X8010560,	"wrflag",	0);
	set_cmt	(0X8010562,	"addr10",	0);
	create_insn	(x=0X8010562);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X801056A,	"wrflag",	0);
	create_insn	(0X801056A);
	set_cmt	(0X801056C,	"val",	0);
	set_cmt	(0X801056E,	"addr10",	0);
	create_insn	(x=0X801056E);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(0X8010576);
	set_cmt	(0X8010586,	"wrflag",	0);
	set_cmt	(0X8010588,	"addr10",	0);
	create_insn	(x=0X8010588);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X801059C);
	op_stkvar	(x,	1);
	create_insn	(x=0X80105AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80105B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80105B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80105BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80105C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80105D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80105DA);
	create_insn	(x=0X80105DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80105E6);
	create_insn	(x=0X80105F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80105FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010600);
	create_insn	(x=0X8010602);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010606);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010610);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010614);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X8010624,	"wrflag",	0);
	create_insn	(0X8010624);
	set_cmt	(0X8010626,	"val",	0);
	set_cmt	(0X8010628,	"addr10",	0);
	create_insn	(x=0X8010628);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X8010630,	"wrflag",	0);
	create_insn	(0X8010630);
	set_cmt	(0X8010632,	"val",	0);
	set_cmt	(0X8010634,	"addr10",	0);
	create_insn	(x=0X8010634);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X801063C,	"wrflag",	0);
	create_insn	(0X801063C);
	set_cmt	(0X801063E,	"val",	0);
	set_cmt	(0X8010640,	"addr10",	0);
	create_insn	(x=0X8010640);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X801064C);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X8010656);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010662);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010668);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X801067C);
	create_insn	(x=0X8010684);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010686);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80106A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80106A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80106A8);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80106B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80106B2);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80106B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80106B8);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80106C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80106C2);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80106CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80106CC);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80106CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80106D0);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X80106D4);
	create_insn	(x=0X80106D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80106D8);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80106DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80106DC);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80106E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80106E4);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80106E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80106EA);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010702);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010712);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010714);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801071A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801071C);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801071E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010720);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010724);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010726);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_dword	(x=0X801072C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010730);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8010734);
	create_dword	(0X8010738);
	create_dword	(0X801073C);
	create_dword	(0X8010740);
	create_dword	(0X8010744);
	create_dword	(0X8010748);
	create_strlit	(0X801074C,	0X8010765);
	set_name	(0X801074C,	"a2x2x2x2x2x_0");
	create_byte	(0X8010765);
	make_array	(0X8010765,	0X3);
	create_dword	(x=0X8010768);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801076C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X8010770,	0X801077B);
	set_name	(0X8010770,	"aBase2x");
	create_byte	(0X801077B);
	create_dword	(x=0X801077C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010780);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010784);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8010788);
	create_insn	(0X801078A);
	create_insn	(0X801078C);
	create_insn	(0X801078E);
	create_insn	(x=0X8010792);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010798);
	create_insn	(x=0X801079A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80107A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80107A2);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80107AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80107AC);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80107B0);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80107B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80107BA);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80107C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80107C2);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80107CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80107D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80107D2);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80107D6);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80107DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80107E0);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80107E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80107E8);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80107F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80107F2);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80107F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80107F6);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80107F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80107FA);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010804);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010806);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801080A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801081C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801081E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010822);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801082A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801082C);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X8010836);
	create_insn	(x=0X8010838);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801083A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010842);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010844);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X801084E);
	create_insn	(x=0X8010850);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010852);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801085A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801085C);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010864);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010866);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010870);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010872);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010876);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010878);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801087C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801087E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010886);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010890);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801089C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801089E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80108A4);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80108A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80108AA);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80108B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80108B4);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80108BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80108BC);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80108C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80108CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80108CE);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80108D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80108D6);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80108D8);
	op_hex		(x,	1);
	create_insn	(x=0X80108DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80108DE);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X80108EC);
	create_insn	(0X80108FA);
	create_insn	(x=0X8010904);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010914);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010916);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010922);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010924);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801092A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801092C);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010934);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010936);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010942);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010944);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801094C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801094E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010956);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010958);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801096C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801096E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X801097C);
	create_insn	(x=0X8010986);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010988);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010992);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010994);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801099C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801099E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80109A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80109A6);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X80109AA);
	create_insn	(x=0X80109AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80109B0);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80109BE);
	op_hex		(x,	1);
	create_insn	(x=0X80109D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80109D2);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X80109D8);
	create_insn	(x=0X80109DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80109DE);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80109EC);
	op_hex		(x,	1);
	create_insn	(x=0X80109FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010A00);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X8010A06);
	create_insn	(x=0X8010A08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010A0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010A12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010A14);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X8010A20);
	create_insn	(x=0X8010A24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010A36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010A38);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010A3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010A40);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X8010A52);
	create_insn	(x=0X8010A54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010A56);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X8010A62);
	create_insn	(x=0X8010A64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010A66);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X8010A76);
	create_insn	(x=0X8010A88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010A8A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X8010A90);
	set_name	(0X8010A90,	"init_unk800FE7E_config");
	create_insn	(x=0X8010AA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010AAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010AB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010ABC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010AC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010ACA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010AD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010AD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010AD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010AE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010AE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010AE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010AEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X8010AF4,	"partial packet_hw_receive(), for debug purposes",	1);
	create_insn	(x=0X8010AF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010AFC);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010B00);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010B04);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010B06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010B08);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010B0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010B0C);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010B12);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010B14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010B16);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010B1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010B22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010B34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010B36);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010B38);
	op_hex		(x,	1);
	create_insn	(x=0X8010B3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010B3E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010B42);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010B44);
	op_hex		(x,	1);
	create_insn	(x=0X8010B48);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010B4C);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010B4E);
	op_hex		(x,	1);
	create_insn	(x=0X8010B56);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010B5A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010B5C);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010B60);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010B66);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010B6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010B6C);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010B70);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010B7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010B80);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010B86);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_dword	(x=0X8010B8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010B90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X8010B94,	0X8010BB8);
	set_name	(0X8010B94,	"a2x2x2x2x2xD");
	create_dword	(0X8010BB8);
	create_dword	(x=0X8010BBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010BC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010BC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010BC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010BCC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010BD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010BD4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010BD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010BDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010BE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010BE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010BE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X8010BEC,	0X8010C0B);
	set_name	(0X8010BEC,	"aId2x2x2x2x2x");
	create_byte	(0X8010C0B);
	create_insn	(0X8010C0C);
	create_insn	(x=0X8010C0E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010C12);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010C16);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010C1C);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010C20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010C24);
	op_hex		(x,	1);
	create_insn	(x=0X8010C28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010C2E);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X8010C32);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X8010C36);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(0X8010C3C);
	create_insn	(x=0X8010C58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010C5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010C64);
	create_insn	(x=0X8010C78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010C7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010C84);
	create_insn	(0X8010C86);
	create_insn	(x=0X8010C88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010C96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010C98);
	op_plain_offset	(x,	1,	0X20001DBC);
	op_plain_offset	(x,	129,	0X20001DBC);
	create_insn	(x=0X8010CA2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010CA4);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010CA6);
	op_hex		(x,	1);
	create_insn	(x=0X8010CAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010CAC);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010CB0);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010CB6);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010CBC);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010CBE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010CC0);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010CD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010CDE);
	create_insn	(x=0X8010CEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010CEE);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X8010CF4);
	create_insn	(x=0X8010CF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010CFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010D12);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D16);
	op_hex		(x,	1);
	create_insn	(x=0X8010D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010D20);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D42);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010D50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010D78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010D80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010D84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010D8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010D96);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010DA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010DAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010DB4);
	create_insn	(x=0X8010DBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010DC4);
	create_insn	(x=0X8010DCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010DD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010DDA);
	op_plain_offset	(x,	1,	0X20001EA0);
	op_plain_offset	(x,	129,	0X20001EA0);
	create_insn	(x=0X8010DEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010DF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010DFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010E08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010E0A);
	op_plain_offset	(x,	1,	0X20001FB0);
	op_plain_offset	(x,	129,	0X20001FB0);
	create_insn	(0X8010E1C);
	create_insn	(x=0X8010E20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010E2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010E32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X8010E4C,	"switch 7 cases ",	0);
	set_cmt	(0X8010E50,	"switch jump",	0);
	set_cmt	(0X8010E54,	"jump table for switch statement",	0);
	create_byte	(0X8010E54);
	set_name	(0X8010E54,	"jpt_8010E50");
	create_byte	(0X8010E55);
	create_byte	(0X8010E56);
	create_byte	(0X8010E57);
	create_byte	(0X8010E58);
	create_byte	(0X8010E59);
	create_byte	(0X8010E5A);
	set_cmt	(0X8010E5C,	"jumptable 08010E50 case 0",	1);
	create_insn	(0X8010E5C);
	set_cmt	(0X8010E5E,	"jumptable 08010E50 case 1",	1);
	create_insn	(0X8010E5E);
	create_insn	(x=0X8010E66);
	op_hex		(x,	1);
	set_cmt	(0X8010E6E,	"jumptable 08010E50 case 2",	1);
	create_insn	(0X8010E6E);
	set_cmt	(0X8010E7C,	"jumptable 08010E50 case 3",	1);
	create_insn	(0X8010E7C);
	create_insn	(x=0X8010E8A);
	op_hex		(x,	1);
	set_cmt	(0X8010E92,	"jumptable 08010E50 case 4",	1);
	create_insn	(0X8010E92);
	create_insn	(x=0X8010EA0);
	op_hex		(x,	1);
	set_cmt	(0X8010EA8,	"jumptable 08010E50 case 5",	1);
	create_insn	(0X8010EA8);
	create_insn	(x=0X8010EB6);
	op_hex		(x,	1);
	set_cmt	(0X8010EBE,	"jumptable 08010E50 case 6",	1);
	create_insn	(0X8010EBE);
	create_insn	(x=0X8010ECC);
	op_hex		(x,	1);
	set_cmt	(0X8010ED4,	"jumptable 08010E50 default case",	1);
	set_name	(0X8010ED4,	"def_8010E50");
	create_insn	(x=0X8010EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010EEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010EEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010EF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010EFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010F08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010F0A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010F12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010F14);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X8010F20);
	create_insn	(x=0X8010F24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010F26);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X8010F32);
	create_insn	(x=0X8010F36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010F38);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010F3A);
	op_hex		(x,	1);
	create_insn	(0X8010F44);
	create_insn	(x=0X8010F48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010F4A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X8010F50);
	create_insn	(x=0X8010F56);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010F5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010F5E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010F62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010F64);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010F68);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010F6C);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010F78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010F7A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010F94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010F96);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010FA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010FA2);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010FA4);
	op_hex		(x,	1);
	create_insn	(x=0X8010FAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010FB0);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010FB2);
	op_hex		(x,	1);
	create_insn	(x=0X8010FBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010FBE);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010FC0);
	op_hex		(x,	1);
	create_insn	(x=0X8010FCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010FCC);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010FE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010FE2);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8010FF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010FF2);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011004);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011008);
	op_hex		(x,	1);
	create_insn	(x=0X801100E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X8011014);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011018);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801101C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011020);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011024);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011028);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801102C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011030);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011034);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011038);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801103C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011040);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011044);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011048);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X801104C);
	make_array	(0X801104C,	0X2);
	create_dword	(x=0X8011054);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011058);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X801105C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011060);
	op_hex		(x,	1);
	create_insn	(x=0X8011064);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801106E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011072);
	op_hex		(x,	1);
	create_insn	(x=0X8011078);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801107E);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X8011080);
	op_hex		(x,	1);
	create_insn	(x=0X8011086);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X8011088);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801108A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801108C);
	op_hex		(x,	1);
	create_insn	(x=0X8011096);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X8011098);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801109A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80110A6);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X80110AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80110AE);
	op_hex		(x,	1);
	create_insn	(x=0X80110B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80110B8);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X80110BA);
	op_hex		(x,	1);
	create_insn	(x=0X80110BE);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X80110C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80110C8);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X80110CA);
	op_hex		(x,	1);
	create_insn	(x=0X80110D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80110D2);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X80110D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80110D8);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X80110DA);
	op_hex		(x,	1);
	create_insn	(x=0X80110DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80110E0);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X80110E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80110EA);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X80110EC);
	op_hex		(x,	1);
	create_insn	(x=0X80110F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80110F4);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X80110F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80110FA);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X80110FC);
	op_hex		(x,	1);
	create_insn	(x=0X8011100);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011102);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X801110A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801110C);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X801110E);
	op_hex		(x,	1);
	create_insn	(x=0X8011114);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011116);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X801111A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801111C);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X801111E);
	op_hex		(x,	1);
	create_insn	(x=0X8011122);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011124);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X801112A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801112C);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X8011132);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011134);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X8011136);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011138);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011146);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011148);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011158);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801115A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011162);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801116A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011176);
	create_insn	(x=0X801117E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011186);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X801118C);
	create_insn	(x=0X801118E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801119E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80111A0);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80111A8);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80111BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80111BC);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X80111C2);
	create_insn	(x=0X80111C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80111CA);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80111CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80111D0);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80111D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80111D8);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80111DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80111E0);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80111E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80111E6);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80111EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80111F0);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011204);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011206);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801120A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011214);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011220);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011224);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011228);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011230);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011232);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011236);
	op_stkvar	(x,	1);
	create_insn	(x=0X801123A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011242);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011244);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011248);
	op_stkvar	(x,	1);
	create_insn	(x=0X801124C);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011250);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011254);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X8011264);
	create_insn	(x=0X8011266);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011270);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011274);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011278);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801128C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801128E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X8011296);
	set_name	(0X8011296,	"tcx_config_80105FA");
	create_insn	(x=0X8011298);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801129A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80112A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80112A8);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80112AC);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80112B0);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80112B4);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80112BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80112BE);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80112C2);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80112D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80112D8);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X80112DE);
	set_name	(0X80112DE,	"set_transciever_flag_20001A28_E");
	create_insn	(x=0X80112E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80112E2);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80112E4);
	op_hex		(x,	1);
	create_insn	(x=0X80112EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80112EE);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80112F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80112F4);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80112F6);
	op_hex		(x,	1);
	create_insn	(x=0X80112FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80112FC);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011300);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X8011300,	"set_transciever_flag_20001A28_D");
	create_insn	(x=0X8011302);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011308);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801130A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801130E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011310);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011318);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X8011318,	"set_transciever_flag_20001A28_B");
	create_insn	(x=0X801131A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011320);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011322);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011326);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011328);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011330);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X8011330,	"set_transciever_flag_20001A28_C");
	create_insn	(x=0X8011332);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011338);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801133A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801133E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011340);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011348);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X8011348,	"set_transciever_attenuation");
	create_insn	(x=0X801134A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011350);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X8011350,	"get_transciever_attenuation");
	create_insn	(x=0X8011352);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011358);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X8011358,	"set_transciever_flag_20001A28_A");
	create_insn	(x=0X801135A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011360);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011362);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011366);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011368);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011370);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011372);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011378);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801137A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011380);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011382);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801138E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011390);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8011396);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011398);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(0X80113A0);
	create_insn	(x=0X80113A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80113AC);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80113B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80113B6);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80113BA);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80113CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80113D0);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80113D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80113D8);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	make_array	(0X80113DE,	0X2);
	create_dword	(x=0X80113E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80113E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80113E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80113EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80113F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X80113F4,	0X8011415);
	set_name	(0X80113F4,	"a2x2x2x2x2x");
	create_byte	(0X8011415);
	make_array	(0X8011415,	0X3);
	create_insn	(0X8011418);
	create_insn	(0X80115A2);
	create_insn	(x=0X80115E4);
	op_hex		(x,	1);
	create_insn	(x=0X80115F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80115FC);
	op_hex		(x,	1);
	create_insn	(x=0X801160A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011618);
	op_hex		(x,	1);
	create_insn	(x=0X801162A);
	op_stkvar	(x,	1);
	create_insn	(x=0X801162C);
	op_stkvar	(x,	1);
	create_insn	(x=0X801162E);
	op_hex		(x,	1);
	create_insn	(x=0X801163C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011646);
	op_hex		(x,	1);
	create_insn	(x=0X801165C);
	op_hex		(x,	1);
	create_insn	(x=0X80116CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X801173A);
	op_stkvar	(x,	1);
	create_insn	(x=0X80117A8);
	op_stkvar	(x,	1);
	create_insn	(0X80117B4);
	create_insn	(x=0X80117CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80117DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80117DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80117E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80117E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X80117EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80117EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80117F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80117F4);
	op_stkvar	(x,	1);
	create_dword	(0X8011820);
	create_dword	(0X8011824);
	create_dword	(0X8011828);
	create_dword	(0X801182C);
	create_insn	(0X8011830);
	create_insn	(x=0X8011860);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011862);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011864);
	op_stkvar	(x,	1);
	create_insn	(x=0X80118A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80118A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80118AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80118B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80118BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80118C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80118C2);
	op_stkvar	(x,	1);
	create_insn	(0X80118D0);
	create_insn	(0X8011972);
	create_insn	(x=0X801197C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011980);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011986);
	op_hex		(x,	1);
	create_insn	(x=0X801198C);
	op_hex		(x,	1);
	create_insn	(0X80119A0);
	create_insn	(0X80119AA);
	create_insn	(0X80119B4);
	create_insn	(0X80119BE);
	create_insn	(x=0X80119CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80119CC);
	op_plain_offset	(x,	1,	0X20002810);
	op_plain_offset	(x,	129,	0X20002810);
	create_insn	(x=0X80119D6);
	op_plain_offset	(x,	1,	0X20002851);
	op_plain_offset	(x,	129,	0X20002851);
	create_insn	(x=0X80119DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80119DC);
	op_plain_offset	(x,	1,	0X2000283C);
	op_plain_offset	(x,	129,	0X2000283C);
	create_insn	(x=0X80119EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80119EC);
	op_plain_offset	(x,	1,	0X20002851);
	op_plain_offset	(x,	129,	0X20002851);
	create_insn	(x=0X80119F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80119F4);
	op_plain_offset	(x,	1,	0X20002851);
	op_plain_offset	(x,	129,	0X20002851);
	create_insn	(x=0X8011A22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011A24);
	op_plain_offset	(x,	1,	0X20002851);
	op_plain_offset	(x,	129,	0X20002851);
	create_insn	(x=0X8011A52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011A5C);
	op_plain_offset	(x,	1,	0X20002810);
	op_plain_offset	(x,	129,	0X20002810);
	create_insn	(x=0X8011A5E);
	op_plain_offset	(x,	1,	0X20002810);
	op_plain_offset	(x,	129,	0X20002810);
	create_insn	(x=0X8011A60);
	op_plain_offset	(x,	1,	0X20002810);
	op_plain_offset	(x,	129,	0X20002810);
	create_insn	(x=0X8011A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011A6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011A78);
	op_plain_offset	(x,	1,	0X20002810);
	op_plain_offset	(x,	129,	0X20002810);
	create_insn	(x=0X8011A7A);
	op_plain_offset	(x,	1,	0X20002810);
	op_plain_offset	(x,	129,	0X20002810);
	create_insn	(x=0X8011A7C);
	op_plain_offset	(x,	1,	0X20002810);
	op_plain_offset	(x,	129,	0X20002810);
	create_insn	(x=0X8011A86);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011A90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011A92);
	op_plain_offset	(x,	1,	0X2000283C);
	op_plain_offset	(x,	129,	0X2000283C);
	create_insn	(x=0X8011A96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011A9A);
	op_plain_offset	(x,	1,	0X2000283C);
	op_plain_offset	(x,	129,	0X2000283C);
	create_insn	(x=0X8011AA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011AA2);
	op_plain_offset	(x,	1,	0X2000283C);
	op_plain_offset	(x,	129,	0X2000283C);
	create_insn	(x=0X8011AA4);
	op_plain_offset	(x,	1,	0X2000283C);
	op_plain_offset	(x,	129,	0X2000283C);
	create_insn	(x=0X8011AAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011AB0);
	op_plain_offset	(x,	1,	0X20002810);
	op_plain_offset	(x,	129,	0X20002810);
	create_insn	(x=0X8011AB2);
	op_plain_offset	(x,	1,	0X20002810);
	op_plain_offset	(x,	129,	0X20002810);
	create_insn	(x=0X8011AB4);
	op_plain_offset	(x,	1,	0X20002810);
	op_plain_offset	(x,	129,	0X20002810);
	create_insn	(x=0X8011AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011AC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011AC6);
	op_plain_offset	(x,	1,	0X2000283C);
	op_plain_offset	(x,	129,	0X2000283C);
	create_insn	(x=0X8011ACC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011ACE);
	op_plain_offset	(x,	1,	0X2000283C);
	op_plain_offset	(x,	129,	0X2000283C);
	create_insn	(x=0X8011AD0);
	op_plain_offset	(x,	1,	0X2000283C);
	op_plain_offset	(x,	129,	0X2000283C);
	create_insn	(x=0X8011AD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011ADA);
	op_plain_offset	(x,	1,	0X20002810);
	op_plain_offset	(x,	129,	0X20002810);
	create_insn	(x=0X8011AE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011AE2);
	op_plain_offset	(x,	1,	0X20002810);
	op_plain_offset	(x,	129,	0X20002810);
	create_insn	(x=0X8011AE6);
	op_plain_offset	(x,	1,	0X20002810);
	op_plain_offset	(x,	129,	0X20002810);
	create_insn	(x=0X8011AF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011AF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011AFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011B00);
	op_plain_offset	(x,	1,	0X20002810);
	op_plain_offset	(x,	129,	0X20002810);
	create_insn	(x=0X8011B0A);
	op_stkvar	(x,	1);
	create_insn	(0X8011B38);
	create_insn	(0X8011B4E);
	create_insn	(0X8011B64);
	create_insn	(0X8011B7A);
	create_dword	(0X8011B88);
	create_dword	(0X8011B8C);
	create_dword	(0X8011B90);
	create_dword	(0X8011B94);
	create_dword	(0X8011B98);
	create_dword	(0X8011B9C);
	create_dword	(x=0X8011BA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011BA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011BA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8011BAC);
	create_insn	(0X8011BB0);
	set_name	(0X8011BB0,	"packet_sub_8011BB0");
	create_insn	(x=0X8011BD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011BDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011BE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011BE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011BF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011BF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011BFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011C00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011C0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011C0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011C0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011C16);
	create_insn	(x=0X8011C42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011C4A);
	create_insn	(x=0X8011C54);
	op_hex		(x,	1);
	create_insn	(0X8011C6E);
	create_insn	(x=0X8011C70);
	op_hex		(x,	1);
	create_insn	(0X8011C8E);
	create_insn	(0X8011C9A);
	create_insn	(x=0X8011CC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011CCC);
	create_insn	(x=0X8011CD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011CDE);
	create_insn	(x=0X8011CFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011D0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011D14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011D1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011D20);
	op_plain_offset	(x,	1,	0X200024F8);
	op_plain_offset	(x,	129,	0X200024F8);
	create_insn	(x=0X8011D2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011D36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011D3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011D50);
	create_insn	(0X8011D58);
	create_insn	(x=0X8011D5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011D62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011D6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011D6E);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X8011D74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011D78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011D7A);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X8011D82);
	op_plain_offset	(x,	1,	0X200001AC);
	op_plain_offset	(x,	129,	0X200001AC);
	create_insn	(x=0X8011D84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011D86);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X8011D8E);
	op_plain_offset	(x,	1,	0X200001AC);
	op_plain_offset	(x,	129,	0X200001AC);
	create_insn	(x=0X8011D92);
	op_plain_offset	(x,	1,	0X200001AC);
	op_plain_offset	(x,	129,	0X200001AC);
	create_insn	(0X8011D96);
	create_insn	(x=0X8011D9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011D9E);
	op_plain_offset	(x,	1,	0X200001AC);
	op_plain_offset	(x,	129,	0X200001AC);
	create_insn	(x=0X8011DA0);
	op_plain_offset	(x,	1,	0X200001AC);
	op_plain_offset	(x,	129,	0X200001AC);
	create_insn	(x=0X8011DA2);
	op_plain_offset	(x,	1,	0X200001AC);
	op_plain_offset	(x,	129,	0X200001AC);
	create_insn	(x=0X8011DA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011DAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011DB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011DCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011DD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011DE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011DE2);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X8011DEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011DEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011DF0);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X8011DF6);
	op_plain_offset	(x,	1,	0X200001B4);
	op_plain_offset	(x,	129,	0X200001B4);
	create_insn	(x=0X8011DF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011DFA);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X8011E02);
	op_plain_offset	(x,	1,	0X200001B4);
	op_plain_offset	(x,	129,	0X200001B4);
	create_insn	(x=0X8011E04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011E06);
	op_plain_offset	(x,	1,	0X20001A88);
	op_plain_offset	(x,	129,	0X20001A88);
	create_insn	(x=0X8011E0E);
	op_plain_offset	(x,	1,	0X200001B4);
	op_plain_offset	(x,	129,	0X200001B4);
	create_insn	(0X8011E12);
	create_insn	(x=0X8011E16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011E1A);
	op_plain_offset	(x,	1,	0X200001B4);
	op_plain_offset	(x,	129,	0X200001B4);
	create_insn	(x=0X8011E1C);
	op_plain_offset	(x,	1,	0X200001B4);
	op_plain_offset	(x,	129,	0X200001B4);
	create_insn	(x=0X8011E1E);
	op_plain_offset	(x,	1,	0X200001B4);
	op_plain_offset	(x,	129,	0X200001B4);
	create_insn	(x=0X8011E20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011E26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011E2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011E46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011E50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X8011E5A,	0X2);
	create_dword	(x=0X8011E5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011E60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011E64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011E68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011E6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011E70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011E74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011E78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011E7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011E80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011E84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011E88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011E8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011E90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8011E94);
	create_insn	(0X8011EA4);
	create_insn	(x=0X8011EAC);
	op_stkvar	(x,	1);
	create_insn	(0X8011EBA);
	create_insn	(0X8011EBE);
	create_insn	(x=0X8011EC0);
	op_stkvar	(x,	1);
	create_insn	(0X8011EC6);
	create_insn	(x=0X8011EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011ED2);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011EE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011EE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011EF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011EF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011F04);
	create_insn	(x=0X8011F0C);
	op_stkvar	(x,	1);
	create_insn	(0X8011F1A);
	create_insn	(0X8011F1E);
	create_insn	(x=0X8011F20);
	op_stkvar	(x,	1);
	create_insn	(0X8011F26);
	create_insn	(x=0X8011F28);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011F32);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011F46);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011F48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011F50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011F58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011F64);
	create_insn	(x=0X8011F6C);
	op_stkvar	(x,	1);
	create_insn	(0X8011F7A);
	create_insn	(0X8011F7E);
	create_insn	(x=0X8011F80);
	op_stkvar	(x,	1);
	create_insn	(0X8011F86);
	create_insn	(x=0X8011F88);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011F92);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011FA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011FA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011FB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011FB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011FC4);
	create_insn	(x=0X8011FCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011FCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011FD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011FEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011FF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011FFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X801200A);
	create_insn	(x=0X8012012);
	op_stkvar	(x,	1);
	create_insn	(0X8012020);
	create_insn	(0X8012024);
	create_insn	(x=0X8012026);
	op_stkvar	(x,	1);
	create_insn	(0X801202C);
	create_insn	(x=0X801202E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012038);
	op_stkvar	(x,	1);
	create_insn	(x=0X801204C);
	op_stkvar	(x,	1);
	create_insn	(x=0X801204E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8012056);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801205E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X801206A);
	set_name	(0X801206A,	"nullsub_3");
	create_insn	(0X801206C);
	create_dword	(x=0X80120A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X80120AC);
	create_insn	(0X80120B0);
	set_name	(0X80120B0,	"packet_sub_80120B0");
	create_insn	(x=0X80120B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80120BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80120BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80120C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80120CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80120D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80120D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80120DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80120E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80120E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80120E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80120F0);
	create_insn	(x=0X80120FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012102);
	create_insn	(x=0X8012106);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8012112);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801211E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8012128);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801212A);
	op_plain_offset	(x,	1,	0X20002780);
	op_plain_offset	(x,	129,	0X20002780);
	create_insn	(x=0X801213C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8012142);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X8012148);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801214C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8012150);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8012154);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8012158);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801215C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8012160);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8012164);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8012168);
	set_name	(0X8012168,	"packet_send");
	create_insn	(x=0X8012172);
	op_hex		(x,	1);
	set_cmt	(0X8012176,	"switch 31 cases ",	0);
	set_cmt	(0X801217A,	"switch jump",	0);
	set_cmt	(0X801217E,	"jump table for switch statement",	0);
	create_byte	(0X801217E);
	set_name	(0X801217E,	"jpt_801217A");
	create_byte	(0X801217F);
	create_byte	(0X8012180);
	create_byte	(0X8012181);
	create_byte	(0X8012182);
	create_byte	(0X8012183);
	create_byte	(0X8012184);
	create_byte	(0X8012185);
	create_byte	(0X8012186);
	create_byte	(0X8012187);
	create_byte	(0X8012188);
	create_byte	(0X8012189);
	create_byte	(0X801218A);
	create_byte	(0X801218B);
	create_byte	(0X801218C);
	create_byte	(0X801218D);
	create_byte	(0X801218E);
	create_byte	(0X801218F);
	create_byte	(0X8012190);
	create_byte	(0X8012191);
	create_byte	(0X8012192);
	create_byte	(0X8012193);
	create_byte	(0X8012194);
	create_byte	(0X8012195);
	create_byte	(0X8012196);
	create_byte	(0X8012197);
	create_byte	(0X8012198);
	create_byte	(0X8012199);
	create_byte	(0X801219A);
	create_byte	(0X801219B);
	create_byte	(0X801219C);
	set_cmt	(0X801219E,	"jumptable 0801217A case 1",	1);
	create_insn	(0X801219E);
	set_cmt	(0X80121A0,	"jumptable 0801217A case 4",	1);
	set_cmt	(0X80121A2,	"jumptable 0801217A case 15",	1);
	set_cmt	(0X80121A4,	"jumptable 0801217A case 8",	1);
	set_cmt	(0X80121AE,	"jumptable 0801217A case 30",	1);
	create_insn	(0X80121AE);
	create_insn	(0X80121D8);
	set_cmt	(0X80121EA,	"jumptable 0801217A case 2",	1);
	create_insn	(0X80121EA);
	set_cmt	(0X80121EC,	"jumptable 0801217A case 6",	1);
	set_cmt	(0X80121EE,	"jumptable 0801217A case 13",	1);
	set_cmt	(0X80121F0,	"jumptable 0801217A case 14",	1);
	set_cmt	(0X80121F2,	"jumptable 0801217A case 16",	1);
	set_cmt	(0X80121F4,	"jumptable 0801217A case 20",	1);
	set_cmt	(0X80121F6,	"jumptable 0801217A case 22",	1);
	set_cmt	(0X8012202,	"jumptable 0801217A case 10",	1);
	create_insn	(0X8012202);
	set_cmt	(0X8012204,	"jumptable 0801217A case 3",	1);
	set_cmt	(0X8012206,	"jumptable 0801217A case 5",	1);
	set_cmt	(0X8012208,	"jumptable 0801217A case 11",	1);
	set_cmt	(0X801220A,	"jumptable 0801217A case 12",	1);
	set_cmt	(0X801220C,	"jumptable 0801217A case 21",	1);
	set_cmt	(0X801220E,	"jumptable 0801217A case 23",	1);
	set_cmt	(0X8012218,	"jumptable 0801217A case 17",	1);
	create_insn	(0X8012218);
	create_insn	(0X8012242);
	set_cmt	(0X8012254,	"jumptable 0801217A default case",	1);
	set_name	(0X8012254,	"def_801217A");
	create_insn	(0X8012258);
	create_insn	(0X801226C);
	create_insn	(0X8012270);
	create_insn	(x=0X8012272);
	op_hex		(x,	1);
	create_insn	(x=0X8012276);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8012282);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8012294);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80122A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80122AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80122BC);
	create_insn	(x=0X80122BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X80122D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X80122D8);
	create_insn	(0X80122EC);
	create_insn	(0X8012310);
	create_insn	(0X8012328);
	create_insn	(0X8012330);
	create_insn	(0X8012370);
	create_insn	(0X8012378);
	create_insn	(0X8012398);
	create_insn	(0X80123B0);
	create_insn	(0X80123B8);
	create_insn	(0X80123C8);
	create_insn	(0X80123CC);
	create_insn	(0X80123D0);
	create_insn	(0X80123D4);
	create_insn	(0X80123E6);
	set_cmt	(0X80123F6,	"switch 13 cases ",	0);
	set_cmt	(0X80123FA,	"switch jump",	0);
	set_cmt	(0X80123FE,	"jump table for switch statement",	0);
	create_byte	(0X80123FE);
	set_name	(0X80123FE,	"jpt_80123FA");
	create_byte	(0X80123FF);
	create_byte	(0X8012400);
	create_byte	(0X8012401);
	create_byte	(0X8012402);
	create_byte	(0X8012403);
	create_byte	(0X8012404);
	create_byte	(0X8012405);
	create_byte	(0X8012406);
	create_byte	(0X8012407);
	create_byte	(0X8012408);
	create_byte	(0X8012409);
	create_byte	(0X801240A);
	set_cmt	(0X801240C,	"jumptable 080123FA case 0",	1);
	create_insn	(0X801240C);
	set_cmt	(0X8012422,	"jumptable 080123FA case 1",	1);
	create_insn	(0X8012422);
	set_cmt	(0X8012434,	"jumptable 080123FA case 2",	1);
	create_insn	(0X8012434);
	create_insn	(0X8012454);
	set_cmt	(0X801245C,	"jumptable 080123FA case 3",	1);
	create_insn	(0X801245C);
	create_insn	(0X8012482);
	create_insn	(0X8012496);
	create_insn	(0X801249E);
	set_cmt	(0X80124A6,	"jumptable 080123FA case 4",	1);
	create_insn	(0X80124A6);
	set_cmt	(0X80124B8,	"jumptable 080123FA case 5",	1);
	create_insn	(0X80124B8);
	set_cmt	(0X80124CA,	"jumptable 080123FA case 6",	1);
	create_insn	(0X80124CA);
	set_cmt	(0X80124DC,	"jumptable 080123FA default case",	1);
	create_insn	(0X80124DC);
	set_name	(0X80124DC,	"def_80123FA");
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_2(void) {
        auto x;
#define id x

	set_cmt	(0X80124DE,	"jumptable 080123FA case 7",	1);
	create_insn	(0X80124DE);
	set_cmt	(0X80124F0,	"jumptable 080123FA case 8",	1);
	create_insn	(0X80124F0);
	set_cmt	(0X8012502,	"jumptable 080123FA case 9",	1);
	create_insn	(0X8012502);
	set_cmt	(0X8012514,	"jumptable 080123FA case 10",	1);
	create_insn	(0X8012514);
	set_cmt	(0X8012526,	"jumptable 080123FA case 11",	1);
	create_insn	(0X8012526);
	create_insn	(0X8012550);
	create_insn	(0X8012558);
	create_insn	(0X801256A);
	set_cmt	(0X8012574,	"jumptable 080123FA case 12",	1);
	create_insn	(0X8012574);
	create_insn	(0X801259C);
	create_insn	(0X80125A4);
	create_insn	(0X80125B6);
	create_insn	(0X80125C0);
	create_insn	(0X80125CE);
	set_name	(0X80125CE,	"packet_crc_correct_cb");
	create_insn	(0X80125E6);
	set_cmt	(0X80125F2,	"len",	0);
	set_cmt	(0X80125F4,	"seed",	0);
	set_cmt	(0X80125F6,	"buf",	0);
	create_insn	(0X8012606);
	create_insn	(0X801260A);
	create_insn	(0X801260E);
	create_insn	(0X801261C);
	create_insn	(0X8012624);
	create_insn	(x=0X8012632);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012636);
	op_stkvar	(x,	1);
	create_insn	(x=0X801263C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012642);
	op_stkvar	(x,	1);
	create_insn	(0X8012658);
	create_insn	(x=0X801265E);
	op_hex		(x,	1);
	create_insn	(x=0X8012674);
	op_hex		(x,	1);
	create_insn	(x=0X801267C);
	op_hex		(x,	1);
	create_insn	(x=0X801269A);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126CA);
	op_stkvar	(x,	1);
	set_cmt	(0X80126D0,	"len",	0);
	set_cmt	(0X80126D4,	"pkt",	0);
	create_insn	(x=0X80126D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126E0);
	op_stkvar	(x,	1);
	create_insn	(0X80126E8);
	create_insn	(0X801271A);
	create_insn	(0X801273A);
	create_insn	(x=0X8012756);
	op_hex		(x,	1);
	create_insn	(x=0X8012760);
	op_hex		(x,	1);
	create_insn	(0X8012792);
	set_name	(0X8012792,	"packet_make_response");
	create_insn	(x=0X80127A2);
	op_stkvar	(x,	1);
	create_insn	(0X80127C4);
	create_insn	(x=0X80127C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127D4);
	op_stkvar	(x,	1);
	create_insn	(0X80127E2);
	create_insn	(x=0X80127F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127FE);
	op_hex		(x,	1);
	create_insn	(x=0X8012808);
	op_hex		(x,	1);
	create_insn	(x=0X8012812);
	op_stkvar	(x,	1);
	set_cmt	(0X8012822,	"len",	0);
	set_cmt	(0X8012826,	"pkt",	0);
	make_array	(0X801283A,	0X2);
	create_insn	(0X801283C);
	set_name	(0X801283C,	"compute_buf_crc8");
	create_insn	(0X8012842);
	create_insn	(x=0X801284A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X801285A);
	set_cmt	(0X801286C,	"len",	0);
	create_insn	(0X801286C);
	set_cmt	(0X801286E,	"seed",	0);
	set_cmt	(0X8012870,	"buf",	0);
	create_insn	(0X8012884);
	create_insn	(0X8012888);
	set_cmt	(0X8012898,	"len",	0);
	create_insn	(0X8012898);
	set_cmt	(0X801289A,	"seed",	0);
	set_cmt	(0X801289C,	"buf",	0);
	create_dword	(x=0X80128AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X80128B0);
	set_name	(0X80128B0,	"compute_buf_crc16");
	create_insn	(0X80128BC);
	create_insn	(0X80128BE);
	create_insn	(x=0X80128C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80128DE);
	set_name	(0X80128DE,	"packet_crc_correct");
	set_cmt	(0X80128F0,	"len",	0);
	create_insn	(0X80128F0);
	set_cmt	(0X80128F2,	"seed",	0);
	set_cmt	(0X80128F6,	"buf",	0);
	create_insn	(0X8012916);
	create_insn	(0X801291A);
	set_name	(0X801291A,	"packet_make_checksum");
	set_cmt	(0X801292A,	"len",	0);
	create_insn	(0X801292A);
	set_cmt	(0X801292C,	"seed",	0);
	set_cmt	(0X8012930,	"buf",	0);
	make_array	(0X8012946,	0X2);
	create_dword	(x=0X8012948);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X801294C);
	set_name	(0X801294C,	"cmd_exec_osd_general");
	create_insn	(x=0X801295C);
	op_hex		(x,	1);
	create_insn	(x=0X8012966);
	op_hex		(x,	1);
	set_cmt	(0X801297C,	"pkt",	0);
	create_insn	(x=0X801298A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8012990);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80129A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80129B2);
	op_hex		(x,	1);
	set_cmt	(0X80129C2,	"pkt",	0);
	create_insn	(x=0X80129D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80129F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80129FE);
	op_hex		(x,	1);
	set_cmt	(0X8012A06,	"seqctr",	0);
	set_cmt	(0X8012A08,	"len",	0);
	set_cmt	(0X8012A0A,	"payload",	0);
	create_insn	(x=0X8012A14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012A1E);
	set_name	(0X8012A1E,	"cmd_exec_osd_home");
	create_insn	(x=0X8012A2E);
	op_hex		(x,	1);
	create_insn	(x=0X8012A38);
	op_hex		(x,	1);
	set_cmt	(0X8012A4E,	"pkt",	0);
	create_insn	(x=0X8012A5E);
	op_hex		(x,	1);
	set_cmt	(0X8012A6E,	"pkt",	0);
	create_insn	(x=0X8012A7E);
	op_hex		(x,	1);
	set_cmt	(0X8012A86,	"seqctr",	0);
	set_cmt	(0X8012A88,	"len",	0);
	set_cmt	(0X8012A8A,	"payload",	0);
	create_insn	(x=0X8012A94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012A9E);
	set_name	(0X8012A9E,	"cmd_exec_flyc_unlimit_state");
	create_insn	(x=0X8012AA8);
	op_hex		(x,	1);
	set_cmt	(0X8012AB8,	"pkt",	0);
	create_insn	(0X8012AC8);
	set_name	(0X8012AC8,	"cmd_exec_set09_cmd0E");
	create_insn	(x=0X8012AD0);
	op_stkvar	(x,	1);
	create_insn	(0X8012AE2);
	set_cmt	(0X8012AEE,	"payload_len",	0);
	set_cmt	(0X8012AF0,	"payload",	0);
	set_cmt	(0X8012AF2,	"spkt",	0);
	set_cmt	(0X8012AF4,	"send_func",	0);
	create_insn	(x=0X8012AF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012AFC);
	set_name	(0X8012AFC,	"cmd_exec_set09_cmd0F");
	create_insn	(x=0X8012B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012B0A);
	op_hex		(x,	1);
	create_insn	(x=0X8012B24);
	op_stkvar	(x,	1);
	create_insn	(0X8012B28);
	create_insn	(x=0X8012B2A);
	op_stkvar	(x,	1);
	create_insn	(0X8012B2E);
	create_insn	(x=0X8012B30);
	op_hex		(x,	1);
	create_insn	(x=0X8012B4A);
	op_stkvar	(x,	1);
	create_insn	(0X8012B4E);
	create_insn	(x=0X8012B50);
	op_stkvar	(x,	1);
	create_insn	(0X8012B54);
	create_insn	(x=0X8012B56);
	op_hex		(x,	1);
	set_cmt	(0X8012B64,	"payload_len",	0);
	set_cmt	(0X8012B66,	"payload",	0);
	set_cmt	(0X8012B68,	"spkt",	0);
	set_cmt	(0X8012B6A,	"send_func",	0);
	create_insn	(x=0X8012B6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012B72);
	set_name	(0X8012B72,	"cmd_exec_set09_cmd04");
	create_insn	(x=0X8012B7A);
	op_stkvar	(x,	1);
	set_cmt	(0X8012B88,	"payload_len",	0);
	set_cmt	(0X8012B8A,	"payload",	0);
	set_cmt	(0X8012B8C,	"spkt",	0);
	set_cmt	(0X8012B8E,	"send_func",	0);
	create_insn	(x=0X8012B8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012B96);
	set_name	(0X8012B96,	"cmd_exec_set09_cmd05");
	create_insn	(x=0X8012B9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012BAA);
	op_stkvar	(x,	1);
	set_cmt	(0X8012BAE,	"payload_len",	0);
	set_cmt	(0X8012BB0,	"payload",	0);
	set_cmt	(0X8012BB2,	"spkt",	0);
	set_cmt	(0X8012BB4,	"send_func",	0);
	create_insn	(x=0X8012BB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012BBC);
	set_name	(0X8012BBC,	"cmd_exec_set09_cmd06");
	create_insn	(x=0X8012BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012BCC);
	op_hex		(x,	1);
	set_cmt	(0X8012BF0,	"val",	0);
	create_insn	(0X8012BF0);
	set_cmt	(0X8012BF2,	"addr10",	0);
	set_cmt	(0X8012BF4,	"wrflag",	0);
	set_cmt	(0X8012BFA,	"payload_len",	0);
	set_cmt	(0X8012BFC,	"payload",	0);
	set_cmt	(0X8012BFE,	"spkt",	0);
	set_cmt	(0X8012C00,	"send_func",	0);
	create_insn	(x=0X8012C00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012C08);
	set_name	(0X8012C08,	"cmd_exec_set09_cmd07");
	create_insn	(x=0X8012C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012C18);
	op_hex		(x,	1);
	create_insn	(x=0X8012C30);
	op_stkvar	(x,	1);
	create_insn	(0X8012C3E);
	create_insn	(x=0X8012C46);
	op_stkvar	(x,	1);
	set_cmt	(0X8012C4A,	"payload_len",	0);
	set_cmt	(0X8012C4C,	"payload",	0);
	set_cmt	(0X8012C4E,	"spkt",	0);
	set_cmt	(0X8012C50,	"send_func",	0);
	create_insn	(x=0X8012C50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012C58);
	set_name	(0X8012C58,	"cmd_exec_set09_cmd12");
	set_cmt	(0X8012C5E,	"atten_ctrl_type",	0);
	create_insn	(x=0X8012C60);
	op_stkvar	(x,	1);
	create_insn	(0X8012C76);
	create_insn	(x=0X8012C7E);
	op_hex		(x,	1);
	create_insn	(x=0X8012C90);
	op_hex		(x,	1);
	set_cmt	(0X8012C98,	"val",	0);
	set_cmt	(0X8012CA4,	"payload_len",	0);
	set_cmt	(0X8012CA6,	"payload",	0);
	set_cmt	(0X8012CA8,	"spkt",	0);
	set_cmt	(0X8012CAA,	"send_func",	0);
	create_insn	(x=0X8012CAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012CB2);
	set_name	(0X8012CB2,	"cmd_exec_set09_cmd13");
	create_insn	(x=0X8012CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012CC4);
	op_hex		(x,	1);
	create_insn	(x=0X8012CCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012CD4);
	op_hex		(x,	1);
	create_insn	(x=0X8012CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012CF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012D10);
	op_stkvar	(x,	1);
	set_cmt	(0X8012D14,	"payload_len",	0);
	set_cmt	(0X8012D16,	"payload",	0);
	set_cmt	(0X8012D18,	"spkt",	0);
	set_cmt	(0X8012D1A,	"send_func",	0);
	create_insn	(x=0X8012D1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012D24);
	set_name	(0X8012D24,	"cmd_exec_set00_cmd01b");
	create_insn	(x=0X8012D36);
	op_hex		(x,	1);
	create_insn	(x=0X8012D3E);
	op_hex		(x,	1);
	create_insn	(x=0X8012D50);
	op_hex		(x,	1);
	create_dword	(x=0X8012D68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8012D6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8012D70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8012D74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8012D78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X8012D78,	"send_func");
	create_dword	(0X8012D7C);
	create_dword	(0X8012D80);
	create_insn	(0X8012D84);
	create_insn	(x=0X8012D86);
	op_hex		(x,	1);
	create_insn	(x=0X8012D9E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8012DA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012DB0);
	set_cmt	(0X8012DDC,	"payload_len",	0);
	set_cmt	(0X8012DDE,	"payload",	0);
	set_cmt	(0X8012DE0,	"spkt",	0);
	set_cmt	(0X8012DE2,	"send_func",	0);
	create_insn	(x=0X8012DE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012DEC);
	set_name	(0X8012DEC,	"cmd_exec_set00_cmd07");
	create_insn	(x=0X8012DF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8012DFA);
	op_stkvar	(x,	1);
	create_insn	(0X8012E0E);
	create_insn	(x=0X8012E10);
	op_hex		(x,	1);
	create_insn	(0X8012E26);
	create_insn	(x=0X8012E28);
	op_hex		(x,	1);
	create_insn	(x=0X8012E46);
	op_hex		(x,	1);
	create_insn	(0X8012E56);
	create_insn	(x=0X8012E58);
	op_hex		(x,	1);
	set_cmt	(0X8012E74,	"payload_len",	0);
	set_cmt	(0X8012E76,	"payload",	0);
	set_cmt	(0X8012E78,	"spkt",	0);
	set_cmt	(0X8012E7A,	"send_func",	0);
	create_insn	(x=0X8012E7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8012E84);
	op_hex		(x,	1);
	create_insn	(0X8012E9A);
	set_name	(0X8012E9A,	"cmd_exec_set00_cmd08");
	create_insn	(0X8012EB2);
	set_cmt	(0X8012EC2,	"payload_len",	0);
	set_cmt	(0X8012EC4,	"payload",	0);
	set_cmt	(0X8012EC6,	"spkt",	0);
	set_cmt	(0X8012EC8,	"send_func",	0);
	create_insn	(x=0X8012EC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012ED2);
	set_name	(0X8012ED2,	"cmd_exec_set00_cmd0A");
	create_insn	(0X8012EEA);
	create_insn	(0X8012EFA);
	set_cmt	(0X8012F08,	"payload_len",	0);
	set_cmt	(0X8012F0A,	"payload",	0);
	set_cmt	(0X8012F0C,	"spkt",	0);
	set_cmt	(0X8012F0E,	"send_func",	0);
	create_insn	(x=0X8012F0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012F22);
	set_name	(0X8012F22,	"cmd_exec_set00_cmd0B");
	set_cmt	(0X8012F4A,	"payload_len",	0);
	set_cmt	(0X8012F4C,	"payload",	0);
	set_cmt	(0X8012F4E,	"spkt",	0);
	set_cmt	(0X8012F50,	"send_func",	0);
	create_insn	(x=0X8012F50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012F5A);
	set_name	(0X8012F5A,	"cmd_exec_set00_cmd0C");
	create_insn	(x=0X8012F6E);
	op_hex		(x,	1);
	create_insn	(x=0X8012F76);
	op_hex		(x,	1);
	create_insn	(x=0X8012F7E);
	op_hex		(x,	1);
	create_insn	(0X8012F8E);
	create_insn	(x=0X8012F90);
	op_hex		(x,	1);
	create_insn	(x=0X8012FA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012FB2);
	set_cmt	(0X8012FD0,	"payload_len",	0);
	set_cmt	(0X8012FD2,	"payload",	0);
	set_cmt	(0X8012FD4,	"spkt",	0);
	set_cmt	(0X8012FD6,	"send_func",	0);
	create_insn	(x=0X8012FD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012FE0);
	set_name	(0X8012FE0,	"cmd_exec_set00_cmd0D");
	create_insn	(x=0X8013000);
	op_hex		(x,	1);
	create_insn	(x=0X8013008);
	op_hex		(x,	1);
	set_cmt	(0X8013016,	"payload_len",	0);
	set_cmt	(0X8013018,	"payload",	0);
	set_cmt	(0X801301A,	"spkt",	0);
	set_cmt	(0X801301C,	"send_func",	0);
	create_insn	(x=0X801301C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8013026);
	set_name	(0X8013026,	"cmd_exec_set06_cmd1B");
	create_insn	(x=0X8013032);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8013042);
	set_name	(0X8013042,	"cmd_exec_set00_cmd01a");
	create_insn	(x=0X8013052);
	op_hex		(x,	1);
	set_cmt	(0X8013072,	"payload_len",	0);
	set_cmt	(0X8013074,	"payload",	0);
	set_cmt	(0X8013076,	"spkt",	0);
	set_cmt	(0X8013078,	"send_func",	0);
	create_insn	(x=0X8013078);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8013082);
	set_name	(0X8013082,	"cmd_exec_set00_cmdFF");
	create_insn	(x=0X8013094);
	op_hex		(x,	1);
	create_insn	(0X80130A4);
	create_insn	(x=0X80130A6);
	op_hex		(x,	1);
	create_insn	(x=0X80130B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80130C8);
	set_cmt	(0X80130E2,	"payload",	0);
	set_cmt	(0X80130E4,	"spkt",	0);
	set_cmt	(0X80130E6,	"send_func",	0);
	create_insn	(x=0X80130E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80130F0);
	set_name	(0X80130F0,	"cmd_exec_set00_cmdFE");
	set_cmt	(0X8013126,	"payload_len",	0);
	set_cmt	(0X8013128,	"payload",	0);
	set_cmt	(0X801312A,	"spkt",	0);
	set_cmt	(0X801312C,	"send_func",	0);
	create_insn	(x=0X801312C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8013134);
	make_array	(0X8013146,	0X2);
	create_dword	(x=0X8013148);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801314C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8013150);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8013154);
	create_dword	(x=0X8013158);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801315C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X8013160,	0X801317A);
	set_name	(0X8013160,	"aWm32xA4Fpga201");
	make_array	(0X801317A,	0X2);
	create_insn	(0X801317C);
	set_name	(0X801317C,	"packet_sub_801317C");
	create_insn	(x=0X8013182);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8013184);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8013186);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X801318E);
	create_insn	(0X80131A0);
	create_insn	(x=0X80131A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80131AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80131B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80131C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80131C4);
	op_plain_offset	(x,	1,	0X20002870);
	op_plain_offset	(x,	129,	0X20002870);
	create_insn	(x=0X80131CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80131DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80131E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80131F6);
	make_array	(0X80131FE,	0X2);
	create_dword	(x=0X8013200);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8013204);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8013208);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801320C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8013210);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8013214);
	create_insn	(0X801322E);
	create_insn	(0X8013232);
	create_insn	(0X8013246);
	create_insn	(0X8013260);
	create_insn	(0X8013264);
	create_insn	(x=0X8013278);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801327E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8013284);
	create_insn	(x=0X801328C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8013296);
	create_insn	(x=0X801329C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80132A8);
	create_insn	(0X80132C2);
	create_insn	(0X80132C6);
	create_insn	(0X80132DA);
	create_insn	(0X8013300);
	create_insn	(0X801330E);
	create_insn	(0X801331C);
	create_dword	(x=0X8013328);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X801332C);
	create_insn	(0X8013350);
	create_insn	(0X8013356);
	create_insn	(0X8013360);
	create_insn	(0X8013364);
	create_insn	(0X8013384);
	create_insn	(0X801338A);
	create_insn	(0X80133AE);
	create_insn	(0X80133B2);
	create_insn	(0X80133BA);
	create_insn	(0X80133C2);
	set_name	(0X80133C2,	"memcpy2");
	create_insn	(x=0X80133C8);
	op_hex		(x,	1);
	create_insn	(x=0X80133FA);
	op_hex		(x,	1);
	create_insn	(0X8013418);
	create_insn	(0X801344C);
	create_insn	(0X80134B0);
	create_insn	(x=0X80134BA);
	op_hex		(x,	1);
	create_insn	(0X80134DE);
	create_insn	(0X80134F4);
	create_insn	(x=0X8013520);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013536);
	op_hex		(x,	1);
	create_insn	(0X8013542);
	create_insn	(0X8013544);
	create_insn	(0X8013546);
	create_insn	(0X8013548);
	create_insn	(0X8013552);
	make_array	(0X801355E,	0X2);
	create_insn	(x=0X8013560);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X8013564);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X8013568);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X801356C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8013570);
	create_insn	(x=0X801357E);
	op_hex		(x,	1);
	create_insn	(x=0X80135A0);
	op_hex		(x,	1);
	create_word	(0X80135BA);
	create_dword	(0X80135BC);
	make_array	(0X80135BC,	0X3);
	create_insn	(0X80135C8);
	create_dword	(0X80135D0);
	create_insn	(0X80135D4);
	make_array	(0X80135D6,	0X2);
	create_insn	(x=0X80135D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80135DA);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80135E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80135E4);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80135EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80135EC);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80135F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80135F8);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X80135FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80135FE);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8013600);
	op_hex		(x,	1);
	create_insn	(x=0X8013606);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8013608);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801360A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801360C);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801360E);
	op_hex		(x,	1);
	create_insn	(x=0X8013614);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8013616);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801361A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801361C);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8013626);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8013628);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801362C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801362E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8013630);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8013632);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8013634);
	op_hex		(x,	1);
	create_insn	(x=0X801363A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801363C);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8013642);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8013644);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8013646);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8013648);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801364A);
	op_hex		(x,	1);
	create_insn	(x=0X8013650);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8013652);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8013656);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8013658);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8013662);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8013664);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8013668);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801366A);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801366C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801366E);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8013672);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8013674);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8013676);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8013678);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801367A);
	op_hex		(x,	1);
	create_insn	(x=0X8013682);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8013684);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X801368E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8013690);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	create_insn	(x=0X8013692);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8013694);
	op_plain_offset	(x,	1,	0X20001CD0);
	op_plain_offset	(x,	129,	0X20001CD0);
	make_array	(0X801369A,	0X2);
	create_dword	(x=0X801369C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X80136A0);
	create_insn	(x=0X80136AE);
	op_hex		(x,	1);
	create_insn	(x=0X80136BC);
	op_hex		(x,	1);
	create_insn	(0X80136C8);
	create_insn	(x=0X80136D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80136D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X80136DA);
	op_hex		(x,	1);
	create_insn	(x=0X80136E4);
	op_stkvar	(x,	1);
	create_insn	(0X80136F2);
	create_insn	(x=0X80136FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013706);
	op_stkvar	(x,	1);
	create_insn	(0X8013722);
	create_insn	(0X8013740);
	create_insn	(0X8013756);
	create_insn	(0X8013776);
	create_insn	(x=0X801377A);
	op_stkvar	(x,	1);
	create_insn	(x=0X801377E);
	op_hex		(x,	1);
	create_insn	(x=0X801379A);
	op_stkvar	(x,	1);
	create_insn	(x=0X80137C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X80137DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80137F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80137FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013812);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013822);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013832);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013834);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013844);
	op_stkvar	(x,	1);
	create_insn	(x=0X801384E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013854);
	op_stkvar	(x,	1);
	create_insn	(x=0X801385E);
	op_hex		(x,	1);
	create_insn	(x=0X8013864);
	op_stkvar	(x,	1);
	create_insn	(0X801386E);
	create_insn	(0X8013870);
	create_insn	(x=0X8013874);
	op_hex		(x,	1);
	create_insn	(x=0X8013878);
	op_stkvar	(x,	1);
	create_insn	(x=0X801387A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013886);
	op_hex		(x,	1);
	create_insn	(x=0X801388E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013892);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013894);
	op_stkvar	(x,	1);
	create_insn	(x=0X80138A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80138B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80138C0);
	op_stkvar	(x,	1);
	create_insn	(0X80138FA);
	create_insn	(0X8013902);
	create_insn	(x=0X8013918);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013924);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013926);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013928);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013946);
	op_stkvar	(x,	1);
	create_insn	(x=0X801396C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013978);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013996);
	op_stkvar	(x,	1);
	create_insn	(x=0X80139A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80139EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80139EC);
	op_hex		(x,	1);
	create_insn	(x=0X80139F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80139F4);
	op_hex		(x,	1);
	create_insn	(x=0X80139FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013A00);
	op_stkvar	(x,	1);
	create_dword	(0X8013A08);
	create_dword	(0X8013A0C);
	create_dword	(0X8013A10);
	create_dword	(0X8013A14);
	create_dword	(0X8013A18);
	create_dword	(0X8013A1C);
	create_dword	(0X8013A20);
	create_dword	(0X8013A24);
	create_dword	(0X8013A28);
	create_dword	(0X8013A2C);
	create_dword	(0X8013A30);
	create_dword	(0X8013A34);
	create_dword	(x=0X8013A38);
	op_plain_offset	(x,	0,	0X80137F4);
	op_plain_offset	(x,	128,	0X80137F4);
	create_dword	(x=0X8013A3C);
	op_plain_offset	(x,	0,	0X801389C);
	op_plain_offset	(x,	128,	0X801389C);
	create_dword	(0X8013A40);
	create_dword	(0X8013A44);
	create_dword	(0X8013A48);
	create_dword	(0X8013A4C);
	create_insn	(0X8013A50);
	create_insn	(x=0X8013A54);
	op_hex		(x,	1);
	create_insn	(0X8013AEE);
	make_array	(0X8013B36,	0X2);
	create_dword	(0X8013B38);
	create_dword	(x=0X8013B3C);
	op_plain_offset	(x,	0,	0X8013A90);
	op_plain_offset	(x,	128,	0X8013A90);
	create_dword	(0X8013B40);
	create_dword	(0X8013B44);
	create_dword	(0X8013B48);
	create_insn	(0X8013B4C);
	create_insn	(x=0X8013B60);
	op_hex		(x,	1);
	create_insn	(x=0X8013B7C);
	op_hex		(x,	1);
	make_array	(0X8013BF6,	0X2);
	create_insn	(0X8013BF8);
	create_insn	(x=0X8013BFE);
	op_hex		(x,	1);
	create_insn	(0X8013C24);
	create_insn	(x=0X8013C4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C6A);
	op_stkvar	(x,	1);
	create_insn	(0X8013CAE);
	create_dword	(x=0X8013CD8);
	op_plain_offset	(x,	0,	0X8013C4A);
	op_plain_offset	(x,	128,	0X8013C4A);
	create_dword	(0X8013CDC);
	create_dword	(0X8013CE0);
	create_insn	(0X8013CE4);
	make_array	(0X8013CEE,	0X2);
	create_dword	(0X8013CF0);
	create_insn	(0X8013CF4);
	create_insn	(x=0X8013CFC);
	op_hex		(x,	1);
	create_insn	(x=0X8013D00);
	op_stkvar	(x,	1);
	create_insn	(0X8013D22);
	create_insn	(0X8013D30);
	create_insn	(0X8013D5A);
	create_insn	(x=0X8013D5E);
	op_hex		(x,	1);
	create_insn	(0X8013DA0);
	create_insn	(0X8013DCE);
	create_insn	(0X8013E0C);
	create_insn	(0X8013E90);
	create_insn	(x=0X8013EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013ECA);
	op_hex		(x,	1);
	make_array	(0X8013ED2,	0X2);
	create_dword	(0X8013ED4);
	create_dword	(0X8013ED8);
	create_dword	(0X8013EDC);
	create_dword	(0X8013EE0);
	create_dword	(0X8013EE4);
	create_dword	(0X8013EE8);
	create_dword	(0X8013EEC);
	create_dword	(0X8013EF0);
	create_dword	(0X8013EF4);
	create_dword	(0X8013EF8);
	create_dword	(0X8013EFC);
	create_dword	(0X8013F00);
	create_dword	(0X8013F04);
	create_dword	(x=0X8013F08);
	op_plain_offset	(x,	0,	0X8013E46);
	op_plain_offset	(x,	128,	0X8013E46);
	create_dword	(x=0X8013F0C);
	op_plain_offset	(x,	0,	0X8013E60);
	op_plain_offset	(x,	128,	0X8013E60);
	create_dword	(x=0X8013F10);
	op_plain_offset	(x,	0,	0X8013EA2);
	op_plain_offset	(x,	128,	0X8013EA2);
	create_dword	(x=0X8013F14);
	op_plain_offset	(x,	0,	0X8013EBA);
	op_plain_offset	(x,	128,	0X8013EBA);
	create_insn	(0X8013F18);
	create_insn	(x=0X8013F22);
	op_hex		(x,	1);
	create_insn	(x=0X8013F34);
	op_hex		(x,	1);
	create_insn	(0X8013F54);
	create_insn	(0X8013F7A);
	create_insn	(0X8013F82);
	create_insn	(x=0X8013FA2);
	op_hex		(x,	1);
	create_insn	(x=0X8013FA6);
	op_hex		(x,	1);
	create_insn	(0X8013FB0);
	create_insn	(0X8013FB6);
	create_insn	(x=0X8013FD0);
	op_hex		(x,	1);
	create_insn	(0X8013FF2);
	create_insn	(0X8013FFA);
	create_insn	(0X8014002);
	create_insn	(0X801400A);
	create_insn	(x=0X801402E);
	op_hex		(x,	1);
	create_insn	(x=0X8014042);
	op_hex		(x,	1);
	create_insn	(0X8014062);
	make_array	(0X8014072,	0X2);
	create_dword	(0X8014074);
	create_dword	(0X8014078);
	create_dword	(0X801407C);
	create_dword	(x=0X8014080);
	op_plain_offset	(x,	0,	0X8013FBE);
	op_plain_offset	(x,	128,	0X8013FBE);
	create_dword	(0X8014084);
	create_dword	(0X8014088);
	create_dword	(0X801408C);
	create_dword	(0X8014090);
	create_dword	(0X8014094);
	create_insn	(0X8014098);
	create_insn	(x=0X801409C);
	op_hex		(x,	1);
	create_insn	(x=0X80140C6);
	op_stkvar	(x,	1);
	create_insn	(0X80140CE);
	create_insn	(x=0X80140D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80140DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80140E4);
	op_hex		(x,	1);
	create_insn	(x=0X80140EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80140FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014102);
	op_stkvar	(x,	1);
	create_insn	(0X8014110);
	create_insn	(x=0X8014118);
	op_stkvar	(x,	1);
	create_insn	(x=0X801411C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014128);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014136);
	op_hex		(x,	1);
	create_dword	(0X801413C);
	create_dword	(0X8014140);
	create_insn	(0X8014144);
	create_insn	(0X8014168);
	create_insn	(x=0X801418A);
	op_hex		(x,	1);
	create_insn	(0X801424E);
	create_insn	(0X8014260);
	create_dword	(0X80142C4);
	create_dword	(0X80142C8);
	create_dword	(0X80142CC);
	create_dword	(x=0X80142D0);
	op_plain_offset	(x,	0,	0X8014212);
	op_plain_offset	(x,	128,	0X8014212);
	create_dword	(0X80142D4);
	create_dword	(0X80142D8);
	create_dword	(x=0X80142DC);
	op_plain_offset	(x,	0,	0X801423E);
	op_plain_offset	(x,	128,	0X801423E);
	create_dword	(0X80142E0);
	create_dword	(0X80142E4);
	create_dword	(0X80142E8);
	create_dword	(0X80142EC);
	create_dword	(0X80142F0);
	create_dword	(0X80142F4);
	create_dword	(0X80142F8);
	create_insn	(0X80142FC);
	create_insn	(x=0X801430C);
	op_hex		(x,	1);
	create_insn	(x=0X8014310);
	op_hex		(x,	1);
	create_insn	(0X801435E);
	create_insn	(0X801439E);
	create_insn	(0X80143DC);
	create_insn	(x=0X80143EE);
	op_hex		(x,	1);
	create_insn	(0X8014428);
	create_insn	(0X8014440);
	create_insn	(0X8014476);
	create_insn	(x=0X801447C);
	op_hex		(x,	1);
	create_insn	(0X8014494);
	create_insn	(0X80144AA);
	create_insn	(0X80144C0);
	create_insn	(0X80144CE);
	create_insn	(0X80144E0);
	create_insn	(0X80144EA);
	create_insn	(0X8014510);
	create_insn	(x=0X8014520);
	op_hex		(x,	1);
	create_insn	(0X8014562);
	create_insn	(0X8014578);
	create_insn	(0X8014590);
	create_insn	(0X8014592);
	create_insn	(0X801459E);
	create_insn	(x=0X80145A6);
	op_stkvar	(x,	1);
	create_insn	(0X80145C6);
	create_insn	(0X80145DE);
	create_insn	(0X80145EA);
	create_insn	(0X80145F4);
	create_insn	(0X8014620);
	create_insn	(0X8014638);
	create_insn	(x=0X8014680);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014682);
	op_stkvar	(x,	1);
	create_insn	(x=0X801469A);
	op_stkvar	(x,	1);
	create_insn	(x=0X801469C);
	op_stkvar	(x,	1);
	create_insn	(0X80146B0);
	create_insn	(0X80146B2);
	create_insn	(x=0X80146C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80146C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80146D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X80146DA);
	op_stkvar	(x,	1);
	create_insn	(0X80146E6);
	create_insn	(x=0X8014706);
	op_stkvar	(x,	1);
	create_insn	(x=0X801470C);
	op_hex		(x,	1);
	create_insn	(x=0X8014710);
	op_hex		(x,	1);
	create_insn	(x=0X8014714);
	op_stkvar	(x,	1);
	create_dword	(0X801471C);
	create_dword	(0X8014720);
	create_dword	(0X8014724);
	create_dword	(0X8014728);
	create_dword	(0X801472C);
	create_dword	(0X8014730);
	create_dword	(x=0X8014734);
	op_plain_offset	(x,	0,	0X801448C);
	op_plain_offset	(x,	128,	0X801448C);
	create_dword	(0X8014738);
	create_dword	(0X801473C);
	create_dword	(0X8014740);
	create_dword	(0X8014744);
	create_dword	(0X8014748);
	create_dword	(0X801474C);
	create_dword	(0X8014750);
	create_dword	(0X8014754);
	create_dword	(0X8014758);
	create_dword	(0X801475C);
	create_dword	(0X8014760);
	create_insn	(0X8014764);
	create_insn	(x=0X8014778);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014780);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014782);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014788);
	op_stkvar	(x,	1);
	create_insn	(x=0X801478C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014794);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014796);
	op_stkvar	(x,	1);
	create_insn	(x=0X80147A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80147A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80147A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80147AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80147C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80147C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80147C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X80147CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80147D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80147DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80147DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80147F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80147F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80147F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014800);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014810);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014816);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014818);
	op_stkvar	(x,	1);
	create_insn	(x=0X801481E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014820);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014828);
	op_stkvar	(x,	1);
	create_insn	(x=0X801482E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014830);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014836);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014838);
	op_stkvar	(x,	1);
	create_insn	(x=0X801483A);
	op_stkvar	(x,	1);
	create_insn	(x=0X801484E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014858);
	op_stkvar	(x,	1);
	create_insn	(x=0X801485C);
	op_stkvar	(x,	1);
	create_insn	(x=0X801485E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014868);
	op_stkvar	(x,	1);
	create_insn	(x=0X801486A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014872);
	op_stkvar	(x,	1);
	create_insn	(x=0X801487A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014880);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014882);
	op_stkvar	(x,	1);
	create_insn	(x=0X801488A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014894);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014896);
	op_stkvar	(x,	1);
	create_insn	(x=0X80148A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80148A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80148AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80148AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80148C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80148C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80148C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X80148CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80148D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80148D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80148E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80148E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80148E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80148E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X80148EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80148F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80148F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X80148FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014902);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014908);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014910);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014912);
	op_stkvar	(x,	1);
	create_insn	(x=0X801491E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014920);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014928);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014930);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014940);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014942);
	op_stkvar	(x,	1);
	create_insn	(x=0X801494A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014952);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014962);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014978);
	op_stkvar	(x,	1);
	create_insn	(x=0X801497A);
	op_stkvar	(x,	1);
	create_insn	(x=0X801497C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014988);
	op_stkvar	(x,	1);
	create_insn	(x=0X801498A);
	op_stkvar	(x,	1);
	create_insn	(x=0X801498C);
	op_stkvar	(x,	1);
	create_insn	(x=0X80149A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80149B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80149C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80149C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80149C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X80149CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80149D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80149D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80149E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80149EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80149FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014A1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014A4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014A5C);
	op_stkvar	(x,	1);
	create_insn	(0X8014A86);
	create_insn	(x=0X8014A88);
	op_hex		(x,	1);
	create_insn	(x=0X8014AC6);
	op_hex		(x,	1);
	create_insn	(x=0X8014B00);
	op_hex		(x,	1);
	create_insn	(x=0X8014B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014B3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014B4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014B58);
	op_stkvar	(x,	1);
	create_dword	(0X8014B68);
	create_dword	(x=0X8014B6C);
	op_plain_offset	(x,	0,	0X8014792);
	op_plain_offset	(x,	128,	0X8014792);
	create_dword	(0X8014B70);
	create_dword	(x=0X8014B74);
	op_plain_offset	(x,	0,	0X80147DC);
	op_plain_offset	(x,	128,	0X80147DC);
	create_dword	(x=0X8014B78);
	op_plain_offset	(x,	0,	0X8014856);
	op_plain_offset	(x,	128,	0X8014856);
	create_dword	(0X8014B7C);
	create_dword	(0X8014B80);
	create_dword	(0X8014B84);
	create_dword	(0X8014B88);
	create_dword	(0X8014B8C);
	create_dword	(x=0X8014B90);
	op_plain_offset	(x,	0,	0X801496E);
	op_plain_offset	(x,	128,	0X801496E);
	create_dword	(x=0X8014B94);
	op_plain_offset	(x,	0,	0X8014998);
	op_plain_offset	(x,	128,	0X8014998);
	create_dword	(0X8014B98);
	create_dword	(0X8014B9C);
	create_dword	(0X8014BA0);
	create_dword	(0X8014BA4);
	create_dword	(0X8014BA8);
	create_dword	(0X8014BAC);
	create_dword	(0X8014BB0);
	create_dword	(0X8014BB4);
	create_dword	(x=0X8014BB8);
	op_plain_offset	(x,	0,	0X8014AF4);
	op_plain_offset	(x,	128,	0X8014AF4);
	create_dword	(0X8014BBC);
	create_dword	(0X8014BC0);
	create_dword	(0X8014BC4);
	create_dword	(0X8014BC8);
	create_insn	(0X8014BCC);
	create_insn	(x=0X8014BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014BD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014BE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014BEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014C02);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014C40);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014C46);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014C5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014C6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014C72);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014CB8);
	op_stkvar	(x,	1);
	make_array	(0X8014CCA,	0X2);
	create_dword	(0X8014CCC);
	create_dword	(0X8014CD0);
	create_dword	(x=0X8014CD4);
	op_plain_offset	(x,	0,	0X8014C1C);
	op_plain_offset	(x,	128,	0X8014C1C);
	create_dword	(0X8014CD8);
	create_insn	(0X8014CDC);
	create_insn	(x=0X8014CE0);
	op_hex		(x,	1);
	create_insn	(x=0X8014CEE);
	op_stkvar	(x,	1);
	create_insn	(0X8014CF2);
	create_insn	(x=0X8014D0C);
	op_stkvar	(x,	1);
	create_insn	(0X8014D14);
	create_insn	(x=0X8014D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014D2A);
	op_hex		(x,	1);
	create_insn	(x=0X8014D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014D4A);
	op_hex		(x,	1);
	create_insn	(x=0X8014D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014D62);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014D72);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014D76);
	op_stkvar	(x,	1);
	make_array	(0X8014D82,	0X2);
	create_dword	(0X8014D84);
	create_dword	(0X8014D88);
	create_insn	(0X8014D8C);
	create_insn	(x=0X8014DA2);
	op_hex		(x,	1);
	create_insn	(x=0X8014DBA);
	op_hex		(x,	1);
	create_insn	(x=0X8014DD8);
	op_hex		(x,	1);
	create_insn	(x=0X8014DE4);
	op_hex		(x,	1);
	create_insn	(x=0X8014E02);
	op_hex		(x,	1);
	create_insn	(0X8014E08);
	create_insn	(0X8014E22);
	create_insn	(0X8014E30);
	make_array	(0X8014E3A,	0X2);
	create_insn	(0X8014E3C);
	create_insn	(x=0X8014E44);
	op_hex		(x,	1);
	create_insn	(x=0X8014E84);
	op_hex		(x,	1);
	create_insn	(0X8014ED0);
	create_insn	(x=0X8014ED4);
	op_hex		(x,	1);
	create_insn	(0X8014EF0);
	create_insn	(0X8014F3C);
	create_insn	(0X8014F48);
	create_insn	(0X8014F60);
	create_insn	(x=0X8014F70);
	op_hex		(x,	1);
	create_insn	(0X8014F78);
	create_dword	(0X8014F84);
	create_dword	(0X8014F88);
	create_insn	(0X8014F8C);
	make_array	(0X8014F96,	0X2);
	create_dword	(0X8014F98);
	create_insn	(0X8014F9C);
	create_insn	(0X8014FB4);
	create_insn	(x=0X8015018);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80150BC);
	op_hex		(x,	1);
	create_insn	(0X80150D4);
	create_insn	(0X80150E8);
	create_insn	(0X80150FA);
	create_insn	(0X801514C);
	create_insn	(0X801515E);
	create_insn	(x=0X8015168);
	op_hex		(x,	1);
	create_insn	(0X8015170);
	create_insn	(0X801517C);
	create_insn	(x=0X801518E);
	op_hex		(x,	1);
	create_insn	(0X8015196);
	create_insn	(0X80151A4);
	create_insn	(0X80151B8);
	create_insn	(x=0X80151C0);
	op_hex		(x,	1);
	create_insn	(0X80151C6);
	create_insn	(0X80151CE);
	create_dword	(0X80151DC);
	make_array	(0X80151DC,	0X20);
	create_dword	(0X801525C);
	create_dword	(0X8015260);
	create_insn	(0X8015264);
	create_insn	(0X8015296);
	create_insn	(0X80152B2);
	create_insn	(x=0X80152B8);
	op_stkvar	(x,	1);
	create_insn	(0X80152C0);
	make_array	(0X80152C2,	0X2);
	create_insn	(0X80152C4);
	create_insn	(0X80152EA);
	create_insn	(0X8015306);
	create_insn	(0X801530C);
	create_insn	(x=0X8015314);
	op_stkvar	(x,	1);
	create_insn	(0X801531C);
	create_insn	(x=0X801531E);
	op_hex		(x,	1);
	create_insn	(0X8015346);
	create_insn	(0X801534C);
	create_insn	(0X801536C);
	make_array	(0X8015372,	0X2);
	create_insn	(0X8015374);
	create_insn	(0X8015394);
	create_insn	(0X80153A6);
	create_insn	(0X80153AA);
	create_insn	(0X80153C2);
	create_insn	(0X80153D6);
	create_insn	(0X80153EC);
	create_insn	(x=0X8015418);
	op_hex		(x,	1);
	create_insn	(x=0X801541C);
	op_hex		(x,	1);
	create_insn	(x=0X801544E);
	op_hex		(x,	1);
	create_insn	(x=0X8015452);
	op_hex		(x,	1);
	create_insn	(0X8015470);
	create_insn	(x=0X801549A);
	op_hex		(x,	1);
	create_insn	(0X80154B4);
	create_insn	(x=0X80154E0);
	op_hex		(x,	1);
	create_insn	(0X80154E6);
	create_word	(0X80154FE);
	create_insn	(0X8015504);
	create_insn	(0X801551E);
	create_dword	(0X8015538);
	create_insn	(0X8015540);
	create_insn	(x=0X8015544);
	op_hex		(x,	1);
	create_insn	(0X8015582);
	create_insn	(0X8015588);
	create_insn	(x=0X8015594);
	op_hex		(x,	1);
	set_cmt	(0X8015598,	"switch 4 cases ",	0);
	create_insn	(x=0X80155A6);
	op_hex		(x,	1);
	set_cmt	(0X80155AC,	"switch jump",	0);
	create_insn	(0X80155AC);
	set_cmt	(0X80155B0,	"jump table for switch statement",	0);
	create_byte	(0X80155B0);
	set_name	(0X80155B0,	"jpt_80155AC");
	create_byte	(0X80155B1);
	create_byte	(0X80155B2);
	create_byte	(0X80155B3);
	set_cmt	(0X80155B4,	"jumptable 080155AC cases 6,7",	1);
	create_insn	(0X80155B4);
	set_cmt	(0X80155C2,	"jumptable 080155AC case 4",	1);
	create_insn	(0X80155C2);
	set_cmt	(0X80155C6,	"jumptable 080155AC case 5",	1);
	create_insn	(x=0X80155D6);
	op_hex		(x,	1);
	create_insn	(0X80155DC);
	create_insn	(0X80155E8);
	create_insn	(0X8015608);
	create_insn	(0X801561A);
	create_insn	(0X801561E);
	create_insn	(0X8015636);
	create_insn	(0X801564A);
	create_insn	(0X8015654);
	create_insn	(x=0X801565A);
	op_hex		(x,	1);
	create_insn	(x=0X8015662);
	op_hex		(x,	1);
	make_array	(0X801566A,	0X2);
	create_insn	(0X801566C);
	create_insn	(x=0X8015688);
	op_hex		(x,	1);
	create_insn	(x=0X801569A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8015788);
	op_hex		(x,	1);
	make_array	(0X801579E,	0X2);
	create_insn	(0X80157D0);
	create_insn	(0X80157F2);
	create_insn	(0X8015802);
	create_insn	(x=0X8015812);
	op_hex		(x,	1);
	create_insn	(0X801581A);
	create_dword	(0X8015834);
	create_insn	(0X8015838);
	create_insn	(x=0X8015840);
	op_hex		(x,	1);
	create_insn	(x=0X8015852);
	op_hex		(x,	1);
	create_insn	(x=0X80158D8);
	op_hex		(x,	1);
	create_insn	(0X80158DE);
	create_insn	(x=0X8015940);
	op_hex		(x,	1);
	create_insn	(0X8015946);
	create_insn	(x=0X8015950);
	op_hex		(x,	1);
	create_insn	(x=0X8015988);
	op_hex		(x,	1);
	create_insn	(0X801598E);
	create_insn	(0X801599A);
	create_insn	(0X80159A4);
	create_insn	(0X80159AA);
	create_insn	(0X80159BA);
	create_insn	(0X80159C0);
	create_insn	(x=0X80159D0);
	op_hex		(x,	1);
	create_insn	(0X80159DA);
	create_insn	(0X80159F0);
	create_insn	(x=0X8015A00);
	op_hex		(x,	1);
	create_dword	(0X8015A08);
	create_insn	(0X8015A0C);
	create_insn	(x=0X8015A20);
	op_hex		(x,	1);
	create_insn	(x=0X8015A26);
	op_hex		(x,	1);
	create_insn	(x=0X8015A2E);
	op_hex		(x,	1);
	create_insn	(x=0X8015A34);
	op_hex		(x,	1);
	create_insn	(x=0X8015A4A);
	op_stkvar	(x,	1);
	create_insn	(0X8015A64);
	create_insn	(x=0X8015A6A);
	op_hex		(x,	1);
	create_insn	(x=0X8015ABA);
	op_hex		(x,	1);
	create_insn	(x=0X8015AD4);
	op_hex		(x,	1);
	create_insn	(0X8015AE8);
	create_insn	(x=0X8015AF4);
	op_hex		(x,	1);
	create_insn	(0X8015B0A);
	create_insn	(x=0X8015B16);
	op_hex		(x,	1);
	create_insn	(0X8015B1C);
	create_insn	(0X8015B28);
	make_array	(0X8015B2E,	0X2);
	create_dword	(0X8015B30);
	create_insn	(0X8015B34);
	create_insn	(0X8015B4C);
	create_insn	(x=0X8015B6C);
	op_hex		(x,	1);
	create_insn	(x=0X8015B70);
	op_hex		(x,	1);
	create_insn	(x=0X8015B74);
	op_hex		(x,	1);
	create_insn	(x=0X8015B78);
	op_hex		(x,	1);
	create_insn	(x=0X8015B7C);
	op_hex		(x,	1);
	create_insn	(x=0X8015B88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8015BEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X8015C04);
	op_hex		(x,	1);
	create_insn	(x=0X8015C0E);
	op_hex		(x,	1);
	create_insn	(0X8015C58);
	create_insn	(0X8015C70);
	create_insn	(x=0X8015C7A);
	op_hex		(x,	1);
	create_insn	(x=0X8015C86);
	op_hex		(x,	1);
	create_insn	(x=0X8015C90);
	op_hex		(x,	1);
	create_insn	(0X8015C96);
	create_insn	(0X8015CAE);
	create_insn	(x=0X8015CB2);
	op_hex		(x,	1);
	create_insn	(x=0X8015CBA);
	op_hex		(x,	1);
	create_dword	(0X8015CCC);
	create_insn	(0X8015CD0);
	create_insn	(x=0X8015CDA);
	op_hex		(x,	1);
	create_insn	(0X8015CEC);
	create_insn	(x=0X8015CF4);
	op_stkvar	(x,	1);
	create_insn	(0X8015D08);
	create_insn	(x=0X8015D14);
	op_hex		(x,	1);
	create_insn	(0X8015D1E);
	create_insn	(0X8015D32);
	create_insn	(x=0X8015D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X8015D48);
	op_hex		(x,	1);
	create_insn	(x=0X8015D72);
	op_hex		(x,	1);
	create_insn	(0X8015D78);
	create_insn	(x=0X8015D98);
	op_hex		(x,	1);
	make_array	(0X8015D9E,	0X2);
	create_insn	(0X8015DA0);
	create_insn	(0X8015DB8);
	create_insn	(0X8015DCA);
	create_insn	(0X8015DCE);
	create_insn	(0X8015DDE);
	create_insn	(0X8015DF2);
	create_insn	(0X8015E08);
	create_insn	(x=0X8015E28);
	op_hex		(x,	1);
	create_insn	(x=0X8015E48);
	op_hex		(x,	1);
	create_insn	(x=0X8015E76);
	op_hex		(x,	1);
	create_insn	(x=0X8015E84);
	op_hex		(x,	1);
	create_insn	(x=0X8015E96);
	op_hex		(x,	1);
	create_insn	(0X8015E9C);
	create_insn	(0X8015EB0);
	create_insn	(x=0X8015EBA);
	op_hex		(x,	1);
	create_insn	(x=0X8015ECA);
	op_hex		(x,	1);
	create_insn	(0X8015ED0);
	create_insn	(0X8015EEE);
	create_insn	(0X8015F0A);
	create_insn	(x=0X8015F0E);
	op_hex		(x,	1);
	create_insn	(0X8015F48);
	create_insn	(0X8015F4E);
	create_insn	(x=0X8015F5A);
	op_hex		(x,	1);
	set_cmt	(0X8015F5E,	"switch 4 cases ",	0);
	create_insn	(x=0X8015F6C);
	op_hex		(x,	1);
	set_cmt	(0X8015F72,	"switch jump",	0);
	create_insn	(0X8015F72);
	set_cmt	(0X8015F76,	"jump table for switch statement",	0);
	create_byte	(0X8015F76);
	set_name	(0X8015F76,	"jpt_8015F72");
	create_byte	(0X8015F77);
	create_byte	(0X8015F78);
	create_byte	(0X8015F79);
	set_cmt	(0X8015F7A,	"jumptable 08015F72 cases 6,7",	1);
	create_insn	(0X8015F7A);
	set_cmt	(0X8015F84,	"jumptable 08015F72 case 4",	1);
	create_insn	(0X8015F84);
	set_cmt	(0X8015F86,	"jumptable 08015F72 case 5",	1);
	create_insn	(x=0X8015F90);
	op_hex		(x,	1);
	create_insn	(0X8015F96);
	create_insn	(0X8015FA0);
	create_insn	(0X8015FB8);
	create_insn	(0X8015FCA);
	create_insn	(0X8015FCE);
	create_insn	(0X8015FDE);
	create_insn	(0X8015FF2);
	create_insn	(x=0X8016002);
	op_hex		(x,	1);
	create_insn	(x=0X801600E);
	op_hex		(x,	1);
	make_array	(0X8016016,	0X2);
	create_insn	(0X8016018);
	create_insn	(x=0X801601E);
	op_hex		(x,	1);
	create_insn	(x=0X801602A);
	op_hex		(x,	1);
	create_insn	(x=0X8016062);
	op_hex		(x,	1);
	create_insn	(x=0X8016078);
	op_hex		(x,	1);
	create_insn	(0X8016082);
	create_insn	(x=0X8016092);
	op_hex		(x,	1);
	create_insn	(x=0X80160A4);
	op_hex		(x,	1);
	create_insn	(0X80160AA);
	create_insn	(0X80160D6);
	create_insn	(0X80160E2);
	create_insn	(0X80160F2);
	create_insn	(x=0X80160FC);
	op_hex		(x,	1);
	create_insn	(x=0X8016102);
	op_hex		(x,	1);
	create_insn	(x=0X801611C);
	op_hex		(x,	1);
	create_insn	(x=0X801612C);
	op_hex		(x,	1);
	create_insn	(x=0X8016138);
	op_hex		(x,	1);
	create_insn	(x=0X801613E);
	op_hex		(x,	1);
	create_insn	(x=0X8016142);
	op_hex		(x,	1);
	create_insn	(x=0X8016150);
	op_hex		(x,	1);
	create_insn	(x=0X8016154);
	op_hex		(x,	1);
	create_insn	(x=0X801615C);
	op_hex		(x,	1);
	create_insn	(0X8016166);
	create_insn	(x=0X8016190);
	op_hex		(x,	1);
	create_insn	(x=0X8016196);
	op_hex		(x,	1);
	create_insn	(x=0X801619A);
	op_hex		(x,	1);
	create_insn	(x=0X80161A4);
	op_hex		(x,	1);
	create_insn	(0X80161AE);
	create_insn	(x=0X80161B8);
	op_hex		(x,	1);
	create_insn	(0X80161C2);
	create_insn	(x=0X80161CC);
	op_hex		(x,	1);
	create_insn	(x=0X80161E6);
	op_hex		(x,	1);
	create_insn	(x=0X80161EC);
	op_hex		(x,	1);
	create_insn	(x=0X80161F0);
	op_hex		(x,	1);
	create_insn	(x=0X80161F6);
	op_hex		(x,	1);
	create_insn	(0X80161FC);
	create_insn	(x=0X8016204);
	op_hex		(x,	1);
	create_insn	(x=0X801620E);
	op_hex		(x,	1);
	create_insn	(x=0X8016214);
	op_hex		(x,	1);
	create_insn	(0X8016222);
	create_insn	(x=0X801622A);
	op_hex		(x,	1);
	create_insn	(0X8016238);
	create_byte	(0X801623E);
	make_array	(0X801623E,	0X100);
	create_byte	(0X8016B3E);
	make_array	(0X8016B3E,	0X700);
	set_name	(0X8016B3E,	"pkt_payload_dec_table");
	MakeStruct	(0X8017260,	"OfdmInitInstr");
	make_array	(0X8017260,	0X204);
	set_name	(0X8017260,	"ofdm_init_list_2");
	MakeStruct	(0X8017A70,	"OfdmInitInstr");
	make_array	(0X8017A70,	0XA4F);
	set_name	(0X8017A70,	"ofdm_init_list_3");
	MakeStruct	(0X801A3AC,	"OfdmInitInstr");
	make_array	(0X801A3AC,	0X247);
	set_name	(0X801A3AC,	"ofdm_init_list_4");
	MakeStruct	(0X801ACC8,	"OfdmInitInstr");
	make_array	(0X801ACC8,	0XE);
	set_name	(0X801ACC8,	"ofdm_init_list_1");
	create_strlit	(0X801B466,	0X801B4A7);
	set_name	(0X801B466,	"a66666677788888");
	MakeStruct	(0X801B698,	"OFDMPacketExecCallback");
	make_array	(0X801B698,	0X1B);
	set_name	(0X801B698,	"ofdm_exec_commands");
	create_byte	(0X801B771);
	make_array	(0X801B771,	0X100);
	set_name	(0X801B771,	"crc8_tab");
	create_word	(0X801B872);
	make_array	(0X801B872,	0X100);
	set_name	(0X801B872,	"crc16_tab");
	create_dword	(0X801BA74);
	make_array	(0X801BA74,	0X8);
	create_dword	(0X801BC08);
	make_array	(0X801BC0C,	0X4);
	make_array	(0X1FFFF700,	0X100);
	create_word	(0X1FFFF800);
	create_word	(0X1FFFF802);
	make_array	(0X1FFFF804,	0X4);
	create_word	(0X1FFFF808);
	create_word	(0X1FFFF80A);
	create_word	(0X1FFFF80C);
	create_word	(0X1FFFF80E);
	create_byte	(0X2000008C);
	create_byte	(0X2000008D);
	create_byte	(0X2000008E);
	create_byte	(0X20000090);
	make_array	(0X20000091,	0X3);
	create_dword	(0X20000094);
	create_dword	(0X20000098);
	create_dword	(0X2000009C);
	create_byte	(0X200000A0);
	make_array	(0X200000A1,	0X3);
	create_dword	(0X200000A4);
	create_dword	(0X200000A8);
	create_dword	(0X200000AC);
	create_dword	(0X200000B0);
	create_dword	(0X200000B4);
	create_dword	(0X200000B8);
	create_dword	(0X200000BC);
	create_dword	(0X200000C0);
	create_byte	(0X200000C4);
	set_name	(0X200000C4,	"active_quadrant_state");
	create_byte	(0X200000C5);
	set_name	(0X200000C5,	"quadrant_state");
	create_byte	(0X200000C6);
	set_name	(0X200000C6,	"active_quadrant_num");
	create_byte	(0X200000C7);
	set_name	(0X200000C7,	"quadrant_num");
	create_byte	(0X200000C8);
	make_array	(0X200000C9,	0X3);
	create_byte	(0X200000CC);
	make_array	(0X200000CD,	0X3);
	create_dword	(0X200000D0);
	create_byte	(0X200000D4);
	make_array	(0X200000D5,	0X3);
	create_dword	(0X200000D8);
	set_name	(0X200000D8,	"ofdm_board_version_flags");
	create_dword	(0X200000DC);
	create_byte	(0X20000108);
	make_array	(0X20000109,	0X3);
	create_dword	(0X2000010C);
	create_byte	(0X20000110);
	create_byte	(0X20000111);
	create_byte	(0X20000112);
	create_dword	(0X20000114);
	create_dword	(0X20000118);
	create_dword	(0X2000011C);
	create_dword	(0X20000120);
	create_dword	(0X20000124);
	create_dword	(0X20000128);
	create_byte	(0X2000012C);
	make_array	(0X2000012D,	0X3);
	create_dword	(0X20000130);
	create_byte	(0X20000144);
	create_byte	(0X20000159);
	create_byte	(0X2000015A);
	create_byte	(0X2000015B);
	create_byte	(0X2000015C);
	create_byte	(0X2000015D);
	create_byte	(0X2000015E);
	create_byte	(0X2000015F);
	create_word	(0X20000160);
	make_array	(0X20000162,	0X2);
	create_dword	(0X20000164);
	create_dword	(0X20000168);
	create_dword	(0X2000016C);
	create_dword	(0X20000170);
	create_byte	(0X20000174);
	create_byte	(0X20000175);
	create_byte	(0X20000176);
	create_byte	(0X20000177);
	create_byte	(0X20000178);
	make_array	(0X20000179,	0X3);
	create_dword	(0X2000017C);
	create_byte	(0X20000180);
	create_byte	(0X20000181);
	create_byte	(0X20000182);
	create_byte	(0X20000183);
	create_byte	(0X20000184);
	create_byte	(0X20000185);
	create_byte	(0X20000186);
	create_dword	(0X20000188);
	create_byte	(0X2000018C);
	set_name	(0X2000018C,	"active_transciever_attenuation");
	create_byte	(x=0X2000018D);
	op_dec		(x,	0);
	set_name	(0X2000018D,	"transceiver_pwr_mode_unk016C");
	create_byte	(0X2000018E);
	set_name	(0X2000018E,	"fpga_reg_unkn00_value");
	create_dword	(0X20000190);
	create_byte	(0X20000194);
	create_byte	(0X20000195);
	make_array	(0X20000196,	0X2);
	create_dword	(0X20000198);
	create_dword	(0X2000019C);
	create_dword	(0X200001A0);
	create_byte	(0X200001A4);
	create_byte	(0X200001A5);
	create_byte	(0X200001A6);
	create_byte	(0X200001A7);
	create_byte	(0X200001A8);
	make_array	(0X200001A9,	0X3);
	create_word	(0X200001AC);
	create_word	(0X200001AE);
	create_word	(0X200001B0);
	create_word	(0X200001B2);
	create_word	(0X200001B4);
	create_word	(0X200001B6);
	create_word	(0X200001B8);
	create_word	(0X200001BA);
	create_dword	(0X200001BC);
	create_dword	(0X200001C0);
	create_word	(0X200001C4);
	make_array	(0X200001C6,	0X2);
	create_dword	(0X200001C8);
	create_dword	(0X200001CC);
	create_dword	(0X200001D0);
	create_dword	(0X200001D4);
	create_dword	(0X20001640);
	create_word	(0X20001A68);
	create_word	(0X20001A6A);
	create_word	(0X20001A6C);
	create_word	(0X20001A6E);
	create_word	(0X20001A70);
	create_word	(0X20001A72);
	create_word	(0X20001A74);
	create_word	(0X20001A76);
	create_word	(0X20001A89);
	create_word	(0X20001A8D);
	create_word	(0X20001A91);
	create_byte	(0X20001A94);
	create_byte	(0X20001A95);
	create_byte	(0X20001A96);
	create_dword	(0X20001A99);
	create_dword	(0X20001A9D);
	create_word	(0X20001AA1);
	create_byte	(0X20001AC4);
	create_dword	(0X20001CC6);
	create_dword	(0X20001CCA);
	create_byte	(0X20001CCE);
	create_dword	(0X20001CD0);
	set_name	(0X20001CD0,	"ofdm_receiver_id");
	create_byte	(0X20001CD4);
	create_dword	(0X20001CD5);
	make_array	(0X20001CD9,	0X3);
	create_dword	(0X20001CDC);
	set_name	(0X20001CDC,	"transceiver_flags_1A28");
	create_dword	(0X20001CE0);
	create_byte	(0X20001D1C);
	make_array	(0X20001D1D,	0X3);
	create_dword	(0X20001D20);
	create_dword	(0X20001D24);
	create_dword	(0X20001D28);
	create_dword	(0X20001D2C);
	create_dword	(0X20001D30);
	create_dword	(0X20001D34);
	create_dword	(0X20001D38);
	create_dword	(0X20001D3C);
	create_dword	(0X20001D40);
	create_byte	(0X20001D44);
	create_byte	(0X20001D45);
	create_byte	(0X20001D46);
	create_byte	(0X20001DAB);
	create_byte	(0X20001DAD);
	create_byte	(0X20001DAE);
	create_byte	(0X20001DAF);
	create_byte	(0X20001DB0);
	create_byte	(0X20001DB1);
	create_byte	(0X20001DB2);
	create_dword	(0X20001DB4);
	create_byte	(0X20001DB8);
	create_byte	(0X20001DB9);
	set_name	(0X20001DB9,	"transciever_attenuation");
	create_byte	(0X20001DBA);
	set_name	(0X20001DBA,	"tcx_control_attenuation_by_packet");
	create_byte	(0X20001DBB);
	create_byte	(0X20001E7C);
	create_dword	(0X20001EA0);
	create_word	(0X20001EAA);
	make_array	(0X20001EAC,	0X4);
	create_dword	(0X20001FB0);
	create_word	(0X20001FBA);
	make_array	(0X20001FBC,	0X4);
	create_dword	(0X200024F8);
	create_word	(0X20002502);
	make_array	(0X20002504,	0X4);
	create_dword	(0X20002780);
	create_word	(0X2000278A);
	make_array	(0X2000278C,	0X4);
	create_dword	(0X20002810);
	set_name	(0X20002810,	"payload_osd_general");
	create_dword	(0X20002814);
	create_dword	(0X20002818);
	create_dword	(0X2000281C);
	create_word	(0X2000282C);
	create_byte	(0X20002834);
	create_dword	(0X2000283C);
	create_dword	(0X20002840);
	create_dword	(0X20002844);
	create_dword	(0X20002848);
	make_array	(0X2000284C,	0X4);
	create_byte	(0X20002850);
	create_dword	(0X20002858);
	create_dword	(0X2000285C);
	create_word	(0X2000286D);
	create_dword	(0X20002870);
	create_word	(0X2000287A);
	make_array	(0X2000287C,	0X4);
	create_dword	(0X20004FE0);
	create_word	(0X40000000);
	create_word	(0X40000024);
	make_array	(0X40000026,	0X3DA);
	create_word	(0X40000400);
	create_word	(0X40000424);
	create_dword	(0X40003000);
	create_dword	(0X40003004);
	create_dword	(0X40003008);
	create_dword	(0X4000300C);
	make_array	(0X40003010,	0X7F0);
	create_word	(0X40003808);
	make_array	(0X4000380A,	0X2);
	create_word	(0X4000380C);
	make_array	(0X4000380E,	0X3F2);
	create_word	(0X40004400);
	make_array	(0X40004402,	0X2);
	create_word	(0X40004404);
	make_array	(0X40004406,	0X3FA);
	create_word	(0X40004800);
	make_array	(0X40004802,	0X2);
	create_word	(0X40004804);
	make_array	(0X40004806,	0X3FA);
	create_dword	(0X40006600);
	create_dword	(0X40006604);
	create_dword	(0X4000660C);
	create_dword	(0X40006614);
	create_dword	(0X4000661C);
	make_array	(0X40006620,	0XE0);
	create_dword	(0X40010000);
	create_dword	(0X40010004);
	create_dword	(0X4001001C);
	make_array	(0X40010020,	0X3E0);
	create_dword	(0X40010400);
	create_dword	(0X40010404);
	create_dword	(0X40010408);
	create_dword	(0X4001040C);
	create_dword	(0X40010410);
	create_dword	(0X40010414);
	make_array	(0X40010418,	0X3E8);
	create_dword	(0X40010808);
	create_dword	(0X4001080C);
	make_array	(0X40010810,	0X3F0);
	create_dword	(0X40010C08);
	create_dword	(0X40010C0C);
	make_array	(0X40010C10,	0X3F0);
	create_dword	(0X40011008);
	make_array	(0X4001100C,	0X3F4);
	create_dword	(0X40012408);
	create_dword	(0X4001244C);
	make_array	(0X40012450,	0X3B0);
	create_word	(0X4001300C);
	make_array	(0X4001300E,	0X3F2);
	create_word	(0X40013800);
	make_array	(0X40013802,	0X2);
	create_word	(0X40013804);
	make_array	(0X40013806,	0X3FA);
	create_dword	(0X40020000);
	create_dword	(0X40020004);
	create_dword	(0X4002001C);
	create_dword	(0X40020044);
	make_array	(0X40020048,	0X38);
	create_dword	(0X40020080);
	make_array	(0X40020084,	0X37C);
	create_dword	(0X40020400);
	create_dword	(0X40020404);
	create_dword	(0X40021000);
	create_dword	(0X40021004);
	create_dword	(0X40021008);
	create_dword	(0X4002100C);
	create_dword	(0X40021010);
	create_dword	(0X40021014);
	create_dword	(0X40021018);
	create_dword	(0X4002101C);
	create_dword	(0X40021020);
	create_dword	(0X40021024);
	make_array	(0X40021028,	0XFD8);
	create_dword	(0X40022000);
	create_dword	(0X40022004);
	create_dword	(0X40022008);
	create_dword	(0X4002200C);
	create_dword	(0X40022010);
	create_dword	(0X40022014);
	create_dword	(0X4002201C);
	create_dword	(0X40022020);
	make_array	(0X40022024,	0X1DC);
	create_dword	(0X4220001C);
	create_dword	(0X422000DC);
	make_array	(0X422000E0,	0X20);
	create_dword	(0X42420000);
	create_dword	(0X4242004C);
	make_array	(0X42420050,	0X10);
	create_dword	(0X42420060);
	create_dword	(0X424200D8);
	create_dword	(0X4242043C);
	create_dword	(0X42420440);
	make_array	(0X42420444,	0X3C);
	create_dword	(0X42420480);
	make_array	(0X42420484,	0X7C);
}

static Functions_0(void) {

	add_func    (0X8008120,0X8008182);
	set_func_flags(0X8008120,0x400);
	add_func    (0X80081A0,0X80081A4);
	set_func_flags(0X80081A0,0x400);
	set_frame_size(0X80081A0, 0X18, 0, 0);
	add_func    (0X80081A4,0X80081A8);
	set_func_flags(0X80081A4,0x400);
	set_frame_size(0X80081A4, 0X8, 0, 0);
	add_func    (0X80081C8,0X80081D0);
	set_func_flags(0X80081C8,0x400);
	set_frame_size(0X80081C8, 0X20, 0, 0);
	add_func    (0X80081D0,0X80081D2);
	set_func_flags(0X80081D0,0x401);
	add_func    (0X80081D2,0X80081D4);
	set_func_flags(0X80081D2,0x401);
	add_func    (0X80081D4,0X80081D6);
	set_func_flags(0X80081D4,0x401);
	add_func    (0X80081D6,0X80081D8);
	set_func_flags(0X80081D6,0x401);
	add_func    (0X80081D8,0X80081DA);
	set_func_flags(0X80081D8,0x401);
	add_func    (0X80081DA,0X80081DC);
	set_func_flags(0X80081DA,0x401);
	add_func    (0X80081DC,0X80081DE);
	set_func_flags(0X80081DC,0x401);
	add_func    (0X80081DE,0X80081E0);
	set_func_flags(0X80081DE,0x401);
	add_func    (0X80081E0,0X80081E2);
	set_func_flags(0X80081E0,0x401);
	add_func    (0X80081E2,0X80081E4);
	set_func_flags(0X80081E2,0x401);
	add_func    (0X80081E4,0X80081EE);
	set_func_flags(0X80081E4,0x400);
	add_func    (0X8008208,0X8008212);
	set_func_flags(0X8008208,0x400);
	add_func    (0X8008212,0X8008278);
	set_func_flags(0X8008212,0x400);
	set_frame_size(0X8008212, 0X10, 0, 0);
	add_func    (0X80082A8,0X80082D0);
	set_func_flags(0X80082A8,0x400);
	add_func    (0X80082E4,0X8008332);
	set_func_flags(0X80082E4,0x400);
	set_frame_size(0X80082E4, 0X8, 0, 0);
	add_func    (0X8008332,0X8008378);
	set_func_flags(0X8008332,0x400);
	set_frame_size(0X8008332, 0XC, 0, 0);
	add_func    (0X800838A,0X80083A0);
	set_func_flags(0X800838A,0x400);
	add_func    (0X80083CE,0X80083D8);
	set_func_flags(0X80083CE,0x400);
	add_func    (0X80083D8,0X80083EC);
	set_func_flags(0X80083D8,0x400);
	add_func    (0X80083EC,0X80083F6);
	set_func_flags(0X80083EC,0x400);
	add_func    (0X80083F6,0X800840A);
	set_func_flags(0X80083F6,0x400);
	add_func    (0X800840A,0X8008420);
	set_func_flags(0X800840A,0x400);
	add_func    (0X8008462,0X800851A);
	set_func_flags(0X8008462,0x400);
	set_frame_size(0X8008462, 0X14, 0, 0);
	add_func    (0X8008530,0X8008538);
	set_func_flags(0X8008530,0x400);
	add_func    (0X80086AC,0X80086D2);
	set_func_flags(0X80086AC,0x400);
	add_func    (0X80086EC,0X80086FE);
	set_func_flags(0X80086EC,0x400);
	add_func    (0X8008734,0X8008766);
	set_func_flags(0X8008734,0x400);
	set_frame_size(0X8008734, 0X8, 0, 0);
	add_func    (0X8008766,0X800887A);
	set_func_flags(0X8008766,0x400);
	set_frame_size(0X8008766, 0XC, 0, 0);
	add_func    (0X800887A,0X800897C);
	set_func_flags(0X800887A,0x400);
	set_frame_size(0X800887A, 0X8, 0, 0);
	add_func    (0X800897C,0X800899C);
	set_func_flags(0X800897C,0x400);
	add_func    (0X8008A58,0X8008B88);
	set_func_flags(0X8008A58,0x400);
	set_frame_size(0X8008A58, 0X8, 0, 0);
	add_func    (0X8008C42,0X8008D32);
	set_func_flags(0X8008C42,0x400);
	set_frame_size(0X8008C42, 0X8, 0, 0);
	add_func    (0X8008E78,0X8008E8A);
	set_func_flags(0X8008E78,0x400);
	add_func    (0X8008F36,0X8008F46);
	set_func_flags(0X8008F36,0x400);
	add_func    (0X8009120,0X8009264);
	set_func_flags(0X8009120,0x400);
	add_func    (0X8009264,0X80092A0);
	set_func_flags(0X8009264,0x400);
	set_frame_size(0X8009264, 0X8, 0, 0);
	add_func    (0X80092BA,0X80092D2);
	set_func_flags(0X80092BA,0x400);
	add_func    (0X80092D2,0X80092E4);
	set_func_flags(0X80092D2,0x400);
	add_func    (0X80092E4,0X80092E8);
	set_func_flags(0X80092E4,0x400);
	add_func    (0X80092E8,0X80092F0);
	set_func_flags(0X80092E8,0x400);
	add_func    (0X8009316,0X800932C);
	set_func_flags(0X8009316,0x400);
	add_func    (0X800938C,0X800941A);
	set_func_flags(0X800938C,0x400);
	add_func    (0X800947A,0X8009482);
	set_func_flags(0X800947A,0x400);
	add_func    (0X80094CA,0X80094D6);
	set_func_flags(0X80094CA,0x400);
	add_func    (0X80094E2,0X80094F0);
	set_func_flags(0X80094E2,0x400);
	add_func    (0X80094FE,0X800952E);
	set_func_flags(0X80094FE,0x400);
	add_func    (0X800952E,0X8009554);
	set_func_flags(0X800952E,0x400);
	set_frame_size(0X800952E, 0X4, 0, 0);
	add_func    (0X8009554,0X800959C);
	set_func_flags(0X8009554,0x400);
	set_frame_size(0X8009554, 0XC, 0, 0);
	add_func    (0X80095E0,0X8009606);
	set_func_flags(0X80095E0,0x400);
	set_frame_size(0X80095E0, 0X4, 0, 0);
	add_func    (0X800964A,0X800965E);
	set_func_flags(0X800964A,0x400);
	add_func    (0X800975A,0X8009796);
	set_func_flags(0X800975A,0x400);
	set_frame_size(0X800975A, 0X10, 0, 0);
	add_func    (0X8009B08,0X8009C1A);
	set_func_flags(0X8009B08,0x400);
	set_frame_size(0X8009B08, 0X18, 0, 0);
	add_func    (0X8009C2A,0X8009C3C);
	set_func_flags(0X8009C2A,0x400);
	add_func    (0X8009C5E,0X8009C62);
	set_func_flags(0X8009C5E,0x400);
	add_func    (0X8009C62,0X8009C66);
	set_func_flags(0X8009C62,0x400);
	add_func    (0X8009CA6,0X8009D30);
	set_func_flags(0X8009CA6,0x400);
	set_frame_size(0X8009CA6, 0X14, 0, 0);
	add_func    (0X8009D30,0X8009D72);
	set_func_flags(0X8009D30,0x400);
	set_frame_size(0X8009D30, 0XC, 0, 0);
	add_func    (0X8009DA0,0X8009DA6);
	set_func_flags(0X8009DA0,0x400);
	add_func    (0X8009DA6,0X8009DAC);
	set_func_flags(0X8009DA6,0x400);
	add_func    (0X8009DAC,0X8009DB2);
	set_func_flags(0X8009DAC,0x400);
	add_func    (0X8009DB2,0X8009DBC);
	set_func_flags(0X8009DB2,0x400);
	add_func    (0X8009DBC,0X8009DC6);
	set_func_flags(0X8009DBC,0x400);
	add_func    (0X8009E66,0X8009E9E);
	set_func_flags(0X8009E66,0x400);
	set_frame_size(0X8009E66, 0X8, 0, 0);
	add_func    (0X8009F82,0X8009F94);
	set_func_flags(0X8009F82,0x400);
	add_func    (0X8009FDA,0X800A09A);
	set_func_flags(0X8009FDA,0x400);
	set_frame_size(0X8009FDA, 0XC, 0, 0);
	add_func    (0X800A09A,0X800A0B4);
	set_func_flags(0X800A09A,0x400);
	add_func    (0X800A0B4,0X800A0CE);
	set_func_flags(0X800A0B4,0x400);
	add_func    (0X800A0CE,0X800A0E8);
	set_func_flags(0X800A0CE,0x400);
	add_func    (0X800A0E8,0X800A102);
	set_func_flags(0X800A0E8,0x400);
	add_func    (0X800A102,0X800A11C);
	set_func_flags(0X800A102,0x400);
	add_func    (0X800A1D8,0X800A214);
	set_func_flags(0X800A1D8,0x400);
	set_frame_size(0X800A1D8, 0X8, 0, 0);
	add_func    (0X800A322,0X800A33A);
	set_func_flags(0X800A322,0x400);
	add_func    (0X800A352,0X800A372);
	set_func_flags(0X800A352,0x400);
	set_frame_size(0X800A352, 0XC, 0, 0);
	add_func    (0X800A388,0X800A38E);
	set_func_flags(0X800A388,0x400);
	add_func    (0X800A476,0X800A48A);
	set_func_flags(0X800A476,0x400);
	set_frame_size(0X800A476, 0X8, 0, 0);
	add_func    (0X800A640,0X800A6BA);
	set_func_flags(0X800A640,0x400);
	add_func    (0X800A6BA,0X800A73E);
	set_func_flags(0X800A6BA,0x400);
	set_frame_size(0X800A6BA, 0X10, 0, 0);
	add_func    (0X800A73E,0X800A7D8);
	set_func_flags(0X800A73E,0x400);
	set_frame_size(0X800A73E, 0X10, 0, 0);
	add_func    (0X800A7D8,0X800A86E);
	set_func_flags(0X800A7D8,0x400);
	set_frame_size(0X800A7D8, 0X10, 0, 0);
	add_func    (0X800A86E,0X800A924);
	set_func_flags(0X800A86E,0x400);
	set_frame_size(0X800A86E, 0X10, 0, 0);
	add_func    (0X800A924,0X800A93E);
	set_func_flags(0X800A924,0x400);
	add_func    (0X800A93E,0X800A9C0);
	set_func_flags(0X800A93E,0x400);
	set_frame_size(0X800A93E, 0X14, 0, 0);
	add_func    (0X800A9C0,0X800A9D2);
	set_func_flags(0X800A9C0,0x400);
	add_func    (0X800A9D2,0X800AA4C);
	set_func_flags(0X800A9D2,0x400);
	set_frame_size(0X800A9D2, 0X14, 0, 0);
	add_func    (0X800AA4C,0X800AA66);
	set_func_flags(0X800AA4C,0x400);
	add_func    (0X800AA66,0X800AAE8);
	set_func_flags(0X800AA66,0x400);
	set_frame_size(0X800AA66, 0X14, 0, 0);
	add_func    (0X800AAE8,0X800AAFA);
	set_func_flags(0X800AAE8,0x400);
	add_func    (0X800AAFA,0X800AB66);
	set_func_flags(0X800AAFA,0x400);
	set_frame_size(0X800AAFA, 0X14, 0, 0);
	add_func    (0X800AD2E,0X800AD40);
	set_func_flags(0X800AD2E,0x400);
	add_func    (0X800AD6C,0X800AD7E);
	set_func_flags(0X800AD6C,0x400);
	add_func    (0X800ADD4,0X800ADF0);
	set_func_flags(0X800ADD4,0x400);
	set_frame_size(0X800ADD4, 0XC, 0, 0);
	add_func    (0X800B28A,0X800B2AC);
	set_func_flags(0X800B28A,0x400);
	set_frame_size(0X800B28A, 0XC, 0, 0);
	add_func    (0X800B2AC,0X800B2B2);
	set_func_flags(0X800B2AC,0x400);
	add_func    (0X800B2B4,0X800B33A);
	set_func_flags(0X800B2B4,0x400);
	set_frame_size(0X800B2B4, 0X8, 0, 0);
	add_func    (0X800B33A,0X800B40C);
	set_func_flags(0X800B33A,0x400);
	set_frame_size(0X800B33A, 0X38, 0, 0);
	add_func    (0X800B452,0X800B46A);
	set_func_flags(0X800B452,0x400);
	add_func    (0X800B46A,0X800B4B4);
	set_func_flags(0X800B46A,0x400);
	set_frame_size(0X800B46A, 0X14, 0, 0);
	add_func    (0X800B4B4,0X800B4C6);
	set_func_flags(0X800B4B4,0x400);
	add_func    (0X800B634,0X800B688);
	set_func_flags(0X800B634,0x400);
	set_frame_size(0X800B634, 0X10, 0, 0);
	add_func    (0X800B6BC,0X800B6C8);
	set_func_flags(0X800B6BC,0x400);
	set_frame_size(0X800B6BC, 0X8, 0, 0);
	add_func    (0X800B6C8,0X800B6EC);
	set_func_flags(0X800B6C8,0x400);
	set_frame_size(0X800B6C8, 0X18, 0, 0);
	add_func    (0X800B952,0X800BDDA);
	set_func_flags(0X800B952,0x400);
	set_frame_size(0X800B952, 0X48, 0, 0);
	add_func    (0X800BDDA,0X800BF98);
	set_func_flags(0X800BDDA,0x400);
	set_frame_size(0X800BDDA, 0X18, 0, 0);
	add_func    (0X800C09E,0X800C174);
	set_func_flags(0X800C09E,0x400);
	set_frame_size(0X800C09E, 0X18, 0, 0);
	add_func    (0X800C174,0X800C228);
	set_func_flags(0X800C174,0x400);
	set_frame_size(0X800C174, 0X28, 0, 0);
	add_func    (0X800C228,0X800C2B8);
	set_func_flags(0X800C228,0x400);
	set_frame_size(0X800C228, 0X30, 0, 0);
	add_func    (0X800C2B8,0X800C2C0);
	set_func_flags(0X800C2B8,0x400);
	add_func    (0X800C2DC,0X800C326);
	set_func_flags(0X800C2DC,0x400);
	add_func    (0X800C326,0X800C3E0);
	set_func_flags(0X800C326,0x400);
	set_frame_size(0X800C326, 0X20, 0, 0);
	add_func    (0X800C3E0,0X800C3F2);
	set_func_flags(0X800C3E0,0x400);
	add_func    (0X800C3F2,0X800C404);
	set_func_flags(0X800C3F2,0x400);
	add_func    (0X800C40C,0X800C4A6);
	set_func_flags(0X800C40C,0x400);
	set_frame_size(0X800C40C, 0X8, 0, 0);
	add_func    (0X800C4A6,0X800C4D8);
	set_func_flags(0X800C4A6,0x400);
	add_func    (0X800C4D8,0X800C534);
	set_func_flags(0X800C4D8,0x400);
	set_frame_size(0X800C4D8, 0X8, 0, 0);
	add_func    (0X800C534,0X800C550);
	set_func_flags(0X800C534,0x400);
	set_frame_size(0X800C534, 0X8, 0, 0);
	add_func    (0X800C560,0X800C592);
	set_func_flags(0X800C560,0x400);
	set_frame_size(0X800C560, 0X8, 0, 0);
	add_func    (0X800C592,0X800C5C0);
	set_func_flags(0X800C592,0x400);
	add_func    (0X800C5C0,0X800C5EE);
	set_func_flags(0X800C5C0,0x400);
	add_func    (0X800C5EE,0X800C61C);
	set_func_flags(0X800C5EE,0x400);
	add_func    (0X800C620,0X800C64E);
	set_func_flags(0X800C620,0x400);
	set_frame_size(0X800C620, 0X8, 0, 0);
	add_func    (0X800C64E,0X800C69C);
	set_func_flags(0X800C64E,0x400);
	set_frame_size(0X800C64E, 0X8, 0, 0);
	add_func    (0X800C69C,0X800C6C6);
	set_func_flags(0X800C69C,0x400);
	add_func    (0X800C6F6,0X800C73E);
	set_func_flags(0X800C6F6,0x400);
	set_frame_size(0X800C6F6, 0X10, 0, 0);
	add_func    (0X800C73E,0X800C744);
	set_func_flags(0X800C73E,0x400);
	add_func    (0X800C744,0X800C752);
	set_func_flags(0X800C744,0x400);
	add_func    (0X800C752,0X800C760);
	set_func_flags(0X800C752,0x400);
	add_func    (0X800C760,0X800C782);
	set_func_flags(0X800C760,0x400);
	add_func    (0X800C78C,0X800C79E);
	set_func_flags(0X800C78C,0x400);
	add_func    (0X800C83E,0X800C8E2);
	set_func_flags(0X800C83E,0x400);
	set_frame_size(0X800C83E, 0X20, 0, 0);
	add_func    (0X800C8E2,0X800C90E);
	set_func_flags(0X800C8E2,0x400);
	add_func    (0X800C920,0X800C940);
	set_func_flags(0X800C920,0x400);
	add_func    (0X800C966,0X800C9BA);
	set_func_flags(0X800C966,0x400);
	set_frame_size(0X800C966, 0X10, 0, 0);
	add_func    (0X800C9BA,0X800C9C0);
	set_func_flags(0X800C9BA,0x400);
	add_func    (0X800C9C0,0X800C9CA);
	set_func_flags(0X800C9C0,0x400);
	set_frame_size(0X800C9C0, 0X8, 0, 0);
	add_func    (0X800C9CA,0X800C9EA);
	set_func_flags(0X800C9CA,0x400);
	set_frame_size(0X800C9CA, 0X10, 0, 0);
	add_func    (0X800C9EA,0X800CA02);
	set_func_flags(0X800C9EA,0x400);
	set_frame_size(0X800C9EA, 0X10, 0, 0);
	add_func    (0X800CA0C,0X800CA16);
	set_func_flags(0X800CA0C,0x400);
	add_func    (0X800CA16,0X800CAA8);
	set_func_flags(0X800CA16,0x400);
	add_func    (0X800CAA8,0X800CAEA);
	set_func_flags(0X800CAA8,0x400);
	set_frame_size(0X800CAA8, 0X8, 0, 0);
	add_func    (0X800CB10,0X800CB42);
	set_func_flags(0X800CB10,0x400);
	set_frame_size(0X800CB10, 0X18, 0, 0);
	add_func    (0X800CB42,0X800CB58);
	set_func_flags(0X800CB42,0x400);
	set_frame_size(0X800CB42, 0X8, 0, 0);
	add_func    (0X800CB58,0X800CC2E);
	set_func_flags(0X800CB58,0x400);
	set_frame_size(0X800CB58, 0X428, 0, 0);
	add_func    (0X800CC70,0X800CC8E);
	set_func_flags(0X800CC70,0x400);
	set_frame_size(0X800CC70, 0X8, 0, 0);
	add_func    (0X800CC8E,0X800CCAE);
	set_func_flags(0X800CC8E,0x400);
	set_frame_size(0X800CC8E, 0X8, 0, 0);
	add_func    (0X800CCAE,0X800CCB6);
	set_func_flags(0X800CCAE,0x400);
	set_frame_size(0X800CCAE, 0X8, 0, 0);
	add_func    (0X800CCB6,0X800CCC8);
	set_func_flags(0X800CCB6,0x400);
	set_frame_size(0X800CCB6, 0X8, 0, 0);
	add_func    (0X800CCC8,0X800CCD0);
	set_func_flags(0X800CCC8,0x400);
	add_func    (0X800CCDC,0X800CD50);
	set_func_flags(0X800CCDC,0x400);
	set_frame_size(0X800CCDC, 0X18, 0, 0);
	add_func    (0X800CD50,0X800CD7C);
	set_func_flags(0X800CD50,0x400);
	set_frame_size(0X800CD50, 0X8, 0, 0);
	add_func    (0X800CD7C,0X800CE10);
	set_func_flags(0X800CD7C,0x400);
	set_frame_size(0X800CD7C, 0X28, 0, 0);
	add_func    (0X800CE38,0X800CE3A);
	set_func_flags(0X800CE38,0x440);
	add_func    (0X800CE64,0X800CEBA);
	set_func_flags(0X800CE64,0x400);
	set_frame_size(0X800CE64, 0X8, 0, 0);
	add_func    (0X800CF10,0X800CF9A);
	set_func_flags(0X800CF10,0x400);
	set_frame_size(0X800CF10, 0X10, 0, 0);
	add_func    (0X800CFA4,0X800CFAA);
	set_func_flags(0X800CFA4,0x400);
	add_func    (0X800CFAA,0X800CFDA);
	set_func_flags(0X800CFAA,0x400);
	add_func    (0X800CFDA,0X800D008);
	set_func_flags(0X800CFDA,0x400);
	set_frame_size(0X800CFDA, 0X8, 0, 0);
	add_func    (0X800D010,0X800D05E);
	set_func_flags(0X800D010,0x400);
	set_frame_size(0X800D010, 0X18, 0, 0);
	add_func    (0X800D05E,0X800D06E);
	set_func_flags(0X800D05E,0x400);
	set_frame_size(0X800D05E, 0X10, 0, 0);
	add_func    (0X800D06E,0X800D07E);
	set_func_flags(0X800D06E,0x400);
	set_frame_size(0X800D06E, 0X10, 0, 0);
	add_func    (0X800D0A4,0X800D14E);
	set_func_flags(0X800D0A4,0x400);
	set_frame_size(0X800D0A4, 0X8, 0, 0);
	add_func    (0X800D14E,0X800D154);
	set_func_flags(0X800D14E,0x400);
	SetType(0X800D14E, "int get_board_version(void);");
	add_func    (0X800D160,0X800D1C0);
	set_func_flags(0X800D160,0x400);
	set_frame_size(0X800D160, 0X10, 0, 0);
	add_func    (0X800D37A,0X800D3C8);
	set_func_flags(0X800D37A,0x400);
	set_frame_size(0X800D37A, 0X10, 0, 0);
	add_func    (0X800D3C8,0X800D3F2);
	set_func_flags(0X800D3C8,0x400);
	set_frame_size(0X800D3C8, 0X10, 0, 0);
	add_func    (0X800D410,0X800D43C);
	set_func_flags(0X800D410,0x400);
	add_func    (0X800D43C,0X800D45C);
	set_func_flags(0X800D43C,0x400);
	add_func    (0X800D45C,0X800D47A);
	set_func_flags(0X800D45C,0x400);
	add_func    (0X800D482,0X800D484);
	set_func_flags(0X800D482,0x440);
	add_func    (0X800D484,0X800D4C0);
	set_func_flags(0X800D484,0x400);
	set_frame_size(0X800D484, 0X10, 0, 0);
	add_func    (0X800D4C0,0X800D4F6);
	set_func_flags(0X800D4C0,0x400);
	set_frame_size(0X800D4C0, 0X8, 0, 0);
	add_func    (0X800D4F6,0X800D520);
	set_func_flags(0X800D4F6,0x400);
	set_frame_size(0X800D4F6, 0XC, 0, 0);
	add_func    (0X800D520,0X800D54A);
	set_func_flags(0X800D520,0x400);
	SetType(0X800D520, "char *__fastcall decrypt_payload(unsigned int seqctr, uint8_t *payload, unsigned int len);");
	set_frame_size(0X800D520, 0XC, 0, 0);
	add_func    (0X800D55C,0X800D568);
	set_func_flags(0X800D55C,0x400);
	add_func    (0X800D57A,0X800D586);
	set_func_flags(0X800D57A,0x400);
	add_func    (0X800D58C,0X800D60E);
	set_func_flags(0X800D58C,0x400);
	set_frame_size(0X800D58C, 0X20, 0, 0);
	add_func    (0X800D620,0X800D63A);
	set_func_flags(0X800D620,0x400);
	set_frame_size(0X800D620, 0X8, 0, 0);
	add_func    (0X800D63A,0X800D65E);
	set_func_flags(0X800D63A,0x400);
	set_frame_size(0X800D63A, 0X8, 0, 0);
	add_func    (0X800D65E,0X800D680);
	set_func_flags(0X800D65E,0x400);
	set_frame_size(0X800D65E, 0X10, 0, 0);
	add_func    (0X800D680,0X800D6A6);
	set_func_flags(0X800D680,0x400);
	set_frame_size(0X800D680, 0X10, 0, 0);
	add_func    (0X800D6A6,0X800D6EA);
	set_func_flags(0X800D6A6,0x400);
	SetType(0X800D6A6, "void __cdecl ad936x_reg_sync_write(unsigned int addr10, int val, int wrflag);");
	set_frame_size(0X800D6A6, 0X10, 0, 0);
	add_func    (0X800D6EA,0X800D730);
	set_func_flags(0X800D6EA,0x400);
	set_frame_size(0X800D6EA, 0X10, 0, 0);
	add_func    (0X800D734,0X800D766);
	set_func_flags(0X800D734,0x400);
	set_frame_size(0X800D734, 0X10, 0, 0);
	add_func    (0X800D798,0X800D7BA);
	set_func_flags(0X800D798,0x400);
	set_frame_size(0X800D798, 0X10, 0, 0);
	add_func    (0X800D7BA,0X800D7E6);
	set_func_flags(0X800D7BA,0x400);
	set_frame_size(0X800D7BA, 0X10, 0, 0);
	add_func    (0X800D7E6,0X800D970);
	set_func_flags(0X800D7E6,0x400);
	set_frame_size(0X800D7E6, 0X10, 0, 0);
	add_func    (0X800D970,0X800DA80);
	set_func_flags(0X800D970,0x400);
	set_frame_size(0X800D970, 0X10, 0, 0);
	add_func    (0X800DA80,0X800DA9C);
	set_func_flags(0X800DA80,0x400);
	set_frame_size(0X800DA80, 0X8, 0, 0);
	add_func    (0X800DA9C,0X800DB9E);
	set_func_flags(0X800DA9C,0x400);
	set_frame_size(0X800DA9C, 0X10, 0, 0);
	add_func    (0X800DB9E,0X800DBDA);
	set_func_flags(0X800DB9E,0x400);
	set_frame_size(0X800DB9E, 0X10, 0, 0);
	add_func    (0X800DBE0,0X800DD72);
	set_func_flags(0X800DBE0,0x400);
	set_frame_size(0X800DBE0, 0X18, 0, 0);
	add_func    (0X800DD72,0X800DDA6);
	set_func_flags(0X800DD72,0x400);
	set_frame_size(0X800DD72, 0X10, 0, 0);
	add_func    (0X800DDA6,0X800E290);
	set_func_flags(0X800DDA6,0x400);
	set_frame_size(0X800DDA6, 0X20, 0, 0);
	add_func    (0X800E290,0X800E2B8);
	set_func_flags(0X800E290,0x400);
	set_frame_size(0X800E290, 0X8, 0, 0);
	add_func    (0X800E2B8,0X800E542);
	set_func_flags(0X800E2B8,0x400);
	set_frame_size(0X800E2B8, 0X20, 0, 0);
	add_func    (0X800E542,0X800E56A);
	set_func_flags(0X800E542,0x400);
	SetType(0X800E542, "void __cdecl sub_800E542();");
	set_frame_size(0X800E542, 0X8, 0, 0);
	add_func    (0X800E56A,0X800E592);
	set_func_flags(0X800E56A,0x400);
	set_frame_size(0X800E56A, 0X8, 0, 0);
	add_func    (0X800E81C,0X800E8F0);
	set_func_flags(0X800E81C,0x400);
	set_frame_size(0X800E81C, 0XC, 0, 0);
	add_func    (0X800E8F0,0X800E8F8);
	set_func_flags(0X800E8F0,0x400);
	set_frame_size(0X800E8F0, 0X8, 0, 0);
	add_func    (0X800E8F8,0X800E93E);
	set_func_flags(0X800E8F8,0x400);
	set_frame_size(0X800E8F8, 0X8, 0, 0);
	add_func    (0X800E9F4,0X800E9FE);
	set_func_flags(0X800E9F4,0x400);
	add_func    (0X800E9FE,0X800EA38);
	set_func_flags(0X800E9FE,0x400);
	add_func    (0X800EA38,0X800EA5A);
	set_func_flags(0X800EA38,0x400);
	add_func    (0X800EA5A,0X800EA88);
	set_func_flags(0X800EA5A,0x400);
	set_frame_size(0X800EA5A, 0X4, 0, 0);
	add_func    (0X800EA88,0X800EA92);
	set_func_flags(0X800EA88,0x400);
	add_func    (0X800EA92,0X800EA9A);
	set_func_flags(0X800EA92,0x400);
	add_func    (0X800EA9A,0X800EAA4);
	set_func_flags(0X800EA9A,0x400);
	add_func    (0X800EAA4,0X800EAD8);
	set_func_flags(0X800EAA4,0x400);
	add_func    (0X800EB12,0X800EB4C);
	set_func_flags(0X800EB12,0x400);
	add_func    (0X800EB4C,0X800EB86);
	set_func_flags(0X800EB4C,0x400);
	add_func    (0X800EBC0,0X800EBEA);
	set_func_flags(0X800EBC0,0x400);
	set_frame_size(0X800EBC0, 0X8, 0, 0);
	add_func    (0X800EBEA,0X800EBF0);
	set_func_flags(0X800EBEA,0x400);
	add_func    (0X800EBF0,0X800EC4A);
	set_func_flags(0X800EBF0,0x400);
	set_frame_size(0X800EBF0, 0X10, 0, 0);
	add_func    (0X800EC4A,0X800EF26);
	set_func_flags(0X800EC4A,0x400);
	set_frame_size(0X800EC4A, 0X30, 0, 0);
	add_func    (0X800EF26,0X800EF4E);
	set_func_flags(0X800EF26,0x400);
	set_frame_size(0X800EF26, 0X18, 0, 0);
	add_func    (0X800EF4E,0X800EFE0);
	set_func_flags(0X800EF4E,0x400);
	set_frame_size(0X800EF4E, 0X30, 0, 0);
	add_func    (0X800EFE0,0X800F096);
	set_func_flags(0X800EFE0,0x400);
	set_frame_size(0X800EFE0, 0X8, 0, 0);
	add_func    (0X800F096,0X800F236);
	set_func_flags(0X800F096,0x400);
	set_frame_size(0X800F096, 0X40, 0, 0);
	add_func    (0X800F264,0X800F270);
	set_func_flags(0X800F264,0x400);
	add_func    (0X800F270,0X800F28A);
	set_func_flags(0X800F270,0x400);
	add_func    (0X800F28A,0X800F2A6);
	set_func_flags(0X800F28A,0x400);
	add_func    (0X800F2A6,0X800F2AE);
	set_func_flags(0X800F2A6,0x400);
	add_func    (0X800F2B4,0X800F410);
	set_func_flags(0X800F2B4,0x400);
	set_frame_size(0X800F2B4, 0X18, 0, 0);
	add_func    (0X800F410,0X800F4A2);
	set_func_flags(0X800F410,0x400);
	set_frame_size(0X800F410, 0X8, 0, 0);
	add_func    (0X800F4A2,0X800F522);
	set_func_flags(0X800F4A2,0x400);
	set_frame_size(0X800F4A2, 0X10, 0, 0);
	add_func    (0X800F522,0X800F530);
	set_func_flags(0X800F522,0x400);
	set_frame_size(0X800F522, 0X8, 0, 0);
	add_func    (0X800F530,0X800F670);
	set_func_flags(0X800F530,0x400);
	set_frame_size(0X800F530, 0X10, 0, 0);
	add_func    (0X800F670,0X800F956);
	set_func_flags(0X800F670,0x400);
	set_frame_size(0X800F670, 0X8, 0, 0);
	add_func    (0X800F956,0X800FADA);
	set_func_flags(0X800F956,0x400);
	set_frame_size(0X800F956, 0X8, 0, 0);
	add_func    (0X800FB18,0X800FEEE);
	set_func_flags(0X800FB18,0x400);
	set_frame_size(0X800FB18, 0X8, 0, 0);
	set_name(0X800FB22, "locl_start", SN_LOCAL);
	set_name(0X800FB74, "locl_ad_from_pkt", SN_LOCAL);
	set_name(0X800FB94, "locl_ad_from_pkt_s1", SN_LOCAL);
	set_name(0X800FBB6, "locl_not_ad_from_pkt", SN_LOCAL);
	set_name(0X800FBC6, "locl_ar_from_pkt", SN_LOCAL);
	set_name(0X800FC20, "locl_phase2_s5", SN_LOCAL);
	set_name(0X800FED6, "locl_state_ok", SN_LOCAL);
	set_name(0X800FEE6, "locl_label_ret2", SN_LOCAL);
	set_name(0X800FEE8, "locl_last_fpga_wr", SN_LOCAL);
	set_name(0X800FEEC, "locl_label_ret1", SN_LOCAL);
	add_func    (0X800FEEE,0X800FF5E);
	set_func_flags(0X800FEEE,0x400);
	set_frame_size(0X800FEEE, 0X10, 0, 0);
	add_func    (0X800FF5E,0X800FF66);
	set_func_flags(0X800FF5E,0x400);
	add_func    (0X800FF66,0X800FFC2);
	set_func_flags(0X800FF66,0x400);
	set_frame_size(0X800FF66, 0X10, 0, 0);
	add_func    (0X800FFC2,0X800FFFA);
	set_func_flags(0X800FFC2,0x400);
	set_frame_size(0X800FFC2, 0X8, 0, 0);
	add_func    (0X800FFFA,0X80100F8);
	set_func_flags(0X800FFFA,0x400);
	set_frame_size(0X800FFFA, 0X8, 0, 0);
	add_func    (0X80100F8,0X8010238);
	set_func_flags(0X80100F8,0x400);
	set_frame_size(0X80100F8, 0X28, 0, 0);
	add_func    (0X8010238,0X8010372);
	set_func_flags(0X8010238,0x400);
	set_frame_size(0X8010238, 0X50, 0, 0);
	add_func    (0X8010372,0X8010414);
	set_func_flags(0X8010372,0x400);
	set_frame_size(0X8010372, 0X8, 0, 0);
	add_func    (0X8010414,0X80105DA);
	set_func_flags(0X8010414,0x400);
	set_frame_size(0X8010414, 0X40, 0, 0);
	add_func    (0X80105DA,0X801067C);
	set_func_flags(0X80105DA,0x400);
	set_frame_size(0X80105DA, 0X10, 0, 0);
	add_func    (0X801067C,0X80108FA);
	set_func_flags(0X801067C,0x400);
	set_frame_size(0X801067C, 0X18, 0, 0);
	add_func    (0X80108FA,0X801097C);
	set_func_flags(0X80108FA,0x400);
	set_frame_size(0X80108FA, 0X10, 0, 0);
	add_func    (0X801097C,0X80109AA);
	set_func_flags(0X801097C,0x400);
	set_frame_size(0X801097C, 0X8, 0, 0);
	add_func    (0X80109AA,0X80109D8);
	set_func_flags(0X80109AA,0x400);
	set_frame_size(0X80109AA, 0X8, 0, 0);
	add_func    (0X80109D8,0X8010A06);
	set_func_flags(0X80109D8,0x400);
	set_frame_size(0X80109D8, 0X8, 0, 0);
	add_func    (0X8010A06,0X8010A52);
	set_func_flags(0X8010A06,0x400);
	set_frame_size(0X8010A06, 0X8, 0, 0);
	add_func    (0X8010A52,0X8010A62);
	set_func_flags(0X8010A52,0x400);
	set_frame_size(0X8010A52, 0X8, 0, 0);
	add_func    (0X8010A62,0X8010A76);
	set_func_flags(0X8010A62,0x400);
	set_frame_size(0X8010A62, 0X8, 0, 0);
	add_func    (0X8010A76,0X8010A90);
	set_func_flags(0X8010A76,0x400);
	set_frame_size(0X8010A76, 0X8, 0, 0);
	add_func    (0X8010A90,0X8010CDE);
	set_func_flags(0X8010A90,0x400);
	set_frame_size(0X8010A90, 0X18, 0, 0);
	add_func    (0X8010CDE,0X8010CF4);
	set_func_flags(0X8010CDE,0x400);
	set_frame_size(0X8010CDE, 0X8, 0, 0);
	add_func    (0X8010CF4,0X8010DB4);
	set_func_flags(0X8010CF4,0x400);
	set_frame_size(0X8010CF4, 0X28, 0, 0);
	add_func    (0X8010DB4,0X8010E1C);
	set_func_flags(0X8010DB4,0x400);
	set_frame_size(0X8010DB4, 0X10, 0, 0);
	add_func    (0X8010E1C,0X8010F08);
	set_func_flags(0X8010E1C,0x400);
	set_frame_size(0X8010E1C, 0X30, 0, 0);
	add_func    (0X8010F08,0X8010F12);
	set_func_flags(0X8010F08,0x400);
	add_func    (0X8010F12,0X8010F24);
	set_func_flags(0X8010F12,0x400);
	add_func    (0X8010F24,0X8010F36);
	set_func_flags(0X8010F24,0x400);
	add_func    (0X8010F36,0X8010F48);
	set_func_flags(0X8010F36,0x400);
	add_func    (0X8010F48,0X8010F50);
	set_func_flags(0X8010F48,0x400);
	add_func    (0X8010F50,0X8011296);
	set_func_flags(0X8010F50,0x400);
	set_frame_size(0X8010F50, 0X20, 0, 0);
	add_func    (0X8011296,0X80112DE);
	set_func_flags(0X8011296,0x400);
	SetType(0X8011296, "void __cdecl tcx_config_80105FA(int atten_ctrl_type);");
	set_frame_size(0X8011296, 0X8, 0, 0);
	add_func    (0X80112DE,0X8011300);
	set_func_flags(0X80112DE,0x400);
	add_func    (0X8011300,0X801130E);
	set_func_flags(0X8011300,0x400);
	add_func    (0X8011318,0X8011326);
	set_func_flags(0X8011318,0x400);
	add_func    (0X8011330,0X801133E);
	set_func_flags(0X8011330,0x400);
	add_func    (0X8011348,0X8011350);
	set_func_flags(0X8011348,0x400);
	SetType(0X8011348, "void __fastcall set_transciever_attenuation(int val);");
	add_func    (0X8011350,0X8011358);
	set_func_flags(0X8011350,0x400);
	SetType(0X8011350, "int get_transciever_attenuation(void);");
	add_func    (0X8011358,0X8011366);
	set_func_flags(0X8011358,0x400);
	add_func    (0X8011366,0X8011370);
	set_func_flags(0X8011366,0x400);
	add_func    (0X8011370,0X801138E);
	set_func_flags(0X8011370,0x400);
	add_func    (0X801138E,0X80113A0);
	set_func_flags(0X801138E,0x400);
	add_func    (0X80113A0,0X80113CE);
	set_func_flags(0X80113A0,0x400);
	set_frame_size(0X80113A0, 0X8, 0, 0);
	add_func    (0X80113CE,0X80113D6);
	set_func_flags(0X80113CE,0x400);
	add_func    (0X8011418,0X80115A2);
	set_func_flags(0X8011418,0x400);
	set_frame_size(0X8011418, 0X58, 0, 0);
	add_func    (0X80115A2,0X80117B4);
	set_func_flags(0X80115A2,0x400);
	set_frame_size(0X80115A2, 0XB0, 0, 0);
	add_func    (0X80117B4,0X80118D0);
	set_func_flags(0X80117B4,0x400);
	set_frame_size(0X80117B4, 0XE8, 0, 0);
	add_func    (0X80118D0,0X8011972);
	set_func_flags(0X80118D0,0x400);
	set_frame_size(0X80118D0, 0X48, 0, 0);
	add_func    (0X8011972,0X8011B88);
	set_func_flags(0X8011972,0x400);
	set_frame_size(0X8011972, 0X48, 0, 0);
	add_func    (0X8011BB0,0X8011C16);
	set_func_flags(0X8011BB0,0x400);
	set_frame_size(0X8011BB0, 0X8, 0, 0);
	add_func    (0X8011C16,0X8011C9A);
	set_func_flags(0X8011C16,0x400);
	set_frame_size(0X8011C16, 0X10, 0, 0);
	add_func    (0X8011C9A,0X8011D58);
	set_func_flags(0X8011C9A,0x400);
	set_frame_size(0X8011C9A, 0X10, 0, 0);
	add_func    (0X8011D58,0X8011E5A);
	set_func_flags(0X8011D58,0x400);
	set_frame_size(0X8011D58, 0X20, 0, 0);
	add_func    (0X8011E94,0X8011EA4);
	set_func_flags(0X8011E94,0x400);
	set_frame_size(0X8011E94, 0X10, 0, 0);
	add_func    (0X8011EA4,0X8011F04);
	set_func_flags(0X8011EA4,0x400);
	set_frame_size(0X8011EA4, 0X28, 0, 0);
	add_func    (0X8011F04,0X8011F64);
	set_func_flags(0X8011F04,0x400);
	set_frame_size(0X8011F04, 0X28, 0, 0);
	add_func    (0X8011F64,0X8011FC4);
	set_func_flags(0X8011F64,0x400);
	set_frame_size(0X8011F64, 0X28, 0, 0);
	add_func    (0X8011FC4,0X801200A);
	set_func_flags(0X8011FC4,0x400);
	set_frame_size(0X8011FC4, 0X28, 0, 0);
	add_func    (0X801200A,0X801206A);
	set_func_flags(0X801200A,0x400);
	set_frame_size(0X801200A, 0X28, 0, 0);
	add_func    (0X801206A,0X801206C);
	set_func_flags(0X801206A,0x440);
	add_func    (0X801206C,0X80120A8);
	set_func_flags(0X801206C,0x400);
	set_frame_size(0X801206C, 0X10, 0, 0);
	add_func    (0X80120B0,0X80120F0);
	set_func_flags(0X80120B0,0x400);
	set_frame_size(0X80120B0, 0X8, 0, 0);
	add_func    (0X80120F0,0X8012102);
	set_func_flags(0X80120F0,0x400);
	set_frame_size(0X80120F0, 0X10, 0, 0);
	add_func    (0X8012102,0X801213C);
	set_func_flags(0X8012102,0x400);
	set_frame_size(0X8012102, 0X10, 0, 0);
	add_func    (0X801213C,0X8012148);
	set_func_flags(0X801213C,0x400);
	add_func    (0X8012168,0X8012258);
	set_func_flags(0X8012168,0x400);
	set_frame_size(0X8012168, 0X10, 0, 0);
	add_func    (0X8012258,0X80122D4);
	set_func_flags(0X8012258,0x400);
	set_frame_size(0X8012258, 0X18, 0, 0);
	add_func    (0X80122D8,0X80122EC);
	set_func_flags(0X80122D8,0x400);
	add_func    (0X80122EC,0X8012330);
	set_func_flags(0X80122EC,0x400);
	set_frame_size(0X80122EC, 0X8, 0, 0);
	add_func    (0X8012330,0X80123B8);
	set_func_flags(0X8012330,0x400);
	set_frame_size(0X8012330, 0X8, 0, 0);
	add_func    (0X80123B8,0X80123D4);
	set_func_flags(0X80123B8,0x400);
	add_func    (0X80123D4,0X80123E6);
	set_func_flags(0X80123D4,0x400);
	set_frame_size(0X80123D4, 0X8, 0, 0);
	add_func    (0X80123E6,0X80125CE);
	set_func_flags(0X80123E6,0x400);
	set_frame_size(0X80123E6, 0X18, 0, 0);
	add_func    (0X80125CE,0X801260A);
	set_func_flags(0X80125CE,0x400);
	set_frame_size(0X80125CE, 0X18, 0, 0);
	add_func    (0X801260A,0X801260E);
	set_func_flags(0X801260A,0x400);
	add_func    (0X801260E,0X801261C);
	set_func_flags(0X801260E,0x400);
	add_func    (0X801261C,0X8012624);
	set_func_flags(0X801261C,0x400);
	add_func    (0X8012624,0X80126E8);
	set_func_flags(0X8012624,0x400);
	set_frame_size(0X8012624, 0X168, 0, 0);
	define_local_var(0X8012624, 0X80126E8, "[bp-0X164]", "pkt");
	add_func    (0X8012792,0X801283A);
	set_func_flags(0X8012792,0x400);
	SetType(0X8012792, "int __fastcall packet_make_response(int *(__fastcall *send_func)(void *pkt, unsigned int len), struct DjiPacket *spkt, const uint8_t *payload, size_t payload_len);");
	set_frame_size(0X8012792, 0X160, 0, 0);
	add_func    (0X801283C,0X801285A);
	set_func_flags(0X801283C,0x400);
	SetType(0X801283C, "int __fastcall compute_buf_crc8(uint8_t *buf, unsigned int len, int seed);");
	set_frame_size(0X801283C, 0XC, 0, 0);
	add_func    (0X801285A,0X8012888);
	set_func_flags(0X801285A,0x400);
	set_frame_size(0X801285A, 0X10, 0, 0);
	add_func    (0X8012888,0X80128AC);
	set_func_flags(0X8012888,0x400);
	set_frame_size(0X8012888, 0X10, 0, 0);
	add_func    (0X80128B0,0X80128DE);
	set_func_flags(0X80128B0,0x400);
	SetType(0X80128B0, "signed int __fastcall compute_buf_crc16(uint8_t *buf, unsigned int len, unsigned int seed);");
	set_frame_size(0X80128B0, 0XC, 0, 0);
	add_func    (0X80128DE,0X801291A);
	set_func_flags(0X80128DE,0x400);
	SetType(0X80128DE, "bool __fastcall packet_crc_correct(uint8_t *pkt, unsigned int len);");
	set_frame_size(0X80128DE, 0X10, 0, 0);
	add_func    (0X801291A,0X8012946);
	set_func_flags(0X801291A,0x400);
	SetType(0X801291A, "void __fastcall packet_make_checksum(uint8_t *pkt, unsigned int len);");
	set_frame_size(0X801291A, 0X10, 0, 0);
	add_func    (0X801294C,0X8012A1E);
	set_func_flags(0X801294C,0x400);
	SetType(0X801294C, "void __fastcall cmd_exec_osd_general(struct DjiPacket *pkt, unsigned int pkt_len);");
	set_frame_size(0X801294C, 0X18, 0, 0);
	add_func    (0X8012A1E,0X8012A9E);
	set_func_flags(0X8012A1E,0x400);
	SetType(0X8012A1E, "void __fastcall cmd_exec_osd_home(struct DjiPacket *pkt, unsigned int pkt_len);");
	set_frame_size(0X8012A1E, 0X18, 0, 0);
	add_func    (0X8012A9E,0X8012AC8);
	set_func_flags(0X8012A9E,0x400);
	set_frame_size(0X8012A9E, 0X10, 0, 0);
	add_func    (0X8012AC8,0X8012AFC);
	set_func_flags(0X8012AC8,0x400);
	set_frame_size(0X8012AC8, 0X18, 0, 0);
	add_func    (0X8012AFC,0X8012B72);
	set_func_flags(0X8012AFC,0x400);
	set_frame_size(0X8012AFC, 0X18, 0, 0);
	add_func    (0X8012B72,0X8012B96);
	set_func_flags(0X8012B72,0x400);
	set_frame_size(0X8012B72, 0X18, 0, 0);
	add_func    (0X8012B96,0X8012BBC);
	set_func_flags(0X8012B96,0x400);
	set_frame_size(0X8012B96, 0X18, 0, 0);
	add_func    (0X8012BBC,0X8012C08);
	set_func_flags(0X8012BBC,0x400);
	set_frame_size(0X8012BBC, 0X18, 0, 0);
	add_func    (0X8012C08,0X8012C58);
	set_func_flags(0X8012C08,0x400);
	set_frame_size(0X8012C08, 0X18, 0, 0);
	add_func    (0X8012C58,0X8012CB2);
	set_func_flags(0X8012C58,0x400);
	SetType(0X8012C58, "void __fastcall cmd_exec_set09_cmd12(struct DjiPacketS09C12 *pkt, unsigned int pkt_len);");
	set_frame_size(0X8012C58, 0X18, 0, 0);
	define_local_var(0X8012C58, 0X8012CB2, "[bp-0X18]", "res_payload");
	add_func    (0X8012CB2,0X8012D24);
	set_func_flags(0X8012CB2,0x400);
	set_frame_size(0X8012CB2, 0X20, 0, 0);
	add_func    (0X8012D24,0X8012DEC);
	set_func_flags(0X8012D24,0x400);
	set_frame_size(0X8012D24, 0X18, 0, 0);
	add_func    (0X8012DEC,0X8012E9A);
	set_func_flags(0X8012DEC,0x400);
	set_frame_size(0X8012DEC, 0X20, 0, 0);
	add_func    (0X8012E9A,0X8012ED2);
	set_func_flags(0X8012E9A,0x400);
	set_frame_size(0X8012E9A, 0X18, 0, 0);
	add_func    (0X8012ED2,0X8012F22);
	set_func_flags(0X8012ED2,0x400);
	set_frame_size(0X8012ED2, 0X20, 0, 0);
	add_func    (0X8012F22,0X8012F5A);
	set_func_flags(0X8012F22,0x400);
	set_frame_size(0X8012F22, 0X18, 0, 0);
	add_func    (0X8012F5A,0X8012FE0);
	set_func_flags(0X8012F5A,0x400);
	set_frame_size(0X8012F5A, 0X18, 0, 0);
	add_func    (0X8012FE0,0X8013026);
	set_func_flags(0X8012FE0,0x400);
	set_frame_size(0X8012FE0, 0X18, 0, 0);
	add_func    (0X8013026,0X8013042);
	set_func_flags(0X8013026,0x400);
	set_frame_size(0X8013026, 0X10, 0, 0);
	add_func    (0X8013042,0X8013082);
	set_func_flags(0X8013042,0x400);
	set_frame_size(0X8013042, 0X18, 0, 0);
	add_func    (0X8013082,0X80130F0);
	set_func_flags(0X8013082,0x400);
	set_frame_size(0X8013082, 0X18, 0, 0);
	add_func    (0X80130F0,0X8013146);
	set_func_flags(0X80130F0,0x400);
	set_frame_size(0X80130F0, 0X18, 0, 0);
	add_func    (0X801317C,0X801318E);
	set_func_flags(0X801317C,0x400);
	set_frame_size(0X801317C, 0X8, 0, 0);
	add_func    (0X801318E,0X80131A0);
	set_func_flags(0X801318E,0x400);
	set_frame_size(0X801318E, 0X10, 0, 0);
	add_func    (0X80131A0,0X80131FE);
	set_func_flags(0X80131A0,0x400);
	set_frame_size(0X80131A0, 0X10, 0, 0);
	add_func    (0X8013214,0X8013232);
	set_func_flags(0X8013214,0x400);
	set_frame_size(0X8013214, 0X10, 0, 0);
	add_func    (0X8013246,0X8013264);
	set_func_flags(0X8013246,0x400);
	set_frame_size(0X8013246, 0X10, 0, 0);
	add_func    (0X8013264,0X8013278);
	set_func_flags(0X8013264,0x400);
	set_frame_size(0X8013264, 0X10, 0, 0);
	add_func    (0X801327E,0X8013284);
	set_func_flags(0X801327E,0x400);
	add_func    (0X8013296,0X80132A8);
	set_func_flags(0X8013296,0x400);
	set_frame_size(0X8013296, 0X8, 0, 0);
	add_func    (0X801332C,0X8013384);
	set_func_flags(0X801332C,0x400);
	set_frame_size(0X801332C, 0X8, 0, 0);
	add_func    (0X8013384,0X80133C2);
	set_func_flags(0X8013384,0x400);
	set_frame_size(0X8013384, 0X8, 0, 0);
	add_func    (0X80133C2,0X80134B0);
	set_func_flags(0X80133C2,0x400);
	add_func    (0X80134B0,0X80134F4);
	set_func_flags(0X80134B0,0x400);
	add_func    (0X80134F4,0X8013542);
	set_func_flags(0X80134F4,0x400);
	set_frame_size(0X80134F4, 0X4, 0, 0);
	add_func    (0X8013552,0X801355E);
	set_func_flags(0X8013552,0x400);
	set_frame_size(0X8013552, 0X8, 0, 0);
	add_func    (0X8013560,0X8013564);
	set_func_flags(0X8013560,0x400);
	add_func    (0X8013568,0X801356C);
	set_func_flags(0X8013568,0x400);
	add_func    (0X8013570,0X80135BA);
	set_func_flags(0X8013570,0x400);
	add_func    (0X80135C8,0X80135D0);
	set_func_flags(0X80135C8,0x401);
	add_func    (0X80135D8,0X801369A);
	set_func_flags(0X80135D8,0x400);
	add_func    (0X80136A0,0X80136C8);
	set_func_flags(0X80136A0,0x400);
	add_func    (0X80136C8,0X8013A08);
	set_func_flags(0X80136C8,0x400);
	set_frame_size(0X80136C8, 0X88, 0, 0);
	add_func    (0X8013A50,0X8013B36);
	set_func_flags(0X8013A50,0x400);
	set_frame_size(0X8013A50, 0X30, 0, 0);
	add_func    (0X8013B4C,0X8013BF6);
	set_func_flags(0X8013B4C,0x400);
	set_frame_size(0X8013B4C, 0X18, 0, 0);
	add_func    (0X8013BF8,0X8013CD8);
	set_func_flags(0X8013BF8,0x400);
	set_frame_size(0X8013BF8, 0X40, 0, 0);
	add_func    (0X8013CE4,0X8013CEE);
	set_func_flags(0X8013CE4,0x400);
	add_func    (0X8013CF4,0X8013ED2);
	set_func_flags(0X8013CF4,0x400);
	set_frame_size(0X8013CF4, 0X28, 0, 0);
	add_func    (0X8013F18,0X8014072);
	set_func_flags(0X8013F18,0x400);
	set_frame_size(0X8013F18, 0X20, 0, 0);
	add_func    (0X8014098,0X801413C);
	set_func_flags(0X8014098,0x400);
	set_frame_size(0X8014098, 0X20, 0, 0);
	add_func    (0X8014144,0X80142C4);
	set_func_flags(0X8014144,0x400);
	set_frame_size(0X8014144, 0X18, 0, 0);
	add_func    (0X80142FC,0X8014CCA);
	set_func_flags(0X80142FC,0x400);
	set_frame_size(0X80142FC, 0X70, 0, 0);
	add_func    (0X8014CDC,0X8014D82);
	set_func_flags(0X8014CDC,0x400);
	set_frame_size(0X8014CDC, 0X20, 0, 0);
	add_func    (0X8014D8C,0X8014DD8);
	set_func_flags(0X8014D8C,0x400);
	set_frame_size(0X8014D8C, 0X18, 0, 0);
	add_func    (0X8014DD8,0X8014E30);
	set_func_flags(0X8014DD8,0x200);
	add_func    (0X8014E3C,0X8014E4C);
	set_func_flags(0X8014E3C,0x400);
	set_frame_size(0X8014E3C, 0X8, 0, 0);
	add_func    (0X8014ED0,0X8014EF0);
	set_func_flags(0X8014ED0,0x400);
	add_func    (0X8014FB4,0X80151DC);
	set_func_flags(0X8014FB4,0x400);
	set_frame_size(0X8014FB4, 0X18, 0, 0);
	add_func    (0X8015264,0X80152C0);
	set_func_flags(0X8015264,0x400);
	set_frame_size(0X8015264, 0, 0, 0);
	add_func    (0X80152C4,0X801531C);
	set_func_flags(0X80152C4,0x400);
	set_frame_size(0X80152C4, 0, 0, 0);
	add_func    (0X801531E,0X801534C);
	set_func_flags(0X801531E,0x400);
	add_func    (0X801534C,0X8015372);
	set_func_flags(0X801534C,0x400);
	add_func    (0X80153D6,0X80153EC);
	set_func_flags(0X80153D6,0x400);
	set_frame_size(0X80153D6, 0X10, 0, 0);
	add_func    (0X8015540,0X80155DC);
	set_func_flags(0X8015540,0x400);
	add_func    (0X80155DC,0X80155E8);
	set_func_flags(0X80155DC,0x400);
	add_func    (0X80155E8,0X8015654);
	set_func_flags(0X80155E8,0x400);
	add_func    (0X8015654,0X801566A);
	set_func_flags(0X8015654,0x400);
	set_frame_size(0X8015654, 0X8, 0, 0);
	add_func    (0X801566C,0X8015A08);
	set_func_flags(0X801566C,0x400);
	set_frame_size(0X801566C, 0X18, 0, 0);
	add_func    (0X8015A0C,0X8015A54);
	set_func_flags(0X8015A0C,0x400);
	set_frame_size(0X8015A0C, 0X8, 0, 0);
	add_func    (0X8015A64,0X8015A72);
	set_func_flags(0X8015A64,0x400);
	add_func    (0X8015B4C,0X8015CCC);
	set_func_flags(0X8015B4C,0x400);
	set_frame_size(0X8015B4C, 0X4, 0, 0);
	add_func    (0X8015CD0,0X8015CFC);
	set_func_flags(0X8015CD0,0x400);
	set_frame_size(0X8015CD0, 0, 0, 0);
	add_func    (0X8015D08,0X8015D40);
	set_func_flags(0X8015D08,0x400);
	set_frame_size(0X8015D08, 0, 0, 0);
	add_func    (0X8015D48,0X8015D78);
	set_func_flags(0X8015D48,0x400);
	add_func    (0X8015D78,0X8015D9E);
	set_func_flags(0X8015D78,0x400);
	add_func    (0X8015DA0,0X8015E08);
	set_func_flags(0X8015DA0,0x400);
	add_func    (0X8015E08,0X8015EF6);
	set_func_flags(0X8015E08,0);
	add_func    (0X8015F0A,0X8015F96);
	set_func_flags(0X8015F0A,0x400);
	add_func    (0X8015FA0,0X8016002);
	set_func_flags(0X8015FA0,0x400);
	add_func    (0X8016002,0X8016102);
	set_func_flags(0X8016002,0x400);
	add_func    (0X8016166,0X80161C2);
	set_func_flags(0X8016166,0x400);
	add_func    (0X80161C2,0X801620E);
	set_func_flags(0X80161C2,0x400);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	split_sreg_range(0X8008000,"T",0,3);
	split_sreg_range(0X80080EC,"T",0X1,3);
	split_sreg_range(0X80080F4,"T",0X1,3);
	split_sreg_range(0X800810A,"T",0X1,3);
	split_sreg_range(0X800812E,"T",0X1,3);
	split_sreg_range(0X8008148,"T",0X1,3);
	split_sreg_range(0X8008154,"T",0X1,3);
	split_sreg_range(0X8008164,"T",0X1,3);
	split_sreg_range(0X8008170,"T",0X1,3);
	split_sreg_range(0X8008178,"T",0X1,3);
	split_sreg_range(0X800817C,"T",0X1,3);
	split_sreg_range(0X800818C,"T",0X1,3);
	split_sreg_range(0X80081A0,"T",0X1,3);
	split_sreg_range(0X80081A4,"T",0X1,3);
	split_sreg_range(0X80081A8,"T",0X1,3);
	split_sreg_range(0X80081BA,"T",0X1,3);
	split_sreg_range(0X80081D0,"T",0X1,3);
	split_sreg_range(0X80081D2,"T",0X1,3);
	split_sreg_range(0X80081D4,"T",0X1,3);
	split_sreg_range(0X80081D6,"T",0X1,3);
	split_sreg_range(0X80081D8,"T",0X1,3);
	split_sreg_range(0X80081DA,"T",0X1,3);
	split_sreg_range(0X80081DC,"T",0X1,3);
	split_sreg_range(0X80081DE,"T",0X1,3);
	split_sreg_range(0X80081E0,"T",0X1,3);
	split_sreg_range(0X80081E2,"T",0X1,3);
	split_sreg_range(0X80081E4,"T",0X1,3);
	split_sreg_range(0X8008208,"T",0X1,3);
	split_sreg_range(0X8008212,"T",0X1,3);
	split_sreg_range(0X8008262,"T",0X1,3);
	split_sreg_range(0X8008276,"T",0X1,3);
	split_sreg_range(0X8008298,"T",0X1,3);
	split_sreg_range(0X80082A6,"T",0X1,3);
	split_sreg_range(0X80082A8,"T",0X1,3);
	split_sreg_range(0X80082BE,"T",0X1,3);
	split_sreg_range(0X80082CE,"T",0X1,3);
	split_sreg_range(0X80082E4,"T",0X1,3);
	split_sreg_range(0X8008300,"T",0X1,3);
	split_sreg_range(0X8008318,"T",0X1,3);
	split_sreg_range(0X8008330,"T",0X1,3);
	split_sreg_range(0X8008332,"T",0X1,3);
	split_sreg_range(0X800838A,"T",0X1,3);
	split_sreg_range(0X8008396,"T",0X1,3);
	split_sreg_range(0X800839E,"T",0X1,3);
	split_sreg_range(0X80083AC,"T",0X1,3);
	split_sreg_range(0X80083B4,"T",0X1,3);
	split_sreg_range(0X80083B6,"T",0X1,3);
	split_sreg_range(0X80083C6,"T",0X1,3);
	split_sreg_range(0X80083CC,"T",0X1,3);
	split_sreg_range(0X80083CE,"T",0X1,3);
	split_sreg_range(0X80083D8,"T",0X1,3);
	split_sreg_range(0X80083E8,"T",0X1,3);
	split_sreg_range(0X80083EA,"T",0X1,3);
	split_sreg_range(0X80083EC,"T",0X1,3);
	split_sreg_range(0X80083F6,"T",0X1,3);
	split_sreg_range(0X8008406,"T",0X1,3);
	split_sreg_range(0X8008408,"T",0X1,3);
	split_sreg_range(0X800840A,"T",0X1,3);
	split_sreg_range(0X8008416,"T",0X1,3);
	split_sreg_range(0X800841E,"T",0X1,3);
	split_sreg_range(0X8008430,"T",0X1,3);
	split_sreg_range(0X8008432,"T",0X1,3);
	split_sreg_range(0X8008434,"T",0X1,3);
	split_sreg_range(0X8008458,"T",0X1,3);
	split_sreg_range(0X8008460,"T",0X1,3);
	split_sreg_range(0X8008462,"T",0X1,3);
	split_sreg_range(0X8008494,"T",0X1,3);
	split_sreg_range(0X80084AE,"T",0X1,3);
	split_sreg_range(0X80084D2,"T",0X1,3);
	split_sreg_range(0X80084F6,"T",0X1,3);
	split_sreg_range(0X8008518,"T",0X1,3);
	split_sreg_range(0X8008526,"T",0X1,3);
	split_sreg_range(0X800852E,"T",0X1,3);
	split_sreg_range(0X8008530,"T",0X1,3);
	split_sreg_range(0X800854C,"T",0X1,3);
	split_sreg_range(0X8008554,"T",0X1,3);
	split_sreg_range(0X8008562,"T",0X1,3);
	split_sreg_range(0X800856A,"T",0X1,3);
	split_sreg_range(0X8008588,"T",0X1,3);
	split_sreg_range(0X8008590,"T",0X1,3);
	split_sreg_range(0X800859E,"T",0X1,3);
	split_sreg_range(0X80085A6,"T",0X1,3);
	split_sreg_range(0X80085B8,"T",0X1,3);
	split_sreg_range(0X80085BA,"T",0X1,3);
	split_sreg_range(0X80085BC,"T",0X1,3);
	split_sreg_range(0X80085F0,"T",0X1,3);
	split_sreg_range(0X800860A,"T",0X1,3);
	split_sreg_range(0X800863E,"T",0X1,3);
	split_sreg_range(0X8008656,"T",0X1,3);
	split_sreg_range(0X800866A,"T",0X1,3);
	split_sreg_range(0X80086AC,"T",0X1,3);
	split_sreg_range(0X80086C0,"T",0X1,3);
	split_sreg_range(0X80086D0,"T",0X1,3);
	split_sreg_range(0X80086EC,"T",0X1,3);
	split_sreg_range(0X80086FA,"T",0X1,3);
	split_sreg_range(0X80086FC,"T",0X1,3);
	split_sreg_range(0X8008704,"T",0X1,3);
	split_sreg_range(0X8008724,"T",0X1,3);
	split_sreg_range(0X8008726,"T",0X1,3);
	split_sreg_range(0X8008734,"T",0X1,3);
	split_sreg_range(0X8008752,"T",0X1,3);
	split_sreg_range(0X8008764,"T",0X1,3);
	split_sreg_range(0X8008766,"T",0X1,3);
	split_sreg_range(0X8008780,"T",0X1,3);
	split_sreg_range(0X8008782,"T",0X1,3);
	split_sreg_range(0X8008792,"T",0X1,3);
	split_sreg_range(0X800879E,"T",0X1,3);
	split_sreg_range(0X80087AE,"T",0X1,3);
	split_sreg_range(0X80087B6,"T",0X1,3);
	split_sreg_range(0X80087C6,"T",0X1,3);
	split_sreg_range(0X80087CE,"T",0X1,3);
	split_sreg_range(0X80087DE,"T",0X1,3);
	split_sreg_range(0X80087E6,"T",0X1,3);
	split_sreg_range(0X80087F6,"T",0X1,3);
	split_sreg_range(0X80087FE,"T",0X1,3);
	split_sreg_range(0X800880E,"T",0X1,3);
	split_sreg_range(0X8008816,"T",0X1,3);
	split_sreg_range(0X8008826,"T",0X1,3);
	split_sreg_range(0X800882E,"T",0X1,3);
	split_sreg_range(0X8008858,"T",0X1,3);
	split_sreg_range(0X800885A,"T",0X1,3);
	split_sreg_range(0X800886A,"T",0X1,3);
	split_sreg_range(0X8008876,"T",0X1,3);
	split_sreg_range(0X8008878,"T",0X1,3);
	split_sreg_range(0X800887A,"T",0X1,3);
	split_sreg_range(0X80088D8,"T",0X1,3);
	split_sreg_range(0X8008912,"T",0X1,3);
	split_sreg_range(0X8008926,"T",0X1,3);
	split_sreg_range(0X8008934,"T",0X1,3);
	split_sreg_range(0X8008946,"T",0X1,3);
	split_sreg_range(0X800895A,"T",0X1,3);
	split_sreg_range(0X800896E,"T",0X1,3);
	split_sreg_range(0X800897C,"T",0X1,3);
	split_sreg_range(0X80089D8,"T",0X1,3);
	split_sreg_range(0X80089E0,"T",0X1,3);
	split_sreg_range(0X8008A1E,"T",0X1,3);
	split_sreg_range(0X8008A56,"T",0X1,3);
	split_sreg_range(0X8008A58,"T",0X1,3);
	split_sreg_range(0X8008A6C,"T",0X1,3);
	split_sreg_range(0X8008A7C,"T",0X1,3);
	split_sreg_range(0X8008A8C,"T",0X1,3);
	split_sreg_range(0X8008A8E,"T",0X1,3);
	split_sreg_range(0X8008ACE,"T",0X1,3);
	split_sreg_range(0X8008AF0,"T",0X1,3);
	split_sreg_range(0X8008B3C,"T",0X1,3);
	split_sreg_range(0X8008B86,"T",0X1,3);
	split_sreg_range(0X8008B88,"T",0X1,3);
	split_sreg_range(0X8008B9A,"T",0X1,3);
	split_sreg_range(0X8008BA4,"T",0X1,3);
	split_sreg_range(0X8008BAE,"T",0X1,3);
	split_sreg_range(0X8008BB8,"T",0X1,3);
	split_sreg_range(0X8008BBC,"T",0X1,3);
	split_sreg_range(0X8008BD8,"T",0X1,3);
	split_sreg_range(0X8008BEC,"T",0X1,3);
	split_sreg_range(0X8008BF0,"T",0X1,3);
	split_sreg_range(0X8008BF4,"T",0X1,3);
	split_sreg_range(0X8008BF8,"T",0X1,3);
	split_sreg_range(0X8008BFC,"T",0X1,3);
	split_sreg_range(0X8008C00,"T",0X1,3);
	split_sreg_range(0X8008C04,"T",0X1,3);
	split_sreg_range(0X8008C08,"T",0X1,3);
	split_sreg_range(0X8008C0C,"T",0X1,3);
	split_sreg_range(0X8008C1E,"T",0X1,3);
	split_sreg_range(0X8008C28,"T",0X1,3);
	split_sreg_range(0X8008C32,"T",0X1,3);
	split_sreg_range(0X8008C3C,"T",0X1,3);
	split_sreg_range(0X8008C3E,"T",0X1,3);
	split_sreg_range(0X8008C42,"T",0X1,3);
	split_sreg_range(0X8008C6E,"T",0X1,3);
	split_sreg_range(0X8008C82,"T",0X1,3);
	split_sreg_range(0X8008D28,"T",0X1,3);
	split_sreg_range(0X8008D30,"T",0X1,3);
	split_sreg_range(0X8008D3E,"T",0X1,3);
	split_sreg_range(0X8008D46,"T",0X1,3);
	split_sreg_range(0X8008D56,"T",0X1,3);
	split_sreg_range(0X8008D62,"T",0X1,3);
	split_sreg_range(0X8008D64,"T",0X1,3);
	split_sreg_range(0X8008D66,"T",0X1,3);
	split_sreg_range(0X8008D82,"T",0X1,3);
	split_sreg_range(0X8008D84,"T",0X1,3);
	split_sreg_range(0X8008D92,"T",0X1,3);
	split_sreg_range(0X8008DA0,"T",0X1,3);
	split_sreg_range(0X8008DA4,"T",0X1,3);
	split_sreg_range(0X8008DB2,"T",0X1,3);
	split_sreg_range(0X8008DB4,"T",0X1,3);
	split_sreg_range(0X8008DC0,"T",0X1,3);
	split_sreg_range(0X8008DCC,"T",0X1,3);
	split_sreg_range(0X8008DD0,"T",0X1,3);
	split_sreg_range(0X8008DE2,"T",0X1,3);
	split_sreg_range(0X8008DE4,"T",0X1,3);
	split_sreg_range(0X8008DF2,"T",0X1,3);
	split_sreg_range(0X8008E00,"T",0X1,3);
	split_sreg_range(0X8008E04,"T",0X1,3);
	split_sreg_range(0X8008E06,"T",0X1,3);
	split_sreg_range(0X8008E24,"T",0X1,3);
	split_sreg_range(0X8008E38,"T",0X1,3);
	split_sreg_range(0X8008E3A,"T",0X1,3);
	split_sreg_range(0X8008E48,"T",0X1,3);
	split_sreg_range(0X8008E54,"T",0X1,3);
	split_sreg_range(0X8008E78,"T",0X1,3);
	split_sreg_range(0X8008E82,"T",0X1,3);
	split_sreg_range(0X8008E88,"T",0X1,3);
	split_sreg_range(0X8008E8A,"T",0X1,3);
	split_sreg_range(0X8008EA4,"T",0X1,3);
	split_sreg_range(0X8008EA8,"T",0X1,3);
	split_sreg_range(0X8008EBC,"T",0X1,3);
	split_sreg_range(0X8008EC0,"T",0X1,3);
	split_sreg_range(0X8008ED4,"T",0X1,3);
	split_sreg_range(0X8008ED8,"T",0X1,3);
	split_sreg_range(0X8008EEC,"T",0X1,3);
	split_sreg_range(0X8008EF0,"T",0X1,3);
	split_sreg_range(0X8008EFE,"T",0X1,3);
	split_sreg_range(0X8008F00,"T",0X1,3);
	split_sreg_range(0X8008F10,"T",0X1,3);
	split_sreg_range(0X8008F1E,"T",0X1,3);
	split_sreg_range(0X8008F28,"T",0X1,3);
	split_sreg_range(0X8008F32,"T",0X1,3);
	split_sreg_range(0X8008F34,"T",0X1,3);
	split_sreg_range(0X8008F36,"T",0X1,3);
	split_sreg_range(0X8008F42,"T",0X1,3);
	split_sreg_range(0X8008F44,"T",0X1,3);
	split_sreg_range(0X8008F46,"T",0X1,3);
	split_sreg_range(0X8008F70,"T",0X1,3);
	split_sreg_range(0X8008F98,"T",0X1,3);
	split_sreg_range(0X8008FB4,"T",0X1,3);
	split_sreg_range(0X8008FC2,"T",0X1,3);
	split_sreg_range(0X8008FCE,"T",0X1,3);
	split_sreg_range(0X8008FDA,"T",0X1,3);
	split_sreg_range(0X8008FE6,"T",0X1,3);
	split_sreg_range(0X8008FF2,"T",0X1,3);
	split_sreg_range(0X8008FFE,"T",0X1,3);
	split_sreg_range(0X800900A,"T",0X1,3);
	split_sreg_range(0X8009016,"T",0X1,3);
	split_sreg_range(0X8009022,"T",0X1,3);
	split_sreg_range(0X800902E,"T",0X1,3);
	split_sreg_range(0X800903A,"T",0X1,3);
	split_sreg_range(0X800903C,"T",0X1,3);
	split_sreg_range(0X8009048,"T",0X1,3);
	split_sreg_range(0X8009056,"T",0X1,3);
	split_sreg_range(0X8009062,"T",0X1,3);
	split_sreg_range(0X800906E,"T",0X1,3);
	split_sreg_range(0X8009072,"T",0X1,3);
	split_sreg_range(0X8009074,"T",0X1,3);
	split_sreg_range(0X8009076,"T",0X1,3);
	split_sreg_range(0X8009096,"T",0X1,3);
	split_sreg_range(0X80090A2,"T",0X1,3);
	split_sreg_range(0X80090B8,"T",0X1,3);
	split_sreg_range(0X80090C6,"T",0X1,3);
	split_sreg_range(0X80090CC,"T",0X1,3);
	split_sreg_range(0X80090D2,"T",0X1,3);
	split_sreg_range(0X80090D8,"T",0X1,3);
	split_sreg_range(0X80090DE,"T",0X1,3);
	split_sreg_range(0X80090E4,"T",0X1,3);
	split_sreg_range(0X80090EA,"T",0X1,3);
	split_sreg_range(0X80090F0,"T",0X1,3);
	split_sreg_range(0X80090F6,"T",0X1,3);
	split_sreg_range(0X80090FC,"T",0X1,3);
	split_sreg_range(0X8009102,"T",0X1,3);
	split_sreg_range(0X800910C,"T",0X1,3);
	split_sreg_range(0X8009116,"T",0X1,3);
	split_sreg_range(0X8009118,"T",0X1,3);
	split_sreg_range(0X8009120,"T",0X1,3);
	split_sreg_range(0X800914C,"T",0X1,3);
	split_sreg_range(0X8009166,"T",0X1,3);
	split_sreg_range(0X8009180,"T",0X1,3);
	split_sreg_range(0X800919A,"T",0X1,3);
	split_sreg_range(0X80091B4,"T",0X1,3);
	split_sreg_range(0X80091CE,"T",0X1,3);
	split_sreg_range(0X80091E8,"T",0X1,3);
	split_sreg_range(0X80091FC,"T",0X1,3);
	split_sreg_range(0X8009216,"T",0X1,3);
	split_sreg_range(0X8009230,"T",0X1,3);
	split_sreg_range(0X800924A,"T",0X1,3);
	split_sreg_range(0X8009262,"T",0X1,3);
	split_sreg_range(0X8009264,"T",0X1,3);
	split_sreg_range(0X80092BA,"T",0X1,3);
	split_sreg_range(0X80092C6,"T",0X1,3);
	split_sreg_range(0X80092D0,"T",0X1,3);
	split_sreg_range(0X80092D2,"T",0X1,3);
	split_sreg_range(0X80092DC,"T",0X1,3);
	split_sreg_range(0X80092E2,"T",0X1,3);
	split_sreg_range(0X80092E4,"T",0X1,3);
	split_sreg_range(0X80092E8,"T",0X1,3);
	split_sreg_range(0X8009304,"T",0X1,3);
	split_sreg_range(0X800930A,"T",0X1,3);
	split_sreg_range(0X8009312,"T",0X1,3);
	split_sreg_range(0X8009314,"T",0X1,3);
	split_sreg_range(0X8009316,"T",0X1,3);
	split_sreg_range(0X8009324,"T",0X1,3);
	split_sreg_range(0X800932A,"T",0X1,3);
	split_sreg_range(0X8009340,"T",0X1,3);
	split_sreg_range(0X8009346,"T",0X1,3);
	split_sreg_range(0X800934E,"T",0X1,3);
	split_sreg_range(0X8009350,"T",0X1,3);
	split_sreg_range(0X8009360,"T",0X1,3);
	split_sreg_range(0X8009366,"T",0X1,3);
	split_sreg_range(0X800938C,"T",0X1,3);
	split_sreg_range(0X80093FC,"T",0X1,3);
	split_sreg_range(0X800940C,"T",0X1,3);
	split_sreg_range(0X8009418,"T",0X1,3);
	split_sreg_range(0X800944C,"T",0X1,3);
	split_sreg_range(0X800944E,"T",0X1,3);
	split_sreg_range(0X8009476,"T",0X1,3);
	split_sreg_range(0X8009478,"T",0X1,3);
	split_sreg_range(0X800947A,"T",0X1,3);
	split_sreg_range(0X80094CA,"T",0X1,3);
	split_sreg_range(0X80094E2,"T",0X1,3);
	split_sreg_range(0X80094FE,"T",0X1,3);
	split_sreg_range(0X800950E,"T",0X1,3);
	split_sreg_range(0X800951C,"T",0X1,3);
	split_sreg_range(0X800952A,"T",0X1,3);
	split_sreg_range(0X800952C,"T",0X1,3);
	split_sreg_range(0X800952E,"T",0X1,3);
	split_sreg_range(0X800953C,"T",0X1,3);
	split_sreg_range(0X8009544,"T",0X1,3);
	split_sreg_range(0X800954C,"T",0X1,3);
	split_sreg_range(0X8009550,"T",0X1,3);
	split_sreg_range(0X8009554,"T",0X1,3);
	split_sreg_range(0X8009598,"T",0X1,3);
	split_sreg_range(0X800959C,"T",0X1,3);
	split_sreg_range(0X80095DC,"T",0X1,3);
	split_sreg_range(0X80095E0,"T",0X1,3);
	split_sreg_range(0X80095EE,"T",0X1,3);
	split_sreg_range(0X80095F6,"T",0X1,3);
	split_sreg_range(0X80095FE,"T",0X1,3);
	split_sreg_range(0X8009602,"T",0X1,3);
	split_sreg_range(0X8009606,"T",0X1,3);
	split_sreg_range(0X8009646,"T",0X1,3);
	split_sreg_range(0X800964A,"T",0X1,3);
	split_sreg_range(0X800965A,"T",0X1,3);
	split_sreg_range(0X800965C,"T",0X1,3);
	split_sreg_range(0X800965E,"T",0X1,3);
	split_sreg_range(0X800966C,"T",0X1,3);
	split_sreg_range(0X80096DE,"T",0X1,3);
	split_sreg_range(0X80096F0,"T",0X1,3);
	split_sreg_range(0X80096F4,"T",0X1,3);
	split_sreg_range(0X8009748,"T",0X1,3);
	split_sreg_range(0X8009756,"T",0X1,3);
	split_sreg_range(0X800975A,"T",0X1,3);
	split_sreg_range(0X8009792,"T",0X1,3);
	split_sreg_range(0X8009796,"T",0X1,3);
	split_sreg_range(0X80097DA,"T",0X1,3);
	split_sreg_range(0X80097DE,"T",0X1,3);
	split_sreg_range(0X8009832,"T",0X1,3);
	split_sreg_range(0X8009848,"T",0X1,3);
	split_sreg_range(0X8009862,"T",0X1,3);
	split_sreg_range(0X800987C,"T",0X1,3);
	split_sreg_range(0X800989C,"T",0X1,3);
	split_sreg_range(0X80098A0,"T",0X1,3);
	split_sreg_range(0X80098A6,"T",0X1,3);
	split_sreg_range(0X8009908,"T",0X1,3);
	split_sreg_range(0X800990E,"T",0X1,3);
	split_sreg_range(0X800992C,"T",0X1,3);
	split_sreg_range(0X800993E,"T",0X1,3);
	split_sreg_range(0X8009942,"T",0X1,3);
	split_sreg_range(0X8009996,"T",0X1,3);
	split_sreg_range(0X80099B8,"T",0X1,3);
	split_sreg_range(0X80099BA,"T",0X1,3);
	split_sreg_range(0X80099CA,"T",0X1,3);
	split_sreg_range(0X80099D4,"T",0X1,3);
	split_sreg_range(0X80099EC,"T",0X1,3);
	split_sreg_range(0X80099F0,"T",0X1,3);
	split_sreg_range(0X80099FC,"T",0X1,3);
	split_sreg_range(0X80099FE,"T",0X1,3);
	split_sreg_range(0X8009A16,"T",0X1,3);
	split_sreg_range(0X8009A24,"T",0X1,3);
	split_sreg_range(0X8009A32,"T",0X1,3);
	split_sreg_range(0X8009A34,"T",0X1,3);
	split_sreg_range(0X8009A48,"T",0X1,3);
	split_sreg_range(0X8009A64,"T",0X1,3);
	split_sreg_range(0X8009A7C,"T",0X1,3);
	split_sreg_range(0X8009A94,"T",0X1,3);
	split_sreg_range(0X8009AAC,"T",0X1,3);
	split_sreg_range(0X8009AC4,"T",0X1,3);
	split_sreg_range(0X8009ADC,"T",0X1,3);
	split_sreg_range(0X8009AF2,"T",0X1,3);
	split_sreg_range(0X8009AF4,"T",0X1,3);
	split_sreg_range(0X8009B08,"T",0X1,3);
	split_sreg_range(0X8009B34,"T",0X1,3);
	split_sreg_range(0X8009B44,"T",0X1,3);
	split_sreg_range(0X8009B84,"T",0X1,3);
	split_sreg_range(0X8009B9A,"T",0X1,3);
	split_sreg_range(0X8009B9C,"T",0X1,3);
	split_sreg_range(0X8009BA2,"T",0X1,3);
	split_sreg_range(0X8009BB2,"T",0X1,3);
	split_sreg_range(0X8009BF4,"T",0X1,3);
	split_sreg_range(0X8009C0E,"T",0X1,3);
	split_sreg_range(0X8009C10,"T",0X1,3);
	split_sreg_range(0X8009C16,"T",0X1,3);
	split_sreg_range(0X8009C2A,"T",0X1,3);
	split_sreg_range(0X8009C38,"T",0X1,3);
	split_sreg_range(0X8009C3A,"T",0X1,3);
	split_sreg_range(0X8009C52,"T",0X1,3);
	split_sreg_range(0X8009C54,"T",0X1,3);
	split_sreg_range(0X8009C5E,"T",0X1,3);
	split_sreg_range(0X8009C62,"T",0X1,3);
	split_sreg_range(0X8009C6C,"T",0X1,3);
	split_sreg_range(0X8009C6E,"T",0X1,3);
	split_sreg_range(0X8009C70,"T",0X1,3);
	split_sreg_range(0X8009CA6,"T",0X1,3);
	split_sreg_range(0X8009CC2,"T",0X1,3);
	split_sreg_range(0X8009CC6,"T",0X1,3);
	split_sreg_range(0X8009CE8,"T",0X1,3);
	split_sreg_range(0X8009D00,"T",0X1,3);
	split_sreg_range(0X8009D0E,"T",0X1,3);
	split_sreg_range(0X8009D1A,"T",0X1,3);
	split_sreg_range(0X8009D2A,"T",0X1,3);
	split_sreg_range(0X8009D2E,"T",0X1,3);
	split_sreg_range(0X8009D30,"T",0X1,3);
	split_sreg_range(0X8009DA0,"T",0X1,3);
	split_sreg_range(0X8009DA6,"T",0X1,3);
	split_sreg_range(0X8009DAC,"T",0X1,3);
	split_sreg_range(0X8009DB2,"T",0X1,3);
	split_sreg_range(0X8009DBC,"T",0X1,3);
	split_sreg_range(0X8009DD6,"T",0X1,3);
	split_sreg_range(0X8009DD8,"T",0X1,3);
	split_sreg_range(0X8009E44,"T",0X1,3);
	split_sreg_range(0X8009E52,"T",0X1,3);
	split_sreg_range(0X8009E60,"T",0X1,3);
	split_sreg_range(0X8009E62,"T",0X1,3);
	split_sreg_range(0X8009E66,"T",0X1,3);
	split_sreg_range(0X8009E7C,"T",0X1,3);
	split_sreg_range(0X8009E86,"T",0X1,3);
	split_sreg_range(0X8009E8A,"T",0X1,3);
	split_sreg_range(0X8009E9A,"T",0X1,3);
	split_sreg_range(0X8009E9C,"T",0X1,3);
	split_sreg_range(0X8009E9E,"T",0X1,3);
	split_sreg_range(0X8009EAA,"T",0X1,3);
	split_sreg_range(0X8009EC4,"T",0X1,3);
	split_sreg_range(0X8009ED0,"T",0X1,3);
	split_sreg_range(0X8009ED2,"T",0X1,3);
	split_sreg_range(0X8009F70,"T",0X1,3);
	split_sreg_range(0X8009F7A,"T",0X1,3);
	split_sreg_range(0X8009F82,"T",0X1,3);
	split_sreg_range(0X8009FAA,"T",0X1,3);
	split_sreg_range(0X8009FB2,"T",0X1,3);
	split_sreg_range(0X8009FBA,"T",0X1,3);
	split_sreg_range(0X8009FBC,"T",0X1,3);
	split_sreg_range(0X8009FDA,"T",0X1,3);
	split_sreg_range(0X8009FF8,"T",0X1,3);
	split_sreg_range(0X8009FFE,"T",0X1,3);
	split_sreg_range(0X800A004,"T",0X1,3);
	split_sreg_range(0X800A024,"T",0X1,3);
	split_sreg_range(0X800A036,"T",0X1,3);
	split_sreg_range(0X800A03C,"T",0X1,3);
	split_sreg_range(0X800A03E,"T",0X1,3);
	split_sreg_range(0X800A044,"T",0X1,3);
	split_sreg_range(0X800A09A,"T",0X1,3);
	split_sreg_range(0X800A0A8,"T",0X1,3);
	split_sreg_range(0X800A0B2,"T",0X1,3);
	split_sreg_range(0X800A0B4,"T",0X1,3);
	split_sreg_range(0X800A0C2,"T",0X1,3);
	split_sreg_range(0X800A0CC,"T",0X1,3);
	split_sreg_range(0X800A0CE,"T",0X1,3);
	split_sreg_range(0X800A0DC,"T",0X1,3);
	split_sreg_range(0X800A0E6,"T",0X1,3);
	split_sreg_range(0X800A0E8,"T",0X1,3);
	split_sreg_range(0X800A0F6,"T",0X1,3);
	split_sreg_range(0X800A100,"T",0X1,3);
	split_sreg_range(0X800A102,"T",0X1,3);
	split_sreg_range(0X800A110,"T",0X1,3);
	split_sreg_range(0X800A11A,"T",0X1,3);
	split_sreg_range(0X800A14E,"T",0X1,3);
	split_sreg_range(0X800A150,"T",0X1,3);
	split_sreg_range(0X800A18C,"T",0X1,3);
	split_sreg_range(0X800A1A8,"T",0X1,3);
	split_sreg_range(0X800A1C0,"T",0X1,3);
	split_sreg_range(0X800A1D6,"T",0X1,3);
	split_sreg_range(0X800A1D8,"T",0X1,3);
	split_sreg_range(0X800A214,"T",0X1,3);
	split_sreg_range(0X800A24C,"T",0X1,3);
	split_sreg_range(0X800A256,"T",0X1,3);
	split_sreg_range(0X800A25A,"T",0X1,3);
	split_sreg_range(0X800A262,"T",0X1,3);
	split_sreg_range(0X800A264,"T",0X1,3);
	split_sreg_range(0X800A28C,"T",0X1,3);
	split_sreg_range(0X800A2A4,"T",0X1,3);
	split_sreg_range(0X800A2BE,"T",0X1,3);
	split_sreg_range(0X800A2C6,"T",0X1,3);
	split_sreg_range(0X800A2CC,"T",0X1,3);
	split_sreg_range(0X800A322,"T",0X1,3);
	split_sreg_range(0X800A32E,"T",0X1,3);
	split_sreg_range(0X800A338,"T",0X1,3);
	split_sreg_range(0X800A346,"T",0X1,3);
	split_sreg_range(0X800A350,"T",0X1,3);
	split_sreg_range(0X800A352,"T",0X1,3);
	split_sreg_range(0X800A36A,"T",0X1,3);
	split_sreg_range(0X800A370,"T",0X1,3);
	split_sreg_range(0X800A37C,"T",0X1,3);
	split_sreg_range(0X800A382,"T",0X1,3);
	split_sreg_range(0X800A384,"T",0X1,3);
	split_sreg_range(0X800A388,"T",0X1,3);
	split_sreg_range(0X800A3A0,"T",0X1,3);
	split_sreg_range(0X800A3AA,"T",0X1,3);
	split_sreg_range(0X800A3B8,"T",0X1,3);
	split_sreg_range(0X800A3C2,"T",0X1,3);
	split_sreg_range(0X800A3EC,"T",0X1,3);
	split_sreg_range(0X800A3F6,"T",0X1,3);
	split_sreg_range(0X800A404,"T",0X1,3);
	split_sreg_range(0X800A406,"T",0X1,3);
	split_sreg_range(0X800A41E,"T",0X1,3);
	split_sreg_range(0X800A428,"T",0X1,3);
	split_sreg_range(0X800A438,"T",0X1,3);
	split_sreg_range(0X800A43A,"T",0X1,3);
	split_sreg_range(0X800A442,"T",0X1,3);
	split_sreg_range(0X800A472,"T",0X1,3);
	split_sreg_range(0X800A474,"T",0X1,3);
	split_sreg_range(0X800A476,"T",0X1,3);
	split_sreg_range(0X800A498,"T",0X1,3);
	split_sreg_range(0X800A4B4,"T",0X1,3);
	split_sreg_range(0X800A4CC,"T",0X1,3);
	split_sreg_range(0X800A4E4,"T",0X1,3);
	split_sreg_range(0X800A4FC,"T",0X1,3);
	split_sreg_range(0X800A514,"T",0X1,3);
	split_sreg_range(0X800A52C,"T",0X1,3);
	split_sreg_range(0X800A544,"T",0X1,3);
	split_sreg_range(0X800A55C,"T",0X1,3);
	split_sreg_range(0X800A576,"T",0X1,3);
	split_sreg_range(0X800A590,"T",0X1,3);
	split_sreg_range(0X800A5AA,"T",0X1,3);
	split_sreg_range(0X800A5C2,"T",0X1,3);
	split_sreg_range(0X800A5DA,"T",0X1,3);
	split_sreg_range(0X800A5F2,"T",0X1,3);
	split_sreg_range(0X800A60C,"T",0X1,3);
	split_sreg_range(0X800A626,"T",0X1,3);
	split_sreg_range(0X800A63E,"T",0X1,3);
	split_sreg_range(0X800A640,"T",0X1,3);
	split_sreg_range(0X800A668,"T",0X1,3);
	split_sreg_range(0X800A672,"T",0X1,3);
	split_sreg_range(0X800A688,"T",0X1,3);
	split_sreg_range(0X800A6B0,"T",0X1,3);
	split_sreg_range(0X800A6B4,"T",0X1,3);
	split_sreg_range(0X800A6BA,"T",0X1,3);
	split_sreg_range(0X800A70A,"T",0X1,3);
	split_sreg_range(0X800A732,"T",0X1,3);
	split_sreg_range(0X800A73E,"T",0X1,3);
	split_sreg_range(0X800A790,"T",0X1,3);
	split_sreg_range(0X800A7CC,"T",0X1,3);
	split_sreg_range(0X800A7D8,"T",0X1,3);
	split_sreg_range(0X800A826,"T",0X1,3);
	split_sreg_range(0X800A862,"T",0X1,3);
	split_sreg_range(0X800A86E,"T",0X1,3);
	split_sreg_range(0X800A8D8,"T",0X1,3);
	split_sreg_range(0X800A904,"T",0X1,3);
	split_sreg_range(0X800A916,"T",0X1,3);
	split_sreg_range(0X800A924,"T",0X1,3);
	split_sreg_range(0X800A93E,"T",0X1,3);
	split_sreg_range(0X800A9A0,"T",0X1,3);
	split_sreg_range(0X800A9AE,"T",0X1,3);
	split_sreg_range(0X800A9BA,"T",0X1,3);
	split_sreg_range(0X800A9C0,"T",0X1,3);
	split_sreg_range(0X800A9D2,"T",0X1,3);
	split_sreg_range(0X800AA2C,"T",0X1,3);
	split_sreg_range(0X800AA3A,"T",0X1,3);
	split_sreg_range(0X800AA46,"T",0X1,3);
	split_sreg_range(0X800AA4C,"T",0X1,3);
	split_sreg_range(0X800AA66,"T",0X1,3);
	split_sreg_range(0X800AAC8,"T",0X1,3);
	split_sreg_range(0X800AAD6,"T",0X1,3);
	split_sreg_range(0X800AAE2,"T",0X1,3);
	split_sreg_range(0X800AAE8,"T",0X1,3);
	split_sreg_range(0X800AAFA,"T",0X1,3);
	split_sreg_range(0X800AB46,"T",0X1,3);
	split_sreg_range(0X800AB54,"T",0X1,3);
	split_sreg_range(0X800AB60,"T",0X1,3);
	split_sreg_range(0X800AB66,"T",0X1,3);
	split_sreg_range(0X800AB90,"T",0X1,3);
	split_sreg_range(0X800AB92,"T",0X1,3);
	split_sreg_range(0X800AB94,"T",0X1,3);
	split_sreg_range(0X800ABAE,"T",0X1,3);
	split_sreg_range(0X800ABCA,"T",0X1,3);
	split_sreg_range(0X800ABE6,"T",0X1,3);
	split_sreg_range(0X800ABFA,"T",0X1,3);
	split_sreg_range(0X800ABFC,"T",0X1,3);
	split_sreg_range(0X800AC10,"T",0X1,3);
	split_sreg_range(0X800AC12,"T",0X1,3);
	split_sreg_range(0X800AC1C,"T",0X1,3);
	split_sreg_range(0X800AC1E,"T",0X1,3);
	split_sreg_range(0X800AC4C,"T",0X1,3);
	split_sreg_range(0X800AC74,"T",0X1,3);
	split_sreg_range(0X800AD04,"T",0X1,3);
	split_sreg_range(0X800AD0E,"T",0X1,3);
	split_sreg_range(0X800AD20,"T",0X1,3);
	split_sreg_range(0X800AD2C,"T",0X1,3);
	split_sreg_range(0X800AD2E,"T",0X1,3);
	split_sreg_range(0X800AD38,"T",0X1,3);
	split_sreg_range(0X800AD3E,"T",0X1,3);
	split_sreg_range(0X800AD40,"T",0X1,3);
	split_sreg_range(0X800AD58,"T",0X1,3);
	split_sreg_range(0X800AD5E,"T",0X1,3);
	split_sreg_range(0X800AD6C,"T",0X1,3);
	split_sreg_range(0X800AD7E,"T",0X1,3);
	split_sreg_range(0X800AD96,"T",0X1,3);
	split_sreg_range(0X800ADB4,"T",0X1,3);
	split_sreg_range(0X800ADC0,"T",0X1,3);
	split_sreg_range(0X800ADD4,"T",0X1,3);
	split_sreg_range(0X800ADF0,"T",0X1,3);
	split_sreg_range(0X800AE26,"T",0X1,3);
	split_sreg_range(0X800AE5E,"T",0X1,3);
	split_sreg_range(0X800AF04,"T",0X1,3);
	split_sreg_range(0X800AF0E,"T",0X1,3);
	split_sreg_range(0X800AF1C,"T",0X1,3);
	split_sreg_range(0X800AF26,"T",0X1,3);
	split_sreg_range(0X800AF34,"T",0X1,3);
	split_sreg_range(0X800AF3E,"T",0X1,3);
	split_sreg_range(0X800AF4C,"T",0X1,3);
	split_sreg_range(0X800AF56,"T",0X1,3);
	split_sreg_range(0X800B102,"T",0X1,3);
	split_sreg_range(0X800B120,"T",0X1,3);
	split_sreg_range(0X800B13E,"T",0X1,3);
	split_sreg_range(0X800B15C,"T",0X1,3);
	split_sreg_range(0X800B170,"T",0X1,3);
	split_sreg_range(0X800B18E,"T",0X1,3);
	split_sreg_range(0X800B19C,"T",0X1,3);
	split_sreg_range(0X800B1A6,"T",0X1,3);
	split_sreg_range(0X800B1B4,"T",0X1,3);
	split_sreg_range(0X800B1BE,"T",0X1,3);
	split_sreg_range(0X800B1CC,"T",0X1,3);
	split_sreg_range(0X800B1D6,"T",0X1,3);
	split_sreg_range(0X800B220,"T",0X1,3);
	split_sreg_range(0X800B224,"T",0X1,3);
	split_sreg_range(0X800B228,"T",0X1,3);
	split_sreg_range(0X800B22C,"T",0X1,3);
	split_sreg_range(0X800B230,"T",0X1,3);
	split_sreg_range(0X800B234,"T",0X1,3);
	split_sreg_range(0X800B280,"T",0X1,3);
	split_sreg_range(0X800B282,"T",0X1,3);
	split_sreg_range(0X800B28A,"T",0X1,3);
	split_sreg_range(0X800B2A8,"T",0X1,3);
	split_sreg_range(0X800B2AA,"T",0X1,3);
	split_sreg_range(0X800B2AC,"T",0X1,3);
	split_sreg_range(0X800B2B4,"T",0X1,3);
	split_sreg_range(0X800B2D2,"T",0X1,3);
	split_sreg_range(0X800B2EC,"T",0X1,3);
	split_sreg_range(0X800B306,"T",0X1,3);
	split_sreg_range(0X800B320,"T",0X1,3);
	split_sreg_range(0X800B338,"T",0X1,3);
	split_sreg_range(0X800B33A,"T",0X1,3);
	split_sreg_range(0X800B354,"T",0X1,3);
	split_sreg_range(0X800B39A,"T",0X1,3);
	split_sreg_range(0X800B39E,"T",0X1,3);
	split_sreg_range(0X800B3B8,"T",0X1,3);
	split_sreg_range(0X800B3C8,"T",0X1,3);
	split_sreg_range(0X800B3F2,"T",0X1,3);
	split_sreg_range(0X800B404,"T",0X1,3);
	split_sreg_range(0X800B424,"T",0X1,3);
	split_sreg_range(0X800B452,"T",0X1,3);
	split_sreg_range(0X800B45E,"T",0X1,3);
	split_sreg_range(0X800B468,"T",0X1,3);
	split_sreg_range(0X800B46A,"T",0X1,3);
	split_sreg_range(0X800B480,"T",0X1,3);
	split_sreg_range(0X800B498,"T",0X1,3);
	split_sreg_range(0X800B4A0,"T",0X1,3);
	split_sreg_range(0X800B4A2,"T",0X1,3);
	split_sreg_range(0X800B4AC,"T",0X1,3);
	split_sreg_range(0X800B4B2,"T",0X1,3);
	split_sreg_range(0X800B4B4,"T",0X1,3);
	split_sreg_range(0X800B4BE,"T",0X1,3);
	split_sreg_range(0X800B4C4,"T",0X1,3);
	split_sreg_range(0X800B4F6,"T",0X1,3);
	split_sreg_range(0X800B500,"T",0X1,3);
	split_sreg_range(0X800B520,"T",0X1,3);
	split_sreg_range(0X800B52A,"T",0X1,3);
	split_sreg_range(0X800B574,"T",0X1,3);
	split_sreg_range(0X800B57E,"T",0X1,3);
	split_sreg_range(0X800B58C,"T",0X1,3);
	split_sreg_range(0X800B596,"T",0X1,3);
	split_sreg_range(0X800B5A4,"T",0X1,3);
	split_sreg_range(0X800B5AE,"T",0X1,3);
	split_sreg_range(0X800B5BC,"T",0X1,3);
	split_sreg_range(0X800B5C4,"T",0X1,3);
	split_sreg_range(0X800B5D2,"T",0X1,3);
	split_sreg_range(0X800B5DC,"T",0X1,3);
	split_sreg_range(0X800B5FC,"T",0X1,3);
	split_sreg_range(0X800B606,"T",0X1,3);
	split_sreg_range(0X800B614,"T",0X1,3);
	split_sreg_range(0X800B61E,"T",0X1,3);
	split_sreg_range(0X800B620,"T",0X1,3);
	split_sreg_range(0X800B62E,"T",0X1,3);
	split_sreg_range(0X800B634,"T",0X1,3);
	split_sreg_range(0X800B64A,"T",0X1,3);
	split_sreg_range(0X800B662,"T",0X1,3);
	split_sreg_range(0X800B66C,"T",0X1,3);
	split_sreg_range(0X800B670,"T",0X1,3);
	split_sreg_range(0X800B684,"T",0X1,3);
	split_sreg_range(0X800B686,"T",0X1,3);
	split_sreg_range(0X800B688,"T",0X1,3);
	split_sreg_range(0X800B698,"T",0X1,3);
	split_sreg_range(0X800B6BC,"T",0X1,3);
	split_sreg_range(0X800B6C8,"T",0X1,3);
	split_sreg_range(0X800B6EC,"T",0X1,3);
	split_sreg_range(0X800B704,"T",0X1,3);
	split_sreg_range(0X800B726,"T",0X1,3);
	split_sreg_range(0X800B72A,"T",0X1,3);
	split_sreg_range(0X800B736,"T",0X1,3);
	split_sreg_range(0X800B758,"T",0X1,3);
	split_sreg_range(0X800B760,"T",0X1,3);
	split_sreg_range(0X800B762,"T",0X1,3);
	split_sreg_range(0X800B784,"T",0X1,3);
	split_sreg_range(0X800B788,"T",0X1,3);
	split_sreg_range(0X800B794,"T",0X1,3);
	split_sreg_range(0X800B7BC,"T",0X1,3);
	split_sreg_range(0X800B7C6,"T",0X1,3);
	split_sreg_range(0X800B7C8,"T",0X1,3);
	split_sreg_range(0X800B7E8,"T",0X1,3);
	split_sreg_range(0X800B7EC,"T",0X1,3);
	split_sreg_range(0X800B7F8,"T",0X1,3);
	split_sreg_range(0X800B820,"T",0X1,3);
	split_sreg_range(0X800B82A,"T",0X1,3);
	split_sreg_range(0X800B82C,"T",0X1,3);
	split_sreg_range(0X800B862,"T",0X1,3);
	split_sreg_range(0X800B870,"T",0X1,3);
	split_sreg_range(0X800B88A,"T",0X1,3);
	split_sreg_range(0X800B88E,"T",0X1,3);
	split_sreg_range(0X800B8C4,"T",0X1,3);
	split_sreg_range(0X800B8D2,"T",0X1,3);
	split_sreg_range(0X800B8EC,"T",0X1,3);
	split_sreg_range(0X800B8F0,"T",0X1,3);
	split_sreg_range(0X800B926,"T",0X1,3);
	split_sreg_range(0X800B934,"T",0X1,3);
	split_sreg_range(0X800B94E,"T",0X1,3);
	split_sreg_range(0X800B952,"T",0X1,3);
	split_sreg_range(0X800BB50,"T",0X1,3);
	split_sreg_range(0X800BBB8,"T",0X1,3);
	split_sreg_range(0X800BBBA,"T",0X1,3);
	split_sreg_range(0X800BC6A,"T",0X1,3);
	split_sreg_range(0X800BDDA,"T",0X1,3);
	split_sreg_range(0X800BDFC,"T",0X1,3);
	split_sreg_range(0X800BE06,"T",0X1,3);
	split_sreg_range(0X800BE34,"T",0X1,3);
	split_sreg_range(0X800BE38,"T",0X1,3);
	split_sreg_range(0X800BE44,"T",0X1,3);
	split_sreg_range(0X800BE5C,"T",0X1,3);
	split_sreg_range(0X800BE62,"T",0X1,3);
	split_sreg_range(0X800BE64,"T",0X1,3);
	split_sreg_range(0X800BE76,"T",0X1,3);
	split_sreg_range(0X800BE80,"T",0X1,3);
	split_sreg_range(0X800BE92,"T",0X1,3);
	split_sreg_range(0X800BEB4,"T",0X1,3);
	split_sreg_range(0X800BEB8,"T",0X1,3);
	split_sreg_range(0X800BEC4,"T",0X1,3);
	split_sreg_range(0X800BEDE,"T",0X1,3);
	split_sreg_range(0X800BEF0,"T",0X1,3);
	split_sreg_range(0X800BEFA,"T",0X1,3);
	split_sreg_range(0X800BF26,"T",0X1,3);
	split_sreg_range(0X800BF2A,"T",0X1,3);
	split_sreg_range(0X800BF6C,"T",0X1,3);
	split_sreg_range(0X800BF6E,"T",0X1,3);
	split_sreg_range(0X800BF7A,"T",0X1,3);
	split_sreg_range(0X800BF8E,"T",0X1,3);
	split_sreg_range(0X800BF94,"T",0X1,3);
	split_sreg_range(0X800BFA8,"T",0X1,3);
	split_sreg_range(0X800BFC0,"T",0X1,3);
	split_sreg_range(0X800BFDC,"T",0X1,3);
	split_sreg_range(0X800BFF2,"T",0X1,3);
	split_sreg_range(0X800BFF6,"T",0X1,3);
	split_sreg_range(0X800BFFA,"T",0X1,3);
	split_sreg_range(0X800C008,"T",0X1,3);
	split_sreg_range(0X800C00C,"T",0X1,3);
	split_sreg_range(0X800C01A,"T",0X1,3);
	split_sreg_range(0X800C030,"T",0X1,3);
	split_sreg_range(0X800C032,"T",0X1,3);
	split_sreg_range(0X800C056,"T",0X1,3);
	split_sreg_range(0X800C06A,"T",0X1,3);
	split_sreg_range(0X800C076,"T",0X1,3);
	split_sreg_range(0X800C07A,"T",0X1,3);
	split_sreg_range(0X800C07C,"T",0X1,3);
	split_sreg_range(0X800C08A,"T",0X1,3);
	split_sreg_range(0X800C09E,"T",0X1,3);
	split_sreg_range(0X800C152,"T",0X1,3);
	split_sreg_range(0X800C15C,"T",0X1,3);
	split_sreg_range(0X800C164,"T",0X1,3);
	split_sreg_range(0X800C16E,"T",0X1,3);
	split_sreg_range(0X800C174,"T",0X1,3);
	split_sreg_range(0X800C1A6,"T",0X1,3);
	split_sreg_range(0X800C1AA,"T",0X1,3);
	split_sreg_range(0X800C1BE,"T",0X1,3);
	split_sreg_range(0X800C1C8,"T",0X1,3);
	split_sreg_range(0X800C224,"T",0X1,3);
	split_sreg_range(0X800C228,"T",0X1,3);
	split_sreg_range(0X800C23C,"T",0X1,3);
	split_sreg_range(0X800C248,"T",0X1,3);
	split_sreg_range(0X800C264,"T",0X1,3);
	split_sreg_range(0X800C266,"T",0X1,3);
	split_sreg_range(0X800C28C,"T",0X1,3);
	split_sreg_range(0X800C29C,"T",0X1,3);
	split_sreg_range(0X800C2B2,"T",0X1,3);
	split_sreg_range(0X800C2B8,"T",0X1,3);
	split_sreg_range(0X800C2DC,"T",0X1,3);
	split_sreg_range(0X800C2E2,"T",0X1,3);
	split_sreg_range(0X800C2EE,"T",0X1,3);
	split_sreg_range(0X800C2F0,"T",0X1,3);
	split_sreg_range(0X800C304,"T",0X1,3);
	split_sreg_range(0X800C312,"T",0X1,3);
	split_sreg_range(0X800C326,"T",0X1,3);
	split_sreg_range(0X800C3E0,"T",0X1,3);
	split_sreg_range(0X800C3F2,"T",0X1,3);
	split_sreg_range(0X800C40C,"T",0X1,3);
	split_sreg_range(0X800C41E,"T",0X1,3);
	split_sreg_range(0X800C442,"T",0X1,3);
	split_sreg_range(0X800C452,"T",0X1,3);
	split_sreg_range(0X800C478,"T",0X1,3);
	split_sreg_range(0X800C4A4,"T",0X1,3);
	split_sreg_range(0X800C4A6,"T",0X1,3);
	split_sreg_range(0X800C4BA,"T",0X1,3);
	split_sreg_range(0X800C4BC,"T",0X1,3);
	split_sreg_range(0X800C4C0,"T",0X1,3);
	split_sreg_range(0X800C4CE,"T",0X1,3);
	split_sreg_range(0X800C4D8,"T",0X1,3);
	split_sreg_range(0X800C4EA,"T",0X1,3);
	split_sreg_range(0X800C4F8,"T",0X1,3);
	split_sreg_range(0X800C4FA,"T",0X1,3);
	split_sreg_range(0X800C50A,"T",0X1,3);
	split_sreg_range(0X800C518,"T",0X1,3);
	split_sreg_range(0X800C530,"T",0X1,3);
	split_sreg_range(0X800C534,"T",0X1,3);
	split_sreg_range(0X800C548,"T",0X1,3);
	split_sreg_range(0X800C54E,"T",0X1,3);
	split_sreg_range(0X800C560,"T",0X1,3);
	split_sreg_range(0X800C592,"T",0X1,3);
	split_sreg_range(0X800C5A8,"T",0X1,3);
	split_sreg_range(0X800C5BE,"T",0X1,3);
	split_sreg_range(0X800C5C0,"T",0X1,3);
	split_sreg_range(0X800C5D6,"T",0X1,3);
	split_sreg_range(0X800C5EC,"T",0X1,3);
	split_sreg_range(0X800C5EE,"T",0X1,3);
	split_sreg_range(0X800C604,"T",0X1,3);
	split_sreg_range(0X800C61A,"T",0X1,3);
	split_sreg_range(0X800C620,"T",0X1,3);
	split_sreg_range(0X800C64E,"T",0X1,3);
	split_sreg_range(0X800C65C,"T",0X1,3);
	split_sreg_range(0X800C65E,"T",0X1,3);
	split_sreg_range(0X800C68E,"T",0X1,3);
	split_sreg_range(0X800C69C,"T",0X1,3);
	split_sreg_range(0X800C6C4,"T",0X1,3);
	split_sreg_range(0X800C6D4,"T",0X1,3);
	split_sreg_range(0X800C6F4,"T",0X1,3);
	split_sreg_range(0X800C6F6,"T",0X1,3);
	split_sreg_range(0X800C73E,"T",0X1,3);
	split_sreg_range(0X800C744,"T",0X1,3);
	split_sreg_range(0X800C752,"T",0X1,3);
	split_sreg_range(0X800C760,"T",0X1,3);
	split_sreg_range(0X800C78C,"T",0X1,3);
	split_sreg_range(0X800C79E,"T",0X1,3);
	split_sreg_range(0X800C7C2,"T",0X1,3);
	split_sreg_range(0X800C7E2,"T",0X1,3);
	split_sreg_range(0X800C802,"T",0X1,3);
	split_sreg_range(0X800C824,"T",0X1,3);
	split_sreg_range(0X800C826,"T",0X1,3);
	split_sreg_range(0X800C83C,"T",0X1,3);
	split_sreg_range(0X800C83E,"T",0X1,3);
	split_sreg_range(0X800C8E2,"T",0X1,3);
	split_sreg_range(0X800C8F2,"T",0X1,3);
	split_sreg_range(0X800C8F8,"T",0X1,3);
	split_sreg_range(0X800C8FE,"T",0X1,3);
	split_sreg_range(0X800C904,"T",0X1,3);
	split_sreg_range(0X800C90A,"T",0X1,3);
	split_sreg_range(0X800C920,"T",0X1,3);
	split_sreg_range(0X800C950,"T",0X1,3);
	split_sreg_range(0X800C964,"T",0X1,3);
	split_sreg_range(0X800C966,"T",0X1,3);
	split_sreg_range(0X800C9BA,"T",0X1,3);
	split_sreg_range(0X800C9C0,"T",0X1,3);
	split_sreg_range(0X800C9CA,"T",0X1,3);
	split_sreg_range(0X800C9EA,"T",0X1,3);
	split_sreg_range(0X800CA0C,"T",0X1,3);
	split_sreg_range(0X800CA16,"T",0X1,3);
	split_sreg_range(0X800CA38,"T",0X1,3);
	split_sreg_range(0X800CA58,"T",0X1,3);
	split_sreg_range(0X800CA78,"T",0X1,3);
	split_sreg_range(0X800CA96,"T",0X1,3);
	split_sreg_range(0X800CAA8,"T",0X1,3);
	split_sreg_range(0X800CB10,"T",0X1,3);
	split_sreg_range(0X800CB20,"T",0X1,3);
	split_sreg_range(0X800CB32,"T",0X1,3);
	split_sreg_range(0X800CB3E,"T",0X1,3);
	split_sreg_range(0X800CB42,"T",0X1,3);
	split_sreg_range(0X800CB4A,"T",0X1,3);
	split_sreg_range(0X800CB52,"T",0X1,3);
	split_sreg_range(0X800CB58,"T",0X1,3);
	split_sreg_range(0X800CB88,"T",0X1,3);
	split_sreg_range(0X800CB8A,"T",0X1,3);
	split_sreg_range(0X800CB9A,"T",0X1,3);
	split_sreg_range(0X800CBA8,"T",0X1,3);
	split_sreg_range(0X800CBAC,"T",0X1,3);
	split_sreg_range(0X800CBB0,"T",0X1,3);
	split_sreg_range(0X800CBC8,"T",0X1,3);
	split_sreg_range(0X800CBD0,"T",0X1,3);
	split_sreg_range(0X800CBD4,"T",0X1,3);
	split_sreg_range(0X800CBE4,"T",0X1,3);
	split_sreg_range(0X800CBF6,"T",0X1,3);
	split_sreg_range(0X800CC00,"T",0X1,3);
	split_sreg_range(0X800CC06,"T",0X1,3);
	split_sreg_range(0X800CC20,"T",0X1,3);
	split_sreg_range(0X800CC22,"T",0X1,3);
	split_sreg_range(0X800CC24,"T",0X1,3);
	split_sreg_range(0X800CC2E,"T",0X1,3);
	split_sreg_range(0X800CC46,"T",0X1,3);
	split_sreg_range(0X800CC5C,"T",0X1,3);
	split_sreg_range(0X800CC5E,"T",0X1,3);
	split_sreg_range(0X800CC62,"T",0X1,3);
	split_sreg_range(0X800CC70,"T",0X1,3);
	split_sreg_range(0X800CC8E,"T",0X1,3);
	split_sreg_range(0X800CCAE,"T",0X1,3);
	split_sreg_range(0X800CCB6,"T",0X1,3);
	split_sreg_range(0X800CCBE,"T",0X1,3);
	split_sreg_range(0X800CCC0,"T",0X1,3);
	split_sreg_range(0X800CCC8,"T",0X1,3);
	split_sreg_range(0X800CCDC,"T",0X1,3);
	split_sreg_range(0X800CD30,"T",0X1,3);
	split_sreg_range(0X800CD42,"T",0X1,3);
	split_sreg_range(0X800CD50,"T",0X1,3);
	split_sreg_range(0X800CD68,"T",0X1,3);
	split_sreg_range(0X800CD7C,"T",0X1,3);
	split_sreg_range(0X800CDE2,"T",0X1,3);
	split_sreg_range(0X800CDF6,"T",0X1,3);
	split_sreg_range(0X800CE08,"T",0X1,3);
	split_sreg_range(0X800CE38,"T",0X1,3);
	split_sreg_range(0X800CE3A,"T",0X1,3);
	split_sreg_range(0X800CE3C,"T",0X1,3);
	split_sreg_range(0X800CE3E,"T",0X1,3);
	split_sreg_range(0X800CE4C,"T",0X1,3);
	split_sreg_range(0X800CE5C,"T",0X1,3);
	split_sreg_range(0X800CE64,"T",0X1,3);
	split_sreg_range(0X800CE7A,"T",0X1,3);
	split_sreg_range(0X800CE7C,"T",0X1,3);
	split_sreg_range(0X800CE88,"T",0X1,3);
	split_sreg_range(0X800CE8A,"T",0X1,3);
	split_sreg_range(0X800CE8E,"T",0X1,3);
	split_sreg_range(0X800CE9C,"T",0X1,3);
	split_sreg_range(0X800CEAC,"T",0X1,3);
	split_sreg_range(0X800CEB8,"T",0X1,3);
	split_sreg_range(0X800CEBA,"T",0X1,3);
	split_sreg_range(0X800CED0,"T",0X1,3);
	split_sreg_range(0X800CED2,"T",0X1,3);
	split_sreg_range(0X800CEDE,"T",0X1,3);
	split_sreg_range(0X800CEE0,"T",0X1,3);
	split_sreg_range(0X800CEE4,"T",0X1,3);
	split_sreg_range(0X800CEF2,"T",0X1,3);
	split_sreg_range(0X800CF02,"T",0X1,3);
	split_sreg_range(0X800CF0E,"T",0X1,3);
	split_sreg_range(0X800CF10,"T",0X1,3);
	split_sreg_range(0X800CF26,"T",0X1,3);
	split_sreg_range(0X800CF28,"T",0X1,3);
	split_sreg_range(0X800CF34,"T",0X1,3);
	split_sreg_range(0X800CF36,"T",0X1,3);
	split_sreg_range(0X800CF3A,"T",0X1,3);
	split_sreg_range(0X800CF60,"T",0X1,3);
	split_sreg_range(0X800CF70,"T",0X1,3);
	split_sreg_range(0X800CF94,"T",0X1,3);
	split_sreg_range(0X800CFA4,"T",0X1,3);
	split_sreg_range(0X800CFAA,"T",0X1,3);
	split_sreg_range(0X800CFC2,"T",0X1,3);
	split_sreg_range(0X800CFD8,"T",0X1,3);
	split_sreg_range(0X800CFDA,"T",0X1,3);
	split_sreg_range(0X800D010,"T",0X1,3);
	split_sreg_range(0X800D028,"T",0X1,3);
	split_sreg_range(0X800D038,"T",0X1,3);
	split_sreg_range(0X800D046,"T",0X1,3);
	split_sreg_range(0X800D05E,"T",0X1,3);
	split_sreg_range(0X800D06E,"T",0X1,3);
	split_sreg_range(0X800D07E,"T",0X1,3);
	split_sreg_range(0X800D090,"T",0X1,3);
	split_sreg_range(0X800D092,"T",0X1,3);
	split_sreg_range(0X800D0A4,"T",0X1,3);
	split_sreg_range(0X800D0F8,"T",0X1,3);
	split_sreg_range(0X800D104,"T",0X1,3);
	split_sreg_range(0X800D11C,"T",0X1,3);
	split_sreg_range(0X800D128,"T",0X1,3);
	split_sreg_range(0X800D140,"T",0X1,3);
	split_sreg_range(0X800D14C,"T",0X1,3);
	split_sreg_range(0X800D14E,"T",0X1,3);
	split_sreg_range(0X800D160,"T",0X1,3);
	split_sreg_range(0X800D184,"T",0X1,3);
	split_sreg_range(0X800D1A8,"T",0X1,3);
	split_sreg_range(0X800D1B4,"T",0X1,3);
	split_sreg_range(0X800D1C0,"T",0X1,3);
	split_sreg_range(0X800D2A0,"T",0X1,3);
	split_sreg_range(0X800D2B6,"T",0X1,3);
	split_sreg_range(0X800D2C0,"T",0X1,3);
	split_sreg_range(0X800D308,"T",0X1,3);
	split_sreg_range(0X800D30E,"T",0X1,3);
	split_sreg_range(0X800D34C,"T",0X1,3);
	split_sreg_range(0X800D362,"T",0X1,3);
	split_sreg_range(0X800D378,"T",0X1,3);
	split_sreg_range(0X800D37A,"T",0X1,3);
	split_sreg_range(0X800D38E,"T",0X1,3);
	split_sreg_range(0X800D3AE,"T",0X1,3);
	split_sreg_range(0X800D3B6,"T",0X1,3);
	split_sreg_range(0X800D3C6,"T",0X1,3);
	split_sreg_range(0X800D3C8,"T",0X1,3);
	split_sreg_range(0X800D3D2,"T",0X1,3);
	split_sreg_range(0X800D3E6,"T",0X1,3);
	split_sreg_range(0X800D410,"T",0X1,3);
	split_sreg_range(0X800D428,"T",0X1,3);
	split_sreg_range(0X800D42A,"T",0X1,3);
	split_sreg_range(0X800D43C,"T",0X1,3);
	split_sreg_range(0X800D440,"T",0X1,3);
	split_sreg_range(0X800D442,"T",0X1,3);
	split_sreg_range(0X800D458,"T",0X1,3);
	split_sreg_range(0X800D45C,"T",0X1,3);
	split_sreg_range(0X800D476,"T",0X1,3);
	split_sreg_range(0X800D482,"T",0X1,3);
	split_sreg_range(0X800D484,"T",0X1,3);
	split_sreg_range(0X800D4A8,"T",0X1,3);
	split_sreg_range(0X800D4BA,"T",0X1,3);
	split_sreg_range(0X800D4C0,"T",0X1,3);
	split_sreg_range(0X800D4D4,"T",0X1,3);
	split_sreg_range(0X800D4E6,"T",0X1,3);
	split_sreg_range(0X800D4F6,"T",0X1,3);
	split_sreg_range(0X800D500,"T",0X1,3);
	split_sreg_range(0X800D51A,"T",0X1,3);
	split_sreg_range(0X800D520,"T",0X1,3);
	split_sreg_range(0X800D52A,"T",0X1,3);
	split_sreg_range(0X800D544,"T",0X1,3);
	split_sreg_range(0X800D55C,"T",0X1,3);
	split_sreg_range(0X800D574,"T",0X1,3);
	split_sreg_range(0X800D576,"T",0X1,3);
	split_sreg_range(0X800D57A,"T",0X1,3);
	split_sreg_range(0X800D58C,"T",0X1,3);
	split_sreg_range(0X800D5B6,"T",0X1,3);
	split_sreg_range(0X800D60A,"T",0X1,3);
	split_sreg_range(0X800D620,"T",0X1,3);
	split_sreg_range(0X800D63A,"T",0X1,3);
	split_sreg_range(0X800D64A,"T",0X1,3);
	split_sreg_range(0X800D650,"T",0X1,3);
	split_sreg_range(0X800D65E,"T",0X1,3);
	split_sreg_range(0X800D680,"T",0X1,3);
	split_sreg_range(0X800D6A6,"T",0X1,3);
	split_sreg_range(0X800D6E0,"T",0X1,3);
	split_sreg_range(0X800D6E8,"T",0X1,3);
	split_sreg_range(0X800D6EA,"T",0X1,3);
	split_sreg_range(0X800D724,"T",0X1,3);
	split_sreg_range(0X800D72C,"T",0X1,3);
	split_sreg_range(0X800D734,"T",0X1,3);
	split_sreg_range(0X800D766,"T",0X1,3);
	split_sreg_range(0X800D798,"T",0X1,3);
	split_sreg_range(0X800D7BA,"T",0X1,3);
	split_sreg_range(0X800D7E6,"T",0X1,3);
	split_sreg_range(0X800D810,"T",0X1,3);
	split_sreg_range(0X800D820,"T",0X1,3);
	split_sreg_range(0X800D828,"T",0X1,3);
	split_sreg_range(0X800D830,"T",0X1,3);
	split_sreg_range(0X800D836,"T",0X1,3);
	split_sreg_range(0X800D846,"T",0X1,3);
	split_sreg_range(0X800D84E,"T",0X1,3);
	split_sreg_range(0X800D856,"T",0X1,3);
	split_sreg_range(0X800D85E,"T",0X1,3);
	split_sreg_range(0X800D866,"T",0X1,3);
	split_sreg_range(0X800D868,"T",0X1,3);
	split_sreg_range(0X800D86C,"T",0X1,3);
	split_sreg_range(0X800D876,"T",0X1,3);
	split_sreg_range(0X800D888,"T",0X1,3);
	split_sreg_range(0X800D892,"T",0X1,3);
	split_sreg_range(0X800D89C,"T",0X1,3);
	split_sreg_range(0X800D8A4,"T",0X1,3);
	split_sreg_range(0X800D8AE,"T",0X1,3);
	split_sreg_range(0X800D8BA,"T",0X1,3);
	split_sreg_range(0X800D8C4,"T",0X1,3);
	split_sreg_range(0X800D8D4,"T",0X1,3);
	split_sreg_range(0X800D8DC,"T",0X1,3);
	split_sreg_range(0X800D8E4,"T",0X1,3);
	split_sreg_range(0X800D8EC,"T",0X1,3);
	split_sreg_range(0X800D8F6,"T",0X1,3);
	split_sreg_range(0X800D8FA,"T",0X1,3);
	split_sreg_range(0X800D910,"T",0X1,3);
	split_sreg_range(0X800D92E,"T",0X1,3);
	split_sreg_range(0X800D93E,"T",0X1,3);
	split_sreg_range(0X800D94E,"T",0X1,3);
	split_sreg_range(0X800D95A,"T",0X1,3);
	split_sreg_range(0X800D970,"T",0X1,3);
	split_sreg_range(0X800D994,"T",0X1,3);
	split_sreg_range(0X800D9A4,"T",0X1,3);
	split_sreg_range(0X800D9AC,"T",0X1,3);
	split_sreg_range(0X800D9B4,"T",0X1,3);
	split_sreg_range(0X800D9BA,"T",0X1,3);
	split_sreg_range(0X800D9CA,"T",0X1,3);
	split_sreg_range(0X800D9D2,"T",0X1,3);
	split_sreg_range(0X800D9DA,"T",0X1,3);
	split_sreg_range(0X800D9E2,"T",0X1,3);
	split_sreg_range(0X800D9EA,"T",0X1,3);
	split_sreg_range(0X800D9EC,"T",0X1,3);
	split_sreg_range(0X800D9F0,"T",0X1,3);
	split_sreg_range(0X800D9FA,"T",0X1,3);
	split_sreg_range(0X800DA0C,"T",0X1,3);
	split_sreg_range(0X800DA16,"T",0X1,3);
	split_sreg_range(0X800DA20,"T",0X1,3);
	split_sreg_range(0X800DA28,"T",0X1,3);
	split_sreg_range(0X800DA32,"T",0X1,3);
	split_sreg_range(0X800DA3C,"T",0X1,3);
	split_sreg_range(0X800DA46,"T",0X1,3);
	split_sreg_range(0X800DA64,"T",0X1,3);
	split_sreg_range(0X800DA72,"T",0X1,3);
	split_sreg_range(0X800DA7A,"T",0X1,3);
	split_sreg_range(0X800DA80,"T",0X1,3);
	split_sreg_range(0X800DA92,"T",0X1,3);
	split_sreg_range(0X800DA9C,"T",0X1,3);
	split_sreg_range(0X800DAAE,"T",0X1,3);
	split_sreg_range(0X800DAB0,"T",0X1,3);
	split_sreg_range(0X800DAD2,"T",0X1,3);
	split_sreg_range(0X800DAD6,"T",0X1,3);
	split_sreg_range(0X800DADA,"T",0X1,3);
	split_sreg_range(0X800DAE4,"T",0X1,3);
	split_sreg_range(0X800DAF4,"T",0X1,3);
	split_sreg_range(0X800DAFC,"T",0X1,3);
	split_sreg_range(0X800DB04,"T",0X1,3);
	split_sreg_range(0X800DB0C,"T",0X1,3);
	split_sreg_range(0X800DB16,"T",0X1,3);
	split_sreg_range(0X800DB1A,"T",0X1,3);
	split_sreg_range(0X800DB30,"T",0X1,3);
	split_sreg_range(0X800DB4C,"T",0X1,3);
	split_sreg_range(0X800DB64,"T",0X1,3);
	split_sreg_range(0X800DB68,"T",0X1,3);
	split_sreg_range(0X800DB72,"T",0X1,3);
	split_sreg_range(0X800DB88,"T",0X1,3);
	split_sreg_range(0X800DB9E,"T",0X1,3);
	split_sreg_range(0X800DBA6,"T",0X1,3);
	split_sreg_range(0X800DBB0,"T",0X1,3);
	split_sreg_range(0X800DBC2,"T",0X1,3);
	split_sreg_range(0X800DBC4,"T",0X1,3);
	split_sreg_range(0X800DBE0,"T",0X1,3);
	split_sreg_range(0X800DC10,"T",0X1,3);
	split_sreg_range(0X800DC3A,"T",0X1,3);
	split_sreg_range(0X800DC44,"T",0X1,3);
	split_sreg_range(0X800DC76,"T",0X1,3);
	split_sreg_range(0X800DC9C,"T",0X1,3);
	split_sreg_range(0X800DCA0,"T",0X1,3);
	split_sreg_range(0X800DCAE,"T",0X1,3);
	split_sreg_range(0X800DCB2,"T",0X1,3);
	split_sreg_range(0X800DCCA,"T",0X1,3);
	split_sreg_range(0X800DCF4,"T",0X1,3);
	split_sreg_range(0X800DD02,"T",0X1,3);
	split_sreg_range(0X800DD08,"T",0X1,3);
	split_sreg_range(0X800DD14,"T",0X1,3);
	split_sreg_range(0X800DD3A,"T",0X1,3);
	split_sreg_range(0X800DD44,"T",0X1,3);
	split_sreg_range(0X800DD4E,"T",0X1,3);
	split_sreg_range(0X800DD58,"T",0X1,3);
	split_sreg_range(0X800DD62,"T",0X1,3);
	split_sreg_range(0X800DD6C,"T",0X1,3);
	split_sreg_range(0X800DD72,"T",0X1,3);
	split_sreg_range(0X800DD80,"T",0X1,3);
	split_sreg_range(0X800DD82,"T",0X1,3);
	split_sreg_range(0X800DD96,"T",0X1,3);
	split_sreg_range(0X800DD9A,"T",0X1,3);
	split_sreg_range(0X800DDA6,"T",0X1,3);
	split_sreg_range(0X800DF2E,"T",0X1,3);
	split_sreg_range(0X800DF3A,"T",0X1,3);
	split_sreg_range(0X800DF56,"T",0X1,3);
	split_sreg_range(0X800DF72,"T",0X1,3);
	split_sreg_range(0X800DF8E,"T",0X1,3);
	split_sreg_range(0X800DFAA,"T",0X1,3);
	split_sreg_range(0X800DFC6,"T",0X1,3);
	split_sreg_range(0X800DFE2,"T",0X1,3);
	split_sreg_range(0X800E004,"T",0X1,3);
	split_sreg_range(0X800E020,"T",0X1,3);
	split_sreg_range(0X800E03A,"T",0X1,3);
	split_sreg_range(0X800E04E,"T",0X1,3);
	split_sreg_range(0X800E14C,"T",0X1,3);
	split_sreg_range(0X800E158,"T",0X1,3);
	split_sreg_range(0X800E174,"T",0X1,3);
	split_sreg_range(0X800E190,"T",0X1,3);
	split_sreg_range(0X800E1AC,"T",0X1,3);
	split_sreg_range(0X800E1C8,"T",0X1,3);
	split_sreg_range(0X800E1E4,"T",0X1,3);
	split_sreg_range(0X800E200,"T",0X1,3);
	split_sreg_range(0X800E21C,"T",0X1,3);
	split_sreg_range(0X800E238,"T",0X1,3);
	split_sreg_range(0X800E252,"T",0X1,3);
	split_sreg_range(0X800E266,"T",0X1,3);
	split_sreg_range(0X800E290,"T",0X1,3);
	split_sreg_range(0X800E2B8,"T",0X1,3);
	split_sreg_range(0X800E2CC,"T",0X1,3);
	split_sreg_range(0X800E2D0,"T",0X1,3);
	split_sreg_range(0X800E2E8,"T",0X1,3);
	split_sreg_range(0X800E2F2,"T",0X1,3);
	split_sreg_range(0X800E2FA,"T",0X1,3);
	split_sreg_range(0X800E30A,"T",0X1,3);
	split_sreg_range(0X800E314,"T",0X1,3);
	split_sreg_range(0X800E31C,"T",0X1,3);
	split_sreg_range(0X800E31E,"T",0X1,3);
	split_sreg_range(0X800E326,"T",0X1,3);
	split_sreg_range(0X800E328,"T",0X1,3);
	split_sreg_range(0X800E33A,"T",0X1,3);
	split_sreg_range(0X800E348,"T",0X1,3);
	split_sreg_range(0X800E34E,"T",0X1,3);
	split_sreg_range(0X800E35C,"T",0X1,3);
	split_sreg_range(0X800E35E,"T",0X1,3);
	split_sreg_range(0X800E360,"T",0X1,3);
	split_sreg_range(0X800E382,"T",0X1,3);
	split_sreg_range(0X800E3A0,"T",0X1,3);
	split_sreg_range(0X800E3D0,"T",0X1,3);
	split_sreg_range(0X800E402,"T",0X1,3);
	split_sreg_range(0X800E41E,"T",0X1,3);
	split_sreg_range(0X800E436,"T",0X1,3);
	split_sreg_range(0X800E452,"T",0X1,3);
	split_sreg_range(0X800E454,"T",0X1,3);
	split_sreg_range(0X800E48A,"T",0X1,3);
	split_sreg_range(0X800E49A,"T",0X1,3);
	split_sreg_range(0X800E4DC,"T",0X1,3);
	split_sreg_range(0X800E51E,"T",0X1,3);
	split_sreg_range(0X800E526,"T",0X1,3);
	split_sreg_range(0X800E52C,"T",0X1,3);
	split_sreg_range(0X800E530,"T",0X1,3);
	split_sreg_range(0X800E538,"T",0X1,3);
	split_sreg_range(0X800E542,"T",0X1,3);
	split_sreg_range(0X800E56A,"T",0X1,3);
	split_sreg_range(0X800E5A8,"T",0X1,3);
	split_sreg_range(0X800E614,"T",0X1,3);
	split_sreg_range(0X800E61A,"T",0X1,3);
	split_sreg_range(0X800E61E,"T",0X1,3);
	split_sreg_range(0X800E67E,"T",0X1,3);
	split_sreg_range(0X800E680,"T",0X1,3);
	split_sreg_range(0X800E69A,"T",0X1,3);
	split_sreg_range(0X800E6AA,"T",0X1,3);
	split_sreg_range(0X800E6AE,"T",0X1,3);
	split_sreg_range(0X800E6C8,"T",0X1,3);
	split_sreg_range(0X800E6D8,"T",0X1,3);
	split_sreg_range(0X800E6E8,"T",0X1,3);
	split_sreg_range(0X800E700,"T",0X1,3);
	split_sreg_range(0X800E710,"T",0X1,3);
	split_sreg_range(0X800E728,"T",0X1,3);
	split_sreg_range(0X800E736,"T",0X1,3);
	split_sreg_range(0X800E73C,"T",0X1,3);
	split_sreg_range(0X800E750,"T",0X1,3);
	split_sreg_range(0X800E77C,"T",0X1,3);
	split_sreg_range(0X800E78C,"T",0X1,3);
	split_sreg_range(0X800E804,"T",0X1,3);
	split_sreg_range(0X800E808,"T",0X1,3);
	split_sreg_range(0X800E80C,"T",0X1,3);
	split_sreg_range(0X800E810,"T",0X1,3);
	split_sreg_range(0X800E814,"T",0X1,3);
	split_sreg_range(0X800E816,"T",0X1,3);
	split_sreg_range(0X800E818,"T",0X1,3);
	split_sreg_range(0X800E81A,"T",0X1,3);
	split_sreg_range(0X800E81C,"T",0X1,3);
	split_sreg_range(0X800E832,"T",0X1,3);
	split_sreg_range(0X800E84E,"T",0X1,3);
	split_sreg_range(0X800E85E,"T",0X1,3);
	split_sreg_range(0X800E862,"T",0X1,3);
	split_sreg_range(0X800E8C0,"T",0X1,3);
	split_sreg_range(0X800E8E2,"T",0X1,3);
	split_sreg_range(0X800E8EE,"T",0X1,3);
	split_sreg_range(0X800E8F0,"T",0X1,3);
	split_sreg_range(0X800E8F8,"T",0X1,3);
	split_sreg_range(0X800E93E,"T",0X1,3);
	split_sreg_range(0X800E95A,"T",0X1,3);
	split_sreg_range(0X800E962,"T",0X1,3);
	split_sreg_range(0X800E96A,"T",0X1,3);
	split_sreg_range(0X800E98C,"T",0X1,3);
	split_sreg_range(0X800E9A0,"T",0X1,3);
	split_sreg_range(0X800E9A8,"T",0X1,3);
	split_sreg_range(0X800E9AA,"T",0X1,3);
	split_sreg_range(0X800E9B2,"T",0X1,3);
	split_sreg_range(0X800E9F4,"T",0X1,3);
	split_sreg_range(0X800E9FE,"T",0X1,3);
	split_sreg_range(0X800EA20,"T",0X1,3);
	split_sreg_range(0X800EA24,"T",0X1,3);
	split_sreg_range(0X800EA28,"T",0X1,3);
	split_sreg_range(0X800EA2A,"T",0X1,3);
	split_sreg_range(0X800EA38,"T",0X1,3);
	split_sreg_range(0X800EA4E,"T",0X1,3);
	split_sreg_range(0X800EA5A,"T",0X1,3);
	split_sreg_range(0X800EA78,"T",0X1,3);
	split_sreg_range(0X800EA7A,"T",0X1,3);
	split_sreg_range(0X800EA84,"T",0X1,3);
	split_sreg_range(0X800EA88,"T",0X1,3);
	split_sreg_range(0X800EA92,"T",0X1,3);
	split_sreg_range(0X800EA9A,"T",0X1,3);
	split_sreg_range(0X800EAA4,"T",0X1,3);
	split_sreg_range(0X800EAC2,"T",0X1,3);
	split_sreg_range(0X800EAC6,"T",0X1,3);
	split_sreg_range(0X800EACA,"T",0X1,3);
	split_sreg_range(0X800EACC,"T",0X1,3);
	split_sreg_range(0X800EAFA,"T",0X1,3);
	split_sreg_range(0X800EAFE,"T",0X1,3);
	split_sreg_range(0X800EB02,"T",0X1,3);
	split_sreg_range(0X800EB04,"T",0X1,3);
	split_sreg_range(0X800EB12,"T",0X1,3);
	split_sreg_range(0X800EB34,"T",0X1,3);
	split_sreg_range(0X800EB38,"T",0X1,3);
	split_sreg_range(0X800EB3C,"T",0X1,3);
	split_sreg_range(0X800EB3E,"T",0X1,3);
	split_sreg_range(0X800EB4C,"T",0X1,3);
	split_sreg_range(0X800EB6E,"T",0X1,3);
	split_sreg_range(0X800EB72,"T",0X1,3);
	split_sreg_range(0X800EB76,"T",0X1,3);
	split_sreg_range(0X800EB78,"T",0X1,3);
	split_sreg_range(0X800EBA8,"T",0X1,3);
	split_sreg_range(0X800EBAC,"T",0X1,3);
	split_sreg_range(0X800EBB0,"T",0X1,3);
	split_sreg_range(0X800EBB2,"T",0X1,3);
	split_sreg_range(0X800EBC0,"T",0X1,3);
	split_sreg_range(0X800EBCC,"T",0X1,3);
	split_sreg_range(0X800EBE0,"T",0X1,3);
	split_sreg_range(0X800EBE4,"T",0X1,3);
	split_sreg_range(0X800EBEA,"T",0X1,3);
	split_sreg_range(0X800EBF0,"T",0X1,3);
	split_sreg_range(0X800EC0A,"T",0X1,3);
	split_sreg_range(0X800EC0C,"T",0X1,3);
	split_sreg_range(0X800EC2E,"T",0X1,3);
	split_sreg_range(0X800EC3C,"T",0X1,3);
	split_sreg_range(0X800EC4A,"T",0X1,3);
	split_sreg_range(0X800ECB8,"T",0X1,3);
	split_sreg_range(0X800ECC6,"T",0X1,3);
	split_sreg_range(0X800ECD4,"T",0X1,3);
	split_sreg_range(0X800ECE2,"T",0X1,3);
	split_sreg_range(0X800ECF0,"T",0X1,3);
	split_sreg_range(0X800ED02,"T",0X1,3);
	split_sreg_range(0X800ED10,"T",0X1,3);
	split_sreg_range(0X800ED1E,"T",0X1,3);
	split_sreg_range(0X800ED2C,"T",0X1,3);
	split_sreg_range(0X800ED3E,"T",0X1,3);
	split_sreg_range(0X800ED4C,"T",0X1,3);
	split_sreg_range(0X800ED5A,"T",0X1,3);
	split_sreg_range(0X800ED68,"T",0X1,3);
	split_sreg_range(0X800ED76,"T",0X1,3);
	split_sreg_range(0X800ED8C,"T",0X1,3);
	split_sreg_range(0X800ED98,"T",0X1,3);
	split_sreg_range(0X800EDAC,"T",0X1,3);
	split_sreg_range(0X800EDC8,"T",0X1,3);
	split_sreg_range(0X800EE20,"T",0X1,3);
	split_sreg_range(0X800EE5A,"T",0X1,3);
	split_sreg_range(0X800EE6C,"T",0X1,3);
	split_sreg_range(0X800EEC4,"T",0X1,3);
	split_sreg_range(0X800EED4,"T",0X1,3);
	split_sreg_range(0X800EEDC,"T",0X1,3);
	split_sreg_range(0X800EEF0,"T",0X1,3);
	split_sreg_range(0X800EEFA,"T",0X1,3);
	split_sreg_range(0X800EF0C,"T",0X1,3);
	split_sreg_range(0X800EF12,"T",0X1,3);
	split_sreg_range(0X800EF1E,"T",0X1,3);
	split_sreg_range(0X800EF26,"T",0X1,3);
	split_sreg_range(0X800EF46,"T",0X1,3);
	split_sreg_range(0X800EF4A,"T",0X1,3);
	split_sreg_range(0X800EF4E,"T",0X1,3);
	split_sreg_range(0X800EF6E,"T",0X1,3);
	split_sreg_range(0X800EF76,"T",0X1,3);
	split_sreg_range(0X800EF82,"T",0X1,3);
	split_sreg_range(0X800EF90,"T",0X1,3);
	split_sreg_range(0X800EF9E,"T",0X1,3);
	split_sreg_range(0X800EFAC,"T",0X1,3);
	split_sreg_range(0X800EFE0,"T",0X1,3);
	split_sreg_range(0X800F096,"T",0X1,3);
	split_sreg_range(0X800F0BA,"T",0X1,3);
	split_sreg_range(0X800F0C2,"T",0X1,3);
	split_sreg_range(0X800F0CE,"T",0X1,3);
	split_sreg_range(0X800F0D2,"T",0X1,3);
	split_sreg_range(0X800F0E8,"T",0X1,3);
	split_sreg_range(0X800F0F4,"T",0X1,3);
	split_sreg_range(0X800F10A,"T",0X1,3);
	split_sreg_range(0X800F116,"T",0X1,3);
	split_sreg_range(0X800F12C,"T",0X1,3);
	split_sreg_range(0X800F138,"T",0X1,3);
	split_sreg_range(0X800F14E,"T",0X1,3);
	split_sreg_range(0X800F15A,"T",0X1,3);
	split_sreg_range(0X800F170,"T",0X1,3);
	split_sreg_range(0X800F178,"T",0X1,3);
	split_sreg_range(0X800F19C,"T",0X1,3);
	split_sreg_range(0X800F232,"T",0X1,3);
	split_sreg_range(0X800F264,"T",0X1,3);
	split_sreg_range(0X800F270,"T",0X1,3);
	split_sreg_range(0X800F288,"T",0X1,3);
	split_sreg_range(0X800F28A,"T",0X1,3);
	split_sreg_range(0X800F2A0,"T",0X1,3);
	split_sreg_range(0X800F2A2,"T",0X1,3);
	split_sreg_range(0X800F2A6,"T",0X1,3);
	split_sreg_range(0X800F2B4,"T",0X1,3);
	split_sreg_range(0X800F2EE,"T",0X1,3);
	split_sreg_range(0X800F32C,"T",0X1,3);
	split_sreg_range(0X800F332,"T",0X1,3);
	split_sreg_range(0X800F340,"T",0X1,3);
	split_sreg_range(0X800F342,"T",0X1,3);
	split_sreg_range(0X800F36C,"T",0X1,3);
	split_sreg_range(0X800F36E,"T",0X1,3);
	split_sreg_range(0X800F37E,"T",0X1,3);
	split_sreg_range(0X800F380,"T",0X1,3);
	split_sreg_range(0X800F3BE,"T",0X1,3);
	split_sreg_range(0X800F3C4,"T",0X1,3);
	split_sreg_range(0X800F3D2,"T",0X1,3);
	split_sreg_range(0X800F3D4,"T",0X1,3);
	split_sreg_range(0X800F3FE,"T",0X1,3);
	split_sreg_range(0X800F400,"T",0X1,3);
	split_sreg_range(0X800F40C,"T",0X1,3);
	split_sreg_range(0X800F410,"T",0X1,3);
	split_sreg_range(0X800F442,"T",0X1,3);
	split_sreg_range(0X800F458,"T",0X1,3);
	split_sreg_range(0X800F466,"T",0X1,3);
	split_sreg_range(0X800F476,"T",0X1,3);
	split_sreg_range(0X800F48C,"T",0X1,3);
	split_sreg_range(0X800F498,"T",0X1,3);
	split_sreg_range(0X800F4A2,"T",0X1,3);
	split_sreg_range(0X800F510,"T",0X1,3);
	split_sreg_range(0X800F520,"T",0X1,3);
	split_sreg_range(0X800F522,"T",0X1,3);
	split_sreg_range(0X800F530,"T",0X1,3);
	split_sreg_range(0X800F554,"T",0X1,3);
	split_sreg_range(0X800F5CA,"T",0X1,3);
	split_sreg_range(0X800F5DC,"T",0X1,3);
	split_sreg_range(0X800F5EC,"T",0X1,3);
	split_sreg_range(0X800F652,"T",0X1,3);
	split_sreg_range(0X800F664,"T",0X1,3);
	split_sreg_range(0X800F666,"T",0X1,3);
	split_sreg_range(0X800F670,"T",0X1,3);
	split_sreg_range(0X800F69E,"T",0X1,3);
	split_sreg_range(0X800F6B6,"T",0X1,3);
	split_sreg_range(0X800F6F4,"T",0X1,3);
	split_sreg_range(0X800F720,"T",0X1,3);
	split_sreg_range(0X800F79C,"T",0X1,3);
	split_sreg_range(0X800F79E,"T",0X1,3);
	split_sreg_range(0X800F7B0,"T",0X1,3);
	split_sreg_range(0X800F7C0,"T",0X1,3);
	split_sreg_range(0X800F84C,"T",0X1,3);
	split_sreg_range(0X800F85A,"T",0X1,3);
	split_sreg_range(0X800F862,"T",0X1,3);
	split_sreg_range(0X800F864,"T",0X1,3);
	split_sreg_range(0X800F87C,"T",0X1,3);
	split_sreg_range(0X800F8E2,"T",0X1,3);
	split_sreg_range(0X800F8F2,"T",0X1,3);
	split_sreg_range(0X800F944,"T",0X1,3);
	split_sreg_range(0X800F946,"T",0X1,3);
	split_sreg_range(0X800F956,"T",0X1,3);
	split_sreg_range(0X800F978,"T",0X1,3);
	split_sreg_range(0X800F9B0,"T",0X1,3);
	split_sreg_range(0X800FA00,"T",0X1,3);
	split_sreg_range(0X800FA58,"T",0X1,3);
	split_sreg_range(0X800FA64,"T",0X1,3);
	split_sreg_range(0X800FAA0,"T",0X1,3);
	split_sreg_range(0X800FAC8,"T",0X1,3);
	split_sreg_range(0X800FAD8,"T",0X1,3);
	split_sreg_range(0X800FB18,"T",0X1,3);
	split_sreg_range(0X800FB22,"T",0X1,3);
	split_sreg_range(0X800FB74,"T",0X1,3);
	split_sreg_range(0X800FB94,"T",0X1,3);
	split_sreg_range(0X800FBB6,"T",0X1,3);
	split_sreg_range(0X800FBC6,"T",0X1,3);
	split_sreg_range(0X800FBFE,"T",0X1,3);
	split_sreg_range(0X800FC1E,"T",0X1,3);
	split_sreg_range(0X800FC20,"T",0X1,3);
	split_sreg_range(0X800FC22,"T",0X1,3);
	split_sreg_range(0X800FC36,"T",0X1,3);
	split_sreg_range(0X800FC3E,"T",0X1,3);
	split_sreg_range(0X800FC82,"T",0X1,3);
	split_sreg_range(0X800FCA0,"T",0X1,3);
	split_sreg_range(0X800FCD0,"T",0X1,3);
	split_sreg_range(0X800FD02,"T",0X1,3);
	split_sreg_range(0X800FD20,"T",0X1,3);
	split_sreg_range(0X800FD22,"T",0X1,3);
	split_sreg_range(0X800FD40,"T",0X1,3);
	split_sreg_range(0X800FD5E,"T",0X1,3);
	split_sreg_range(0X800FD8E,"T",0X1,3);
	split_sreg_range(0X800FDC0,"T",0X1,3);
	split_sreg_range(0X800FDDC,"T",0X1,3);
	split_sreg_range(0X800FDE6,"T",0X1,3);
	split_sreg_range(0X800FE08,"T",0X1,3);
	split_sreg_range(0X800FE46,"T",0X1,3);
	split_sreg_range(0X800FE4C,"T",0X1,3);
	split_sreg_range(0X800FE96,"T",0X1,3);
	split_sreg_range(0X800FEAE,"T",0X1,3);
	split_sreg_range(0X800FEBE,"T",0X1,3);
	split_sreg_range(0X800FED6,"T",0X1,3);
	split_sreg_range(0X800FEE6,"T",0X1,3);
	split_sreg_range(0X800FEE8,"T",0X1,3);
	split_sreg_range(0X800FEEC,"T",0X1,3);
	split_sreg_range(0X800FEEE,"T",0X1,3);
	split_sreg_range(0X800FF24,"T",0X1,3);
	split_sreg_range(0X800FF38,"T",0X1,3);
	split_sreg_range(0X800FF4A,"T",0X1,3);
	split_sreg_range(0X800FF5A,"T",0X1,3);
	split_sreg_range(0X800FF5E,"T",0X1,3);
	split_sreg_range(0X800FF66,"T",0X1,3);
	split_sreg_range(0X800FFC2,"T",0X1,3);
	split_sreg_range(0X800FFFA,"T",0X1,3);
	split_sreg_range(0X801001A,"T",0X1,3);
	split_sreg_range(0X801007E,"T",0X1,3);
	split_sreg_range(0X801008E,"T",0X1,3);
	split_sreg_range(0X80100DE,"T",0X1,3);
	split_sreg_range(0X80100E0,"T",0X1,3);
	split_sreg_range(0X80100F8,"T",0X1,3);
	split_sreg_range(0X8010148,"T",0X1,3);
	split_sreg_range(0X801015C,"T",0X1,3);
	split_sreg_range(0X801016C,"T",0X1,3);
	split_sreg_range(0X8010186,"T",0X1,3);
	split_sreg_range(0X8010188,"T",0X1,3);
	split_sreg_range(0X801018C,"T",0X1,3);
	split_sreg_range(0X80101A4,"T",0X1,3);
	split_sreg_range(0X80101DC,"T",0X1,3);
	split_sreg_range(0X80101EC,"T",0X1,3);
	split_sreg_range(0X8010220,"T",0X1,3);
	split_sreg_range(0X8010222,"T",0X1,3);
	split_sreg_range(0X8010226,"T",0X1,3);
	split_sreg_range(0X8010234,"T",0X1,3);
	split_sreg_range(0X8010238,"T",0X1,3);
	split_sreg_range(0X80102D0,"T",0X1,3);
	split_sreg_range(0X80102E2,"T",0X1,3);
	split_sreg_range(0X8010306,"T",0X1,3);
	split_sreg_range(0X8010330,"T",0X1,3);
	split_sreg_range(0X801033A,"T",0X1,3);
	split_sreg_range(0X8010342,"T",0X1,3);
	split_sreg_range(0X8010352,"T",0X1,3);
	split_sreg_range(0X8010362,"T",0X1,3);
	split_sreg_range(0X8010372,"T",0X1,3);
	split_sreg_range(0X801038C,"T",0X1,3);
	split_sreg_range(0X80103A2,"T",0X1,3);
	split_sreg_range(0X80103A8,"T",0X1,3);
	split_sreg_range(0X80103BE,"T",0X1,3);
	split_sreg_range(0X80103D0,"T",0X1,3);
	split_sreg_range(0X80103E0,"T",0X1,3);
	split_sreg_range(0X80103F6,"T",0X1,3);
	split_sreg_range(0X80103FC,"T",0X1,3);
	split_sreg_range(0X801040A,"T",0X1,3);
	split_sreg_range(0X8010412,"T",0X1,3);
	split_sreg_range(0X8010414,"T",0X1,3);
	split_sreg_range(0X801042C,"T",0X1,3);
	split_sreg_range(0X8010432,"T",0X1,3);
	split_sreg_range(0X8010444,"T",0X1,3);
	split_sreg_range(0X801044C,"T",0X1,3);
	split_sreg_range(0X8010454,"T",0X1,3);
	split_sreg_range(0X8010456,"T",0X1,3);
	split_sreg_range(0X8010468,"T",0X1,3);
	split_sreg_range(0X8010484,"T",0X1,3);
	split_sreg_range(0X80104A2,"T",0X1,3);
	split_sreg_range(0X80104FA,"T",0X1,3);
	split_sreg_range(0X8010546,"T",0X1,3);
	split_sreg_range(0X8010548,"T",0X1,3);
	split_sreg_range(0X801054E,"T",0X1,3);
	split_sreg_range(0X801056A,"T",0X1,3);
	split_sreg_range(0X8010576,"T",0X1,3);
	split_sreg_range(0X801058E,"T",0X1,3);
	split_sreg_range(0X80105DA,"T",0X1,3);
	split_sreg_range(0X80105E4,"T",0X1,3);
	split_sreg_range(0X80105E6,"T",0X1,3);
	split_sreg_range(0X80105F4,"T",0X1,3);
	split_sreg_range(0X8010600,"T",0X1,3);
	split_sreg_range(0X8010606,"T",0X1,3);
	split_sreg_range(0X8010624,"T",0X1,3);
	split_sreg_range(0X8010630,"T",0X1,3);
	split_sreg_range(0X801063C,"T",0X1,3);
	split_sreg_range(0X8010648,"T",0X1,3);
	split_sreg_range(0X8010678,"T",0X1,3);
	split_sreg_range(0X801067C,"T",0X1,3);
	split_sreg_range(0X80106D4,"T",0X1,3);
	split_sreg_range(0X80106DE,"T",0X1,3);
	split_sreg_range(0X80106EE,"T",0X1,3);
	split_sreg_range(0X80106FE,"T",0X1,3);
	split_sreg_range(0X8010702,"T",0X1,3);
	split_sreg_range(0X8010712,"T",0X1,3);
	split_sreg_range(0X8010722,"T",0X1,3);
	split_sreg_range(0X8010788,"T",0X1,3);
	split_sreg_range(0X801078A,"T",0X1,3);
	split_sreg_range(0X801078E,"T",0X1,3);
	split_sreg_range(0X8010796,"T",0X1,3);
	split_sreg_range(0X8010798,"T",0X1,3);
	split_sreg_range(0X80107A0,"T",0X1,3);
	split_sreg_range(0X80107C0,"T",0X1,3);
	split_sreg_range(0X80107C6,"T",0X1,3);
	split_sreg_range(0X80107E6,"T",0X1,3);
	split_sreg_range(0X80107EC,"T",0X1,3);
	split_sreg_range(0X8010812,"T",0X1,3);
	split_sreg_range(0X801081A,"T",0X1,3);
	split_sreg_range(0X8010836,"T",0X1,3);
	split_sreg_range(0X801084E,"T",0X1,3);
	split_sreg_range(0X8010864,"T",0X1,3);
	split_sreg_range(0X8010876,"T",0X1,3);
	split_sreg_range(0X801089A,"T",0X1,3);
	split_sreg_range(0X80108A6,"T",0X1,3);
	split_sreg_range(0X80108AE,"T",0X1,3);
	split_sreg_range(0X80108EC,"T",0X1,3);
	split_sreg_range(0X80108F8,"T",0X1,3);
	split_sreg_range(0X80108FA,"T",0X1,3);
	split_sreg_range(0X8010904,"T",0X1,3);
	split_sreg_range(0X801090E,"T",0X1,3);
	split_sreg_range(0X8010910,"T",0X1,3);
	split_sreg_range(0X801092A,"T",0X1,3);
	split_sreg_range(0X8010930,"T",0X1,3);
	split_sreg_range(0X8010942,"T",0X1,3);
	split_sreg_range(0X8010956,"T",0X1,3);
	split_sreg_range(0X801097A,"T",0X1,3);
	split_sreg_range(0X801097C,"T",0X1,3);
	split_sreg_range(0X80109A8,"T",0X1,3);
	split_sreg_range(0X80109AA,"T",0X1,3);
	split_sreg_range(0X80109D6,"T",0X1,3);
	split_sreg_range(0X80109D8,"T",0X1,3);
	split_sreg_range(0X8010A04,"T",0X1,3);
	split_sreg_range(0X8010A06,"T",0X1,3);
	split_sreg_range(0X8010A20,"T",0X1,3);
	split_sreg_range(0X8010A24,"T",0X1,3);
	split_sreg_range(0X8010A4C,"T",0X1,3);
	split_sreg_range(0X8010A52,"T",0X1,3);
	split_sreg_range(0X8010A60,"T",0X1,3);
	split_sreg_range(0X8010A62,"T",0X1,3);
	split_sreg_range(0X8010A74,"T",0X1,3);
	split_sreg_range(0X8010A76,"T",0X1,3);
	split_sreg_range(0X8010A8E,"T",0X1,3);
	split_sreg_range(0X8010A90,"T",0X1,3);
	split_sreg_range(0X8010C0C,"T",0X1,3);
	split_sreg_range(0X8010C3C,"T",0X1,3);
	split_sreg_range(0X8010C54,"T",0X1,3);
	split_sreg_range(0X8010C64,"T",0X1,3);
	split_sreg_range(0X8010C74,"T",0X1,3);
	split_sreg_range(0X8010C84,"T",0X1,3);
	split_sreg_range(0X8010C86,"T",0X1,3);
	split_sreg_range(0X8010C9E,"T",0X1,3);
	split_sreg_range(0X8010CDE,"T",0X1,3);
	split_sreg_range(0X8010CF2,"T",0X1,3);
	split_sreg_range(0X8010CF4,"T",0X1,3);
	split_sreg_range(0X8010D7E,"T",0X1,3);
	split_sreg_range(0X8010DB4,"T",0X1,3);
	split_sreg_range(0X8010DC4,"T",0X1,3);
	split_sreg_range(0X8010DE2,"T",0X1,3);
	split_sreg_range(0X8010DF4,"T",0X1,3);
	split_sreg_range(0X8010E12,"T",0X1,3);
	split_sreg_range(0X8010E1C,"T",0X1,3);
	split_sreg_range(0X8010ED4,"T",0X1,3);
	split_sreg_range(0X8010F04,"T",0X1,3);
	split_sreg_range(0X8010F08,"T",0X1,3);
	split_sreg_range(0X8010F12,"T",0X1,3);
	split_sreg_range(0X8010F1E,"T",0X1,3);
	split_sreg_range(0X8010F20,"T",0X1,3);
	split_sreg_range(0X8010F24,"T",0X1,3);
	split_sreg_range(0X8010F30,"T",0X1,3);
	split_sreg_range(0X8010F32,"T",0X1,3);
	split_sreg_range(0X8010F36,"T",0X1,3);
	split_sreg_range(0X8010F42,"T",0X1,3);
	split_sreg_range(0X8010F44,"T",0X1,3);
	split_sreg_range(0X8010F48,"T",0X1,3);
	split_sreg_range(0X8010F50,"T",0X1,3);
	split_sreg_range(0X8010F90,"T",0X1,3);
	split_sreg_range(0X8010F94,"T",0X1,3);
	split_sreg_range(0X8010FA0,"T",0X1,3);
	split_sreg_range(0X8010FAE,"T",0X1,3);
	split_sreg_range(0X8010FBC,"T",0X1,3);
	split_sreg_range(0X8010FCA,"T",0X1,3);
	split_sreg_range(0X8010FE0,"T",0X1,3);
	split_sreg_range(0X8010FFC,"T",0X1,3);
	split_sreg_range(0X801105C,"T",0X1,3);
	split_sreg_range(0X8011068,"T",0X1,3);
	split_sreg_range(0X80110AA,"T",0X1,3);
	split_sreg_range(0X80110C0,"T",0X1,3);
	split_sreg_range(0X80110D6,"T",0X1,3);
	split_sreg_range(0X80110E2,"T",0X1,3);
	split_sreg_range(0X80110F8,"T",0X1,3);
	split_sreg_range(0X8011104,"T",0X1,3);
	split_sreg_range(0X801111A,"T",0X1,3);
	split_sreg_range(0X8011126,"T",0X1,3);
	split_sreg_range(0X8011158,"T",0X1,3);
	split_sreg_range(0X8011176,"T",0X1,3);
	split_sreg_range(0X801117E,"T",0X1,3);
	split_sreg_range(0X801118A,"T",0X1,3);
	split_sreg_range(0X801118C,"T",0X1,3);
	split_sreg_range(0X8011192,"T",0X1,3);
	split_sreg_range(0X80111C2,"T",0X1,3);
	split_sreg_range(0X80111CE,"T",0X1,3);
	split_sreg_range(0X80111E4,"T",0X1,3);
	split_sreg_range(0X8011262,"T",0X1,3);
	split_sreg_range(0X8011264,"T",0X1,3);
	split_sreg_range(0X8011286,"T",0X1,3);
	split_sreg_range(0X8011292,"T",0X1,3);
	split_sreg_range(0X8011296,"T",0X1,3);
	split_sreg_range(0X80112D4,"T",0X1,3);
	split_sreg_range(0X80112DE,"T",0X1,3);
	split_sreg_range(0X80112F2,"T",0X1,3);
	split_sreg_range(0X80112FE,"T",0X1,3);
	split_sreg_range(0X8011300,"T",0X1,3);
	split_sreg_range(0X8011318,"T",0X1,3);
	split_sreg_range(0X8011330,"T",0X1,3);
	split_sreg_range(0X8011348,"T",0X1,3);
	split_sreg_range(0X8011350,"T",0X1,3);
	split_sreg_range(0X8011358,"T",0X1,3);
	split_sreg_range(0X8011370,"T",0X1,3);
	split_sreg_range(0X801137E,"T",0X1,3);
	split_sreg_range(0X8011380,"T",0X1,3);
	split_sreg_range(0X801138E,"T",0X1,3);
	split_sreg_range(0X80113A0,"T",0X1,3);
	split_sreg_range(0X80113CE,"T",0X1,3);
	split_sreg_range(0X8011418,"T",0X1,3);
	split_sreg_range(0X80115A2,"T",0X1,3);
	split_sreg_range(0X80117B4,"T",0X1,3);
	split_sreg_range(0X8011830,"T",0X1,3);
	split_sreg_range(0X80118C2,"T",0X1,3);
	split_sreg_range(0X80118D0,"T",0X1,3);
	split_sreg_range(0X8011972,"T",0X1,3);
	split_sreg_range(0X80119A0,"T",0X1,3);
	split_sreg_range(0X80119AA,"T",0X1,3);
	split_sreg_range(0X80119B4,"T",0X1,3);
	split_sreg_range(0X80119BE,"T",0X1,3);
	split_sreg_range(0X80119C8,"T",0X1,3);
	split_sreg_range(0X80119CA,"T",0X1,3);
	split_sreg_range(0X80119E0,"T",0X1,3);
	split_sreg_range(0X80119EA,"T",0X1,3);
	split_sreg_range(0X8011A90,"T",0X1,3);
	split_sreg_range(0X8011AF8,"T",0X1,3);
	split_sreg_range(0X8011B2E,"T",0X1,3);
	split_sreg_range(0X8011B38,"T",0X1,3);
	split_sreg_range(0X8011B4E,"T",0X1,3);
	split_sreg_range(0X8011B64,"T",0X1,3);
	split_sreg_range(0X8011B7A,"T",0X1,3);
	split_sreg_range(0X8011B82,"T",0X1,3);
	split_sreg_range(0X8011BB0,"T",0X1,3);
	split_sreg_range(0X8011BD2,"T",0X1,3);
	split_sreg_range(0X8011C06,"T",0X1,3);
	split_sreg_range(0X8011C16,"T",0X1,3);
	split_sreg_range(0X8011C3E,"T",0X1,3);
	split_sreg_range(0X8011C4A,"T",0X1,3);
	split_sreg_range(0X8011C6E,"T",0X1,3);
	split_sreg_range(0X8011C8E,"T",0X1,3);
	split_sreg_range(0X8011C98,"T",0X1,3);
	split_sreg_range(0X8011C9A,"T",0X1,3);
	split_sreg_range(0X8011CC0,"T",0X1,3);
	split_sreg_range(0X8011CCC,"T",0X1,3);
	split_sreg_range(0X8011CDC,"T",0X1,3);
	split_sreg_range(0X8011CDE,"T",0X1,3);
	split_sreg_range(0X8011CFE,"T",0X1,3);
	split_sreg_range(0X8011D0A,"T",0X1,3);
	split_sreg_range(0X8011D12,"T",0X1,3);
	split_sreg_range(0X8011D28,"T",0X1,3);
	split_sreg_range(0X8011D2E,"T",0X1,3);
	split_sreg_range(0X8011D50,"T",0X1,3);
	split_sreg_range(0X8011D56,"T",0X1,3);
	split_sreg_range(0X8011D58,"T",0X1,3);
	split_sreg_range(0X8011D96,"T",0X1,3);
	split_sreg_range(0X8011DA4,"T",0X1,3);
	split_sreg_range(0X8011E12,"T",0X1,3);
	split_sreg_range(0X8011E20,"T",0X1,3);
	split_sreg_range(0X8011E94,"T",0X1,3);
	split_sreg_range(0X8011EA4,"T",0X1,3);
	split_sreg_range(0X8011EBA,"T",0X1,3);
	split_sreg_range(0X8011EBE,"T",0X1,3);
	split_sreg_range(0X8011EC6,"T",0X1,3);
	split_sreg_range(0X8011ECE,"T",0X1,3);
	split_sreg_range(0X8011F04,"T",0X1,3);
	split_sreg_range(0X8011F1A,"T",0X1,3);
	split_sreg_range(0X8011F1E,"T",0X1,3);
	split_sreg_range(0X8011F26,"T",0X1,3);
	split_sreg_range(0X8011F2E,"T",0X1,3);
	split_sreg_range(0X8011F64,"T",0X1,3);
	split_sreg_range(0X8011F7A,"T",0X1,3);
	split_sreg_range(0X8011F7E,"T",0X1,3);
	split_sreg_range(0X8011F86,"T",0X1,3);
	split_sreg_range(0X8011F8E,"T",0X1,3);
	split_sreg_range(0X8011FC4,"T",0X1,3);
	split_sreg_range(0X801200A,"T",0X1,3);
	split_sreg_range(0X8012020,"T",0X1,3);
	split_sreg_range(0X8012024,"T",0X1,3);
	split_sreg_range(0X801202C,"T",0X1,3);
	split_sreg_range(0X8012034,"T",0X1,3);
	split_sreg_range(0X801206A,"T",0X1,3);
	split_sreg_range(0X801206C,"T",0X1,3);
	split_sreg_range(0X80120A6,"T",0X1,3);
	split_sreg_range(0X80120B0,"T",0X1,3);
	split_sreg_range(0X80120F0,"T",0X1,3);
	split_sreg_range(0X8012102,"T",0X1,3);
	split_sreg_range(0X8012112,"T",0X1,3);
	split_sreg_range(0X8012132,"T",0X1,3);
	split_sreg_range(0X801213C,"T",0X1,3);
	split_sreg_range(0X8012168,"T",0X1,3);
	split_sreg_range(0X80121CE,"T",0X1,3);
	split_sreg_range(0X80121D8,"T",0X1,3);
	split_sreg_range(0X80121E8,"T",0X1,3);
	split_sreg_range(0X8012238,"T",0X1,3);
	split_sreg_range(0X8012242,"T",0X1,3);
	split_sreg_range(0X8012252,"T",0X1,3);
	split_sreg_range(0X8012254,"T",0X1,3);
	split_sreg_range(0X8012258,"T",0X1,3);
	split_sreg_range(0X8012268,"T",0X1,3);
	split_sreg_range(0X801226C,"T",0X1,3);
	split_sreg_range(0X8012270,"T",0X1,3);
	split_sreg_range(0X80122BC,"T",0X1,3);
	split_sreg_range(0X80122BE,"T",0X1,3);
	split_sreg_range(0X80122D8,"T",0X1,3);
	split_sreg_range(0X80122EA,"T",0X1,3);
	split_sreg_range(0X80122EC,"T",0X1,3);
	split_sreg_range(0X8012310,"T",0X1,3);
	split_sreg_range(0X8012328,"T",0X1,3);
	split_sreg_range(0X801232E,"T",0X1,3);
	split_sreg_range(0X8012330,"T",0X1,3);
	split_sreg_range(0X8012370,"T",0X1,3);
	split_sreg_range(0X8012378,"T",0X1,3);
	split_sreg_range(0X8012398,"T",0X1,3);
	split_sreg_range(0X80123B0,"T",0X1,3);
	split_sreg_range(0X80123B6,"T",0X1,3);
	split_sreg_range(0X80123B8,"T",0X1,3);
	split_sreg_range(0X80123C8,"T",0X1,3);
	split_sreg_range(0X80123CA,"T",0X1,3);
	split_sreg_range(0X80123CC,"T",0X1,3);
	split_sreg_range(0X80123D0,"T",0X1,3);
	split_sreg_range(0X80123D4,"T",0X1,3);
	split_sreg_range(0X80123E6,"T",0X1,3);
	split_sreg_range(0X8012420,"T",0X1,3);
	split_sreg_range(0X8012454,"T",0X1,3);
	split_sreg_range(0X801245A,"T",0X1,3);
	split_sreg_range(0X8012482,"T",0X1,3);
	split_sreg_range(0X8012496,"T",0X1,3);
	split_sreg_range(0X801249E,"T",0X1,3);
	split_sreg_range(0X80124A4,"T",0X1,3);
	split_sreg_range(0X80124DC,"T",0X1,3);
	split_sreg_range(0X801254C,"T",0X1,3);
	split_sreg_range(0X8012550,"T",0X1,3);
	split_sreg_range(0X8012558,"T",0X1,3);
	split_sreg_range(0X801256A,"T",0X1,3);
	split_sreg_range(0X801256E,"T",0X1,3);
	split_sreg_range(0X8012572,"T",0X1,3);
	split_sreg_range(0X801259C,"T",0X1,3);
	split_sreg_range(0X80125A4,"T",0X1,3);
	split_sreg_range(0X80125B6,"T",0X1,3);
	split_sreg_range(0X80125BA,"T",0X1,3);
	split_sreg_range(0X80125BE,"T",0X1,3);
	split_sreg_range(0X80125C0,"T",0X1,3);
	split_sreg_range(0X80125C8,"T",0X1,3);
	split_sreg_range(0X80125CE,"T",0X1,3);
	split_sreg_range(0X80125E0,"T",0X1,3);
	split_sreg_range(0X80125E2,"T",0X1,3);
	split_sreg_range(0X80125E6,"T",0X1,3);
	split_sreg_range(0X8012606,"T",0X1,3);
	split_sreg_range(0X801260A,"T",0X1,3);
	split_sreg_range(0X801260E,"T",0X1,3);
	split_sreg_range(0X801261C,"T",0X1,3);
	split_sreg_range(0X8012624,"T",0X1,3);
	split_sreg_range(0X8012652,"T",0X1,3);
	split_sreg_range(0X8012658,"T",0X1,3);
	split_sreg_range(0X80126E8,"T",0X1,3);
	split_sreg_range(0X8012714,"T",0X1,3);
	split_sreg_range(0X801271A,"T",0X1,3);
	split_sreg_range(0X801273A,"T",0X1,3);
	split_sreg_range(0X8012792,"T",0X1,3);
	split_sreg_range(0X80127BE,"T",0X1,3);
	split_sreg_range(0X80127C4,"T",0X1,3);
	split_sreg_range(0X80127E2,"T",0X1,3);
	split_sreg_range(0X801283C,"T",0X1,3);
	split_sreg_range(0X8012842,"T",0X1,3);
	split_sreg_range(0X801284E,"T",0X1,3);
	split_sreg_range(0X801285A,"T",0X1,3);
	split_sreg_range(0X8012868,"T",0X1,3);
	split_sreg_range(0X801286A,"T",0X1,3);
	split_sreg_range(0X801286C,"T",0X1,3);
	split_sreg_range(0X8012884,"T",0X1,3);
	split_sreg_range(0X8012888,"T",0X1,3);
	split_sreg_range(0X8012896,"T",0X1,3);
	split_sreg_range(0X8012898,"T",0X1,3);
	split_sreg_range(0X80128B0,"T",0X1,3);
	split_sreg_range(0X80128BA,"T",0X1,3);
	split_sreg_range(0X80128BC,"T",0X1,3);
	split_sreg_range(0X80128BE,"T",0X1,3);
	split_sreg_range(0X80128D2,"T",0X1,3);
	split_sreg_range(0X80128DE,"T",0X1,3);
	split_sreg_range(0X80128EC,"T",0X1,3);
	split_sreg_range(0X80128EE,"T",0X1,3);
	split_sreg_range(0X80128F0,"T",0X1,3);
	split_sreg_range(0X8012916,"T",0X1,3);
	split_sreg_range(0X801291A,"T",0X1,3);
	split_sreg_range(0X8012928,"T",0X1,3);
	split_sreg_range(0X801292A,"T",0X1,3);
	split_sreg_range(0X801294C,"T",0X1,3);
	split_sreg_range(0X80129B0,"T",0X1,3);
	split_sreg_range(0X80129FC,"T",0X1,3);
	split_sreg_range(0X8012A10,"T",0X1,3);
	split_sreg_range(0X8012A1E,"T",0X1,3);
	split_sreg_range(0X8012A90,"T",0X1,3);
	split_sreg_range(0X8012A9E,"T",0X1,3);
	split_sreg_range(0X8012AC8,"T",0X1,3);
	split_sreg_range(0X8012AE2,"T",0X1,3);
	split_sreg_range(0X8012AEE,"T",0X1,3);
	split_sreg_range(0X8012AFC,"T",0X1,3);
	split_sreg_range(0X8012B28,"T",0X1,3);
	split_sreg_range(0X8012B2E,"T",0X1,3);
	split_sreg_range(0X8012B4E,"T",0X1,3);
	split_sreg_range(0X8012B54,"T",0X1,3);
	split_sreg_range(0X8012B64,"T",0X1,3);
	split_sreg_range(0X8012B72,"T",0X1,3);
	split_sreg_range(0X8012B96,"T",0X1,3);
	split_sreg_range(0X8012BBC,"T",0X1,3);
	split_sreg_range(0X8012BF0,"T",0X1,3);
	split_sreg_range(0X8012BFA,"T",0X1,3);
	split_sreg_range(0X8012C08,"T",0X1,3);
	split_sreg_range(0X8012C3E,"T",0X1,3);
	split_sreg_range(0X8012C4A,"T",0X1,3);
	split_sreg_range(0X8012C58,"T",0X1,3);
	split_sreg_range(0X8012C76,"T",0X1,3);
	split_sreg_range(0X8012C86,"T",0X1,3);
	split_sreg_range(0X8012CB2,"T",0X1,3);
	split_sreg_range(0X8012CD0,"T",0X1,3);
	split_sreg_range(0X8012CDC,"T",0X1,3);
	split_sreg_range(0X8012D24,"T",0X1,3);
	split_sreg_range(0X8012D84,"T",0X1,3);
	split_sreg_range(0X8012D9E,"T",0X1,3);
	split_sreg_range(0X8012DB0,"T",0X1,3);
	split_sreg_range(0X8012DC8,"T",0X1,3);
	split_sreg_range(0X8012DD4,"T",0X1,3);
	split_sreg_range(0X8012DEC,"T",0X1,3);
	split_sreg_range(0X8012E0A,"T",0X1,3);
	split_sreg_range(0X8012E0E,"T",0X1,3);
	split_sreg_range(0X8012E26,"T",0X1,3);
	split_sreg_range(0X8012E40,"T",0X1,3);
	split_sreg_range(0X8012E56,"T",0X1,3);
	split_sreg_range(0X8012E66,"T",0X1,3);
	split_sreg_range(0X8012E72,"T",0X1,3);
	split_sreg_range(0X8012E96,"T",0X1,3);
	split_sreg_range(0X8012E9A,"T",0X1,3);
	split_sreg_range(0X8012EAE,"T",0X1,3);
	split_sreg_range(0X8012EB2,"T",0X1,3);
	split_sreg_range(0X8012ED2,"T",0X1,3);
	split_sreg_range(0X8012EE6,"T",0X1,3);
	split_sreg_range(0X8012EEA,"T",0X1,3);
	split_sreg_range(0X8012EFA,"T",0X1,3);
	split_sreg_range(0X8012F04,"T",0X1,3);
	split_sreg_range(0X8012F22,"T",0X1,3);
	split_sreg_range(0X8012F3A,"T",0X1,3);
	split_sreg_range(0X8012F46,"T",0X1,3);
	split_sreg_range(0X8012F5A,"T",0X1,3);
	split_sreg_range(0X8012F8E,"T",0X1,3);
	split_sreg_range(0X8012FA8,"T",0X1,3);
	split_sreg_range(0X8012FB2,"T",0X1,3);
	split_sreg_range(0X8012FCA,"T",0X1,3);
	split_sreg_range(0X8012FD0,"T",0X1,3);
	split_sreg_range(0X8012FE0,"T",0X1,3);
	split_sreg_range(0X8012FFC,"T",0X1,3);
	split_sreg_range(0X8013026,"T",0X1,3);
	split_sreg_range(0X8013042,"T",0X1,3);
	split_sreg_range(0X8013072,"T",0X1,3);
	split_sreg_range(0X801307E,"T",0X1,3);
	split_sreg_range(0X8013082,"T",0X1,3);
	split_sreg_range(0X80130A4,"T",0X1,3);
	split_sreg_range(0X80130B8,"T",0X1,3);
	split_sreg_range(0X80130C8,"T",0X1,3);
	split_sreg_range(0X80130CA,"T",0X1,3);
	split_sreg_range(0X80130E0,"T",0X1,3);
	split_sreg_range(0X80130EC,"T",0X1,3);
	split_sreg_range(0X80130F0,"T",0X1,3);
	split_sreg_range(0X8013126,"T",0X1,3);
	split_sreg_range(0X8013134,"T",0X1,3);
	split_sreg_range(0X8013142,"T",0X1,3);
	split_sreg_range(0X801317C,"T",0X1,3);
	split_sreg_range(0X801318E,"T",0X1,3);
	split_sreg_range(0X80131A0,"T",0X1,3);
	split_sreg_range(0X80131AE,"T",0X1,3);
	split_sreg_range(0X80131CC,"T",0X1,3);
	split_sreg_range(0X80131D2,"T",0X1,3);
	split_sreg_range(0X80131F6,"T",0X1,3);
	split_sreg_range(0X80131FC,"T",0X1,3);
	split_sreg_range(0X8013214,"T",0X1,3);
	split_sreg_range(0X801322C,"T",0X1,3);
	split_sreg_range(0X801322E,"T",0X1,3);
	split_sreg_range(0X8013232,"T",0X1,3);
	split_sreg_range(0X8013246,"T",0X1,3);
	split_sreg_range(0X801325E,"T",0X1,3);
	split_sreg_range(0X8013260,"T",0X1,3);
	split_sreg_range(0X8013264,"T",0X1,3);
	split_sreg_range(0X801327E,"T",0X1,3);
	split_sreg_range(0X8013284,"T",0X1,3);
	split_sreg_range(0X8013296,"T",0X1,3);
	split_sreg_range(0X80132A8,"T",0X1,3);
	split_sreg_range(0X80132C0,"T",0X1,3);
	split_sreg_range(0X80132C2,"T",0X1,3);
	split_sreg_range(0X80132C6,"T",0X1,3);
	split_sreg_range(0X80132DA,"T",0X1,3);
	split_sreg_range(0X80132FA,"T",0X1,3);
	split_sreg_range(0X8013300,"T",0X1,3);
	split_sreg_range(0X801330E,"T",0X1,3);
	split_sreg_range(0X801331C,"T",0X1,3);
	split_sreg_range(0X8013320,"T",0X1,3);
	split_sreg_range(0X801332C,"T",0X1,3);
	split_sreg_range(0X8013336,"T",0X1,3);
	split_sreg_range(0X8013350,"T",0X1,3);
	split_sreg_range(0X8013356,"T",0X1,3);
	split_sreg_range(0X8013360,"T",0X1,3);
	split_sreg_range(0X8013364,"T",0X1,3);
	split_sreg_range(0X8013370,"T",0X1,3);
	split_sreg_range(0X8013380,"T",0X1,3);
	split_sreg_range(0X8013384,"T",0X1,3);
	split_sreg_range(0X801338A,"T",0X1,3);
	split_sreg_range(0X8013390,"T",0X1,3);
	split_sreg_range(0X8013398,"T",0X1,3);
	split_sreg_range(0X80133AE,"T",0X1,3);
	split_sreg_range(0X80133B2,"T",0X1,3);
	split_sreg_range(0X80133B8,"T",0X1,3);
	split_sreg_range(0X80133BA,"T",0X1,3);
	split_sreg_range(0X80133C2,"T",0X1,3);
	split_sreg_range(0X80133FA,"T",0X1,3);
	split_sreg_range(0X8013404,"T",0X1,3);
	split_sreg_range(0X8013418,"T",0X1,3);
	split_sreg_range(0X8013428,"T",0X1,3);
	split_sreg_range(0X801344C,"T",0X1,3);
	split_sreg_range(0X8013454,"T",0X1,3);
	split_sreg_range(0X801346A,"T",0X1,3);
	split_sreg_range(0X80134B0,"T",0X1,3);
	split_sreg_range(0X80134DE,"T",0X1,3);
	split_sreg_range(0X80134F4,"T",0X1,3);
	split_sreg_range(0X80134F8,"T",0X1,3);
	split_sreg_range(0X8013502,"T",0X1,3);
	split_sreg_range(0X8013542,"T",0X1,3);
	split_sreg_range(0X8013544,"T",0X1,3);
	split_sreg_range(0X8013546,"T",0X1,3);
	split_sreg_range(0X8013548,"T",0X1,3);
	split_sreg_range(0X8013552,"T",0X1,3);
	split_sreg_range(0X8013560,"T",0X1,3);
	split_sreg_range(0X8013568,"T",0X1,3);
	split_sreg_range(0X8013570,"T",0X1,3);
	split_sreg_range(0X80135BA,"T",0X1,3);
	split_sreg_range(0X80135C8,"T",0X1,3);
	split_sreg_range(0X80135CE,"T",0X1,3);
	split_sreg_range(0X80135D4,"T",0X1,3);
	split_sreg_range(0X80135D8,"T",0X1,3);
	split_sreg_range(0X80135FC,"T",0X1,3);
	split_sreg_range(0X801362C,"T",0X1,3);
	split_sreg_range(0X8013668,"T",0X1,3);
	split_sreg_range(0X8013692,"T",0X1,3);
	split_sreg_range(0X80136A0,"T",0X1,3);
	split_sreg_range(0X80136C8,"T",0X1,3);
	split_sreg_range(0X80136F2,"T",0X1,3);
	split_sreg_range(0X8013722,"T",0X1,3);
	split_sreg_range(0X8013738,"T",0X1,3);
	split_sreg_range(0X8013740,"T",0X1,3);
	split_sreg_range(0X8013756,"T",0X1,3);
	split_sreg_range(0X801376C,"T",0X1,3);
	split_sreg_range(0X8013776,"T",0X1,3);
	split_sreg_range(0X80137CA,"T",0X1,3);
	split_sreg_range(0X801384E,"T",0X1,3);
	split_sreg_range(0X8013870,"T",0X1,3);
	split_sreg_range(0X80138A8,"T",0X1,3);
	split_sreg_range(0X80138FA,"T",0X1,3);
	split_sreg_range(0X80138FE,"T",0X1,3);
	split_sreg_range(0X8013902,"T",0X1,3);
	split_sreg_range(0X8013904,"T",0X1,3);
	split_sreg_range(0X80139FC,"T",0X1,3);
	split_sreg_range(0X8013A50,"T",0X1,3);
	split_sreg_range(0X8013A74,"T",0X1,3);
	split_sreg_range(0X8013AEE,"T",0X1,3);
	split_sreg_range(0X8013B4C,"T",0X1,3);
	split_sreg_range(0X8013B66,"T",0X1,3);
	split_sreg_range(0X8013B82,"T",0X1,3);
	split_sreg_range(0X8013BB2,"T",0X1,3);
	split_sreg_range(0X8013BD2,"T",0X1,3);
	split_sreg_range(0X8013BF8,"T",0X1,3);
	split_sreg_range(0X8013C24,"T",0X1,3);
	split_sreg_range(0X8013CAE,"T",0X1,3);
	split_sreg_range(0X8013CE4,"T",0X1,3);
	split_sreg_range(0X8013CF4,"T",0X1,3);
	split_sreg_range(0X8013D12,"T",0X1,3);
	split_sreg_range(0X8013D22,"T",0X1,3);
	split_sreg_range(0X8013D30,"T",0X1,3);
	split_sreg_range(0X8013D5A,"T",0X1,3);
	split_sreg_range(0X8013DA0,"T",0X1,3);
	split_sreg_range(0X8013DCE,"T",0X1,3);
	split_sreg_range(0X8013E0C,"T",0X1,3);
	split_sreg_range(0X8013E1E,"T",0X1,3);
	split_sreg_range(0X8013E90,"T",0X1,3);
	split_sreg_range(0X8013F18,"T",0X1,3);
	split_sreg_range(0X8013F4A,"T",0X1,3);
	split_sreg_range(0X8013F54,"T",0X1,3);
	split_sreg_range(0X8013F7A,"T",0X1,3);
	split_sreg_range(0X8013F82,"T",0X1,3);
	split_sreg_range(0X8013F94,"T",0X1,3);
	split_sreg_range(0X8013FB0,"T",0X1,3);
	split_sreg_range(0X8013FB6,"T",0X1,3);
	split_sreg_range(0X8013FE0,"T",0X1,3);
	split_sreg_range(0X8013FEA,"T",0X1,3);
	split_sreg_range(0X8013FF2,"T",0X1,3);
	split_sreg_range(0X8013FFA,"T",0X1,3);
	split_sreg_range(0X8014002,"T",0X1,3);
	split_sreg_range(0X801400A,"T",0X1,3);
	split_sreg_range(0X8014036,"T",0X1,3);
	split_sreg_range(0X8014062,"T",0X1,3);
	split_sreg_range(0X8014098,"T",0X1,3);
	split_sreg_range(0X80140CE,"T",0X1,3);
	split_sreg_range(0X80140D0,"T",0X1,3);
	split_sreg_range(0X80140DE,"T",0X1,3);
	split_sreg_range(0X8014110,"T",0X1,3);
	split_sreg_range(0X8014118,"T",0X1,3);
	split_sreg_range(0X8014128,"T",0X1,3);
	split_sreg_range(0X8014134,"T",0X1,3);
	split_sreg_range(0X8014144,"T",0X1,3);
	split_sreg_range(0X8014168,"T",0X1,3);
	split_sreg_range(0X801418A,"T",0X1,3);
	split_sreg_range(0X801419A,"T",0X1,3);
	split_sreg_range(0X801424E,"T",0X1,3);
	split_sreg_range(0X8014260,"T",0X1,3);
	split_sreg_range(0X80142FC,"T",0X1,3);
	split_sreg_range(0X8014354,"T",0X1,3);
	split_sreg_range(0X801435E,"T",0X1,3);
	split_sreg_range(0X8014368,"T",0X1,3);
	split_sreg_range(0X801436C,"T",0X1,3);
	split_sreg_range(0X801438C,"T",0X1,3);
	split_sreg_range(0X801439E,"T",0X1,3);
	split_sreg_range(0X80143DC,"T",0X1,3);
	split_sreg_range(0X80143EE,"T",0X1,3);
	split_sreg_range(0X80143F6,"T",0X1,3);
	split_sreg_range(0X8014410,"T",0X1,3);
	split_sreg_range(0X8014428,"T",0X1,3);
	split_sreg_range(0X8014440,"T",0X1,3);
	split_sreg_range(0X8014476,"T",0X1,3);
	split_sreg_range(0X8014486,"T",0X1,3);
	split_sreg_range(0X8014494,"T",0X1,3);
	split_sreg_range(0X80144AA,"T",0X1,3);
	split_sreg_range(0X80144C0,"T",0X1,3);
	split_sreg_range(0X80144CE,"T",0X1,3);
	split_sreg_range(0X80144E0,"T",0X1,3);
	split_sreg_range(0X80144EA,"T",0X1,3);
	split_sreg_range(0X8014510,"T",0X1,3);
	split_sreg_range(0X8014520,"T",0X1,3);
	split_sreg_range(0X801453E,"T",0X1,3);
	split_sreg_range(0X8014546,"T",0X1,3);
	split_sreg_range(0X8014562,"T",0X1,3);
	split_sreg_range(0X8014578,"T",0X1,3);
	split_sreg_range(0X8014586,"T",0X1,3);
	split_sreg_range(0X8014590,"T",0X1,3);
	split_sreg_range(0X8014592,"T",0X1,3);
	split_sreg_range(0X801459E,"T",0X1,3);
	split_sreg_range(0X80145C6,"T",0X1,3);
	split_sreg_range(0X80145DE,"T",0X1,3);
	split_sreg_range(0X80145EA,"T",0X1,3);
	split_sreg_range(0X80145F4,"T",0X1,3);
	split_sreg_range(0X80145FE,"T",0X1,3);
	split_sreg_range(0X8014620,"T",0X1,3);
	split_sreg_range(0X8014638,"T",0X1,3);
	split_sreg_range(0X80146B0,"T",0X1,3);
	split_sreg_range(0X80146B2,"T",0X1,3);
	split_sreg_range(0X80146E6,"T",0X1,3);
	split_sreg_range(0X80146FE,"T",0X1,3);
	split_sreg_range(0X8014764,"T",0X1,3);
	split_sreg_range(0X801478A,"T",0X1,3);
	split_sreg_range(0X80149D2,"T",0X1,3);
	split_sreg_range(0X80149E6,"T",0X1,3);
	split_sreg_range(0X8014A64,"T",0X1,3);
	split_sreg_range(0X8014A86,"T",0X1,3);
	split_sreg_range(0X8014AAE,"T",0X1,3);
	split_sreg_range(0X8014AC6,"T",0X1,3);
	split_sreg_range(0X8014B22,"T",0X1,3);
	split_sreg_range(0X8014BCC,"T",0X1,3);
	split_sreg_range(0X8014CB8,"T",0X1,3);
	split_sreg_range(0X8014CDC,"T",0X1,3);
	split_sreg_range(0X8014CF2,"T",0X1,3);
	split_sreg_range(0X8014D14,"T",0X1,3);
	split_sreg_range(0X8014D16,"T",0X1,3);
	split_sreg_range(0X8014D24,"T",0X1,3);
	split_sreg_range(0X8014D48,"T",0X1,3);
	split_sreg_range(0X8014D50,"T",0X1,3);
	split_sreg_range(0X8014D5A,"T",0X1,3);
	split_sreg_range(0X8014D62,"T",0X1,3);
	split_sreg_range(0X8014D72,"T",0X1,3);
	split_sreg_range(0X8014D8C,"T",0X1,3);
	split_sreg_range(0X8014DD0,"T",0X1,3);
	split_sreg_range(0X8014DD8,"T",0X1,3);
	split_sreg_range(0X8014E08,"T",0X1,3);
	split_sreg_range(0X8014E1C,"T",0X1,3);
	split_sreg_range(0X8014E22,"T",0X1,3);
	split_sreg_range(0X8014E3C,"T",0X1,3);
	split_sreg_range(0X8014E4C,"T",0X1,3);
	split_sreg_range(0X8014E60,"T",0X1,3);
	split_sreg_range(0X8014EB8,"T",0X1,3);
	split_sreg_range(0X8014ED0,"T",0X1,3);
	split_sreg_range(0X8014EDC,"T",0X1,3);
	split_sreg_range(0X8014EF0,"T",0X1,3);
	split_sreg_range(0X8014F1A,"T",0X1,3);
	split_sreg_range(0X8014F48,"T",0X1,3);
	split_sreg_range(0X8014F60,"T",0X1,3);
	split_sreg_range(0X8014F78,"T",0X1,3);
	split_sreg_range(0X8014F8C,"T",0X1,3);
	split_sreg_range(0X8014F9C,"T",0X1,3);
	split_sreg_range(0X8014FB4,"T",0X1,3);
	split_sreg_range(0X80150BA,"T",0X1,3);
	split_sreg_range(0X80150D4,"T",0X1,3);
	split_sreg_range(0X80150E8,"T",0X1,3);
	split_sreg_range(0X80150FA,"T",0X1,3);
	split_sreg_range(0X801514C,"T",0X1,3);
	split_sreg_range(0X801515E,"T",0X1,3);
	split_sreg_range(0X8015170,"T",0X1,3);
	split_sreg_range(0X801517C,"T",0X1,3);
	split_sreg_range(0X8015196,"T",0X1,3);
	split_sreg_range(0X80151A4,"T",0X1,3);
	split_sreg_range(0X80151C6,"T",0X1,3);
	split_sreg_range(0X80151CE,"T",0X1,3);
	split_sreg_range(0X8015264,"T",0X1,3);
	split_sreg_range(0X8015296,"T",0X1,3);
	split_sreg_range(0X80152A8,"T",0X1,3);
	split_sreg_range(0X80152B2,"T",0X1,3);
	split_sreg_range(0X80152C4,"T",0X1,3);
	split_sreg_range(0X80152EA,"T",0X1,3);
	split_sreg_range(0X8015300,"T",0X1,3);
	split_sreg_range(0X8015306,"T",0X1,3);
	split_sreg_range(0X801530C,"T",0X1,3);
	split_sreg_range(0X801531E,"T",0X1,3);
	split_sreg_range(0X8015346,"T",0X1,3);
	split_sreg_range(0X801534C,"T",0X1,3);
	split_sreg_range(0X801536C,"T",0X1,3);
	split_sreg_range(0X8015394,"T",0X1,3);
	split_sreg_range(0X80153A6,"T",0X1,3);
	split_sreg_range(0X80153AA,"T",0X1,3);
	split_sreg_range(0X80153C2,"T",0X1,3);
	split_sreg_range(0X80153D6,"T",0X1,3);
	split_sreg_range(0X80153EC,"T",0X1,3);
	split_sreg_range(0X8015470,"T",0X1,3);
	split_sreg_range(0X8015486,"T",0X1,3);
	split_sreg_range(0X80154AA,"T",0X1,3);
	split_sreg_range(0X80154B4,"T",0X1,3);
	split_sreg_range(0X80154E6,"T",0X1,3);
	split_sreg_range(0X8015500,"T",0,3);
	split_sreg_range(0X8015504,"T",0X1,3);
	split_sreg_range(0X801551E,"T",0X1,3);
	split_sreg_range(0X8015540,"T",0X1,3);
	split_sreg_range(0X801555C,"T",0X1,3);
	split_sreg_range(0X8015582,"T",0X1,3);
	split_sreg_range(0X8015588,"T",0X1,3);
	split_sreg_range(0X801558C,"T",0X1,3);
	split_sreg_range(0X80155AC,"T",0X1,3);
	split_sreg_range(0X80155DC,"T",0X1,3);
	split_sreg_range(0X80155E8,"T",0X1,3);
	split_sreg_range(0X8015608,"T",0X1,3);
	split_sreg_range(0X801561A,"T",0X1,3);
	split_sreg_range(0X801561E,"T",0X1,3);
	split_sreg_range(0X8015636,"T",0X1,3);
	split_sreg_range(0X801564A,"T",0X1,3);
	split_sreg_range(0X8015654,"T",0X1,3);
	split_sreg_range(0X801566C,"T",0X1,3);
	split_sreg_range(0X801569A,"T",0X1,3);
	split_sreg_range(0X8015796,"T",0X1,3);
	split_sreg_range(0X80157D0,"T",0X1,3);
	split_sreg_range(0X80157F2,"T",0X1,3);
	split_sreg_range(0X8015802,"T",0X1,3);
	split_sreg_range(0X801581A,"T",0X1,3);
	split_sreg_range(0X8015828,"T",0X1,3);
	split_sreg_range(0X8015838,"T",0X1,3);
	split_sreg_range(0X8015848,"T",0X1,3);
	split_sreg_range(0X8015860,"T",0X1,3);
	split_sreg_range(0X80158B8,"T",0X1,3);
	split_sreg_range(0X80158DE,"T",0X1,3);
	split_sreg_range(0X8015902,"T",0X1,3);
	split_sreg_range(0X801590C,"T",0X1,3);
	split_sreg_range(0X8015946,"T",0X1,3);
	split_sreg_range(0X801596E,"T",0X1,3);
	split_sreg_range(0X801598E,"T",0X1,3);
	split_sreg_range(0X801599A,"T",0X1,3);
	split_sreg_range(0X80159A4,"T",0X1,3);
	split_sreg_range(0X80159AA,"T",0X1,3);
	split_sreg_range(0X80159BA,"T",0X1,3);
	split_sreg_range(0X80159C0,"T",0X1,3);
	split_sreg_range(0X80159DA,"T",0X1,3);
	split_sreg_range(0X80159F0,"T",0X1,3);
	split_sreg_range(0X8015A0C,"T",0X1,3);
	split_sreg_range(0X8015A34,"T",0X1,3);
	split_sreg_range(0X8015A64,"T",0X1,3);
	split_sreg_range(0X8015A72,"T",0X1,3);
	split_sreg_range(0X8015ACC,"T",0X1,3);
	split_sreg_range(0X8015AE0,"T",0X1,3);
	split_sreg_range(0X8015AE8,"T",0X1,3);
	split_sreg_range(0X8015B0A,"T",0X1,3);
	split_sreg_range(0X8015B1C,"T",0X1,3);
	split_sreg_range(0X8015B28,"T",0X1,3);
	split_sreg_range(0X8015B34,"T",0X1,3);
	split_sreg_range(0X8015B4C,"T",0X1,3);
	split_sreg_range(0X8015C58,"T",0X1,3);
	split_sreg_range(0X8015C70,"T",0X1,3);
	split_sreg_range(0X8015C96,"T",0X1,3);
	split_sreg_range(0X8015CAE,"T",0X1,3);
	split_sreg_range(0X8015CBA,"T",0X1,3);
	split_sreg_range(0X8015CD0,"T",0X1,3);
	split_sreg_range(0X8015CEC,"T",0X1,3);
	split_sreg_range(0X8015D08,"T",0X1,3);
	split_sreg_range(0X8015D1E,"T",0X1,3);
	split_sreg_range(0X8015D32,"T",0X1,3);
	split_sreg_range(0X8015D48,"T",0X1,3);
	split_sreg_range(0X8015D76,"T",0X1,3);
	split_sreg_range(0X8015D78,"T",0X1,3);
	split_sreg_range(0X8015D9C,"T",0X1,3);
	split_sreg_range(0X8015DA0,"T",0X1,3);
	split_sreg_range(0X8015DB8,"T",0X1,3);
	split_sreg_range(0X8015DCA,"T",0X1,3);
	split_sreg_range(0X8015DCE,"T",0X1,3);
	split_sreg_range(0X8015DDE,"T",0X1,3);
	split_sreg_range(0X8015DF2,"T",0X1,3);
	split_sreg_range(0X8015E08,"T",0X1,3);
	split_sreg_range(0X8015E9C,"T",0X1,3);
	split_sreg_range(0X8015EB0,"T",0X1,3);
	split_sreg_range(0X8015ED0,"T",0X1,3);
	split_sreg_range(0X8015EEE,"T",0X1,3);
	split_sreg_range(0X8015F0A,"T",0X1,3);
	split_sreg_range(0X8015F24,"T",0X1,3);
	split_sreg_range(0X8015F48,"T",0X1,3);
	split_sreg_range(0X8015F4E,"T",0X1,3);
	split_sreg_range(0X8015F52,"T",0X1,3);
	split_sreg_range(0X8015F72,"T",0X1,3);
	split_sreg_range(0X8015F96,"T",0X1,3);
	split_sreg_range(0X8015FA0,"T",0X1,3);
	split_sreg_range(0X8015FB8,"T",0X1,3);
	split_sreg_range(0X8015FCA,"T",0X1,3);
	split_sreg_range(0X8015FCE,"T",0X1,3);
	split_sreg_range(0X8015FDE,"T",0X1,3);
	split_sreg_range(0X8015FF2,"T",0X1,3);
	split_sreg_range(0X8016002,"T",0X1,3);
	split_sreg_range(0X8016018,"T",0X1,3);
	split_sreg_range(0X8016026,"T",0X1,3);
	split_sreg_range(0X8016034,"T",0X1,3);
	split_sreg_range(0X8016082,"T",0X1,3);
	split_sreg_range(0X801609A,"T",0X1,3);
	split_sreg_range(0X80160AA,"T",0X1,3);
	split_sreg_range(0X80160D0,"T",0X1,3);
	split_sreg_range(0X80160D6,"T",0X1,3);
	split_sreg_range(0X80160E2,"T",0X1,3);
	split_sreg_range(0X80160F2,"T",0X1,3);
	split_sreg_range(0X8016102,"T",0X1,3);
	split_sreg_range(0X801612C,"T",0X1,3);
	split_sreg_range(0X8016138,"T",0X1,3);
	split_sreg_range(0X8016150,"T",0X1,3);
	split_sreg_range(0X8016166,"T",0X1,3);
	split_sreg_range(0X80161A4,"T",0X1,3);
	split_sreg_range(0X80161AE,"T",0X1,3);
	split_sreg_range(0X80161C2,"T",0X1,3);
	split_sreg_range(0X80161F6,"T",0X1,3);
	split_sreg_range(0X80161FC,"T",0X1,3);
	split_sreg_range(0X801620E,"T",0X1,3);
	split_sreg_range(0X8016222,"T",0X1,3);
	split_sreg_range(0X8016238,"T",0X1,3);
	split_sreg_range(0X1FFFF700,"T",0,3);
	split_sreg_range(0X40000000,"T",0,3);
	split_sreg_range(0X40010000,"T",0,3);
	split_sreg_range(0X40020000,"T",0,3);
	split_sreg_range(0X42200000,"T",0,3);
	split_sreg_range(0X42420000,"T",0,3);
	split_sreg_range(0XA0001020,"T",0,3);
	split_sreg_range(0X8008000,"DS",0X4,3);
	split_sreg_range(0X8015500,"DS",0X4,3);
	split_sreg_range(0X1FFFF700,"DS",0X4,3);
	split_sreg_range(0X40000000,"DS",0X4,3);
	split_sreg_range(0X40010000,"DS",0X4,3);
	split_sreg_range(0X40020000,"DS",0X4,3);
	split_sreg_range(0X42200000,"DS",0X4,3);
	split_sreg_range(0X42420000,"DS",0X4,3);
	split_sreg_range(0XA0001020,"DS",0X4,3);
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
	Bytes_1();
	Bytes_2();
        end_type_updating(UTP_STRUCT);
}

// End of file.
