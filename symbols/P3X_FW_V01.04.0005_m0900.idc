//
// +-------------------------------------------------------------------------+
// |   This file has been generated by The Interactive Disassembler (IDA)    |
// |           Copyright (c) 2017 Hex-Rays, <support@hex-rays.com>           |
// +-------------------------------------------------------------------------+
//
//
//      This file should be used in the following way:
//         - reload executable into IDA with using switch -c
//         - use File, Load IDC file and load this file.
//
//      NOTE: This file doesn't contain all information from the database.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
  // set 'loading idc file' mode
  set_inf_attr(INF_GENFLAGS, INFFL_LOADIDC|get_inf_attr(INF_GENFLAGS));
  GenInfo();            // various settings
  Segments();           // segmentation
  Enums();              // enumerations
  Structures();         // structure types
  ApplyStrucTInfos();   // structure type infos
  Patches();            // manual patches
  SegRegs();            // segment register values
  Bytes();              // individual bytes (code,data)
  Functions();          // function definitions
  // clear 'loading idc file' mode
  set_inf_attr(INF_GENFLAGS, ~INFFL_LOADIDC&get_inf_attr(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        delete_all_segments();    // purge database
	set_processor_type("ARM", SETPROC_USER);
	set_inf_attr(INF_COMPILER, 6);
	set_inf_attr(INF_STRLIT_BREAK, 0xA);
	set_flag(INF_CMTFLAG, SW_ALLCMT, 0);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_VOID, 0);
	set_inf_attr(INF_XREFNUM, 2);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_AUTO, 1);
	set_inf_attr(INF_INDENT, 16);
	set_inf_attr(INF_COMMENT, 40);
	set_inf_attr(INF_MAXREF, 0x10);
	add_default_til("armv12");
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	set_selector(0X1,0);
	set_selector(0X2,0);
	set_selector(0X3,0);
	set_selector(0X4,0);
	set_selector(0X5,0);
	set_selector(0X6,0);
	set_selector(0X7,0);
	set_selector(0X8,0);
	set_selector(0X9,0);
	set_selector(0XA,0);
	;
	add_segm_ex(0X8008000,0X8015500,0X3,1,8,2,ADDSEG_NOSREG);
	SegRename(0X8008000,".text");
	SegClass (0X8008000,"CODE");
	SegDefReg(0x8008000,"T",0x0);
	SegDefReg(0x8008000,"DS",0x4);
	set_segm_type(0X8008000,2);
	add_segm_ex(0X8015500,0X8018BB8,0X4,1,8,2,ADDSEG_NOSREG);
	SegRename(0X8015500,".data");
	SegClass (0X8015500,"DATA");
	SegDefReg(0x8015500,"T",0x0);
	SegDefReg(0x8015500,"DS",0x4);
	set_segm_type(0X8015500,3);
	add_segm_ex(0X1FFFF700,0X20005100,0X5,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X1FFFF700,".bss");
	SegClass (0X1FFFF700,"BSS");
	SegDefReg(0x1FFFF700,"T",0x0);
	SegDefReg(0x1FFFF700,"DS",0x4);
	set_segm_type(0X1FFFF700,9);
	add_segm_ex(0X40000000,0X40006700,0XA,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X40000000,".bss2");
	SegClass (0X40000000,"BSS");
	SegDefReg(0x40000000,"T",0x0);
	SegDefReg(0x40000000,"DS",0x4);
	set_segm_type(0X40000000,9);
	add_segm_ex(0X40010000,0X40015500,0X9,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X40010000,".bss3");
	SegClass (0X40010000,"BSS");
	SegDefReg(0x40010000,"T",0x0);
	SegDefReg(0x40010000,"DS",0x4);
	set_segm_type(0X40010000,9);
	add_segm_ex(0X40020000,0X40022200,0X8,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X40020000,".bss4");
	SegClass (0X40020000,"BSS");
	SegDefReg(0x40020000,"T",0x0);
	SegDefReg(0x40020000,"DS",0x4);
	set_segm_type(0X40020000,9);
	add_segm_ex(0X42200000,0X42200100,0X7,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X42200000,".bss5");
	SegClass (0X42200000,"BSS");
	SegDefReg(0x42200000,"T",0x0);
	SegDefReg(0x42200000,"DS",0x4);
	set_segm_type(0X42200000,9);
	add_segm_ex(0X42420000,0X42420500,0X6,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X42420000,".bss6");
	SegClass (0X42420000,"BSS");
	SegDefReg(0x42420000,"T",0x0);
	SegDefReg(0x42420000,"DS",0x4);
	set_segm_type(0X42420000,9);
	add_segm_ex(0XA0001020,0XA0001028,0X1,1,5,2,ADDSEG_NOSREG);
	SegRename(0XA0001020,"EXIDX");
	SegClass (0XA0001020,"DATA");
	SegDefReg(0xA0001020,"T",0x0);
	SegDefReg(0xA0001020,"DS",0x4);
	set_segm_type(0XA0001020,3);
	set_inf_attr(INF_LOW_OFF, 0x8008000);
	set_inf_attr(INF_HIGH_OFF, 0x42420500);
}

static Enums_0(id) {

	id = add_enum(-1,"BoardVersion",0x1100000);
	add_enum_member(id,"BOARD_VER_0",	0,	-1);
	add_enum_member(id,"BOARD_VER_1",	0X1,	-1);
	add_enum_member(id,"BOARD_VER_AD_2",	0X2,	-1);
	add_enum_member(id,"BOARD_VER_3",	0X3,	-1);
	add_enum_member(id,"BOARD_VER_AD_4",	0X4,	-1);
	add_enum_member(id,"BOARD_VER_AD_5",	0X5,	-1);
	add_enum_member(id,"BOARD_VER_AR_6",	0X6,	-1);
	add_enum_member(id,"BOARD_VER_AR_7",	0X7,	-1);
	id = add_enum(-1,"SPI_AD9363_REG_DEFINES",0x1100000);
	add_enum_member(id,"AD9363_REG_SPI_CONF",	0,	-1);
	add_enum_member(id,"AD9363_REG_MULTICHIP_SYNC_AND_TX_MON_CTRL",	0X1,	-1);
	add_enum_member(id,"AD9363_REG_TX_ENABLE_FILTER_CTRL",	0X2,	-1);
	add_enum_member(id,"AD9363_REG_RX_ENABLE_FILTER_CTRL",	0X3,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_SELECT",	0X4,	-1);
	add_enum_member(id,"AD9363_REG_RFPLL_DIVIDERS",	0X5,	-1);
	add_enum_member(id,"AD9363_REG_RX_CLOCK_DATA_DELAY",	0X6,	-1);
	add_enum_member(id,"AD9363_REG_TX_CLOCK_DATA_DELAY",	0X7,	-1);
	add_enum_member(id,"AD9363_REG_CLOCK_ENABLE",	0X9,	-1);
	add_enum_member(id,"AD9363_REG_BBPLL",	0XA,	-1);
	add_enum_member(id,"AD9363_REG_TEMP_OFFSET",	0XB,	-1);
	add_enum_member(id,"AD9363_REG_START_TEMP_READING",	0XC,	-1);
	add_enum_member(id,"AD9363_REG_TEMP_SENSE2",	0XD,	-1);
	add_enum_member(id,"AD9363_REG_TEMPERATURE",	0XE,	-1);
	add_enum_member(id,"AD9363_REG_TEMP_SENSOR_CONFIG",	0XF,	-1);
	add_enum_member(id,"AD9363_REG_PARALLEL_PORT_CONF_1",	0X10,	-1);
	add_enum_member(id,"AD9363_REG_PARALLEL_PORT_CONF_2",	0X11,	-1);
	add_enum_member(id,"AD9363_REG_PARALLEL_PORT_CONF_3",	0X12,	-1);
	add_enum_member(id,"AD9363_REG_ENSM_MODE",	0X13,	-1);
	add_enum_member(id,"AD9363_REG_ENSM_CONFIG_1",	0X14,	-1);
	add_enum_member(id,"AD9363_REG_ENSM_CONFIG_2",	0X15,	-1);
	add_enum_member(id,"AD9363_REG_CALIBRATION_CTRL",	0X16,	-1);
	add_enum_member(id,"AD9363_REG_STATE",	0X17,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_1_WORD",	0X18,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_2_WORD",	0X19,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_1_CONFIG",	0X1A,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_2_CONFIG",	0X1B,	-1);
	add_enum_member(id,"AD9363_REG_AUXADC_CLOCK_DIVIDER",	0X1C,	-1);
	add_enum_member(id,"AD9363_REG_AUXADC_CONFIG",	0X1D,	-1);
	add_enum_member(id,"AD9363_REG_AUXADC_WORD_MSB",	0X1E,	-1);
	add_enum_member(id,"AD9363_REG_AUXADC_LSB",	0X1F,	-1);
	add_enum_member(id,"AD9363_REG_AUTO_GPO",	0X20,	-1);
	add_enum_member(id,"AD9363_REG_AGC_GAIN_LOCK_DELAY",	0X21,	-1);
	add_enum_member(id,"AD9363_REG_AGC_ATTACK_DELAY",	0X22,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_ENABLE_CTRL",	0X23,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOAD_SYNTH_DELAY",	0X24,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOAD_SYNTH_DELAY",	0X25,	-1);
	add_enum_member(id,"AD9363_REG_EXTERNAL_LNA_CTRL",	0X26,	-1);
	add_enum_member(id,"AD9363_REG_GPO_FORCE_AND_INIT",	0X27,	-1);
	add_enum_member(id,"AD9363_REG_GPO0_RX_DELAY",	0X28,	-1);
	add_enum_member(id,"AD9363_REG_GPO1_RX_DELAY",	0X29,	-1);
	add_enum_member(id,"AD9363_REG_GPO2_RX_DELAY",	0X2A,	-1);
	add_enum_member(id,"AD9363_REG_GPO3_RX_DELAY",	0X2B,	-1);
	add_enum_member(id,"AD9363_REG_GPO0_TX_DELAY",	0X2C,	-1);
	add_enum_member(id,"AD9363_REG_GPO1_TX_DELAY",	0X2D,	-1);
	add_enum_member(id,"AD9363_REG_GPO2_TX_DELAY",	0X2E,	-1);
	add_enum_member(id,"AD9363_REG_GPO3_TX_DELAY",	0X2F,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC1_RX_DELAY",	0X30,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC1_TX_DELAY",	0X31,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC2_RX_DELAY",	0X32,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC2_TX_DELAY",	0X33,	-1);
	add_enum_member(id,"AD9363_REG_CTRL_OUTPUT_POINTER",	0X35,	-1);
	add_enum_member(id,"AD9363_REG_CTRL_OUTPUT_ENABLE",	0X36,	-1);
	add_enum_member(id,"AD9363_REG_PRODUCT_ID",	0X37,	-1);
	add_enum_member(id,"AD9363_REG_REFERENCE_CLOCK_CYCLES",	0X3A,	-1);
	add_enum_member(id,"AD9363_REG_DIGITAL_IO_CTRL",	0X3B,	-1);
	add_enum_member(id,"AD9363_REG_LVDS_BIAS_CTRL",	0X3C,	-1);
	add_enum_member(id,"AD9363_REG_LVDS_INVERT_CTRL1",	0X3D,	-1);
	add_enum_member(id,"AD9363_REG_LVDS_INVERT_CTRL2",	0X3E,	-1);
	add_enum_member(id,"AD9363_REG_SDM_CTRL_1",	0X3F,	-1);
	add_enum_member(id,"AD9363_REG_FRACT_BB_FREQ_WORD_1",	0X41,	-1);
	add_enum_member(id,"AD9363_REG_FRACT_BB_FREQ_WORD_2",	0X42,	-1);
	add_enum_member(id,"AD9363_REG_FRACT_BB_FREQ_WORD_3",	0X43,	-1);
	add_enum_member(id,"AD9363_REG_INTEGER_BB_FREQ_WORD",	0X44,	-1);
	add_enum_member(id,"AD9363_REG_CLOCK_CTRL",	0X45,	-1);
	add_enum_member(id,"AD9363_REG_CP_CURRENT",	0X46,	-1);
	add_enum_member(id,"AD9363_REG_CP_BLEED_CURRENT",	0X47,	-1);
	add_enum_member(id,"AD9363_REG_LOOP_FILTER_1",	0X48,	-1);
	add_enum_member(id,"AD9363_REG_LOOP_FILTER_2",	0X49,	-1);
	add_enum_member(id,"AD9363_REG_LOOP_FILTER_3",	0X4A,	-1);
	add_enum_member(id,"AD9363_REG_VCO_CTRL",	0X4B,	-1);
	add_enum_member(id,"AD9363_REG_VCO_PROGRAM_1",	0X4C,	-1);
	add_enum_member(id,"AD9363_REG_VCO_PROGRAM_2",	0X4D,	-1);
	add_enum_member(id,"AD9363_REG_SDM_CTRL",	0X4E,	-1);
	add_enum_member(id,"AD9363_REG_UNKNOWN_50",	0X50,	-1);
	add_enum_member(id,"AD9363_REG_RX_ANALOG_POWER_DOWN_OVERRIDE_1",	0X52,	-1);
	add_enum_member(id,"AD9363_REG_RX_ANALOG_POWER_DOWN_OVERRIDE_2",	0X53,	-1);
	add_enum_member(id,"AD9363_REG_RX1_ADC_POWER_DOWN_OVERRIDE",	0X54,	-1);
	add_enum_member(id,"AD9363_REG_RX2_ADC_POWER_DOWN_OVERRIDE",	0X55,	-1);
	add_enum_member(id,"AD9363_REG_TX_ANALOG_POWER_DOWN_OVERRIDE_1",	0X56,	-1);
	add_enum_member(id,"AD9363_REG_ANALOG_POWER_DOWN_OVERRIDE",	0X57,	-1);
	add_enum_member(id,"AD9363_REG_MISC_POWER_DOWN_OVERRIDE",	0X58,	-1);
	add_enum_member(id,"AD9363_REG_UNKNOWN_5C",	0X5C,	-1);
	add_enum_member(id,"AD9363_REG_CH_1_OVERFLOW",	0X5E,	-1);
	add_enum_member(id,"AD9363_REG_CH_2_OVERFLOW",	0X5F,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_ADDR",	0X60,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_WRITE_DATA_1",	0X61,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_WRITE_DATA_2",	0X62,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_READ_DATA_1",	0X63,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_READ_DATA_2",	0X64,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_CONF",	0X65,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_LOW_GAIN",	0X67,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_HIGH_GAIN",	0X68,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_DELAY",	0X69,	-1);
	add_enum_member(id,"AD9363_REG_TX_LEVEL_THRESH",	0X6A,	-1);
	add_enum_member(id,"AD9363_REG_TX_RSSI1",	0X6B,	-1);
	add_enum_member(id,"AD9363_REG_TX_RSSI2",	0X6C,	-1);
	add_enum_member(id,"AD9363_REG_TX_RSSI_LSB",	0X6D,	-1);
	add_enum_member(id,"AD9363_REG_TPM_MODE_ENABLE",	0X6E,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_TEMP_GAIN_COEF",	0X6F,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_1_CONFIG",	0X70,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_2_CONFIG",	0X71,	-1);
	add_enum_member(id,"AD9363_REG_TX1_ATTEN_0",	0X73,	-1);
	add_enum_member(id,"AD9363_REG_TX1_ATTEN_1",	0X74,	-1);
	add_enum_member(id,"AD9363_REG_TX2_ATTEN_0",	0X75,	-1);
	add_enum_member(id,"AD9363_REG_TX2_ATTEN_1",	0X76,	-1);
	add_enum_member(id,"AD9363_REG_TX_ATTEN_OFFSET",	0X77,	-1);
	add_enum_member(id,"AD9363_REG_TX_ATTEN_THRESH",	0X78,	-1);
	add_enum_member(id,"AD9363_REG_TX1_DIG_ATTEN",	0X79,	-1);
	add_enum_member(id,"AD9363_REG_TX2_DIG_ATTEN",	0X7C,	-1);
	add_enum_member(id,"AD9363_REG_TX1_SYMBOL_ATTEN",	0X7F,	-1);
	add_enum_member(id,"AD9363_REG_TX2_SYMBOL_ATTEN",	0X80,	-1);
	add_enum_member(id,"AD9363_REG_TX_SYMBOL_ATTEN_CONFIG",	0X81,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_1_PHASE_CORR",	0X8E,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_1_GAIN_CORR",	0X8F,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_1_PHASE_CORR",	0X90,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_1_GAIN_CORR",	0X91,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_1_OFFSET_I",	0X92,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_1_OFFSET_Q",	0X93,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_1_OFFSET_I",	0X94,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_1_OFFSET_Q",	0X95,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_2_PHASE_CORR",	0X96,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_2_GAIN_CORR",	0X97,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_2_PHASE_CORR",	0X98,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_2_GAIN_CORR",	0X99,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_2_OFFSET_I",	0X9A,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_2_OFFSET_Q",	0X9B,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_2_OFFSET_I",	0X9C,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_2_OFFSET_Q",	0X9D,	-1);
	add_enum_member(id,"AD9363_REG_TX_FORCE_BITS",	0X9F,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_NCO_FREQ_PHASE_OFFSET",	0XA0,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_CTRL",	0XA1,	-1);
	add_enum_member(id,"AD9363_REG_KEXP_1",	0XA2,	-1);
	add_enum_member(id,"AD9363_REG_KEXP_2",	0XA3,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_SETTLE_COUNT",	0XA4,	-1);
	add_enum_member(id,"AD9363_REG_MAG_FTEST_THRESH",	0XA5,	-1);
	add_enum_member(id,"AD9363_REG_MAG_FTEST_THRESH_2",	0XA6,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_STATUS_TX1",	0XA7,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_STATUS_TX2",	0XA8,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_COUNT",	0XA9,	-1);
	add_enum_member(id,"AD9363_REG_TX_QUAD_FULL_LMT_GAIN",	0XAA,	-1);
	add_enum_member(id,"AD9363_REG_SQUARER_CONFIG",	0XAB,	-1);
	add_enum_member(id,"AD9363_REG_TX_QUAD_CAL_ATTEN",	0XAC,	-1);
	add_enum_member(id,"AD9363_REG_THRESH_ACCUM",	0XAD,	-1);
	add_enum_member(id,"AD9363_REG_TX_QUAD_LPF_GAIN",	0XAE,	-1);
	add_enum_member(id,"AD9363_REG_TXDAC_VDS_I",	0XB0,	-1);
	add_enum_member(id,"AD9363_REG_TXDAC_VDS_Q",	0XB1,	-1);
	add_enum_member(id,"AD9363_REG_TXDAC_GN_I",	0XB2,	-1);
	add_enum_member(id,"AD9363_REG_TXDAC_GN_Q",	0XB3,	-1);
	add_enum_member(id,"AD9363_REG_TXBBF_OPAMP_A",	0XC0,	-1);
	add_enum_member(id,"AD9363_REG_TXBBF_OPAMP_B",	0XC1,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R1",	0XC2,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R2",	0XC3,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R3",	0XC4,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R4",	0XC5,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_RP",	0XC6,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_C1",	0XC7,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_C2",	0XC8,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_CP",	0XC9,	-1);
	add_enum_member(id,"AD9363_REG_TX_TUNE_CTRL",	0XCA,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R2B",	0XCB,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_TUNE",	0XCC,	-1);
	add_enum_member(id,"AD9363_REG_CONFIG0",	0XD0,	-1);
	add_enum_member(id,"AD9363_REG_RESISTOR",	0XD1,	-1);
	add_enum_member(id,"AD9363_REG_CAPACITOR",	0XD2,	-1);
	add_enum_member(id,"AD9363_REG_LO_CM",	0XD3,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_TUNE_DIVIDER",	0XD6,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_TUNE_MODE",	0XD7,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_ADDR",	0XF0,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_DATA_1",	0XF1,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_DATA_2",	0XF2,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_READ_DATA_1",	0XF3,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_READ_DATA_2",	0XF4,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_CONFIG",	0XF5,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_GAIN",	0XF6,	-1);
	add_enum_member(id,"AD9363_REG_AGC_CONFIG_1",	0XFA,	-1);
	add_enum_member(id,"AD9363_REG_AGC_CONFIG_2",	0XFB,	-1);
	add_enum_member(id,"AD9363_REG_AGC_CONFIG_3",	0XFC,	-1);
	add_enum_member(id,"AD9363_REG_MAX_LMT_FULL_GAIN",	0XFD,	-1);
	add_enum_member(id,"AD9363_REG_PEAK_WAIT_TIME",	0XFE,	-1);
	add_enum_member(id,"AD9363_REG_DIGITAL_GAIN",	0X100,	-1);
	add_enum_member(id,"AD9363_REG_AGC_LOCK_LEVEL",	0X101,	-1);
	add_enum_member(id,"AD9363_REG_ADC_NOISE_CORRECTION_FACTOR",	0X102,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_STP_CONFIG1",	0X103,	-1);
	add_enum_member(id,"AD9363_REG_ADC_SMALL_OVERLOAD_THRESH",	0X104,	-1);
	add_enum_member(id,"AD9363_REG_ADC_LARGE_OVERLOAD_THRESH",	0X105,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_STP_CONFIG_2",	0X106,	-1);
	add_enum_member(id,"AD9363_REG_SMALL_LMT_OVERLOAD_THRESH",	0X107,	-1);
	add_enum_member(id,"AD9363_REG_LARGE_LMT_OVERLOAD_THRESH",	0X108,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MANUAL_LMT_FULL_GAIN",	0X109,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MANUAL_LPF_GAIN",	0X10A,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MANUAL_DIGITALFORCED_GAIN",	0X10B,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MANUAL_LMT_FULL_GAIN",	0X10C,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MANUAL_LPF_GAIN",	0X10D,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MANUAL_DIGITALFORCED_GAIN",	0X10E,	-1);
	add_enum_member(id,"AD9363_REG_FAST_CONFIG_1",	0X110,	-1);
	add_enum_member(id,"AD9363_REG_FAST_CONFIG_2_SETTLING_DELAY",	0X111,	-1);
	add_enum_member(id,"AD9363_REG_FAST_ENERGY_LOST_THRESH",	0X112,	-1);
	add_enum_member(id,"AD9363_REG_FAST_STRONGER_SIGNAL_THRESH",	0X113,	-1);
	add_enum_member(id,"AD9363_REG_FAST_LOW_POWER_THRESH",	0X114,	-1);
	add_enum_member(id,"AD9363_REG_FAST_STRONG_SIGNAL_FREEZE",	0X115,	-1);
	add_enum_member(id,"AD9363_REG_FAST_FINAL_OVER_RANGE_AND_OPT_GAIN",	0X116,	-1);
	add_enum_member(id,"AD9363_REG_FAST_ENERGY_DETECT_COUNT",	0X117,	-1);
	add_enum_member(id,"AD9363_REG_FAST_AGCLL_UPPER_LIMIT",	0X118,	-1);
	add_enum_member(id,"AD9363_REG_FAST_GAIN_LOCK_EXIT_COUNT",	0X119,	-1);
	add_enum_member(id,"AD9363_REG_FAST_INITIAL_LMT_GAIN_LIMIT",	0X11A,	-1);
	add_enum_member(id,"AD9363_REG_FAST_INCREMENT_TIME",	0X11B,	-1);
	add_enum_member(id,"AD9363_REG_AGC_INNER_LOW_THRESH",	0X120,	-1);
	add_enum_member(id,"AD9363_REG_LMT_OVERLOAD_COUNTERS",	0X121,	-1);
	add_enum_member(id,"AD9363_REG_ADC_OVERLOAD_COUNTERS",	0X122,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_STP1",	0X123,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_UPDATE_COUNTER1",	0X124,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_UPDATE_COUNTER2",	0X125,	-1);
	add_enum_member(id,"AD9363_REG_DIGITAL_SAT_COUNTER",	0X128,	-1);
	add_enum_member(id,"AD9363_REG_OUTER_POWER_THRESHS",	0X129,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_STP_2",	0X12A,	-1);
	add_enum_member(id,"AD9363_REG_EXT_LNA_HIGH_GAIN",	0X12C,	-1);
	add_enum_member(id,"AD9363_REG_EXT_LNA_LOW_GAIN",	0X12D,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_ADDRESS",	0X130,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_WRITE_DATA1",	0X131,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_WRITE_DATA2",	0X132,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_WRITE_DATA3",	0X133,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_READ_DATA1",	0X134,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_READ_DATA2",	0X135,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_READ_DATA3",	0X136,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_CONFIG",	0X137,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_ADDRESS",	0X138,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_GAIN_WRITE",	0X139,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_BIAS_WRITE",	0X13A,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_CTRL_WRITE",	0X13B,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_GAIN_READ",	0X13C,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_BIAS_READ",	0X13D,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_CTRL_READ",	0X13E,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_CONFIG",	0X13F,	-1);
	add_enum_member(id,"AD9363_REG_WORD_ADDRESS",	0X140,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_DIFF_WORDERROR_WRITE",	0X141,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_ERROR_READ",	0X142,	-1);
	add_enum_member(id,"AD9363_REG_CONFIG",	0X143,	-1);
	add_enum_member(id,"AD9363_REG_LNA_GAIN_DIFF_READ_BACK",	0X144,	-1);
	add_enum_member(id,"AD9363_REG_MAX_MIXER_CALIBRATION_GAIN_INDEX",	0X145,	-1);
	add_enum_member(id,"AD9363_REG_TEMP_GAIN_COEF",	0X146,	-1);
	add_enum_member(id,"AD9363_REG_SETTLE_TIME",	0X147,	-1);
	add_enum_member(id,"AD9363_REG_MEASURE_DURATION",	0X148,	-1);
	add_enum_member(id,"AD9363_REG_CAL_TEMP_SENSOR_WORD",	0X149,	-1);
	add_enum_member(id,"AD9363_REG_MEASURE_DURATION_01",	0X150,	-1);
	add_enum_member(id,"AD9363_REG_MEASURE_DURATION_23",	0X151,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WEIGHT_0",	0X152,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WEIGHT_1",	0X153,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WEIGHT_2",	0X154,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WEIGHT_3",	0X155,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_DELAY",	0X156,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WAIT_TIME",	0X157,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_CONFIG",	0X158,	-1);
	add_enum_member(id,"AD9363_REG_ADC_MEASURE_DURATION_01",	0X159,	-1);
	add_enum_member(id,"AD9363_REG_ADC_WEIGHT_0",	0X15A,	-1);
	add_enum_member(id,"AD9363_REG_ADC_WEIGHT_1",	0X15B,	-1);
	add_enum_member(id,"AD9363_REG_DEC_POWER_MEASURE_DURATION_0",	0X15C,	-1);
	add_enum_member(id,"AD9363_REG_LNA_GAIN",	0X15D,	-1);
	add_enum_member(id,"AD9363_REG_CH1_ADC_POWER",	0X160,	-1);
	add_enum_member(id,"AD9363_REG_CH1_RX_FILTER_POWER",	0X161,	-1);
	add_enum_member(id,"AD9363_REG_CH2_ADC_POWER",	0X162,	-1);
	add_enum_member(id,"AD9363_REG_CH2_RX_FILTER_POWER",	0X163,	-1);
	add_enum_member(id,"AD9363_REG_RX_QUAD_CAL_LEVEL",	0X168,	-1);
	add_enum_member(id,"AD9363_REG_CALIBRATION_CONFIG_1",	0X169,	-1);
	add_enum_member(id,"AD9363_REG_CALIBRATION_CONFIG_2",	0X16A,	-1);
	add_enum_member(id,"AD9363_REG_CALIBRATION_CONFIG_3",	0X16B,	-1);
	add_enum_member(id,"AD9363_REG_CALIB_COUNT",	0X16C,	-1);
	add_enum_member(id,"AD9363_REG_RX_QUAD_GAIN1",	0X16E,	-1);
	add_enum_member(id,"AD9363_REG_RX_QUAD_GAIN2",	0X16F,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_A_PHASE_CORR",	0X170,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_A_GAIN_CORR",	0X171,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_A_PHASE_CORR",	0X172,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_A_GAIN_CORR",	0X173,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_A_Q_OFFSET",	0X174,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_A_OFFSETS",	0X175,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_OFFSETS_1",	0X176,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_A_OFFSETS",	0X177,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_A_I_OFFSET",	0X178,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_BC_PHASE_CORR",	0X179,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_BC_GAIN_CORR",	0X17A,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_BC_PHASE_CORR",	0X17B,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_BC_GAIN_CORR",	0X17C,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_BC_Q_OFFSET",	0X17D,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_BC_OFFSETS",	0X17E,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_BC_OFFSETS_1",	0X17F,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_BC_OFFSETS",	0X180,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_BC_I_OFFSET",	0X181,	-1);
	add_enum_member(id,"AD9363_REG_FORCE_BITS",	0X182,	-1);
	add_enum_member(id,"AD9363_REG_WAIT_COUNT",	0X185,	-1);
	add_enum_member(id,"AD9363_REG_RF_DC_OFFSET_COUNT",	0X186,	-1);
	add_enum_member(id,"AD9363_REG_RF_DC_OFFSET_CONFIG_1",	0X187,	-1);
	add_enum_member(id,"AD9363_REG_RF_DC_OFFSET_ATTEN",	0X188,	-1);
	add_enum_member(id,"AD9363_REG_INVERT_BITS",	0X189,	-1);
	add_enum_member(id,"AD9363_REG_DC_OFFSET_CONFIG2",	0X18B,	-1);
	add_enum_member(id,"AD9363_REG_RF_CAL_GAIN_INDEX",	0X18C,	-1);
	add_enum_member(id,"AD9363_REG_SOI_THRESH",	0X18D,	-1);
	add_enum_member(id,"AD9363_REG_BB_DC_OFFSET_SHIFT",	0X190,	-1);
	add_enum_member(id,"AD9363_REG_BB_DC_OFFSET_FAST_SETTLE_SHIFT",	0X191,	-1);
	add_enum_member(id,"AD9363_REG_BB_FAST_SETTLE_DUR",	0X192,	-1);
	add_enum_member(id,"AD9363_REG_BB_DC_OFFSET_COUNT",	0X193,	-1);
	add_enum_member(id,"AD9363_REG_BB_DC_OFFSET_ATTEN",	0X194,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BB_DC_WORD_I_MSB",	0X19A,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BB_DC_WORD_I_LSB",	0X19B,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BB_DC_WORD_Q_MSB",	0X19C,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BB_DC_WORD_Q_LSB",	0X19D,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BB_DC_WORD_I_MSB",	0X19E,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BB_DC_WORD_I_LSB",	0X19F,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BB_DC_WORD_Q_MSB",	0X1A0,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BB_DC_WORD_Q_LSB",	0X1A1,	-1);
	add_enum_member(id,"AD9363_REG_BB_TRACK_CORR_WORD_I_MSB",	0X1A2,	-1);
	add_enum_member(id,"AD9363_REG_BB_TRACK_CORR_WORD_I_LSB",	0X1A3,	-1);
	add_enum_member(id,"AD9363_REG_BB_TRACK_CORR_WORD_Q_MSB",	0X1A4,	-1);
	add_enum_member(id,"AD9363_REG_BB_TRACK_CORR_WORD_Q_LSB",	0X1A5,	-1);
	add_enum_member(id,"AD9363_REG_RX1_RSSI_SYMBOL",	0X1A7,	-1);
	add_enum_member(id,"AD9363_REG_RX1_RSSI_PREAMBLE",	0X1A8,	-1);
	add_enum_member(id,"AD9363_REG_RX2_RSSI_SYMBOL",	0X1A9,	-1);
	add_enum_member(id,"AD9363_REG_RX2_RSSI_PREAMBLE",	0X1AA,	-1);
	add_enum_member(id,"AD9363_REG_SYMBOL_LSB",	0X1AB,	-1);
	add_enum_member(id,"AD9363_REG_PREAMBLE_LSB",	0X1AC,	-1);
	add_enum_member(id,"AD9363_REG_RX_PATH_GAIN_MSB",	0X1AD,	-1);
	add_enum_member(id,"AD9363_REG_RX_PATH_GAIN_LSB",	0X1AE,	-1);
	add_enum_member(id,"AD9363_REG_RX_DIFF_LNA_FORCE",	0X1B0,	-1);
	add_enum_member(id,"AD9363_REG_RX_LNA_BIAS_COARSE",	0X1B1,	-1);
	add_enum_member(id,"AD9363_REG_RX_LNA_BIAS_FINE_0",	0X1B2,	-1);
	add_enum_member(id,"AD9363_REG_RX_LNA_BIAS_FINE_1",	0X1B3,	-1);
	add_enum_member(id,"AD9363_REG_RX_MIX_GM_CONFIG",	0X1C0,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MIX_GM_FORCE",	0X1C1,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MIX_GM_BIAS_FORCE",	0X1C2,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MIX_GM_FORCE",	0X1C3,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MIX_GM_BIAS_FORCE",	0X1C4,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_MSBS",	0X1C8,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_RX1_I",	0X1C9,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_RX1_Q",	0X1CA,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_RX2_I",	0X1CB,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_RX2_Q",	0X1CC,	-1);
	add_enum_member(id,"AD9363_REG_INPUTS_BC_RX1_I",	0X1CD,	-1);
	add_enum_member(id,"AD9363_REG_BAND1_RX1_Q",	0X1CE,	-1);
	add_enum_member(id,"AD9363_REG_INPUTS_BC_RX2_I",	0X1CF,	-1);
	add_enum_member(id,"AD9363_REG_INPUTS_BC_RX2_Q",	0X1D0,	-1);
	add_enum_member(id,"AD9363_REG_INPUTS_BC_MSBS",	0X1D1,	-1);
	add_enum_member(id,"AD9363_REG_FORCE_OS_DAC",	0X1D2,	-1);
	add_enum_member(id,"AD9363_REG_RX_MIX_LO_CM",	0X1D5,	-1);
	add_enum_member(id,"AD9363_REG_RX_CGB_SEG_ENABLE",	0X1D6,	-1);
	add_enum_member(id,"AD9363_REG_RX_MIX_INPUTBIAS",	0X1D7,	-1);
	add_enum_member(id,"AD9363_REG_RX_TIA_CONFIG",	0X1DB,	-1);
	add_enum_member(id,"AD9363_REG_TIA1_C_LSB",	0X1DC,	-1);
	add_enum_member(id,"AD9363_REG_TIA1_C_MSB",	0X1DD,	-1);
	add_enum_member(id,"AD9363_REG_TIA2_C_LSB",	0X1DE,	-1);
	add_enum_member(id,"AD9363_REG_TIA2_C_MSB",	0X1DF,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BBF_R1A",	0X1E0,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BBF_R1A",	0X1E1,	-1);
	add_enum_member(id,"AD9363_REG_RX1_TUNE_CTRL",	0X1E2,	-1);
	add_enum_member(id,"AD9363_REG_RX2_TUNE_CTRL",	0X1E3,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BBF_R5",	0X1E4,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BBF_R5",	0X1E5,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_R2346",	0X1E6,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C1_MSB",	0X1E7,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C1_LSB",	0X1E8,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C2_MSB",	0X1E9,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C2_LSB",	0X1EA,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C3_MSB",	0X1EB,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C3_LSB",	0X1EC,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_CC1_CTR",	0X1ED,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_POW_RZ_BYTE0",	0X1EE,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_CC2_CTR",	0X1EF,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_POW_RZ_BYTE1",	0X1F0,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_CC3_CTR",	0X1F1,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_R5_TUNE",	0X1F2,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_TUNE",	0X1F3,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BBF_MAN_GAIN",	0X1F4,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BBF_MAN_GAIN",	0X1F5,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_TUNE_DIVIDE",	0X1F8,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_TUNE_CONFIG",	0X1F9,	-1);
	add_enum_member(id,"AD9363_REG_POLE_GAIN",	0X1FA,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBBW_MHZ",	0X1FB,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBBW_KHZ",	0X1FC,	-1);
	add_enum_member(id,"AD9363_REG_FB_DAC_CLK_DELAY1",	0X201,	-1);
	add_enum_member(id,"AD9363_REG_FB_DAC_CLK_DELAY2",	0X202,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_SAMPLE_CLK_DELAY_3P",	0X203,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_SAMPLE_CLK_DELAY_3N",	0X204,	-1);
	add_enum_member(id,"AD9363_REG_TEST_MUX_2I",	0X205,	-1);
	add_enum_member(id,"AD9363_REG_TEST_MUX_2Q",	0X206,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_1_RESISTANCE",	0X207,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_1_CAPACITANCE",	0X208,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_23_RESISTANCE",	0X209,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_2_RESISTANCE",	0X20A,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_2_CAPACITANCE",	0X20B,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_3_RESISTANCE",	0X20C,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_3_CAPACITANCE",	0X20D,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_AMP_CC",	0X20E,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_FB_DAC_NMOS_CURRENT_SOURCE",	0X20F,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_FB_DAC_NMOS_CASOADE_BIAS_CURRENT",	0X210,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_FB_DAC_PMOS_CURRENT_SOURCE",	0X211,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_FB_DAC_NMOS_CURRENT_SOURCE",	0X212,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_FB_DAC_NMOS_CASCODE_BIAS_CURRENT",	0X213,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_FB_DAC_PMOS_CURRENT_SOURCE",	0X214,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_FB_DAC_NMOS_CURRENT_SOURCE",	0X215,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_FB_DAC_NMOS_CASCODE_BIAS_CURRENT",	0X216,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_FB_DAC_PMOS_CURRENT_SOURCE",	0X217,	-1);
	add_enum_member(id,"AD9363_REG_FB_DAC_BIAS_CURRENT",	0X218,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_1ST_STAGE_CURRENT",	0X219,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_1ST_STAGE_CASCODE_CURRENT",	0X21A,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_2ND_STAGE_CURRENT",	0X21B,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_2_1ST_STAGE_CURRENT",	0X21C,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_1ST_STAGE_CASCODE_CURRENT",	0X21D,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_2ND_STAGE_CURRENT",	0X21E,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_1ST_STAGE_CURRENT",	0X21F,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_1ST_STAGE_CASCODE_CURRENT",	0X220,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_2ND_STAGE_CURRENT",	0X221,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_BIAS_CURRENT",	0X222,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_LADDER_BIAS",	0X223,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_LADDER_BIAS2",	0X225,	-1);
	add_enum_member(id,"AD9363_REG_RESET",	0X226,	-1);
	add_enum_member(id,"AD9363_REG_RX_PFD_CONFIG",	0X230,	-1);
	add_enum_member(id,"AD9363_REG_RX_INTEGER_BYTE_0",	0X231,	-1);
	add_enum_member(id,"AD9363_REG_RX_INTEGER_BYTE_1",	0X232,	-1);
	add_enum_member(id,"AD9363_REG_RX_FRACT_BYTE_0",	0X233,	-1);
	add_enum_member(id,"AD9363_REG_RX_FRACT_BYTE_1",	0X234,	-1);
	add_enum_member(id,"AD9363_REG_RX_FRACT_BYTE_2",	0X235,	-1);
	add_enum_member(id,"AD9363_REG_RX_FORCE_ALC",	0X236,	-1);
	add_enum_member(id,"AD9363_REG_RX_FORCE_VCO_TUNE_0",	0X237,	-1);
	add_enum_member(id,"AD9363_REG_RX_FORCE_VCO_TUNE_1",	0X238,	-1);
	add_enum_member(id,"AD9363_REG_RX_ALC_VARACTOR",	0X239,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_OUTPUT",	0X23A,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_CURRENT",	0X23B,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_OFFSET",	0X23C,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_CONFIG",	0X23D,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOOP_FILTER_1",	0X23E,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOOP_FILTER_2",	0X23F,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOOP_FILTER_3",	0X240,	-1);
	add_enum_member(id,"AD9363_REG_RX_DITHERCP_CAL",	0X241,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_BIAS_1",	0X242,	-1);
	add_enum_member(id,"AD9363_REG_RX_CAL_STATUS",	0X244,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_CAL_REF",	0X245,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_PD_OVERRIDES",	0X246,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_OVERRANGE_VCO_LOCK",	0X247,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_LDO",	0X248,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_CAL",	0X249,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOCK_DETECT_CONFIG",	0X24A,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_LEVEL_DETECT",	0X24B,	-1);
	add_enum_member(id,"AD9363_REG_RX_DSM_SETUP_0",	0X24C,	-1);
	add_enum_member(id,"AD9363_REG_RX_DSM_SETUP_1",	0X24D,	-1);
	add_enum_member(id,"AD9363_REG_RX_CORRECTION_WORD0",	0X24E,	-1);
	add_enum_member(id,"AD9363_REG_RX_CORRECTION_WORD1",	0X24F,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_VARACTOR_CTRL_0",	0X250,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_VARACTOR_CTRL_1",	0X251,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_SETUP",	0X25A,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_SETUP_INIT_DELAY",	0X25B,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_PROGRAM_ADDR",	0X25C,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_PROGRAM_DATA",	0X25D,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_PROGRAM_READ",	0X25E,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_PROGRAM_CTRL",	0X25F,	-1);
	add_enum_member(id,"AD9363_REG_RX_LO_GEN_POWER_MODE",	0X261,	-1);
	add_enum_member(id,"AD9363_REG_TX_PFD_CONFIG",	0X270,	-1);
	add_enum_member(id,"AD9363_REG_TX_INTEGER_BYTE_0",	0X271,	-1);
	add_enum_member(id,"AD9363_REG_TX_INTEGER_BYTE_1",	0X272,	-1);
	add_enum_member(id,"AD9363_REG_TX_FRACT_BYTE_0",	0X273,	-1);
	add_enum_member(id,"AD9363_REG_TX_FRACT_BYTE_1",	0X274,	-1);
	add_enum_member(id,"AD9363_REG_TX_FRACT_BYTE_2",	0X275,	-1);
	add_enum_member(id,"AD9363_REG_TX_FORCE_ALC",	0X276,	-1);
	add_enum_member(id,"AD9363_REG_TX_FORCE_VCO_TUNE_0",	0X277,	-1);
	add_enum_member(id,"AD9363_REG_TX_FORCE_VCO_TUNE_1",	0X278,	-1);
	add_enum_member(id,"AD9363_REG_TX_ALCVARACT_OR",	0X279,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_OUTPUT",	0X27A,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_CURRENT",	0X27B,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_OFFSET",	0X27C,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_CONFIG",	0X27D,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOOP_FILTER_1",	0X27E,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOOP_FILTER_2",	0X27F,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOOP_FILTER_3",	0X280,	-1);
	add_enum_member(id,"AD9363_REG_TX_DITHERCP_CAL",	0X281,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_BIAS_1",	0X282,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_BIAS_2",	0X283,	-1);
	add_enum_member(id,"AD9363_REG_TX_CAL_STATUS",	0X284,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_CAL_REF",	0X285,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_PD_OVERRIDES",	0X286,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_OVERRANGE_VCO_LOCK",	0X287,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_LDO",	0X288,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_CAL",	0X289,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOCK_DETECT_CONFIG",	0X28A,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_LEVEL_DETECT",	0X28B,	-1);
	add_enum_member(id,"AD9363_REG_TX_DSM_SETUP_0",	0X28C,	-1);
	add_enum_member(id,"AD9363_REG_TX_DSM_SETUP_1",	0X28D,	-1);
	add_enum_member(id,"AD9363_REG_TX_CORRECTION_WORD0",	0X28E,	-1);
	add_enum_member(id,"AD9363_REG_TX_CORRECTION_WORD1",	0X28F,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_VARACTOR_CTRL_0",	0X290,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_VARACTOR_CTRL_1",	0X291,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_COARSE_TUNE",	0X292,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_FINE_TUNE_HIGH",	0X293,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_FINE_TUNE_LOW",	0X294,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_CONFIG",	0X295,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_TEMPCO_WRITE",	0X296,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_TEMPCO_READ",	0X297,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_TEMPCO_ADDR",	0X298,	-1);
	add_enum_member(id,"AD9363_REG_DELTA_T_READ",	0X299,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_SETUP",	0X29A,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_SETUP_INIT_DELAY",	0X29B,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_PROGRAM_ADDR",	0X29C,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_PROGRAM_DATA",	0X29D,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_PROGRAM_READ",	0X29E,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_PROGRAM_CTRL",	0X29F,	-1);
	add_enum_member(id,"AD9363_REG_TX_LO_GEN_POWER_MODE",	0X2A1,	-1);
	add_enum_member(id,"AD9363_REG_BANDGAP_CONFIG0",	0X2A6,	-1);
	add_enum_member(id,"AD9363_REG_BANDGAP_CONFIG1",	0X2A8,	-1);
	add_enum_member(id,"AD9363_REG_REF_DIVIDE_CONFIG_1",	0X2AB,	-1);
	add_enum_member(id,"AD9363_REG_REF_DIVIDE_CONFIG_2",	0X2AC,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_RX1",	0X2B0,	-1);
	add_enum_member(id,"AD9363_REG_LPF_GAIN_RX1",	0X2B1,	-1);
	add_enum_member(id,"AD9363_REG_DIG_GAIN_RX1",	0X2B2,	-1);
	add_enum_member(id,"AD9363_REG_FAST_ATTACK_STATE",	0X2B3,	-1);
	add_enum_member(id,"AD9363_REG_SLOW_LOOP_STATE",	0X2B4,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_RX2",	0X2B5,	-1);
	add_enum_member(id,"AD9363_REG_LPF_GAIN_RX2",	0X2B6,	-1);
	add_enum_member(id,"AD9363_REG_DIG_GAIN_RX2",	0X2B7,	-1);
	add_enum_member(id,"AD9363_REG_OVRG_SIGS_RX1",	0X2B8,	-1);
	add_enum_member(id,"AD9363_REG_OVRG_SIGS_RX2",	0X2B9,	-1);
	add_enum_member(id,"AD9363_REG_CTRL",	0X3DF,	-1);
	add_enum_member(id,"AD9363_REG_BIST_CONFIG",	0X3F4,	-1);
	add_enum_member(id,"AD9363_REG_OBSERVE_CONFIG",	0X3F5,	-1);
	add_enum_member(id,"AD9363_REG_BIST_AND_DATA_PORT_TEST_CONFIG",	0X3F6,	-1);
	add_enum_member(id,"AD9363_REG_DAC_TEST_0",	0X3FC,	-1);
	add_enum_member(id,"AD9363_REG_DAC_TEST_1",	0X3FD,	-1);
	add_enum_member(id,"AD9363_REG_DAC_TEST_2",	0X3FE,	-1);
	id = add_enum(-1,"SPI_AR9003_REG_DEFINES",0x1100000);
	add_enum_member(id,"AR8003_REG_UNKN_2A",	0X2A,	-1);
	add_enum_member(id,"AR8003_REG_UNKN_42",	0X42,	-1);
	add_enum_member(id,"AR8003_REG_TX1_ATTEN_0",	0X54,	-1);
	add_enum_member(id,"AR8003_REG_TX2_ATTEN_0",	0X5C,	-1);
	add_enum_member(id,"AR8003_REG_UNKN_6A",	0X6A,	-1);
	add_enum_member(id,"AR8003_REG_STATE_FLAGS",	0X7C,	-1);
	id = add_enum(-1,"SPI_FPGA_REG_DEFINES",0x1100000);
	add_enum_member(id,"FPGA_REG_UNKN_00",	0,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_01",	0X1,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_02",	0X2,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_04",	0X4,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_05",	0X5,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_06",	0X6,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_07",	0X7,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_08",	0X8,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_09",	0X9,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_10",	0X10,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_12",	0X12,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_20",	0X20,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_23",	0X23,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_8B",	0X8B,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_8C",	0X8C,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_8D",	0X8D,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_8E",	0X8E,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_90",	0X90,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_91",	0X91,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_92",	0X92,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_93",	0X93,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_94",	0X94,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_95",	0X95,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_96",	0X96,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_97",	0X97,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_98",	0X98,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_99",	0X99,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_9A",	0X9A,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_9B",	0X9B,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_9E",	0X9E,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_9F",	0X9F,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A0",	0XA0,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A1",	0XA1,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A3",	0XA3,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A5",	0XA5,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A6",	0XA6,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A7",	0XA7,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A8",	0XA8,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A9",	0XA9,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AA",	0XAA,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AB",	0XAB,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AC",	0XAC,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AD",	0XAD,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AE",	0XAE,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B0",	0XB0,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B1",	0XB1,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B2",	0XB2,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B3",	0XB3,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B4",	0XB4,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B8",	0XB8,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B9",	0XB9,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_BA",	0XBA,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_BB",	0XBB,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_BC",	0XBC,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_BD",	0XBD,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_CE",	0XCE,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_E9",	0XE9,	-1);
	id = add_enum(-1,"SPI_AR9001_REG_DEFINES",0x1100000);
	add_enum_member(id,"AR8001_REG_UNKN_00",	0,	-1);
	add_enum_member(id,"AR8001_REG_UNKN_01",	0X1,	-1);
	add_enum_member(id,"AR8001_REG_UNKN_CE",	0XCE,	-1);
	id = add_enum(-1,"OFDM_TCX_STATE_FLAGS",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"OFDM_FPGA_BOOT_ERR",	0X1,	0x1);
	add_enum_member(id,"OFDM_FPGA_CONFIG_ERR",	0X2,	0x2);
	add_enum_member(id,"OFDM_EXEC_FAIL_1_ERR",	0X4,	0x4);
	add_enum_member(id,"OFDM_EXEC_FAIL_2_ERR",	0X8,	0x8);
	add_enum_member(id,"OFDM_VER_MISMATCH_ERR",	0X20,	0x20);
	add_enum_member(id,"OFDM_TCX_REGISTER_ERR",	0X40,	0x40);
	add_enum_member(id,"OFDM_RECEIVED_DATA_CRC_FAIL",	0X400,	0x400);
	add_enum_member(id,"OFDM_RECEIVED_DATA_SEQ_FAIL",	0X800,	0x800);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
	id = Enums_0(id);
        end_type_updating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = get_struc_id("DjiPacketHead");
	id = get_struc_id("DjiPacket");
	id = get_struc_id("PktPayloadS03Caa");
	id = get_struc_id("UnknStruct01");
	SetType(get_member_id(id, 0x0), "struct DjiPacket *");
	SetType(get_member_id(id, 0x4), "bool (__cdecl *)(uint8_t *)");
	id = get_struc_id("DjiPacketS09C12");
	SetType(get_member_id(id, 0x0), "struct DjiPacketHead");
	SetType(get_member_id(id, 0xB), "uint8_t");
	SetType(get_member_id(id, 0xC), "uint8_t");
	SetType(get_member_id(id, 0xD), "uint8_t");
	SetType(get_member_id(id, 0xE), "uint8_t");
	id = get_struc_id("UnknStruct02");
	SetType(get_member_id(id, 0x0), "void (__cdecl *)(uint8_t *)");
	id = get_struc_id("OFDMPacketExecCallback");
	SetType(get_member_id(id, 0x0), "void (__cdecl *)(uint8_t *)");
	SetType(get_member_id(id, 0x6), "uint8_t");
	SetType(get_member_id(id, 0x7), "uint8_t");
	id = get_struc_id("PktPayloadOsdHome");
	SetType(get_member_id(id, 0x0), "double");
	SetType(get_member_id(id, 0x8), "double");
	SetType(get_member_id(id, 0x10), "float");
	id = get_struc_id("USART_TypeDef");
	id = get_struc_id("USART_InitTypeDef");
	id = get_struc_id("SPI_TypeDef");
	id = get_struc_id("PktPayloadOsdGeneral");
	SetType(get_member_id(id, 0x0), "double");
	SetType(get_member_id(id, 0x8), "double");
	id = get_struc_id("PktPayloadS09C00");
	id = get_struc_id("DjiPckt0C");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
}

static Structures_0(id) {
        auto mid;

	id = add_struc(-1,"DjiPacketHead",0);
	id = add_struc(-1,"DjiPacket",0);
	id = add_struc(-1,"PktPayloadS03Caa",0);
	id = add_struc(-1,"UnknStruct01",0);
	id = add_struc(-1,"DjiPacketS09C12",0);
	id = add_struc(-1,"UnknStruct02",0);
	id = add_struc(-1,"OFDMPacketExecCallback",0);
	id = add_struc(-1,"PktPayloadOsdHome",0);
	id = add_struc(-1,"USART_TypeDef",0);
	id = add_struc(-1,"USART_InitTypeDef",0);
	id = add_struc(-1,"SPI_TypeDef",0);
	id = add_struc(-1,"PktPayloadOsdGeneral",0);
	id = add_struc(-1,"PktPayloadS09C00",0);
	id = add_struc(-1,"DjiPckt0C",0);
	
	id = get_struc_id("DjiPacket");
	mid = add_struc_member(id,"delimiter",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"protover_length",	0X1,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"hdr_crc",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"sender",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"receiver",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"seqctr",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ack",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmdset",	0X9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmd",	0XA,	0x000400,	-1,	1);
	mid = add_struc_member(id,"payload",	0XB,	0x000400,	-1,	1);
	
	id = get_struc_id("PktPayloadS03Caa");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	23);
	mid = add_struc_member(id,"field_17",	0X17,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_18",	0X18,	0x000400,	-1,	1);
	
	id = get_struc_id("UnknStruct01");
	mid = add_struc_member(id,"pkt",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"callback",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_8",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"pkt_len",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_C",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_E",	0XE,	0x10000400,	-1,	2);
	
	id = get_struc_id("DjiPacketHead");
	mid = add_struc_member(id,"delimiter",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"protover_length",	0X1,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"hdr_crc",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"sender",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"receiver",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"seqctr",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ack",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmdset",	0X9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmd",	0XA,	0x000400,	-1,	1);
	
	id = get_struc_id("DjiPacketS09C12");
	mid = add_struc_member(id,"head",	0,	0x60000400,	get_struc_id("DjiPacketHead"),	11);
	mid = add_struc_member(id,"field_B",	0XB,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_C",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_D",	0XD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_E",	0XE,	0x000400,	-1,	1);
	
	id = get_struc_id("UnknStruct02");
	mid = add_struc_member(id,"func",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	
	id = get_struc_id("OFDMPacketExecCallback");
	mid = add_struc_member(id,"func",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"receiver",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"recv_flg",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmdset",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmd",	0X7,	0x000400,	-1,	1);
	
	id = get_struc_id("PktPayloadOsdHome");
	mid = add_struc_member(id,"lon",	0,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"lat",	0X8,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"alt",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"home_state",	0X14,	0x000400,	-1,	1);
	
	id = get_struc_id("USART_TypeDef");
	mid = add_struc_member(id,"SR",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED0",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"DR",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED1",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"BRR",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED2",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"CR1",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED3",	0XE,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"CR2",	0X10,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED4",	0X12,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"CR3",	0X14,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED5",	0X16,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"GTPR",	0X18,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED6",	0X1A,	0x10000400,	-1,	2);
	
	id = get_struc_id("USART_InitTypeDef");
	mid = add_struc_member(id,"USART_BaudRate",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"USART_WordLength",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"USART_StopBits",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"USART_Parity",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"USART_Mode",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"USART_HardwareFlowControl",	0XC,	0x10000400,	-1,	2);
	
	id = get_struc_id("SPI_TypeDef");
	mid = add_struc_member(id,"CR1",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED0",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"CR2",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED1",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"SR",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED2",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"DR",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED3",	0XE,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"CRCPR",	0X10,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED4",	0X12,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RXCRCR",	0X14,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED5",	0X16,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"TXCRCR",	0X18,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED6",	0X1A,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"I2SCFGR",	0X1C,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED7",	0X1E,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"I2SPR",	0X20,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED8",	0X22,	0x10000400,	-1,	2);
	
	id = get_struc_id("PktPayloadOsdGeneral");
	mid = add_struc_member(id,"longtitude",	0,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"latitude",	0X8,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"relative_height",	0X10,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"vgx",	0X12,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"vgy",	0X14,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"vgz",	0X16,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"pitch",	0X18,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"roll",	0X1A,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"yaw",	0X1C,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ctrl_info",	0X1E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"latest_cmd",	0X1F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"controller_state",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"gps_nums",	0X24,	0x000400,	-1,	1);
	mid = add_struc_member(id,"gohome_landing_reason",	0X25,	0x000400,	-1,	1);
	mid = add_struc_member(id,"start_fail_state",	0X26,	0x000400,	-1,	1);
	mid = add_struc_member(id,"controller_state_ext",	0X27,	0x000400,	-1,	1);
	mid = add_struc_member(id,"batt_remain",	0X28,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ultrasonic_height",	0X29,	0x000400,	-1,	1);
	mid = add_struc_member(id,"motor_startup_time",	0X2A,	0x10000400,	-1,	2);
	
	id = get_struc_id("PktPayloadS09C00");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	32);
	mid = add_struc_member(id,"field_20",	0X20,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_21",	0X21,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_22",	0X22,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_26",	0X26,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_27",	0X27,	0x000400,	-1,	6);
	mid = add_struc_member(id,"field_2D",	0X2D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2E",	0X2E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2F",	0X2F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_30",	0X30,	0x000400,	-1,	3);
	mid = add_struc_member(id,"field_33",	0X33,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_34",	0X34,	0x000400,	-1,	7);
	mid = add_struc_member(id,"field_3B",	0X3B,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3C",	0X3C,	0x000400,	-1,	2);
	mid = add_struc_member(id,"field_3E",	0X3E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3F",	0X3F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_40",	0X40,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_41",	0X41,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_42",	0X42,	0x000400,	-1,	1);
	
	id = get_struc_id("DjiPckt0C");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1",	0X1,	0x000400,	-1,	14);
	mid = add_struc_member(id,"crc",	0XF,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_11",	0X11,	0x000400,	-1,	34);
	mid = add_struc_member(id,"seqno",	0X33,	0x20000400,	-1,	4);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
	id = Structures_0(id);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	update_extra_cmt		(0X8008000,	E_PREV + 0,	"; File Name   : P3X_FW_V01.04.0005_m0900.elf");
	update_extra_cmt		(0X8008000,	E_PREV + 1,	"; Format      : ELF for ARM (Executable)");
	update_extra_cmt		(0X8008000,	E_PREV + 2,	"; Imagebase   : 8008000");
	update_extra_cmt		(0X8008000,	E_PREV + 3,	"; ");
	update_extra_cmt		(0X8008000,	E_PREV + 4,	"; Options     : EF_ARM_VFP_FLOAT");
	update_extra_cmt		(0X8008000,	E_PREV + 5,	"; EABI version: 5");
	update_extra_cmt		(0X8008000,	E_PREV + 6,	"; ");
	create_dword	(x=0X8008000);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008004);
	make_array	(x,	0X3A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X80081A0);
	create_insn	(0X80081A4);
	create_insn	(0X80081A8);
	create_word	(0X80081B6);
	create_dword	(0X80081B8);
	make_array	(0X80081B8,	0XB);
	create_insn	(x=0X80081E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80081E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80081E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80081EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X80081EE,	0X2);
	create_dword	(x=0X80081F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X80081F4);
	create_dword	(x=0X80081F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80081FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008200);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008204);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8008208);
	create_insn	(0X8008212);
	create_insn	(x=0X8008222);
	op_hex		(x,	1);
	create_insn	(x=0X8008248);
	op_hex		(x,	1);
	create_insn	(0X8008262);
	create_insn	(x=0X8008264);
	op_hex		(x,	1);
	create_insn	(x=0X8008278);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8008286);
	create_insn	(0X8008298);
	create_insn	(0X80082A8);
	create_insn	(x=0X80082B0);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X80082B2);
	op_hex		(x,	1);
	create_insn	(x=0X80082BA);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(0X80082BE);
	create_insn	(x=0X80082C2);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X80082C4);
	op_hex		(x,	1);
	create_insn	(x=0X80082CC);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_dword	(0X80082D0);
	create_dword	(x=0X80082D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X80082D8);
	create_dword	(0X80082DC);
	create_dword	(x=0X80082E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X80082E4);
	create_insn	(x=0X80082E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008300);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008318);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8008332);
	create_insn	(x=0X8008364);
	op_hex		(x,	1);
	create_insn	(0X8008378);
	create_insn	(0X800838A);
	create_insn	(x=0X800838E);
	op_hex		(x,	1);
	create_insn	(0X8008396);
	create_insn	(x=0X8008398);
	op_hex		(x,	1);
	create_insn	(0X80083A0);
	create_insn	(x=0X80083A4);
	op_hex		(x,	1);
	create_insn	(0X80083AC);
	create_insn	(x=0X80083AE);
	op_hex		(x,	1);
	create_insn	(0X80083B6);
	create_insn	(0X80083C6);
	create_insn	(0X80083CE);
	create_insn	(x=0X80083D0);
	op_hex		(x,	1);
	create_insn	(0X80083D8);
	create_insn	(x=0X80083DE);
	op_hex		(x,	1);
	create_insn	(0X80083E8);
	create_insn	(0X80083EC);
	create_insn	(x=0X80083EE);
	op_hex		(x,	1);
	create_insn	(0X80083F6);
	create_insn	(x=0X80083FC);
	op_hex		(x,	1);
	create_insn	(0X8008406);
	create_insn	(0X800840A);
	create_insn	(x=0X800840E);
	op_hex		(x,	1);
	create_insn	(0X8008416);
	create_insn	(x=0X8008418);
	op_hex		(x,	1);
	create_insn	(0X8008420);
	create_insn	(x=0X8008426);
	op_hex		(x,	1);
	create_insn	(0X8008430);
	create_insn	(0X8008434);
	create_insn	(x=0X800843E);
	op_hex		(x,	1);
	create_insn	(0X800844C);
	create_insn	(x=0X8008450);
	op_hex		(x,	1);
	create_insn	(0X8008458);
	create_insn	(x=0X800845A);
	op_hex		(x,	1);
	create_insn	(0X8008462);
	create_insn	(0X8008494);
	create_insn	(0X80084D2);
	create_insn	(0X80084F6);
	create_insn	(0X800851A);
	create_insn	(x=0X800851E);
	op_hex		(x,	1);
	create_insn	(0X8008526);
	create_insn	(x=0X8008528);
	op_hex		(x,	1);
	create_insn	(0X8008530);
	create_insn	(x=0X8008538);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8008540);
	create_insn	(x=0X8008544);
	op_hex		(x,	1);
	create_insn	(0X800854C);
	create_insn	(x=0X800854E);
	op_hex		(x,	1);
	create_insn	(0X8008556);
	create_insn	(x=0X800855A);
	op_hex		(x,	1);
	create_insn	(0X8008562);
	create_insn	(x=0X8008564);
	op_hex		(x,	1);
	create_insn	(0X800856C);
	create_insn	(x=0X8008572);
	op_hex		(x,	1);
	create_insn	(0X800857C);
	create_insn	(x=0X8008580);
	op_hex		(x,	1);
	create_insn	(0X8008588);
	create_insn	(x=0X800858A);
	op_hex		(x,	1);
	create_insn	(0X8008592);
	create_insn	(x=0X8008596);
	op_hex		(x,	1);
	create_insn	(0X800859E);
	create_insn	(x=0X80085A0);
	op_hex		(x,	1);
	create_insn	(0X80085A8);
	create_insn	(x=0X80085AE);
	op_hex		(x,	1);
	create_insn	(0X80085B8);
	create_insn	(0X80085BC);
	create_insn	(0X80085F0);
	create_insn	(0X800863E);
	create_insn	(x=0X8008648);
	op_hex		(x,	1);
	create_insn	(0X8008656);
	create_insn	(0X800866A);
	create_insn	(0X8008686);
	create_insn	(0X8008696);
	create_insn	(0X800869C);
	create_insn	(x=0X80086A2);
	op_hex		(x,	1);
	create_insn	(0X80086AC);
	create_insn	(x=0X80086AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80086B4);
	op_hex		(x,	1);
	create_insn	(x=0X80086B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80086C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80086C6);
	op_hex		(x,	1);
	create_insn	(x=0X80086CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X80086D2,	0X2);
	create_dword	(x=0X80086D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80086D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80086DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X80086E0);
	create_dword	(0X80086E4);
	create_dword	(0X80086E8);
	create_insn	(0X80086EC);
	create_insn	(0X80086FA);
	create_insn	(0X80086FE);
	create_insn	(0X8008704);
	create_insn	(0X8008724);
	create_insn	(0X8008728);
	make_array	(0X8008732,	0X2);
	create_insn	(0X8008734);
	create_insn	(x=0X8008738);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8008752);
	create_insn	(0X8008766);
	create_insn	(x=0X8008770);
	op_hex		(x,	1);
	create_insn	(x=0X8008778);
	op_hex		(x,	1);
	create_insn	(0X8008780);
	create_insn	(x=0X8008784);
	op_hex		(x,	1);
	create_insn	(x=0X8008794);
	op_hex		(x,	1);
	create_insn	(0X800879E);
	create_insn	(x=0X80087A6);
	op_hex		(x,	1);
	create_insn	(0X80087AE);
	create_insn	(x=0X80087B0);
	op_hex		(x,	1);
	create_insn	(x=0X80087BE);
	op_hex		(x,	1);
	create_insn	(0X80087C6);
	create_insn	(x=0X80087C8);
	op_hex		(x,	1);
	create_insn	(x=0X80087D6);
	op_hex		(x,	1);
	create_insn	(0X80087DE);
	create_insn	(x=0X80087E0);
	op_hex		(x,	1);
	create_insn	(x=0X80087EE);
	op_hex		(x,	1);
	create_insn	(0X80087F6);
	create_insn	(x=0X80087F8);
	op_hex		(x,	1);
	create_insn	(x=0X8008806);
	op_hex		(x,	1);
	create_insn	(0X800880E);
	create_insn	(x=0X8008810);
	op_hex		(x,	1);
	create_insn	(x=0X800881E);
	op_hex		(x,	1);
	create_insn	(0X8008826);
	create_insn	(x=0X8008828);
	op_hex		(x,	1);
	create_insn	(x=0X800884E);
	op_hex		(x,	1);
	create_insn	(0X8008858);
	create_insn	(x=0X800885C);
	op_hex		(x,	1);
	create_insn	(x=0X800886C);
	op_hex		(x,	1);
	create_insn	(0X8008876);
	create_insn	(0X800887A);
	create_insn	(x=0X8008886);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800888A);
	op_hex		(x,	1);
	create_insn	(x=0X800888E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008892);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800889A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80088A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80088AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80088BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80088CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80088DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80088E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80088F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008906);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008916);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800891E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008926);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800892E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008938);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008940);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800894C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008954);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008960);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008968);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800896E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008972);
	op_hex		(x,	1);
	create_insn	(x=0X8008976);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800897C);
	create_insn	(x=0X800899C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80089A0);
	op_hex		(x,	1);
	create_insn	(x=0X80089A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80089B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80089C4);
	op_hex		(x,	1);
	create_insn	(0X80089CC);
	create_insn	(x=0X80089D0);
	op_hex		(x,	1);
	create_insn	(0X80089D8);
	create_insn	(x=0X80089DA);
	op_hex		(x,	1);
	create_insn	(0X80089E2);
	create_insn	(x=0X80089E6);
	op_hex		(x,	1);
	create_insn	(x=0X80089F2);
	op_hex		(x,	1);
	create_insn	(x=0X8008A02);
	op_hex		(x,	1);
	create_insn	(x=0X8008A12);
	op_hex		(x,	1);
	create_insn	(0X8008A1E);
	create_insn	(x=0X8008A20);
	op_hex		(x,	1);
	create_insn	(x=0X8008A2C);
	op_hex		(x,	1);
	create_insn	(x=0X8008A3C);
	op_hex		(x,	1);
	create_insn	(x=0X8008A4C);
	op_hex		(x,	1);
	create_insn	(0X8008A58);
	create_insn	(x=0X8008A60);
	op_hex		(x,	1);
	create_insn	(0X8008A6C);
	create_insn	(x=0X8008A6E);
	op_hex		(x,	1);
	create_insn	(0X8008A7C);
	create_insn	(x=0X8008A7E);
	op_hex		(x,	1);
	create_insn	(0X8008A8C);
	create_insn	(x=0X8008A9C);
	op_hex		(x,	1);
	create_insn	(0X8008ACE);
	create_insn	(x=0X8008AF2);
	op_hex		(x,	1);
	create_insn	(x=0X8008B02);
	op_hex		(x,	1);
	create_dword	(x=0X8008B34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008B38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8008B3C);
	create_insn	(x=0X8008B78);
	op_hex		(x,	1);
	create_insn	(0X8008B88);
	create_insn	(0X8008B9A);
	create_insn	(0X8008BA4);
	create_insn	(0X8008BAE);
	create_insn	(0X8008BB8);
	create_insn	(0X8008BD8);
	create_insn	(0X8008BEC);
	create_insn	(0X8008BF0);
	create_insn	(0X8008BF4);
	create_insn	(0X8008BF8);
	create_insn	(0X8008BFC);
	create_insn	(0X8008C00);
	create_insn	(0X8008C04);
	create_insn	(0X8008C08);
	create_insn	(0X8008C12);
	create_insn	(0X8008C1E);
	create_insn	(x=0X8008C20);
	op_hex		(x,	1);
	create_insn	(0X8008C28);
	create_insn	(x=0X8008C2A);
	op_hex		(x,	1);
	create_insn	(0X8008C32);
	create_insn	(x=0X8008C34);
	op_hex		(x,	1);
	create_insn	(0X8008C3C);
	create_insn	(0X8008C42);
	create_insn	(x=0X8008C4E);
	op_hex		(x,	1);
	create_insn	(0X8008C6E);
	create_insn	(x=0X8008C8C);
	op_hex		(x,	1);
	create_insn	(x=0X8008C9C);
	op_hex		(x,	1);
	create_insn	(x=0X8008D20);
	op_hex		(x,	1);
	create_insn	(0X8008D28);
	create_insn	(x=0X8008D2A);
	op_hex		(x,	1);
	create_insn	(0X8008D32);
	create_insn	(x=0X8008D36);
	op_hex		(x,	1);
	create_insn	(0X8008D3E);
	create_insn	(x=0X8008D40);
	op_hex		(x,	1);
	create_insn	(0X8008D48);
	create_insn	(x=0X8008D50);
	op_hex		(x,	1);
	create_insn	(0X8008D56);
	create_insn	(x=0X8008D5C);
	op_hex		(x,	1);
	create_insn	(0X8008D62);
	create_insn	(0X8008D66);
	create_insn	(x=0X8008D76);
	op_hex		(x,	1);
	create_insn	(x=0X8008D7A);
	op_hex		(x,	1);
	create_insn	(0X8008D82);
	create_insn	(x=0X8008D86);
	op_hex		(x,	1);
	create_insn	(x=0X8008D94);
	op_hex		(x,	1);
	create_insn	(0X8008DA0);
	create_insn	(0X8008DA4);
	create_insn	(x=0X8008DAA);
	op_hex		(x,	1);
	create_insn	(0X8008DB2);
	create_insn	(x=0X8008DB6);
	op_hex		(x,	1);
	create_insn	(x=0X8008DC2);
	op_hex		(x,	1);
	create_insn	(0X8008DCC);
	create_insn	(0X8008DD0);
	create_insn	(x=0X8008DD6);
	op_hex		(x,	1);
	create_insn	(x=0X8008DDA);
	op_hex		(x,	1);
	create_insn	(0X8008DE2);
	create_insn	(x=0X8008DE6);
	op_hex		(x,	1);
	create_insn	(x=0X8008DF4);
	op_hex		(x,	1);
	create_insn	(0X8008E00);
	create_insn	(0X8008E04);
	create_insn	(0X8008E08);
	create_insn	(x=0X8008E0E);
	op_hex		(x,	1);
	create_insn	(x=0X8008E12);
	op_hex		(x,	1);
	create_insn	(x=0X8008E1A);
	op_hex		(x,	1);
	create_insn	(0X8008E26);
	create_insn	(x=0X8008E30);
	op_hex		(x,	1);
	create_insn	(0X8008E38);
	create_insn	(x=0X8008E3C);
	op_hex		(x,	1);
	create_insn	(x=0X8008E4A);
	op_hex		(x,	1);
	create_insn	(0X8008E56);
	create_insn	(x=0X8008E5C);
	op_hex		(x,	1);
	create_insn	(0X8008E62);
	create_insn	(0X8008E6C);
	create_insn	(0X8008E78);
	create_insn	(0X8008E82);
	create_insn	(0X8008E8A);
	create_insn	(x=0X8008E90);
	op_hex		(x,	1);
	create_insn	(0X8008EA4);
	create_insn	(x=0X8008EA8);
	op_hex		(x,	1);
	create_insn	(0X8008EBC);
	create_insn	(x=0X8008EC0);
	op_hex		(x,	1);
	create_insn	(0X8008ED4);
	create_insn	(x=0X8008ED8);
	op_hex		(x,	1);
	create_insn	(0X8008EEC);
	create_insn	(0X8008EF0);
	create_insn	(0X8008EFE);
	create_insn	(0X8008F02);
	create_insn	(0X8008F10);
	create_insn	(x=0X8008F14);
	op_hex		(x,	1);
	create_insn	(x=0X8008F1E);
	op_hex		(x,	1);
	create_insn	(x=0X8008F28);
	op_hex		(x,	1);
	create_insn	(0X8008F32);
	create_insn	(0X8008F36);
	create_insn	(0X8008F42);
	create_insn	(0X8008F46);
	create_insn	(0X8008F70);
	make_array	(0X8008F7E,	0X2);
	create_dword	(0X8008F80);
	create_dword	(0X8008F84);
	create_dword	(0X8008F88);
	create_dword	(0X8008F8C);
	create_dword	(0X8008F90);
	create_dword	(0X8008F94);
	create_insn	(0X8008F98);
	create_insn	(0X8008FB4);
	create_insn	(0X8008FC2);
	create_insn	(0X8008FCE);
	create_insn	(0X8008FDA);
	create_insn	(0X8008FE6);
	create_insn	(0X8008FF2);
	create_insn	(0X8008FFE);
	create_insn	(0X800900A);
	create_insn	(0X8009016);
	create_insn	(0X8009022);
	create_insn	(0X800902E);
	create_insn	(0X800903A);
	create_insn	(0X800903C);
	create_insn	(0X8009048);
	create_insn	(0X8009054);
	create_insn	(0X8009056);
	create_insn	(0X8009062);
	create_insn	(0X800906E);
	create_insn	(0X8009074);
	create_insn	(0X800907A);
	create_insn	(0X8009096);
	create_insn	(0X80090A2);
	create_insn	(0X80090B8);
	create_insn	(0X80090C6);
	create_insn	(0X80090CC);
	create_insn	(0X80090D2);
	create_insn	(0X80090D8);
	create_insn	(0X80090DE);
	create_insn	(0X80090E4);
	create_insn	(0X80090EA);
	create_insn	(0X80090F0);
	create_insn	(0X80090F6);
	create_insn	(0X80090FC);
	create_insn	(0X8009102);
	create_insn	(0X800910C);
	create_insn	(0X8009116);
	create_dword	(0X800911C);
	create_insn	(0X8009120);
	create_insn	(x=0X8009134);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800913A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800913E);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X8009140);
	op_hex		(x,	1);
	create_insn	(x=0X8009144);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009148);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X800914C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009154);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009158);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X800915A);
	op_hex		(x,	1);
	create_insn	(x=0X800915E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009162);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X8009166);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800916E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009172);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X8009174);
	op_hex		(x,	1);
	create_insn	(x=0X8009178);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800917C);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X8009180);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009188);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800918C);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X800918E);
	op_hex		(x,	1);
	create_insn	(x=0X8009192);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009196);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X800919A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091A6);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X80091A8);
	op_hex		(x,	1);
	create_insn	(x=0X80091AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091B0);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X80091B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091C0);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X80091C2);
	op_hex		(x,	1);
	create_insn	(x=0X80091C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091CA);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X80091CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091DA);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X80091DC);
	op_hex		(x,	1);
	create_insn	(x=0X80091E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091E4);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X80091E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091F2);
	op_hex		(x,	1);
	create_insn	(x=0X80091FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009204);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800920A);
	op_hex		(x,	1);
	create_insn	(x=0X800920E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009216);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800921E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009224);
	op_hex		(x,	1);
	create_insn	(x=0X8009228);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009230);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009238);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800923E);
	op_hex		(x,	1);
	create_insn	(x=0X8009242);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800924A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009252);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009258);
	op_hex		(x,	1);
	create_insn	(x=0X800925C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009264);
	create_insn	(0X80092A0);
	create_insn	(0X80092BA);
	create_insn	(x=0X80092BE);
	op_hex		(x,	1);
	create_insn	(0X80092C6);
	create_insn	(0X80092D2);
	create_insn	(0X80092DC);
	create_insn	(0X80092E4);
	create_insn	(0X80092E8);
	create_insn	(0X80092F0);
	create_insn	(x=0X80092F6);
	op_hex		(x,	1);
	create_insn	(x=0X80092FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009304);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009312);
	create_insn	(x=0X8009316);
	op_hex		(x,	1);
	create_insn	(x=0X800931C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009324);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009328);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(0X800932C);
	create_insn	(x=0X8009332);
	op_hex		(x,	1);
	create_insn	(x=0X8009338);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009340);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800934E);
	create_insn	(x=0X8009352);
	op_hex		(x,	1);
	create_insn	(x=0X8009358);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009360);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009364);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_dword	(x=0X8009368);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800936C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8009370);
	create_insn	(x=0X8009372);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009384);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800938C);
	create_insn	(x=0X800938E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80093BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80093C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80093D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80093E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80093F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80093FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800940C);
	create_insn	(0X800941A);
	create_insn	(x=0X800942A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009432);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800943A);
	create_insn	(x=0X800943E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800944C);
	create_insn	(x=0X8009450);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009458);
	create_insn	(x=0X800945E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009466);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009476);
	create_insn	(x=0X800947A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X8009482,	0X2);
	create_dword	(x=0X8009484);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8009488);
	create_insn	(0X800948C);
	create_insn	(x=0X8009490);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009494);
	op_hex		(x,	1);
	create_insn	(x=0X800949E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80094A2);
	op_hex		(x,	1);
	create_insn	(x=0X80094A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80094B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80094B8);
	op_hex		(x,	1);
	create_insn	(x=0X80094BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80094CA);
	create_insn	(x=0X80094CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80094CE);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80094D2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80094D6);
	create_insn	(x=0X80094D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80094DA);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80094DE);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80094E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80094E4);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80094E6);
	op_hex		(x,	1);
	create_insn	(x=0X80094EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80094EC);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80094F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80094F2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80094F4);
	op_hex		(x,	1);
	create_insn	(x=0X80094F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80094FA);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80094FE);
	create_insn	(x=0X8009500);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009502);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009504);
	op_hex		(x,	1);
	create_insn	(x=0X800950E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009510);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009512);
	op_hex		(x,	1);
	create_insn	(x=0X800951C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800951E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009520);
	op_hex		(x,	1);
	create_insn	(0X800952A);
	create_insn	(0X800952E);
	create_insn	(0X800953C);
	create_insn	(0X8009554);
	create_insn	(x=0X8009568);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800956A);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800956C);
	op_hex		(x,	1);
	create_insn	(x=0X8009570);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009572);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009576);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009578);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800957A);
	op_hex		(x,	1);
	create_insn	(x=0X800957E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800958A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800958C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009594);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009596);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X800959C);
	create_insn	(x=0X80095AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80095B0);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80095B2);
	op_hex		(x,	1);
	create_insn	(x=0X80095B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80095B8);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80095BC);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80095BE);
	op_hex		(x,	1);
	create_insn	(x=0X80095C2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80095CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80095D0);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80095D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80095DA);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80095E0);
	create_insn	(0X80095EE);
	create_insn	(0X8009606);
	create_insn	(x=0X8009618);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800961A);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800961C);
	op_hex		(x,	1);
	create_insn	(x=0X8009620);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009622);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009626);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009628);
	op_hex		(x,	1);
	create_insn	(x=0X800962C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009638);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800963A);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009642);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009644);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X800964A);
	create_insn	(x=0X800964C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800964E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009650);
	op_hex		(x,	1);
	create_insn	(0X800965A);
	create_insn	(0X800965E);
	create_insn	(x=0X800967C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800967E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009682);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009686);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009688);
	op_hex		(x,	1);
	create_insn	(x=0X800968C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009690);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009692);
	op_hex		(x,	1);
	create_insn	(x=0X8009696);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80096A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80096A8);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80096B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80096B2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80096B6);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80096B8);
	op_hex		(x,	1);
	create_insn	(x=0X80096BC);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80096BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80096CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80096D0);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80096D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80096DA);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80096DE);
	create_insn	(x=0X80096E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80096E4);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80096EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80096EE);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80096F4);
	create_insn	(x=0X800970C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800970E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009710);
	op_hex		(x,	1);
	create_insn	(x=0X8009714);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009716);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009738);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800973A);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009742);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009744);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009748);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800974A);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009752);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009754);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X800975A);
	create_insn	(x=0X800976E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009770);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009772);
	op_hex		(x,	1);
	create_insn	(x=0X8009776);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009778);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009784);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009786);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800978E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009790);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X8009796);
	create_insn	(x=0X80097AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80097AE);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80097B2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80097B6);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80097B8);
	op_hex		(x,	1);
	create_insn	(x=0X80097BC);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80097CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80097CE);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80097D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80097D8);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80097DE);
	create_insn	(x=0X800980E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009810);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009814);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009818);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800981A);
	op_hex		(x,	1);
	create_insn	(x=0X800981E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009824);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800983A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009852);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800986C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009880);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009882);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_dword	(x=0X800988C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8009890);
	create_dword	(0X8009894);
	create_dword	(x=0X8009898);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800989C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800989E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80098A6);
	create_insn	(x=0X80098BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80098BE);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80098C2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80098C6);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80098C8);
	op_hex		(x,	1);
	create_insn	(x=0X80098CC);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80098D0);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80098D2);
	op_hex		(x,	1);
	create_insn	(x=0X80098D6);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80098E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80098E8);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80098F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80098F2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80098F6);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80098F8);
	op_hex		(x,	1);
	create_insn	(x=0X80098FC);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009902);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009908);
	create_insn	(x=0X800990A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800991C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800991E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009926);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009928);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X800992C);
	create_insn	(x=0X8009930);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009932);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800993A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800993C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X8009942);
	create_insn	(x=0X800994E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009950);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009954);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009962);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009964);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009966);
	op_hex		(x,	1);
	create_insn	(x=0X800996A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800996C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800996E);
	op_hex		(x,	1);
	create_insn	(x=0X8009976);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009988);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800998A);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009992);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009994);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800999A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800999C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80099A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80099A4);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80099A8);
	create_insn	(x=0X80099AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80099AE);
	op_hex		(x,	1);
	create_insn	(0X80099B8);
	create_insn	(0X80099BC);
	create_insn	(x=0X80099BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80099C0);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80099C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80099C6);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80099CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80099CC);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80099D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80099D2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80099D6);
	create_insn	(x=0X80099DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80099E0);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80099E2);
	op_hex		(x,	1);
	create_insn	(0X80099EC);
	create_insn	(x=0X80099F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80099F2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80099FC);
	create_insn	(x=0X8009A00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009A02);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X8009A06);
	create_insn	(x=0X8009A08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009A0A);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009A0C);
	op_hex		(x,	1);
	create_insn	(x=0X8009A16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009A18);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009A1A);
	op_hex		(x,	1);
	create_insn	(x=0X8009A24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009A26);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009A28);
	op_hex		(x,	1);
	create_insn	(0X8009A32);
	make_array	(0X8009A36,	0X2);
	create_dword	(x=0X8009A38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8009A3C);
	create_dword	(0X8009A40);
	create_dword	(x=0X8009A44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8009A48);
	create_insn	(x=0X8009A4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009A64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009A7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009A94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009AAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009AC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009ADC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009AF4);
	create_insn	(0X8009B08);
	create_insn	(x=0X8009B1E);
	op_hex		(x,	1);
	create_insn	(x=0X8009B26);
	op_hex		(x,	1);
	create_insn	(0X8009B44);
	create_insn	(0X8009B84);
	create_insn	(0X8009BB2);
	create_insn	(0X8009C1A);
	create_insn	(0X8009C2A);
	create_insn	(0X8009C38);
	create_insn	(0X8009C3C);
	create_insn	(0X8009C44);
	create_insn	(0X8009C52);
	create_insn	(0X8009C56);
	create_insn	(0X8009C5E);
	create_insn	(0X8009C62);
	create_insn	(0X8009C66);
	create_insn	(0X8009C6C);
	create_insn	(0X8009C70);
	create_insn	(0X8009C74);
	create_insn	(0X8009C86);
	create_insn	(x=0X8009C8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009C9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009CA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009CA2);
	op_plain_offset	(x,	1,	0X42200000);
	op_plain_offset	(x,	129,	0X42200000);
	create_insn	(0X8009CA6);
	create_insn	(x=0X8009CB2);
	op_hex		(x,	1);
	create_insn	(x=0X8009CBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009CBE);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X8009CC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009CC4);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X8009CCC);
	op_hex		(x,	1);
	create_insn	(x=0X8009CD6);
	op_hex		(x,	1);
	create_insn	(x=0X8009CDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009CDC);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X8009CDE);
	op_hex		(x,	1);
	create_insn	(x=0X8009CE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009CE4);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X8009CE8);
	op_hex		(x,	1);
	create_insn	(x=0X8009CFA);
	op_hex		(x,	1);
	create_insn	(0X8009D00);
	create_insn	(x=0X8009D0A);
	op_hex		(x,	1);
	create_insn	(x=0X8009D1A);
	op_hex		(x,	1);
	create_insn	(x=0X8009D24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009D26);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X8009D2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009D2C);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(0X8009D30);
	create_insn	(x=0X8009D3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009D4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009D66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009D72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X8009D78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009D7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009D80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009D84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009D88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009D8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009D90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009D94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009D98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009D9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X8009DA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009DA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009DA8);
	op_plain_offset	(x,	1,	0X40003000);
	op_plain_offset	(x,	129,	0X40003000);
	create_insn	(x=0X8009DAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009DAE);
	op_plain_offset	(x,	1,	0X40003000);
	op_plain_offset	(x,	129,	0X40003000);
	create_insn	(0X8009DB2);
	create_insn	(x=0X8009DB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009DBC);
	create_insn	(x=0X8009DC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009DC6);
	create_insn	(x=0X8009DCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009DCC);
	op_plain_offset	(x,	1,	0X40003000);
	op_plain_offset	(x,	129,	0X40003000);
	create_insn	(0X8009DD6);
	make_array	(0X8009DDA,	0X2);
	create_dword	(x=0X8009DDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X8009DE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009DE4);
	op_hex		(x,	1);
	create_insn	(x=0X8009DE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009DEE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009DF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009DF6);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009E00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009E08);
	op_hex		(x,	1);
	create_insn	(x=0X8009E10);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009E12);
	op_hex		(x,	1);
	create_insn	(x=0X8009E16);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009E1C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009E20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009E24);
	op_hex		(x,	1);
	create_insn	(x=0X8009E28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009E30);
	op_hex		(x,	1);
	create_insn	(x=0X8009E44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009E48);
	op_hex		(x,	1);
	create_insn	(x=0X8009E4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009E52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009E56);
	op_hex		(x,	1);
	create_insn	(x=0X8009E5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009E60);
	create_insn	(0X8009E66);
	create_insn	(x=0X8009E76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009E7C);
	create_insn	(x=0X8009E80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009E82);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009E86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009E88);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009E8A);
	op_hex		(x,	1);
	create_insn	(0X8009E9A);
	create_insn	(0X8009E9E);
	create_insn	(0X8009ED0);
	create_insn	(0X8009ED6);
	create_insn	(x=0X8009EDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009EDE);
	op_hex		(x,	1);
	create_insn	(x=0X8009EEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009EF0);
	create_insn	(x=0X8009EF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009EF6);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009EF8);
	op_hex		(x,	1);
	create_insn	(x=0X8009F02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F04);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F0A);
	op_plain_offset	(x,	1,	0X42420000);
	op_plain_offset	(x,	129,	0X42420000);
	create_insn	(0X8009F0E);
	create_insn	(x=0X8009F12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F14);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F16);
	op_hex		(x,	1);
	create_insn	(x=0X8009F1C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F22);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F24);
	op_hex		(x,	1);
	create_insn	(0X8009F2A);
	create_insn	(x=0X8009F2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F30);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F32);
	op_hex		(x,	1);
	create_insn	(x=0X8009F38);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X8009F3C);
	create_insn	(x=0X8009F40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F42);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F44);
	op_hex		(x,	1);
	create_insn	(x=0X8009F4A);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X8009F4E);
	create_insn	(x=0X8009F52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F54);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F56);
	op_hex		(x,	1);
	create_insn	(x=0X8009F5E);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X8009F62);
	create_insn	(x=0X8009F64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F66);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F6C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F72);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F78);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009F82);
	create_insn	(x=0X8009F86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F88);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009F8A);
	op_hex		(x,	1);
	create_insn	(x=0X8009F90);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X8009F94);
	create_insn	(x=0X8009F96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F9C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X8009FAA);
	create_insn	(x=0X8009FAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009FB2);
	create_insn	(x=0X8009FB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009FBA);
	create_insn	(x=0X8009FC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009FC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009FC8);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009FCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009FCE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009FD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009FDA);
	create_insn	(x=0X8009FE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009FE6);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009FE8);
	op_hex		(x,	1);
	create_insn	(0X8009FF8);
	create_insn	(0X8009FFE);
	create_insn	(x=0X800A004);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A006);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A008);
	op_hex		(x,	1);
	create_insn	(x=0X800A00C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A00E);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A010);
	op_hex		(x,	1);
	create_insn	(x=0X800A024);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A026);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A028);
	op_hex		(x,	1);
	create_insn	(0X800A036);
	create_insn	(0X800A03E);
	create_insn	(x=0X800A046);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A048);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A04A);
	op_hex		(x,	1);
	create_insn	(x=0X800A050);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A05A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A05C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A05E);
	op_hex		(x,	1);
	create_insn	(x=0X800A06E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A070);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A072);
	op_hex		(x,	1);
	create_insn	(x=0X800A082);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A084);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A086);
	op_hex		(x,	1);
	create_insn	(x=0X800A08C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A09A);
	create_insn	(x=0X800A09C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A09E);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0A4);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0AA);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0B0);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X800A0B4);
	create_insn	(x=0X800A0B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0B8);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0BE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0C4);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0CA);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X800A0CE);
	create_insn	(x=0X800A0D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0D2);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0D8);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0DE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0E4);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X800A0E8);
	create_insn	(x=0X800A0EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0EC);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0F2);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0F8);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A0FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0FE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X800A102);
	create_insn	(x=0X800A104);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A106);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A10A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A10C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A110);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A112);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A116);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A118);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A11C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A124);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A126);
	op_plain_offset	(x,	1,	0X42420000);
	op_plain_offset	(x,	129,	0X42420000);
	create_insn	(x=0X800A12A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A12C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A130);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A132);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800A134);
	op_hex		(x,	1);
	create_insn	(x=0X800A138);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A13A);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X800A13E);
	create_insn	(x=0X800A142);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A144);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X800A14E);
	create_insn	(x=0X800A152);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A154);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_dword	(x=0X800A158);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800A15C);
	create_dword	(0X800A160);
	create_dword	(x=0X800A164);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A168);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A16C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A170);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800A174);
	create_dword	(0X800A178);
	create_dword	(0X800A17C);
	create_dword	(0X800A180);
	create_dword	(x=0X800A184);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A188);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800A18C);
	create_insn	(x=0X800A190);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A1A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A1C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A1D8);
	create_insn	(x=0X800A1DE);
	op_hex		(x,	1);
	create_insn	(0X800A214);
	create_insn	(0X800A24C);
	create_insn	(0X800A256);
	create_insn	(x=0X800A25A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A262);
	create_insn	(0X800A28C);
	create_insn	(x=0X800A2AA);
	op_hex		(x,	1);
	create_insn	(x=0X800A2E4);
	op_hex		(x,	1);
	create_insn	(0X800A2F6);
	create_insn	(0X800A30E);
	create_insn	(0X800A322);
	create_insn	(x=0X800A326);
	op_hex		(x,	1);
	create_insn	(0X800A32E);
	create_insn	(0X800A33A);
	create_insn	(x=0X800A33E);
	op_hex		(x,	1);
	create_insn	(0X800A346);
	create_insn	(0X800A352);
	create_insn	(0X800A36A);
	create_insn	(0X800A372);
	create_insn	(0X800A37C);
	create_insn	(0X800A384);
	create_insn	(0X800A388);
	create_insn	(0X800A38E);
	create_insn	(x=0X800A398);
	op_hex		(x,	1);
	create_insn	(0X800A3A0);
	create_insn	(0X800A3AC);
	create_insn	(x=0X800A3B0);
	op_hex		(x,	1);
	create_insn	(0X800A3B8);
	create_insn	(0X800A3C4);
	create_insn	(0X800A3D6);
	create_insn	(x=0X800A3D8);
	op_hex		(x,	1);
	create_insn	(0X800A3E0);
	create_insn	(x=0X800A3E4);
	op_hex		(x,	1);
	create_insn	(0X800A3EC);
	create_insn	(0X800A3F8);
	create_insn	(0X800A404);
	create_insn	(0X800A408);
	create_insn	(0X800A40E);
	create_insn	(x=0X800A416);
	op_hex		(x,	1);
	create_insn	(0X800A41E);
	create_insn	(0X800A42A);
	create_insn	(0X800A438);
	create_insn	(0X800A43C);
	create_insn	(0X800A442);
	create_insn	(x=0X800A44E);
	op_hex		(x,	1);
	create_insn	(0X800A472);
	create_insn	(0X800A476);
	create_insn	(x=0X800A47A);
	op_hex		(x,	1);
	make_array	(0X800A48A,	0X2);
	create_dword	(x=0X800A48C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A490);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A494);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800A498);
	create_insn	(x=0X800A49C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A4B4);
	create_insn	(x=0X800A4CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A4E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A4FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A514);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A52C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A544);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A55C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A576);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A590);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A5AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A5C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A5DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A5F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A60C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A626);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A640);
	create_insn	(x=0X800A644);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A64A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A692);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A698);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A69E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A6A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A6AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A6BA);
	create_insn	(x=0X800A6EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A6F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A6F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A6FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A704);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A73E);
	create_insn	(x=0X800A784);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A78A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A7D8);
	create_insn	(x=0X800A81A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A820);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A86E);
	make_array	(0X800A896,	0X2);
	create_dword	(x=0X800A898);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A89C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A8D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800A8D8);
	create_insn	(x=0X800A8F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A8FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A924);
	create_insn	(0X800A93E);
	create_insn	(x=0X800A97C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A982);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A98E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A994);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A99A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A9A6);
	op_hex		(x,	1);
	create_insn	(0X800A9AE);
	create_insn	(x=0X800A9B4);
	op_hex		(x,	1);
	create_insn	(0X800A9C0);
	create_insn	(0X800A9D2);
	create_insn	(x=0X800AA08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AA0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AA32);
	op_hex		(x,	1);
	create_insn	(0X800AA3A);
	create_insn	(x=0X800AA40);
	op_hex		(x,	1);
	create_insn	(0X800AA4C);
	create_insn	(0X800AA66);
	create_insn	(x=0X800AAA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AAAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AACE);
	op_hex		(x,	1);
	create_insn	(0X800AAD6);
	create_insn	(x=0X800AADC);
	op_hex		(x,	1);
	create_insn	(0X800AAE8);
	create_insn	(0X800AAFA);
	create_insn	(x=0X800AB22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AB28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AB4C);
	op_hex		(x,	1);
	create_insn	(0X800AB54);
	create_insn	(x=0X800AB5A);
	op_hex		(x,	1);
	create_insn	(0X800AB66);
	create_insn	(x=0X800AB6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AB72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800AB92);
	create_insn	(0X800ABAE);
	create_insn	(0X800ABCA);
	create_insn	(0X800ABE6);
	create_insn	(0X800ABFC);
	create_insn	(0X800AC10);
	create_insn	(0X800AC1C);
	create_insn	(0X800AC4C);
	create_insn	(0X800AC78);
	create_insn	(0X800AC98);
	create_insn	(0X800ACAA);
	create_insn	(0X800ACBE);
	create_insn	(0X800ACD0);
	make_array	(0X800ACE2,	0X2);
	create_dword	(x=0X800ACE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800ACE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800ACEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800ACF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800ACF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800ACF8);
	create_insn	(x=0X800ACFC);
	op_hex		(x,	1);
	create_insn	(0X800AD04);
	create_insn	(0X800AD10);
	create_insn	(x=0X800AD16);
	op_hex		(x,	1);
	create_insn	(0X800AD20);
	create_insn	(0X800AD2E);
	create_insn	(0X800AD38);
	create_insn	(0X800AD40);
	create_insn	(0X800AD44);
	create_insn	(0X800AD4E);
	create_insn	(0X800AD58);
	create_insn	(0X800AD60);
	create_insn	(0X800AD6C);
	create_insn	(0X800AD7E);
	create_insn	(x=0X800AD8E);
	op_hex		(x,	1);
	create_insn	(0X800AD96);
	create_insn	(0X800ADB4);
	create_insn	(x=0X800ADCA);
	op_hex		(x,	1);
	create_insn	(0X800ADD4);
	create_insn	(0X800ADF0);
	create_insn	(x=0X800AE12);
	op_hex		(x,	1);
	create_insn	(x=0X800AE1C);
	op_hex		(x,	1);
	create_insn	(0X800AE26);
	create_insn	(x=0X800AE3E);
	op_hex		(x,	1);
	create_insn	(0X800AE46);
	create_insn	(0X800AE4C);
	create_insn	(0X800AE5E);
	create_insn	(0X800AEA0);
	create_insn	(0X800AEB2);
	create_insn	(0X800AECC);
	create_insn	(0X800AEDE);
	create_insn	(0X800AEF8);
	create_insn	(x=0X800AEFC);
	op_hex		(x,	1);
	create_insn	(0X800AF04);
	create_insn	(0X800AF10);
	create_insn	(x=0X800AF14);
	op_hex		(x,	1);
	create_insn	(0X800AF1C);
	create_insn	(0X800AF28);
	create_insn	(x=0X800AF2C);
	op_hex		(x,	1);
	create_insn	(0X800AF34);
	create_insn	(0X800AF40);
	create_insn	(x=0X800AF44);
	op_hex		(x,	1);
	create_insn	(0X800AF4C);
	create_insn	(0X800AF58);
	create_insn	(0X800AF6A);
	create_insn	(0X800AF84);
	create_insn	(0X800AF96);
	create_insn	(0X800AFB0);
	create_insn	(0X800AFC2);
	create_insn	(0X800AFDC);
	create_insn	(0X800AFEE);
	create_insn	(0X800B008);
	create_insn	(0X800B01A);
	create_insn	(0X800B032);
	create_insn	(0X800B044);
	create_insn	(0X800B05C);
	create_insn	(0X800B06E);
	create_insn	(0X800B080);
	create_insn	(0X800B09A);
	create_insn	(0X800B0B4);
	create_insn	(0X800B0CE);
	create_insn	(0X800B0E8);
	create_insn	(0X800B102);
	create_insn	(0X800B120);
	create_insn	(0X800B13E);
	create_insn	(x=0X800B162);
	op_hex		(x,	1);
	create_insn	(0X800B170);
	create_insn	(x=0X800B17A);
	op_hex		(x,	1);
	create_insn	(0X800B190);
	create_insn	(x=0X800B194);
	op_hex		(x,	1);
	create_insn	(0X800B19C);
	create_insn	(0X800B1A8);
	create_insn	(x=0X800B1AC);
	op_hex		(x,	1);
	create_insn	(0X800B1B4);
	create_insn	(0X800B1C0);
	create_insn	(x=0X800B1C4);
	op_hex		(x,	1);
	create_insn	(0X800B1CC);
	create_insn	(0X800B1D8);
	create_insn	(0X800B1EA);
	create_insn	(0X800B1FC);
	create_insn	(0X800B20E);
	create_insn	(0X800B220);
	create_insn	(0X800B224);
	create_insn	(0X800B228);
	create_insn	(0X800B22C);
	create_insn	(0X800B230);
	create_insn	(0X800B234);
	create_insn	(0X800B23A);
	create_insn	(0X800B24C);
	create_insn	(0X800B252);
	create_insn	(0X800B258);
	create_insn	(0X800B25E);
	create_insn	(0X800B266);
	create_insn	(0X800B26C);
	create_insn	(0X800B272);
	create_insn	(0X800B280);
	create_insn	(0X800B284);
	create_insn	(0X800B28A);
	create_insn	(0X800B2A8);
	create_insn	(0X800B2AC);
	make_array	(0X800B2B2,	0X2);
	create_insn	(0X800B2B4);
	create_insn	(x=0X800B2B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B2D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B2EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B306);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B320);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B33A);
	create_insn	(x=0X800B388);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B38E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B394);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B39A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B3A0);
	op_hex		(x,	1);
	create_insn	(0X800B3B8);
	create_insn	(x=0X800B3DA);
	op_hex		(x,	1);
	create_insn	(x=0X800B3EA);
	op_hex		(x,	1);
	create_insn	(0X800B3F2);
	create_insn	(x=0X800B3FE);
	op_hex		(x,	1);
	create_insn	(0X800B40C);
	create_insn	(0X800B424);
	create_insn	(0X800B446);
	create_insn	(0X800B452);
	create_insn	(x=0X800B456);
	op_hex		(x,	1);
	create_insn	(0X800B45E);
	create_insn	(0X800B46A);
	create_insn	(x=0X800B486);
	op_hex		(x,	1);
	create_insn	(0X800B498);
	create_insn	(0X800B4A0);
	create_insn	(0X800B4AC);
	create_insn	(0X800B4B4);
	create_insn	(0X800B4BE);
	create_insn	(0X800B4C6);
	create_insn	(0X800B4D8);
	create_insn	(0X800B4EA);
	create_insn	(x=0X800B4EE);
	op_hex		(x,	1);
	create_insn	(0X800B4F6);
	create_insn	(0X800B502);
	create_insn	(0X800B514);
	create_insn	(x=0X800B518);
	op_hex		(x,	1);
	create_insn	(0X800B520);
	create_insn	(0X800B52C);
	create_insn	(0X800B534);
	create_insn	(0X800B53E);
	create_insn	(x=0X800B540);
	op_hex		(x,	1);
	create_insn	(0X800B548);
	create_insn	(0X800B558);
	create_insn	(x=0X800B55A);
	op_hex		(x,	1);
	create_insn	(0X800B568);
	create_insn	(x=0X800B56C);
	op_hex		(x,	1);
	create_insn	(0X800B574);
	create_insn	(0X800B580);
	create_insn	(x=0X800B584);
	op_hex		(x,	1);
	create_insn	(0X800B58C);
	create_insn	(0X800B598);
	create_insn	(x=0X800B59C);
	op_hex		(x,	1);
	create_insn	(0X800B5A4);
	create_insn	(0X800B5B0);
	create_insn	(x=0X800B5B4);
	op_hex		(x,	1);
	create_insn	(0X800B5BC);
	create_insn	(0X800B5C6);
	create_insn	(x=0X800B5CA);
	op_hex		(x,	1);
	create_insn	(0X800B5D2);
	create_insn	(0X800B5DE);
	create_insn	(0X800B5F0);
	create_insn	(x=0X800B5F4);
	op_hex		(x,	1);
	create_insn	(0X800B5FC);
	create_insn	(0X800B608);
	create_insn	(0X800B61E);
	create_insn	(x=0X800B622);
	op_hex		(x,	1);
	create_insn	(0X800B634);
	create_insn	(x=0X800B64E);
	op_hex		(x,	1);
	create_insn	(0X800B662);
	create_insn	(0X800B66C);
	create_insn	(0X800B684);
	create_insn	(0X800B688);
	make_array	(0X800B6A6,	0X2);
	create_dword	(x=0X800B6A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B6AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B6B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B6B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B6B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800B6BC);
	create_insn	(0X800B6C8);
	create_insn	(x=0X800B6D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B6D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B6DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B6E0);
	op_stkvar	(x,	1);
	create_insn	(0X800B6EC);
	create_insn	(0X800B704);
	create_insn	(x=0X800B712);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B72A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B730);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B73E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B746);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B74E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B758);
	create_insn	(x=0X800B75A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B762);
	create_insn	(x=0X800B76E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B786);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B78C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B79A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B7A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B7AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B7BA);
	create_insn	(x=0X800B7BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B7C6);
	create_insn	(x=0X800B7D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B7D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B7E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B7EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B7FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B800);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B812);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B81C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B828);
	create_insn	(x=0X800B82E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B83A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B840);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B84A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B852);
	create_insn	(x=0X800B868);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B86E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B872);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B874);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B876);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B87A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B87E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B882);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B886);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B88A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B88C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B88E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B894);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B898);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B89A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B89C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B8A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B8B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B8BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B8C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B8C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B8C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B8CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B8D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B8D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B8D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B8DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B8DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B8E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B8E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B8EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B8EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B8EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B8F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B90E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B914);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B91A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B91E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B920);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B92A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B930);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B934);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B936);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B93C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B946);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B94A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B94E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B952);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B956);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B95C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B960);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B962);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B978);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B984);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B990);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B99A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B9A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B9AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B9C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B9CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B9CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B9D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BA04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BA1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA20);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA26);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BA36);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA40);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BA48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BA52);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA56);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA62);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA68);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BA84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BA8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BA96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BAA0);
	create_insn	(x=0X800BAB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BABC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BAC2);
	create_insn	(x=0X800BAC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BADA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BADE);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X800BAE0);
	op_hex		(x,	1);
	create_insn	(x=0X800BAE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BAFE);
	create_dword	(x=0X800BB00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800BB34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BB3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BB46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BB4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BB56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BB5C);
	create_insn	(x=0X800BB60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BB68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BB6E);
	create_insn	(x=0X800BB72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BB86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BB8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BB8E);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X800BB90);
	op_hex		(x,	1);
	create_insn	(x=0X800BB96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BBAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BBB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BBC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BBCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800BBD6,	0X2);
	create_dword	(x=0X800BBD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BBDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BBE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BBE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BBE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BBEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BBF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800BBF4);
	create_insn	(x=0X800BBFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BC0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BC18);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC20);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC28);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BC4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BC58);
	create_insn	(x=0X800BC66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BC7C);
	create_insn	(x=0X800BC82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BC8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC90);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC94);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BCA2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BCAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BCBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BCBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BCC6);
	create_insn	(x=0X800BCCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BCDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BCE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BCEA);
	create_insn	(x=0X800BCFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD00);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD04);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BD10);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD16);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD20);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BD30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BD3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD44);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD48);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD52);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD56);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD64);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD70);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BD76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BD80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BD9E);
	create_insn	(x=0X800BDA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BDB0);
	create_insn	(x=0X800BDB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BDC0);
	create_insn	(x=0X800BDCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BDEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BDF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BDFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BE02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BE0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BE14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BE18);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BE1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BE24);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BE2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BE3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BE44);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BE48);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BE4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BE54);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BE5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BE66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BE6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BE74);
	create_insn	(0X800BE88);
	create_insn	(x=0X800BE98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BEB0);
	create_insn	(x=0X800BEBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BEC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BEC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BECA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BED0);
	op_stkvar	(x,	1);
	create_insn	(0X800BED8);
	create_insn	(x=0X800BEDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BEEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BEEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BEF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BF04);
	create_dword	(x=0X800BF0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BF24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800BF28);
	create_insn	(0X800BF2E);
	create_insn	(x=0X800BF3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BF40);
	op_hex		(x,	1);
	create_insn	(x=0X800BF46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BF50);
	create_insn	(x=0X800BF5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BF62);
	op_hex		(x,	1);
	create_insn	(x=0X800BF68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BF72);
	create_insn	(x=0X800BF8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BF90);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BF96);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BF9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BFA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BFAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BFB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BFBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BFC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BFC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BFDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BFE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BFE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BFEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BFF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BFF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BFFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C004);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C00A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C00E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C010);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C01A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C02C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C032);
	op_hex		(x,	1);
	create_insn	(x=0X800C036);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C03E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C044);
	op_hex		(x,	1);
	create_insn	(x=0X800C048);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800C050);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C054);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C058);
	create_insn	(x=0X800C064);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C06A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C070);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C076);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C07E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C086);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C08E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C094);
	create_insn	(x=0X800C098);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C0A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C0A6);
	create_insn	(x=0X800C0A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C0B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C0B6);
	op_hex		(x,	1);
	create_insn	(0X800C0C0);
	create_insn	(0X800C0C4);
	create_insn	(x=0X800C0CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C0D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C0D8);
	create_insn	(x=0X800C0DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800C0E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C0E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C0E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C0EC);
	create_insn	(x=0X800C0FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C100);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C106);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C10C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C116);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C11E);
	op_hex		(x,	1);
	create_insn	(x=0X800C124);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C12A);
	op_hex		(x,	1);
	create_insn	(x=0X800C12E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C134);
	op_hex		(x,	1);
	create_insn	(x=0X800C13A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C140);
	op_hex		(x,	1);
	create_insn	(x=0X800C144);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C14C);
	op_hex		(x,	1);
	create_insn	(x=0X800C152);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C158);
	op_hex		(x,	1);
	create_insn	(x=0X800C15C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C162);
	op_hex		(x,	1);
	create_insn	(x=0X800C168);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C16E);
	op_hex		(x,	1);
	create_insn	(x=0X800C172);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C17A);
	op_hex		(x,	1);
	create_insn	(x=0X800C180);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C186);
	op_hex		(x,	1);
	create_insn	(x=0X800C18A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C190);
	op_hex		(x,	1);
	create_insn	(x=0X800C196);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C19C);
	op_hex		(x,	1);
	create_insn	(x=0X800C1A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800C1A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C1AC);
	create_insn	(x=0X800C1B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C1BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C1C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C1CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C1D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C1DA);
	create_insn	(x=0X800C1DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C1EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C1F0);
	op_hex		(x,	1);
	create_insn	(x=0X800C1F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C202);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C208);
	op_hex		(x,	1);
	create_insn	(x=0X800C20C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C21C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C220);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C228);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C22E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C232);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C238);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C240);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C246);
	op_hex		(x,	1);
	create_insn	(x=0X800C24A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800C252,	0X2);
	create_dword	(x=0X800C254);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C258);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C25C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C260);
	create_insn	(x=0X800C264);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C26E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C274);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C27A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C282);
	create_insn	(x=0X800C290);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C296);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C29C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C2A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C2A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C2B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C2C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C2CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C2D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C2D4);
	op_hex		(x,	1);
	create_insn	(x=0X800C2D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C2DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C2E2);
	op_hex		(x,	1);
	create_insn	(x=0X800C2E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C2EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C2F0);
	op_hex		(x,	1);
	create_insn	(x=0X800C2F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C2FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C300);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C304);
	op_hex		(x,	1);
	create_insn	(x=0X800C308);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800C30E,	0X2);
	create_dword	(x=0X800C310);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C314);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C318);
	create_insn	(x=0X800C31E);
	op_hex		(x,	1);
	create_insn	(0X800C32A);
	create_insn	(x=0X800C33E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C346);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C34E);
	create_insn	(x=0X800C360);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C366);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C36E);
	create_insn	(x=0X800C380);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C386);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C38E);
	create_insn	(x=0X800C3A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C3A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C3B2);
	create_insn	(0X800C3CA);
	create_insn	(x=0X800C3DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C3E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C3E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C3EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C3EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C3FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C400);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C408);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C41A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C42C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C43E);
	op_stkvar	(x,	1);
	create_insn	(0X800C46E);
	create_insn	(x=0X800C47E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C484);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C48A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C490);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C49A);
	create_insn	(x=0X800C4A0);
	op_hex		(x,	1);
	create_insn	(0X800C4AC);
	create_insn	(x=0X800C4B2);
	op_hex		(x,	1);
	create_insn	(x=0X800C4BE);
	op_plain_offset	(x,	1,	0X40000000);
	op_plain_offset	(x,	129,	0X40000000);
	create_insn	(x=0X800C4C4);
	op_hex		(x,	1);
	create_dword	(x=0X800C4CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C4D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C4D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C4D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C4DC);
	create_insn	(x=0X800C4E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C4EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C4F2);
	create_insn	(x=0X800C4FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C504);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C50A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C50E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C510);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C520);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C524);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C52A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C530);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C546);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C54C);
	create_insn	(0X800C556);
	create_insn	(x=0X800C55A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C55E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C564);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C56A);
	op_stkvar	(x,	1);
	create_insn	(0X800C576);
	create_insn	(x=0X800C57A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C57E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C582);
	op_stkvar	(x,	1);
	make_array	(0X800C58E,	0X2);
	create_dword	(x=0X800C590);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C594);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800C598);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C59C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5AE);
	op_hex		(x,	1);
	create_insn	(x=0X800C5B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5BA);
	op_hex		(x,	1);
	create_insn	(x=0X800C5BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5D0);
	op_hex		(x,	1);
	create_insn	(x=0X800C5D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5DC);
	op_hex		(x,	1);
	create_insn	(x=0X800C5E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5F0);
	op_hex		(x,	1);
	create_insn	(x=0X800C5F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C5FC);
	op_hex		(x,	1);
	create_insn	(x=0X800C604);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C60C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C610);
	op_hex		(x,	1);
	create_insn	(x=0X800C614);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C61C);
	op_hex		(x,	1);
	create_insn	(x=0X800C622);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C626);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C62A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C62E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C634);
	create_insn	(x=0X800C640);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C646);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C64C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C652);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C65E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C664);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C676);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C67C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800C682,	0X2);
	create_dword	(x=0X800C684);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C688);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C68C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C690);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C694);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C698);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C69C);
	create_insn	(x=0X800C6A8);
	op_stkvar	(x,	1);
	create_insn	(0X800C6AC);
	create_insn	(x=0X800C6B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C6C2);
	op_stkvar	(x,	1);
	create_insn	(0X800C6CE);
	create_insn	(0X800C6D6);
	create_insn	(0X800C6E4);
	create_insn	(x=0X800C6F8);
	op_stkvar	(x,	1);
	create_insn	(0X800C716);
	create_insn	(x=0X800C71A);
	op_stkvar	(x,	1);
	create_insn	(0X800C726);
	create_insn	(x=0X800C72A);
	op_stkvar	(x,	1);
	create_insn	(0X800C734);
	create_insn	(x=0X800C748);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C74A);
	op_stkvar	(x,	1);
	create_insn	(0X800C75C);
	create_insn	(0X800C760);
	create_insn	(x=0X800C768);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C778);
	op_stkvar	(x,	1);
	create_insn	(0X800C782);
	create_insn	(0X800C792);
	create_insn	(0X800C7AC);
	create_insn	(0X800C7B0);
	create_insn	(0X800C7BA);
	create_insn	(0X800C7D2);
	create_insn	(0X800C7EA);
	make_array	(0X800C7FA,	0X2);
	create_insn	(0X800C7FC);
	create_insn	(0X800C81A);
	create_insn	(0X800C83A);
	create_insn	(0X800C842);
	create_insn	(x=0X800C844);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C84C);
	create_insn	(0X800C854);
	create_insn	(x=0X800C856);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C85C);
	create_insn	(x=0X800C85E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800C864);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C868);
	create_insn	(x=0X800C880);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C886);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C88A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C88C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C892);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C89A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C89C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C8A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C8A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C8AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C8B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C8BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C8C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C8CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C8D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C8DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C8EC);
	create_insn	(x=0X800C8F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C8FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C906);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C910);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C918);
	create_insn	(x=0X800C95E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C966);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C96A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C984);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C990);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C998);
	op_hex		(x,	1);
	create_insn	(x=0X800C9A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C9AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C9B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800C9BA,	0X2);
	create_dword	(x=0X800C9BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C9C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800C9C4);
	create_dword	(0X800C9C8);
	create_dword	(0X800C9CC);
	create_dword	(0X800C9D0);
	create_dword	(x=0X800C9D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C9D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800C9DC);
	create_dword	(x=0X800C9E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C9E4);
	set_name	(0X800C9E4,	"nullsub_1");
	create_insn	(0X800C9E6);
	create_insn	(0X800C9E8);
	create_insn	(0X800C9EA);
	create_insn	(0X800C9EC);
	create_insn	(x=0X800C9F0);
	op_hex		(x,	1);
	make_array	(0X800CA0A,	0X2);
	create_dword	(x=0X800CA0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800CA10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA14);
	op_hex		(x,	1);
	create_insn	(x=0X800CA18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA22);
	op_hex		(x,	1);
	create_insn	(x=0X800CA26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CA2C);
	create_insn	(x=0X800CA38);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CA3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CA44);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CA4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800CA58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800CA5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CA62);
	create_insn	(x=0X800CA66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA6A);
	op_hex		(x,	1);
	create_insn	(x=0X800CA6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CA7A);
	create_insn	(x=0X800CA7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA82);
	op_hex		(x,	1);
	create_insn	(x=0X800CA86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CA92);
	create_insn	(x=0X800CA9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CAA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CAAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CAB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800CAC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CAC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800CAC8);
	create_insn	(x=0X800CAD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CAE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CAF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CAFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CB04);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CB08);
	op_stkvar	(x,	1);
	create_insn	(0X800CB16);
	create_insn	(0X800CB26);
	create_insn	(0X800CB36);
	create_insn	(0X800CB4A);
	make_array	(0X800CB4E,	0X2);
	create_dword	(x=0X800CB50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CB54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CB58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800CB5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CB62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CB78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CB7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CB8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CB92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CBA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CBAA);
	create_insn	(0X800CBBE);
	create_insn	(x=0X800CBC4);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X800CBD4);
	op_hex		(x,	1);
	create_insn	(0X800CBDE);
	create_insn	(x=0X800CBEE);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X800CBF2);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(0X800CBF8);
	create_insn	(x=0X800CBFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CC02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CC18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800CC22,	0X2);
	create_dword	(x=0X800CC24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CC28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CC2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CC30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800CC34);
	create_dword	(0X800CC38);
	create_dword	(0X800CC3C);
	create_insn	(0X800CC40);
	create_insn	(0X800CC5A);
	create_insn	(0X800CC6C);
	create_insn	(0X800CC72);
	create_insn	(0X800CC8C);
	create_insn	(0X800CCAA);
	create_insn	(0X800CCB2);
	set_name	(0X800CCB2,	"nullsub_2");
	create_insn	(0X800CCB4);
	create_insn	(x=0X800CCCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CCD8);
	create_insn	(0X800CCF0);
	create_insn	(0X800CD04);
	create_insn	(0X800CD26);
	create_insn	(0X800CD30);
	create_insn	(0X800CD50);
	create_insn	(0X800CD5A);
	make_array	(0X800CD7A,	0X2);
	create_dword	(x=0X800CD7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800CD80);
	create_dword	(0X800CD84);
	create_dword	(0X800CD88);
	create_insn	(x=0X800CD8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X800CD8C,	"ofdm_tx_state_set_flag");
	create_insn	(x=0X800CD92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CD98);
	create_insn	(x=0X800CD9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CDA6);
	create_insn	(x=0X800CDAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CDB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CDB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CDBC);
	create_insn	(x=0X800CDC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CDC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CDDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CDDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CDE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CDEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CDF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CDFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CDFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CDFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CE04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CE0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CE16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CE20);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CE22);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CE24);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CE2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CE34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800CE3E,	0X2);
	create_dword	(x=0X800CE40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CE44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CE48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CE4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800CE50);
	create_insn	(x=0X800CE56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CE5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CE6A);
	create_insn	(x=0X800CE70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CE7A);
	create_insn	(x=0X800CE86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CE8E);
	set_name	(0X800CE8E,	"spi_fpga_raw_write");
	create_insn	(0X800CEB0);
	set_name	(0X800CEB0,	"spi_fpga_raw_read");
	create_insn	(0X800CED6);
	set_name	(0X800CED6,	"ad936x_reg_sync_write");
	create_insn	(x=0X800CEEA);
	op_hex		(x,	1);
	create_insn	(0X800CF10);
	create_insn	(0X800CF1A);
	set_name	(0X800CF1A,	"ad936x_reg_sync_read");
	create_insn	(0X800CF54);
	create_dword	(x=0X800CF60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800CF64);
	create_insn	(0X800CF96);
	create_insn	(0X800CFC8);
	create_insn	(0X800CFEA);
	create_insn	(x=0X800CFEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CFF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D000);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D008);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D010);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D012);
	op_stkvar	(x,	1);
	create_insn	(0X800D016);
	create_insn	(x=0X800D02A);
	op_hex		(x,	1);
	create_insn	(0X800D050);
	create_insn	(0X800D058);
	create_insn	(0X800D076);
	create_insn	(0X800D086);
	create_insn	(0X800D098);
	create_insn	(0X800D0B8);
	create_insn	(0X800D0CC);
	create_insn	(0X800D0DE);
	create_insn	(x=0X800D0E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D104);
	create_insn	(0X800D114);
	create_insn	(0X800D126);
	create_insn	(x=0X800D15E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D162);
	op_hex		(x,	1);
	create_insn	(x=0X800D166);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D16E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D172);
	op_hex		(x,	1);
	create_insn	(x=0X800D176);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D17E);
	create_insn	(x=0X800D182);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D18A);
	create_insn	(0X800D1A0);
	create_insn	(x=0X800D1B4);
	op_hex		(x,	1);
	create_insn	(0X800D1D4);
	create_insn	(0X800D1DC);
	create_insn	(0X800D1FA);
	create_insn	(0X800D20A);
	create_insn	(0X800D21C);
	create_insn	(0X800D23C);
	create_insn	(0X800D250);
	create_insn	(0X800D262);
	create_insn	(x=0X800D284);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D288);
	op_hex		(x,	1);
	create_insn	(x=0X800D28C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D294);
	create_insn	(0X800D2A2);
	create_insn	(0X800D2B0);
	create_insn	(x=0X800D2B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D2CC);
	create_insn	(x=0X800D2E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D306);
	create_insn	(0X800D324);
	create_insn	(0X800D334);
	create_insn	(0X800D346);
	create_dword	(0X800D368);
	create_dword	(x=0X800D36C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D370);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D374);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800D378);
	create_insn	(0X800D37C);
	create_insn	(0X800D394);
	create_insn	(0X800D398);
	create_insn	(0X800D3A2);
	create_insn	(x=0X800D3A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D3AC);
	op_hex		(x,	1);
	create_insn	(x=0X800D3B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D3B8);
	create_insn	(0X800D3CE);
	create_insn	(0X800D3F4);
	make_array	(0X800D40A,	0X2);
	create_dword	(x=0X800D40C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800D410);
	set_cmt	(0X800D420,	"switch 9 cases ",	0);
	set_cmt	(0X800D426,	"switch jump",	0);
	set_cmt	(0X800D42A,	"jump table for switch statement",	0);
	create_byte	(0X800D42A);
	set_name	(0X800D42A,	"jpt_800D426");
	create_byte	(0X800D42B);
	create_byte	(0X800D42C);
	create_byte	(0X800D42D);
	create_byte	(0X800D42E);
	create_byte	(0X800D42F);
	create_byte	(0X800D430);
	create_byte	(0X800D431);
	create_byte	(0X800D432);
	set_cmt	(0X800D434,	"jumptable 0800D426 case 5",	1);
	create_insn	(0X800D434);
	set_cmt	(0X800D440,	"jumptable 0800D426 default case",	1);
	set_name	(0X800D440,	"def_800D426");
	set_cmt	(0X800D442,	"jumptable 0800D426 case 6",	1);
	create_insn	(0X800D442);
	create_insn	(x=0X800D452);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D456);
	op_hex		(x,	1);
	create_insn	(x=0X800D45A);
	op_hex		(x,	1);
	create_insn	(0X800D46A);
	set_cmt	(0X800D47A,	"jumptable 0800D426 case 7",	1);
	create_insn	(0X800D47A);
	set_cmt	(0X800D488,	"jumptable 0800D426 case 8",	1);
	create_insn	(0X800D488);
	create_insn	(x=0X800D4A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800D4AC,	"jumptable 0800D426 case 9",	1);
	create_insn	(0X800D4AC);
	create_insn	(x=0X800D4B8);
	op_hex		(x,	1);
	create_insn	(0X800D4CC);
	create_insn	(0X800D4D0);
	create_insn	(0X800D4DE);
	set_cmt	(0X800D4E4,	"jumptable 0800D426 case 10",	1);
	create_insn	(0X800D4E4);
	create_insn	(x=0X800D4EC);
	op_hex		(x,	1);
	create_insn	(0X800D4FA);
	create_insn	(x=0X800D510);
	op_hex		(x,	1);
	create_insn	(x=0X800D516);
	op_hex		(x,	1);
	create_insn	(0X800D524);
	set_cmt	(0X800D546,	"jumptable 0800D426 case 11",	1);
	create_insn	(0X800D546);
	set_cmt	(0X800D552,	"jumptable 0800D426 case 12",	1);
	create_insn	(0X800D552);
	create_insn	(0X800D56A);
	create_insn	(0X800D574);
	create_insn	(0X800D57E);
	create_insn	(0X800D588);
	set_cmt	(0X800D596,	"jumptable 0800D426 case 13",	1);
	create_insn	(0X800D596);
	create_insn	(0X800D5A2);
	create_insn	(x=0X800D5AC);
	op_hex		(x,	1);
	create_insn	(x=0X800D5B0);
	op_hex		(x,	1);
	create_insn	(x=0X800D5BC);
	op_hex		(x,	1);
	create_insn	(0X800D5CA);
	create_insn	(0X800D5DA);
	create_insn	(x=0X800D5E0);
	op_hex		(x,	1);
	create_insn	(x=0X800D5E8);
	op_hex		(x,	1);
	create_insn	(x=0X800D5EE);
	op_hex		(x,	1);
	create_insn	(0X800D5FE);
	create_insn	(0X800D612);
	create_insn	(0X800D616);
	create_insn	(x=0X800D620);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D630);
	create_insn	(0X800D64E);
	create_insn	(x=0X800D698);
	op_hex		(x,	1);
	create_insn	(0X800D6C0);
	create_insn	(0X800D6D0);
	create_insn	(x=0X800D6DA);
	op_hex		(x,	1);
	create_insn	(x=0X800D6DE);
	op_hex		(x,	1);
	create_insn	(x=0X800D6EA);
	op_hex		(x,	1);
	create_insn	(0X800D6F8);
	create_insn	(x=0X800D702);
	op_hex		(x,	1);
	create_insn	(x=0X800D706);
	op_hex		(x,	1);
	create_insn	(x=0X800D712);
	op_hex		(x,	1);
	create_dword	(x=0X800D720);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D724);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800D728);
	create_insn	(x=0X800D77E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D792);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D7B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D7CA);
	create_insn	(x=0X800D7EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D7F8);
	create_insn	(x=0X800D7FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D808);
	create_insn	(x=0X800D81C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D824);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D830);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D838);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D85C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D864);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800D86E,	0X2);
	create_dword	(0X800D870);
	create_strlit	(0X800D874,	0X800D880);
	set_name	(0X800D874,	"aPhantom2x");
	create_strlit	(0X800D880,	0X800D891);
	set_name	(0X800D880,	"aDDDDD");
	create_byte	(0X800D891);
	make_array	(0X800D891,	0X3);
	create_strlit	(0X800D894,	0X800D8A5);
	set_name	(0X800D894,	"aFpgaBootD");
	create_byte	(0X800D8A5);
	make_array	(0X800D8A5,	0X3);
	create_strlit	(0X800D8A8,	0X800D8B8);
	set_name	(0X800D8A8,	"aFpgaCfgOk");
	create_strlit	(0X800D8B8,	0X800D8CB);
	set_name	(0X800D8B8,	"aFpgaCfgError");
	create_byte	(0X800D8CB);
	create_dword	(x=0X800D8CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D8D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D8D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800D8D8);
	set_name	(0X800D8D8,	"nullsub_4");
	create_insn	(0X800D8DA);
	create_insn	(0X800D8DE);
	create_insn	(0X800D8E2);
	create_insn	(0X800D8E6);
	create_insn	(0X800D8EA);
	set_name	(0X800D8EA,	"nullsub_5");
	create_insn	(0X800D8EC);
	set_name	(0X800D8EC,	"nullsub_6");
	create_insn	(0X800D8EE);
	set_name	(0X800D8EE,	"nullsub_7");
	create_insn	(0X800D8F0);
	create_insn	(x=0X800D8F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D8F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D8F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D8FC);
	op_hex		(x,	1);
	create_insn	(x=0X800D900);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D906);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D90A);
	op_hex		(x,	1);
	create_insn	(x=0X800D90E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D910);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D914);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D916);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D91A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D922);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D926);
	op_hex		(x,	1);
	create_insn	(x=0X800D92E);
	op_stkvar	(x,	1);
	create_insn	(0X800D932);
	create_insn	(x=0X800D934);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D936);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D93C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D940);
	op_hex		(x,	1);
	create_insn	(x=0X800D944);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D94C);
	op_hex		(x,	1);
	create_insn	(x=0X800D956);
	op_hex		(x,	1);
	create_insn	(x=0X800D95C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D95E);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800D960);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D962);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800D966);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800D968);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800D96C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800D96E);
	op_hex		(x,	1);
	create_insn	(x=0X800D972);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800D976);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800D978);
	op_hex		(x,	1);
	create_insn	(x=0X800D97C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800D980);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800D982);
	op_hex		(x,	1);
	create_insn	(x=0X800D986);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800D98C);
	op_hex		(x,	1);
	create_insn	(x=0X800D994);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D998);
	op_hex		(x,	1);
	create_insn	(x=0X800D99E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D9A0);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800D9A2);
	op_hex		(x,	1);
	create_insn	(x=0X800D9A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D9A8);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800D9AC);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800D9AE);
	op_hex		(x,	1);
	create_insn	(x=0X800D9B2);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800D9B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D9B8);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800D9BA);
	op_hex		(x,	1);
	create_insn	(0X800D9C4);
	create_insn	(0X800D9CC);
	create_insn	(x=0X800D9CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D9D2);
	op_hex		(x,	1);
	create_insn	(x=0X800D9D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D9DC);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800D9E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D9E4);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800D9EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D9F6);
	op_hex		(x,	1);
	create_insn	(x=0X800D9FE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DA00);
	op_hex		(x,	1);
	create_insn	(x=0X800DA04);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DA0A);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X800DA12);
	create_insn	(x=0X800DA1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DA1C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DA1E);
	op_hex		(x,	1);
	create_insn	(0X800DA2E);
	create_insn	(x=0X800DA30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DA36);
	create_insn	(x=0X800DA38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DA3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DA40);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DA42);
	op_hex		(x,	1);
	create_insn	(x=0X800DA46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DA48);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DA4A);
	op_hex		(x,	1);
	create_insn	(x=0X800DA5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DA60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DA62);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DA64);
	op_hex		(x,	1);
	create_insn	(x=0X800DA6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DA74);
	create_insn	(x=0X800DA78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DA7E);
	create_insn	(x=0X800DA80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DA88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DA8A);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DA90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DA94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DA9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800DAA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DAA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800DAA8);
	create_dword	(0X800DAAC);
	create_dword	(0X800DAB0);
	create_dword	(x=0X800DAB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800DAB8);
	create_dword	(0X800DABC);
	create_dword	(0X800DAC0);
	create_dword	(x=0X800DAC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800DAC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DACA);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(0X800DAD2);
	create_insn	(x=0X800DAD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DAD6);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DAD8);
	op_hex		(x,	1);
	create_insn	(x=0X800DAE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DAE6);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DAE8);
	op_hex		(x,	1);
	create_insn	(0X800DAF4);
	create_insn	(0X800DAF8);
	create_insn	(x=0X800DAFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DB00);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DB02);
	op_hex		(x,	1);
	create_insn	(0X800DB0C);
	create_insn	(x=0X800DB0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DB10);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DB1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DB22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DB24);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DB28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DB2E);
	create_insn	(x=0X800DB36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DB38);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DB40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DB42);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DB4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DB50);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(0X800DB58);
	create_insn	(x=0X800DB5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DB5E);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DB66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DB68);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(0X800DB6E);
	create_insn	(x=0X800DB70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DB72);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DB74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DB7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DB80);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(0X800DB8C);
	create_insn	(0X800DB90);
	create_insn	(x=0X800DB96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DB98);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DB9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DBA2);
	create_insn	(x=0X800DBA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DBA6);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DBAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DBB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DBB6);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(0X800DBC4);
	create_insn	(0X800DBC8);
	create_insn	(x=0X800DBCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DBD0);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DBD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DBDC);
	create_insn	(x=0X800DBDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DBE0);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DBE2);
	op_hex		(x,	1);
	create_insn	(x=0X800DBE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DBEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DBF0);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DBF2);
	op_hex		(x,	1);
	create_insn	(0X800DBFE);
	create_insn	(0X800DC02);
	create_insn	(x=0X800DC08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DC0A);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DC0C);
	op_hex		(x,	1);
	create_insn	(x=0X800DC10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DC16);
	create_insn	(x=0X800DC18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DC1A);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DC20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DC28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DC2A);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(0X800DC38);
	create_insn	(0X800DC3C);
	create_insn	(x=0X800DC42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DC44);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DC4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DC50);
	create_insn	(x=0X800DC52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DC54);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DC5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DC62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DC64);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(0X800DC72);
	create_insn	(0X800DC76);
	create_insn	(x=0X800DC7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DC7E);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DC84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DC8A);
	create_insn	(0X800DC96);
	create_insn	(0X800DCB4);
	create_insn	(0X800DCBA);
	create_insn	(0X800DCD6);
	create_insn	(x=0X800DCDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DCEA);
	op_plain_offset	(x,	1,	0X20000E21);
	op_plain_offset	(x,	129,	0X20000E21);
	create_insn	(x=0X800DCEE);
	op_plain_offset	(x,	1,	0X20000E21);
	op_plain_offset	(x,	129,	0X20000E21);
	create_insn	(0X800DCF8);
	create_insn	(x=0X800DD00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DD14);
	create_insn	(x=0X800DD28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DD2A);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DD36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DD3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DD3C);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DD46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DD48);
	op_plain_offset	(x,	1,	0X20000DF0);
	op_plain_offset	(x,	129,	0X20000DF0);
	create_insn	(x=0X800DD4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DD4C);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DD58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DD5A);
	op_plain_offset	(x,	1,	0X20000DF0);
	op_plain_offset	(x,	129,	0X20000DF0);
	create_insn	(x=0X800DD5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DD5E);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800DD6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DD6C);
	op_plain_offset	(x,	1,	0X20000DF0);
	op_plain_offset	(x,	129,	0X20000DF0);
	create_insn	(0X800DD82);
	create_insn	(x=0X800DD8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DD8C);
	op_plain_offset	(x,	1,	0X20000DF0);
	op_plain_offset	(x,	129,	0X20000DF0);
	create_insn	(0X800DD90);
	create_insn	(x=0X800DD98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DD9A);
	op_plain_offset	(x,	1,	0X20000DF0);
	op_plain_offset	(x,	129,	0X20000DF0);
	create_insn	(0X800DD9E);
	create_insn	(x=0X800DDA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DDA8);
	op_plain_offset	(x,	1,	0X20000DF0);
	op_plain_offset	(x,	129,	0X20000DF0);
	create_insn	(0X800DDAC);
	create_insn	(x=0X800DDB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DDB6);
	op_plain_offset	(x,	1,	0X20000DF0);
	op_plain_offset	(x,	129,	0X20000DF0);
	create_insn	(0X800DDCC);
	create_insn	(x=0X800DDD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DDD6);
	op_plain_offset	(x,	1,	0X20000DF0);
	op_plain_offset	(x,	129,	0X20000DF0);
	create_insn	(0X800DDDA);
	create_insn	(x=0X800DDE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DDE4);
	op_plain_offset	(x,	1,	0X20000DF0);
	op_plain_offset	(x,	129,	0X20000DF0);
	create_insn	(0X800DDE8);
	create_insn	(x=0X800DDF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DDF2);
	op_plain_offset	(x,	1,	0X20000DF0);
	op_plain_offset	(x,	129,	0X20000DF0);
	create_insn	(0X800DE08);
	create_insn	(x=0X800DE10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DE12);
	op_plain_offset	(x,	1,	0X20000DF0);
	op_plain_offset	(x,	129,	0X20000DF0);
	create_insn	(0X800DE16);
	create_insn	(x=0X800DE1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DE20);
	op_plain_offset	(x,	1,	0X20000DF0);
	op_plain_offset	(x,	129,	0X20000DF0);
	create_insn	(0X800DE24);
	create_insn	(x=0X800DE2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DE2E);
	op_plain_offset	(x,	1,	0X20000DF0);
	op_plain_offset	(x,	129,	0X20000DF0);
	create_insn	(0X800DE32);
	create_insn	(x=0X800DE3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DE3C);
	op_plain_offset	(x,	1,	0X20000DF0);
	op_plain_offset	(x,	129,	0X20000DF0);
	create_insn	(x=0X800DE44);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DE48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DE4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DE56);
	create_insn	(x=0X800DE68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DE6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DE72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DE76);
	op_hex		(x,	1);
	create_insn	(x=0X800DE8A);
	op_hex		(x,	1);
	create_dword	(x=0X800DEC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DEC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DECC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DED0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DED4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DED8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DEDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DEE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DEE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DEE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DEEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DEF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800DEF4);
	create_insn	(x=0X800DF04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DF10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DF16);
	create_insn	(x=0X800DF26);
	op_hex		(x,	1);
	create_insn	(x=0X800DF6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DF7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DF8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DF92);
	op_stkvar	(x,	1);
	create_insn	(0X800DF9A);
	create_insn	(x=0X800DFA4);
	op_hex		(x,	1);
	create_insn	(0X800DFD0);
	create_insn	(0X800DFF4);
	create_insn	(0X800DFF8);
	create_insn	(x=0X800E006);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E00E);
	op_plain_offset	(x,	1,	0X20000E35);
	op_plain_offset	(x,	129,	0X20000E35);
	create_insn	(x=0X800E010);
	op_hex		(x,	1);
	create_insn	(x=0X800E016);
	op_plain_offset	(x,	1,	0X20000E35);
	op_plain_offset	(x,	129,	0X20000E35);
	create_insn	(x=0X800E01A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E020);
	create_insn	(x=0X800E022);
	op_plain_offset	(x,	1,	0X20000E35);
	op_plain_offset	(x,	129,	0X20000E35);
	create_insn	(x=0X800E024);
	op_hex		(x,	1);
	create_insn	(x=0X800E02A);
	op_plain_offset	(x,	1,	0X20000E35);
	op_plain_offset	(x,	129,	0X20000E35);
	create_insn	(x=0X800E030);
	op_plain_offset	(x,	1,	0X20000E35);
	op_plain_offset	(x,	129,	0X20000E35);
	create_insn	(x=0X800E032);
	op_hex		(x,	1);
	create_insn	(x=0X800E038);
	op_plain_offset	(x,	1,	0X20000E35);
	op_plain_offset	(x,	129,	0X20000E35);
	create_insn	(x=0X800E03E);
	op_plain_offset	(x,	1,	0X20000E35);
	op_plain_offset	(x,	129,	0X20000E35);
	create_insn	(x=0X800E040);
	op_hex		(x,	1);
	create_insn	(x=0X800E046);
	op_plain_offset	(x,	1,	0X20000E35);
	op_plain_offset	(x,	129,	0X20000E35);
	create_insn	(x=0X800E04C);
	op_plain_offset	(x,	1,	0X20000E35);
	op_plain_offset	(x,	129,	0X20000E35);
	create_insn	(x=0X800E04E);
	op_hex		(x,	1);
	create_insn	(x=0X800E054);
	op_plain_offset	(x,	1,	0X20000E35);
	op_plain_offset	(x,	129,	0X20000E35);
	create_insn	(x=0X800E068);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E06A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E06C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E06E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E076);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E080);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E08A);
	create_insn	(x=0X800E08E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E09A);
	op_plain_offset	(x,	1,	0X20000E21);
	op_plain_offset	(x,	129,	0X20000E21);
	create_insn	(x=0X800E09C);
	op_plain_offset	(x,	1,	0X20000E21);
	op_plain_offset	(x,	129,	0X20000E21);
	create_insn	(x=0X800E09E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E0A0);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800E0AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E0AE);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800E0B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E0B8);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800E0BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E0C0);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800E0C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E0C8);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800E0D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E0D2);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800E0DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E0DC);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800E0E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E0E6);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800E0EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E0F0);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800E0F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E0F8);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800E0FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E100);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800E108);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E10A);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800E112);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E114);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800E11C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E11E);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800E126);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E128);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800E12E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E130);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800E134);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800E136);
	op_hex		(x,	1);
	create_insn	(x=0X800E13C);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(0X800E140);
	create_insn	(x=0X800E148);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E14C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E152);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E15A);
	op_stkvar	(x,	1);
	create_insn	(0X800E164);
	create_insn	(0X800E17C);
	create_insn	(x=0X800E182);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E186);
	op_hex		(x,	1);
	create_insn	(x=0X800E18C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E192);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E196);
	op_hex		(x,	1);
	create_insn	(x=0X800E19A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E1A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E1A8);
	op_hex		(x,	1);
	create_insn	(x=0X800E1AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E1B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E1B8);
	op_hex		(x,	1);
	create_insn	(x=0X800E1BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E1C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E1CA);
	op_hex		(x,	1);
	create_insn	(x=0X800E1D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E1D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E1DA);
	op_hex		(x,	1);
	create_insn	(x=0X800E1DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E1E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E1EC);
	op_hex		(x,	1);
	create_insn	(x=0X800E1F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E1F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E1FC);
	op_hex		(x,	1);
	create_insn	(x=0X800E200);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E208);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E210);
	op_stkvar	(x,	1);
	create_insn	(0X800E21A);
	create_insn	(x=0X800E22E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E238);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E23E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E246);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E24E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E254);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E258);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E25C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E262);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E266);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E268);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E26A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E26C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E274);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E27E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E284);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E288);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E28E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E292);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E294);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E296);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E298);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E2A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E2AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E2B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E2B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E2BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E2BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E2C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E2C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E2C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_1(void) {
        auto x;
#define id x

	create_insn	(x=0X800E2CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E2D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800E2E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E2E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E2E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E2EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E2F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E2F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E2F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E2FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800E300);
	create_dword	(x=0X800E304);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E308);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800E30C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E312);
	op_plain_offset	(x,	1,	0X2000104E);
	op_plain_offset	(x,	129,	0X2000104E);
	create_insn	(x=0X800E314);
	op_plain_offset	(x,	1,	0X2000104E);
	op_plain_offset	(x,	129,	0X2000104E);
	create_insn	(x=0X800E318);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E31A);
	op_plain_offset	(x,	1,	0X2000104E);
	op_plain_offset	(x,	129,	0X2000104E);
	create_insn	(x=0X800E322);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E32A);
	op_plain_offset	(x,	1,	0X2000104E);
	op_plain_offset	(x,	129,	0X2000104E);
	create_insn	(x=0X800E32C);
	op_plain_offset	(x,	1,	0X2000104E);
	op_plain_offset	(x,	129,	0X2000104E);
	create_insn	(0X800E332);
	create_insn	(x=0X800E334);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E336);
	op_plain_offset	(x,	1,	0X2000104E);
	op_plain_offset	(x,	129,	0X2000104E);
	create_insn	(x=0X800E33C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E342);
	op_plain_offset	(x,	1,	0X2000104E);
	op_plain_offset	(x,	129,	0X2000104E);
	create_insn	(0X800E34A);
	create_insn	(x=0X800E34E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E350);
	op_plain_offset	(x,	1,	0X2000104E);
	op_plain_offset	(x,	129,	0X2000104E);
	make_array	(0X800E356,	0X2);
	create_dword	(x=0X800E358);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800E35C);
	create_insn	(x=0X800E35E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E360);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E362);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E364);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E368);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E36A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E36E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E370);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E374);
	op_hex		(x,	1);
	create_insn	(x=0X800E37C);
	op_hex		(x,	1);
	create_insn	(x=0X800E380);
	op_hex		(x,	1);
	create_insn	(x=0X800E384);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E386);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800E38A);
	create_insn	(x=0X800E39E);
	op_hex		(x,	1);
	create_insn	(x=0X800E3A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E3AA);
	op_hex		(x,	1);
	create_insn	(x=0X800E3D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E3DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E3DE);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E3EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E3F8);
	create_insn	(x=0X800E3FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E40A);
	create_insn	(0X800E418);
	create_insn	(x=0X800E428);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E436);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E446);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E456);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E466);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E472);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E474);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E47A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E492);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E49A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E49C);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800E4A6);
	create_insn	(x=0X800E4A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E4AA);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E4B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E4B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E4BA);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E4C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E4C6);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E4CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E4D0);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E4D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E4E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E4EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E4F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E500);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E508);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E514);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E51C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E528);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E530);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E53C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E53E);
	op_plain_offset	(x,	1,	0X20001134);
	op_plain_offset	(x,	129,	0X20001134);
	create_insn	(x=0X800E542);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E550);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E552);
	op_plain_offset	(x,	1,	0X20001134);
	op_plain_offset	(x,	129,	0X20001134);
	create_insn	(x=0X800E556);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E564);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E566);
	op_plain_offset	(x,	1,	0X20001134);
	op_plain_offset	(x,	129,	0X20001134);
	create_insn	(x=0X800E56A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E578);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E57A);
	op_plain_offset	(x,	1,	0X20001134);
	op_plain_offset	(x,	129,	0X20001134);
	create_insn	(x=0X800E57E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E58C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E58E);
	op_plain_offset	(x,	1,	0X20001134);
	op_plain_offset	(x,	129,	0X20001134);
	create_insn	(x=0X800E592);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E5A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E5A4);
	op_plain_offset	(x,	1,	0X20001134);
	op_plain_offset	(x,	129,	0X20001134);
	create_insn	(0X800E5AE);
	create_insn	(x=0X800E5B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E5B2);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E5B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E5C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E5C2);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E5C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E5D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E5D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E5E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E5E2);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E5E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E5F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E5FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E5FC);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800E5FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E608);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E610);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E616);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E618);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E622);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E62C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E630);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E634);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E636);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E63C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E648);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E64C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E652);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E658);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E660);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E666);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E668);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E672);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E67C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E680);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E684);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E686);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E68C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E69E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E6A0);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800E6A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E6A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E6AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E6B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E6B2);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E6B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E6BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E6C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E6CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E6D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E6DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E6E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E6F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E6F4);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800E6F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E700);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E706);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E70E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E718);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E720);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E726);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E72C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E732);
	set_name	(0X800E732,	"tcx_config_update1");
	create_insn	(x=0X800E734);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E736);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E73E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E740);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E744);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E74C);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800E752);
	op_hex		(x,	1);
	create_dword	(x=0X800E758);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E75C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E760);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E764);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E768);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E76C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E770);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E774);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E778);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E77C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E780);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E784);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E788);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800E78C);
	create_insn	(x=0X800E796);
	op_hex		(x,	1);
	create_insn	(x=0X800E79A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E7A2);
	op_hex		(x,	1);
	create_insn	(x=0X800E7AE);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800E7B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E7B6);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E7BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E7C0);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E7C6);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800E7CE);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800E7D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E7D6);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E7DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E7E0);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E7E6);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800E7EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E7F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E7F8);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E7FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E800);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E802);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E808);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E80A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E80C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E81C);
	op_hex		(x,	1);
	create_insn	(x=0X800E824);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E826);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E830);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800E83A);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(0X800E842);
	create_insn	(x=0X800E846);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800E850);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800E856);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E858);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E85C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E860);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E862);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E870);
	op_hex		(x,	1);
	create_insn	(x=0X800E87E);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800E898);
	op_hex		(x,	1);
	create_insn	(0X800E8A6);
	create_insn	(x=0X800E8B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E8B4);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E8BC);
	op_hex		(x,	1);
	create_insn	(x=0X800E8C8);
	op_hex		(x,	1);
	create_insn	(x=0X800E8D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E8D4);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E8DC);
	op_hex		(x,	1);
	create_insn	(x=0X800E8E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E8F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E8F4);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E902);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E904);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800E90A);
	create_insn	(0X800E966);
	create_insn	(x=0X800E996);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E998);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800E99E);
	create_insn	(x=0X800E9A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E9A4);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E9A8);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E9AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E9B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E9BA);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E9C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E9CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E9CE);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E9D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E9E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E9E2);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E9E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E9F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E9F6);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800E9FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA0A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EA10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA1A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800EA1E);
	create_insn	(x=0X800EA2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA2C);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EA36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA38);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EA3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA3E);
	op_plain_offset	(x,	1,	0X20001134);
	op_plain_offset	(x,	129,	0X20001134);
	create_insn	(x=0X800EA4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA4E);
	op_plain_offset	(x,	1,	0X20001134);
	op_plain_offset	(x,	129,	0X20001134);
	create_insn	(0X800EA70);
	create_insn	(x=0X800EA9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA9E);
	op_plain_offset	(x,	1,	0X20001134);
	op_plain_offset	(x,	129,	0X20001134);
	create_insn	(x=0X800EAA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EAA8);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EAAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EAB0);
	op_plain_offset	(x,	1,	0X20001134);
	op_plain_offset	(x,	129,	0X20001134);
	create_insn	(0X800EAB8);
	create_insn	(x=0X800EABE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EACA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EAD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EAD6);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EADE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EAE0);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EAE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EAEA);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EAF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EAF4);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EB02);
	op_stkvar	(x,	1);
	create_insn	(x=0X800EB0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800EB16);
	op_stkvar	(x,	1);
	create_insn	(x=0X800EB20);
	op_stkvar	(x,	1);
	create_insn	(x=0X800EB2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800EB34);
	op_stkvar	(x,	1);
	create_insn	(x=0X800EB3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800EB48);
	op_stkvar	(x,	1);
	create_insn	(0X800EB50);
	create_insn	(x=0X800EB70);
	op_stkvar	(x,	1);
	make_array	(0X800EB7E,	0X2);
	create_dword	(x=0X800EB80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EB84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EB88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EB8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EB90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EB94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EB98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800EB9C);
	create_dword	(0X800EBA0);
	create_insn	(0X800EBA4);
	create_insn	(x=0X800EBB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EBB6);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EBBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800EBC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800EBC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800EBD4);
	create_insn	(x=0X800EBD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EBD8);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EBDC);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EBE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EBE6);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EBEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EBEE);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800EC08);
	create_insn	(0X800EC1A);
	create_insn	(x=0X800EC22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC24);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EC40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC46);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EC4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC62);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EC6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800EC70);
	create_insn	(x=0X800EC72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC7A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EC84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC86);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EC8A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EC92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC94);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EC9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC9C);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ECA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ECAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ECAC);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ECB0);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ECB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ECBA);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ECC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ECC2);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ECCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ECCC);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ECCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ECD0);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ECD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ECD4);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ECDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ECE0);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ECE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ECF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ECF8);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ECFC);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ED04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED06);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800ED10);
	create_insn	(0X800ED12);
	create_insn	(0X800ED14);
	create_insn	(x=0X800ED16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED18);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ED20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED22);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800ED2C);
	create_insn	(x=0X800ED2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED30);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ED38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED3A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ED42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED44);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ED4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED50);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ED54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED56);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ED5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED5C);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ED64);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ED6E);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ED7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED7C);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ED82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED84);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ED8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED8E);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ED94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ED96);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800ED9E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EDA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EDA8);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EDAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EDB0);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EDB2);
	op_hex		(x,	1);
	create_insn	(x=0X800EDB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EDB8);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800EDC6);
	create_insn	(0X800EDD4);
	create_insn	(x=0X800EDDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EDEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EDF0);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EDFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EDFE);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EE04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EE06);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EE14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EE16);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EE22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EE24);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EE2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EE2E);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EE36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EE38);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EE4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EE4E);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800EE5C);
	create_insn	(x=0X800EE66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EE68);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EE72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EE74);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EE7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EE7E);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EE84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EE86);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800EE8A);
	create_insn	(x=0X800EE8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EE90);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EE9E);
	op_hex		(x,	1);
	create_insn	(x=0X800EEB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EEB2);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800EEB8);
	create_insn	(x=0X800EEBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EEBE);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EECC);
	op_hex		(x,	1);
	create_insn	(x=0X800EEDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EEE0);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800EEE6);
	create_insn	(x=0X800EEE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EEEA);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800EEF6);
	create_insn	(0X800EF00);
	create_insn	(x=0X800EF02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EF04);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800EF10);
	create_insn	(x=0X800EF12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EF14);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800EF24);
	create_insn	(x=0X800EF36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EF38);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800EF3E);
	create_insn	(x=0X800EF52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EF5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EF62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EF6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EF72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EF78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EF82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EF84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EF86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EF8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EF98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EF9C);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EFA0);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EFA4);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EFA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EFA8);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800EFAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800EFB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EFB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EFB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X800EFBC,	0X800EFE0);
	set_name	(0X800EFBC,	"a2x2x2x2x2xD");
	create_dword	(x=0X800EFE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EFE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EFE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EFEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EFF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EFF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EFF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EFFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F000);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800F004);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F008);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F00A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F00E);
	op_hex		(x,	1);
	create_insn	(x=0X800F016);
	op_hex		(x,	1);
	create_insn	(x=0X800F01A);
	op_hex		(x,	1);
	create_insn	(x=0X800F01E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F020);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F024);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F026);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F028);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F02A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F030);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F032);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F034);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F038);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F040);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F052);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F054);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F056);
	op_hex		(x,	1);
	create_insn	(x=0X800F05A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F05C);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F060);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F062);
	op_hex		(x,	1);
	create_insn	(x=0X800F066);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F06A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F06C);
	op_hex		(x,	1);
	create_insn	(x=0X800F074);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F078);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F07A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F07E);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F084);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F088);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F08A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F08E);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F09C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F09E);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F0A4);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F0AA);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F0AE);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F0B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F0B6);
	op_hex		(x,	1);
	create_insn	(x=0X800F0BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F0C0);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F0C4);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F0C8);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(0X800F0CE);
	create_insn	(x=0X800F0D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F0D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F0DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F0EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F0EE);
	op_plain_offset	(x,	1,	0X20001134);
	op_plain_offset	(x,	129,	0X20001134);
	create_insn	(x=0X800F0F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F0FA);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F0FC);
	op_hex		(x,	1);
	create_insn	(x=0X800F100);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F102);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800F11E);
	create_insn	(x=0X800F12C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F12E);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800F134);
	create_insn	(x=0X800F138);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F13E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F152);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F156);
	op_hex		(x,	1);
	create_insn	(x=0X800F15C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F15E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F160);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F164);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F16C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F170);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F180);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F182);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F184);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F186);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F190);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F198);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F1A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F1AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F1AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F1AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F1B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F1C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F1C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F1CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F1D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F1D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F1DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F1E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F1EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800F1F4);
	create_insn	(x=0X800F1F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800F202);
	create_insn	(x=0X800F20C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F216);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F218);
	op_plain_offset	(x,	1,	0X20001218);
	op_plain_offset	(x,	129,	0X20001218);
	create_insn	(x=0X800F22A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F22C);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F234);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F236);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800F242);
	create_insn	(x=0X800F246);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F248);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800F254);
	create_insn	(x=0X800F258);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F25A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F25C);
	op_hex		(x,	1);
	create_insn	(0X800F266);
	create_insn	(x=0X800F26A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F26C);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800F272);
	create_insn	(x=0X800F278);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F27A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F27E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F280);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F284);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F286);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F28A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F28E);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F298);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F2B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F2B2);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F2BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F2BE);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F2C0);
	op_hex		(x,	1);
	create_insn	(x=0X800F2CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F2CC);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F2CE);
	op_hex		(x,	1);
	create_insn	(x=0X800F2D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F2DA);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F2DC);
	op_hex		(x,	1);
	create_insn	(x=0X800F2E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F2E8);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F2F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F2F8);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F30A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F30E);
	op_hex		(x,	1);
	create_insn	(x=0X800F314);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F31A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F31E);
	op_hex		(x,	1);
	create_insn	(x=0X800F322);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F32C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F330);
	op_hex		(x,	1);
	create_insn	(x=0X800F336);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F33C);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F33E);
	op_hex		(x,	1);
	create_insn	(x=0X800F344);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F346);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F348);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F34A);
	op_hex		(x,	1);
	create_insn	(x=0X800F354);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F356);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F358);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F364);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F368);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F36C);
	op_hex		(x,	1);
	create_insn	(x=0X800F370);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F376);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F378);
	op_hex		(x,	1);
	create_insn	(x=0X800F37C);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F384);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F386);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F388);
	op_hex		(x,	1);
	create_insn	(x=0X800F38E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F390);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F394);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F396);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F398);
	op_hex		(x,	1);
	create_insn	(x=0X800F39C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F39E);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F3A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F3A8);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F3AA);
	op_hex		(x,	1);
	create_insn	(x=0X800F3B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F3B2);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F3B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F3B8);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F3BA);
	op_hex		(x,	1);
	create_insn	(x=0X800F3BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F3C0);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F3C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F3CA);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F3CC);
	op_hex		(x,	1);
	create_insn	(x=0X800F3D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F3D4);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F3D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F3DA);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F3DC);
	op_hex		(x,	1);
	create_insn	(x=0X800F3E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F3E2);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F3E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F3EA);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F3F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F3F2);
	op_plain_offset	(x,	1,	0X2000012C);
	op_plain_offset	(x,	129,	0X2000012C);
	create_insn	(x=0X800F3F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F3F6);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_dword	(x=0X800F404);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X800F408,	0X800F427);
	set_name	(0X800F408,	"aId2x2x2x2x2x");
	create_byte	(0X800F427);
	create_dword	(x=0X800F428);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F42C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F430);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F434);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F438);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F43C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F440);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F444);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F448);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800F44C);
	create_insn	(x=0X800F44E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F450);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F466);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F468);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F470);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F478);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800F48A);
	create_insn	(0X800F498);
	create_insn	(x=0X800F49E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800F4AC);
	create_insn	(x=0X800F4BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F4C0);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F4C8);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F4DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F4DC);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800F4E2);
	create_insn	(x=0X800F4E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F4EA);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F4EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F4F0);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F4F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F4F8);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F4FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F500);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F504);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F506);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F50E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F510);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F524);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F526);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F52A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F534);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F540);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F544);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F548);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F550);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F552);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F556);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F55A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F562);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F564);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F568);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F56C);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F570);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F574);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800F584);
	create_insn	(x=0X800F586);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F590);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F594);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F598);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F5AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F5AE);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800F5B6);
	set_name	(0X800F5B6,	"tcx_config_80105FA");
	create_insn	(x=0X800F5B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F5BA);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F5C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F5C8);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F5CC);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F5D0);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F5D4);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F5DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F5DE);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F5E2);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F5F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F5F8);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(0X800F5FE);
	set_name	(0X800F5FE,	"set_transciever_flag_20001A28_E");
	create_insn	(x=0X800F600);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F602);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F604);
	op_hex		(x,	1);
	create_insn	(x=0X800F60C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F60E);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F612);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F614);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F616);
	op_hex		(x,	1);
	create_insn	(x=0X800F61A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F61C);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F620);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X800F620,	"set_transciever_flag_20001A28_D");
	create_insn	(x=0X800F622);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F628);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F62A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F62E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F630);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F638);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X800F638,	"set_transciever_flag_20001A28_B");
	create_insn	(x=0X800F63A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F640);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F642);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F646);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F648);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F650);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X800F650,	"set_transciever_flag_20001A28_C");
	create_insn	(x=0X800F652);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F658);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F65A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F65E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F660);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F668);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X800F668,	"set_transciever_attenuation");
	create_insn	(x=0X800F66A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F670);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F672);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F678);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X800F678,	"set_transciever_flag_20001A28_A");
	create_insn	(x=0X800F67A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F680);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F682);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F686);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F688);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F690);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F692);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F698);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F69A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F6A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F6A2);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F6AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F6B0);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X800F6B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F6B8);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_dword	(x=0X800F6C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F6C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F6C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X800F6CC,	0X800F6ED);
	set_name	(0X800F6CC,	"a2x2x2x2x2x");
	create_byte	(0X800F6ED);
	make_array	(0X800F6ED,	0X3);
	create_insn	(0X800F6F0);
	create_insn	(0X800F87A);
	create_insn	(x=0X800F8BC);
	op_hex		(x,	1);
	create_insn	(x=0X800F8CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F8D4);
	op_hex		(x,	1);
	create_insn	(x=0X800F8E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F8F0);
	op_hex		(x,	1);
	create_insn	(x=0X800F902);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F904);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F906);
	op_hex		(x,	1);
	create_insn	(x=0X800F914);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F91E);
	op_hex		(x,	1);
	create_insn	(x=0X800F934);
	op_hex		(x,	1);
	create_insn	(x=0X800F9A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FA12);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FA80);
	op_stkvar	(x,	1);
	create_insn	(0X800FA8C);
	create_insn	(x=0X800FAA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FAB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FAB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FABE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FAC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FAC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FAC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FACA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FACC);
	op_stkvar	(x,	1);
	create_dword	(0X800FAF8);
	create_dword	(0X800FAFC);
	create_dword	(0X800FB00);
	create_dword	(0X800FB04);
	create_insn	(0X800FB08);
	create_insn	(x=0X800FB38);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FB3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FB3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FB7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FB7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FB84);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FB88);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FB92);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FB98);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FB9A);
	op_stkvar	(x,	1);
	create_insn	(0X800FBA8);
	create_insn	(0X800FC4A);
	create_insn	(x=0X800FC54);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FC58);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FC5E);
	op_hex		(x,	1);
	create_insn	(x=0X800FC64);
	op_hex		(x,	1);
	create_insn	(0X800FC78);
	create_insn	(0X800FC82);
	create_insn	(0X800FC8C);
	create_insn	(0X800FC96);
	create_insn	(x=0X800FCA2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FCA4);
	op_plain_offset	(x,	1,	0X20001A78);
	op_plain_offset	(x,	129,	0X20001A78);
	create_insn	(x=0X800FCAE);
	op_plain_offset	(x,	1,	0X20001AB9);
	op_plain_offset	(x,	129,	0X20001AB9);
	create_insn	(x=0X800FCB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FCB4);
	op_plain_offset	(x,	1,	0X20001AA4);
	op_plain_offset	(x,	129,	0X20001AA4);
	create_insn	(x=0X800FCC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FCC4);
	op_plain_offset	(x,	1,	0X20001AB9);
	op_plain_offset	(x,	129,	0X20001AB9);
	create_insn	(x=0X800FCCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FCCC);
	op_plain_offset	(x,	1,	0X20001AB9);
	op_plain_offset	(x,	129,	0X20001AB9);
	create_insn	(x=0X800FCFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FCFC);
	op_plain_offset	(x,	1,	0X20001AB9);
	op_plain_offset	(x,	129,	0X20001AB9);
	create_insn	(x=0X800FD2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FD34);
	op_plain_offset	(x,	1,	0X20001A78);
	op_plain_offset	(x,	129,	0X20001A78);
	create_insn	(x=0X800FD36);
	op_plain_offset	(x,	1,	0X20001A78);
	op_plain_offset	(x,	129,	0X20001A78);
	create_insn	(x=0X800FD38);
	op_plain_offset	(x,	1,	0X20001A78);
	op_plain_offset	(x,	129,	0X20001A78);
	create_insn	(x=0X800FD44);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FD46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FD50);
	op_plain_offset	(x,	1,	0X20001A78);
	op_plain_offset	(x,	129,	0X20001A78);
	create_insn	(x=0X800FD52);
	op_plain_offset	(x,	1,	0X20001A78);
	op_plain_offset	(x,	129,	0X20001A78);
	create_insn	(x=0X800FD54);
	op_plain_offset	(x,	1,	0X20001A78);
	op_plain_offset	(x,	129,	0X20001A78);
	create_insn	(x=0X800FD5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FD64);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FD68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FD6A);
	op_plain_offset	(x,	1,	0X20001AA4);
	op_plain_offset	(x,	129,	0X20001AA4);
	create_insn	(x=0X800FD6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FD72);
	op_plain_offset	(x,	1,	0X20001AA4);
	op_plain_offset	(x,	129,	0X20001AA4);
	create_insn	(x=0X800FD78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FD7A);
	op_plain_offset	(x,	1,	0X20001AA4);
	op_plain_offset	(x,	129,	0X20001AA4);
	create_insn	(x=0X800FD7C);
	op_plain_offset	(x,	1,	0X20001AA4);
	op_plain_offset	(x,	129,	0X20001AA4);
	create_insn	(x=0X800FD82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FD88);
	op_plain_offset	(x,	1,	0X20001A78);
	op_plain_offset	(x,	129,	0X20001A78);
	create_insn	(x=0X800FD8A);
	op_plain_offset	(x,	1,	0X20001A78);
	op_plain_offset	(x,	129,	0X20001A78);
	create_insn	(x=0X800FD8C);
	op_plain_offset	(x,	1,	0X20001A78);
	op_plain_offset	(x,	129,	0X20001A78);
	create_insn	(x=0X800FD98);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FD9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FD9E);
	op_plain_offset	(x,	1,	0X20001AA4);
	op_plain_offset	(x,	129,	0X20001AA4);
	create_insn	(x=0X800FDA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FDA6);
	op_plain_offset	(x,	1,	0X20001AA4);
	op_plain_offset	(x,	129,	0X20001AA4);
	create_insn	(x=0X800FDA8);
	op_plain_offset	(x,	1,	0X20001AA4);
	op_plain_offset	(x,	129,	0X20001AA4);
	create_insn	(x=0X800FDAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FDB2);
	op_plain_offset	(x,	1,	0X20001A78);
	op_plain_offset	(x,	129,	0X20001A78);
	create_insn	(x=0X800FDB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FDBA);
	op_plain_offset	(x,	1,	0X20001A78);
	op_plain_offset	(x,	129,	0X20001A78);
	create_insn	(x=0X800FDBE);
	op_plain_offset	(x,	1,	0X20001A78);
	op_plain_offset	(x,	129,	0X20001A78);
	create_insn	(x=0X800FDC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FDCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FDD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FDD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FDD8);
	op_plain_offset	(x,	1,	0X20001A78);
	op_plain_offset	(x,	129,	0X20001A78);
	create_insn	(x=0X800FDE2);
	op_stkvar	(x,	1);
	create_insn	(0X800FE10);
	create_insn	(0X800FE26);
	create_insn	(0X800FE3C);
	create_insn	(0X800FE52);
	create_dword	(0X800FE60);
	create_dword	(0X800FE64);
	create_dword	(0X800FE68);
	create_dword	(0X800FE6C);
	create_dword	(0X800FE70);
	create_dword	(0X800FE74);
	create_dword	(x=0X800FE78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FE7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FE80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800FE84);
	create_insn	(0X800FE88);
	create_insn	(x=0X800FE8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FE96);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FE98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FE9E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FEAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FEAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FEB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FEB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FEC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FEC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FEC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800FECE);
	create_insn	(x=0X800FED8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800FEE0);
	create_insn	(x=0X800FEE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FEF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FEFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF08);
	op_plain_offset	(x,	1,	0X20001760);
	op_plain_offset	(x,	129,	0X20001760);
	create_insn	(x=0X800FF12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800FF38);
	create_insn	(0X800FF40);
	create_insn	(x=0X800FF44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF56);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800FF5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF62);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800FF6A);
	op_plain_offset	(x,	1,	0X20000134);
	op_plain_offset	(x,	129,	0X20000134);
	create_insn	(x=0X800FF6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF6E);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800FF76);
	op_plain_offset	(x,	1,	0X20000134);
	op_plain_offset	(x,	129,	0X20000134);
	create_insn	(x=0X800FF7A);
	op_plain_offset	(x,	1,	0X20000134);
	op_plain_offset	(x,	129,	0X20000134);
	create_insn	(0X800FF7E);
	create_insn	(x=0X800FF82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF86);
	op_plain_offset	(x,	1,	0X20000134);
	op_plain_offset	(x,	129,	0X20000134);
	create_insn	(x=0X800FF88);
	op_plain_offset	(x,	1,	0X20000134);
	op_plain_offset	(x,	129,	0X20000134);
	create_insn	(x=0X800FF8A);
	op_plain_offset	(x,	1,	0X20000134);
	op_plain_offset	(x,	129,	0X20000134);
	create_insn	(x=0X800FF8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FFB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FFB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FFBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FFC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FFCA);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800FFD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FFD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FFD8);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800FFDE);
	op_plain_offset	(x,	1,	0X2000013C);
	op_plain_offset	(x,	129,	0X2000013C);
	create_insn	(x=0X800FFE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FFE2);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800FFEA);
	op_plain_offset	(x,	1,	0X2000013C);
	op_plain_offset	(x,	129,	0X2000013C);
	create_insn	(x=0X800FFEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FFEE);
	op_plain_offset	(x,	1,	0X20000E10);
	op_plain_offset	(x,	129,	0X20000E10);
	create_insn	(x=0X800FFF6);
	op_plain_offset	(x,	1,	0X2000013C);
	op_plain_offset	(x,	129,	0X2000013C);
	create_insn	(0X800FFFA);
	create_insn	(x=0X800FFFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010002);
	op_plain_offset	(x,	1,	0X2000013C);
	op_plain_offset	(x,	129,	0X2000013C);
	create_insn	(x=0X8010004);
	op_plain_offset	(x,	1,	0X2000013C);
	op_plain_offset	(x,	129,	0X2000013C);
	create_insn	(x=0X8010006);
	op_plain_offset	(x,	1,	0X2000013C);
	op_plain_offset	(x,	129,	0X2000013C);
	create_insn	(x=0X8010008);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801000E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010016);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801002C);
	op_stkvar	(x,	1);
	create_insn	(x=0X801002E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010038);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X8010042,	0X2);
	create_dword	(x=0X8010044);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010048);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801004C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010050);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010054);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010058);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801005C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010060);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010064);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010068);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801006C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010070);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010074);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8010078);
	create_insn	(0X8010088);
	create_insn	(x=0X8010090);
	op_stkvar	(x,	1);
	create_insn	(0X801009E);
	create_insn	(0X80100A2);
	create_insn	(x=0X80100A4);
	op_stkvar	(x,	1);
	create_insn	(0X80100AA);
	create_insn	(x=0X80100AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80100B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80100CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80100CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80100D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80100DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80100E8);
	create_insn	(x=0X80100F0);
	op_stkvar	(x,	1);
	create_insn	(0X80100FE);
	create_insn	(0X8010102);
	create_insn	(x=0X8010104);
	op_stkvar	(x,	1);
	create_insn	(0X801010A);
	create_insn	(x=0X801010C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010116);
	op_stkvar	(x,	1);
	create_insn	(x=0X801012A);
	op_stkvar	(x,	1);
	create_insn	(x=0X801012C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010134);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801013C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010148);
	create_insn	(x=0X8010150);
	op_stkvar	(x,	1);
	create_insn	(0X801015E);
	create_insn	(0X8010162);
	create_insn	(x=0X8010164);
	op_stkvar	(x,	1);
	create_insn	(0X801016A);
	create_insn	(x=0X801016C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010176);
	op_stkvar	(x,	1);
	create_insn	(x=0X801018A);
	op_stkvar	(x,	1);
	create_insn	(x=0X801018C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010194);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801019C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80101A8);
	create_insn	(x=0X80101AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80101B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80101B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80101BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80101D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80101D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80101DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80101E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80101EE);
	create_insn	(x=0X80101F6);
	op_stkvar	(x,	1);
	create_insn	(0X8010204);
	create_insn	(0X8010208);
	create_insn	(x=0X801020A);
	op_stkvar	(x,	1);
	create_insn	(0X8010210);
	create_insn	(x=0X8010212);
	op_stkvar	(x,	1);
	create_insn	(x=0X801021C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010230);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010232);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801023A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010242);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X801024E);
	set_name	(0X801024E,	"nullsub_3");
	create_insn	(0X8010250);
	create_dword	(x=0X801028C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8010290);
	create_insn	(0X8010294);
	create_insn	(x=0X8010296);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80102A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80102A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80102A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80102B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80102B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80102BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80102C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80102C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80102CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80102CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80102D4);
	create_insn	(x=0X80102DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80102E6);
	create_insn	(x=0X80102EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80102F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010302);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801030C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801030E);
	op_plain_offset	(x,	1,	0X200019E8);
	op_plain_offset	(x,	129,	0X200019E8);
	create_insn	(x=0X8010320);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010326);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X801032C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010330);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010334);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010338);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801033C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010340);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010344);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010348);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X801034C);
	set_name	(0X801034C,	"packet_send");
	create_insn	(x=0X8010356);
	op_hex		(x,	1);
	set_cmt	(0X801035A,	"switch 31 cases ",	0);
	set_cmt	(0X801035E,	"switch jump",	0);
	set_cmt	(0X8010362,	"jump table for switch statement",	0);
	create_byte	(0X8010362);
	set_name	(0X8010362,	"jpt_801035E");
	create_byte	(0X8010363);
	create_byte	(0X8010364);
	create_byte	(0X8010365);
	create_byte	(0X8010366);
	create_byte	(0X8010367);
	create_byte	(0X8010368);
	create_byte	(0X8010369);
	create_byte	(0X801036A);
	create_byte	(0X801036B);
	create_byte	(0X801036C);
	create_byte	(0X801036D);
	create_byte	(0X801036E);
	create_byte	(0X801036F);
	create_byte	(0X8010370);
	create_byte	(0X8010371);
	create_byte	(0X8010372);
	create_byte	(0X8010373);
	create_byte	(0X8010374);
	create_byte	(0X8010375);
	create_byte	(0X8010376);
	create_byte	(0X8010377);
	create_byte	(0X8010378);
	create_byte	(0X8010379);
	create_byte	(0X801037A);
	create_byte	(0X801037B);
	create_byte	(0X801037C);
	create_byte	(0X801037D);
	create_byte	(0X801037E);
	create_byte	(0X801037F);
	create_byte	(0X8010380);
	set_cmt	(0X8010382,	"jumptable 0801035E case 1",	1);
	create_insn	(0X8010382);
	set_cmt	(0X8010384,	"jumptable 0801035E case 4",	1);
	set_cmt	(0X8010386,	"jumptable 0801035E case 15",	1);
	set_cmt	(0X8010388,	"jumptable 0801035E case 8",	1);
	set_cmt	(0X8010392,	"jumptable 0801035E case 30",	1);
	create_insn	(0X8010392);
	set_cmt	(0X801039C,	"jumptable 0801035E case 2",	1);
	create_insn	(0X801039C);
	set_cmt	(0X801039E,	"jumptable 0801035E case 6",	1);
	set_cmt	(0X80103A0,	"jumptable 0801035E case 13",	1);
	set_cmt	(0X80103A2,	"jumptable 0801035E case 14",	1);
	set_cmt	(0X80103A4,	"jumptable 0801035E case 16",	1);
	set_cmt	(0X80103A6,	"jumptable 0801035E case 20",	1);
	set_cmt	(0X80103A8,	"jumptable 0801035E case 22",	1);
	set_cmt	(0X80103B4,	"jumptable 0801035E case 3",	1);
	create_insn	(0X80103B4);
	set_cmt	(0X80103B6,	"jumptable 0801035E case 10",	1);
	set_cmt	(0X80103B8,	"jumptable 0801035E case 5",	1);
	set_cmt	(0X80103BA,	"jumptable 0801035E case 11",	1);
	set_cmt	(0X80103BC,	"jumptable 0801035E case 12",	1);
	set_cmt	(0X80103BE,	"jumptable 0801035E case 17",	1);
	set_cmt	(0X80103C0,	"jumptable 0801035E case 21",	1);
	set_cmt	(0X80103C2,	"jumptable 0801035E case 23",	1);
	set_cmt	(0X80103CC,	"jumptable 0801035E default case",	1);
	set_name	(0X80103CC,	"def_801035E");
	create_insn	(0X80103D0);
	create_insn	(0X80103E4);
	create_insn	(0X80103E8);
	create_insn	(x=0X80103EA);
	op_hex		(x,	1);
	create_insn	(x=0X80103EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80103FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801040C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801041A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010426);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010434);
	create_insn	(x=0X8010436);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X801044C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8010450);
	create_insn	(0X8010464);
	create_insn	(0X8010488);
	create_insn	(0X80104A0);
	create_insn	(0X80104A8);
	create_insn	(0X80104E8);
	create_insn	(0X80104F0);
	create_insn	(0X8010510);
	create_insn	(0X8010528);
	create_insn	(0X8010530);
	create_insn	(0X8010540);
	create_insn	(0X8010544);
	create_insn	(0X8010548);
	create_insn	(0X801054C);
	create_insn	(0X801055E);
	set_cmt	(0X801056E,	"switch 13 cases ",	0);
	set_cmt	(0X8010572,	"switch jump",	0);
	set_cmt	(0X8010576,	"jump table for switch statement",	0);
	create_byte	(0X8010576);
	set_name	(0X8010576,	"jpt_8010572");
	create_byte	(0X8010577);
	create_byte	(0X8010578);
	create_byte	(0X8010579);
	create_byte	(0X801057A);
	create_byte	(0X801057B);
	create_byte	(0X801057C);
	create_byte	(0X801057D);
	create_byte	(0X801057E);
	create_byte	(0X801057F);
	create_byte	(0X8010580);
	create_byte	(0X8010581);
	create_byte	(0X8010582);
	set_cmt	(0X8010584,	"jumptable 08010572 case 0",	1);
	create_insn	(0X8010584);
	set_cmt	(0X801059A,	"jumptable 08010572 case 1",	1);
	create_insn	(0X801059A);
	set_cmt	(0X80105AC,	"jumptable 08010572 case 2",	1);
	create_insn	(0X80105AC);
	create_insn	(0X80105CC);
	set_cmt	(0X80105D4,	"jumptable 08010572 case 3",	1);
	create_insn	(0X80105D4);
	create_insn	(0X80105FA);
	create_insn	(0X801060E);
	create_insn	(0X8010616);
	set_cmt	(0X801061E,	"jumptable 08010572 case 4",	1);
	create_insn	(0X801061E);
	set_cmt	(0X8010630,	"jumptable 08010572 case 5",	1);
	create_insn	(0X8010630);
	set_cmt	(0X8010642,	"jumptable 08010572 case 6",	1);
	create_insn	(0X8010642);
	set_cmt	(0X8010654,	"jumptable 08010572 default case",	1);
	create_insn	(0X8010654);
	set_name	(0X8010654,	"def_8010572");
	set_cmt	(0X8010656,	"jumptable 08010572 case 7",	1);
	create_insn	(0X8010656);
	set_cmt	(0X8010668,	"jumptable 08010572 case 8",	1);
	create_insn	(0X8010668);
	set_cmt	(0X801067A,	"jumptable 08010572 case 9",	1);
	create_insn	(0X801067A);
	set_cmt	(0X801068C,	"jumptable 08010572 case 10",	1);
	create_insn	(0X801068C);
	set_cmt	(0X801069E,	"jumptable 08010572 case 11",	1);
	create_insn	(0X801069E);
	create_insn	(0X80106C8);
	create_insn	(0X80106D0);
	create_insn	(0X80106E2);
	set_cmt	(0X80106EC,	"jumptable 08010572 case 12",	1);
	create_insn	(0X80106EC);
	create_insn	(0X8010714);
	create_insn	(0X801071C);
	create_insn	(0X801072E);
	create_insn	(0X8010738);
	create_insn	(0X8010746);
	create_insn	(0X801075E);
	create_insn	(0X801077E);
	create_insn	(0X8010782);
	create_insn	(0X8010786);
	create_insn	(0X8010794);
	create_insn	(0X801079C);
	create_insn	(x=0X80107AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80107AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80107B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80107BA);
	op_stkvar	(x,	1);
	create_insn	(0X80107D0);
	create_insn	(x=0X80107D6);
	op_hex		(x,	1);
	create_insn	(x=0X80107EC);
	op_hex		(x,	1);
	create_insn	(x=0X80107F4);
	op_hex		(x,	1);
	create_insn	(x=0X8010812);
	op_stkvar	(x,	1);
	create_insn	(x=0X801081C);
	op_stkvar	(x,	1);
	create_insn	(x=0X801082C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010830);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010836);
	op_stkvar	(x,	1);
	create_insn	(x=0X801083A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010842);
	op_stkvar	(x,	1);
	create_insn	(x=0X801084C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010858);
	op_stkvar	(x,	1);
	create_insn	(0X8010860);
	create_insn	(0X8010892);
	create_insn	(0X80108B2);
	create_insn	(x=0X80108CE);
	op_hex		(x,	1);
	create_insn	(x=0X80108D8);
	op_hex		(x,	1);
	create_insn	(0X801090A);
	set_name	(0X801090A,	"packet_make_response");
	create_insn	(x=0X801091A);
	op_stkvar	(x,	1);
	create_insn	(0X801093C);
	create_insn	(x=0X801093E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010942);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010946);
	op_stkvar	(x,	1);
	create_insn	(x=0X801094C);
	op_stkvar	(x,	1);
	create_insn	(0X801095A);
	create_insn	(x=0X8010968);
	op_stkvar	(x,	1);
	create_insn	(x=0X801096E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010976);
	op_hex		(x,	1);
	create_insn	(x=0X8010980);
	op_hex		(x,	1);
	create_insn	(x=0X801098A);
	op_stkvar	(x,	1);
	make_array	(0X80109B2,	0X2);
	create_insn	(0X80109B4);
	create_insn	(0X80109BA);
	create_insn	(x=0X80109C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80109D2);
	create_insn	(0X80109E4);
	create_insn	(0X80109FC);
	create_insn	(0X8010A00);
	create_insn	(0X8010A10);
	create_dword	(x=0X8010A24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8010A28);
	create_insn	(0X8010A34);
	create_insn	(0X8010A36);
	create_insn	(x=0X8010A40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010A56);
	create_insn	(0X8010A68);
	create_insn	(0X8010A8E);
	create_insn	(0X8010A92);
	create_insn	(0X8010AA2);
	make_array	(0X8010ABE,	0X2);
	create_dword	(x=0X8010AC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8010AC4);
	create_insn	(x=0X8010AD4);
	op_hex		(x,	1);
	create_insn	(x=0X8010ADE);
	op_hex		(x,	1);
	create_insn	(x=0X8010B02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010B08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010B20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010B2A);
	op_hex		(x,	1);
	create_insn	(x=0X8010B50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010B70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010B76);
	op_hex		(x,	1);
	create_insn	(x=0X8010B8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010B96);
	create_insn	(x=0X8010BA6);
	op_hex		(x,	1);
	create_insn	(x=0X8010BB0);
	op_hex		(x,	1);
	create_insn	(x=0X8010BD6);
	op_hex		(x,	1);
	create_insn	(x=0X8010BF6);
	op_hex		(x,	1);
	create_insn	(x=0X8010C0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010C16);
	create_insn	(x=0X8010C20);
	op_hex		(x,	1);
	create_insn	(0X8010C40);
	create_insn	(0X8010C5A);
	create_insn	(x=0X8010C6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010C74);
	create_insn	(x=0X8010C82);
	op_hex		(x,	1);
	create_insn	(0X8010CA0);
	create_insn	(0X8010CA6);
	create_insn	(x=0X8010CA8);
	op_hex		(x,	1);
	create_insn	(0X8010CC6);
	create_insn	(0X8010CCC);
	create_insn	(x=0X8010CCE);
	op_hex		(x,	1);
	create_insn	(x=0X8010CE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010CEA);
	create_insn	(x=0X8010D06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010D0E);
	create_insn	(x=0X8010D2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010D34);
	create_insn	(x=0X8010D52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010D5A);
	create_insn	(x=0X8010D7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010D82);
	set_name	(0X8010D82,	"cmd_exec_set09_cmd12");
	create_insn	(x=0X8010D8A);
	op_stkvar	(x,	1);
	create_insn	(0X8010DA0);
	create_insn	(x=0X8010DA8);
	op_hex		(x,	1);
	create_insn	(x=0X8010DBA);
	op_hex		(x,	1);
	set_cmt	(0X8010DC2,	"val",	0);
	set_cmt	(0X8010DCE,	"payload_len",	0);
	set_cmt	(0X8010DD0,	"payload",	0);
	set_cmt	(0X8010DD2,	"spkt",	0);
	set_cmt	(0X8010DD4,	"send_func",	0);
	create_insn	(x=0X8010DD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010DDC);
	create_insn	(x=0X8010DEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010DEE);
	op_hex		(x,	1);
	create_insn	(x=0X8010DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010DFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010DFE);
	op_hex		(x,	1);
	create_insn	(x=0X8010E02);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010E16);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010E22);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010E3A);
	op_stkvar	(x,	1);
	set_cmt	(0X8010E3E,	"payload_len",	0);
	set_cmt	(0X8010E40,	"payload",	0);
	set_cmt	(0X8010E42,	"spkt",	0);
	set_cmt	(0X8010E44,	"send_func",	0);
	create_insn	(x=0X8010E44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010E4E);
	create_insn	(x=0X8010E60);
	op_hex		(x,	1);
	create_insn	(x=0X8010E68);
	op_hex		(x,	1);
	create_insn	(x=0X8010E7A);
	op_hex		(x,	1);
	create_insn	(0X8010E92);
	create_insn	(x=0X8010E94);
	op_hex		(x,	1);
	create_insn	(x=0X8010E9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010EA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010EBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010EC4);
	create_insn	(x=0X8010ECE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X8010EE6,	0X2);
	create_dword	(x=0X8010EE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010EEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010EF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010EF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010EF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X8010EF8,	"send_func");
	create_dword	(0X8010EFC);
	create_dword	(0X8010F00);
	create_dword	(x=0X8010F04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010F08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8010F0C);
	create_byte	(0X8010F13);
	create_insn	(0X8010F14);
	create_insn	(0X8010F28);
	create_insn	(x=0X8010F2A);
	op_hex		(x,	1);
	create_insn	(x=0X8010F38);
	op_hex		(x,	1);
	create_insn	(0X8010F48);
	create_insn	(x=0X8010F4A);
	op_hex		(x,	1);
	create_insn	(x=0X8010F6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010F76);
	op_hex		(x,	1);
	create_insn	(0X8010F8C);
	create_insn	(0X8010FA4);
	create_insn	(x=0X8010FBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010FC4);
	create_insn	(0X8010FDC);
	create_insn	(0X8010FEC);
	create_insn	(x=0X8011000);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011014);
	create_insn	(x=0X8011042);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X801104C);
	create_insn	(x=0X8011060);
	op_hex		(x,	1);
	create_insn	(x=0X8011068);
	op_hex		(x,	1);
	create_insn	(x=0X8011070);
	op_hex		(x,	1);
	create_insn	(0X8011080);
	create_insn	(x=0X8011082);
	op_hex		(x,	1);
	create_insn	(x=0X801108A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011098);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80110A2);
	create_insn	(x=0X80110C2);
	op_hex		(x,	1);
	create_insn	(x=0X80110CA);
	op_hex		(x,	1);
	create_insn	(x=0X80110DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80110E8);
	create_insn	(x=0X80110F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X8011104);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011108);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801110C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8011110);
	create_insn	(x=0X8011116);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011118);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801111A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011122);
	create_insn	(0X8011134);
	create_insn	(x=0X8011138);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011142);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801114C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011156);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011158);
	op_plain_offset	(x,	1,	0X20001AD8);
	op_plain_offset	(x,	129,	0X20001AD8);
	create_insn	(x=0X8011162);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801116E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011174);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X801118A);
	make_array	(0X8011192,	0X2);
	create_dword	(x=0X8011194);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011198);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801119C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80111A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80111A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X80111A8);
	create_insn	(0X80111C2);
	create_insn	(0X80111C6);
	create_insn	(0X80111DA);
	create_insn	(0X80111F4);
	create_insn	(0X80111F8);
	create_insn	(x=0X801120C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011212);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011218);
	create_insn	(0X8011232);
	create_insn	(0X8011236);
	create_insn	(0X801124A);
	create_insn	(0X8011270);
	create_insn	(0X801127E);
	create_insn	(0X801128C);
	create_dword	(x=0X8011298);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X801129C);
	create_insn	(0X80112C0);
	create_insn	(0X80112C6);
	create_insn	(0X80112D0);
	create_insn	(0X80112D4);
	create_insn	(0X80112F4);
	create_insn	(x=0X80112FA);
	op_hex		(x,	1);
	create_insn	(x=0X801132C);
	op_hex		(x,	1);
	create_insn	(0X801134A);
	create_insn	(0X801137E);
	create_insn	(0X80113E2);
	create_insn	(x=0X80113EC);
	op_hex		(x,	1);
	create_insn	(0X8011410);
	create_insn	(0X8011426);
	create_insn	(x=0X8011452);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011468);
	op_hex		(x,	1);
	create_insn	(0X8011474);
	create_insn	(0X8011476);
	create_insn	(0X8011478);
	create_insn	(0X801147A);
	create_insn	(0X8011484);
	create_insn	(x=0X8011490);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X8011494);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X8011498);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X801149C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X80114A0);
	create_insn	(x=0X80114AE);
	op_hex		(x,	1);
	create_insn	(x=0X80114D0);
	op_hex		(x,	1);
	create_word	(0X80114EA);
	create_dword	(0X80114EC);
	make_array	(0X80114EC,	0X3);
	create_insn	(0X80114F8);
	create_dword	(0X8011500);
	create_insn	(0X8011504);
	make_array	(0X8011506,	0X2);
	create_insn	(x=0X8011508);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801150A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X8011512);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011514);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X8011524);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011526);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X801152A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801152C);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X801152E);
	op_hex		(x,	1);
	create_insn	(x=0X8011534);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011536);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X8011538);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801153A);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X801153C);
	op_hex		(x,	1);
	create_insn	(x=0X8011540);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011550);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011552);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X8011556);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011558);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X801155A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801155C);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X801155E);
	op_hex		(x,	1);
	create_insn	(x=0X8011562);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801156A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801156C);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X801156E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011570);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X8011572);
	op_hex		(x,	1);
	create_insn	(x=0X8011584);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011586);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X801158A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801158C);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X8011590);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011592);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X8011594);
	op_hex		(x,	1);
	create_insn	(x=0X8011598);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80115A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80115AA);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_insn	(x=0X80115AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80115AE);
	op_plain_offset	(x,	1,	0X20001058);
	op_plain_offset	(x,	129,	0X20001058);
	create_dword	(x=0X80115B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80115B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X80115BC);
	create_insn	(x=0X80115CA);
	op_hex		(x,	1);
	create_insn	(x=0X80115D8);
	op_hex		(x,	1);
	create_insn	(0X80115E4);
	create_insn	(x=0X80115F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80115F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80115F6);
	op_hex		(x,	1);
	create_insn	(x=0X8011600);
	op_stkvar	(x,	1);
	create_insn	(0X801160E);
	create_insn	(x=0X8011618);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011622);
	op_stkvar	(x,	1);
	create_insn	(0X801163E);
	create_insn	(0X801165C);
	create_insn	(0X8011672);
	create_insn	(0X8011692);
	create_insn	(x=0X8011696);
	op_stkvar	(x,	1);
	create_insn	(x=0X801169A);
	op_hex		(x,	1);
	create_insn	(x=0X80116B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80116E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80116F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011712);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011716);
	op_stkvar	(x,	1);
	create_insn	(x=0X801172E);
	op_stkvar	(x,	1);
	create_insn	(x=0X801173E);
	op_stkvar	(x,	1);
	create_insn	(x=0X801174E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011750);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011760);
	op_stkvar	(x,	1);
	create_insn	(x=0X801176A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011770);
	op_stkvar	(x,	1);
	create_insn	(x=0X801177A);
	op_hex		(x,	1);
	create_insn	(x=0X8011780);
	op_stkvar	(x,	1);
	create_insn	(0X801178A);
	create_insn	(0X801178C);
	create_insn	(x=0X8011790);
	op_hex		(x,	1);
	create_insn	(x=0X8011794);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011796);
	op_stkvar	(x,	1);
	create_insn	(x=0X80117A2);
	op_hex		(x,	1);
	create_insn	(x=0X80117AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80117AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80117B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80117BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80117D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80117DC);
	op_stkvar	(x,	1);
	create_insn	(0X8011816);
	create_insn	(0X801181E);
	create_insn	(x=0X8011834);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011840);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011842);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011844);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011862);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011888);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011894);
	op_stkvar	(x,	1);
	create_insn	(x=0X80118B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80118C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011906);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011908);
	op_hex		(x,	1);
	create_insn	(x=0X801190E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011910);
	op_hex		(x,	1);
	create_insn	(x=0X8011916);
	op_stkvar	(x,	1);
	create_insn	(x=0X801191C);
	op_stkvar	(x,	1);
	create_dword	(0X8011924);
	create_dword	(0X8011928);
	create_dword	(0X801192C);
	create_dword	(0X8011930);
	create_dword	(0X8011934);
	create_dword	(0X8011938);
	create_dword	(0X801193C);
	create_dword	(0X8011940);
	create_dword	(0X8011944);
	create_dword	(0X8011948);
	create_dword	(0X801194C);
	create_dword	(0X8011950);
	create_dword	(x=0X8011954);
	op_plain_offset	(x,	0,	0X8011710);
	op_plain_offset	(x,	128,	0X8011710);
	create_dword	(x=0X8011958);
	op_plain_offset	(x,	0,	0X80117B8);
	op_plain_offset	(x,	128,	0X80117B8);
	create_dword	(0X801195C);
	create_dword	(0X8011960);
	create_dword	(0X8011964);
	create_dword	(0X8011968);
	create_insn	(0X801196C);
	create_insn	(x=0X8011970);
	op_hex		(x,	1);
	create_insn	(0X8011A0A);
	make_array	(0X8011A52,	0X2);
	create_dword	(0X8011A54);
	create_dword	(x=0X8011A58);
	op_plain_offset	(x,	0,	0X80119AC);
	op_plain_offset	(x,	128,	0X80119AC);
	create_dword	(0X8011A5C);
	create_dword	(0X8011A60);
	create_dword	(0X8011A64);
	create_insn	(0X8011A68);
	create_insn	(x=0X8011A7C);
	op_hex		(x,	1);
	create_insn	(x=0X8011A98);
	op_hex		(x,	1);
	make_array	(0X8011B12,	0X2);
	create_insn	(0X8011B14);
	create_insn	(x=0X8011B1A);
	op_hex		(x,	1);
	create_insn	(0X8011B40);
	create_insn	(x=0X8011B6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011B86);
	op_stkvar	(x,	1);
	create_insn	(0X8011BCA);
	create_dword	(x=0X8011BF4);
	op_plain_offset	(x,	0,	0X8011B66);
	op_plain_offset	(x,	128,	0X8011B66);
	create_dword	(0X8011BF8);
	create_dword	(0X8011BFC);
	create_insn	(0X8011C00);
	make_array	(0X8011C0A,	0X2);
	create_dword	(0X8011C0C);
	create_insn	(0X8011C10);
	create_insn	(x=0X8011C18);
	op_hex		(x,	1);
	create_insn	(x=0X8011C1C);
	op_stkvar	(x,	1);
	create_insn	(0X8011C3E);
	create_insn	(0X8011C4C);
	create_insn	(0X8011C76);
	create_insn	(x=0X8011C7A);
	op_hex		(x,	1);
	create_insn	(0X8011CBC);
	create_insn	(0X8011CEA);
	create_insn	(0X8011D28);
	create_insn	(0X8011DAC);
	create_insn	(x=0X8011DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011DE6);
	op_hex		(x,	1);
	make_array	(0X8011DEE,	0X2);
	create_dword	(0X8011DF0);
	create_dword	(0X8011DF4);
	create_dword	(0X8011DF8);
	create_dword	(0X8011DFC);
	create_dword	(0X8011E00);
	create_dword	(0X8011E04);
	create_dword	(0X8011E08);
	create_dword	(0X8011E0C);
	create_dword	(0X8011E10);
	create_dword	(0X8011E14);
	create_dword	(0X8011E18);
	create_dword	(0X8011E1C);
	create_dword	(0X8011E20);
	create_dword	(x=0X8011E24);
	op_plain_offset	(x,	0,	0X8011D62);
	op_plain_offset	(x,	128,	0X8011D62);
	create_dword	(x=0X8011E28);
	op_plain_offset	(x,	0,	0X8011D7C);
	op_plain_offset	(x,	128,	0X8011D7C);
	create_dword	(x=0X8011E2C);
	op_plain_offset	(x,	0,	0X8011DBE);
	op_plain_offset	(x,	128,	0X8011DBE);
	create_dword	(x=0X8011E30);
	op_plain_offset	(x,	0,	0X8011DD6);
	op_plain_offset	(x,	128,	0X8011DD6);
	create_insn	(0X8011E34);
	create_insn	(x=0X8011E3E);
	op_hex		(x,	1);
	create_insn	(x=0X8011E50);
	op_hex		(x,	1);
	create_insn	(0X8011E70);
	create_insn	(0X8011E96);
	create_insn	(0X8011E9E);
	create_insn	(x=0X8011EBE);
	op_hex		(x,	1);
	create_insn	(x=0X8011EC2);
	op_hex		(x,	1);
	create_insn	(0X8011ECC);
	create_insn	(0X8011ED2);
	create_insn	(x=0X8011EEC);
	op_hex		(x,	1);
	create_insn	(0X8011F0E);
	create_insn	(0X8011F16);
	create_insn	(0X8011F1E);
	create_insn	(0X8011F26);
	create_insn	(x=0X8011F4A);
	op_hex		(x,	1);
	create_insn	(x=0X8011F5E);
	op_hex		(x,	1);
	create_insn	(0X8011F7E);
	make_array	(0X8011F8E,	0X2);
	create_dword	(0X8011F90);
	create_dword	(0X8011F94);
	create_dword	(0X8011F98);
	create_dword	(x=0X8011F9C);
	op_plain_offset	(x,	0,	0X8011EDA);
	op_plain_offset	(x,	128,	0X8011EDA);
	create_dword	(0X8011FA0);
	create_dword	(0X8011FA4);
	create_dword	(0X8011FA8);
	create_dword	(0X8011FAC);
	create_dword	(0X8011FB0);
	create_insn	(0X8011FB4);
	create_insn	(x=0X8011FB8);
	op_hex		(x,	1);
	create_insn	(x=0X8011FE2);
	op_stkvar	(x,	1);
	create_insn	(0X8011FEA);
	create_insn	(x=0X8011FF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011FFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012000);
	op_hex		(x,	1);
	create_insn	(x=0X8012006);
	op_stkvar	(x,	1);
	create_insn	(x=0X801201A);
	op_stkvar	(x,	1);
	create_insn	(x=0X801201E);
	op_stkvar	(x,	1);
	create_insn	(0X801202C);
	create_insn	(x=0X8012034);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012038);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012044);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012052);
	op_hex		(x,	1);
	create_dword	(0X8012058);
	create_dword	(0X801205C);
	create_insn	(0X8012060);
	create_insn	(0X8012084);
	create_insn	(x=0X80120A6);
	op_hex		(x,	1);
	create_insn	(0X801216A);
	create_insn	(0X801217C);
	create_dword	(0X80121E0);
	create_dword	(0X80121E4);
	create_dword	(0X80121E8);
	create_dword	(x=0X80121EC);
	op_plain_offset	(x,	0,	0X801212E);
	op_plain_offset	(x,	128,	0X801212E);
	create_dword	(0X80121F0);
	create_dword	(0X80121F4);
	create_dword	(x=0X80121F8);
	op_plain_offset	(x,	0,	0X801215A);
	op_plain_offset	(x,	128,	0X801215A);
	create_dword	(0X80121FC);
	create_dword	(0X8012200);
	create_dword	(0X8012204);
	create_dword	(0X8012208);
	create_dword	(0X801220C);
	create_dword	(0X8012210);
	create_dword	(0X8012214);
	create_insn	(0X8012218);
	create_insn	(x=0X8012228);
	op_hex		(x,	1);
	create_insn	(x=0X801222C);
	op_hex		(x,	1);
	create_insn	(0X801227A);
	create_insn	(0X80122BA);
	create_insn	(0X80122F8);
	create_insn	(x=0X801230A);
	op_hex		(x,	1);
	create_insn	(0X8012344);
	create_insn	(0X801235C);
	create_insn	(0X8012392);
	create_insn	(x=0X8012398);
	op_hex		(x,	1);
	create_insn	(0X80123B0);
	create_insn	(0X80123C6);
	create_insn	(0X80123DC);
	create_insn	(0X80123EA);
	create_insn	(0X80123FC);
	create_insn	(0X8012406);
	create_insn	(0X801242C);
	create_insn	(x=0X801243C);
	op_hex		(x,	1);
	create_insn	(0X801247E);
	create_insn	(0X8012494);
	create_insn	(0X80124AC);
	create_insn	(0X80124AE);
	create_insn	(0X80124BA);
	create_insn	(x=0X80124C2);
	op_stkvar	(x,	1);
	create_insn	(0X80124E2);
	create_insn	(0X80124FA);
	create_insn	(0X8012506);
	create_insn	(0X8012510);
	create_insn	(0X801253C);
	create_insn	(0X8012554);
	create_insn	(x=0X801259C);
	op_stkvar	(x,	1);
	create_insn	(x=0X801259E);
	op_stkvar	(x,	1);
	create_insn	(x=0X80125B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80125B8);
	op_stkvar	(x,	1);
	create_insn	(0X80125CC);
	create_insn	(0X80125CE);
	create_insn	(x=0X80125DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80125E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80125F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80125F6);
	op_stkvar	(x,	1);
	create_insn	(0X8012602);
	create_insn	(x=0X8012622);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012628);
	op_hex		(x,	1);
	create_insn	(x=0X801262C);
	op_hex		(x,	1);
	create_insn	(x=0X8012630);
	op_stkvar	(x,	1);
	create_dword	(0X8012638);
	create_dword	(0X801263C);
	create_dword	(0X8012640);
	create_dword	(0X8012644);
	create_dword	(0X8012648);
	create_dword	(0X801264C);
	create_dword	(x=0X8012650);
	op_plain_offset	(x,	0,	0X80123A8);
	op_plain_offset	(x,	128,	0X80123A8);
	create_dword	(0X8012654);
	create_dword	(0X8012658);
	create_dword	(0X801265C);
	create_dword	(0X8012660);
	create_dword	(0X8012664);
	create_dword	(0X8012668);
	create_dword	(0X801266C);
	create_dword	(0X8012670);
	create_dword	(0X8012674);
	create_dword	(0X8012678);
	create_dword	(0X801267C);
	create_insn	(0X8012680);
	create_insn	(x=0X8012694);
	op_stkvar	(x,	1);
	create_insn	(x=0X801269C);
	op_stkvar	(x,	1);
	create_insn	(x=0X801269E);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80126FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X801270C);
	op_stkvar	(x,	1);
	create_insn	(x=0X801270E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012714);
	op_stkvar	(x,	1);
	create_insn	(x=0X801271C);
	op_stkvar	(x,	1);
	create_insn	(x=0X801272C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012732);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012734);
	op_stkvar	(x,	1);
	create_insn	(x=0X801273A);
	op_stkvar	(x,	1);
	create_insn	(x=0X801273C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012744);
	op_stkvar	(x,	1);
	create_insn	(x=0X801274A);
	op_stkvar	(x,	1);
	create_insn	(x=0X801274C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012752);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012754);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012756);
	op_stkvar	(x,	1);
	create_insn	(x=0X801276A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012774);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012778);
	op_stkvar	(x,	1);
	create_insn	(x=0X801277A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012784);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012786);
	op_stkvar	(x,	1);
	create_insn	(x=0X801278E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012796);
	op_stkvar	(x,	1);
	create_insn	(x=0X801279C);
	op_stkvar	(x,	1);
	create_insn	(x=0X801279E);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80127FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012802);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012804);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012806);
	op_stkvar	(x,	1);
	create_insn	(x=0X801280E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012814);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012816);
	op_stkvar	(x,	1);
	create_insn	(x=0X801281E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012824);
	op_stkvar	(x,	1);
	create_insn	(x=0X801282C);
	op_stkvar	(x,	1);
	create_insn	(x=0X801282E);
	op_stkvar	(x,	1);
	create_insn	(x=0X801283A);
	op_stkvar	(x,	1);
	create_insn	(x=0X801283C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012844);
	op_stkvar	(x,	1);
	create_insn	(x=0X801284C);
	op_stkvar	(x,	1);
	create_insn	(x=0X801285C);
	op_stkvar	(x,	1);
	create_insn	(x=0X801285E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012866);
	op_stkvar	(x,	1);
	create_insn	(x=0X801286E);
	op_stkvar	(x,	1);
	create_insn	(x=0X801287E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012894);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012896);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012898);
	op_stkvar	(x,	1);
	create_insn	(x=0X80128A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80128A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80128A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X80128C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80128CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80128DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80128DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80128E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80128E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80128F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80128F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012900);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012906);
	op_stkvar	(x,	1);
	create_insn	(x=0X801291A);
	op_stkvar	(x,	1);
	create_insn	(x=0X801293A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012968);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012978);
	op_stkvar	(x,	1);
	create_insn	(0X80129A2);
	create_insn	(x=0X80129A4);
	op_hex		(x,	1);
	create_insn	(x=0X80129E2);
	op_hex		(x,	1);
	create_insn	(x=0X8012A1C);
	op_hex		(x,	1);
	create_insn	(x=0X8012A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012A5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012A6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012A74);
	op_stkvar	(x,	1);
	create_dword	(0X8012A84);
	create_dword	(x=0X8012A88);
	op_plain_offset	(x,	0,	0X80126AE);
	op_plain_offset	(x,	128,	0X80126AE);
	create_dword	(0X8012A8C);
	create_dword	(x=0X8012A90);
	op_plain_offset	(x,	0,	0X80126F8);
	op_plain_offset	(x,	128,	0X80126F8);
	create_dword	(x=0X8012A94);
	op_plain_offset	(x,	0,	0X8012772);
	op_plain_offset	(x,	128,	0X8012772);
	create_dword	(0X8012A98);
	create_dword	(0X8012A9C);
	create_dword	(0X8012AA0);
	create_dword	(0X8012AA4);
	create_dword	(0X8012AA8);
	create_dword	(x=0X8012AAC);
	op_plain_offset	(x,	0,	0X801288A);
	op_plain_offset	(x,	128,	0X801288A);
	create_dword	(x=0X8012AB0);
	op_plain_offset	(x,	0,	0X80128B4);
	op_plain_offset	(x,	128,	0X80128B4);
	create_dword	(0X8012AB4);
	create_dword	(0X8012AB8);
	create_dword	(0X8012ABC);
	create_dword	(0X8012AC0);
	create_dword	(0X8012AC4);
	create_dword	(0X8012AC8);
	create_dword	(0X8012ACC);
	create_dword	(0X8012AD0);
	create_dword	(x=0X8012AD4);
	op_plain_offset	(x,	0,	0X8012A10);
	op_plain_offset	(x,	128,	0X8012A10);
	create_dword	(0X8012AD8);
	create_dword	(0X8012ADC);
	create_dword	(0X8012AE0);
	create_dword	(0X8012AE4);
	create_insn	(0X8012AE8);
	create_insn	(x=0X8012AF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012AF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012AFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012B0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012B1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012B62);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012B64);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012B76);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012B86);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012B8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012BD4);
	op_stkvar	(x,	1);
	make_array	(0X8012BE6,	0X2);
	create_dword	(0X8012BE8);
	create_dword	(0X8012BEC);
	create_dword	(x=0X8012BF0);
	op_plain_offset	(x,	0,	0X8012B38);
	op_plain_offset	(x,	128,	0X8012B38);
	create_dword	(0X8012BF4);
	create_insn	(0X8012BF8);
	create_insn	(x=0X8012BFC);
	op_hex		(x,	1);
	create_insn	(x=0X8012C0A);
	op_stkvar	(x,	1);
	create_insn	(0X8012C0E);
	create_insn	(x=0X8012C28);
	op_stkvar	(x,	1);
	create_insn	(0X8012C30);
	create_insn	(x=0X8012C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012C40);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012C46);
	op_hex		(x,	1);
	create_insn	(x=0X8012C58);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012C66);
	op_hex		(x,	1);
	create_insn	(x=0X8012C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012C7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012C8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012C92);
	op_stkvar	(x,	1);
	make_array	(0X8012C9E,	0X2);
	create_dword	(0X8012CA0);
	create_dword	(0X8012CA4);
	create_insn	(0X8012CA8);
	create_insn	(x=0X8012CBE);
	op_hex		(x,	1);
	create_insn	(x=0X8012CD6);
	op_hex		(x,	1);
	create_insn	(x=0X8012CF4);
	op_hex		(x,	1);
	create_insn	(x=0X8012D00);
	op_hex		(x,	1);
	create_insn	(x=0X8012D1E);
	op_hex		(x,	1);
	create_insn	(0X8012D24);
	create_insn	(0X8012D3E);
	create_insn	(0X8012D4C);
	make_array	(0X8012D56,	0X2);
	create_insn	(0X8012D58);
	create_insn	(x=0X8012D60);
	op_hex		(x,	1);
	create_insn	(x=0X8012DA0);
	op_hex		(x,	1);
	create_insn	(0X8012DEC);
	create_insn	(x=0X8012DF0);
	op_hex		(x,	1);
	create_insn	(0X8012E0C);
	create_insn	(0X8012E58);
	create_insn	(0X8012E64);
	create_insn	(0X8012E7C);
	create_insn	(x=0X8012E8C);
	op_hex		(x,	1);
	create_insn	(0X8012E94);
	create_dword	(0X8012EA0);
	create_dword	(0X8012EA4);
	create_insn	(0X8012EA8);
	make_array	(0X8012EB2,	0X2);
	create_dword	(0X8012EB4);
	create_insn	(0X8012EB8);
	create_insn	(0X8012ED0);
	create_insn	(x=0X8012F34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8012FD8);
	op_hex		(x,	1);
	create_insn	(0X8012FF0);
	create_insn	(0X8013004);
	create_insn	(0X8013016);
	create_insn	(0X8013068);
	create_insn	(0X801307A);
	create_insn	(x=0X8013084);
	op_hex		(x,	1);
	create_insn	(0X801308C);
	create_insn	(0X8013098);
	create_insn	(x=0X80130AA);
	op_hex		(x,	1);
	create_insn	(0X80130B2);
	create_insn	(0X80130C0);
	create_insn	(0X80130D4);
	create_insn	(x=0X80130DC);
	op_hex		(x,	1);
	create_insn	(0X80130E2);
	create_insn	(0X80130EA);
	create_dword	(0X80130F8);
	make_array	(0X80130F8,	0X20);
	create_dword	(0X8013178);
	create_dword	(0X801317C);
	create_insn	(0X8013180);
	create_insn	(0X80131B2);
	create_insn	(0X80131CE);
	create_insn	(x=0X80131D4);
	op_stkvar	(x,	1);
	create_insn	(0X80131DC);
	make_array	(0X80131DE,	0X2);
	create_insn	(0X80131E0);
	create_insn	(0X8013206);
	create_insn	(0X8013222);
	create_insn	(0X8013228);
	create_insn	(x=0X8013230);
	op_stkvar	(x,	1);
	create_insn	(0X8013238);
	create_insn	(x=0X801323A);
	op_hex		(x,	1);
	create_insn	(0X8013262);
	create_insn	(0X8013268);
	create_insn	(0X8013288);
	make_array	(0X801328E,	0X2);
	create_insn	(0X8013290);
	create_insn	(0X80132B0);
	create_insn	(0X80132C2);
	create_insn	(0X80132C6);
	create_insn	(0X80132DE);
	create_insn	(0X80132F2);
	create_insn	(0X8013308);
	create_insn	(x=0X8013334);
	op_hex		(x,	1);
	create_insn	(x=0X8013338);
	op_hex		(x,	1);
	create_insn	(x=0X801336A);
	op_hex		(x,	1);
	create_insn	(x=0X801336E);
	op_hex		(x,	1);
	create_insn	(0X801338C);
	create_insn	(x=0X80133B6);
	op_hex		(x,	1);
	create_insn	(0X80133D0);
	create_insn	(x=0X80133FC);
	op_hex		(x,	1);
	create_insn	(0X8013402);
	create_insn	(x=0X801341A);
	op_hex		(x,	1);
	create_insn	(0X8013420);
	create_insn	(0X801342C);
	create_insn	(0X8013430);
	create_insn	(0X8013442);
	create_dword	(0X8013454);
	create_dword	(0X8013458);
	create_insn	(0X801345C);
	create_insn	(x=0X8013460);
	op_hex		(x,	1);
	create_insn	(0X801349E);
	create_insn	(0X80134A4);
	create_insn	(x=0X80134B0);
	op_hex		(x,	1);
	set_cmt	(0X80134B4,	"switch 4 cases ",	0);
	create_insn	(x=0X80134C2);
	op_hex		(x,	1);
	set_cmt	(0X80134C8,	"switch jump",	0);
	create_insn	(0X80134C8);
	set_cmt	(0X80134CC,	"jump table for switch statement",	0);
	create_byte	(0X80134CC);
	set_name	(0X80134CC,	"jpt_80134C8");
	create_byte	(0X80134CD);
	create_byte	(0X80134CE);
	create_byte	(0X80134CF);
	set_cmt	(0X80134D0,	"jumptable 080134C8 cases 6,7",	1);
	create_insn	(0X80134D0);
	set_cmt	(0X80134DE,	"jumptable 080134C8 case 4",	1);
	create_insn	(0X80134DE);
	set_cmt	(0X80134E2,	"jumptable 080134C8 case 5",	1);
	create_insn	(x=0X80134F2);
	op_hex		(x,	1);
	create_insn	(0X80134F8);
	create_insn	(0X8013504);
	create_insn	(0X8013524);
	create_insn	(0X8013536);
	create_insn	(0X801353A);
	create_insn	(0X8013552);
	create_insn	(0X8013566);
	create_insn	(0X8013570);
	create_insn	(x=0X8013576);
	op_hex		(x,	1);
	create_insn	(x=0X801357E);
	op_hex		(x,	1);
	make_array	(0X8013586,	0X2);
	create_insn	(0X8013588);
	create_insn	(x=0X80135A4);
	op_hex		(x,	1);
	create_insn	(x=0X80135B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80136A4);
	op_hex		(x,	1);
	make_array	(0X80136BA,	0X2);
	create_dword	(0X80136BC);
	make_array	(0X80136BC,	0XC);
	create_insn	(0X80136EC);
	create_insn	(0X801370E);
	create_insn	(0X801371E);
	create_insn	(x=0X801372E);
	op_hex		(x,	1);
	create_insn	(0X8013736);
	create_dword	(0X8013750);
	create_insn	(0X8013754);
	create_insn	(x=0X801375C);
	op_hex		(x,	1);
	create_insn	(x=0X801376E);
	op_hex		(x,	1);
	create_insn	(x=0X80137F4);
	op_hex		(x,	1);
	create_insn	(0X80137FA);
	create_insn	(x=0X801385C);
	op_hex		(x,	1);
	create_insn	(0X8013862);
	create_insn	(x=0X801386C);
	op_hex		(x,	1);
	create_insn	(x=0X80138A4);
	op_hex		(x,	1);
	create_insn	(0X80138AA);
	create_insn	(0X80138B6);
	create_insn	(0X80138C0);
	create_insn	(0X80138C6);
	create_insn	(0X80138D6);
	create_insn	(0X80138DC);
	create_insn	(x=0X80138EC);
	op_hex		(x,	1);
	create_insn	(0X80138F6);
	create_insn	(0X801390C);
	create_insn	(x=0X801391C);
	op_hex		(x,	1);
	create_dword	(0X8013924);
	create_insn	(0X8013928);
	create_insn	(x=0X801393C);
	op_hex		(x,	1);
	create_insn	(x=0X8013942);
	op_hex		(x,	1);
	create_insn	(x=0X801394A);
	op_hex		(x,	1);
	create_insn	(x=0X8013950);
	op_hex		(x,	1);
	create_insn	(x=0X8013966);
	op_stkvar	(x,	1);
	create_insn	(0X8013970);
	make_array	(0X801397E,	0X2);
	create_insn	(0X8013980);
	create_insn	(x=0X8013986);
	op_hex		(x,	1);
	create_insn	(x=0X80139D6);
	op_hex		(x,	1);
	create_insn	(x=0X80139F0);
	op_hex		(x,	1);
	create_insn	(0X8013A04);
	create_insn	(x=0X8013A10);
	op_hex		(x,	1);
	create_insn	(0X8013A26);
	create_insn	(x=0X8013A32);
	op_hex		(x,	1);
	create_insn	(0X8013A38);
	create_dword	(0X8013A40);
	create_insn	(0X8013A44);
	make_array	(0X8013A4A,	0X2);
	create_dword	(0X8013A4C);
	create_insn	(0X8013A50);
	create_insn	(0X8013A68);
	create_insn	(x=0X8013A88);
	op_hex		(x,	1);
	create_insn	(x=0X8013A8C);
	op_hex		(x,	1);
	create_insn	(x=0X8013A90);
	op_hex		(x,	1);
	create_insn	(x=0X8013A94);
	op_hex		(x,	1);
	create_insn	(x=0X8013A98);
	op_hex		(x,	1);
	create_insn	(x=0X8013AA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8013B0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013B20);
	op_hex		(x,	1);
	create_insn	(x=0X8013B2A);
	op_hex		(x,	1);
	create_insn	(0X8013B30);
	create_insn	(x=0X8013B3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013B42);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013B46);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013B4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8013B4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8013B4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013B50);
	op_stkvar	(x,	1);
	create_word	(0X8013B56);
	create_insn	(0X8013B58);
	create_word	(0X8013B6A);
	create_dword	(0X8013B6C);
	make_array	(0X8013B6C,	0X2);
	create_insn	(0X8013B74);
	create_insn	(0X8013B8C);
	create_insn	(x=0X8013B96);
	op_hex		(x,	1);
	create_insn	(x=0X8013BA2);
	op_hex		(x,	1);
	create_insn	(x=0X8013BAC);
	op_hex		(x,	1);
	create_insn	(0X8013BB2);
	create_insn	(0X8013BC0);
	create_insn	(x=0X8013BC4);
	op_hex		(x,	1);
	create_insn	(0X8013BCA);
	create_insn	(x=0X8013BCE);
	op_hex		(x,	1);
	create_insn	(x=0X8013BD6);
	op_hex		(x,	1);
	create_dword	(0X8013BE8);
	create_insn	(0X8013BEC);
	create_insn	(x=0X8013BF6);
	op_hex		(x,	1);
	create_insn	(0X8013C08);
	create_insn	(x=0X8013C10);
	op_stkvar	(x,	1);
	create_insn	(0X8013C18);
	make_array	(0X8013C22,	0X2);
	create_insn	(0X8013C24);
	create_insn	(x=0X8013C30);
	op_hex		(x,	1);
	create_insn	(0X8013C3A);
	create_insn	(0X8013C4E);
	create_insn	(x=0X8013C54);
	op_stkvar	(x,	1);
	create_insn	(0X8013C5C);
	make_array	(0X8013C62,	0X2);
	create_insn	(x=0X8013C64);
	op_hex		(x,	1);
	create_insn	(x=0X8013C8E);
	op_hex		(x,	1);
	create_insn	(0X8013C94);
	create_insn	(x=0X8013CB4);
	op_hex		(x,	1);
	make_array	(0X8013CBA,	0X2);
	create_insn	(0X8013CBC);
	create_insn	(0X8013CD4);
	create_insn	(0X8013CE6);
	create_insn	(0X8013CEA);
	create_insn	(0X8013CFA);
	create_insn	(0X8013D0E);
	create_insn	(0X8013D24);
	create_insn	(x=0X8013D44);
	op_hex		(x,	1);
	create_insn	(x=0X8013D64);
	op_hex		(x,	1);
	create_insn	(x=0X8013D92);
	op_hex		(x,	1);
	create_insn	(x=0X8013DA0);
	op_hex		(x,	1);
	create_insn	(x=0X8013DB2);
	op_hex		(x,	1);
	create_insn	(0X8013DB8);
	create_insn	(0X8013DCC);
	create_insn	(x=0X8013DD6);
	op_hex		(x,	1);
	create_insn	(x=0X8013DE6);
	op_hex		(x,	1);
	create_insn	(0X8013DEC);
	create_insn	(0X8013DFC);
	create_insn	(0X8013E00);
	create_insn	(0X8013E12);
	create_insn	(0X8013E26);
	create_insn	(x=0X8013E2A);
	op_hex		(x,	1);
	create_insn	(0X8013E64);
	create_insn	(0X8013E6A);
	create_insn	(x=0X8013E76);
	op_hex		(x,	1);
	set_cmt	(0X8013E7A,	"switch 4 cases ",	0);
	create_insn	(x=0X8013E88);
	op_hex		(x,	1);
	set_cmt	(0X8013E8E,	"switch jump",	0);
	create_insn	(0X8013E8E);
	set_cmt	(0X8013E92,	"jump table for switch statement",	0);
	create_byte	(0X8013E92);
	set_name	(0X8013E92,	"jpt_8013E8E");
	create_byte	(0X8013E93);
	create_byte	(0X8013E94);
	create_byte	(0X8013E95);
	set_cmt	(0X8013E96,	"jumptable 08013E8E cases 6,7",	1);
	create_insn	(0X8013E96);
	set_cmt	(0X8013EA0,	"jumptable 08013E8E case 4",	1);
	create_insn	(0X8013EA0);
	set_cmt	(0X8013EA2,	"jumptable 08013E8E case 5",	1);
	create_insn	(x=0X8013EAC);
	op_hex		(x,	1);
	create_insn	(0X8013EB2);
	create_insn	(0X8013EBC);
	create_insn	(x=0X8013EC2);
	op_hex		(x,	1);
	create_insn	(x=0X8013ECE);
	op_hex		(x,	1);
	create_insn	(x=0X8013F06);
	op_hex		(x,	1);
	create_insn	(x=0X8013F1C);
	op_hex		(x,	1);
	create_insn	(0X8013F26);
	create_insn	(x=0X8013F36);
	op_hex		(x,	1);
	create_insn	(x=0X8013F48);
	op_hex		(x,	1);
	create_insn	(0X8013F4E);
	create_insn	(0X8013F7A);
	create_insn	(0X8013F86);
	create_insn	(0X8013F96);
	create_insn	(x=0X8013FA0);
	op_hex		(x,	1);
	create_insn	(x=0X8013FA6);
	op_hex		(x,	1);
	create_insn	(x=0X8013FC0);
	op_hex		(x,	1);
	create_insn	(x=0X8013FD0);
	op_hex		(x,	1);
	create_insn	(x=0X8013FDC);
	op_hex		(x,	1);
	create_insn	(x=0X8013FE2);
	op_hex		(x,	1);
	create_insn	(x=0X8013FE6);
	op_hex		(x,	1);
	create_insn	(x=0X8013FF4);
	op_hex		(x,	1);
	create_insn	(x=0X8013FF8);
	op_hex		(x,	1);
	create_insn	(x=0X8014000);
	op_hex		(x,	1);
	create_insn	(0X801400A);
	create_insn	(x=0X8014034);
	op_hex		(x,	1);
	create_insn	(x=0X801403A);
	op_hex		(x,	1);
	create_insn	(x=0X801403E);
	op_hex		(x,	1);
	create_insn	(x=0X8014048);
	op_hex		(x,	1);
	create_insn	(0X8014052);
	create_insn	(x=0X801405C);
	op_hex		(x,	1);
	create_insn	(0X8014066);
	create_insn	(x=0X8014070);
	op_hex		(x,	1);
	create_insn	(x=0X801408A);
	op_hex		(x,	1);
	create_insn	(x=0X8014090);
	op_hex		(x,	1);
	create_insn	(x=0X8014094);
	op_hex		(x,	1);
	create_insn	(x=0X801409A);
	op_hex		(x,	1);
	create_insn	(0X80140A0);
	create_insn	(x=0X80140A8);
	op_hex		(x,	1);
	create_insn	(x=0X80140B2);
	op_hex		(x,	1);
	create_insn	(x=0X80140B8);
	op_hex		(x,	1);
	create_insn	(0X80140C6);
	create_insn	(x=0X80140CE);
	op_hex		(x,	1);
	create_insn	(0X80140DC);
	create_word	(0X80140E2);
	create_dword	(0X80140E4);
	make_array	(0X80140E4,	0X200);
	create_dword	(0X80148E4);
	make_array	(0X80148E4,	0X200);
	create_dword	(0X80150E4);
	make_array	(0X80150E4,	0X107);
	create_dword	(x=0X801850C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8018A58);
	make_array	(0X8018A5C,	0X4);
	make_array	(0X1FFFF700,	0X100);
	create_word	(0X1FFFF800);
	create_word	(0X1FFFF802);
	make_array	(0X1FFFF804,	0X4);
	create_word	(0X1FFFF808);
	create_word	(0X1FFFF80A);
	create_word	(0X1FFFF80C);
	create_word	(0X1FFFF80E);
	create_byte	(0X20000064);
	create_byte	(0X20000065);
	make_array	(0X20000066,	0X2);
	create_byte	(0X20000068);
	make_array	(0X20000069,	0X3);
	create_dword	(0X2000006C);
	create_dword	(0X20000070);
	create_dword	(0X20000074);
	create_byte	(0X20000078);
	make_array	(0X20000079,	0X3);
	create_dword	(0X2000007C);
	create_dword	(0X20000080);
	create_dword	(0X20000084);
	create_dword	(0X20000088);
	create_dword	(0X2000008C);
	create_dword	(0X20000090);
	create_dword	(0X20000094);
	create_dword	(0X20000098);
	create_byte	(0X2000009C);
	create_byte	(0X2000009D);
	create_byte	(0X2000009E);
	create_byte	(0X2000009F);
	create_byte	(0X200000A0);
	make_array	(0X200000A1,	0X3);
	create_byte	(0X200000A4);
	make_array	(0X200000A5,	0X3);
	create_dword	(0X200000A8);
	create_byte	(0X200000AC);
	make_array	(0X200000AD,	0X3);
	create_dword	(0X200000B0);
	create_byte	(0X200000B4);
	create_byte	(0X200000B5);
	create_byte	(0X200000B6);
	create_dword	(0X200000B8);
	create_dword	(0X200000BC);
	create_dword	(0X200000C0);
	create_dword	(0X200000C4);
	create_dword	(0X200000C8);
	create_dword	(0X200000CC);
	create_byte	(0X200000D0);
	make_array	(0X200000D1,	0X3);
	create_dword	(0X200000D4);
	create_byte	(0X200000E8);
	create_byte	(0X200000FD);
	create_byte	(0X200000FE);
	create_byte	(0X200000FF);
	create_byte	(0X20000100);
	create_byte	(0X20000101);
	create_byte	(0X20000102);
	create_byte	(0X20000103);
	create_word	(0X20000104);
	make_array	(0X20000106,	0X2);
	create_dword	(0X20000108);
	create_dword	(0X2000010C);
	create_dword	(0X20000110);
	create_dword	(0X20000114);
	create_byte	(0X20000118);
	create_byte	(0X20000119);
	create_byte	(0X2000011A);
	create_byte	(0X2000011B);
	create_byte	(0X2000011C);
	create_byte	(0X2000011D);
	create_byte	(0X2000011E);
	create_byte	(0X2000011F);
	create_dword	(0X20000120);
	create_byte	(0X20000124);
	set_name	(0X20000124,	"active_transciever_attenuation");
	create_byte	(0X20000125);
	create_byte	(0X20000126);
	set_name	(0X20000126,	"fpga_reg_unkn00_value");
	create_dword	(0X20000128);
	create_byte	(0X2000012C);
	create_byte	(0X2000012D);
	create_byte	(0X2000012E);
	create_byte	(0X2000012F);
	create_byte	(0X20000130);
	make_array	(0X20000131,	0X3);
	create_word	(0X20000134);
	create_word	(0X20000136);
	create_word	(0X20000138);
	create_word	(0X2000013A);
	create_word	(0X2000013C);
	create_word	(0X2000013E);
	create_word	(0X20000140);
	create_word	(0X20000142);
	create_dword	(0X20000144);
	create_dword	(0X20000148);
	create_word	(0X2000014C);
	make_array	(0X2000014E,	0X2);
	create_dword	(0X20000150);
	create_dword	(0X20000154);
	create_dword	(0X20000158);
	create_dword	(0X2000015C);
	create_dword	(0X20000DC8);
	create_word	(0X20000DF0);
	create_word	(0X20000DF2);
	create_word	(0X20000DF4);
	create_word	(0X20000DF6);
	create_word	(0X20000DF8);
	create_word	(0X20000DFA);
	create_word	(0X20000DFC);
	create_word	(0X20000E11);
	create_word	(0X20000E15);
	create_word	(0X20000E19);
	create_byte	(0X20000E1C);
	create_byte	(0X20000E1D);
	create_byte	(0X20000E1E);
	create_dword	(0X20000E21);
	create_dword	(0X20000E25);
	create_word	(0X20000E29);
	create_byte	(0X20000E4C);
	create_dword	(0X2000104E);
	create_dword	(0X20001052);
	create_byte	(0X20001056);
	create_dword	(0X20001058);
	set_name	(0X20001058,	"ofdm_receiver_id");
	create_byte	(0X2000105C);
	create_dword	(0X2000105D);
	make_array	(0X20001061,	0X3);
	create_dword	(0X20001064);
	create_dword	(0X20001068);
	create_byte	(0X200010A4);
	make_array	(0X200010A5,	0X3);
	create_dword	(0X200010A8);
	create_dword	(0X200010AC);
	create_dword	(0X200010B0);
	create_dword	(0X200010B4);
	create_dword	(0X200010B8);
	create_dword	(0X200010BC);
	create_byte	(0X200010C0);
	create_byte	(0X20001125);
	create_byte	(0X20001127);
	create_byte	(0X20001128);
	create_byte	(0X20001129);
	create_byte	(0X2000112A);
	create_byte	(0X2000112B);
	create_dword	(0X2000112C);
	create_byte	(0X20001130);
	create_byte	(0X20001131);
	set_name	(0X20001131,	"transciever_attenuation");
	create_byte	(0X20001132);
	set_name	(0X20001132,	"tcx_control_attenuation_by_packet");
	create_byte	(0X200011F4);
	create_dword	(0X20001218);
	create_word	(0X20001222);
	make_array	(0X20001224,	0X4);
	create_dword	(0X20001760);
	create_word	(0X2000176A);
	make_array	(0X2000176C,	0X4);
	create_dword	(0X200019E8);
	create_word	(0X200019F2);
	make_array	(0X200019F4,	0X4);
	create_dword	(0X20001A78);
	create_dword	(0X20001A7C);
	create_dword	(0X20001A80);
	create_dword	(0X20001A84);
	create_word	(0X20001A94);
	create_byte	(0X20001A9C);
	create_dword	(0X20001AA4);
	create_dword	(0X20001AA8);
	create_dword	(0X20001AAC);
	create_dword	(0X20001AB0);
	make_array	(0X20001AB4,	0X4);
	create_byte	(0X20001AB8);
	create_dword	(0X20001AC0);
	create_dword	(0X20001AC4);
	create_word	(0X20001AD5);
	create_dword	(0X20001AD8);
	create_word	(0X20001AE2);
	make_array	(0X20001AE4,	0X4);
	create_dword	(0X20004FE0);
	create_word	(0X40000000);
	create_word	(0X40000024);
	make_array	(0X40000026,	0X3DA);
	create_word	(0X40000400);
	create_word	(0X40000424);
	create_dword	(0X40003000);
	create_dword	(0X40003004);
	create_dword	(0X40003008);
	create_dword	(0X4000300C);
	make_array	(0X40003010,	0X7F0);
	create_word	(0X40003808);
	make_array	(0X4000380A,	0X2);
	create_word	(0X4000380C);
	make_array	(0X4000380E,	0X3F2);
	create_dword	(0X40006600);
	create_dword	(0X40006604);
	create_dword	(0X4000660C);
	create_dword	(0X40006614);
	create_dword	(0X4000661C);
	make_array	(0X40006620,	0XE0);
	create_dword	(0X40010000);
	create_dword	(0X40010004);
	create_dword	(0X4001001C);
	make_array	(0X40010020,	0X3E0);
	create_dword	(0X40010400);
	create_dword	(0X40010404);
	create_dword	(0X40010408);
	create_dword	(0X4001040C);
	create_dword	(0X40010410);
	create_dword	(0X40010414);
	make_array	(0X40010418,	0X3E8);
	create_dword	(0X40010808);
	create_dword	(0X4001080C);
	make_array	(0X40010810,	0X3F0);
	create_dword	(0X40010C0C);
	make_array	(0X40010C10,	0X3F0);
	create_dword	(0X40012408);
	create_dword	(0X4001244C);
	make_array	(0X40012450,	0X3B0);
	create_word	(0X40013800);
	make_array	(0X40013802,	0X2);
	create_word	(0X40013804);
	make_array	(0X40013806,	0X3FA);
	create_dword	(0X40020000);
	create_dword	(0X40020004);
	create_dword	(0X4002001C);
	create_dword	(0X40020044);
	make_array	(0X40020048,	0X3B8);
	create_dword	(0X40020400);
	create_dword	(0X40020404);
	create_dword	(0X40021000);
	create_dword	(0X40021004);
	create_dword	(0X40021008);
	create_dword	(0X4002100C);
	create_dword	(0X40021010);
	create_dword	(0X40021014);
	create_dword	(0X40021018);
	create_dword	(0X4002101C);
	create_dword	(0X40021020);
	create_dword	(0X40021024);
	make_array	(0X40021028,	0XFD8);
	create_dword	(0X40022000);
	create_dword	(0X40022004);
	create_dword	(0X40022008);
	create_dword	(0X4002200C);
	create_dword	(0X40022010);
	create_dword	(0X40022014);
	create_dword	(0X4002201C);
	create_dword	(0X40022020);
	make_array	(0X40022024,	0X1DC);
	create_dword	(0X4220001C);
	create_dword	(0X422000DC);
	make_array	(0X422000E0,	0X20);
	create_dword	(0X42420000);
	create_dword	(0X4242004C);
	make_array	(0X42420050,	0X10);
	create_dword	(0X42420060);
	create_dword	(0X424200D8);
	create_dword	(0X4242043C);
	create_dword	(0X42420440);
	make_array	(0X42420444,	0X3C);
	create_dword	(0X42420480);
	make_array	(0X42420484,	0X7C);
}

static Functions_0(void) {

	add_func    (0X80081A0,0X80081A4);
	set_func_flags(0X80081A0,0x400);
	set_frame_size(0X80081A0, 0X18, 0, 0);
	add_func    (0X80081A4,0X80081A8);
	set_func_flags(0X80081A4,0x400);
	set_frame_size(0X80081A4, 0X8, 0, 0);
	add_func    (0X80081E4,0X80081EE);
	set_func_flags(0X80081E4,0x400);
	add_func    (0X8008208,0X8008212);
	set_func_flags(0X8008208,0x400);
	add_func    (0X8008212,0X8008278);
	set_func_flags(0X8008212,0x400);
	set_frame_size(0X8008212, 0X10, 0, 0);
	add_func    (0X80082A8,0X80082D0);
	set_func_flags(0X80082A8,0x400);
	add_func    (0X80082E4,0X8008332);
	set_func_flags(0X80082E4,0x400);
	set_frame_size(0X80082E4, 0X8, 0, 0);
	add_func    (0X8008332,0X8008378);
	set_func_flags(0X8008332,0x400);
	set_frame_size(0X8008332, 0XC, 0, 0);
	add_func    (0X8008378,0X800838A);
	set_func_flags(0X8008378,0x400);
	add_func    (0X800838A,0X80083A0);
	set_func_flags(0X800838A,0x400);
	add_func    (0X80083CE,0X80083D8);
	set_func_flags(0X80083CE,0x400);
	add_func    (0X80083D8,0X80083EC);
	set_func_flags(0X80083D8,0x400);
	add_func    (0X80083EC,0X80083F6);
	set_func_flags(0X80083EC,0x400);
	add_func    (0X80083F6,0X800840A);
	set_func_flags(0X80083F6,0x400);
	add_func    (0X800840A,0X8008420);
	set_func_flags(0X800840A,0x400);
	add_func    (0X8008462,0X800851A);
	set_func_flags(0X8008462,0x400);
	set_frame_size(0X8008462, 0X14, 0, 0);
	add_func    (0X8008530,0X8008538);
	set_func_flags(0X8008530,0x400);
	add_func    (0X80086EC,0X80086FE);
	set_func_flags(0X80086EC,0x400);
	add_func    (0X8008734,0X8008766);
	set_func_flags(0X8008734,0x400);
	set_frame_size(0X8008734, 0X8, 0, 0);
	add_func    (0X8008766,0X800887A);
	set_func_flags(0X8008766,0x400);
	set_frame_size(0X8008766, 0XC, 0, 0);
	add_func    (0X800887A,0X800897C);
	set_func_flags(0X800887A,0x400);
	set_frame_size(0X800887A, 0X8, 0, 0);
	add_func    (0X800897C,0X800899C);
	set_func_flags(0X800897C,0x400);
	add_func    (0X8008A58,0X8008B88);
	set_func_flags(0X8008A58,0x400);
	set_frame_size(0X8008A58, 0X8, 0, 0);
	add_func    (0X8008C42,0X8008D32);
	set_func_flags(0X8008C42,0x400);
	set_frame_size(0X8008C42, 0X8, 0, 0);
	add_func    (0X8008E78,0X8008E8A);
	set_func_flags(0X8008E78,0x400);
	add_func    (0X8008F36,0X8008F46);
	set_func_flags(0X8008F36,0x400);
	add_func    (0X8009120,0X8009264);
	set_func_flags(0X8009120,0x400);
	add_func    (0X8009264,0X80092A0);
	set_func_flags(0X8009264,0x400);
	set_frame_size(0X8009264, 0X8, 0, 0);
	add_func    (0X80092BA,0X80092D2);
	set_func_flags(0X80092BA,0x400);
	add_func    (0X80092D2,0X80092E4);
	set_func_flags(0X80092D2,0x400);
	add_func    (0X80092E4,0X80092E8);
	set_func_flags(0X80092E4,0x400);
	add_func    (0X80092E8,0X80092F0);
	set_func_flags(0X80092E8,0x400);
	add_func    (0X8009316,0X800932C);
	set_func_flags(0X8009316,0x400);
	add_func    (0X800938C,0X800941A);
	set_func_flags(0X800938C,0x400);
	add_func    (0X800947A,0X8009482);
	set_func_flags(0X800947A,0x400);
	add_func    (0X80094CA,0X80094D6);
	set_func_flags(0X80094CA,0x400);
	add_func    (0X80094E2,0X80094F0);
	set_func_flags(0X80094E2,0x400);
	add_func    (0X80094FE,0X800952E);
	set_func_flags(0X80094FE,0x400);
	add_func    (0X800952E,0X8009554);
	set_func_flags(0X800952E,0x400);
	set_frame_size(0X800952E, 0X4, 0, 0);
	add_func    (0X8009554,0X800959C);
	set_func_flags(0X8009554,0x400);
	set_frame_size(0X8009554, 0XC, 0, 0);
	add_func    (0X80095E0,0X8009606);
	set_func_flags(0X80095E0,0x400);
	set_frame_size(0X80095E0, 0X4, 0, 0);
	add_func    (0X800964A,0X800965E);
	set_func_flags(0X800964A,0x400);
	add_func    (0X800975A,0X8009796);
	set_func_flags(0X800975A,0x400);
	set_frame_size(0X800975A, 0X10, 0, 0);
	add_func    (0X8009B08,0X8009C1A);
	set_func_flags(0X8009B08,0x400);
	set_frame_size(0X8009B08, 0X18, 0, 0);
	add_func    (0X8009C2A,0X8009C3C);
	set_func_flags(0X8009C2A,0x400);
	add_func    (0X8009C5E,0X8009C62);
	set_func_flags(0X8009C5E,0x400);
	add_func    (0X8009C62,0X8009C66);
	set_func_flags(0X8009C62,0x400);
	add_func    (0X8009CA6,0X8009D30);
	set_func_flags(0X8009CA6,0x400);
	set_frame_size(0X8009CA6, 0X14, 0, 0);
	add_func    (0X8009D30,0X8009D72);
	set_func_flags(0X8009D30,0x400);
	set_frame_size(0X8009D30, 0XC, 0, 0);
	add_func    (0X8009DA0,0X8009DA6);
	set_func_flags(0X8009DA0,0x400);
	add_func    (0X8009DA6,0X8009DAC);
	set_func_flags(0X8009DA6,0x400);
	add_func    (0X8009DAC,0X8009DB2);
	set_func_flags(0X8009DAC,0x400);
	add_func    (0X8009DB2,0X8009DBC);
	set_func_flags(0X8009DB2,0x400);
	add_func    (0X8009DBC,0X8009DC6);
	set_func_flags(0X8009DBC,0x400);
	add_func    (0X8009E66,0X8009E9E);
	set_func_flags(0X8009E66,0x400);
	set_frame_size(0X8009E66, 0X8, 0, 0);
	add_func    (0X8009F82,0X8009F94);
	set_func_flags(0X8009F82,0x400);
	add_func    (0X8009FDA,0X800A09A);
	set_func_flags(0X8009FDA,0x400);
	set_frame_size(0X8009FDA, 0XC, 0, 0);
	add_func    (0X800A09A,0X800A0B4);
	set_func_flags(0X800A09A,0x400);
	add_func    (0X800A0B4,0X800A0CE);
	set_func_flags(0X800A0B4,0x400);
	add_func    (0X800A0CE,0X800A0E8);
	set_func_flags(0X800A0CE,0x400);
	add_func    (0X800A0E8,0X800A102);
	set_func_flags(0X800A0E8,0x400);
	add_func    (0X800A102,0X800A11C);
	set_func_flags(0X800A102,0x400);
	add_func    (0X800A1D8,0X800A214);
	set_func_flags(0X800A1D8,0x400);
	set_frame_size(0X800A1D8, 0X8, 0, 0);
	add_func    (0X800A322,0X800A33A);
	set_func_flags(0X800A322,0x400);
	add_func    (0X800A640,0X800A6BA);
	set_func_flags(0X800A640,0x400);
	add_func    (0X800A6BA,0X800A73E);
	set_func_flags(0X800A6BA,0x400);
	set_frame_size(0X800A6BA, 0X10, 0, 0);
	add_func    (0X800A73E,0X800A7D8);
	set_func_flags(0X800A73E,0x400);
	set_frame_size(0X800A73E, 0X10, 0, 0);
	add_func    (0X800A7D8,0X800A86E);
	set_func_flags(0X800A7D8,0x400);
	set_frame_size(0X800A7D8, 0X10, 0, 0);
	add_func    (0X800A86E,0X800A924);
	set_func_flags(0X800A86E,0x400);
	set_frame_size(0X800A86E, 0X10, 0, 0);
	add_func    (0X800A924,0X800A93E);
	set_func_flags(0X800A924,0x400);
	add_func    (0X800A93E,0X800A9C0);
	set_func_flags(0X800A93E,0x400);
	set_frame_size(0X800A93E, 0X14, 0, 0);
	add_func    (0X800A9C0,0X800A9D2);
	set_func_flags(0X800A9C0,0x400);
	add_func    (0X800A9D2,0X800AA4C);
	set_func_flags(0X800A9D2,0x400);
	set_frame_size(0X800A9D2, 0X14, 0, 0);
	add_func    (0X800AA4C,0X800AA66);
	set_func_flags(0X800AA4C,0x400);
	add_func    (0X800AA66,0X800AAE8);
	set_func_flags(0X800AA66,0x400);
	set_frame_size(0X800AA66, 0X14, 0, 0);
	add_func    (0X800AAE8,0X800AAFA);
	set_func_flags(0X800AAE8,0x400);
	add_func    (0X800AAFA,0X800AB66);
	set_func_flags(0X800AAFA,0x400);
	set_frame_size(0X800AAFA, 0X14, 0, 0);
	add_func    (0X800AD2E,0X800AD40);
	set_func_flags(0X800AD2E,0x400);
	add_func    (0X800AD6C,0X800AD7E);
	set_func_flags(0X800AD6C,0x400);
	add_func    (0X800ADD4,0X800ADF0);
	set_func_flags(0X800ADD4,0x400);
	set_frame_size(0X800ADD4, 0XC, 0, 0);
	add_func    (0X800B28A,0X800B2AC);
	set_func_flags(0X800B28A,0x400);
	set_frame_size(0X800B28A, 0XC, 0, 0);
	add_func    (0X800B2AC,0X800B2B2);
	set_func_flags(0X800B2AC,0x400);
	add_func    (0X800B2B4,0X800B33A);
	set_func_flags(0X800B2B4,0x400);
	set_frame_size(0X800B2B4, 0X8, 0, 0);
	add_func    (0X800B33A,0X800B40C);
	set_func_flags(0X800B33A,0x400);
	set_frame_size(0X800B33A, 0X38, 0, 0);
	add_func    (0X800B452,0X800B46A);
	set_func_flags(0X800B452,0x400);
	add_func    (0X800B46A,0X800B4B4);
	set_func_flags(0X800B46A,0x400);
	set_frame_size(0X800B46A, 0X14, 0, 0);
	add_func    (0X800B4B4,0X800B4C6);
	set_func_flags(0X800B4B4,0x400);
	add_func    (0X800B534,0X800B53E);
	set_func_flags(0X800B534,0x400);
	add_func    (0X800B634,0X800B688);
	set_func_flags(0X800B634,0x400);
	set_frame_size(0X800B634, 0X10, 0, 0);
	add_func    (0X800B688,0X800B6A6);
	set_func_flags(0X800B688,0x400);
	set_frame_size(0X800B688, 0X8, 0, 0);
	add_func    (0X800B6BC,0X800B6C8);
	set_func_flags(0X800B6BC,0x400);
	set_frame_size(0X800B6BC, 0X8, 0, 0);
	add_func    (0X800B6C8,0X800B6EC);
	set_func_flags(0X800B6C8,0x400);
	set_frame_size(0X800B6C8, 0X18, 0, 0);
	add_func    (0X800B704,0X800B762);
	set_func_flags(0X800B704,0x400);
	set_frame_size(0X800B704, 0X10, 0, 0);
	add_func    (0X800B762,0X800B7C6);
	set_func_flags(0X800B762,0x400);
	set_frame_size(0X800B762, 0X10, 0, 0);
	add_func    (0X800B7C6,0X800B828);
	set_func_flags(0X800B7C6,0x400);
	set_frame_size(0X800B7C6, 0X10, 0, 0);
	add_func    (0X800B828,0X800B852);
	set_func_flags(0X800B828,0x400);
	set_frame_size(0X800B828, 0X8, 0, 0);
	add_func    (0X800B852,0X800BAA0);
	set_func_flags(0X800B852,0x400);
	set_frame_size(0X800B852, 0X48, 0, 0);
	add_func    (0X800BAA0,0X800BBD6);
	set_func_flags(0X800BAA0,0x400);
	set_frame_size(0X800BAA0, 0X18, 0, 0);
	add_func    (0X800BBF4,0X800BC58);
	set_func_flags(0X800BBF4,0x400);
	set_frame_size(0X800BBF4, 0X28, 0, 0);
	add_func    (0X800BC58,0X800BCEA);
	set_func_flags(0X800BC58,0x400);
	set_frame_size(0X800BC58, 0X28, 0, 0);
	add_func    (0X800BCEA,0X800BDC0);
	set_func_flags(0X800BCEA,0x400);
	set_frame_size(0X800BCEA, 0X18, 0, 0);
	add_func    (0X800BDC0,0X800BE74);
	set_func_flags(0X800BDC0,0x400);
	set_frame_size(0X800BDC0, 0X28, 0, 0);
	add_func    (0X800BE74,0X800BF04);
	set_func_flags(0X800BE74,0x400);
	set_frame_size(0X800BE74, 0X30, 0, 0);
	add_func    (0X800BF04,0X800BF0C);
	set_func_flags(0X800BF04,0x400);
	add_func    (0X800BF28,0X800BF72);
	set_func_flags(0X800BF28,0x400);
	add_func    (0X800BF72,0X800C02C);
	set_func_flags(0X800BF72,0x400);
	set_frame_size(0X800BF72, 0X20, 0, 0);
	add_func    (0X800C02C,0X800C03E);
	set_func_flags(0X800C02C,0x400);
	add_func    (0X800C03E,0X800C050);
	set_func_flags(0X800C03E,0x400);
	add_func    (0X800C058,0X800C07E);
	set_func_flags(0X800C058,0x400);
	set_frame_size(0X800C058, 0X8, 0, 0);
	add_func    (0X800C07E,0X800C0B0);
	set_func_flags(0X800C07E,0x400);
	add_func    (0X800C0B0,0X800C0C4);
	set_func_flags(0X800C0B0,0x400);
	add_func    (0X800C0C4,0X800C0E0);
	set_func_flags(0X800C0C4,0x400);
	set_frame_size(0X800C0C4, 0X8, 0, 0);
	add_func    (0X800C0EC,0X800C11E);
	set_func_flags(0X800C0EC,0x400);
	set_frame_size(0X800C0EC, 0X8, 0, 0);
	add_func    (0X800C11E,0X800C14C);
	set_func_flags(0X800C11E,0x400);
	add_func    (0X800C14C,0X800C17A);
	set_func_flags(0X800C14C,0x400);
	add_func    (0X800C17A,0X800C1A8);
	set_func_flags(0X800C17A,0x400);
	add_func    (0X800C1AC,0X800C1DA);
	set_func_flags(0X800C1AC,0x400);
	set_frame_size(0X800C1AC, 0X8, 0, 0);
	add_func    (0X800C1DA,0X800C228);
	set_func_flags(0X800C1DA,0x400);
	set_frame_size(0X800C1DA, 0X8, 0, 0);
	add_func    (0X800C228,0X800C252);
	set_func_flags(0X800C228,0x400);
	add_func    (0X800C260,0X800C282);
	set_func_flags(0X800C260,0x400);
	set_frame_size(0X800C260, 0X8, 0, 0);
	add_func    (0X800C282,0X800C2CA);
	set_func_flags(0X800C282,0x400);
	set_frame_size(0X800C282, 0X10, 0, 0);
	add_func    (0X800C2CA,0X800C2D0);
	set_func_flags(0X800C2CA,0x400);
	add_func    (0X800C2D0,0X800C2DE);
	set_func_flags(0X800C2D0,0x400);
	add_func    (0X800C2DE,0X800C2EC);
	set_func_flags(0X800C2DE,0x400);
	add_func    (0X800C2EC,0X800C30E);
	set_func_flags(0X800C2EC,0x400);
	add_func    (0X800C318,0X800C32A);
	set_func_flags(0X800C318,0x400);
	add_func    (0X800C32A,0X800C3CA);
	set_func_flags(0X800C32A,0x400);
	set_frame_size(0X800C32A, 0X8, 0, 0);
	add_func    (0X800C3CA,0X800C46E);
	set_func_flags(0X800C3CA,0x400);
	set_frame_size(0X800C3CA, 0X20, 0, 0);
	add_func    (0X800C46E,0X800C49A);
	set_func_flags(0X800C46E,0x400);
	add_func    (0X800C4AC,0X800C4CC);
	set_func_flags(0X800C4AC,0x400);
	add_func    (0X800C4DC,0X800C4F2);
	set_func_flags(0X800C4DC,0x400);
	set_frame_size(0X800C4DC, 0X8, 0, 0);
	add_func    (0X800C4F2,0X800C546);
	set_func_flags(0X800C4F2,0x400);
	set_frame_size(0X800C4F2, 0X10, 0, 0);
	add_func    (0X800C546,0X800C54C);
	set_func_flags(0X800C546,0x400);
	add_func    (0X800C54C,0X800C556);
	set_func_flags(0X800C54C,0x400);
	set_frame_size(0X800C54C, 0X8, 0, 0);
	add_func    (0X800C556,0X800C576);
	set_func_flags(0X800C556,0x400);
	set_frame_size(0X800C556, 0X10, 0, 0);
	add_func    (0X800C576,0X800C58E);
	set_func_flags(0X800C576,0x400);
	set_frame_size(0X800C576, 0X10, 0, 0);
	add_func    (0X800C598,0X800C5A2);
	set_func_flags(0X800C598,0x400);
	add_func    (0X800C5A2,0X800C634);
	set_func_flags(0X800C5A2,0x400);
	add_func    (0X800C634,0X800C676);
	set_func_flags(0X800C634,0x400);
	set_frame_size(0X800C634, 0X8, 0, 0);
	add_func    (0X800C69C,0X800C6CE);
	set_func_flags(0X800C69C,0x400);
	set_frame_size(0X800C69C, 0X18, 0, 0);
	add_func    (0X800C6CE,0X800C6E4);
	set_func_flags(0X800C6CE,0x400);
	set_frame_size(0X800C6CE, 0X8, 0, 0);
	add_func    (0X800C6E4,0X800C7BA);
	set_func_flags(0X800C6E4,0x400);
	set_frame_size(0X800C6E4, 0X428, 0, 0);
	add_func    (0X800C7FC,0X800C81A);
	set_func_flags(0X800C7FC,0x400);
	set_frame_size(0X800C7FC, 0X8, 0, 0);
	add_func    (0X800C81A,0X800C83A);
	set_func_flags(0X800C81A,0x400);
	set_frame_size(0X800C81A, 0X8, 0, 0);
	add_func    (0X800C83A,0X800C842);
	set_func_flags(0X800C83A,0x400);
	set_frame_size(0X800C83A, 0X8, 0, 0);
	add_func    (0X800C842,0X800C854);
	set_func_flags(0X800C842,0x400);
	set_frame_size(0X800C842, 0X8, 0, 0);
	add_func    (0X800C854,0X800C85C);
	set_func_flags(0X800C854,0x400);
	add_func    (0X800C868,0X800C8EC);
	set_func_flags(0X800C868,0x400);
	set_frame_size(0X800C868, 0X20, 0, 0);
	add_func    (0X800C8EC,0X800C918);
	set_func_flags(0X800C8EC,0x400);
	set_frame_size(0X800C8EC, 0X8, 0, 0);
	add_func    (0X800C918,0X800C9BA);
	set_func_flags(0X800C918,0x400);
	set_frame_size(0X800C918, 0X38, 0, 0);
	add_func    (0X800C9E4,0X800C9E6);
	set_func_flags(0X800C9E4,0x440);
	add_func    (0X800CA10,0X800CA1E);
	set_func_flags(0X800CA10,0x400);
	add_func    (0X800CA2C,0X800CA58);
	set_func_flags(0X800CA2C,0x400);
	set_frame_size(0X800CA2C, 0X8, 0, 0);
	add_func    (0X800CA5C,0X800CA62);
	set_func_flags(0X800CA5C,0x400);
	add_func    (0X800CA62,0X800CA92);
	set_func_flags(0X800CA62,0x400);
	add_func    (0X800CA92,0X800CAC0);
	set_func_flags(0X800CA92,0x400);
	set_frame_size(0X800CA92, 0X8, 0, 0);
	add_func    (0X800CAC8,0X800CB16);
	set_func_flags(0X800CAC8,0x400);
	set_frame_size(0X800CAC8, 0X18, 0, 0);
	add_func    (0X800CB16,0X800CB26);
	set_func_flags(0X800CB16,0x400);
	set_frame_size(0X800CB16, 0X10, 0, 0);
	add_func    (0X800CB26,0X800CB36);
	set_func_flags(0X800CB26,0x400);
	set_frame_size(0X800CB26, 0X10, 0, 0);
	add_func    (0X800CBAA,0X800CBF8);
	set_func_flags(0X800CBAA,0x400);
	set_frame_size(0X800CBAA, 0X10, 0, 0);
	add_func    (0X800CBF8,0X800CC22);
	set_func_flags(0X800CBF8,0x400);
	set_frame_size(0X800CBF8, 0X10, 0, 0);
	add_func    (0X800CC40,0X800CC6C);
	set_func_flags(0X800CC40,0x400);
	add_func    (0X800CC6C,0X800CC8C);
	set_func_flags(0X800CC6C,0x400);
	add_func    (0X800CC8C,0X800CCAA);
	set_func_flags(0X800CC8C,0x400);
	add_func    (0X800CCB2,0X800CCB4);
	set_func_flags(0X800CCB2,0x440);
	add_func    (0X800CCB4,0X800CCF0);
	set_func_flags(0X800CCB4,0x400);
	set_frame_size(0X800CCB4, 0X10, 0, 0);
	add_func    (0X800CD50,0X800CD7A);
	set_func_flags(0X800CD50,0x400);
	set_frame_size(0X800CD50, 0XC, 0, 0);
	add_func    (0X800CD8C,0X800CD98);
	set_func_flags(0X800CD8C,0x400);
	add_func    (0X800CDAA,0X800CDB6);
	set_func_flags(0X800CDAA,0x400);
	add_func    (0X800CDBC,0X800CE3E);
	set_func_flags(0X800CDBC,0x400);
	set_frame_size(0X800CDBC, 0X20, 0, 0);
	add_func    (0X800CE50,0X800CE6A);
	set_func_flags(0X800CE50,0x400);
	set_frame_size(0X800CE50, 0X8, 0, 0);
	add_func    (0X800CE6A,0X800CE8E);
	set_func_flags(0X800CE6A,0x400);
	set_frame_size(0X800CE6A, 0X8, 0, 0);
	add_func    (0X800CE8E,0X800CEB0);
	set_func_flags(0X800CE8E,0x400);
	set_frame_size(0X800CE8E, 0X10, 0, 0);
	add_func    (0X800CEB0,0X800CED6);
	set_func_flags(0X800CEB0,0x400);
	set_frame_size(0X800CEB0, 0X10, 0, 0);
	add_func    (0X800CED6,0X800CF1A);
	set_func_flags(0X800CED6,0x400);
	set_frame_size(0X800CED6, 0X10, 0, 0);
	add_func    (0X800CF1A,0X800CF60);
	set_func_flags(0X800CF1A,0x400);
	set_frame_size(0X800CF1A, 0X10, 0, 0);
	add_func    (0X800CF64,0X800CF96);
	set_func_flags(0X800CF64,0x400);
	set_frame_size(0X800CF64, 0X10, 0, 0);
	add_func    (0X800CFC8,0X800CFEA);
	set_func_flags(0X800CFC8,0x400);
	set_frame_size(0X800CFC8, 0X10, 0, 0);
	add_func    (0X800CFEA,0X800D016);
	set_func_flags(0X800CFEA,0x400);
	set_frame_size(0X800CFEA, 0X10, 0, 0);
	add_func    (0X800D016,0X800D1A0);
	set_func_flags(0X800D016,0x400);
	set_frame_size(0X800D016, 0X10, 0, 0);
	add_func    (0X800D1A0,0X800D2B0);
	set_func_flags(0X800D1A0,0x400);
	set_frame_size(0X800D1A0, 0X10, 0, 0);
	add_func    (0X800D2B0,0X800D2CC);
	set_func_flags(0X800D2B0,0x400);
	set_frame_size(0X800D2B0, 0X8, 0, 0);
	add_func    (0X800D2CC,0X800D3CE);
	set_func_flags(0X800D2CC,0x400);
	set_frame_size(0X800D2CC, 0X10, 0, 0);
	add_func    (0X800D3CE,0X800D40A);
	set_func_flags(0X800D3CE,0x400);
	set_frame_size(0X800D3CE, 0X10, 0, 0);
	add_func    (0X800D410,0X800D5A2);
	set_func_flags(0X800D410,0x400);
	set_frame_size(0X800D410, 0X18, 0, 0);
	add_func    (0X800D5A2,0X800D5CA);
	set_func_flags(0X800D5A2,0x400);
	set_frame_size(0X800D5A2, 0X8, 0, 0);
	add_func    (0X800D5CA,0X800D5FE);
	set_func_flags(0X800D5CA,0x400);
	set_frame_size(0X800D5CA, 0X10, 0, 0);
	add_func    (0X800D5FE,0X800D6D0);
	set_func_flags(0X800D5FE,0x400);
	set_frame_size(0X800D5FE, 0X20, 0, 0);
	add_func    (0X800D6D0,0X800D6F8);
	set_func_flags(0X800D6D0,0x400);
	set_frame_size(0X800D6D0, 0X8, 0, 0);
	add_func    (0X800D6F8,0X800D720);
	set_func_flags(0X800D6F8,0x400);
	set_frame_size(0X800D6F8, 0X8, 0, 0);
	add_func    (0X800D8D8,0X800D8DA);
	set_func_flags(0X800D8D8,0x440);
	add_func    (0X800D8DA,0X800D8DE);
	set_func_flags(0X800D8DA,0x401);
	add_func    (0X800D8DE,0X800D8E2);
	set_func_flags(0X800D8DE,0x401);
	add_func    (0X800D8E2,0X800D8E6);
	set_func_flags(0X800D8E2,0x401);
	add_func    (0X800D8E6,0X800D8EA);
	set_func_flags(0X800D8E6,0x401);
	add_func    (0X800D8EA,0X800D8EC);
	set_func_flags(0X800D8EA,0x440);
	add_func    (0X800D8EC,0X800D8EE);
	set_func_flags(0X800D8EC,0x440);
	add_func    (0X800D8EE,0X800D8F0);
	set_func_flags(0X800D8EE,0x440);
	add_func    (0X800D8F0,0X800D9C4);
	set_func_flags(0X800D8F0,0x400);
	set_frame_size(0X800D8F0, 0XC, 0, 0);
	add_func    (0X800D9C4,0X800D9CC);
	set_func_flags(0X800D9C4,0x400);
	set_frame_size(0X800D9C4, 0X8, 0, 0);
	add_func    (0X800D9CC,0X800DA12);
	set_func_flags(0X800D9CC,0x400);
	set_frame_size(0X800D9CC, 0X8, 0, 0);
	add_func    (0X800DAC8,0X800DAD2);
	set_func_flags(0X800DAC8,0x400);
	add_func    (0X800DAD2,0X800DB0C);
	set_func_flags(0X800DAD2,0x400);
	add_func    (0X800DB0C,0X800DB2E);
	set_func_flags(0X800DB0C,0x400);
	add_func    (0X800DB2E,0X800DB5C);
	set_func_flags(0X800DB2E,0x400);
	set_frame_size(0X800DB2E, 0X4, 0, 0);
	add_func    (0X800DB5C,0X800DB66);
	set_func_flags(0X800DB5C,0x400);
	add_func    (0X800DB66,0X800DB6E);
	set_func_flags(0X800DB66,0x400);
	add_func    (0X800DB6E,0X800DBA2);
	set_func_flags(0X800DB6E,0x400);
	add_func    (0X800DBDC,0X800DC16);
	set_func_flags(0X800DBDC,0x400);
	add_func    (0X800DC16,0X800DC50);
	set_func_flags(0X800DC16,0x400);
	add_func    (0X800DC8A,0X800DCB4);
	set_func_flags(0X800DC8A,0x400);
	set_frame_size(0X800DC8A, 0X8, 0, 0);
	add_func    (0X800DCB4,0X800DCBA);
	set_func_flags(0X800DCB4,0x400);
	add_func    (0X800DCBA,0X800DD14);
	set_func_flags(0X800DCBA,0x400);
	set_frame_size(0X800DCBA, 0X10, 0, 0);
	add_func    (0X800DD14,0X800DFD0);
	set_func_flags(0X800DD14,0x400);
	set_frame_size(0X800DD14, 0X30, 0, 0);
	add_func    (0X800DFD0,0X800DFF8);
	set_func_flags(0X800DFD0,0x400);
	set_frame_size(0X800DFD0, 0X18, 0, 0);
	add_func    (0X800DFF8,0X800E08A);
	set_func_flags(0X800DFF8,0x400);
	set_frame_size(0X800DFF8, 0X30, 0, 0);
	add_func    (0X800E08A,0X800E140);
	set_func_flags(0X800E08A,0x400);
	set_frame_size(0X800E08A, 0X8, 0, 0);
	add_func    (0X800E140,0X800E2E0);
	set_func_flags(0X800E140,0x400);
	set_frame_size(0X800E140, 0X40, 0, 0);
	add_func    (0X800E30C,0X800E318);
	set_func_flags(0X800E30C,0x400);
	add_func    (0X800E318,0X800E332);
	set_func_flags(0X800E318,0x400);
	add_func    (0X800E332,0X800E34E);
	set_func_flags(0X800E332,0x400);
	add_func    (0X800E34E,0X800E356);
	set_func_flags(0X800E34E,0x400);
	add_func    (0X800E35C,0X800E38A);
	set_func_flags(0X800E35C,0x400);
	add_func    (0X800E38A,0X800E40A);
	set_func_flags(0X800E38A,0x400);
	set_frame_size(0X800E38A, 0X10, 0, 0);
	add_func    (0X800E40A,0X800E418);
	set_func_flags(0X800E40A,0x400);
	set_frame_size(0X800E40A, 0X8, 0, 0);
	add_func    (0X800E418,0X800E4A6);
	set_func_flags(0X800E418,0x400);
	set_frame_size(0X800E418, 0X10, 0, 0);
	add_func    (0X800E4A6,0X800E5AE);
	set_func_flags(0X800E4A6,0x400);
	set_frame_size(0X800E4A6, 0X8, 0, 0);
	add_func    (0X800E5AE,0X800E732);
	set_func_flags(0X800E5AE,0x400);
	set_frame_size(0X800E5AE, 0X8, 0, 0);
	add_func    (0X800E732,0X800E8A6);
	set_func_flags(0X800E732,0x400);
	set_frame_size(0X800E732, 0X8, 0, 0);
	set_name(0X800E892, "locl_state_ok", SN_LOCAL);
	set_name(0X800E8A4, "locl_label_ret1", SN_LOCAL);
	add_func    (0X800E8A6,0X800E902);
	set_func_flags(0X800E8A6,0x400);
	set_frame_size(0X800E8A6, 0X10, 0, 0);
	add_func    (0X800E902,0X800E90A);
	set_func_flags(0X800E902,0x400);
	add_func    (0X800E90A,0X800E966);
	set_func_flags(0X800E90A,0x400);
	set_frame_size(0X800E90A, 0X10, 0, 0);
	add_func    (0X800E966,0X800E99E);
	set_func_flags(0X800E966,0x400);
	set_frame_size(0X800E966, 0X8, 0, 0);
	add_func    (0X800E99E,0X800EA1E);
	set_func_flags(0X800E99E,0x400);
	set_frame_size(0X800E99E, 0X8, 0, 0);
	add_func    (0X800EA1E,0X800EAB8);
	set_func_flags(0X800EA1E,0x400);
	set_frame_size(0X800EA1E, 0X28, 0, 0);
	add_func    (0X800EAB8,0X800EBD4);
	set_func_flags(0X800EAB8,0x400);
	set_frame_size(0X800EAB8, 0X50, 0, 0);
	add_func    (0X800EBD4,0X800EC1A);
	set_func_flags(0X800EBD4,0x400);
	set_frame_size(0X800EBD4, 0X8, 0, 0);
	add_func    (0X800EC1A,0X800EDD4);
	set_func_flags(0X800EC1A,0x400);
	set_frame_size(0X800EC1A, 0X18, 0, 0);
	add_func    (0X800EDD4,0X800EE5C);
	set_func_flags(0X800EDD4,0x400);
	set_frame_size(0X800EDD4, 0X10, 0, 0);
	add_func    (0X800EE5C,0X800EE8A);
	set_func_flags(0X800EE5C,0x400);
	set_frame_size(0X800EE5C, 0X8, 0, 0);
	add_func    (0X800EE8A,0X800EEB8);
	set_func_flags(0X800EE8A,0x400);
	set_frame_size(0X800EE8A, 0X8, 0, 0);
	add_func    (0X800EEB8,0X800EEE6);
	set_func_flags(0X800EEB8,0x400);
	set_frame_size(0X800EEB8, 0X8, 0, 0);
	add_func    (0X800EEE6,0X800EF00);
	set_func_flags(0X800EEE6,0x400);
	set_frame_size(0X800EEE6, 0X8, 0, 0);
	add_func    (0X800EF00,0X800EF10);
	set_func_flags(0X800EF00,0x400);
	set_frame_size(0X800EF00, 0X8, 0, 0);
	add_func    (0X800EF10,0X800EF24);
	set_func_flags(0X800EF10,0x400);
	set_frame_size(0X800EF10, 0X8, 0, 0);
	add_func    (0X800EF24,0X800EF3E);
	set_func_flags(0X800EF24,0x400);
	set_frame_size(0X800EF24, 0X8, 0, 0);
	add_func    (0X800EF3E,0X800F11E);
	set_func_flags(0X800EF3E,0x400);
	set_frame_size(0X800EF3E, 0X18, 0, 0);
	add_func    (0X800F11E,0X800F134);
	set_func_flags(0X800F11E,0x400);
	set_frame_size(0X800F11E, 0X8, 0, 0);
	add_func    (0X800F134,0X800F1F4);
	set_func_flags(0X800F134,0x400);
	set_frame_size(0X800F134, 0X28, 0, 0);
	add_func    (0X800F1F4,0X800F22A);
	set_func_flags(0X800F1F4,0x400);
	set_frame_size(0X800F1F4, 0X10, 0, 0);
	add_func    (0X800F22A,0X800F234);
	set_func_flags(0X800F22A,0x400);
	add_func    (0X800F234,0X800F246);
	set_func_flags(0X800F234,0x400);
	add_func    (0X800F246,0X800F258);
	set_func_flags(0X800F246,0x400);
	add_func    (0X800F258,0X800F26A);
	set_func_flags(0X800F258,0x400);
	add_func    (0X800F26A,0X800F272);
	set_func_flags(0X800F26A,0x400);
	add_func    (0X800F272,0X800F5B6);
	set_func_flags(0X800F272,0x400);
	set_frame_size(0X800F272, 0X20, 0, 0);
	add_func    (0X800F5B6,0X800F5FE);
	set_func_flags(0X800F5B6,0x400);
	set_frame_size(0X800F5B6, 0X8, 0, 0);
	add_func    (0X800F5FE,0X800F620);
	set_func_flags(0X800F5FE,0x400);
	add_func    (0X800F620,0X800F62E);
	set_func_flags(0X800F620,0x400);
	add_func    (0X800F638,0X800F646);
	set_func_flags(0X800F638,0x400);
	add_func    (0X800F650,0X800F65E);
	set_func_flags(0X800F650,0x400);
	add_func    (0X800F668,0X800F670);
	set_func_flags(0X800F668,0x400);
	SetType(0X800F668, "void __fastcall set_transciever_attenuation(int val);");
	add_func    (0X800F670,0X800F678);
	set_func_flags(0X800F670,0x400);
	add_func    (0X800F678,0X800F686);
	set_func_flags(0X800F678,0x400);
	add_func    (0X800F690,0X800F6AE);
	set_func_flags(0X800F690,0x400);
	add_func    (0X800F6AE,0X800F6C0);
	set_func_flags(0X800F6AE,0x400);
	add_func    (0X800F6F0,0X800F87A);
	set_func_flags(0X800F6F0,0x400);
	set_frame_size(0X800F6F0, 0X58, 0, 0);
	add_func    (0X800F87A,0X800FA8C);
	set_func_flags(0X800F87A,0x400);
	set_frame_size(0X800F87A, 0XB0, 0, 0);
	add_func    (0X800FA8C,0X800FBA8);
	set_func_flags(0X800FA8C,0x400);
	set_frame_size(0X800FA8C, 0XE8, 0, 0);
	add_func    (0X800FBA8,0X800FC4A);
	set_func_flags(0X800FBA8,0x400);
	set_frame_size(0X800FBA8, 0X48, 0, 0);
	add_func    (0X800FC4A,0X800FE60);
	set_func_flags(0X800FC4A,0x400);
	set_frame_size(0X800FC4A, 0X48, 0, 0);
	add_func    (0X800FE88,0X800FECE);
	set_func_flags(0X800FE88,0x400);
	set_frame_size(0X800FE88, 0X8, 0, 0);
	add_func    (0X800FECE,0X800FEE0);
	set_func_flags(0X800FECE,0x400);
	set_frame_size(0X800FECE, 0X10, 0, 0);
	add_func    (0X800FEE0,0X800FF40);
	set_func_flags(0X800FEE0,0x400);
	set_frame_size(0X800FEE0, 0X10, 0, 0);
	add_func    (0X800FF40,0X8010042);
	set_func_flags(0X800FF40,0x400);
	set_frame_size(0X800FF40, 0X20, 0, 0);
	add_func    (0X8010078,0X8010088);
	set_func_flags(0X8010078,0x400);
	set_frame_size(0X8010078, 0X10, 0, 0);
	add_func    (0X8010088,0X80100E8);
	set_func_flags(0X8010088,0x400);
	set_frame_size(0X8010088, 0X28, 0, 0);
	add_func    (0X80100E8,0X8010148);
	set_func_flags(0X80100E8,0x400);
	set_frame_size(0X80100E8, 0X28, 0, 0);
	add_func    (0X8010148,0X80101A8);
	set_func_flags(0X8010148,0x400);
	set_frame_size(0X8010148, 0X28, 0, 0);
	add_func    (0X80101A8,0X80101EE);
	set_func_flags(0X80101A8,0x400);
	set_frame_size(0X80101A8, 0X28, 0, 0);
	add_func    (0X80101EE,0X801024E);
	set_func_flags(0X80101EE,0x400);
	set_frame_size(0X80101EE, 0X28, 0, 0);
	add_func    (0X801024E,0X8010250);
	set_func_flags(0X801024E,0x440);
	add_func    (0X8010250,0X801028C);
	set_func_flags(0X8010250,0x400);
	set_frame_size(0X8010250, 0X10, 0, 0);
	add_func    (0X8010294,0X80102D4);
	set_func_flags(0X8010294,0x400);
	set_frame_size(0X8010294, 0X8, 0, 0);
	add_func    (0X80102D4,0X80102E6);
	set_func_flags(0X80102D4,0x400);
	set_frame_size(0X80102D4, 0X10, 0, 0);
	add_func    (0X80102E6,0X8010320);
	set_func_flags(0X80102E6,0x400);
	set_frame_size(0X80102E6, 0X10, 0, 0);
	add_func    (0X8010320,0X801032C);
	set_func_flags(0X8010320,0x400);
	add_func    (0X801034C,0X80103D0);
	set_func_flags(0X801034C,0x400);
	set_frame_size(0X801034C, 0X10, 0, 0);
	add_func    (0X80103D0,0X801044C);
	set_func_flags(0X80103D0,0x400);
	set_frame_size(0X80103D0, 0X18, 0, 0);
	add_func    (0X8010450,0X8010464);
	set_func_flags(0X8010450,0x400);
	add_func    (0X8010464,0X80104A8);
	set_func_flags(0X8010464,0x400);
	set_frame_size(0X8010464, 0X8, 0, 0);
	add_func    (0X80104A8,0X8010530);
	set_func_flags(0X80104A8,0x400);
	set_frame_size(0X80104A8, 0X8, 0, 0);
	add_func    (0X8010530,0X801054C);
	set_func_flags(0X8010530,0x400);
	add_func    (0X801054C,0X801055E);
	set_func_flags(0X801054C,0x400);
	set_frame_size(0X801054C, 0X8, 0, 0);
	add_func    (0X801055E,0X8010746);
	set_func_flags(0X801055E,0x400);
	set_frame_size(0X801055E, 0X18, 0, 0);
	add_func    (0X8010746,0X8010782);
	set_func_flags(0X8010746,0x400);
	set_frame_size(0X8010746, 0X18, 0, 0);
	add_func    (0X8010782,0X8010786);
	set_func_flags(0X8010782,0x400);
	add_func    (0X8010786,0X8010794);
	set_func_flags(0X8010786,0x400);
	add_func    (0X8010794,0X801079C);
	set_func_flags(0X8010794,0x400);
	add_func    (0X801079C,0X8010860);
	set_func_flags(0X801079C,0x400);
	set_frame_size(0X801079C, 0X168, 0, 0);
	add_func    (0X801090A,0X80109B2);
	set_func_flags(0X801090A,0x400);
	SetType(0X801090A, "int __fastcall packet_make_response(int *(__fastcall *send_func)(void *pkt, unsigned int len), struct DjiPacket *spkt, const uint8_t *payload, size_t payload_len);");
	set_frame_size(0X801090A, 0X160, 0, 0);
	add_func    (0X80109B4,0X80109D2);
	set_func_flags(0X80109B4,0x400);
	set_frame_size(0X80109B4, 0XC, 0, 0);
	add_func    (0X80109D2,0X8010A00);
	set_func_flags(0X80109D2,0x400);
	set_frame_size(0X80109D2, 0X10, 0, 0);
	add_func    (0X8010A00,0X8010A24);
	set_func_flags(0X8010A00,0x400);
	set_frame_size(0X8010A00, 0X10, 0, 0);
	add_func    (0X8010A28,0X8010A56);
	set_func_flags(0X8010A28,0x400);
	set_frame_size(0X8010A28, 0XC, 0, 0);
	add_func    (0X8010A92,0X8010ABE);
	set_func_flags(0X8010A92,0x400);
	set_frame_size(0X8010A92, 0X10, 0, 0);
	add_func    (0X8010C16,0X8010C40);
	set_func_flags(0X8010C16,0x400);
	set_frame_size(0X8010C16, 0X10, 0, 0);
	add_func    (0X8010D82,0X8010DDC);
	set_func_flags(0X8010D82,0x400);
	set_frame_size(0X8010D82, 0X18, 0, 0);
	add_func    (0X8010DDC,0X8010E4E);
	set_func_flags(0X8010DDC,0x400);
	set_frame_size(0X8010DDC, 0X20, 0, 0);
	add_func    (0X8011110,0X8011122);
	set_func_flags(0X8011110,0x400);
	set_frame_size(0X8011110, 0X8, 0, 0);
	add_func    (0X8011122,0X8011134);
	set_func_flags(0X8011122,0x400);
	set_frame_size(0X8011122, 0X10, 0, 0);
	add_func    (0X8011134,0X8011192);
	set_func_flags(0X8011134,0x400);
	set_frame_size(0X8011134, 0X10, 0, 0);
	add_func    (0X80111A8,0X80111C6);
	set_func_flags(0X80111A8,0x400);
	set_frame_size(0X80111A8, 0X10, 0, 0);
	add_func    (0X80111DA,0X80111F8);
	set_func_flags(0X80111DA,0x400);
	set_frame_size(0X80111DA, 0X10, 0, 0);
	add_func    (0X80111F8,0X801120C);
	set_func_flags(0X80111F8,0x400);
	set_frame_size(0X80111F8, 0X10, 0, 0);
	add_func    (0X8011212,0X8011218);
	set_func_flags(0X8011212,0x400);
	add_func    (0X801129C,0X80112F4);
	set_func_flags(0X801129C,0x400);
	set_frame_size(0X801129C, 0X8, 0, 0);
	add_func    (0X80112F4,0X80113E2);
	set_func_flags(0X80112F4,0x400);
	add_func    (0X80113E2,0X8011426);
	set_func_flags(0X80113E2,0x400);
	add_func    (0X8011426,0X8011474);
	set_func_flags(0X8011426,0x400);
	set_frame_size(0X8011426, 0X4, 0, 0);
	add_func    (0X8011484,0X8011490);
	set_func_flags(0X8011484,0x400);
	set_frame_size(0X8011484, 0X8, 0, 0);
	add_func    (0X8011490,0X8011494);
	set_func_flags(0X8011490,0x400);
	add_func    (0X8011498,0X801149C);
	set_func_flags(0X8011498,0x400);
	add_func    (0X80114A0,0X80114EA);
	set_func_flags(0X80114A0,0x400);
	add_func    (0X80114F8,0X8011500);
	set_func_flags(0X80114F8,0x401);
	add_func    (0X8011508,0X80115B4);
	set_func_flags(0X8011508,0x400);
	add_func    (0X80115BC,0X80115E4);
	set_func_flags(0X80115BC,0x400);
	add_func    (0X80115E4,0X8011924);
	set_func_flags(0X80115E4,0x400);
	set_frame_size(0X80115E4, 0X88, 0, 0);
	add_func    (0X801196C,0X8011A52);
	set_func_flags(0X801196C,0x400);
	set_frame_size(0X801196C, 0X30, 0, 0);
	add_func    (0X8011A68,0X8011B12);
	set_func_flags(0X8011A68,0x400);
	set_frame_size(0X8011A68, 0X18, 0, 0);
	add_func    (0X8011B14,0X8011BF4);
	set_func_flags(0X8011B14,0x400);
	set_frame_size(0X8011B14, 0X40, 0, 0);
	add_func    (0X8011C00,0X8011C0A);
	set_func_flags(0X8011C00,0x400);
	add_func    (0X8011C10,0X8011DEE);
	set_func_flags(0X8011C10,0x400);
	set_frame_size(0X8011C10, 0X28, 0, 0);
	add_func    (0X8011E34,0X8011F8E);
	set_func_flags(0X8011E34,0x400);
	set_frame_size(0X8011E34, 0X20, 0, 0);
	add_func    (0X8011FB4,0X8012058);
	set_func_flags(0X8011FB4,0x400);
	set_frame_size(0X8011FB4, 0X20, 0, 0);
	add_func    (0X8012060,0X80121E0);
	set_func_flags(0X8012060,0x400);
	set_frame_size(0X8012060, 0X18, 0, 0);
	add_func    (0X8012218,0X8012BE6);
	set_func_flags(0X8012218,0x400);
	set_frame_size(0X8012218, 0X70, 0, 0);
	add_func    (0X8012BF8,0X8012C9E);
	set_func_flags(0X8012BF8,0x400);
	set_frame_size(0X8012BF8, 0X20, 0, 0);
	add_func    (0X8012CA8,0X8012CF4);
	set_func_flags(0X8012CA8,0x400);
	set_frame_size(0X8012CA8, 0X18, 0, 0);
	add_func    (0X8012CF4,0X8012D4C);
	set_func_flags(0X8012CF4,0x400);
	add_func    (0X8012D58,0X8012D68);
	set_func_flags(0X8012D58,0x400);
	set_frame_size(0X8012D58, 0X8, 0, 0);
	add_func    (0X8012DEC,0X8012E0C);
	set_func_flags(0X8012DEC,0x400);
	add_func    (0X8012ED0,0X80130F8);
	set_func_flags(0X8012ED0,0x400);
	set_frame_size(0X8012ED0, 0X18, 0, 0);
	add_func    (0X8013180,0X80131DC);
	set_func_flags(0X8013180,0x400);
	set_frame_size(0X8013180, 0, 0, 0);
	add_func    (0X80131E0,0X8013238);
	set_func_flags(0X80131E0,0x400);
	set_frame_size(0X80131E0, 0, 0, 0);
	add_func    (0X801323A,0X8013268);
	set_func_flags(0X801323A,0x400);
	add_func    (0X8013268,0X801328E);
	set_func_flags(0X8013268,0x400);
	add_func    (0X80132F2,0X8013308);
	set_func_flags(0X80132F2,0x400);
	set_frame_size(0X80132F2, 0X10, 0, 0);
	add_func    (0X8013308,0X8013454);
	set_func_flags(0X8013308,0x400);
	set_frame_size(0X8013308, 0X10, 0, 0);
	add_func    (0X801345C,0X80134F8);
	set_func_flags(0X801345C,0x400);
	add_func    (0X80134F8,0X8013504);
	set_func_flags(0X80134F8,0x400);
	add_func    (0X8013504,0X8013570);
	set_func_flags(0X8013504,0x400);
	add_func    (0X8013570,0X8013924);
	set_func_flags(0X8013570,0x400);
	set_frame_size(0X8013570, 0X8, 0, 0);
	add_func    (0X8013928,0X8013970);
	set_func_flags(0X8013928,0x400);
	set_frame_size(0X8013928, 0X8, 0, 0);
	add_func    (0X8013980,0X801398E);
	set_func_flags(0X8013980,0x400);
	add_func    (0X8013A68,0X8013BE8);
	set_func_flags(0X8013A68,0);
	set_frame_size(0X8013A68, 0X4, 0, 0);
	add_func    (0X8013BEC,0X8013C18);
	set_func_flags(0X8013BEC,0x400);
	set_frame_size(0X8013BEC, 0, 0, 0);
	add_func    (0X8013C24,0X8013C5C);
	set_func_flags(0X8013C24,0x400);
	set_frame_size(0X8013C24, 0, 0, 0);
	add_func    (0X8013C64,0X8013C94);
	set_func_flags(0X8013C64,0x400);
	add_func    (0X8013C94,0X8013CBA);
	set_func_flags(0X8013C94,0x400);
	add_func    (0X8013CBC,0X8013D24);
	set_func_flags(0X8013CBC,0x400);
	add_func    (0X8013D24,0X8013E26);
	set_func_flags(0X8013D24,0);
	add_func    (0X8013E26,0X8013EB2);
	set_func_flags(0X8013E26,0x400);
	add_func    (0X8013EBC,0X8013FA6);
	set_func_flags(0X8013EBC,0x400);
	add_func    (0X801400A,0X8014066);
	set_func_flags(0X801400A,0x400);
	add_func    (0X8014066,0X80140B2);
	set_func_flags(0X8014066,0x400);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	split_sreg_range(0X8008000,"T",0,3);
	split_sreg_range(0X80081A0,"T",0X1,3);
	split_sreg_range(0X80081A4,"T",0X1,3);
	split_sreg_range(0X80081BA,"T",0X1,3);
	split_sreg_range(0X80081E4,"T",0X1,3);
	split_sreg_range(0X8008208,"T",0X1,3);
	split_sreg_range(0X8008212,"T",0X1,3);
	split_sreg_range(0X8008262,"T",0X1,3);
	split_sreg_range(0X8008276,"T",0X1,3);
	split_sreg_range(0X8008298,"T",0X1,3);
	split_sreg_range(0X80082A6,"T",0X1,3);
	split_sreg_range(0X80082A8,"T",0X1,3);
	split_sreg_range(0X80082BE,"T",0X1,3);
	split_sreg_range(0X80082CE,"T",0X1,3);
	split_sreg_range(0X80082E4,"T",0X1,3);
	split_sreg_range(0X8008300,"T",0X1,3);
	split_sreg_range(0X8008318,"T",0X1,3);
	split_sreg_range(0X8008330,"T",0X1,3);
	split_sreg_range(0X8008332,"T",0X1,3);
	split_sreg_range(0X800838A,"T",0X1,3);
	split_sreg_range(0X8008396,"T",0X1,3);
	split_sreg_range(0X800839E,"T",0X1,3);
	split_sreg_range(0X80083AC,"T",0X1,3);
	split_sreg_range(0X80083B4,"T",0X1,3);
	split_sreg_range(0X80083B6,"T",0X1,3);
	split_sreg_range(0X80083C6,"T",0X1,3);
	split_sreg_range(0X80083CC,"T",0X1,3);
	split_sreg_range(0X80083CE,"T",0X1,3);
	split_sreg_range(0X80083D8,"T",0X1,3);
	split_sreg_range(0X80083E8,"T",0X1,3);
	split_sreg_range(0X80083EA,"T",0X1,3);
	split_sreg_range(0X80083EC,"T",0X1,3);
	split_sreg_range(0X80083F6,"T",0X1,3);
	split_sreg_range(0X8008406,"T",0X1,3);
	split_sreg_range(0X8008408,"T",0X1,3);
	split_sreg_range(0X800840A,"T",0X1,3);
	split_sreg_range(0X8008416,"T",0X1,3);
	split_sreg_range(0X800841E,"T",0X1,3);
	split_sreg_range(0X8008430,"T",0X1,3);
	split_sreg_range(0X8008432,"T",0X1,3);
	split_sreg_range(0X8008434,"T",0X1,3);
	split_sreg_range(0X8008458,"T",0X1,3);
	split_sreg_range(0X8008460,"T",0X1,3);
	split_sreg_range(0X8008462,"T",0X1,3);
	split_sreg_range(0X8008494,"T",0X1,3);
	split_sreg_range(0X80084AE,"T",0X1,3);
	split_sreg_range(0X80084D2,"T",0X1,3);
	split_sreg_range(0X80084F6,"T",0X1,3);
	split_sreg_range(0X8008518,"T",0X1,3);
	split_sreg_range(0X8008526,"T",0X1,3);
	split_sreg_range(0X800852E,"T",0X1,3);
	split_sreg_range(0X8008530,"T",0X1,3);
	split_sreg_range(0X800854C,"T",0X1,3);
	split_sreg_range(0X8008554,"T",0X1,3);
	split_sreg_range(0X8008562,"T",0X1,3);
	split_sreg_range(0X800856A,"T",0X1,3);
	split_sreg_range(0X8008588,"T",0X1,3);
	split_sreg_range(0X8008590,"T",0X1,3);
	split_sreg_range(0X800859E,"T",0X1,3);
	split_sreg_range(0X80085A6,"T",0X1,3);
	split_sreg_range(0X80085B8,"T",0X1,3);
	split_sreg_range(0X80085BA,"T",0X1,3);
	split_sreg_range(0X80085BC,"T",0X1,3);
	split_sreg_range(0X80085F0,"T",0X1,3);
	split_sreg_range(0X800860A,"T",0X1,3);
	split_sreg_range(0X800863E,"T",0X1,3);
	split_sreg_range(0X8008656,"T",0X1,3);
	split_sreg_range(0X800866A,"T",0X1,3);
	split_sreg_range(0X80086C0,"T",0X1,3);
	split_sreg_range(0X80086D0,"T",0X1,3);
	split_sreg_range(0X80086EC,"T",0X1,3);
	split_sreg_range(0X80086FA,"T",0X1,3);
	split_sreg_range(0X80086FC,"T",0X1,3);
	split_sreg_range(0X8008704,"T",0X1,3);
	split_sreg_range(0X8008724,"T",0X1,3);
	split_sreg_range(0X8008726,"T",0X1,3);
	split_sreg_range(0X8008734,"T",0X1,3);
	split_sreg_range(0X8008752,"T",0X1,3);
	split_sreg_range(0X8008764,"T",0X1,3);
	split_sreg_range(0X8008766,"T",0X1,3);
	split_sreg_range(0X8008780,"T",0X1,3);
	split_sreg_range(0X8008782,"T",0X1,3);
	split_sreg_range(0X8008792,"T",0X1,3);
	split_sreg_range(0X800879E,"T",0X1,3);
	split_sreg_range(0X80087AE,"T",0X1,3);
	split_sreg_range(0X80087B6,"T",0X1,3);
	split_sreg_range(0X80087C6,"T",0X1,3);
	split_sreg_range(0X80087CE,"T",0X1,3);
	split_sreg_range(0X80087DE,"T",0X1,3);
	split_sreg_range(0X80087E6,"T",0X1,3);
	split_sreg_range(0X80087F6,"T",0X1,3);
	split_sreg_range(0X80087FE,"T",0X1,3);
	split_sreg_range(0X800880E,"T",0X1,3);
	split_sreg_range(0X8008816,"T",0X1,3);
	split_sreg_range(0X8008826,"T",0X1,3);
	split_sreg_range(0X800882E,"T",0X1,3);
	split_sreg_range(0X8008858,"T",0X1,3);
	split_sreg_range(0X800885A,"T",0X1,3);
	split_sreg_range(0X800886A,"T",0X1,3);
	split_sreg_range(0X8008876,"T",0X1,3);
	split_sreg_range(0X8008878,"T",0X1,3);
	split_sreg_range(0X800887A,"T",0X1,3);
	split_sreg_range(0X80088D8,"T",0X1,3);
	split_sreg_range(0X8008912,"T",0X1,3);
	split_sreg_range(0X8008926,"T",0X1,3);
	split_sreg_range(0X8008934,"T",0X1,3);
	split_sreg_range(0X8008946,"T",0X1,3);
	split_sreg_range(0X800895A,"T",0X1,3);
	split_sreg_range(0X800896E,"T",0X1,3);
	split_sreg_range(0X800897C,"T",0X1,3);
	split_sreg_range(0X80089D8,"T",0X1,3);
	split_sreg_range(0X80089E0,"T",0X1,3);
	split_sreg_range(0X8008A1E,"T",0X1,3);
	split_sreg_range(0X8008A56,"T",0X1,3);
	split_sreg_range(0X8008A58,"T",0X1,3);
	split_sreg_range(0X8008A6C,"T",0X1,3);
	split_sreg_range(0X8008A7C,"T",0X1,3);
	split_sreg_range(0X8008A8C,"T",0X1,3);
	split_sreg_range(0X8008A8E,"T",0X1,3);
	split_sreg_range(0X8008ACE,"T",0X1,3);
	split_sreg_range(0X8008AF0,"T",0X1,3);
	split_sreg_range(0X8008B3C,"T",0X1,3);
	split_sreg_range(0X8008B86,"T",0X1,3);
	split_sreg_range(0X8008B88,"T",0X1,3);
	split_sreg_range(0X8008B9A,"T",0X1,3);
	split_sreg_range(0X8008BA4,"T",0X1,3);
	split_sreg_range(0X8008BAE,"T",0X1,3);
	split_sreg_range(0X8008BB8,"T",0X1,3);
	split_sreg_range(0X8008BBC,"T",0X1,3);
	split_sreg_range(0X8008BD8,"T",0X1,3);
	split_sreg_range(0X8008BEC,"T",0X1,3);
	split_sreg_range(0X8008BF0,"T",0X1,3);
	split_sreg_range(0X8008BF4,"T",0X1,3);
	split_sreg_range(0X8008BF8,"T",0X1,3);
	split_sreg_range(0X8008BFC,"T",0X1,3);
	split_sreg_range(0X8008C00,"T",0X1,3);
	split_sreg_range(0X8008C04,"T",0X1,3);
	split_sreg_range(0X8008C08,"T",0X1,3);
	split_sreg_range(0X8008C0C,"T",0X1,3);
	split_sreg_range(0X8008C1E,"T",0X1,3);
	split_sreg_range(0X8008C28,"T",0X1,3);
	split_sreg_range(0X8008C32,"T",0X1,3);
	split_sreg_range(0X8008C3C,"T",0X1,3);
	split_sreg_range(0X8008C3E,"T",0X1,3);
	split_sreg_range(0X8008C42,"T",0X1,3);
	split_sreg_range(0X8008C6E,"T",0X1,3);
	split_sreg_range(0X8008C82,"T",0X1,3);
	split_sreg_range(0X8008D28,"T",0X1,3);
	split_sreg_range(0X8008D30,"T",0X1,3);
	split_sreg_range(0X8008D3E,"T",0X1,3);
	split_sreg_range(0X8008D46,"T",0X1,3);
	split_sreg_range(0X8008D56,"T",0X1,3);
	split_sreg_range(0X8008D62,"T",0X1,3);
	split_sreg_range(0X8008D64,"T",0X1,3);
	split_sreg_range(0X8008D66,"T",0X1,3);
	split_sreg_range(0X8008D82,"T",0X1,3);
	split_sreg_range(0X8008D84,"T",0X1,3);
	split_sreg_range(0X8008D92,"T",0X1,3);
	split_sreg_range(0X8008DA0,"T",0X1,3);
	split_sreg_range(0X8008DA4,"T",0X1,3);
	split_sreg_range(0X8008DB2,"T",0X1,3);
	split_sreg_range(0X8008DB4,"T",0X1,3);
	split_sreg_range(0X8008DC0,"T",0X1,3);
	split_sreg_range(0X8008DCC,"T",0X1,3);
	split_sreg_range(0X8008DD0,"T",0X1,3);
	split_sreg_range(0X8008DE2,"T",0X1,3);
	split_sreg_range(0X8008DE4,"T",0X1,3);
	split_sreg_range(0X8008DF2,"T",0X1,3);
	split_sreg_range(0X8008E00,"T",0X1,3);
	split_sreg_range(0X8008E04,"T",0X1,3);
	split_sreg_range(0X8008E06,"T",0X1,3);
	split_sreg_range(0X8008E24,"T",0X1,3);
	split_sreg_range(0X8008E38,"T",0X1,3);
	split_sreg_range(0X8008E3A,"T",0X1,3);
	split_sreg_range(0X8008E48,"T",0X1,3);
	split_sreg_range(0X8008E54,"T",0X1,3);
	split_sreg_range(0X8008E78,"T",0X1,3);
	split_sreg_range(0X8008E82,"T",0X1,3);
	split_sreg_range(0X8008E88,"T",0X1,3);
	split_sreg_range(0X8008E8A,"T",0X1,3);
	split_sreg_range(0X8008EA4,"T",0X1,3);
	split_sreg_range(0X8008EA8,"T",0X1,3);
	split_sreg_range(0X8008EBC,"T",0X1,3);
	split_sreg_range(0X8008EC0,"T",0X1,3);
	split_sreg_range(0X8008ED4,"T",0X1,3);
	split_sreg_range(0X8008ED8,"T",0X1,3);
	split_sreg_range(0X8008EEC,"T",0X1,3);
	split_sreg_range(0X8008EF0,"T",0X1,3);
	split_sreg_range(0X8008EFE,"T",0X1,3);
	split_sreg_range(0X8008F00,"T",0X1,3);
	split_sreg_range(0X8008F10,"T",0X1,3);
	split_sreg_range(0X8008F1E,"T",0X1,3);
	split_sreg_range(0X8008F28,"T",0X1,3);
	split_sreg_range(0X8008F32,"T",0X1,3);
	split_sreg_range(0X8008F34,"T",0X1,3);
	split_sreg_range(0X8008F36,"T",0X1,3);
	split_sreg_range(0X8008F42,"T",0X1,3);
	split_sreg_range(0X8008F44,"T",0X1,3);
	split_sreg_range(0X8008F46,"T",0X1,3);
	split_sreg_range(0X8008F70,"T",0X1,3);
	split_sreg_range(0X8008F98,"T",0X1,3);
	split_sreg_range(0X8008FB4,"T",0X1,3);
	split_sreg_range(0X8008FC2,"T",0X1,3);
	split_sreg_range(0X8008FCE,"T",0X1,3);
	split_sreg_range(0X8008FDA,"T",0X1,3);
	split_sreg_range(0X8008FE6,"T",0X1,3);
	split_sreg_range(0X8008FF2,"T",0X1,3);
	split_sreg_range(0X8008FFE,"T",0X1,3);
	split_sreg_range(0X800900A,"T",0X1,3);
	split_sreg_range(0X8009016,"T",0X1,3);
	split_sreg_range(0X8009022,"T",0X1,3);
	split_sreg_range(0X800902E,"T",0X1,3);
	split_sreg_range(0X800903A,"T",0X1,3);
	split_sreg_range(0X800903C,"T",0X1,3);
	split_sreg_range(0X8009048,"T",0X1,3);
	split_sreg_range(0X8009056,"T",0X1,3);
	split_sreg_range(0X8009062,"T",0X1,3);
	split_sreg_range(0X800906E,"T",0X1,3);
	split_sreg_range(0X8009072,"T",0X1,3);
	split_sreg_range(0X8009074,"T",0X1,3);
	split_sreg_range(0X8009076,"T",0X1,3);
	split_sreg_range(0X8009096,"T",0X1,3);
	split_sreg_range(0X80090A2,"T",0X1,3);
	split_sreg_range(0X80090B8,"T",0X1,3);
	split_sreg_range(0X80090C6,"T",0X1,3);
	split_sreg_range(0X80090CC,"T",0X1,3);
	split_sreg_range(0X80090D2,"T",0X1,3);
	split_sreg_range(0X80090D8,"T",0X1,3);
	split_sreg_range(0X80090DE,"T",0X1,3);
	split_sreg_range(0X80090E4,"T",0X1,3);
	split_sreg_range(0X80090EA,"T",0X1,3);
	split_sreg_range(0X80090F0,"T",0X1,3);
	split_sreg_range(0X80090F6,"T",0X1,3);
	split_sreg_range(0X80090FC,"T",0X1,3);
	split_sreg_range(0X8009102,"T",0X1,3);
	split_sreg_range(0X800910C,"T",0X1,3);
	split_sreg_range(0X8009116,"T",0X1,3);
	split_sreg_range(0X8009118,"T",0X1,3);
	split_sreg_range(0X8009120,"T",0X1,3);
	split_sreg_range(0X800914C,"T",0X1,3);
	split_sreg_range(0X8009166,"T",0X1,3);
	split_sreg_range(0X8009180,"T",0X1,3);
	split_sreg_range(0X800919A,"T",0X1,3);
	split_sreg_range(0X80091B4,"T",0X1,3);
	split_sreg_range(0X80091CE,"T",0X1,3);
	split_sreg_range(0X80091E8,"T",0X1,3);
	split_sreg_range(0X80091FC,"T",0X1,3);
	split_sreg_range(0X8009216,"T",0X1,3);
	split_sreg_range(0X8009230,"T",0X1,3);
	split_sreg_range(0X800924A,"T",0X1,3);
	split_sreg_range(0X8009262,"T",0X1,3);
	split_sreg_range(0X8009264,"T",0X1,3);
	split_sreg_range(0X80092BA,"T",0X1,3);
	split_sreg_range(0X80092C6,"T",0X1,3);
	split_sreg_range(0X80092D0,"T",0X1,3);
	split_sreg_range(0X80092D2,"T",0X1,3);
	split_sreg_range(0X80092DC,"T",0X1,3);
	split_sreg_range(0X80092E2,"T",0X1,3);
	split_sreg_range(0X80092E4,"T",0X1,3);
	split_sreg_range(0X80092E8,"T",0X1,3);
	split_sreg_range(0X8009304,"T",0X1,3);
	split_sreg_range(0X800930A,"T",0X1,3);
	split_sreg_range(0X8009312,"T",0X1,3);
	split_sreg_range(0X8009314,"T",0X1,3);
	split_sreg_range(0X8009316,"T",0X1,3);
	split_sreg_range(0X8009324,"T",0X1,3);
	split_sreg_range(0X800932A,"T",0X1,3);
	split_sreg_range(0X8009340,"T",0X1,3);
	split_sreg_range(0X8009346,"T",0X1,3);
	split_sreg_range(0X800934E,"T",0X1,3);
	split_sreg_range(0X8009350,"T",0X1,3);
	split_sreg_range(0X8009360,"T",0X1,3);
	split_sreg_range(0X8009366,"T",0X1,3);
	split_sreg_range(0X800938C,"T",0X1,3);
	split_sreg_range(0X80093FC,"T",0X1,3);
	split_sreg_range(0X800940C,"T",0X1,3);
	split_sreg_range(0X8009418,"T",0X1,3);
	split_sreg_range(0X800944C,"T",0X1,3);
	split_sreg_range(0X800944E,"T",0X1,3);
	split_sreg_range(0X8009476,"T",0X1,3);
	split_sreg_range(0X8009478,"T",0X1,3);
	split_sreg_range(0X800947A,"T",0X1,3);
	split_sreg_range(0X80094CA,"T",0X1,3);
	split_sreg_range(0X80094E2,"T",0X1,3);
	split_sreg_range(0X80094FE,"T",0X1,3);
	split_sreg_range(0X800950E,"T",0X1,3);
	split_sreg_range(0X800951C,"T",0X1,3);
	split_sreg_range(0X800952A,"T",0X1,3);
	split_sreg_range(0X800952C,"T",0X1,3);
	split_sreg_range(0X800952E,"T",0X1,3);
	split_sreg_range(0X800953C,"T",0X1,3);
	split_sreg_range(0X8009544,"T",0X1,3);
	split_sreg_range(0X800954C,"T",0X1,3);
	split_sreg_range(0X8009550,"T",0X1,3);
	split_sreg_range(0X8009554,"T",0X1,3);
	split_sreg_range(0X8009598,"T",0X1,3);
	split_sreg_range(0X800959C,"T",0X1,3);
	split_sreg_range(0X80095DC,"T",0X1,3);
	split_sreg_range(0X80095E0,"T",0X1,3);
	split_sreg_range(0X80095EE,"T",0X1,3);
	split_sreg_range(0X80095F6,"T",0X1,3);
	split_sreg_range(0X80095FE,"T",0X1,3);
	split_sreg_range(0X8009602,"T",0X1,3);
	split_sreg_range(0X8009606,"T",0X1,3);
	split_sreg_range(0X8009646,"T",0X1,3);
	split_sreg_range(0X800964A,"T",0X1,3);
	split_sreg_range(0X800965A,"T",0X1,3);
	split_sreg_range(0X800965C,"T",0X1,3);
	split_sreg_range(0X800965E,"T",0X1,3);
	split_sreg_range(0X800966C,"T",0X1,3);
	split_sreg_range(0X80096DE,"T",0X1,3);
	split_sreg_range(0X80096F0,"T",0X1,3);
	split_sreg_range(0X80096F4,"T",0X1,3);
	split_sreg_range(0X8009748,"T",0X1,3);
	split_sreg_range(0X8009756,"T",0X1,3);
	split_sreg_range(0X800975A,"T",0X1,3);
	split_sreg_range(0X8009792,"T",0X1,3);
	split_sreg_range(0X8009796,"T",0X1,3);
	split_sreg_range(0X80097DA,"T",0X1,3);
	split_sreg_range(0X80097DE,"T",0X1,3);
	split_sreg_range(0X8009832,"T",0X1,3);
	split_sreg_range(0X8009848,"T",0X1,3);
	split_sreg_range(0X8009862,"T",0X1,3);
	split_sreg_range(0X800987C,"T",0X1,3);
	split_sreg_range(0X800989C,"T",0X1,3);
	split_sreg_range(0X80098A0,"T",0X1,3);
	split_sreg_range(0X80098A6,"T",0X1,3);
	split_sreg_range(0X8009908,"T",0X1,3);
	split_sreg_range(0X800990E,"T",0X1,3);
	split_sreg_range(0X800992C,"T",0X1,3);
	split_sreg_range(0X800993E,"T",0X1,3);
	split_sreg_range(0X8009942,"T",0X1,3);
	split_sreg_range(0X8009996,"T",0X1,3);
	split_sreg_range(0X80099B8,"T",0X1,3);
	split_sreg_range(0X80099BA,"T",0X1,3);
	split_sreg_range(0X80099CA,"T",0X1,3);
	split_sreg_range(0X80099D4,"T",0X1,3);
	split_sreg_range(0X80099EC,"T",0X1,3);
	split_sreg_range(0X80099F0,"T",0X1,3);
	split_sreg_range(0X80099FC,"T",0X1,3);
	split_sreg_range(0X80099FE,"T",0X1,3);
	split_sreg_range(0X8009A16,"T",0X1,3);
	split_sreg_range(0X8009A24,"T",0X1,3);
	split_sreg_range(0X8009A32,"T",0X1,3);
	split_sreg_range(0X8009A34,"T",0X1,3);
	split_sreg_range(0X8009A48,"T",0X1,3);
	split_sreg_range(0X8009A64,"T",0X1,3);
	split_sreg_range(0X8009A7C,"T",0X1,3);
	split_sreg_range(0X8009A94,"T",0X1,3);
	split_sreg_range(0X8009AAC,"T",0X1,3);
	split_sreg_range(0X8009AC4,"T",0X1,3);
	split_sreg_range(0X8009ADC,"T",0X1,3);
	split_sreg_range(0X8009AF2,"T",0X1,3);
	split_sreg_range(0X8009AF4,"T",0X1,3);
	split_sreg_range(0X8009B08,"T",0X1,3);
	split_sreg_range(0X8009B34,"T",0X1,3);
	split_sreg_range(0X8009B44,"T",0X1,3);
	split_sreg_range(0X8009B84,"T",0X1,3);
	split_sreg_range(0X8009B9A,"T",0X1,3);
	split_sreg_range(0X8009B9C,"T",0X1,3);
	split_sreg_range(0X8009BA2,"T",0X1,3);
	split_sreg_range(0X8009BB2,"T",0X1,3);
	split_sreg_range(0X8009BF4,"T",0X1,3);
	split_sreg_range(0X8009C0E,"T",0X1,3);
	split_sreg_range(0X8009C10,"T",0X1,3);
	split_sreg_range(0X8009C16,"T",0X1,3);
	split_sreg_range(0X8009C2A,"T",0X1,3);
	split_sreg_range(0X8009C38,"T",0X1,3);
	split_sreg_range(0X8009C3A,"T",0X1,3);
	split_sreg_range(0X8009C52,"T",0X1,3);
	split_sreg_range(0X8009C54,"T",0X1,3);
	split_sreg_range(0X8009C5E,"T",0X1,3);
	split_sreg_range(0X8009C62,"T",0X1,3);
	split_sreg_range(0X8009C6C,"T",0X1,3);
	split_sreg_range(0X8009C6E,"T",0X1,3);
	split_sreg_range(0X8009C70,"T",0X1,3);
	split_sreg_range(0X8009CA6,"T",0X1,3);
	split_sreg_range(0X8009CC2,"T",0X1,3);
	split_sreg_range(0X8009CC6,"T",0X1,3);
	split_sreg_range(0X8009CE8,"T",0X1,3);
	split_sreg_range(0X8009D00,"T",0X1,3);
	split_sreg_range(0X8009D0E,"T",0X1,3);
	split_sreg_range(0X8009D1A,"T",0X1,3);
	split_sreg_range(0X8009D2A,"T",0X1,3);
	split_sreg_range(0X8009D2E,"T",0X1,3);
	split_sreg_range(0X8009D30,"T",0X1,3);
	split_sreg_range(0X8009DA0,"T",0X1,3);
	split_sreg_range(0X8009DA6,"T",0X1,3);
	split_sreg_range(0X8009DAC,"T",0X1,3);
	split_sreg_range(0X8009DB2,"T",0X1,3);
	split_sreg_range(0X8009DBC,"T",0X1,3);
	split_sreg_range(0X8009DD6,"T",0X1,3);
	split_sreg_range(0X8009DD8,"T",0X1,3);
	split_sreg_range(0X8009E44,"T",0X1,3);
	split_sreg_range(0X8009E52,"T",0X1,3);
	split_sreg_range(0X8009E60,"T",0X1,3);
	split_sreg_range(0X8009E62,"T",0X1,3);
	split_sreg_range(0X8009E66,"T",0X1,3);
	split_sreg_range(0X8009E7C,"T",0X1,3);
	split_sreg_range(0X8009E86,"T",0X1,3);
	split_sreg_range(0X8009E8A,"T",0X1,3);
	split_sreg_range(0X8009E9A,"T",0X1,3);
	split_sreg_range(0X8009E9C,"T",0X1,3);
	split_sreg_range(0X8009E9E,"T",0X1,3);
	split_sreg_range(0X8009EAA,"T",0X1,3);
	split_sreg_range(0X8009EC4,"T",0X1,3);
	split_sreg_range(0X8009ED0,"T",0X1,3);
	split_sreg_range(0X8009ED2,"T",0X1,3);
	split_sreg_range(0X8009F70,"T",0X1,3);
	split_sreg_range(0X8009F7A,"T",0X1,3);
	split_sreg_range(0X8009F82,"T",0X1,3);
	split_sreg_range(0X8009FAA,"T",0X1,3);
	split_sreg_range(0X8009FB2,"T",0X1,3);
	split_sreg_range(0X8009FBA,"T",0X1,3);
	split_sreg_range(0X8009FBC,"T",0X1,3);
	split_sreg_range(0X8009FDA,"T",0X1,3);
	split_sreg_range(0X8009FF8,"T",0X1,3);
	split_sreg_range(0X8009FFE,"T",0X1,3);
	split_sreg_range(0X800A004,"T",0X1,3);
	split_sreg_range(0X800A024,"T",0X1,3);
	split_sreg_range(0X800A036,"T",0X1,3);
	split_sreg_range(0X800A03C,"T",0X1,3);
	split_sreg_range(0X800A03E,"T",0X1,3);
	split_sreg_range(0X800A044,"T",0X1,3);
	split_sreg_range(0X800A09A,"T",0X1,3);
	split_sreg_range(0X800A0A8,"T",0X1,3);
	split_sreg_range(0X800A0B2,"T",0X1,3);
	split_sreg_range(0X800A0B4,"T",0X1,3);
	split_sreg_range(0X800A0C2,"T",0X1,3);
	split_sreg_range(0X800A0CC,"T",0X1,3);
	split_sreg_range(0X800A0CE,"T",0X1,3);
	split_sreg_range(0X800A0DC,"T",0X1,3);
	split_sreg_range(0X800A0E6,"T",0X1,3);
	split_sreg_range(0X800A0E8,"T",0X1,3);
	split_sreg_range(0X800A0F6,"T",0X1,3);
	split_sreg_range(0X800A100,"T",0X1,3);
	split_sreg_range(0X800A102,"T",0X1,3);
	split_sreg_range(0X800A110,"T",0X1,3);
	split_sreg_range(0X800A11A,"T",0X1,3);
	split_sreg_range(0X800A14E,"T",0X1,3);
	split_sreg_range(0X800A150,"T",0X1,3);
	split_sreg_range(0X800A18C,"T",0X1,3);
	split_sreg_range(0X800A1A8,"T",0X1,3);
	split_sreg_range(0X800A1C0,"T",0X1,3);
	split_sreg_range(0X800A1D6,"T",0X1,3);
	split_sreg_range(0X800A1D8,"T",0X1,3);
	split_sreg_range(0X800A214,"T",0X1,3);
	split_sreg_range(0X800A24C,"T",0X1,3);
	split_sreg_range(0X800A256,"T",0X1,3);
	split_sreg_range(0X800A25A,"T",0X1,3);
	split_sreg_range(0X800A262,"T",0X1,3);
	split_sreg_range(0X800A264,"T",0X1,3);
	split_sreg_range(0X800A28C,"T",0X1,3);
	split_sreg_range(0X800A2A4,"T",0X1,3);
	split_sreg_range(0X800A2BE,"T",0X1,3);
	split_sreg_range(0X800A2C6,"T",0X1,3);
	split_sreg_range(0X800A2CC,"T",0X1,3);
	split_sreg_range(0X800A322,"T",0X1,3);
	split_sreg_range(0X800A32E,"T",0X1,3);
	split_sreg_range(0X800A338,"T",0X1,3);
	split_sreg_range(0X800A346,"T",0X1,3);
	split_sreg_range(0X800A350,"T",0X1,3);
	split_sreg_range(0X800A352,"T",0X1,3);
	split_sreg_range(0X800A36A,"T",0X1,3);
	split_sreg_range(0X800A370,"T",0X1,3);
	split_sreg_range(0X800A37C,"T",0X1,3);
	split_sreg_range(0X800A382,"T",0X1,3);
	split_sreg_range(0X800A384,"T",0X1,3);
	split_sreg_range(0X800A3A0,"T",0X1,3);
	split_sreg_range(0X800A3AA,"T",0X1,3);
	split_sreg_range(0X800A3B8,"T",0X1,3);
	split_sreg_range(0X800A3C2,"T",0X1,3);
	split_sreg_range(0X800A3EC,"T",0X1,3);
	split_sreg_range(0X800A3F6,"T",0X1,3);
	split_sreg_range(0X800A404,"T",0X1,3);
	split_sreg_range(0X800A406,"T",0X1,3);
	split_sreg_range(0X800A41E,"T",0X1,3);
	split_sreg_range(0X800A428,"T",0X1,3);
	split_sreg_range(0X800A438,"T",0X1,3);
	split_sreg_range(0X800A43A,"T",0X1,3);
	split_sreg_range(0X800A442,"T",0X1,3);
	split_sreg_range(0X800A472,"T",0X1,3);
	split_sreg_range(0X800A474,"T",0X1,3);
	split_sreg_range(0X800A476,"T",0X1,3);
	split_sreg_range(0X800A498,"T",0X1,3);
	split_sreg_range(0X800A4B4,"T",0X1,3);
	split_sreg_range(0X800A4CC,"T",0X1,3);
	split_sreg_range(0X800A4E4,"T",0X1,3);
	split_sreg_range(0X800A4FC,"T",0X1,3);
	split_sreg_range(0X800A514,"T",0X1,3);
	split_sreg_range(0X800A52C,"T",0X1,3);
	split_sreg_range(0X800A544,"T",0X1,3);
	split_sreg_range(0X800A55C,"T",0X1,3);
	split_sreg_range(0X800A576,"T",0X1,3);
	split_sreg_range(0X800A590,"T",0X1,3);
	split_sreg_range(0X800A5AA,"T",0X1,3);
	split_sreg_range(0X800A5C2,"T",0X1,3);
	split_sreg_range(0X800A5DA,"T",0X1,3);
	split_sreg_range(0X800A5F2,"T",0X1,3);
	split_sreg_range(0X800A60C,"T",0X1,3);
	split_sreg_range(0X800A626,"T",0X1,3);
	split_sreg_range(0X800A63E,"T",0X1,3);
	split_sreg_range(0X800A640,"T",0X1,3);
	split_sreg_range(0X800A668,"T",0X1,3);
	split_sreg_range(0X800A672,"T",0X1,3);
	split_sreg_range(0X800A688,"T",0X1,3);
	split_sreg_range(0X800A6B0,"T",0X1,3);
	split_sreg_range(0X800A6B4,"T",0X1,3);
	split_sreg_range(0X800A6BA,"T",0X1,3);
	split_sreg_range(0X800A70A,"T",0X1,3);
	split_sreg_range(0X800A732,"T",0X1,3);
	split_sreg_range(0X800A73E,"T",0X1,3);
	split_sreg_range(0X800A790,"T",0X1,3);
	split_sreg_range(0X800A7CC,"T",0X1,3);
	split_sreg_range(0X800A7D8,"T",0X1,3);
	split_sreg_range(0X800A826,"T",0X1,3);
	split_sreg_range(0X800A862,"T",0X1,3);
	split_sreg_range(0X800A86E,"T",0X1,3);
	split_sreg_range(0X800A8D8,"T",0X1,3);
	split_sreg_range(0X800A904,"T",0X1,3);
	split_sreg_range(0X800A916,"T",0X1,3);
	split_sreg_range(0X800A924,"T",0X1,3);
	split_sreg_range(0X800A93E,"T",0X1,3);
	split_sreg_range(0X800A9A0,"T",0X1,3);
	split_sreg_range(0X800A9AE,"T",0X1,3);
	split_sreg_range(0X800A9BA,"T",0X1,3);
	split_sreg_range(0X800A9C0,"T",0X1,3);
	split_sreg_range(0X800A9D2,"T",0X1,3);
	split_sreg_range(0X800AA2C,"T",0X1,3);
	split_sreg_range(0X800AA3A,"T",0X1,3);
	split_sreg_range(0X800AA46,"T",0X1,3);
	split_sreg_range(0X800AA4C,"T",0X1,3);
	split_sreg_range(0X800AA66,"T",0X1,3);
	split_sreg_range(0X800AAC8,"T",0X1,3);
	split_sreg_range(0X800AAD6,"T",0X1,3);
	split_sreg_range(0X800AAE2,"T",0X1,3);
	split_sreg_range(0X800AAE8,"T",0X1,3);
	split_sreg_range(0X800AAFA,"T",0X1,3);
	split_sreg_range(0X800AB46,"T",0X1,3);
	split_sreg_range(0X800AB54,"T",0X1,3);
	split_sreg_range(0X800AB60,"T",0X1,3);
	split_sreg_range(0X800AB66,"T",0X1,3);
	split_sreg_range(0X800AB90,"T",0X1,3);
	split_sreg_range(0X800AB92,"T",0X1,3);
	split_sreg_range(0X800AB94,"T",0X1,3);
	split_sreg_range(0X800ABAE,"T",0X1,3);
	split_sreg_range(0X800ABCA,"T",0X1,3);
	split_sreg_range(0X800ABE6,"T",0X1,3);
	split_sreg_range(0X800ABFA,"T",0X1,3);
	split_sreg_range(0X800ABFC,"T",0X1,3);
	split_sreg_range(0X800AC10,"T",0X1,3);
	split_sreg_range(0X800AC12,"T",0X1,3);
	split_sreg_range(0X800AC1C,"T",0X1,3);
	split_sreg_range(0X800AC1E,"T",0X1,3);
	split_sreg_range(0X800AC4C,"T",0X1,3);
	split_sreg_range(0X800AC74,"T",0X1,3);
	split_sreg_range(0X800AD04,"T",0X1,3);
	split_sreg_range(0X800AD0E,"T",0X1,3);
	split_sreg_range(0X800AD20,"T",0X1,3);
	split_sreg_range(0X800AD2C,"T",0X1,3);
	split_sreg_range(0X800AD2E,"T",0X1,3);
	split_sreg_range(0X800AD38,"T",0X1,3);
	split_sreg_range(0X800AD3E,"T",0X1,3);
	split_sreg_range(0X800AD40,"T",0X1,3);
	split_sreg_range(0X800AD58,"T",0X1,3);
	split_sreg_range(0X800AD5E,"T",0X1,3);
	split_sreg_range(0X800AD6C,"T",0X1,3);
	split_sreg_range(0X800AD7E,"T",0X1,3);
	split_sreg_range(0X800AD96,"T",0X1,3);
	split_sreg_range(0X800ADB4,"T",0X1,3);
	split_sreg_range(0X800ADC0,"T",0X1,3);
	split_sreg_range(0X800ADD4,"T",0X1,3);
	split_sreg_range(0X800ADF0,"T",0X1,3);
	split_sreg_range(0X800AE26,"T",0X1,3);
	split_sreg_range(0X800AE5E,"T",0X1,3);
	split_sreg_range(0X800AF04,"T",0X1,3);
	split_sreg_range(0X800AF0E,"T",0X1,3);
	split_sreg_range(0X800AF1C,"T",0X1,3);
	split_sreg_range(0X800AF26,"T",0X1,3);
	split_sreg_range(0X800AF34,"T",0X1,3);
	split_sreg_range(0X800AF3E,"T",0X1,3);
	split_sreg_range(0X800AF4C,"T",0X1,3);
	split_sreg_range(0X800AF56,"T",0X1,3);
	split_sreg_range(0X800B102,"T",0X1,3);
	split_sreg_range(0X800B120,"T",0X1,3);
	split_sreg_range(0X800B13E,"T",0X1,3);
	split_sreg_range(0X800B15C,"T",0X1,3);
	split_sreg_range(0X800B170,"T",0X1,3);
	split_sreg_range(0X800B18E,"T",0X1,3);
	split_sreg_range(0X800B19C,"T",0X1,3);
	split_sreg_range(0X800B1A6,"T",0X1,3);
	split_sreg_range(0X800B1B4,"T",0X1,3);
	split_sreg_range(0X800B1BE,"T",0X1,3);
	split_sreg_range(0X800B1CC,"T",0X1,3);
	split_sreg_range(0X800B1D6,"T",0X1,3);
	split_sreg_range(0X800B220,"T",0X1,3);
	split_sreg_range(0X800B224,"T",0X1,3);
	split_sreg_range(0X800B228,"T",0X1,3);
	split_sreg_range(0X800B22C,"T",0X1,3);
	split_sreg_range(0X800B230,"T",0X1,3);
	split_sreg_range(0X800B234,"T",0X1,3);
	split_sreg_range(0X800B280,"T",0X1,3);
	split_sreg_range(0X800B282,"T",0X1,3);
	split_sreg_range(0X800B28A,"T",0X1,3);
	split_sreg_range(0X800B2A8,"T",0X1,3);
	split_sreg_range(0X800B2AA,"T",0X1,3);
	split_sreg_range(0X800B2AC,"T",0X1,3);
	split_sreg_range(0X800B2B4,"T",0X1,3);
	split_sreg_range(0X800B2D2,"T",0X1,3);
	split_sreg_range(0X800B2EC,"T",0X1,3);
	split_sreg_range(0X800B306,"T",0X1,3);
	split_sreg_range(0X800B320,"T",0X1,3);
	split_sreg_range(0X800B338,"T",0X1,3);
	split_sreg_range(0X800B33A,"T",0X1,3);
	split_sreg_range(0X800B354,"T",0X1,3);
	split_sreg_range(0X800B39A,"T",0X1,3);
	split_sreg_range(0X800B39E,"T",0X1,3);
	split_sreg_range(0X800B3B8,"T",0X1,3);
	split_sreg_range(0X800B3C8,"T",0X1,3);
	split_sreg_range(0X800B3F2,"T",0X1,3);
	split_sreg_range(0X800B404,"T",0X1,3);
	split_sreg_range(0X800B424,"T",0X1,3);
	split_sreg_range(0X800B452,"T",0X1,3);
	split_sreg_range(0X800B45E,"T",0X1,3);
	split_sreg_range(0X800B468,"T",0X1,3);
	split_sreg_range(0X800B46A,"T",0X1,3);
	split_sreg_range(0X800B480,"T",0X1,3);
	split_sreg_range(0X800B498,"T",0X1,3);
	split_sreg_range(0X800B4A0,"T",0X1,3);
	split_sreg_range(0X800B4A2,"T",0X1,3);
	split_sreg_range(0X800B4AC,"T",0X1,3);
	split_sreg_range(0X800B4B2,"T",0X1,3);
	split_sreg_range(0X800B4B4,"T",0X1,3);
	split_sreg_range(0X800B4BE,"T",0X1,3);
	split_sreg_range(0X800B4C4,"T",0X1,3);
	split_sreg_range(0X800B4F6,"T",0X1,3);
	split_sreg_range(0X800B500,"T",0X1,3);
	split_sreg_range(0X800B520,"T",0X1,3);
	split_sreg_range(0X800B52A,"T",0X1,3);
	split_sreg_range(0X800B534,"T",0X1,3);
	split_sreg_range(0X800B574,"T",0X1,3);
	split_sreg_range(0X800B57E,"T",0X1,3);
	split_sreg_range(0X800B58C,"T",0X1,3);
	split_sreg_range(0X800B596,"T",0X1,3);
	split_sreg_range(0X800B5A4,"T",0X1,3);
	split_sreg_range(0X800B5AE,"T",0X1,3);
	split_sreg_range(0X800B5BC,"T",0X1,3);
	split_sreg_range(0X800B5C4,"T",0X1,3);
	split_sreg_range(0X800B5D2,"T",0X1,3);
	split_sreg_range(0X800B5DC,"T",0X1,3);
	split_sreg_range(0X800B5FC,"T",0X1,3);
	split_sreg_range(0X800B606,"T",0X1,3);
	split_sreg_range(0X800B614,"T",0X1,3);
	split_sreg_range(0X800B61E,"T",0X1,3);
	split_sreg_range(0X800B620,"T",0X1,3);
	split_sreg_range(0X800B62E,"T",0X1,3);
	split_sreg_range(0X800B634,"T",0X1,3);
	split_sreg_range(0X800B64A,"T",0X1,3);
	split_sreg_range(0X800B662,"T",0X1,3);
	split_sreg_range(0X800B66C,"T",0X1,3);
	split_sreg_range(0X800B670,"T",0X1,3);
	split_sreg_range(0X800B684,"T",0X1,3);
	split_sreg_range(0X800B686,"T",0X1,3);
	split_sreg_range(0X800B688,"T",0X1,3);
	split_sreg_range(0X800B698,"T",0X1,3);
	split_sreg_range(0X800B6BC,"T",0X1,3);
	split_sreg_range(0X800B6C8,"T",0X1,3);
	split_sreg_range(0X800B6EC,"T",0X1,3);
	split_sreg_range(0X800B704,"T",0X1,3);
	split_sreg_range(0X800B726,"T",0X1,3);
	split_sreg_range(0X800B72A,"T",0X1,3);
	split_sreg_range(0X800B736,"T",0X1,3);
	split_sreg_range(0X800B758,"T",0X1,3);
	split_sreg_range(0X800B760,"T",0X1,3);
	split_sreg_range(0X800B762,"T",0X1,3);
	split_sreg_range(0X800B782,"T",0X1,3);
	split_sreg_range(0X800B786,"T",0X1,3);
	split_sreg_range(0X800B792,"T",0X1,3);
	split_sreg_range(0X800B7BA,"T",0X1,3);
	split_sreg_range(0X800B7C4,"T",0X1,3);
	split_sreg_range(0X800B7C6,"T",0X1,3);
	split_sreg_range(0X800B7FC,"T",0X1,3);
	split_sreg_range(0X800B80A,"T",0X1,3);
	split_sreg_range(0X800B824,"T",0X1,3);
	split_sreg_range(0X800B828,"T",0X1,3);
	split_sreg_range(0X800B850,"T",0X1,3);
	split_sreg_range(0X800B852,"T",0X1,3);
	split_sreg_range(0X800BAA0,"T",0X1,3);
	split_sreg_range(0X800BAC2,"T",0X1,3);
	split_sreg_range(0X800BACC,"T",0X1,3);
	split_sreg_range(0X800BAFA,"T",0X1,3);
	split_sreg_range(0X800BAFE,"T",0X1,3);
	split_sreg_range(0X800BB34,"T",0X1,3);
	split_sreg_range(0X800BB40,"T",0X1,3);
	split_sreg_range(0X800BB54,"T",0X1,3);
	split_sreg_range(0X800BB5A,"T",0X1,3);
	split_sreg_range(0X800BB5C,"T",0X1,3);
	split_sreg_range(0X800BB6E,"T",0X1,3);
	split_sreg_range(0X800BB78,"T",0X1,3);
	split_sreg_range(0X800BB8A,"T",0X1,3);
	split_sreg_range(0X800BBAA,"T",0X1,3);
	split_sreg_range(0X800BBAE,"T",0X1,3);
	split_sreg_range(0X800BBBA,"T",0X1,3);
	split_sreg_range(0X800BBD2,"T",0X1,3);
	split_sreg_range(0X800BBF4,"T",0X1,3);
	split_sreg_range(0X800BC0C,"T",0X1,3);
	split_sreg_range(0X800BC28,"T",0X1,3);
	split_sreg_range(0X800BC3E,"T",0X1,3);
	split_sreg_range(0X800BC42,"T",0X1,3);
	split_sreg_range(0X800BC46,"T",0X1,3);
	split_sreg_range(0X800BC54,"T",0X1,3);
	split_sreg_range(0X800BC58,"T",0X1,3);
	split_sreg_range(0X800BC66,"T",0X1,3);
	split_sreg_range(0X800BC7C,"T",0X1,3);
	split_sreg_range(0X800BC7E,"T",0X1,3);
	split_sreg_range(0X800BCA2,"T",0X1,3);
	split_sreg_range(0X800BCB6,"T",0X1,3);
	split_sreg_range(0X800BCC2,"T",0X1,3);
	split_sreg_range(0X800BCC6,"T",0X1,3);
	split_sreg_range(0X800BCC8,"T",0X1,3);
	split_sreg_range(0X800BCD6,"T",0X1,3);
	split_sreg_range(0X800BCEA,"T",0X1,3);
	split_sreg_range(0X800BD9E,"T",0X1,3);
	split_sreg_range(0X800BDA8,"T",0X1,3);
	split_sreg_range(0X800BDB0,"T",0X1,3);
	split_sreg_range(0X800BDBA,"T",0X1,3);
	split_sreg_range(0X800BDC0,"T",0X1,3);
	split_sreg_range(0X800BDF2,"T",0X1,3);
	split_sreg_range(0X800BDF6,"T",0X1,3);
	split_sreg_range(0X800BE0A,"T",0X1,3);
	split_sreg_range(0X800BE14,"T",0X1,3);
	split_sreg_range(0X800BE70,"T",0X1,3);
	split_sreg_range(0X800BE74,"T",0X1,3);
	split_sreg_range(0X800BE88,"T",0X1,3);
	split_sreg_range(0X800BE94,"T",0X1,3);
	split_sreg_range(0X800BEB0,"T",0X1,3);
	split_sreg_range(0X800BEB2,"T",0X1,3);
	split_sreg_range(0X800BED8,"T",0X1,3);
	split_sreg_range(0X800BEE8,"T",0X1,3);
	split_sreg_range(0X800BEFE,"T",0X1,3);
	split_sreg_range(0X800BF04,"T",0X1,3);
	split_sreg_range(0X800BF28,"T",0X1,3);
	split_sreg_range(0X800BF2E,"T",0X1,3);
	split_sreg_range(0X800BF3A,"T",0X1,3);
	split_sreg_range(0X800BF3C,"T",0X1,3);
	split_sreg_range(0X800BF50,"T",0X1,3);
	split_sreg_range(0X800BF5E,"T",0X1,3);
	split_sreg_range(0X800BF72,"T",0X1,3);
	split_sreg_range(0X800C02C,"T",0X1,3);
	split_sreg_range(0X800C03E,"T",0X1,3);
	split_sreg_range(0X800C058,"T",0X1,3);
	split_sreg_range(0X800C07E,"T",0X1,3);
	split_sreg_range(0X800C092,"T",0X1,3);
	split_sreg_range(0X800C094,"T",0X1,3);
	split_sreg_range(0X800C098,"T",0X1,3);
	split_sreg_range(0X800C0A6,"T",0X1,3);
	split_sreg_range(0X800C0B0,"T",0X1,3);
	split_sreg_range(0X800C0BE,"T",0X1,3);
	split_sreg_range(0X800C0C0,"T",0X1,3);
	split_sreg_range(0X800C0C4,"T",0X1,3);
	split_sreg_range(0X800C0D8,"T",0X1,3);
	split_sreg_range(0X800C0DE,"T",0X1,3);
	split_sreg_range(0X800C0EC,"T",0X1,3);
	split_sreg_range(0X800C11E,"T",0X1,3);
	split_sreg_range(0X800C134,"T",0X1,3);
	split_sreg_range(0X800C14A,"T",0X1,3);
	split_sreg_range(0X800C14C,"T",0X1,3);
	split_sreg_range(0X800C162,"T",0X1,3);
	split_sreg_range(0X800C178,"T",0X1,3);
	split_sreg_range(0X800C17A,"T",0X1,3);
	split_sreg_range(0X800C190,"T",0X1,3);
	split_sreg_range(0X800C1A6,"T",0X1,3);
	split_sreg_range(0X800C1AC,"T",0X1,3);
	split_sreg_range(0X800C1DA,"T",0X1,3);
	split_sreg_range(0X800C1E8,"T",0X1,3);
	split_sreg_range(0X800C1EA,"T",0X1,3);
	split_sreg_range(0X800C21A,"T",0X1,3);
	split_sreg_range(0X800C228,"T",0X1,3);
	split_sreg_range(0X800C250,"T",0X1,3);
	split_sreg_range(0X800C260,"T",0X1,3);
	split_sreg_range(0X800C280,"T",0X1,3);
	split_sreg_range(0X800C282,"T",0X1,3);
	split_sreg_range(0X800C2CA,"T",0X1,3);
	split_sreg_range(0X800C2D0,"T",0X1,3);
	split_sreg_range(0X800C2DE,"T",0X1,3);
	split_sreg_range(0X800C2EC,"T",0X1,3);
	split_sreg_range(0X800C318,"T",0X1,3);
	split_sreg_range(0X800C32A,"T",0X1,3);
	split_sreg_range(0X800C34E,"T",0X1,3);
	split_sreg_range(0X800C36E,"T",0X1,3);
	split_sreg_range(0X800C38E,"T",0X1,3);
	split_sreg_range(0X800C3B0,"T",0X1,3);
	split_sreg_range(0X800C3B2,"T",0X1,3);
	split_sreg_range(0X800C3C8,"T",0X1,3);
	split_sreg_range(0X800C3CA,"T",0X1,3);
	split_sreg_range(0X800C46E,"T",0X1,3);
	split_sreg_range(0X800C47E,"T",0X1,3);
	split_sreg_range(0X800C484,"T",0X1,3);
	split_sreg_range(0X800C48A,"T",0X1,3);
	split_sreg_range(0X800C490,"T",0X1,3);
	split_sreg_range(0X800C496,"T",0X1,3);
	split_sreg_range(0X800C4AC,"T",0X1,3);
	split_sreg_range(0X800C4DC,"T",0X1,3);
	split_sreg_range(0X800C4F0,"T",0X1,3);
	split_sreg_range(0X800C4F2,"T",0X1,3);
	split_sreg_range(0X800C546,"T",0X1,3);
	split_sreg_range(0X800C54C,"T",0X1,3);
	split_sreg_range(0X800C556,"T",0X1,3);
	split_sreg_range(0X800C576,"T",0X1,3);
	split_sreg_range(0X800C598,"T",0X1,3);
	split_sreg_range(0X800C5A2,"T",0X1,3);
	split_sreg_range(0X800C5C4,"T",0X1,3);
	split_sreg_range(0X800C5E4,"T",0X1,3);
	split_sreg_range(0X800C604,"T",0X1,3);
	split_sreg_range(0X800C622,"T",0X1,3);
	split_sreg_range(0X800C634,"T",0X1,3);
	split_sreg_range(0X800C69C,"T",0X1,3);
	split_sreg_range(0X800C6AC,"T",0X1,3);
	split_sreg_range(0X800C6BE,"T",0X1,3);
	split_sreg_range(0X800C6CA,"T",0X1,3);
	split_sreg_range(0X800C6CE,"T",0X1,3);
	split_sreg_range(0X800C6D6,"T",0X1,3);
	split_sreg_range(0X800C6DE,"T",0X1,3);
	split_sreg_range(0X800C6E4,"T",0X1,3);
	split_sreg_range(0X800C714,"T",0X1,3);
	split_sreg_range(0X800C716,"T",0X1,3);
	split_sreg_range(0X800C726,"T",0X1,3);
	split_sreg_range(0X800C734,"T",0X1,3);
	split_sreg_range(0X800C738,"T",0X1,3);
	split_sreg_range(0X800C73C,"T",0X1,3);
	split_sreg_range(0X800C754,"T",0X1,3);
	split_sreg_range(0X800C75C,"T",0X1,3);
	split_sreg_range(0X800C760,"T",0X1,3);
	split_sreg_range(0X800C770,"T",0X1,3);
	split_sreg_range(0X800C782,"T",0X1,3);
	split_sreg_range(0X800C78C,"T",0X1,3);
	split_sreg_range(0X800C792,"T",0X1,3);
	split_sreg_range(0X800C7AC,"T",0X1,3);
	split_sreg_range(0X800C7AE,"T",0X1,3);
	split_sreg_range(0X800C7B0,"T",0X1,3);
	split_sreg_range(0X800C7BA,"T",0X1,3);
	split_sreg_range(0X800C7D2,"T",0X1,3);
	split_sreg_range(0X800C7E8,"T",0X1,3);
	split_sreg_range(0X800C7EA,"T",0X1,3);
	split_sreg_range(0X800C7EE,"T",0X1,3);
	split_sreg_range(0X800C7FC,"T",0X1,3);
	split_sreg_range(0X800C81A,"T",0X1,3);
	split_sreg_range(0X800C83A,"T",0X1,3);
	split_sreg_range(0X800C842,"T",0X1,3);
	split_sreg_range(0X800C84A,"T",0X1,3);
	split_sreg_range(0X800C84C,"T",0X1,3);
	split_sreg_range(0X800C854,"T",0X1,3);
	split_sreg_range(0X800C868,"T",0X1,3);
	split_sreg_range(0X800C8CC,"T",0X1,3);
	split_sreg_range(0X800C8DE,"T",0X1,3);
	split_sreg_range(0X800C8EC,"T",0X1,3);
	split_sreg_range(0X800C904,"T",0X1,3);
	split_sreg_range(0X800C918,"T",0X1,3);
	split_sreg_range(0X800C984,"T",0X1,3);
	split_sreg_range(0X800C99C,"T",0X1,3);
	split_sreg_range(0X800C9B0,"T",0X1,3);
	split_sreg_range(0X800C9E4,"T",0X1,3);
	split_sreg_range(0X800C9E6,"T",0X1,3);
	split_sreg_range(0X800C9E8,"T",0X1,3);
	split_sreg_range(0X800C9EA,"T",0X1,3);
	split_sreg_range(0X800C9F8,"T",0X1,3);
	split_sreg_range(0X800CA08,"T",0X1,3);
	split_sreg_range(0X800CA10,"T",0X1,3);
	split_sreg_range(0X800CA2C,"T",0X1,3);
	split_sreg_range(0X800CA5C,"T",0X1,3);
	split_sreg_range(0X800CA62,"T",0X1,3);
	split_sreg_range(0X800CA7A,"T",0X1,3);
	split_sreg_range(0X800CA90,"T",0X1,3);
	split_sreg_range(0X800CA92,"T",0X1,3);
	split_sreg_range(0X800CAC8,"T",0X1,3);
	split_sreg_range(0X800CAE0,"T",0X1,3);
	split_sreg_range(0X800CAF0,"T",0X1,3);
	split_sreg_range(0X800CAFE,"T",0X1,3);
	split_sreg_range(0X800CB16,"T",0X1,3);
	split_sreg_range(0X800CB26,"T",0X1,3);
	split_sreg_range(0X800CB36,"T",0X1,3);
	split_sreg_range(0X800CB48,"T",0X1,3);
	split_sreg_range(0X800CB4A,"T",0X1,3);
	split_sreg_range(0X800CB7C,"T",0X1,3);
	split_sreg_range(0X800CB92,"T",0X1,3);
	split_sreg_range(0X800CBA8,"T",0X1,3);
	split_sreg_range(0X800CBAA,"T",0X1,3);
	split_sreg_range(0X800CBBE,"T",0X1,3);
	split_sreg_range(0X800CBDE,"T",0X1,3);
	split_sreg_range(0X800CBE6,"T",0X1,3);
	split_sreg_range(0X800CBF6,"T",0X1,3);
	split_sreg_range(0X800CBF8,"T",0X1,3);
	split_sreg_range(0X800CC02,"T",0X1,3);
	split_sreg_range(0X800CC16,"T",0X1,3);
	split_sreg_range(0X800CC40,"T",0X1,3);
	split_sreg_range(0X800CC58,"T",0X1,3);
	split_sreg_range(0X800CC5A,"T",0X1,3);
	split_sreg_range(0X800CC6C,"T",0X1,3);
	split_sreg_range(0X800CC70,"T",0X1,3);
	split_sreg_range(0X800CC72,"T",0X1,3);
	split_sreg_range(0X800CC88,"T",0X1,3);
	split_sreg_range(0X800CC8C,"T",0X1,3);
	split_sreg_range(0X800CCA6,"T",0X1,3);
	split_sreg_range(0X800CCB2,"T",0X1,3);
	split_sreg_range(0X800CCB4,"T",0X1,3);
	split_sreg_range(0X800CCD8,"T",0X1,3);
	split_sreg_range(0X800CCEA,"T",0X1,3);
	split_sreg_range(0X800CCF0,"T",0X1,3);
	split_sreg_range(0X800CD04,"T",0X1,3);
	split_sreg_range(0X800CD16,"T",0X1,3);
	split_sreg_range(0X800CD26,"T",0X1,3);
	split_sreg_range(0X800CD30,"T",0X1,3);
	split_sreg_range(0X800CD4A,"T",0X1,3);
	split_sreg_range(0X800CD50,"T",0X1,3);
	split_sreg_range(0X800CD5A,"T",0X1,3);
	split_sreg_range(0X800CD74,"T",0X1,3);
	split_sreg_range(0X800CD8C,"T",0X1,3);
	split_sreg_range(0X800CDA4,"T",0X1,3);
	split_sreg_range(0X800CDA6,"T",0X1,3);
	split_sreg_range(0X800CDAA,"T",0X1,3);
	split_sreg_range(0X800CDBC,"T",0X1,3);
	split_sreg_range(0X800CDE6,"T",0X1,3);
	split_sreg_range(0X800CE3A,"T",0X1,3);
	split_sreg_range(0X800CE50,"T",0X1,3);
	split_sreg_range(0X800CE6A,"T",0X1,3);
	split_sreg_range(0X800CE7A,"T",0X1,3);
	split_sreg_range(0X800CE80,"T",0X1,3);
	split_sreg_range(0X800CE8E,"T",0X1,3);
	split_sreg_range(0X800CEB0,"T",0X1,3);
	split_sreg_range(0X800CED6,"T",0X1,3);
	split_sreg_range(0X800CF10,"T",0X1,3);
	split_sreg_range(0X800CF18,"T",0X1,3);
	split_sreg_range(0X800CF1A,"T",0X1,3);
	split_sreg_range(0X800CF54,"T",0X1,3);
	split_sreg_range(0X800CF5C,"T",0X1,3);
	split_sreg_range(0X800CF64,"T",0X1,3);
	split_sreg_range(0X800CF96,"T",0X1,3);
	split_sreg_range(0X800CFC8,"T",0X1,3);
	split_sreg_range(0X800CFEA,"T",0X1,3);
	split_sreg_range(0X800D016,"T",0X1,3);
	split_sreg_range(0X800D040,"T",0X1,3);
	split_sreg_range(0X800D050,"T",0X1,3);
	split_sreg_range(0X800D058,"T",0X1,3);
	split_sreg_range(0X800D060,"T",0X1,3);
	split_sreg_range(0X800D066,"T",0X1,3);
	split_sreg_range(0X800D076,"T",0X1,3);
	split_sreg_range(0X800D07E,"T",0X1,3);
	split_sreg_range(0X800D086,"T",0X1,3);
	split_sreg_range(0X800D08E,"T",0X1,3);
	split_sreg_range(0X800D096,"T",0X1,3);
	split_sreg_range(0X800D098,"T",0X1,3);
	split_sreg_range(0X800D09C,"T",0X1,3);
	split_sreg_range(0X800D0A6,"T",0X1,3);
	split_sreg_range(0X800D0B8,"T",0X1,3);
	split_sreg_range(0X800D0C2,"T",0X1,3);
	split_sreg_range(0X800D0CC,"T",0X1,3);
	split_sreg_range(0X800D0D4,"T",0X1,3);
	split_sreg_range(0X800D0DE,"T",0X1,3);
	split_sreg_range(0X800D0EA,"T",0X1,3);
	split_sreg_range(0X800D0F4,"T",0X1,3);
	split_sreg_range(0X800D104,"T",0X1,3);
	split_sreg_range(0X800D10C,"T",0X1,3);
	split_sreg_range(0X800D114,"T",0X1,3);
	split_sreg_range(0X800D11C,"T",0X1,3);
	split_sreg_range(0X800D126,"T",0X1,3);
	split_sreg_range(0X800D12A,"T",0X1,3);
	split_sreg_range(0X800D140,"T",0X1,3);
	split_sreg_range(0X800D15E,"T",0X1,3);
	split_sreg_range(0X800D16E,"T",0X1,3);
	split_sreg_range(0X800D17E,"T",0X1,3);
	split_sreg_range(0X800D18A,"T",0X1,3);
	split_sreg_range(0X800D1A0,"T",0X1,3);
	split_sreg_range(0X800D1C4,"T",0X1,3);
	split_sreg_range(0X800D1D4,"T",0X1,3);
	split_sreg_range(0X800D1DC,"T",0X1,3);
	split_sreg_range(0X800D1E4,"T",0X1,3);
	split_sreg_range(0X800D1EA,"T",0X1,3);
	split_sreg_range(0X800D1FA,"T",0X1,3);
	split_sreg_range(0X800D202,"T",0X1,3);
	split_sreg_range(0X800D20A,"T",0X1,3);
	split_sreg_range(0X800D212,"T",0X1,3);
	split_sreg_range(0X800D21A,"T",0X1,3);
	split_sreg_range(0X800D21C,"T",0X1,3);
	split_sreg_range(0X800D220,"T",0X1,3);
	split_sreg_range(0X800D22A,"T",0X1,3);
	split_sreg_range(0X800D23C,"T",0X1,3);
	split_sreg_range(0X800D246,"T",0X1,3);
	split_sreg_range(0X800D250,"T",0X1,3);
	split_sreg_range(0X800D258,"T",0X1,3);
	split_sreg_range(0X800D262,"T",0X1,3);
	split_sreg_range(0X800D26C,"T",0X1,3);
	split_sreg_range(0X800D276,"T",0X1,3);
	split_sreg_range(0X800D294,"T",0X1,3);
	split_sreg_range(0X800D2A2,"T",0X1,3);
	split_sreg_range(0X800D2AA,"T",0X1,3);
	split_sreg_range(0X800D2B0,"T",0X1,3);
	split_sreg_range(0X800D2C2,"T",0X1,3);
	split_sreg_range(0X800D2CC,"T",0X1,3);
	split_sreg_range(0X800D2DE,"T",0X1,3);
	split_sreg_range(0X800D2E0,"T",0X1,3);
	split_sreg_range(0X800D302,"T",0X1,3);
	split_sreg_range(0X800D306,"T",0X1,3);
	split_sreg_range(0X800D30A,"T",0X1,3);
	split_sreg_range(0X800D314,"T",0X1,3);
	split_sreg_range(0X800D324,"T",0X1,3);
	split_sreg_range(0X800D32C,"T",0X1,3);
	split_sreg_range(0X800D334,"T",0X1,3);
	split_sreg_range(0X800D33C,"T",0X1,3);
	split_sreg_range(0X800D346,"T",0X1,3);
	split_sreg_range(0X800D34A,"T",0X1,3);
	split_sreg_range(0X800D360,"T",0X1,3);
	split_sreg_range(0X800D37C,"T",0X1,3);
	split_sreg_range(0X800D394,"T",0X1,3);
	split_sreg_range(0X800D398,"T",0X1,3);
	split_sreg_range(0X800D3A2,"T",0X1,3);
	split_sreg_range(0X800D3B8,"T",0X1,3);
	split_sreg_range(0X800D3CE,"T",0X1,3);
	split_sreg_range(0X800D3D6,"T",0X1,3);
	split_sreg_range(0X800D3E0,"T",0X1,3);
	split_sreg_range(0X800D3F2,"T",0X1,3);
	split_sreg_range(0X800D3F4,"T",0X1,3);
	split_sreg_range(0X800D410,"T",0X1,3);
	split_sreg_range(0X800D440,"T",0X1,3);
	split_sreg_range(0X800D46A,"T",0X1,3);
	split_sreg_range(0X800D474,"T",0X1,3);
	split_sreg_range(0X800D4A6,"T",0X1,3);
	split_sreg_range(0X800D4CC,"T",0X1,3);
	split_sreg_range(0X800D4D0,"T",0X1,3);
	split_sreg_range(0X800D4DE,"T",0X1,3);
	split_sreg_range(0X800D4E2,"T",0X1,3);
	split_sreg_range(0X800D4FA,"T",0X1,3);
	split_sreg_range(0X800D524,"T",0X1,3);
	split_sreg_range(0X800D532,"T",0X1,3);
	split_sreg_range(0X800D538,"T",0X1,3);
	split_sreg_range(0X800D544,"T",0X1,3);
	split_sreg_range(0X800D56A,"T",0X1,3);
	split_sreg_range(0X800D574,"T",0X1,3);
	split_sreg_range(0X800D57E,"T",0X1,3);
	split_sreg_range(0X800D588,"T",0X1,3);
	split_sreg_range(0X800D592,"T",0X1,3);
	split_sreg_range(0X800D59C,"T",0X1,3);
	split_sreg_range(0X800D5A2,"T",0X1,3);
	split_sreg_range(0X800D5CA,"T",0X1,3);
	split_sreg_range(0X800D5D8,"T",0X1,3);
	split_sreg_range(0X800D5DA,"T",0X1,3);
	split_sreg_range(0X800D5EE,"T",0X1,3);
	split_sreg_range(0X800D5F2,"T",0X1,3);
	split_sreg_range(0X800D5FE,"T",0X1,3);
	split_sreg_range(0X800D612,"T",0X1,3);
	split_sreg_range(0X800D616,"T",0X1,3);
	split_sreg_range(0X800D620,"T",0X1,3);
	split_sreg_range(0X800D62E,"T",0X1,3);
	split_sreg_range(0X800D630,"T",0X1,3);
	split_sreg_range(0X800D64E,"T",0X1,3);
	split_sreg_range(0X800D650,"T",0X1,3);
	split_sreg_range(0X800D6BC,"T",0X1,3);
	split_sreg_range(0X800D6C0,"T",0X1,3);
	split_sreg_range(0X800D6C8,"T",0X1,3);
	split_sreg_range(0X800D6D0,"T",0X1,3);
	split_sreg_range(0X800D6F8,"T",0X1,3);
	split_sreg_range(0X800D728,"T",0X1,3);
	split_sreg_range(0X800D7B0,"T",0X1,3);
	split_sreg_range(0X800D7CA,"T",0X1,3);
	split_sreg_range(0X800D7DA,"T",0X1,3);
	split_sreg_range(0X800D7DE,"T",0X1,3);
	split_sreg_range(0X800D7F8,"T",0X1,3);
	split_sreg_range(0X800D808,"T",0X1,3);
	split_sreg_range(0X800D816,"T",0X1,3);
	split_sreg_range(0X800D81C,"T",0X1,3);
	split_sreg_range(0X800D830,"T",0X1,3);
	split_sreg_range(0X800D85C,"T",0X1,3);
	split_sreg_range(0X800D86C,"T",0X1,3);
	split_sreg_range(0X800D8D8,"T",0X1,3);
	split_sreg_range(0X800D8DC,"T",0X1,3);
	split_sreg_range(0X800D8E0,"T",0X1,3);
	split_sreg_range(0X800D8E4,"T",0X1,3);
	split_sreg_range(0X800D8E8,"T",0X1,3);
	split_sreg_range(0X800D8EA,"T",0X1,3);
	split_sreg_range(0X800D8EC,"T",0X1,3);
	split_sreg_range(0X800D8EE,"T",0X1,3);
	split_sreg_range(0X800D8F0,"T",0X1,3);
	split_sreg_range(0X800D906,"T",0X1,3);
	split_sreg_range(0X800D922,"T",0X1,3);
	split_sreg_range(0X800D932,"T",0X1,3);
	split_sreg_range(0X800D936,"T",0X1,3);
	split_sreg_range(0X800D994,"T",0X1,3);
	split_sreg_range(0X800D9B6,"T",0X1,3);
	split_sreg_range(0X800D9C2,"T",0X1,3);
	split_sreg_range(0X800D9C4,"T",0X1,3);
	split_sreg_range(0X800D9CC,"T",0X1,3);
	split_sreg_range(0X800DA12,"T",0X1,3);
	split_sreg_range(0X800DA2E,"T",0X1,3);
	split_sreg_range(0X800DA36,"T",0X1,3);
	split_sreg_range(0X800DA3E,"T",0X1,3);
	split_sreg_range(0X800DA60,"T",0X1,3);
	split_sreg_range(0X800DA74,"T",0X1,3);
	split_sreg_range(0X800DA7C,"T",0X1,3);
	split_sreg_range(0X800DA7E,"T",0X1,3);
	split_sreg_range(0X800DA86,"T",0X1,3);
	split_sreg_range(0X800DAC8,"T",0X1,3);
	split_sreg_range(0X800DAD2,"T",0X1,3);
	split_sreg_range(0X800DAF4,"T",0X1,3);
	split_sreg_range(0X800DAF8,"T",0X1,3);
	split_sreg_range(0X800DAFC,"T",0X1,3);
	split_sreg_range(0X800DAFE,"T",0X1,3);
	split_sreg_range(0X800DB0C,"T",0X1,3);
	split_sreg_range(0X800DB22,"T",0X1,3);
	split_sreg_range(0X800DB2E,"T",0X1,3);
	split_sreg_range(0X800DB4C,"T",0X1,3);
	split_sreg_range(0X800DB4E,"T",0X1,3);
	split_sreg_range(0X800DB58,"T",0X1,3);
	split_sreg_range(0X800DB5C,"T",0X1,3);
	split_sreg_range(0X800DB66,"T",0X1,3);
	split_sreg_range(0X800DB6E,"T",0X1,3);
	split_sreg_range(0X800DB8C,"T",0X1,3);
	split_sreg_range(0X800DB90,"T",0X1,3);
	split_sreg_range(0X800DB94,"T",0X1,3);
	split_sreg_range(0X800DB96,"T",0X1,3);
	split_sreg_range(0X800DBC4,"T",0X1,3);
	split_sreg_range(0X800DBC8,"T",0X1,3);
	split_sreg_range(0X800DBCC,"T",0X1,3);
	split_sreg_range(0X800DBCE,"T",0X1,3);
	split_sreg_range(0X800DBDC,"T",0X1,3);
	split_sreg_range(0X800DBFE,"T",0X1,3);
	split_sreg_range(0X800DC02,"T",0X1,3);
	split_sreg_range(0X800DC06,"T",0X1,3);
	split_sreg_range(0X800DC08,"T",0X1,3);
	split_sreg_range(0X800DC16,"T",0X1,3);
	split_sreg_range(0X800DC38,"T",0X1,3);
	split_sreg_range(0X800DC3C,"T",0X1,3);
	split_sreg_range(0X800DC40,"T",0X1,3);
	split_sreg_range(0X800DC42,"T",0X1,3);
	split_sreg_range(0X800DC72,"T",0X1,3);
	split_sreg_range(0X800DC76,"T",0X1,3);
	split_sreg_range(0X800DC7A,"T",0X1,3);
	split_sreg_range(0X800DC7C,"T",0X1,3);
	split_sreg_range(0X800DC8A,"T",0X1,3);
	split_sreg_range(0X800DC96,"T",0X1,3);
	split_sreg_range(0X800DCAA,"T",0X1,3);
	split_sreg_range(0X800DCAE,"T",0X1,3);
	split_sreg_range(0X800DCB4,"T",0X1,3);
	split_sreg_range(0X800DCBA,"T",0X1,3);
	split_sreg_range(0X800DCD4,"T",0X1,3);
	split_sreg_range(0X800DCD6,"T",0X1,3);
	split_sreg_range(0X800DCF8,"T",0X1,3);
	split_sreg_range(0X800DD06,"T",0X1,3);
	split_sreg_range(0X800DD14,"T",0X1,3);
	split_sreg_range(0X800DD82,"T",0X1,3);
	split_sreg_range(0X800DD90,"T",0X1,3);
	split_sreg_range(0X800DD9E,"T",0X1,3);
	split_sreg_range(0X800DDAC,"T",0X1,3);
	split_sreg_range(0X800DDBA,"T",0X1,3);
	split_sreg_range(0X800DDCC,"T",0X1,3);
	split_sreg_range(0X800DDDA,"T",0X1,3);
	split_sreg_range(0X800DDE8,"T",0X1,3);
	split_sreg_range(0X800DDF6,"T",0X1,3);
	split_sreg_range(0X800DE08,"T",0X1,3);
	split_sreg_range(0X800DE16,"T",0X1,3);
	split_sreg_range(0X800DE24,"T",0X1,3);
	split_sreg_range(0X800DE32,"T",0X1,3);
	split_sreg_range(0X800DE40,"T",0X1,3);
	split_sreg_range(0X800DE56,"T",0X1,3);
	split_sreg_range(0X800DE72,"T",0X1,3);
	split_sreg_range(0X800DEF4,"T",0X1,3);
	split_sreg_range(0X800DF04,"T",0X1,3);
	split_sreg_range(0X800DF16,"T",0X1,3);
	split_sreg_range(0X800DF6E,"T",0X1,3);
	split_sreg_range(0X800DF7E,"T",0X1,3);
	split_sreg_range(0X800DF86,"T",0X1,3);
	split_sreg_range(0X800DF9A,"T",0X1,3);
	split_sreg_range(0X800DFA4,"T",0X1,3);
	split_sreg_range(0X800DFB6,"T",0X1,3);
	split_sreg_range(0X800DFBC,"T",0X1,3);
	split_sreg_range(0X800DFC8,"T",0X1,3);
	split_sreg_range(0X800DFD0,"T",0X1,3);
	split_sreg_range(0X800DFF0,"T",0X1,3);
	split_sreg_range(0X800DFF4,"T",0X1,3);
	split_sreg_range(0X800DFF8,"T",0X1,3);
	split_sreg_range(0X800E018,"T",0X1,3);
	split_sreg_range(0X800E020,"T",0X1,3);
	split_sreg_range(0X800E02C,"T",0X1,3);
	split_sreg_range(0X800E03A,"T",0X1,3);
	split_sreg_range(0X800E048,"T",0X1,3);
	split_sreg_range(0X800E056,"T",0X1,3);
	split_sreg_range(0X800E08A,"T",0X1,3);
	split_sreg_range(0X800E140,"T",0X1,3);
	split_sreg_range(0X800E164,"T",0X1,3);
	split_sreg_range(0X800E16C,"T",0X1,3);
	split_sreg_range(0X800E178,"T",0X1,3);
	split_sreg_range(0X800E17C,"T",0X1,3);
	split_sreg_range(0X800E192,"T",0X1,3);
	split_sreg_range(0X800E19E,"T",0X1,3);
	split_sreg_range(0X800E1B4,"T",0X1,3);
	split_sreg_range(0X800E1C0,"T",0X1,3);
	split_sreg_range(0X800E1D6,"T",0X1,3);
	split_sreg_range(0X800E1E2,"T",0X1,3);
	split_sreg_range(0X800E1F8,"T",0X1,3);
	split_sreg_range(0X800E204,"T",0X1,3);
	split_sreg_range(0X800E21A,"T",0X1,3);
	split_sreg_range(0X800E222,"T",0X1,3);
	split_sreg_range(0X800E246,"T",0X1,3);
	split_sreg_range(0X800E2DC,"T",0X1,3);
	split_sreg_range(0X800E30C,"T",0X1,3);
	split_sreg_range(0X800E318,"T",0X1,3);
	split_sreg_range(0X800E330,"T",0X1,3);
	split_sreg_range(0X800E332,"T",0X1,3);
	split_sreg_range(0X800E348,"T",0X1,3);
	split_sreg_range(0X800E34A,"T",0X1,3);
	split_sreg_range(0X800E34E,"T",0X1,3);
	split_sreg_range(0X800E35C,"T",0X1,3);
	split_sreg_range(0X800E380,"T",0X1,3);
	split_sreg_range(0X800E38A,"T",0X1,3);
	split_sreg_range(0X800E3F8,"T",0X1,3);
	split_sreg_range(0X800E408,"T",0X1,3);
	split_sreg_range(0X800E40A,"T",0X1,3);
	split_sreg_range(0X800E418,"T",0X1,3);
	split_sreg_range(0X800E4A6,"T",0X1,3);
	split_sreg_range(0X800E4CE,"T",0X1,3);
	split_sreg_range(0X800E53C,"T",0X1,3);
	split_sreg_range(0X800E5AE,"T",0X1,3);
	split_sreg_range(0X800E5D0,"T",0X1,3);
	split_sreg_range(0X800E608,"T",0X1,3);
	split_sreg_range(0X800E658,"T",0X1,3);
	split_sreg_range(0X800E6B0,"T",0X1,3);
	split_sreg_range(0X800E6BC,"T",0X1,3);
	split_sreg_range(0X800E6F8,"T",0X1,3);
	split_sreg_range(0X800E720,"T",0X1,3);
	split_sreg_range(0X800E730,"T",0X1,3);
	split_sreg_range(0X800E732,"T",0X1,3);
	split_sreg_range(0X800E78C,"T",0X1,3);
	split_sreg_range(0X800E7CC,"T",0X1,3);
	split_sreg_range(0X800E7EC,"T",0X1,3);
	split_sreg_range(0X800E800,"T",0X1,3);
	split_sreg_range(0X800E842,"T",0X1,3);
	split_sreg_range(0X800E856,"T",0X1,3);
	split_sreg_range(0X800E860,"T",0X1,3);
	split_sreg_range(0X800E892,"T",0X1,3);
	split_sreg_range(0X800E8A4,"T",0X1,3);
	split_sreg_range(0X800E8A6,"T",0X1,3);
	split_sreg_range(0X800E8C8,"T",0X1,3);
	split_sreg_range(0X800E8DC,"T",0X1,3);
	split_sreg_range(0X800E8EE,"T",0X1,3);
	split_sreg_range(0X800E8FE,"T",0X1,3);
	split_sreg_range(0X800E902,"T",0X1,3);
	split_sreg_range(0X800E90A,"T",0X1,3);
	split_sreg_range(0X800E966,"T",0X1,3);
	split_sreg_range(0X800E99E,"T",0X1,3);
	split_sreg_range(0X800EA1E,"T",0X1,3);
	split_sreg_range(0X800EA6C,"T",0X1,3);
	split_sreg_range(0X800EA70,"T",0X1,3);
	split_sreg_range(0X800EAB4,"T",0X1,3);
	split_sreg_range(0X800EAB8,"T",0X1,3);
	split_sreg_range(0X800EB50,"T",0X1,3);
	split_sreg_range(0X800EB62,"T",0X1,3);
	split_sreg_range(0X800EB7A,"T",0X1,3);
	split_sreg_range(0X800EBA4,"T",0X1,3);
	split_sreg_range(0X800EBB4,"T",0X1,3);
	split_sreg_range(0X800EBC4,"T",0X1,3);
	split_sreg_range(0X800EBD4,"T",0X1,3);
	split_sreg_range(0X800EBEC,"T",0X1,3);
	split_sreg_range(0X800EBF2,"T",0X1,3);
	split_sreg_range(0X800EC08,"T",0X1,3);
	split_sreg_range(0X800EC18,"T",0X1,3);
	split_sreg_range(0X800EC1A,"T",0X1,3);
	split_sreg_range(0X800EC5E,"T",0X1,3);
	split_sreg_range(0X800EC70,"T",0X1,3);
	split_sreg_range(0X800EC78,"T",0X1,3);
	split_sreg_range(0X800EC9A,"T",0X1,3);
	split_sreg_range(0X800ECA0,"T",0X1,3);
	split_sreg_range(0X800ECC0,"T",0X1,3);
	split_sreg_range(0X800ECC6,"T",0X1,3);
	split_sreg_range(0X800ECEC,"T",0X1,3);
	split_sreg_range(0X800ECF4,"T",0X1,3);
	split_sreg_range(0X800ED14,"T",0X1,3);
	split_sreg_range(0X800ED2C,"T",0X1,3);
	split_sreg_range(0X800ED42,"T",0X1,3);
	split_sreg_range(0X800ED54,"T",0X1,3);
	split_sreg_range(0X800ED78,"T",0X1,3);
	split_sreg_range(0X800ED80,"T",0X1,3);
	split_sreg_range(0X800ED88,"T",0X1,3);
	split_sreg_range(0X800EDC6,"T",0X1,3);
	split_sreg_range(0X800EDD2,"T",0X1,3);
	split_sreg_range(0X800EDD4,"T",0X1,3);
	split_sreg_range(0X800EDDE,"T",0X1,3);
	split_sreg_range(0X800EDE8,"T",0X1,3);
	split_sreg_range(0X800EDEA,"T",0X1,3);
	split_sreg_range(0X800EE04,"T",0X1,3);
	split_sreg_range(0X800EE0A,"T",0X1,3);
	split_sreg_range(0X800EE22,"T",0X1,3);
	split_sreg_range(0X800EE36,"T",0X1,3);
	split_sreg_range(0X800EE5A,"T",0X1,3);
	split_sreg_range(0X800EE5C,"T",0X1,3);
	split_sreg_range(0X800EE88,"T",0X1,3);
	split_sreg_range(0X800EE8A,"T",0X1,3);
	split_sreg_range(0X800EEB6,"T",0X1,3);
	split_sreg_range(0X800EEB8,"T",0X1,3);
	split_sreg_range(0X800EEE4,"T",0X1,3);
	split_sreg_range(0X800EEE6,"T",0X1,3);
	split_sreg_range(0X800EEF6,"T",0X1,3);
	split_sreg_range(0X800EEFA,"T",0X1,3);
	split_sreg_range(0X800EF00,"T",0X1,3);
	split_sreg_range(0X800EF0E,"T",0X1,3);
	split_sreg_range(0X800EF10,"T",0X1,3);
	split_sreg_range(0X800EF22,"T",0X1,3);
	split_sreg_range(0X800EF24,"T",0X1,3);
	split_sreg_range(0X800EF3C,"T",0X1,3);
	split_sreg_range(0X800EF3E,"T",0X1,3);
	split_sreg_range(0X800F004,"T",0X1,3);
	split_sreg_range(0X800F01A,"T",0X1,3);
	split_sreg_range(0X800F0CE,"T",0X1,3);
	split_sreg_range(0X800F0F4,"T",0X1,3);
	split_sreg_range(0X800F11E,"T",0X1,3);
	split_sreg_range(0X800F132,"T",0X1,3);
	split_sreg_range(0X800F134,"T",0X1,3);
	split_sreg_range(0X800F1BE,"T",0X1,3);
	split_sreg_range(0X800F1F4,"T",0X1,3);
	split_sreg_range(0X800F202,"T",0X1,3);
	split_sreg_range(0X800F220,"T",0X1,3);
	split_sreg_range(0X800F22A,"T",0X1,3);
	split_sreg_range(0X800F234,"T",0X1,3);
	split_sreg_range(0X800F240,"T",0X1,3);
	split_sreg_range(0X800F242,"T",0X1,3);
	split_sreg_range(0X800F246,"T",0X1,3);
	split_sreg_range(0X800F252,"T",0X1,3);
	split_sreg_range(0X800F254,"T",0X1,3);
	split_sreg_range(0X800F258,"T",0X1,3);
	split_sreg_range(0X800F264,"T",0X1,3);
	split_sreg_range(0X800F266,"T",0X1,3);
	split_sreg_range(0X800F26A,"T",0X1,3);
	split_sreg_range(0X800F272,"T",0X1,3);
	split_sreg_range(0X800F2AC,"T",0X1,3);
	split_sreg_range(0X800F2B0,"T",0X1,3);
	split_sreg_range(0X800F2BC,"T",0X1,3);
	split_sreg_range(0X800F2CA,"T",0X1,3);
	split_sreg_range(0X800F2D8,"T",0X1,3);
	split_sreg_range(0X800F2E6,"T",0X1,3);
	split_sreg_range(0X800F302,"T",0X1,3);
	split_sreg_range(0X800F31A,"T",0X1,3);
	split_sreg_range(0X800F326,"T",0X1,3);
	split_sreg_range(0X800F368,"T",0X1,3);
	split_sreg_range(0X800F37E,"T",0X1,3);
	split_sreg_range(0X800F394,"T",0X1,3);
	split_sreg_range(0X800F3A0,"T",0X1,3);
	split_sreg_range(0X800F3B6,"T",0X1,3);
	split_sreg_range(0X800F3C2,"T",0X1,3);
	split_sreg_range(0X800F3D8,"T",0X1,3);
	split_sreg_range(0X800F3E4,"T",0X1,3);
	split_sreg_range(0X800F44C,"T",0X1,3);
	split_sreg_range(0X800F466,"T",0X1,3);
	split_sreg_range(0X800F48A,"T",0X1,3);
	split_sreg_range(0X800F496,"T",0X1,3);
	split_sreg_range(0X800F498,"T",0X1,3);
	split_sreg_range(0X800F4AC,"T",0X1,3);
	split_sreg_range(0X800F4B2,"T",0X1,3);
	split_sreg_range(0X800F4E2,"T",0X1,3);
	split_sreg_range(0X800F4EE,"T",0X1,3);
	split_sreg_range(0X800F504,"T",0X1,3);
	split_sreg_range(0X800F582,"T",0X1,3);
	split_sreg_range(0X800F584,"T",0X1,3);
	split_sreg_range(0X800F5A6,"T",0X1,3);
	split_sreg_range(0X800F5B2,"T",0X1,3);
	split_sreg_range(0X800F5B6,"T",0X1,3);
	split_sreg_range(0X800F5F4,"T",0X1,3);
	split_sreg_range(0X800F5FE,"T",0X1,3);
	split_sreg_range(0X800F612,"T",0X1,3);
	split_sreg_range(0X800F61E,"T",0X1,3);
	split_sreg_range(0X800F620,"T",0X1,3);
	split_sreg_range(0X800F638,"T",0X1,3);
	split_sreg_range(0X800F650,"T",0X1,3);
	split_sreg_range(0X800F668,"T",0X1,3);
	split_sreg_range(0X800F670,"T",0X1,3);
	split_sreg_range(0X800F678,"T",0X1,3);
	split_sreg_range(0X800F690,"T",0X1,3);
	split_sreg_range(0X800F69E,"T",0X1,3);
	split_sreg_range(0X800F6A0,"T",0X1,3);
	split_sreg_range(0X800F6AE,"T",0X1,3);
	split_sreg_range(0X800F6F0,"T",0X1,3);
	split_sreg_range(0X800F87A,"T",0X1,3);
	split_sreg_range(0X800FA8C,"T",0X1,3);
	split_sreg_range(0X800FB08,"T",0X1,3);
	split_sreg_range(0X800FB9A,"T",0X1,3);
	split_sreg_range(0X800FBA8,"T",0X1,3);
	split_sreg_range(0X800FC4A,"T",0X1,3);
	split_sreg_range(0X800FC78,"T",0X1,3);
	split_sreg_range(0X800FC82,"T",0X1,3);
	split_sreg_range(0X800FC8C,"T",0X1,3);
	split_sreg_range(0X800FC96,"T",0X1,3);
	split_sreg_range(0X800FCA0,"T",0X1,3);
	split_sreg_range(0X800FCA2,"T",0X1,3);
	split_sreg_range(0X800FCB8,"T",0X1,3);
	split_sreg_range(0X800FCC2,"T",0X1,3);
	split_sreg_range(0X800FD68,"T",0X1,3);
	split_sreg_range(0X800FDD0,"T",0X1,3);
	split_sreg_range(0X800FE06,"T",0X1,3);
	split_sreg_range(0X800FE10,"T",0X1,3);
	split_sreg_range(0X800FE26,"T",0X1,3);
	split_sreg_range(0X800FE3C,"T",0X1,3);
	split_sreg_range(0X800FE52,"T",0X1,3);
	split_sreg_range(0X800FE5A,"T",0X1,3);
	split_sreg_range(0X800FE88,"T",0X1,3);
	split_sreg_range(0X800FECE,"T",0X1,3);
	split_sreg_range(0X800FEE0,"T",0X1,3);
	split_sreg_range(0X800FEF0,"T",0X1,3);
	split_sreg_range(0X800FF10,"T",0X1,3);
	split_sreg_range(0X800FF16,"T",0X1,3);
	split_sreg_range(0X800FF38,"T",0X1,3);
	split_sreg_range(0X800FF3E,"T",0X1,3);
	split_sreg_range(0X800FF40,"T",0X1,3);
	split_sreg_range(0X800FF7E,"T",0X1,3);
	split_sreg_range(0X800FF8C,"T",0X1,3);
	split_sreg_range(0X800FFFA,"T",0X1,3);
	split_sreg_range(0X8010008,"T",0X1,3);
	split_sreg_range(0X8010078,"T",0X1,3);
	split_sreg_range(0X8010088,"T",0X1,3);
	split_sreg_range(0X801009E,"T",0X1,3);
	split_sreg_range(0X80100A2,"T",0X1,3);
	split_sreg_range(0X80100AA,"T",0X1,3);
	split_sreg_range(0X80100B2,"T",0X1,3);
	split_sreg_range(0X80100E8,"T",0X1,3);
	split_sreg_range(0X80100FE,"T",0X1,3);
	split_sreg_range(0X8010102,"T",0X1,3);
	split_sreg_range(0X801010A,"T",0X1,3);
	split_sreg_range(0X8010112,"T",0X1,3);
	split_sreg_range(0X8010148,"T",0X1,3);
	split_sreg_range(0X801015E,"T",0X1,3);
	split_sreg_range(0X8010162,"T",0X1,3);
	split_sreg_range(0X801016A,"T",0X1,3);
	split_sreg_range(0X8010172,"T",0X1,3);
	split_sreg_range(0X80101A8,"T",0X1,3);
	split_sreg_range(0X80101EE,"T",0X1,3);
	split_sreg_range(0X8010204,"T",0X1,3);
	split_sreg_range(0X8010208,"T",0X1,3);
	split_sreg_range(0X8010210,"T",0X1,3);
	split_sreg_range(0X8010218,"T",0X1,3);
	split_sreg_range(0X801024E,"T",0X1,3);
	split_sreg_range(0X8010250,"T",0X1,3);
	split_sreg_range(0X801028A,"T",0X1,3);
	split_sreg_range(0X8010294,"T",0X1,3);
	split_sreg_range(0X80102D4,"T",0X1,3);
	split_sreg_range(0X80102E6,"T",0X1,3);
	split_sreg_range(0X80102F6,"T",0X1,3);
	split_sreg_range(0X8010316,"T",0X1,3);
	split_sreg_range(0X8010320,"T",0X1,3);
	split_sreg_range(0X801034C,"T",0X1,3);
	split_sreg_range(0X80103CC,"T",0X1,3);
	split_sreg_range(0X80103D0,"T",0X1,3);
	split_sreg_range(0X80103E0,"T",0X1,3);
	split_sreg_range(0X80103E4,"T",0X1,3);
	split_sreg_range(0X80103E8,"T",0X1,3);
	split_sreg_range(0X8010434,"T",0X1,3);
	split_sreg_range(0X8010436,"T",0X1,3);
	split_sreg_range(0X8010450,"T",0X1,3);
	split_sreg_range(0X8010462,"T",0X1,3);
	split_sreg_range(0X8010464,"T",0X1,3);
	split_sreg_range(0X8010488,"T",0X1,3);
	split_sreg_range(0X80104A0,"T",0X1,3);
	split_sreg_range(0X80104A6,"T",0X1,3);
	split_sreg_range(0X80104A8,"T",0X1,3);
	split_sreg_range(0X80104E8,"T",0X1,3);
	split_sreg_range(0X80104F0,"T",0X1,3);
	split_sreg_range(0X8010510,"T",0X1,3);
	split_sreg_range(0X8010528,"T",0X1,3);
	split_sreg_range(0X801052E,"T",0X1,3);
	split_sreg_range(0X8010530,"T",0X1,3);
	split_sreg_range(0X8010540,"T",0X1,3);
	split_sreg_range(0X8010542,"T",0X1,3);
	split_sreg_range(0X8010544,"T",0X1,3);
	split_sreg_range(0X8010548,"T",0X1,3);
	split_sreg_range(0X801054C,"T",0X1,3);
	split_sreg_range(0X801055E,"T",0X1,3);
	split_sreg_range(0X8010598,"T",0X1,3);
	split_sreg_range(0X80105CC,"T",0X1,3);
	split_sreg_range(0X80105D2,"T",0X1,3);
	split_sreg_range(0X80105FA,"T",0X1,3);
	split_sreg_range(0X801060E,"T",0X1,3);
	split_sreg_range(0X8010616,"T",0X1,3);
	split_sreg_range(0X801061C,"T",0X1,3);
	split_sreg_range(0X8010654,"T",0X1,3);
	split_sreg_range(0X80106C4,"T",0X1,3);
	split_sreg_range(0X80106C8,"T",0X1,3);
	split_sreg_range(0X80106D0,"T",0X1,3);
	split_sreg_range(0X80106E2,"T",0X1,3);
	split_sreg_range(0X80106E6,"T",0X1,3);
	split_sreg_range(0X80106EA,"T",0X1,3);
	split_sreg_range(0X8010714,"T",0X1,3);
	split_sreg_range(0X801071C,"T",0X1,3);
	split_sreg_range(0X801072E,"T",0X1,3);
	split_sreg_range(0X8010732,"T",0X1,3);
	split_sreg_range(0X8010736,"T",0X1,3);
	split_sreg_range(0X8010738,"T",0X1,3);
	split_sreg_range(0X8010740,"T",0X1,3);
	split_sreg_range(0X8010746,"T",0X1,3);
	split_sreg_range(0X8010758,"T",0X1,3);
	split_sreg_range(0X801075A,"T",0X1,3);
	split_sreg_range(0X801075E,"T",0X1,3);
	split_sreg_range(0X801077E,"T",0X1,3);
	split_sreg_range(0X8010782,"T",0X1,3);
	split_sreg_range(0X8010786,"T",0X1,3);
	split_sreg_range(0X8010794,"T",0X1,3);
	split_sreg_range(0X801079C,"T",0X1,3);
	split_sreg_range(0X80107CA,"T",0X1,3);
	split_sreg_range(0X80107D0,"T",0X1,3);
	split_sreg_range(0X8010860,"T",0X1,3);
	split_sreg_range(0X801088C,"T",0X1,3);
	split_sreg_range(0X8010892,"T",0X1,3);
	split_sreg_range(0X80108B2,"T",0X1,3);
	split_sreg_range(0X801090A,"T",0X1,3);
	split_sreg_range(0X8010936,"T",0X1,3);
	split_sreg_range(0X801093C,"T",0X1,3);
	split_sreg_range(0X801095A,"T",0X1,3);
	split_sreg_range(0X80109B4,"T",0X1,3);
	split_sreg_range(0X80109BA,"T",0X1,3);
	split_sreg_range(0X80109C6,"T",0X1,3);
	split_sreg_range(0X80109D2,"T",0X1,3);
	split_sreg_range(0X80109E0,"T",0X1,3);
	split_sreg_range(0X80109E2,"T",0X1,3);
	split_sreg_range(0X80109E4,"T",0X1,3);
	split_sreg_range(0X80109FC,"T",0X1,3);
	split_sreg_range(0X8010A00,"T",0X1,3);
	split_sreg_range(0X8010A0E,"T",0X1,3);
	split_sreg_range(0X8010A10,"T",0X1,3);
	split_sreg_range(0X8010A28,"T",0X1,3);
	split_sreg_range(0X8010A32,"T",0X1,3);
	split_sreg_range(0X8010A34,"T",0X1,3);
	split_sreg_range(0X8010A36,"T",0X1,3);
	split_sreg_range(0X8010A4A,"T",0X1,3);
	split_sreg_range(0X8010A56,"T",0X1,3);
	split_sreg_range(0X8010A64,"T",0X1,3);
	split_sreg_range(0X8010A66,"T",0X1,3);
	split_sreg_range(0X8010A68,"T",0X1,3);
	split_sreg_range(0X8010A8E,"T",0X1,3);
	split_sreg_range(0X8010A92,"T",0X1,3);
	split_sreg_range(0X8010AA0,"T",0X1,3);
	split_sreg_range(0X8010AA2,"T",0X1,3);
	split_sreg_range(0X8010AC4,"T",0X1,3);
	split_sreg_range(0X8010B28,"T",0X1,3);
	split_sreg_range(0X8010B74,"T",0X1,3);
	split_sreg_range(0X8010B88,"T",0X1,3);
	split_sreg_range(0X8010B96,"T",0X1,3);
	split_sreg_range(0X8010C08,"T",0X1,3);
	split_sreg_range(0X8010C16,"T",0X1,3);
	split_sreg_range(0X8010C40,"T",0X1,3);
	split_sreg_range(0X8010C5A,"T",0X1,3);
	split_sreg_range(0X8010C66,"T",0X1,3);
	split_sreg_range(0X8010C74,"T",0X1,3);
	split_sreg_range(0X8010CA0,"T",0X1,3);
	split_sreg_range(0X8010CA6,"T",0X1,3);
	split_sreg_range(0X8010CC6,"T",0X1,3);
	split_sreg_range(0X8010CCC,"T",0X1,3);
	split_sreg_range(0X8010CDC,"T",0X1,3);
	split_sreg_range(0X8010CEA,"T",0X1,3);
	split_sreg_range(0X8010D0E,"T",0X1,3);
	split_sreg_range(0X8010D34,"T",0X1,3);
	split_sreg_range(0X8010D5A,"T",0X1,3);
	split_sreg_range(0X8010D82,"T",0X1,3);
	split_sreg_range(0X8010DA0,"T",0X1,3);
	split_sreg_range(0X8010DB0,"T",0X1,3);
	split_sreg_range(0X8010DDC,"T",0X1,3);
	split_sreg_range(0X8010DFA,"T",0X1,3);
	split_sreg_range(0X8010E06,"T",0X1,3);
	split_sreg_range(0X8010E4E,"T",0X1,3);
	split_sreg_range(0X8010E92,"T",0X1,3);
	split_sreg_range(0X8010EAC,"T",0X1,3);
	split_sreg_range(0X8010EC4,"T",0X1,3);
	split_sreg_range(0X8010EE2,"T",0X1,3);
	split_sreg_range(0X8010F28,"T",0X1,3);
	split_sreg_range(0X8010F48,"T",0X1,3);
	split_sreg_range(0X8010F58,"T",0X1,3);
	split_sreg_range(0X8010F64,"T",0X1,3);
	split_sreg_range(0X8010F88,"T",0X1,3);
	split_sreg_range(0X8010F8C,"T",0X1,3);
	split_sreg_range(0X8010FA0,"T",0X1,3);
	split_sreg_range(0X8010FA4,"T",0X1,3);
	split_sreg_range(0X8010FC4,"T",0X1,3);
	split_sreg_range(0X8010FD8,"T",0X1,3);
	split_sreg_range(0X8010FDC,"T",0X1,3);
	split_sreg_range(0X8010FEC,"T",0X1,3);
	split_sreg_range(0X8010FF6,"T",0X1,3);
	split_sreg_range(0X8011014,"T",0X1,3);
	split_sreg_range(0X801102C,"T",0X1,3);
	split_sreg_range(0X8011038,"T",0X1,3);
	split_sreg_range(0X801104C,"T",0X1,3);
	split_sreg_range(0X8011080,"T",0X1,3);
	split_sreg_range(0X8011092,"T",0X1,3);
	split_sreg_range(0X80110A2,"T",0X1,3);
	split_sreg_range(0X80110BE,"T",0X1,3);
	split_sreg_range(0X80110E8,"T",0X1,3);
	split_sreg_range(0X8011110,"T",0X1,3);
	split_sreg_range(0X8011122,"T",0X1,3);
	split_sreg_range(0X8011134,"T",0X1,3);
	split_sreg_range(0X8011142,"T",0X1,3);
	split_sreg_range(0X8011160,"T",0X1,3);
	split_sreg_range(0X8011166,"T",0X1,3);
	split_sreg_range(0X801118A,"T",0X1,3);
	split_sreg_range(0X8011190,"T",0X1,3);
	split_sreg_range(0X80111A8,"T",0X1,3);
	split_sreg_range(0X80111C0,"T",0X1,3);
	split_sreg_range(0X80111C2,"T",0X1,3);
	split_sreg_range(0X80111C6,"T",0X1,3);
	split_sreg_range(0X80111DA,"T",0X1,3);
	split_sreg_range(0X80111F2,"T",0X1,3);
	split_sreg_range(0X80111F4,"T",0X1,3);
	split_sreg_range(0X80111F8,"T",0X1,3);
	split_sreg_range(0X8011212,"T",0X1,3);
	split_sreg_range(0X8011218,"T",0X1,3);
	split_sreg_range(0X8011230,"T",0X1,3);
	split_sreg_range(0X8011232,"T",0X1,3);
	split_sreg_range(0X8011236,"T",0X1,3);
	split_sreg_range(0X801124A,"T",0X1,3);
	split_sreg_range(0X801126A,"T",0X1,3);
	split_sreg_range(0X8011270,"T",0X1,3);
	split_sreg_range(0X801127E,"T",0X1,3);
	split_sreg_range(0X801128C,"T",0X1,3);
	split_sreg_range(0X8011290,"T",0X1,3);
	split_sreg_range(0X801129C,"T",0X1,3);
	split_sreg_range(0X80112A6,"T",0X1,3);
	split_sreg_range(0X80112C0,"T",0X1,3);
	split_sreg_range(0X80112C6,"T",0X1,3);
	split_sreg_range(0X80112D0,"T",0X1,3);
	split_sreg_range(0X80112D4,"T",0X1,3);
	split_sreg_range(0X80112E0,"T",0X1,3);
	split_sreg_range(0X80112F0,"T",0X1,3);
	split_sreg_range(0X80112F4,"T",0X1,3);
	split_sreg_range(0X801132C,"T",0X1,3);
	split_sreg_range(0X8011336,"T",0X1,3);
	split_sreg_range(0X801134A,"T",0X1,3);
	split_sreg_range(0X801135A,"T",0X1,3);
	split_sreg_range(0X801137E,"T",0X1,3);
	split_sreg_range(0X8011386,"T",0X1,3);
	split_sreg_range(0X801139C,"T",0X1,3);
	split_sreg_range(0X80113E2,"T",0X1,3);
	split_sreg_range(0X8011410,"T",0X1,3);
	split_sreg_range(0X8011426,"T",0X1,3);
	split_sreg_range(0X801142A,"T",0X1,3);
	split_sreg_range(0X8011434,"T",0X1,3);
	split_sreg_range(0X8011474,"T",0X1,3);
	split_sreg_range(0X8011476,"T",0X1,3);
	split_sreg_range(0X8011478,"T",0X1,3);
	split_sreg_range(0X801147A,"T",0X1,3);
	split_sreg_range(0X8011484,"T",0X1,3);
	split_sreg_range(0X8011490,"T",0X1,3);
	split_sreg_range(0X8011498,"T",0X1,3);
	split_sreg_range(0X80114A0,"T",0X1,3);
	split_sreg_range(0X80114EA,"T",0X1,3);
	split_sreg_range(0X80114F8,"T",0X1,3);
	split_sreg_range(0X80114FE,"T",0X1,3);
	split_sreg_range(0X8011504,"T",0X1,3);
	split_sreg_range(0X8011508,"T",0X1,3);
	split_sreg_range(0X801152A,"T",0X1,3);
	split_sreg_range(0X8011556,"T",0X1,3);
	split_sreg_range(0X801158A,"T",0X1,3);
	split_sreg_range(0X80115AC,"T",0X1,3);
	split_sreg_range(0X80115BC,"T",0X1,3);
	split_sreg_range(0X80115E4,"T",0X1,3);
	split_sreg_range(0X801160E,"T",0X1,3);
	split_sreg_range(0X801163E,"T",0X1,3);
	split_sreg_range(0X8011654,"T",0X1,3);
	split_sreg_range(0X801165C,"T",0X1,3);
	split_sreg_range(0X8011672,"T",0X1,3);
	split_sreg_range(0X8011688,"T",0X1,3);
	split_sreg_range(0X8011692,"T",0X1,3);
	split_sreg_range(0X80116E6,"T",0X1,3);
	split_sreg_range(0X801176A,"T",0X1,3);
	split_sreg_range(0X801178C,"T",0X1,3);
	split_sreg_range(0X80117C4,"T",0X1,3);
	split_sreg_range(0X8011816,"T",0X1,3);
	split_sreg_range(0X801181A,"T",0X1,3);
	split_sreg_range(0X801181E,"T",0X1,3);
	split_sreg_range(0X8011820,"T",0X1,3);
	split_sreg_range(0X8011918,"T",0X1,3);
	split_sreg_range(0X801196C,"T",0X1,3);
	split_sreg_range(0X8011990,"T",0X1,3);
	split_sreg_range(0X8011A0A,"T",0X1,3);
	split_sreg_range(0X8011A68,"T",0X1,3);
	split_sreg_range(0X8011A82,"T",0X1,3);
	split_sreg_range(0X8011A9E,"T",0X1,3);
	split_sreg_range(0X8011ACE,"T",0X1,3);
	split_sreg_range(0X8011AEE,"T",0X1,3);
	split_sreg_range(0X8011B14,"T",0X1,3);
	split_sreg_range(0X8011B40,"T",0X1,3);
	split_sreg_range(0X8011BCA,"T",0X1,3);
	split_sreg_range(0X8011C00,"T",0X1,3);
	split_sreg_range(0X8011C10,"T",0X1,3);
	split_sreg_range(0X8011C2E,"T",0X1,3);
	split_sreg_range(0X8011C3E,"T",0X1,3);
	split_sreg_range(0X8011C4C,"T",0X1,3);
	split_sreg_range(0X8011C76,"T",0X1,3);
	split_sreg_range(0X8011CBC,"T",0X1,3);
	split_sreg_range(0X8011CEA,"T",0X1,3);
	split_sreg_range(0X8011D28,"T",0X1,3);
	split_sreg_range(0X8011D3A,"T",0X1,3);
	split_sreg_range(0X8011DAC,"T",0X1,3);
	split_sreg_range(0X8011E34,"T",0X1,3);
	split_sreg_range(0X8011E66,"T",0X1,3);
	split_sreg_range(0X8011E70,"T",0X1,3);
	split_sreg_range(0X8011E96,"T",0X1,3);
	split_sreg_range(0X8011E9E,"T",0X1,3);
	split_sreg_range(0X8011EB0,"T",0X1,3);
	split_sreg_range(0X8011ECC,"T",0X1,3);
	split_sreg_range(0X8011ED2,"T",0X1,3);
	split_sreg_range(0X8011EFC,"T",0X1,3);
	split_sreg_range(0X8011F06,"T",0X1,3);
	split_sreg_range(0X8011F0E,"T",0X1,3);
	split_sreg_range(0X8011F16,"T",0X1,3);
	split_sreg_range(0X8011F1E,"T",0X1,3);
	split_sreg_range(0X8011F26,"T",0X1,3);
	split_sreg_range(0X8011F52,"T",0X1,3);
	split_sreg_range(0X8011F7E,"T",0X1,3);
	split_sreg_range(0X8011FB4,"T",0X1,3);
	split_sreg_range(0X8011FEA,"T",0X1,3);
	split_sreg_range(0X8011FEC,"T",0X1,3);
	split_sreg_range(0X8011FFA,"T",0X1,3);
	split_sreg_range(0X801202C,"T",0X1,3);
	split_sreg_range(0X8012034,"T",0X1,3);
	split_sreg_range(0X8012044,"T",0X1,3);
	split_sreg_range(0X8012050,"T",0X1,3);
	split_sreg_range(0X8012060,"T",0X1,3);
	split_sreg_range(0X8012084,"T",0X1,3);
	split_sreg_range(0X80120A6,"T",0X1,3);
	split_sreg_range(0X80120B6,"T",0X1,3);
	split_sreg_range(0X801216A,"T",0X1,3);
	split_sreg_range(0X801217C,"T",0X1,3);
	split_sreg_range(0X8012218,"T",0X1,3);
	split_sreg_range(0X8012270,"T",0X1,3);
	split_sreg_range(0X801227A,"T",0X1,3);
	split_sreg_range(0X8012284,"T",0X1,3);
	split_sreg_range(0X8012288,"T",0X1,3);
	split_sreg_range(0X80122A8,"T",0X1,3);
	split_sreg_range(0X80122BA,"T",0X1,3);
	split_sreg_range(0X80122F8,"T",0X1,3);
	split_sreg_range(0X801230A,"T",0X1,3);
	split_sreg_range(0X8012312,"T",0X1,3);
	split_sreg_range(0X801232C,"T",0X1,3);
	split_sreg_range(0X8012344,"T",0X1,3);
	split_sreg_range(0X801235C,"T",0X1,3);
	split_sreg_range(0X8012392,"T",0X1,3);
	split_sreg_range(0X80123A2,"T",0X1,3);
	split_sreg_range(0X80123B0,"T",0X1,3);
	split_sreg_range(0X80123C6,"T",0X1,3);
	split_sreg_range(0X80123DC,"T",0X1,3);
	split_sreg_range(0X80123EA,"T",0X1,3);
	split_sreg_range(0X80123FC,"T",0X1,3);
	split_sreg_range(0X8012406,"T",0X1,3);
	split_sreg_range(0X801242C,"T",0X1,3);
	split_sreg_range(0X801243C,"T",0X1,3);
	split_sreg_range(0X801245A,"T",0X1,3);
	split_sreg_range(0X8012462,"T",0X1,3);
	split_sreg_range(0X801247E,"T",0X1,3);
	split_sreg_range(0X8012494,"T",0X1,3);
	split_sreg_range(0X80124A2,"T",0X1,3);
	split_sreg_range(0X80124AC,"T",0X1,3);
	split_sreg_range(0X80124AE,"T",0X1,3);
	split_sreg_range(0X80124BA,"T",0X1,3);
	split_sreg_range(0X80124E2,"T",0X1,3);
	split_sreg_range(0X80124FA,"T",0X1,3);
	split_sreg_range(0X8012506,"T",0X1,3);
	split_sreg_range(0X8012510,"T",0X1,3);
	split_sreg_range(0X801251A,"T",0X1,3);
	split_sreg_range(0X801253C,"T",0X1,3);
	split_sreg_range(0X8012554,"T",0X1,3);
	split_sreg_range(0X80125CC,"T",0X1,3);
	split_sreg_range(0X80125CE,"T",0X1,3);
	split_sreg_range(0X8012602,"T",0X1,3);
	split_sreg_range(0X801261A,"T",0X1,3);
	split_sreg_range(0X8012680,"T",0X1,3);
	split_sreg_range(0X80126A6,"T",0X1,3);
	split_sreg_range(0X80128EE,"T",0X1,3);
	split_sreg_range(0X8012902,"T",0X1,3);
	split_sreg_range(0X8012980,"T",0X1,3);
	split_sreg_range(0X80129A2,"T",0X1,3);
	split_sreg_range(0X80129CA,"T",0X1,3);
	split_sreg_range(0X80129E2,"T",0X1,3);
	split_sreg_range(0X8012A3E,"T",0X1,3);
	split_sreg_range(0X8012AE8,"T",0X1,3);
	split_sreg_range(0X8012BD4,"T",0X1,3);
	split_sreg_range(0X8012BF8,"T",0X1,3);
	split_sreg_range(0X8012C0E,"T",0X1,3);
	split_sreg_range(0X8012C30,"T",0X1,3);
	split_sreg_range(0X8012C32,"T",0X1,3);
	split_sreg_range(0X8012C40,"T",0X1,3);
	split_sreg_range(0X8012C64,"T",0X1,3);
	split_sreg_range(0X8012C6C,"T",0X1,3);
	split_sreg_range(0X8012C76,"T",0X1,3);
	split_sreg_range(0X8012C7E,"T",0X1,3);
	split_sreg_range(0X8012C8E,"T",0X1,3);
	split_sreg_range(0X8012CA8,"T",0X1,3);
	split_sreg_range(0X8012CEC,"T",0X1,3);
	split_sreg_range(0X8012CF4,"T",0X1,3);
	split_sreg_range(0X8012D24,"T",0X1,3);
	split_sreg_range(0X8012D38,"T",0X1,3);
	split_sreg_range(0X8012D3E,"T",0X1,3);
	split_sreg_range(0X8012D58,"T",0X1,3);
	split_sreg_range(0X8012D68,"T",0X1,3);
	split_sreg_range(0X8012D7C,"T",0X1,3);
	split_sreg_range(0X8012DD4,"T",0X1,3);
	split_sreg_range(0X8012DEC,"T",0X1,3);
	split_sreg_range(0X8012DF8,"T",0X1,3);
	split_sreg_range(0X8012E0C,"T",0X1,3);
	split_sreg_range(0X8012E36,"T",0X1,3);
	split_sreg_range(0X8012E64,"T",0X1,3);
	split_sreg_range(0X8012E7C,"T",0X1,3);
	split_sreg_range(0X8012E94,"T",0X1,3);
	split_sreg_range(0X8012EA8,"T",0X1,3);
	split_sreg_range(0X8012EB8,"T",0X1,3);
	split_sreg_range(0X8012ED0,"T",0X1,3);
	split_sreg_range(0X8012FD6,"T",0X1,3);
	split_sreg_range(0X8012FF0,"T",0X1,3);
	split_sreg_range(0X8013004,"T",0X1,3);
	split_sreg_range(0X8013016,"T",0X1,3);
	split_sreg_range(0X8013068,"T",0X1,3);
	split_sreg_range(0X801307A,"T",0X1,3);
	split_sreg_range(0X801308C,"T",0X1,3);
	split_sreg_range(0X8013098,"T",0X1,3);
	split_sreg_range(0X80130B2,"T",0X1,3);
	split_sreg_range(0X80130C0,"T",0X1,3);
	split_sreg_range(0X80130E2,"T",0X1,3);
	split_sreg_range(0X80130EA,"T",0X1,3);
	split_sreg_range(0X8013180,"T",0X1,3);
	split_sreg_range(0X80131B2,"T",0X1,3);
	split_sreg_range(0X80131C4,"T",0X1,3);
	split_sreg_range(0X80131CE,"T",0X1,3);
	split_sreg_range(0X80131E0,"T",0X1,3);
	split_sreg_range(0X8013206,"T",0X1,3);
	split_sreg_range(0X801321C,"T",0X1,3);
	split_sreg_range(0X8013222,"T",0X1,3);
	split_sreg_range(0X8013228,"T",0X1,3);
	split_sreg_range(0X801323A,"T",0X1,3);
	split_sreg_range(0X8013262,"T",0X1,3);
	split_sreg_range(0X8013268,"T",0X1,3);
	split_sreg_range(0X8013288,"T",0X1,3);
	split_sreg_range(0X80132B0,"T",0X1,3);
	split_sreg_range(0X80132C2,"T",0X1,3);
	split_sreg_range(0X80132C6,"T",0X1,3);
	split_sreg_range(0X80132DE,"T",0X1,3);
	split_sreg_range(0X80132F2,"T",0X1,3);
	split_sreg_range(0X8013308,"T",0X1,3);
	split_sreg_range(0X801338C,"T",0X1,3);
	split_sreg_range(0X80133A2,"T",0X1,3);
	split_sreg_range(0X80133C6,"T",0X1,3);
	split_sreg_range(0X80133D0,"T",0X1,3);
	split_sreg_range(0X8013402,"T",0X1,3);
	split_sreg_range(0X8013420,"T",0X1,3);
	split_sreg_range(0X801343A,"T",0X1,3);
	split_sreg_range(0X8013442,"T",0X1,3);
	split_sreg_range(0X801344C,"T",0X1,3);
	split_sreg_range(0X801345C,"T",0X1,3);
	split_sreg_range(0X8013478,"T",0X1,3);
	split_sreg_range(0X801349E,"T",0X1,3);
	split_sreg_range(0X80134A4,"T",0X1,3);
	split_sreg_range(0X80134A8,"T",0X1,3);
	split_sreg_range(0X80134C8,"T",0X1,3);
	split_sreg_range(0X80134F8,"T",0X1,3);
	split_sreg_range(0X8013504,"T",0X1,3);
	split_sreg_range(0X8013524,"T",0X1,3);
	split_sreg_range(0X8013536,"T",0X1,3);
	split_sreg_range(0X801353A,"T",0X1,3);
	split_sreg_range(0X8013552,"T",0X1,3);
	split_sreg_range(0X8013566,"T",0X1,3);
	split_sreg_range(0X8013570,"T",0X1,3);
	split_sreg_range(0X8013588,"T",0X1,3);
	split_sreg_range(0X80135B6,"T",0X1,3);
	split_sreg_range(0X80136B2,"T",0X1,3);
	split_sreg_range(0X80136EC,"T",0X1,3);
	split_sreg_range(0X801370E,"T",0X1,3);
	split_sreg_range(0X801371E,"T",0X1,3);
	split_sreg_range(0X8013736,"T",0X1,3);
	split_sreg_range(0X8013744,"T",0X1,3);
	split_sreg_range(0X8013754,"T",0X1,3);
	split_sreg_range(0X8013764,"T",0X1,3);
	split_sreg_range(0X801377C,"T",0X1,3);
	split_sreg_range(0X80137D4,"T",0X1,3);
	split_sreg_range(0X80137FA,"T",0X1,3);
	split_sreg_range(0X801381E,"T",0X1,3);
	split_sreg_range(0X8013828,"T",0X1,3);
	split_sreg_range(0X8013862,"T",0X1,3);
	split_sreg_range(0X801388A,"T",0X1,3);
	split_sreg_range(0X80138AA,"T",0X1,3);
	split_sreg_range(0X80138B6,"T",0X1,3);
	split_sreg_range(0X80138C0,"T",0X1,3);
	split_sreg_range(0X80138C6,"T",0X1,3);
	split_sreg_range(0X80138D6,"T",0X1,3);
	split_sreg_range(0X80138DC,"T",0X1,3);
	split_sreg_range(0X80138F6,"T",0X1,3);
	split_sreg_range(0X801390C,"T",0X1,3);
	split_sreg_range(0X8013928,"T",0X1,3);
	split_sreg_range(0X8013950,"T",0X1,3);
	split_sreg_range(0X8013980,"T",0X1,3);
	split_sreg_range(0X801398E,"T",0X1,3);
	split_sreg_range(0X80139E8,"T",0X1,3);
	split_sreg_range(0X80139FC,"T",0X1,3);
	split_sreg_range(0X8013A04,"T",0X1,3);
	split_sreg_range(0X8013A26,"T",0X1,3);
	split_sreg_range(0X8013A38,"T",0X1,3);
	split_sreg_range(0X8013A44,"T",0X1,3);
	split_sreg_range(0X8013A50,"T",0X1,3);
	split_sreg_range(0X8013A68,"T",0X1,3);
	split_sreg_range(0X8013B16,"T",0X1,3);
	split_sreg_range(0X8013B74,"T",0X1,3);
	split_sreg_range(0X8013B8C,"T",0X1,3);
	split_sreg_range(0X8013BB2,"T",0X1,3);
	split_sreg_range(0X8013BC4,"T",0X1,3);
	split_sreg_range(0X8013BCA,"T",0X1,3);
	split_sreg_range(0X8013BD6,"T",0X1,3);
	split_sreg_range(0X8013BEC,"T",0X1,3);
	split_sreg_range(0X8013C08,"T",0X1,3);
	split_sreg_range(0X8013C24,"T",0X1,3);
	split_sreg_range(0X8013C3A,"T",0X1,3);
	split_sreg_range(0X8013C4E,"T",0X1,3);
	split_sreg_range(0X8013C5C,"T",0X1,3);
	split_sreg_range(0X8013C64,"T",0X1,3);
	split_sreg_range(0X8013C92,"T",0X1,3);
	split_sreg_range(0X8013C94,"T",0X1,3);
	split_sreg_range(0X8013CB8,"T",0X1,3);
	split_sreg_range(0X8013CBC,"T",0X1,3);
	split_sreg_range(0X8013CD4,"T",0X1,3);
	split_sreg_range(0X8013CE6,"T",0X1,3);
	split_sreg_range(0X8013CEA,"T",0X1,3);
	split_sreg_range(0X8013CFA,"T",0X1,3);
	split_sreg_range(0X8013D0E,"T",0X1,3);
	split_sreg_range(0X8013D24,"T",0X1,3);
	split_sreg_range(0X8013DB8,"T",0X1,3);
	split_sreg_range(0X8013DCC,"T",0X1,3);
	split_sreg_range(0X8013DEC,"T",0X1,3);
	split_sreg_range(0X8013E0A,"T",0X1,3);
	split_sreg_range(0X8013E12,"T",0X1,3);
	split_sreg_range(0X8013E1C,"T",0X1,3);
	split_sreg_range(0X8013E26,"T",0X1,3);
	split_sreg_range(0X8013E40,"T",0X1,3);
	split_sreg_range(0X8013E64,"T",0X1,3);
	split_sreg_range(0X8013E6A,"T",0X1,3);
	split_sreg_range(0X8013E6E,"T",0X1,3);
	split_sreg_range(0X8013E8E,"T",0X1,3);
	split_sreg_range(0X8013EB2,"T",0X1,3);
	split_sreg_range(0X8013EBC,"T",0X1,3);
	split_sreg_range(0X8013ECA,"T",0X1,3);
	split_sreg_range(0X8013ED8,"T",0X1,3);
	split_sreg_range(0X8013F26,"T",0X1,3);
	split_sreg_range(0X8013F3E,"T",0X1,3);
	split_sreg_range(0X8013F4E,"T",0X1,3);
	split_sreg_range(0X8013F74,"T",0X1,3);
	split_sreg_range(0X8013F7A,"T",0X1,3);
	split_sreg_range(0X8013F86,"T",0X1,3);
	split_sreg_range(0X8013F96,"T",0X1,3);
	split_sreg_range(0X8013FA6,"T",0X1,3);
	split_sreg_range(0X8013FD0,"T",0X1,3);
	split_sreg_range(0X8013FDC,"T",0X1,3);
	split_sreg_range(0X8013FF4,"T",0X1,3);
	split_sreg_range(0X801400A,"T",0X1,3);
	split_sreg_range(0X8014048,"T",0X1,3);
	split_sreg_range(0X8014052,"T",0X1,3);
	split_sreg_range(0X8014066,"T",0X1,3);
	split_sreg_range(0X801409A,"T",0X1,3);
	split_sreg_range(0X80140A0,"T",0X1,3);
	split_sreg_range(0X80140B2,"T",0X1,3);
	split_sreg_range(0X80140C6,"T",0X1,3);
	split_sreg_range(0X80140DC,"T",0X1,3);
	split_sreg_range(0X8014162,"T",0X1,3);
	split_sreg_range(0X8015500,"T",0,3);
	split_sreg_range(0X1FFFF700,"T",0,3);
	split_sreg_range(0X40000000,"T",0,3);
	split_sreg_range(0X40010000,"T",0,3);
	split_sreg_range(0X40020000,"T",0,3);
	split_sreg_range(0X42200000,"T",0,3);
	split_sreg_range(0X42420000,"T",0,3);
	split_sreg_range(0XA0001020,"T",0,3);
	split_sreg_range(0X8008000,"DS",0X4,3);
	split_sreg_range(0X8015500,"DS",0X4,3);
	split_sreg_range(0X1FFFF700,"DS",0X4,3);
	split_sreg_range(0X40000000,"DS",0X4,3);
	split_sreg_range(0X40010000,"DS",0X4,3);
	split_sreg_range(0X40020000,"DS",0X4,3);
	split_sreg_range(0X42200000,"DS",0X4,3);
	split_sreg_range(0X42420000,"DS",0X4,3);
	split_sreg_range(0XA0001020,"DS",0X4,3);
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
	Bytes_1();
        end_type_updating(UTP_STRUCT);
}

// End of file.
