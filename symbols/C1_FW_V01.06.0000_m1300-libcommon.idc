//
// +-------------------------------------------------------------------------+
// |   This file has been generated by The Interactive Disassembler (IDA)    |
// |           Copyright (c) 2017 Hex-Rays, <support@hex-rays.com>           |
// +-------------------------------------------------------------------------+
//
//
//      This file should be used in the following way:
//         - reload executable into IDA with using switch -c
//         - use File, Load IDC file and load this file.
//
//      NOTE: This file doesn't contain all information from the database.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
  // set 'loading idc file' mode
  set_inf_attr(INF_GENFLAGS, INFFL_LOADIDC|get_inf_attr(INF_GENFLAGS));
  GenInfo();            // various settings
  Segments();           // segmentation
  Enums();              // enumerations
  Structures();         // structure types
  ApplyStrucTInfos();   // structure type infos
  Patches();            // manual patches
  SegRegs();            // segment register values
  Bytes();              // individual bytes (code,data)
  Functions();          // function definitions
  // clear 'loading idc file' mode
  set_inf_attr(INF_GENFLAGS, ~INFFL_LOADIDC&get_inf_attr(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        delete_all_segments();    // purge database
	set_processor_type("ARM", SETPROC_USER);
	set_inf_attr(INF_COMPILER, 6);
	set_inf_attr(INF_STRLIT_BREAK, 0xA);
	set_flag(INF_CMTFLAG, SW_ALLCMT, 0);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_VOID, 0);
	set_inf_attr(INF_XREFNUM, 2);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_AUTO, 1);
	set_inf_attr(INF_INDENT, 16);
	set_inf_attr(INF_COMMENT, 40);
	set_inf_attr(INF_MAXREF, 0x10);
	add_default_til("gnulnx_arm");
	add_default_til("armv12");
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	set_selector(0X1,0);
	set_selector(0X2,0);
	set_selector(0X3,0);
	set_selector(0X4,0);
	set_selector(0X5,0);
	set_selector(0X6,0);
	set_selector(0X7,0);
	set_selector(0X8,0);
	set_selector(0X9,0);
	set_selector(0XA,0);
	set_selector(0XB,0);
	set_selector(0XC,0);
	set_selector(0XD,0);
	set_selector(0XE,0);
	set_selector(0XF,0);
	set_selector(0X10,0);
	set_selector(0X11,0);
	set_selector(0X12,0);
	set_selector(0X13,0);
	set_selector(0X14,0);
	;
	add_segm_ex(0,0X5754,0X2,1,1,2,ADDSEG_NOSREG);
	SegRename(0,"LOAD");
	SegClass (0,"CODE");
	SegDefReg(0x0,"T",0x0);
	SegDefReg(0x0,"DS",0x10);
	set_segm_type(0,2);
	add_segm_ex(0X5754,0X5760,0X4,1,5,2,ADDSEG_NOSREG);
	SegRename(0X5754,".init");
	SegClass (0X5754,"CODE");
	SegDefReg(0x5754,"T",0x0);
	SegDefReg(0x5754,"DS",0x10);
	set_segm_type(0X5754,2);
	add_segm_ex(0X5760,0X638C,0X5,1,5,2,ADDSEG_NOSREG);
	SegRename(0X5760,".plt");
	SegClass (0X5760,"CODE");
	SegDefReg(0x5760,"T",0x0);
	SegDefReg(0x5760,"DS",0x10);
	set_segm_type(0X5760,2);
	add_segm_ex(0X638C,0X267E8,0X6,1,5,2,ADDSEG_NOSREG);
	SegRename(0X638C,".text");
	SegClass (0X638C,"CODE");
	SegDefReg(0x638C,"T",0x0);
	SegDefReg(0x638C,"DS",0x10);
	set_segm_type(0X638C,2);
	add_segm_ex(0X267E8,0X267F0,0X7,1,5,2,ADDSEG_NOSREG);
	SegRename(0X267E8,".fini");
	SegClass (0X267E8,"CODE");
	SegDefReg(0x267E8,"T",0x0);
	SegDefReg(0x267E8,"DS",0x10);
	set_segm_type(0X267E8,2);
	add_segm_ex(0X267F0,0X2A374,0X8,1,5,2,ADDSEG_NOSREG);
	SegRename(0X267F0,".rodata");
	SegClass (0X267F0,"CONST");
	SegDefReg(0x267F0,"T",0x0);
	SegDefReg(0x267F0,"DS",0x10);
	set_segm_type(0X267F0,3);
	add_segm_ex(0X2A374,0X2B124,0X9,1,5,2,ADDSEG_NOSREG);
	SegRename(0X2A374,".ARM.extab");
	SegClass (0X2A374,"CONST");
	SegDefReg(0x2A374,"T",0x0);
	SegDefReg(0x2A374,"DS",0x10);
	set_segm_type(0X2A374,3);
	add_segm_ex(0X2B124,0X2BBDC,0XA,1,5,2,ADDSEG_NOSREG);
	SegRename(0X2B124,".ARM.exidx");
	SegClass (0X2B124,"CONST");
	SegDefReg(0x2B124,"T",0x0);
	SegDefReg(0x2B124,"DS",0x10);
	set_segm_type(0X2B124,3);
	add_segm_ex(0X2BBDC,0X2BBE0,0XB,1,5,2,ADDSEG_NOSREG);
	SegRename(0X2BBDC,".eh_frame");
	SegClass (0X2BBDC,"CONST");
	SegDefReg(0x2BBDC,"T",0x0);
	SegDefReg(0x2BBDC,"DS",0x10);
	set_segm_type(0X2BBDC,3);
	add_segm_ex(0X34000,0X34004,0XC,1,5,2,ADDSEG_NOSREG);
	SegRename(0X34000,".init_array");
	SegClass (0X34000,"DATA");
	SegDefReg(0x34000,"T",0x0);
	SegDefReg(0x34000,"DS",0x10);
	set_segm_type(0X34000,3);
	add_segm_ex(0X34004,0X34008,0XD,1,5,2,ADDSEG_NOSREG);
	SegRename(0X34004,".fini_array");
	SegClass (0X34004,"DATA");
	SegDefReg(0x34004,"T",0x0);
	SegDefReg(0x34004,"DS",0x10);
	set_segm_type(0X34004,3);
	add_segm_ex(0X34008,0X3400C,0XE,1,5,2,ADDSEG_NOSREG);
	SegRename(0X34008,".jcr");
	SegClass (0X34008,"DATA");
	SegDefReg(0x34008,"T",0x0);
	SegDefReg(0x34008,"DS",0x10);
	set_segm_type(0X34008,3);
	add_segm_ex(0X3400C,0X34134,0X3,1,1,2,ADDSEG_NOSREG);
	SegRename(0X3400C,"LOAD");
	SegClass (0X3400C,"DATA");
	SegDefReg(0x3400C,"T",0x0);
	SegDefReg(0x3400C,"DS",0x10);
	set_segm_type(0X3400C,3);
	add_segm_ex(0X34134,0X34558,0XF,1,5,2,ADDSEG_NOSREG);
	SegRename(0X34134,".got");
	SegClass (0X34134,"DATA");
	SegDefReg(0x34134,"T",0x0);
	SegDefReg(0x34134,"DS",0x10);
	set_segm_type(0X34134,3);
	add_segm_ex(0X34558,0X34960,0X10,1,5,2,ADDSEG_NOSREG);
	SegRename(0X34558,".data");
	SegClass (0X34558,"DATA");
	SegDefReg(0x34558,"T",0x0);
	SegDefReg(0x34558,"DS",0x10);
	set_segm_type(0X34558,3);
	add_segm_ex(0X34960,0X85A1C,0X11,1,5,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X34960,".bss");
	SegClass (0X34960,"BSS");
	SegDefReg(0x34960,"T",0x0);
	SegDefReg(0x34960,"DS",0x10);
	set_segm_type(0X34960,9);
	add_segm_ex(0X85A1C,0X85A1D,0X12,1,1,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X85A1C,".prgend");
	SegClass (0X85A1C,".prgend");
	SegDefReg(0x85A1C,"T",0x0);
	SegDefReg(0x85A1C,"DS",0x12);
	set_segm_type(0X85A1C,7);
	add_segm_ex(0X85A20,0X85A50,0X13,1,5,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X85A20,"abs");
	SegClass (0X85A20,"abs");
	SegDefReg(0x85A20,"T",0x0);
	SegDefReg(0x85A20,"DS",0x13);
	set_segm_type(0X85A20,10);
	add_segm_ex(0X85AF0,0X85CBC,0X14,1,5,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X85AF0,"extern");
	SegClass (0X85AF0,"extern");
	SegDefReg(0x85AF0,"T",0x0);
	SegDefReg(0x85AF0,"DS",0x14);
	set_segm_type(0X85AF0,1);
	set_inf_attr(INF_LOW_OFF, 0x20);
	set_inf_attr(INF_HIGH_OFF, 0x85CBC);
}

static Enums_0(id) {

	id = add_enum(-1,"E_UpdateCtrlTypeEnum",0x1100000);
	add_enum_member(id,"UPDATECTRL_START",	0X1,	-1);
	add_enum_member(id,"UPDATECTRL_SUCCESS",	0X2,	-1);
	add_enum_member(id,"UPDATECTRL_FAIL",	0X3,	-1);
	id = add_enum(-1,"E_BandRateEnum",0x1100000);
	add_enum_member(id,"BANDRATE_9600",	0,	-1);
	add_enum_member(id,"BANDRATE_19200",	0X1,	-1);
	add_enum_member(id,"BANDRATE_38400",	0X2,	-1);
	add_enum_member(id,"BANDRATE_115200",	0X3,	-1);
	add_enum_member(id,"BANDRATE_230400",	0X4,	-1);
	id = add_enum(-1,"E_DataBitEnum",0x1100000);
	add_enum_member(id,"DATABIT_7",	0,	-1);
	add_enum_member(id,"DATABIT_8",	0X1,	-1);
	id = add_enum(-1,"E_StopBitEnum",0x1100000);
	add_enum_member(id,"STOPBIT_1",	0,	-1);
	add_enum_member(id,"STOPBIT_2",	0X1,	-1);
	id = add_enum(-1,"E_ParityEnum",0x1100000);
	add_enum_member(id,"PARITY_NONE",	0,	-1);
	add_enum_member(id,"PARITY_ODD",	0X1,	-1);
	add_enum_member(id,"PARITY_EVEN",	0X2,	-1);
	id = add_enum(-1,"conn_device_type",0x1100000);
	add_enum_member(id,"DEV_ANDROID",	0,	-1);
	add_enum_member(id,"DEV_IOS",	0X1,	-1);
	id = add_enum(-1,"E_ParaTypeEnum",0x1100000);
	add_enum_member(id,"PARA_TYPE_OSD_ENABLE",	0,	-1);
	add_enum_member(id,"PARA_TYPE_DISPLAY_MODE_1080",	0X1,	-1);
	add_enum_member(id,"PARA_TYPE_DISPLAY_MODE_720",	0X2,	-1);
	add_enum_member(id,"PARA_TYPE_LEFT_MARGIN",	0X3,	-1);
	add_enum_member(id,"PARA_TYPE_RIGHT_MARGIN",	0X4,	-1);
	add_enum_member(id,"PARA_TYPE_UPPER_MARGIN",	0X5,	-1);
	add_enum_member(id,"PARA_TYPE_LOWER_MARGIN",	0X6,	-1);
	add_enum_member(id,"PARA_TYPE_FLUENCY_MODE",	0X7,	-1);
	add_enum_member(id,"PARA_TYPE_PARAMETER_UNIT",	0X8,	-1);
	add_enum_member(id,"PARA_TYPE_DOUBLE_SHOW_MODE",	0X9,	-1);
	add_enum_member(id,"PARA_TYPE_DISABLE_MFI",	0XA,	-1);
	add_enum_member(id,"PARA_TYPE_APP_LAUNCH",	0XB,	-1);
	add_enum_member(id,"PARA_TYPE_USB_MODE",	0XC,	-1);
	add_enum_member(id,"PARA_TYPE_OUT_MODE",	0XD,	-1);
	add_enum_member(id,"PARA_NUM",	0XE,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
	id = Enums_0(id);
        end_type_updating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = get_struc_id("Elf32_Dyn");
	SetType(get_member_id(id, 0x0), "__int32");
	SetType(get_member_id(id, 0x4), "union Elf32_Dyn::$A263394DDF3EC2D4B1B8448EDD30E249");
	id = get_struc_id("$9E389EF8DB18C75445DC45CE7C2FFB9B::$2798575F521600C1E26DD161E22996D8");
	SetType(get_member_id(id, 0x0), "Elf32_Word");
	SetType(get_member_id(id, 0x1), "Elf32_Addr");
	id = get_struc_id("Elf32_Sym");
	SetType(get_member_id(id, 0x0), "unsigned __int32");
	SetType(get_member_id(id, 0x4), "unsigned __int32");
	SetType(get_member_id(id, 0x8), "unsigned __int32");
	SetType(get_member_id(id, 0xC), "unsigned __int8");
	SetType(get_member_id(id, 0xD), "unsigned __int8");
	SetType(get_member_id(id, 0xE), "unsigned __int16");
	id = get_struc_id("Elf32_Rel");
	SetType(get_member_id(id, 0x0), "unsigned __int32");
	SetType(get_member_id(id, 0x4), "unsigned __int32");
	id = get_struc_id("Elf32_Dyn::$A263394DDF3EC2D4B1B8448EDD30E249");
	SetType(get_member_id(id, 0x0), "unsigned __int32");
	SetType(get_member_id(id, 0x1), "unsigned __int32");
	id = get_struc_id("timeval");
	SetType(get_member_id(id, 0x0), "__time_t");
	SetType(get_member_id(id, 0x4), "__suseconds_t");
	id = get_struc_id("stat");
	SetType(get_member_id(id, 0x0), "__dev_t");
	SetType(get_member_id(id, 0x8), "unsigned __int16");
	SetType(get_member_id(id, 0xC), "__ino_t");
	SetType(get_member_id(id, 0x10), "__mode_t");
	SetType(get_member_id(id, 0x14), "__nlink_t");
	SetType(get_member_id(id, 0x18), "__uid_t");
	SetType(get_member_id(id, 0x1C), "__gid_t");
	SetType(get_member_id(id, 0x20), "__dev_t");
	SetType(get_member_id(id, 0x28), "unsigned __int16");
	SetType(get_member_id(id, 0x2C), "__off_t");
	SetType(get_member_id(id, 0x30), "__blksize_t");
	SetType(get_member_id(id, 0x34), "__blkcnt_t");
	SetType(get_member_id(id, 0x38), "timespec");
	SetType(get_member_id(id, 0x40), "timespec");
	SetType(get_member_id(id, 0x48), "timespec");
	SetType(get_member_id(id, 0x50), "unsigned int");
	SetType(get_member_id(id, 0x54), "unsigned int");
	id = get_struc_id("timespec");
	SetType(get_member_id(id, 0x0), "__time_t");
	SetType(get_member_id(id, 0x4), "int");
	id = get_struc_id("sockaddr_in");
	SetType(get_member_id(id, 0x0), "sa_family_t");
	SetType(get_member_id(id, 0x2), "in_port_t");
	SetType(get_member_id(id, 0x4), "in_addr");
	SetType(get_member_id(id, 0x8), "unsigned __int8[8]");
	id = get_struc_id("in_addr");
	SetType(get_member_id(id, 0x0), "in_addr_t");
	id = get_struc_id("MD5_CTX");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "unsigned int");
	SetType(get_member_id(id, 0x10), "unsigned int");
	SetType(get_member_id(id, 0x14), "unsigned int");
	SetType(get_member_id(id, 0x18), "unsigned int[16]");
	SetType(get_member_id(id, 0x58), "unsigned int");
	id = get_struc_id("flock");
	SetType(get_member_id(id, 0x0), "__int16");
	SetType(get_member_id(id, 0x2), "__int16");
	SetType(get_member_id(id, 0x4), "__off_t");
	SetType(get_member_id(id, 0x8), "__off_t");
	SetType(get_member_id(id, 0xC), "__pid_t");
	id = get_struc_id("sigset_t");
	SetType(get_member_id(id, 0x0), "unsigned int[32]");
	id = get_struc_id("AES_KEY");
	SetType(get_member_id(id, 0x0), "unsigned int[60]");
	SetType(get_member_id(id, 0xF0), "int");
	id = get_struc_id("tm");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "int");
	SetType(get_member_id(id, 0x20), "int");
	SetType(get_member_id(id, 0x24), "int");
	SetType(get_member_id(id, 0x28), "const unsigned __int8 *");
	id = get_struc_id("pthread_mutexattr_t");
	SetType(get_member_id(id, 0x0), "unsigned __int8[4]");
	SetType(get_member_id(id, 0x1), "int");
	id = get_struc_id("pthread_attr_t");
	SetType(get_member_id(id, 0x0), "unsigned __int8[36]");
	SetType(get_member_id(id, 0x1), "int");
	id = get_struc_id("sched_param");
	SetType(get_member_id(id, 0x0), "int");
	id = get_struc_id("T_DJIProCmdAttrStruct");
	SetType(get_member_id(id, 0x0), "INT8U");
	SetType(get_member_id(id, 0x1), "INT8U");
	SetType(get_member_id(id, 0x2), "INT8U");
	SetType(get_member_id(id, 0x3), "INT8U");
	SetType(get_member_id(id, 0x4), "INT8U");
	SetType(get_member_id(id, 0x5), "BOOLEAN");
	SetType(get_member_id(id, 0x6), "INT16U");
	id = get_struc_id("T_DJIProtocolStruct");
	SetType(get_member_id(id, 0x0), "T_DJIProtocolHeaderStruct *");
	SetType(get_member_id(id, 0x4), "INT32U");
	SetType(get_member_id(id, 0x8), "INT8U *");
	id = get_struc_id("T_CmdSendStruct");
	SetType(get_member_id(id, 0x0), "INT8U");
	SetType(get_member_id(id, 0x1), "INT8U");
	SetType(get_member_id(id, 0x2), "INT16U");
	SetType(get_member_id(id, 0x4), "INT8U");
	SetType(get_member_id(id, 0x5), "INT8U");
	SetType(get_member_id(id, 0x6), "INT8U");
	SetType(get_member_id(id, 0x8), "timeval");
	SetType(get_member_id(id, 0x10), "INT32U");
	SetType(get_member_id(id, 0x14), "pthread_mutex_t");
	SetType(get_member_id(id, 0x30), "pthread_cond_t");
	SetType(get_member_id(id, 0x60), "INT8U *");
	SetType(get_member_id(id, 0x64), "INT32U *");
	SetType(get_member_id(id, 0x68), "INT32U");
	id = get_struc_id("pthread_mutex_t");
	SetType(get_member_id(id, 0x0), "__pthread_mutex_s");
	SetType(get_member_id(id, 0x1), "unsigned __int8[24]");
	SetType(get_member_id(id, 0x2), "int");
	id = get_struc_id("__pthread_mutex_s");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "unsigned int");
	SetType(get_member_id(id, 0x14), "$0BD8A1A0B142CC6BF06E3D3E9C4F6678");
	id = get_struc_id("$0BD8A1A0B142CC6BF06E3D3E9C4F6678");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x1), "__pthread_slist_t");
	id = get_struc_id("__pthread_slist_t");
	SetType(get_member_id(id, 0x0), "__pthread_internal_slist *");
	id = get_struc_id("pthread_cond_t");
	SetType(get_member_id(id, 0x0), "$D1A3A25C3148BF6DB0FC6B6853FA383D");
	SetType(get_member_id(id, 0x1), "unsigned __int8[48]");
	SetType(get_member_id(id, 0x2), "__int64");
	id = get_struc_id("$D1A3A25C3148BF6DB0FC6B6853FA383D");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned __int64");
	SetType(get_member_id(id, 0x10), "unsigned __int64");
	SetType(get_member_id(id, 0x18), "unsigned __int64");
	SetType(get_member_id(id, 0x20), "void *");
	SetType(get_member_id(id, 0x24), "unsigned int");
	SetType(get_member_id(id, 0x28), "unsigned int");
	id = get_struc_id("input_event");
	SetType(get_member_id(id, 0x0), "timeval");
	SetType(get_member_id(id, 0x8), "__u16");
	SetType(get_member_id(id, 0xA), "__u16");
	SetType(get_member_id(id, 0xC), "__s32");
	id = get_struc_id("termios");
	SetType(get_member_id(id, 0x0), "tcflag_t");
	SetType(get_member_id(id, 0x4), "tcflag_t");
	SetType(get_member_id(id, 0x8), "tcflag_t");
	SetType(get_member_id(id, 0xC), "tcflag_t");
	SetType(get_member_id(id, 0x10), "cc_t");
	SetType(get_member_id(id, 0x11), "cc_t[32]");
	SetType(get_member_id(id, 0x34), "speed_t");
	SetType(get_member_id(id, 0x38), "speed_t");
	id = get_struc_id("fd_set");
	SetType(get_member_id(id, 0x0), "__fd_mask[32]");
	id = get_struc_id("sha256_ctx");
	SetType(get_member_id(id, 0x0), "uint32");
	SetType(get_member_id(id, 0x4), "uint32");
	SetType(get_member_id(id, 0x8), "uint8[128]");
	SetType(get_member_id(id, 0x88), "uint32[8]");
	id = get_struc_id("U_At88IoctlUnion");
	SetType(get_member_id(id, 0x0), "T_At88Ioctl_VSC_Struct");
	SetType(get_member_id(id, 0x1), "T_At88Ioctl_VP_Struct");
	SetType(get_member_id(id, 0x2), "T_At88Ioctl_AS_Struct");
	SetType(get_member_id(id, 0x3), "T_At88Ioctl_WR_Struct");
	SetType(get_member_id(id, 0x4), "T_At88Ioctl_SUZ_Struct");
	SetType(get_member_id(id, 0x5), "T_At88Ioctl_RCS_Struct");
	SetType(get_member_id(id, 0x6), "T_At88Ioctl_WRF_Struct");
	SetType(get_member_id(id, 0x7), "T_At88Ioctl_WKE_Struct");
	SetType(get_member_id(id, 0x8), "T_Atsha204Ioctl_WR_Struct");
	SetType(get_member_id(id, 0x9), "T_Atsha204Ioctl_LOCK_Struct");
	SetType(get_member_id(id, 0xA), "T_Atsha204Ioctl_MAC_Struct");
	SetType(get_member_id(id, 0xB), "T_AtIoctl_GetDevType_Struct");
	id = get_struc_id("T_At88Ioctl_VSC_Struct");
	SetType(get_member_id(id, 0x0), "unsigned __int8[3]");
	id = get_struc_id("T_At88Ioctl_VP_Struct");
	SetType(get_member_id(id, 0x0), "unsigned __int8[3]");
	SetType(get_member_id(id, 0x3), "unsigned __int8");
	SetType(get_member_id(id, 0x4), "unsigned __int8");
	id = get_struc_id("T_At88Ioctl_AS_Struct");
	SetType(get_member_id(id, 0x0), "unsigned __int8");
	SetType(get_member_id(id, 0x1), "unsigned __int8[8]");
	SetType(get_member_id(id, 0x9), "unsigned __int8");
	id = get_struc_id("T_At88Ioctl_WR_Struct");
	SetType(get_member_id(id, 0x0), "unsigned __int8");
	SetType(get_member_id(id, 0x1), "unsigned __int8[256]");
	SetType(get_member_id(id, 0x101), "unsigned __int8");
	id = get_struc_id("T_At88Ioctl_SUZ_Struct");
	SetType(get_member_id(id, 0x0), "unsigned __int8");
	id = get_struc_id("T_At88Ioctl_RCS_Struct");
	SetType(get_member_id(id, 0x0), "unsigned __int8[2]");
	id = get_struc_id("T_At88Ioctl_WRF_Struct");
	SetType(get_member_id(id, 0x0), "unsigned __int8");
	id = get_struc_id("T_At88Ioctl_WKE_Struct");
	SetType(get_member_id(id, 0x0), "unsigned __int8");
	SetType(get_member_id(id, 0x1), "unsigned __int8[4]");
	id = get_struc_id("T_Atsha204Ioctl_WR_Struct");
	SetType(get_member_id(id, 0x0), "unsigned __int8");
	SetType(get_member_id(id, 0x1), "unsigned __int8");
	SetType(get_member_id(id, 0x2), "unsigned __int16");
	SetType(get_member_id(id, 0x4), "unsigned __int8[32]");
	id = get_struc_id("T_Atsha204Ioctl_LOCK_Struct");
	SetType(get_member_id(id, 0x0), "unsigned __int8");
	id = get_struc_id("T_Atsha204Ioctl_MAC_Struct");
	SetType(get_member_id(id, 0x0), "unsigned __int8");
	SetType(get_member_id(id, 0x1), "unsigned __int8[32]");
	SetType(get_member_id(id, 0x21), "unsigned __int8[32]");
	id = get_struc_id("T_AtIoctl_GetDevType_Struct");
	SetType(get_member_id(id, 0x0), "unsigned __int8");
	id = get_struc_id("T_FactoryInfoStruct");
	SetType(get_member_id(id, 0x0), "INT8U[10]");
	SetType(get_member_id(id, 0xA), "INT8U[16]");
	id = get_struc_id("T_AOAIoctlSetStrStruct");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned __int8[256]");
	id = get_struc_id("T_AOAIoctlSendStruct");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "unsigned __int8 *");
	id = get_struc_id("linger");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	id = get_struc_id("libusb_device_descriptor");
	SetType(get_member_id(id, 0x0), "uint8_t");
	SetType(get_member_id(id, 0x1), "uint8_t");
	SetType(get_member_id(id, 0x2), "uint16_t");
	SetType(get_member_id(id, 0x4), "uint8_t");
	SetType(get_member_id(id, 0x5), "uint8_t");
	SetType(get_member_id(id, 0x6), "uint8_t");
	SetType(get_member_id(id, 0x7), "uint8_t");
	SetType(get_member_id(id, 0x8), "uint16_t");
	SetType(get_member_id(id, 0xA), "uint16_t");
	SetType(get_member_id(id, 0xC), "uint16_t");
	SetType(get_member_id(id, 0xE), "uint8_t");
	SetType(get_member_id(id, 0xF), "uint8_t");
	SetType(get_member_id(id, 0x10), "uint8_t");
	SetType(get_member_id(id, 0x11), "uint8_t");
	id = get_struc_id("T_68013RWStruct");
	SetType(get_member_id(id, 0x0), "BOOLEAN");
	SetType(get_member_id(id, 0x1), "INT8U");
	SetType(get_member_id(id, 0x4), "INT8U *");
	SetType(get_member_id(id, 0x8), "INT32U");
	SetType(get_member_id(id, 0xC), "INT32U");
	SetType(get_member_id(id, 0x10), "INT32U");
	id = get_struc_id("T_AppleCPCtrlStruct");
	SetType(get_member_id(id, 0x0), "unsigned __int8");
	SetType(get_member_id(id, 0x1), "unsigned __int8");
	SetType(get_member_id(id, 0x2), "unsigned __int8[2048]");
	SetType(get_member_id(id, 0x804), "unsigned int");
	id = get_struc_id("T_Iap2LinkSyncInfoStruct");
	SetType(get_member_id(id, 0x0), "INT8U");
	SetType(get_member_id(id, 0x1), "INT8U");
	SetType(get_member_id(id, 0x2), "INT16U");
	SetType(get_member_id(id, 0x4), "INT16U");
	SetType(get_member_id(id, 0x6), "INT16U");
	SetType(get_member_id(id, 0x8), "INT8U");
	SetType(get_member_id(id, 0x9), "INT8U");
	SetType(get_member_id(id, 0xA), "INT8U");
	SetType(get_member_id(id, 0xB), "T_Iap2SessionInfoStruct[3]");
	id = get_struc_id("T_Iap2SessionInfoStruct");
	SetType(get_member_id(id, 0x0), "INT8U");
	SetType(get_member_id(id, 0x1), "INT8U");
	SetType(get_member_id(id, 0x2), "INT8U");
	id = get_struc_id("T_EncHeaderStruct");
	SetType(get_member_id(id, 0x0), "INT8U");
	SetType(get_member_id(id, 0x1), "INT32U");
	SetType(get_member_id(id, 0x5), "INT32U");
	SetType(get_member_id(id, 0x9), "INT8U");
	SetType(get_member_id(id, 0xA), "INT32U");
	SetType(get_member_id(id, 0xE), "INT32U");
	SetType(get_member_id(id, 0x12), "INT32U");
	SetType(get_member_id(id, 0x16), "INT8U");
	SetType(get_member_id(id, 0x17), "INT8U[16]");
	SetType(get_member_id(id, 0x27), "INT16U");
	id = get_struc_id("usbmuxd_device_info_t");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "unsigned __int8[41]");
	id = get_struc_id("usb_connection");
	SetType(get_member_id(id, 0x0), "BOOLEAN");
	SetType(get_member_id(id, 0x4), "BOOLEAN (*)(int)");
	SetType(get_member_id(id, 0x8), "int (*)(int *, int)");
	SetType(get_member_id(id, 0xC), "int (*)(int *)");
	SetType(get_member_id(id, 0x10), "int (*)(int, unsigned __int8 *, int)");
	SetType(get_member_id(id, 0x14), "int (*)(int, unsigned __int8 *, int)");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "BOOLEAN");
	SetType(get_member_id(id, 0x20), "int");
	SetType(get_member_id(id, 0x24), "BOOLEAN");
	SetType(get_member_id(id, 0x25), "BOOLEAN");
	SetType(get_member_id(id, 0x28), "conn_device_type");
	SetType(get_member_id(id, 0x2C), "pthread_mutex_t");
	id = get_struc_id("T_Iap2PacketStruct");
	SetType(get_member_id(id, 0x0), "INT8U");
	SetType(get_member_id(id, 0x1), "INT8U");
	SetType(get_member_id(id, 0x2), "INT8U");
	SetType(get_member_id(id, 0x4), "T_Iap2TimerStruct");
	SetType(get_member_id(id, 0xC), "INT32U");
	SetType(get_member_id(id, 0x10), "list_head_0");
	SetType(get_member_id(id, 0x18), "INT16U");
	SetType(get_member_id(id, 0x1C), "T_Iap2BuffStruct");
	id = get_struc_id("T_Iap2TimerStruct");
	SetType(get_member_id(id, 0x0), "BOOLEAN");
	SetType(get_member_id(id, 0x4), "INT32U");
	id = get_struc_id("list_head_0");
	SetType(get_member_id(id, 0x0), "list_head_0 *");
	SetType(get_member_id(id, 0x4), "list_head_0 *");
	id = get_struc_id("T_Iap2BuffStruct");
	SetType(get_member_id(id, 0x0), "INT8U *");
	SetType(get_member_id(id, 0x4), "INT32U");
	SetType(get_member_id(id, 0x8), "INT32U");
	id = get_struc_id("T_Iap2LinkStruct");
	SetType(get_member_id(id, 0x0), "BOOLEAN");
	SetType(get_member_id(id, 0x1), "INT8U[1024]");
	SetType(get_member_id(id, 0x404), "INT32U");
	SetType(get_member_id(id, 0x408), "INT32U");
	SetType(get_member_id(id, 0x40C), "BOOLEAN (*)(void)");
	SetType(get_member_id(id, 0x410), "INT32S (*)(INT8U *, INT32U)");
	SetType(get_member_id(id, 0x414), "INT32S (*)(INT8U *, INT32U *, INT32U, INT32U *)");
	SetType(get_member_id(id, 0x418), "pthread_mutex_t");
	SetType(get_member_id(id, 0x430), "T_Iap2QueueStruct");
	SetType(get_member_id(id, 0x758), "pthread_mutex_t");
	SetType(get_member_id(id, 0x770), "T_Iap2QueueStruct");
	SetType(get_member_id(id, 0xA98), "T_Iap2PacketStruct *");
	SetType(get_member_id(id, 0xA9C), "INT8U");
	SetType(get_member_id(id, 0xAA0), "T_Iap2TimerStruct");
	SetType(get_member_id(id, 0xAA8), "T_Iap2LinkSyncInfoStruct");
	SetType(get_member_id(id, 0xABC), "T_Iap2LinkSyncInfoStruct");
	SetType(get_member_id(id, 0xAD0), "T_Iap2LinkSyncInfoStruct");
	SetType(get_member_id(id, 0xAE4), "INT8U");
	SetType(get_member_id(id, 0xAE5), "INT8U");
	SetType(get_member_id(id, 0xAE8), "list_head_0");
	SetType(get_member_id(id, 0xAF0), "INT32U");
	SetType(get_member_id(id, 0xAF4), "BOOLEAN");
	SetType(get_member_id(id, 0xAF5), "INT8U");
	SetType(get_member_id(id, 0xAF6), "INT8U");
	SetType(get_member_id(id, 0xAF7), "INT8U");
	SetType(get_member_id(id, 0xAF8), "T_Iap2TimerStruct");
	SetType(get_member_id(id, 0xB00), "list_head_0");
	SetType(get_member_id(id, 0xB08), "INT32U");
	SetType(get_member_id(id, 0xB0C), "pthread_mutex_t");
	SetType(get_member_id(id, 0xB24), "T_Iap2QueueStruct");
	SetType(get_member_id(id, 0xE4C), "pthread_mutex_t[2]");
	SetType(get_member_id(id, 0xE7C), "T_Iap2EASessionInfo[2]");
	SetType(get_member_id(id, 0x1B24), "T_Iap2CtrlSessionInfo");
	SetType(get_member_id(id, 0x1E4C), "pthread_t");
	SetType(get_member_id(id, 0x1E50), "BOOLEAN");
	id = get_struc_id("T_Iap2QueueStruct");
	SetType(get_member_id(id, 0x0), "VOID *[200]");
	SetType(get_member_id(id, 0x320), "INT32U");
	SetType(get_member_id(id, 0x324), "INT32U");
	id = get_struc_id("T_Iap2EASessionInfo");
	SetType(get_member_id(id, 0x0), "BOOLEAN");
	SetType(get_member_id(id, 0x2), "INT16U");
	SetType(get_member_id(id, 0x4), "T_Iap2QueueStruct");
	SetType(get_member_id(id, 0x32C), "T_Iap2QueueStruct");
	id = get_struc_id("T_Iap2CtrlSessionInfo");
	SetType(get_member_id(id, 0x0), "T_Iap2QueueStruct");
	id = get_struc_id("T_FwPacketNameStruct");
	SetType(get_member_id(id, 0x0), "CHAR[200]");
	SetType(get_member_id(id, 0xC8), "INT32U");
	id = get_struc_id("T_HeaderStruct");
	SetType(get_member_id(id, 0x0), "T_HeaderDescStruct");
	SetType(get_member_id(id, 0x40), "T_FirmwareDescStruct[100]");
	id = get_struc_id("T_HeaderDescStruct");
	SetType(get_member_id(id, 0x0), "INT32U");
	SetType(get_member_id(id, 0x4), "INT16U");
	SetType(get_member_id(id, 0x6), "INT16U");
	SetType(get_member_id(id, 0x8), "INT32U");
	SetType(get_member_id(id, 0xC), "CHAR[16]");
	SetType(get_member_id(id, 0x1C), "CHAR[16]");
	SetType(get_member_id(id, 0x2C), "INT16U");
	SetType(get_member_id(id, 0x2E), "INT32U");
	SetType(get_member_id(id, 0x32), "INT32U");
	SetType(get_member_id(id, 0x36), "INT8U[10]");
	id = get_struc_id("T_FirmwareDescStruct");
	SetType(get_member_id(id, 0x0), "INT8U");
	SetType(get_member_id(id, 0x1), "U_FwType");
	SetType(get_member_id(id, 0x2), "INT8U");
	SetType(get_member_id(id, 0x3), "INT8U");
	SetType(get_member_id(id, 0x4), "INT32U");
	SetType(get_member_id(id, 0x8), "INT32U");
	SetType(get_member_id(id, 0xC), "INT32U");
	SetType(get_member_id(id, 0x10), "INT32U");
	SetType(get_member_id(id, 0x14), "INT8U[16]");
	SetType(get_member_id(id, 0x24), "INT8U[16]");
	id = get_struc_id("U_FwType");
	SetType(get_member_id(id, 0x0), "$0C61117780E431F907DAD10A3B4C1AEF");
	SetType(get_member_id(id, 0x1), "INT8U");
	id = get_struc_id("$0C61117780E431F907DAD10A3B4C1AEF");
	SetType(get_member_id(id, 0x0), "__int8");
	id = get_struc_id("T_UpdateSaveStruct");
	SetType(get_member_id(id, 0x0), "INT32U");
	SetType(get_member_id(id, 0x4), "INT32U");
	SetType(get_member_id(id, 0x8), "INT16U");
	id = get_struc_id("T_FirmwareAttrSruct");
	SetType(get_member_id(id, 0x0), "INT8U");
	SetType(get_member_id(id, 0x4), "INT32U");
	SetType(get_member_id(id, 0x8), "CHAR *");
	SetType(get_member_id(id, 0xC), "CHAR *");
	SetType(get_member_id(id, 0x10), "INT32S");
	SetType(get_member_id(id, 0x14), "INT32U");
	SetType(get_member_id(id, 0x18), "T_FirmwareDescStruct *(*)(FirmwareAttr *)");
	SetType(get_member_id(id, 0x1C), "T_FirmwareDescStruct *");
	SetType(get_member_id(id, 0x20), "INT32S (*)(FirmwareAttr *, INT32U *, INT32U *, BOOLEAN *)");
	SetType(get_member_id(id, 0x24), "INT32S");
	SetType(get_member_id(id, 0x28), "BOOLEAN");
	SetType(get_member_id(id, 0x2C), "INT32S");
	SetType(get_member_id(id, 0x30), "T_UpdateAttrStruct");
	SetType(get_member_id(id, 0x58), "INT32U");
	SetType(get_member_id(id, 0x5C), "INT32S (*)(FirmwareAttr *, T_UpdateAttrStruct *)");
	SetType(get_member_id(id, 0x60), "INT32S");
	SetType(get_member_id(id, 0x64), "INT32U");
	SetType(get_member_id(id, 0x68), "INT32S");
	id = get_struc_id("T_UpdateAttrStruct");
	SetType(get_member_id(id, 0x0), "INT32U");
	SetType(get_member_id(id, 0x4), "INT32U");
	SetType(get_member_id(id, 0x8), "BOOLEAN");
	SetType(get_member_id(id, 0xC), "INT32U");
	SetType(get_member_id(id, 0x10), "INT32U");
	SetType(get_member_id(id, 0x14), "BOOLEAN");
	SetType(get_member_id(id, 0x15), "BOOLEAN");
	SetType(get_member_id(id, 0x16), "INT8U[16]");
	id = get_struc_id("T_ParaAttrStruct");
	SetType(get_member_id(id, 0x0), "INT32S");
	SetType(get_member_id(id, 0x4), "INT32S");
	SetType(get_member_id(id, 0x8), "INT32S");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
}

static Structures_0(id) {
        auto mid;

	id = add_struc(-1,"Elf32_Dyn",0);
	id = add_struc(-1,"$9E389EF8DB18C75445DC45CE7C2FFB9B::$2798575F521600C1E26DD161E22996D8",1);
	id = add_struc(-1,"Elf32_Sym",0);
	id = add_struc(-1,"Elf32_Rel",0);
	id = add_struc(-1,"Elf32_Dyn::$A263394DDF3EC2D4B1B8448EDD30E249",1);
	id = add_struc(-1,"timeval",0);
	id = add_struc(-1,"stat",0);
	id = add_struc(-1,"timespec",0);
	id = add_struc(-1,"sockaddr_in",0);
	id = add_struc(-1,"in_addr",0);
	id = add_struc(-1,"MD5_CTX",0);
	id = add_struc(-1,"flock",0);
	id = add_struc(-1,"sigset_t",0);
	id = add_struc(-1,"AES_KEY",0);
	id = add_struc(-1,"tm",0);
	id = add_struc(-1,"pthread_mutexattr_t",1);
	id = add_struc(-1,"pthread_attr_t",1);
	id = add_struc(-1,"sched_param",0);
	id = add_struc(-1,"T_DJIProCmdAttrStruct",0);
	id = add_struc(-1,"T_DJIProtocolStruct",0);
	id = add_struc(-1,"T_CmdSendStruct",0);
	id = add_struc(-1,"pthread_mutex_t",1);
	id = add_struc(-1,"__pthread_mutex_s",0);
	id = add_struc(-1,"$0BD8A1A0B142CC6BF06E3D3E9C4F6678",1);
	id = add_struc(-1,"__pthread_slist_t",0);
	id = add_struc(-1,"pthread_cond_t",1);
	id = add_struc(-1,"$D1A3A25C3148BF6DB0FC6B6853FA383D",0);
	id = add_struc(-1,"input_event",0);
	id = add_struc(-1,"termios",0);
	id = add_struc(-1,"fd_set",0);
	id = add_struc(-1,"sha256_ctx",0);
	id = add_struc(-1,"U_At88IoctlUnion",1);
	id = add_struc(-1,"T_At88Ioctl_VSC_Struct",0);
	id = add_struc(-1,"T_At88Ioctl_VP_Struct",0);
	id = add_struc(-1,"T_At88Ioctl_AS_Struct",0);
	id = add_struc(-1,"T_At88Ioctl_WR_Struct",0);
	id = add_struc(-1,"T_At88Ioctl_SUZ_Struct",0);
	id = add_struc(-1,"T_At88Ioctl_RCS_Struct",0);
	id = add_struc(-1,"T_At88Ioctl_WRF_Struct",0);
	id = add_struc(-1,"T_At88Ioctl_WKE_Struct",0);
	id = add_struc(-1,"T_Atsha204Ioctl_WR_Struct",0);
	id = add_struc(-1,"T_Atsha204Ioctl_LOCK_Struct",0);
	id = add_struc(-1,"T_Atsha204Ioctl_MAC_Struct",0);
	id = add_struc(-1,"T_AtIoctl_GetDevType_Struct",0);
	id = add_struc(-1,"T_FactoryInfoStruct",0);
	id = add_struc(-1,"T_AOAIoctlSetStrStruct",0);
	id = add_struc(-1,"T_AOAIoctlSendStruct",0);
	id = add_struc(-1,"linger",0);
	id = add_struc(-1,"libusb_device_descriptor",0);
	id = add_struc(-1,"T_68013RWStruct",0);
	id = add_struc(-1,"T_AppleCPCtrlStruct",0);
	id = add_struc(-1,"T_Iap2LinkSyncInfoStruct",0);
	id = add_struc(-1,"T_Iap2SessionInfoStruct",0);
	id = add_struc(-1,"T_EncHeaderStruct",0);
	id = add_struc(-1,"usbmuxd_device_info_t",0);
	id = add_struc(-1,"usb_connection",0);
	id = add_struc(-1,"T_Iap2PacketStruct",0);
	id = add_struc(-1,"T_Iap2TimerStruct",0);
	id = add_struc(-1,"list_head_0",0);
	id = add_struc(-1,"T_Iap2BuffStruct",0);
	id = add_struc(-1,"T_Iap2LinkStruct",0);
	id = add_struc(-1,"T_Iap2QueueStruct",0);
	id = add_struc(-1,"T_Iap2EASessionInfo",0);
	id = add_struc(-1,"T_Iap2CtrlSessionInfo",0);
	id = add_struc(-1,"T_FwPacketNameStruct",0);
	id = add_struc(-1,"T_HeaderStruct",0);
	id = add_struc(-1,"T_HeaderDescStruct",0);
	id = add_struc(-1,"T_FirmwareDescStruct",0);
	id = add_struc(-1,"U_FwType",1);
	id = add_struc(-1,"$0C61117780E431F907DAD10A3B4C1AEF",0);
	id = add_struc(-1,"T_UpdateSaveStruct",0);
	id = add_struc(-1,"T_FirmwareAttrSruct",0);
	id = add_struc(-1,"T_UpdateAttrStruct",0);
	id = add_struc(-1,"T_ParaAttrStruct",0);
	
	id = get_struc_id("$9E389EF8DB18C75445DC45CE7C2FFB9B::$2798575F521600C1E26DD161E22996D8");
	mid = add_struc_member(id,"d_val",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"d_ptr",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Elf32_Dyn");
	mid = add_struc_member(id,"d_tag",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"d_un",	0X4,	0x60000400,	get_struc_id("$9E389EF8DB18C75445DC45CE7C2FFB9B::$2798575F521600C1E26DD161E22996D8"),	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Elf32_Sym");
	mid = add_struc_member(id,"st_name",	0,	0x20500400,	0X2280,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"st_value",	0X4,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"st_size",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"st_info",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"st_other",	0XD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"st_shndx",	0XE,	0x10000400,	-1,	2);
	set_struc_align(id,2);
	
	id = get_struc_id("Elf32_Rel");
	mid = add_struc_member(id,"r_offset",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"r_info",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Elf32_Dyn::$A263394DDF3EC2D4B1B8448EDD30E249");
	mid = add_struc_member(id,"d_val",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"d_ptr",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("timespec");
	mid = add_struc_member(id,"tv_sec",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tv_nsec",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("stat");
	mid = add_struc_member(id,"st_dev",	0,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"__pad1",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"st_ino",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"st_mode",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"st_nlink",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"st_uid",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"st_gid",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"st_rdev",	0X20,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"__pad2",	0X28,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"st_size",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"st_blksize",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"st_blocks",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"st_atim",	0X38,	0x60000400,	get_struc_id("timespec"),	8);
	mid = add_struc_member(id,"st_mtim",	0X40,	0x60000400,	get_struc_id("timespec"),	8);
	mid = add_struc_member(id,"st_ctim",	0X48,	0x60000400,	get_struc_id("timespec"),	8);
	mid = add_struc_member(id,"__unused4",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__unused5",	0X54,	0x20000400,	-1,	4);
	set_struc_align(id,3);
	
	id = get_struc_id("in_addr");
	mid = add_struc_member(id,"s_addr",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("sockaddr_in");
	mid = add_struc_member(id,"sin_family",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sin_port",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sin_addr",	0X4,	0x60000400,	get_struc_id("in_addr"),	4);
	mid = add_struc_member(id,"sin_zero",	0X8,	0x000400,	-1,	8);
	set_struc_align(id,2);
	
	id = get_struc_id("MD5_CTX");
	mid = add_struc_member(id,"A",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"B",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"C",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"D",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Nl",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Nh",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"data",	0X18,	0x20000400,	-1,	64);
	mid = add_struc_member(id,"num",	0X58,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("flock");
	mid = add_struc_member(id,"l_type",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"l_whence",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"l_start",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"l_len",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"l_pid",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("sigset_t");
	mid = add_struc_member(id,"__val",	0,	0x20000400,	-1,	128);
	set_struc_align(id,2);
	
	id = get_struc_id("AES_KEY");
	mid = add_struc_member(id,"rd_key",	0,	0x20000400,	-1,	240);
	mid = add_struc_member(id,"rounds",	0XF0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("tm");
	mid = add_struc_member(id,"tm_sec",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tm_min",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tm_hour",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tm_mday",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tm_mon",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tm_year",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tm_wday",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tm_yday",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tm_isdst",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tm_gmtoff",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tm_zone",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("pthread_mutexattr_t");
	mid = add_struc_member(id,"__size",	0,	0x000400,	-1,	4);
	mid = add_struc_member(id,"__align",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("pthread_attr_t");
	mid = add_struc_member(id,"__size",	0,	0x000400,	-1,	36);
	mid = add_struc_member(id,"__align",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("sched_param");
	mid = add_struc_member(id,"__sched_priority",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("T_DJIProCmdAttrStruct");
	mid = add_struc_member(id,"ucSender",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucReceiver",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucNeedAck",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucCmdSet",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucCmdID",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"bAck",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"usSeqNum",	0X6,	0x10000400,	-1,	2);
	set_struc_align(id,1);
	
	id = get_struc_id("T_DJIProtocolStruct");
	mid = add_struc_member(id,"ptHeader",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ulDataLength",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pucData",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("timeval");
	mid = add_struc_member(id,"tv_sec",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tv_usec",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("__pthread_slist_t");
	mid = add_struc_member(id,"__next",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("$0BD8A1A0B142CC6BF06E3D3E9C4F6678");
	mid = add_struc_member(id,"__spins",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__list",	0,	0x60000400,	get_struc_id("__pthread_slist_t"),	4);
	set_struc_align(id,2);
	
	id = get_struc_id("__pthread_mutex_s");
	mid = add_struc_member(id,"__lock",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__count",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__owner",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__kind",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__nusers",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_anon_0",	0X14,	0x60000400,	get_struc_id("$0BD8A1A0B142CC6BF06E3D3E9C4F6678"),	4);
	set_struc_align(id,2);
	
	id = get_struc_id("pthread_mutex_t");
	mid = add_struc_member(id,"__data",	0,	0x60000400,	get_struc_id("__pthread_mutex_s"),	24);
	mid = add_struc_member(id,"__size",	0,	0x000400,	-1,	24);
	mid = add_struc_member(id,"__align",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("$D1A3A25C3148BF6DB0FC6B6853FA383D");
	mid = add_struc_member(id,"__lock",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__futex",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__total_seq",	0X8,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"__wakeup_seq",	0X10,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"__woken_seq",	0X18,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"__mutex",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"__nwaiters",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__broadcast_seq",	0X28,	0x20000400,	-1,	4);
	set_struc_align(id,3);
	
	id = get_struc_id("pthread_cond_t");
	mid = add_struc_member(id,"__data",	0,	0x60000400,	get_struc_id("$D1A3A25C3148BF6DB0FC6B6853FA383D"),	48);
	mid = add_struc_member(id,"__size",	0,	0x000400,	-1,	48);
	mid = add_struc_member(id,"__align",	0,	0x30000400,	-1,	8);
	set_struc_align(id,3);
	
	id = get_struc_id("T_CmdSendStruct");
	mid = add_struc_member(id,"ucSender",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucReceiver",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"usSeqNum",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ucAckType",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucCmdSet",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucCmdID",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"tTime",	0X8,	0x60000400,	get_struc_id("timeval"),	8);
	mid = add_struc_member(id,"ulTimeoutms",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"mutex",	0X14,	0x60000400,	get_struc_id("pthread_mutex_t"),	24);
	mid = add_struc_member(id,"cond",	0X30,	0x60000400,	get_struc_id("pthread_cond_t"),	48);
	mid = add_struc_member(id,"pucAckData",	0X60,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pulRealLen",	0X64,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ulMaxLen",	0X68,	0x20000400,	-1,	4);
	set_struc_align(id,3);
	
	id = get_struc_id("input_event");
	mid = add_struc_member(id,"time",	0,	0x60000400,	get_struc_id("timeval"),	8);
	mid = add_struc_member(id,"type",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"code",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"value",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("termios");
	mid = add_struc_member(id,"c_iflag",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"c_oflag",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"c_cflag",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"c_lflag",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"c_line",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"c_cc",	0X11,	0x000400,	-1,	32);
	mid = add_struc_member(id,"c_ispeed",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"c_ospeed",	0X38,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("fd_set");
	mid = add_struc_member(id,"__fds_bits",	0,	0x20000400,	-1,	128);
	set_struc_align(id,2);
	
	id = get_struc_id("sha256_ctx");
	mid = add_struc_member(id,"tot_len",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"len",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"block",	0X8,	0x000400,	-1,	128);
	mid = add_struc_member(id,"h",	0X88,	0x20000400,	-1,	32);
	set_struc_align(id,2);
	
	id = get_struc_id("T_At88Ioctl_VSC_Struct");
	mid = add_struc_member(id,"aucPassWord",	0,	0x000400,	-1,	3);
	
	id = get_struc_id("T_At88Ioctl_VP_Struct");
	mid = add_struc_member(id,"aucPassWord",	0,	0x000400,	-1,	3);
	mid = add_struc_member(id,"ucSet",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucRW",	0X4,	0x000400,	-1,	1);
	
	id = get_struc_id("T_At88Ioctl_AS_Struct");
	mid = add_struc_member(id,"ucSet",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"aucSeed",	0X1,	0x000400,	-1,	8);
	mid = add_struc_member(id,"ucEncrypt",	0X9,	0x000400,	-1,	1);
	
	id = get_struc_id("T_At88Ioctl_WR_Struct");
	mid = add_struc_member(id,"ucAddr",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"aucData",	0X1,	0x000400,	-1,	256);
	mid = add_struc_member(id,"ucCount",	0X101,	0x000400,	-1,	1);
	
	id = get_struc_id("T_At88Ioctl_SUZ_Struct");
	mid = add_struc_member(id,"ucZoneNumber",	0,	0x000400,	-1,	1);
	
	id = get_struc_id("T_At88Ioctl_RCS_Struct");
	mid = add_struc_member(id,"aucCheckSum",	0,	0x000400,	-1,	2);
	
	id = get_struc_id("T_At88Ioctl_WRF_Struct");
	mid = add_struc_member(id,"ucFuse",	0,	0x000400,	-1,	1);
	
	id = get_struc_id("T_At88Ioctl_WKE_Struct");
	mid = add_struc_member(id,"ucAddr",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"aucEncrypt",	0X1,	0x000400,	-1,	4);
	
	id = get_struc_id("T_Atsha204Ioctl_WR_Struct");
	mid = add_struc_member(id,"ucZone",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucSize",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"usAddr",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"aucData",	0X4,	0x000400,	-1,	32);
	set_struc_align(id,1);
	
	id = get_struc_id("T_Atsha204Ioctl_LOCK_Struct");
	mid = add_struc_member(id,"ucZone",	0,	0x000400,	-1,	1);
	
	id = get_struc_id("T_Atsha204Ioctl_MAC_Struct");
	mid = add_struc_member(id,"ucKey",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"aucChallenge",	0X1,	0x000400,	-1,	32);
	mid = add_struc_member(id,"aucResponse",	0X21,	0x000400,	-1,	32);
	
	id = get_struc_id("T_AtIoctl_GetDevType_Struct");
	mid = add_struc_member(id,"ucDevType",	0,	0x000400,	-1,	1);
	
	id = get_struc_id("U_At88IoctlUnion");
	mid = add_struc_member(id,"tVSC",	0,	0x60000400,	get_struc_id("T_At88Ioctl_VSC_Struct"),	3);
	mid = add_struc_member(id,"tVP",	0,	0x60000400,	get_struc_id("T_At88Ioctl_VP_Struct"),	5);
	mid = add_struc_member(id,"tAS",	0,	0x60000400,	get_struc_id("T_At88Ioctl_AS_Struct"),	10);
	mid = add_struc_member(id,"tWR",	0,	0x60000400,	get_struc_id("T_At88Ioctl_WR_Struct"),	258);
	mid = add_struc_member(id,"tSUZ",	0,	0x60000400,	get_struc_id("T_At88Ioctl_SUZ_Struct"),	1);
	mid = add_struc_member(id,"tRCS",	0,	0x60000400,	get_struc_id("T_At88Ioctl_RCS_Struct"),	2);
	mid = add_struc_member(id,"tWRF",	0,	0x60000400,	get_struc_id("T_At88Ioctl_WRF_Struct"),	1);
	mid = add_struc_member(id,"tWKE",	0,	0x60000400,	get_struc_id("T_At88Ioctl_WKE_Struct"),	5);
	mid = add_struc_member(id,"tAtsh204WR",	0,	0x60000400,	get_struc_id("T_Atsha204Ioctl_WR_Struct"),	36);
	mid = add_struc_member(id,"tAtsh204LOCK",	0,	0x60000400,	get_struc_id("T_Atsha204Ioctl_LOCK_Struct"),	1);
	mid = add_struc_member(id,"tAtsh204MAC",	0,	0x60000400,	get_struc_id("T_Atsha204Ioctl_MAC_Struct"),	65);
	mid = add_struc_member(id,"tGetDevType",	0,	0x60000400,	get_struc_id("T_AtIoctl_GetDevType_Struct"),	1);
	set_struc_align(id,1);
	
	id = get_struc_id("T_FactoryInfoStruct");
	mid = add_struc_member(id,"aucBn",	0,	0x000400,	-1,	10);
	mid = add_struc_member(id,"aucSn",	0XA,	0x000400,	-1,	16);
	
	id = get_struc_id("T_AOAIoctlSetStrStruct");
	mid = add_struc_member(id,"uiID",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"acBuff",	0X4,	0x000400,	-1,	256);
	set_struc_align(id,2);
	
	id = get_struc_id("T_AOAIoctlSendStruct");
	mid = add_struc_member(id,"iPort",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"iLength",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pucData",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("linger");
	mid = add_struc_member(id,"l_onoff",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"l_linger",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("libusb_device_descriptor");
	mid = add_struc_member(id,"bLength",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"bDescriptorType",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"bcdUSB",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"bDeviceClass",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"bDeviceSubClass",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"bDeviceProtocol",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"bMaxPacketSize0",	0X7,	0x000400,	-1,	1);
	mid = add_struc_member(id,"idVendor",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"idProduct",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"bcdDevice",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"iManufacturer",	0XE,	0x000400,	-1,	1);
	mid = add_struc_member(id,"iProduct",	0XF,	0x000400,	-1,	1);
	mid = add_struc_member(id,"iSerialNumber",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"bNumConfigurations",	0X11,	0x000400,	-1,	1);
	set_struc_align(id,1);
	
	id = get_struc_id("T_68013RWStruct");
	mid = add_struc_member(id,"bIsRead",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucEP",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"pucBuff",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ulMaxLen",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ulRealLen",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ulTimeOut",	0X10,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("T_AppleCPCtrlStruct");
	mid = add_struc_member(id,"ucReadWrite",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucReg",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"aucBuff",	0X2,	0x000400,	-1,	2048);
	mid = add_struc_member(id,"uiLen",	0X804,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("T_EncHeaderStruct");
	mid = add_struc_member(id,"ucID",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ulProtocolVersion",	0X1,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ulFirmwareVersion",	0X5,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ucEncryptType",	0X9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ulRawLength",	0XA,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ulAuthorID",	0XE,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ulRawLastModify",	0X12,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ucRawCheckType",	0X16,	0x000400,	-1,	1);
	mid = add_struc_member(id,"aucRawCheckMD5",	0X17,	0x000400,	-1,	16);
	mid = add_struc_member(id,"usHeaderCrc",	0X27,	0x10000400,	-1,	2);
	
	id = get_struc_id("usbmuxd_device_info_t");
	mid = add_struc_member(id,"handle",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"product_id",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"udid",	0X8,	0x000400,	-1,	41);
	set_struc_align(id,2);
	
	id = get_struc_id("usb_connection");
	mid = add_struc_member(id,"bUsed",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"fun_is_conn",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"fun_conn",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"fun_close",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"fun_recv",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"fun_send",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"port",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bCanRecv",	0X1C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"sfd",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bFirstRecv",	0X24,	0x000400,	-1,	1);
	mid = add_struc_member(id,"conn_state",	0X25,	0x000400,	-1,	1);
	mid = add_struc_member(id,"type",	0X28,	0x28800400,	get_enum("conn_device_type"),	4);
	mid = add_struc_member(id,"sendmutex",	0X2C,	0x60000400,	get_struc_id("pthread_mutex_t"),	24);
	set_struc_align(id,2);
	
	id = get_struc_id("T_Iap2TimerStruct");
	mid = add_struc_member(id,"bValid",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ulTimeMS",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("list_head_0");
	mid = add_struc_member(id,"next",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"prev",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("T_Iap2BuffStruct");
	mid = add_struc_member(id,"pucBuff",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ulMaxLen",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ulRealLen",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("T_Iap2PacketStruct");
	mid = add_struc_member(id,"ucParseState",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucType",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucSessionType",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"tTimer",	0X4,	0x60000400,	get_struc_id("T_Iap2TimerStruct"),	8);
	mid = add_struc_member(id,"ulRetransmitCnt",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tlist",	0X10,	0x60000400,	get_struc_id("list_head_0"),	8);
	mid = add_struc_member(id,"usDataLen",	0X18,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"tBuff",	0X1C,	0x60000400,	get_struc_id("T_Iap2BuffStruct"),	12);
	set_struc_align(id,2);
	
	id = get_struc_id("T_Iap2SessionInfoStruct");
	mid = add_struc_member(id,"ucID",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucType",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucVersion",	0X2,	0x000400,	-1,	1);
	
	id = get_struc_id("T_Iap2LinkSyncInfoStruct");
	mid = add_struc_member(id,"ucVersion",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucMaxOutStandingPkt",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"usMaxPktLen",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"usRetransmitTimeout",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"usCumAckTimeout",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ucMaxRetransmit",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucMaxCumAck",	0X9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucSessionInfoNum",	0XA,	0x000400,	-1,	1);
	mid = add_struc_member(id,"tSessionInfo",	0XB,	0x60000400,	get_struc_id("T_Iap2SessionInfoStruct"),	9);
	set_struc_align(id,1);
	
	id = get_struc_id("T_Iap2QueueStruct");
	mid = add_struc_member(id,"pavData",	0,	0x25500400,	0XFFFFFFFF,	800,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ulHead",	0X320,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ulTail",	0X324,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("T_Iap2EASessionInfo");
	mid = add_struc_member(id,"bVaild",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"usID",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"tRecv",	0X4,	0x60000400,	get_struc_id("T_Iap2QueueStruct"),	808);
	mid = add_struc_member(id,"tSend",	0X32C,	0x60000400,	get_struc_id("T_Iap2QueueStruct"),	808);
	set_struc_align(id,2);
	
	id = get_struc_id("T_Iap2CtrlSessionInfo");
	mid = add_struc_member(id,"tRecv",	0,	0x60000400,	get_struc_id("T_Iap2QueueStruct"),	808);
	set_struc_align(id,2);
	
	id = get_struc_id("T_Iap2LinkStruct");
	mid = add_struc_member(id,"bConnected",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"aucTransportRecvBuff",	0X1,	0x000400,	-1,	1024);
	mid = add_struc_member(id,"ulTransportRecvBuffLen",	0X404,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ulTransportRecvBuffState",	0X408,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pTransportIsConnect",	0X40C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pTransportSend",	0X410,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pTransportRecv",	0X414,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SendFreePoolmutex",	0X418,	0x60000400,	get_struc_id("pthread_mutex_t"),	24);
	mid = add_struc_member(id,"tSendFreePool",	0X430,	0x60000400,	get_struc_id("T_Iap2QueueStruct"),	808);
	mid = add_struc_member(id,"RecvFreePoolmutex",	0X758,	0x60000400,	get_struc_id("pthread_mutex_t"),	24);
	mid = add_struc_member(id,"tRecvFreePool",	0X770,	0x60000400,	get_struc_id("T_Iap2QueueStruct"),	808);
	mid = add_struc_member(id,"pCurRecv",	0XA98,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ucState",	0XA9C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"tLinkSendTimer",	0XAA0,	0x60000400,	get_struc_id("T_Iap2TimerStruct"),	8);
	mid = add_struc_member(id,"tInitSyncInfo",	0XAA8,	0x60000400,	get_struc_id("T_Iap2LinkSyncInfoStruct"),	20);
	mid = add_struc_member(id,"tNegoSyncInfo",	0XABC,	0x60000400,	get_struc_id("T_Iap2LinkSyncInfoStruct"),	20);
	mid = add_struc_member(id,"tDeviceSyncInfo",	0XAD0,	0x60000400,	get_struc_id("T_Iap2LinkSyncInfoStruct"),	20);
	mid = add_struc_member(id,"ucInitSendSeq",	0XAE4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucNextSendSeq",	0XAE5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"tSendWindowList",	0XAE8,	0x60000400,	get_struc_id("list_head_0"),	8);
	mid = add_struc_member(id,"ulSendWindowNum",	0XAF0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bRecvSyncAck",	0XAF4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucInitRecvSeq",	0XAF5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucNoAckRecvSeq",	0XAF6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucNextRecvSeq",	0XAF7,	0x000400,	-1,	1);
	mid = add_struc_member(id,"tRecvUnAckTimer",	0XAF8,	0x60000400,	get_struc_id("T_Iap2TimerStruct"),	8);
	mid = add_struc_member(id,"tRecvOutSeqWindowList",	0XB00,	0x60000400,	get_struc_id("list_head_0"),	8);
	mid = add_struc_member(id,"ulRecvOutSeqWindowNum",	0XB08,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SendQueuemutex",	0XB0C,	0x60000400,	get_struc_id("pthread_mutex_t"),	24);
	mid = add_struc_member(id,"tSendQueue",	0XB24,	0x60000400,	get_struc_id("T_Iap2QueueStruct"),	808);
	mid = add_struc_member(id,"EASessionInfomutex",	0XE4C,	0x60000400,	get_struc_id("pthread_mutex_t"),	48);
	mid = add_struc_member(id,"atEASessionInfo",	0XE7C,	0x60000400,	get_struc_id("T_Iap2EASessionInfo"),	3240);
	mid = add_struc_member(id,"tCtrlSessionInfo",	0X1B24,	0x60000400,	get_struc_id("T_Iap2CtrlSessionInfo"),	808);
	mid = add_struc_member(id,"tid_ControlSession",	0X1E4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bControlSessionRun",	0X1E50,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("T_FwPacketNameStruct");
	mid = add_struc_member(id,"acName",	0,	0x000400,	-1,	200);
	mid = add_struc_member(id,"Version",	0XC8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("T_HeaderDescStruct");
	mid = add_struc_member(id,"uiMagicNum",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"usFormatVersion",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"usHeaderLength",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"uiBuildData",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"acManufacturerName",	0XC,	0x000400,	-1,	16);
	mid = add_struc_member(id,"acProductName",	0X1C,	0x000400,	-1,	16);
	mid = add_struc_member(id,"usFirmwareNum",	0X2C,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ulFirmwareVersion",	0X2E,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ulAcceptDowngradeVersion",	0X32,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"aucResv1",	0X36,	0x000400,	-1,	10);
	set_struc_align(id,2);
	
	id = get_struc_id("$0C61117780E431F907DAD10A3B4C1AEF");
	mid = add_struc_member(id,"_bf0",	0,	0x000400,	-1,	1);
	
	id = get_struc_id("U_FwType");
	mid = add_struc_member(id,"u",	0,	0x60000400,	get_struc_id("$0C61117780E431F907DAD10A3B4C1AEF"),	1);
	mid = add_struc_member(id,"ucData",	0,	0x000400,	-1,	1);
	
	id = get_struc_id("T_FirmwareDescStruct");
	mid = add_struc_member(id,"ucModuleID",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"uFwType",	0X1,	0x60000400,	get_struc_id("U_FwType"),	1);
	mid = add_struc_member(id,"ucPrority",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ucResv1",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"uiVersion",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uiOffset",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uiLength",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uiRawLength",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"aucMD5",	0X14,	0x000400,	-1,	16);
	mid = add_struc_member(id,"aucRawMD5",	0X24,	0x000400,	-1,	16);
	set_struc_align(id,2);
	
	id = get_struc_id("T_HeaderStruct");
	mid = add_struc_member(id,"tHeaderDesc",	0,	0x60000400,	get_struc_id("T_HeaderDescStruct"),	64);
	mid = add_struc_member(id,"atFirmwareDesc",	0X40,	0x60000400,	get_struc_id("T_FirmwareDescStruct"),	5200);
	set_struc_align(id,2);
	
	id = get_struc_id("T_UpdateSaveStruct");
	mid = add_struc_member(id,"ulCurVersion",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ulAcceptDowngradeVersion",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"usCrc",	0X8,	0x10000400,	-1,	2);
	set_struc_align(id,1);
	
	id = get_struc_id("T_UpdateAttrStruct");
	mid = add_struc_member(id,"ulRebootWaitTime",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ulRebootToNomalTime",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bNeedRebootBeforeUpgrade",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ulLoadStartTime",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ulFlashEraseTime",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bNeedRebootAfterUpgrade",	0X14,	0x000400,	-1,	1);
	mid = add_struc_member(id,"bEncrypt",	0X15,	0x000400,	-1,	1);
	mid = add_struc_member(id,"aucMD5",	0X16,	0x000400,	-1,	16);
	set_struc_align(id,2);
	
	id = get_struc_id("T_FirmwareAttrSruct");
	mid = add_struc_member(id,"ucID",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ulChannel",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pcFile",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pcFileLocal",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"slPriority",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ulRetryMax",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pGetFirmwareDesc",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ptDesc",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pGetCurrentVersion",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"slVersionCompare",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bAbnormalVersion",	0X28,	0x000400,	-1,	1);
	mid = add_struc_member(id,"slCheckState",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tUpdateAttr",	0X30,	0x60000400,	get_struc_id("T_UpdateAttrStruct"),	40);
	mid = add_struc_member(id,"ulUpdateFinishWaitTime",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pUpdate",	0X5C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"slUpdateState",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ulRetryTimes",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"slUpdateResult",	0X68,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("T_ParaAttrStruct");
	mid = add_struc_member(id,"slMin",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"slMax",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"slDefault",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
	id = Structures_0(id);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	set_cmt	(0,	"File format: \\x7FELF",	0);
	update_extra_cmt		(0,	E_PREV + 0,	"; File Name   : C1_FW_V01.06.0000_m1300-libcommon.so");
	update_extra_cmt		(0,	E_PREV + 1,	"; Format      : ELF for ARM (Shared object)");
	update_extra_cmt		(0,	E_PREV + 2,	"; Needed Library 'librt.so.1'");
	update_extra_cmt		(0,	E_PREV + 3,	"; Needed Library 'libpthread.so.0'");
	update_extra_cmt		(0,	E_PREV + 4,	"; Needed Library 'libusb-1.0.so.0'");
	update_extra_cmt		(0,	E_PREV + 5,	"; Needed Library 'libusbmuxd.so.2'");
	update_extra_cmt		(0,	E_PREV + 6,	"; Needed Library 'libplist.so.1'");
	update_extra_cmt		(0,	E_PREV + 7,	"; Needed Library 'libxml2.so.2'");
	update_extra_cmt		(0,	E_PREV + 8,	"; Needed Library 'libz.so.1'");
	update_extra_cmt		(0,	E_PREV + 9,	"; Needed Library 'libgcc_s.so.1'");
	update_extra_cmt		(0,	E_PREV + 10,	"; Needed Library 'libc.so.6'");
	update_extra_cmt		(0,	E_PREV + 11,	"; ");
	update_extra_cmt		(0,	E_PREV + 12,	"; EABI version: 5");
	update_extra_cmt		(0,	E_PREV + 13,	"; ");
	update_extra_cmt		(0,	E_PREV + 14,	"; Source File : 'crtstuff.c'");
	update_extra_cmt		(0,	E_PREV + 15,	"; Source File : 'common.c'");
	update_extra_cmt		(0,	E_PREV + 16,	"; Source File : 'dealprotocol.c'");
	update_extra_cmt		(0,	E_PREV + 17,	"; Source File : 'dec_keyscan.c'");
	update_extra_cmt		(0,	E_PREV + 18,	"; Source File : 'queue.c'");
	update_extra_cmt		(0,	E_PREV + 19,	"; Source File : 'serial.c'");
	update_extra_cmt		(0,	E_PREV + 20,	"; Source File : 'sha256.c'");
	update_extra_cmt		(0,	E_PREV + 21,	"; Source File : 'at88.c'");
	update_extra_cmt		(0,	E_PREV + 22,	"; Source File : 'adbchannel.c'");
	update_extra_cmt		(0,	E_PREV + 23,	"; Source File : 'aoachannel.c'");
	update_extra_cmt		(0,	E_PREV + 24,	"; Source File : 'muxchannel.c'");
	update_extra_cmt		(0,	E_PREV + 25,	"; Source File : 'tcpconnect.c'");
	update_extra_cmt		(0,	E_PREV + 26,	"; Source File : 'usbsocket.c'");
	update_extra_cmt		(0,	E_PREV + 27,	"; Source File : 'mylibusb.c'");
	update_extra_cmt		(0,	E_PREV + 28,	"; Source File : 'applecp.c'");
	update_extra_cmt		(0,	E_PREV + 29,	"; Source File : 'iap2link.c'");
	update_extra_cmt		(0,	E_PREV + 30,	"; Source File : 'iap2packet.c'");
	update_extra_cmt		(0,	E_PREV + 31,	"; Source File : 'iap2session.c'");
	update_extra_cmt		(0,	E_PREV + 32,	"; Source File : 'iap2usbdevicetransport.c'");
	update_extra_cmt		(0,	E_PREV + 33,	"; Source File : 'iap2utility.c'");
	update_extra_cmt		(0,	E_PREV + 34,	"; Source File : 'usbupdate_common.c'");
	update_extra_cmt		(0,	E_PREV + 35,	"; Source File : 'para.c'");
	update_extra_cmt		(0,	E_PREV + 36,	"; Source File : 'md5_dgst.c'");
	update_extra_cmt		(0,	E_PREV + 37,	"; Source File : 'aes_core.c'");
	update_extra_cmt		(0,	E_PREV + 38,	"; Source File : 'aes_cbc.c'");
	update_extra_cmt		(0,	E_PREV + 39,	"; Source File : 'bpabi.c'");
	update_extra_cmt		(0,	E_PREV + 40,	"; Source File : 'libgcc2.c'");
	update_extra_cmt		(0,	E_PREV + 41,	"; Source File : 'stat.c'");
	update_extra_cmt		(0,	E_PREV + 42,	"; Source File : 'crtstuff.c'");
	create_dword	(x=0);
	op_hex		(x,	0);
	set_cmt	(0X4,	"File class: 32-bit",	0);
	create_byte	(x=0X4);
	op_hex		(x,	0);
	set_cmt	(0X5,	"Data encoding: little-endian",	0);
	create_byte	(x=0X5);
	op_hex		(x,	0);
	set_cmt	(0X6,	"File version",	0);
	create_byte	(x=0X6);
	op_hex		(x,	0);
	set_cmt	(0X7,	"OS/ABI: UNIX System V ABI",	0);
	create_byte	(x=0X7);
	op_hex		(x,	0);
	set_cmt	(0X8,	"ABI Version",	0);
	create_byte	(x=0X8);
	op_hex		(x,	0);
	set_cmt	(0X9,	"Padding",	0);
	create_byte	(x=0X9);
	make_array	(x,	0X7);
	op_hex		(x,	0);
	set_cmt	(0X10,	"File type: Shared object",	0);
	create_word	(x=0X10);
	op_hex		(x,	0);
	set_cmt	(0X12,	"Machine: ARM",	0);
	create_word	(x=0X12);
	op_hex		(x,	0);
	set_cmt	(0X14,	"File version",	0);
	create_dword	(x=0X14);
	op_hex		(x,	0);
	set_cmt	(0X18,	"Entry point",	0);
	create_dword	(x=0X18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X1C,	"PHT file offset",	0);
	create_dword	(x=0X1C);
	op_hex		(x,	0);
	set_cmt	(0X20,	"SHT file offset",	0);
	create_dword	(x=0X20);
	op_hex		(x,	0);
	set_cmt	(0X24,	"Processor-specific flags",	0);
	create_dword	(x=0X24);
	op_hex		(x,	0);
	set_cmt	(0X28,	"ELF header size",	0);
	create_word	(x=0X28);
	op_hex		(x,	0);
	set_cmt	(0X2A,	"PHT entry size",	0);
	create_word	(x=0X2A);
	op_hex		(x,	0);
	set_cmt	(0X2C,	"Number of entries in PHT",	0);
	create_word	(x=0X2C);
	op_hex		(x,	0);
	set_cmt	(0X2E,	"SHT entry size",	0);
	create_word	(x=0X2E);
	op_hex		(x,	0);
	set_cmt	(0X30,	"Number of entries in SHT",	0);
	create_word	(x=0X30);
	op_hex		(x,	0);
	set_cmt	(0X32,	"SHT entry index for string table",	0);
	create_word	(x=0X32);
	op_hex		(x,	0);
	set_cmt	(0X34,	"Type: EXIDX",	0);
	update_extra_cmt		(0X34,	E_PREV + 0,	"; ELF32 Program Header");
	update_extra_cmt		(0X34,	E_PREV + 1,	"; PHT Entry 0");
	create_dword	(x=0X34);
	op_hex		(x,	0);
	set_cmt	(0X38,	"File offset",	0);
	create_dword	(x=0X38);
	op_hex		(x,	0);
	set_cmt	(0X3C,	"Virtual address",	0);
	create_dword	(x=0X3C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X40,	"Physical address",	0);
	create_dword	(x=0X40);
	op_hex		(x,	0);
	set_cmt	(0X44,	"Size in file image",	0);
	create_dword	(x=0X44);
	op_hex		(x,	0);
	set_cmt	(0X48,	"Size in memory image",	0);
	create_dword	(x=0X48);
	op_hex		(x,	0);
	set_cmt	(0X4C,	"Flags",	0);
	create_dword	(x=0X4C);
	op_hex		(x,	0);
	set_cmt	(0X50,	"Alignment",	0);
	create_dword	(x=0X50);
	op_hex		(x,	0);
	set_cmt	(0X54,	"Type: LOAD",	0);
	update_extra_cmt		(0X54,	E_PREV + 0,	"; PHT Entry 1");
	create_dword	(x=0X54);
	op_hex		(x,	0);
	set_cmt	(0X58,	"File offset",	0);
	create_dword	(x=0X58);
	op_hex		(x,	0);
	set_cmt	(0X5C,	"Virtual address",	0);
	create_dword	(0X5C);
	set_cmt	(0X60,	"Physical address",	0);
	create_dword	(x=0X60);
	op_hex		(x,	0);
	set_cmt	(0X64,	"Size in file image",	0);
	create_dword	(x=0X64);
	op_hex		(x,	0);
	set_cmt	(0X68,	"Size in memory image",	0);
	create_dword	(x=0X68);
	op_hex		(x,	0);
	set_cmt	(0X6C,	"Flags",	0);
	create_dword	(x=0X6C);
	op_hex		(x,	0);
	set_cmt	(0X70,	"Alignment",	0);
	create_dword	(x=0X70);
	op_hex		(x,	0);
	set_cmt	(0X74,	"Type: LOAD",	0);
	update_extra_cmt		(0X74,	E_PREV + 0,	"; PHT Entry 2");
	create_dword	(x=0X74);
	op_hex		(x,	0);
	set_cmt	(0X78,	"File offset",	0);
	create_dword	(x=0X78);
	op_hex		(x,	0);
	set_cmt	(0X7C,	"Virtual address",	0);
	create_dword	(x=0X7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X80,	"Physical address",	0);
	create_dword	(x=0X80);
	op_hex		(x,	0);
	set_cmt	(0X84,	"Size in file image",	0);
	create_dword	(x=0X84);
	op_hex		(x,	0);
	set_cmt	(0X88,	"Size in memory image",	0);
	create_dword	(x=0X88);
	op_hex		(x,	0);
	set_cmt	(0X8C,	"Flags",	0);
	create_dword	(x=0X8C);
	op_hex		(x,	0);
	set_cmt	(0X90,	"Alignment",	0);
	create_dword	(x=0X90);
	op_hex		(x,	0);
	set_cmt	(0X94,	"Type: DYNAMIC",	0);
	update_extra_cmt		(0X94,	E_PREV + 0,	"; PHT Entry 3");
	create_dword	(x=0X94);
	op_hex		(x,	0);
	set_cmt	(0X98,	"File offset",	0);
	create_dword	(x=0X98);
	op_hex		(x,	0);
	set_cmt	(0X9C,	"Virtual address",	0);
	create_dword	(x=0X9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XA0,	"Physical address",	0);
	create_dword	(x=0XA0);
	op_hex		(x,	0);
	set_cmt	(0XA4,	"Size in file image",	0);
	create_dword	(x=0XA4);
	op_hex		(x,	0);
	set_cmt	(0XA8,	"Size in memory image",	0);
	create_dword	(x=0XA8);
	op_hex		(x,	0);
	set_cmt	(0XAC,	"Flags",	0);
	create_dword	(x=0XAC);
	op_hex		(x,	0);
	set_cmt	(0XB0,	"Alignment",	0);
	create_dword	(x=0XB0);
	op_hex		(x,	0);
	set_cmt	(0XB4,	"Type: STACK",	0);
	update_extra_cmt		(0XB4,	E_PREV + 0,	"; PHT Entry 4");
	create_dword	(x=0XB4);
	op_hex		(x,	0);
	set_cmt	(0XB8,	"File offset",	0);
	create_dword	(x=0XB8);
	op_hex		(x,	0);
	set_cmt	(0XBC,	"Virtual address",	0);
	create_dword	(0XBC);
	set_cmt	(0XC0,	"Physical address",	0);
	create_dword	(x=0XC0);
	op_hex		(x,	0);
	set_cmt	(0XC4,	"Size in file image",	0);
	create_dword	(x=0XC4);
	op_hex		(x,	0);
	set_cmt	(0XC8,	"Size in memory image",	0);
	create_dword	(x=0XC8);
	op_hex		(x,	0);
	set_cmt	(0XCC,	"Flags",	0);
	create_dword	(x=0XCC);
	op_hex		(x,	0);
	set_cmt	(0XD0,	"Alignment",	0);
	create_dword	(x=0XD0);
	op_hex		(x,	0);
	update_extra_cmt		(0XD4,	E_PREV + 0,	"; ELF Hash Table");
	create_dword	(x=0XD4);
	op_hex		(x,	0);
	set_name	(0XD4,	"elf_hash_nbucket");
	create_dword	(x=0XD8);
	op_hex		(x,	0);
	set_name	(0XD8,	"elf_hash_nchain");
	create_dword	(x=0XDC);
	make_array	(x,	0X107);
	op_hex		(x,	0);
	set_name	(0XDC,	"elf_hash_bucket");
	create_dword	(x=0X4F8);
	make_array	(x,	0X17A);
	op_hex		(x,	0);
	set_name	(0X4F8,	"elf_hash_chain");
	update_extra_cmt		(0XAE0,	E_PREV + 0,	"; ELF Symbol Table");
	MakeStruct	(0XAE0,	"Elf32_Sym");
	MakeStruct	(0XAF0,	"Elf32_Sym");
	MakeStruct	(0XB00,	"Elf32_Sym");
	MakeStruct	(0XB10,	"Elf32_Sym");
	MakeStruct	(0XB20,	"Elf32_Sym");
	MakeStruct	(0XB30,	"Elf32_Sym");
	MakeStruct	(0XB40,	"Elf32_Sym");
	MakeStruct	(0XB50,	"Elf32_Sym");
	MakeStruct	(0XB60,	"Elf32_Sym");
	MakeStruct	(0XB70,	"Elf32_Sym");
	MakeStruct	(0XB80,	"Elf32_Sym");
	MakeStruct	(0XB90,	"Elf32_Sym");
	MakeStruct	(0XBA0,	"Elf32_Sym");
	MakeStruct	(0XBB0,	"Elf32_Sym");
	MakeStruct	(0XBC0,	"Elf32_Sym");
	MakeStruct	(0XBD0,	"Elf32_Sym");
	MakeStruct	(0XBE0,	"Elf32_Sym");
	MakeStruct	(0XBF0,	"Elf32_Sym");
	MakeStruct	(0XC00,	"Elf32_Sym");
	MakeStruct	(0XC10,	"Elf32_Sym");
	MakeStruct	(0XC20,	"Elf32_Sym");
	MakeStruct	(0XC30,	"Elf32_Sym");
	MakeStruct	(0XC40,	"Elf32_Sym");
	MakeStruct	(0XC50,	"Elf32_Sym");
	MakeStruct	(0XC60,	"Elf32_Sym");
	MakeStruct	(0XC70,	"Elf32_Sym");
	MakeStruct	(0XC80,	"Elf32_Sym");
	MakeStruct	(0XC90,	"Elf32_Sym");
	MakeStruct	(0XCA0,	"Elf32_Sym");
	MakeStruct	(0XCB0,	"Elf32_Sym");
	MakeStruct	(0XCC0,	"Elf32_Sym");
	MakeStruct	(0XCD0,	"Elf32_Sym");
	MakeStruct	(0XCE0,	"Elf32_Sym");
	MakeStruct	(0XCF0,	"Elf32_Sym");
	MakeStruct	(0XD00,	"Elf32_Sym");
	MakeStruct	(0XD10,	"Elf32_Sym");
	MakeStruct	(0XD20,	"Elf32_Sym");
	MakeStruct	(0XD30,	"Elf32_Sym");
	MakeStruct	(0XD40,	"Elf32_Sym");
	MakeStruct	(0XD50,	"Elf32_Sym");
	MakeStruct	(0XD60,	"Elf32_Sym");
	MakeStruct	(0XD70,	"Elf32_Sym");
	MakeStruct	(0XD80,	"Elf32_Sym");
	MakeStruct	(0XD90,	"Elf32_Sym");
	MakeStruct	(0XDA0,	"Elf32_Sym");
	MakeStruct	(0XDB0,	"Elf32_Sym");
	MakeStruct	(0XDC0,	"Elf32_Sym");
	MakeStruct	(0XDD0,	"Elf32_Sym");
	MakeStruct	(0XDE0,	"Elf32_Sym");
	MakeStruct	(0XDF0,	"Elf32_Sym");
	MakeStruct	(0XE00,	"Elf32_Sym");
	MakeStruct	(0XE10,	"Elf32_Sym");
	MakeStruct	(0XE20,	"Elf32_Sym");
	MakeStruct	(0XE30,	"Elf32_Sym");
	MakeStruct	(0XE40,	"Elf32_Sym");
	MakeStruct	(0XE50,	"Elf32_Sym");
	MakeStruct	(0XE60,	"Elf32_Sym");
	MakeStruct	(0XE70,	"Elf32_Sym");
	MakeStruct	(0XE80,	"Elf32_Sym");
	MakeStruct	(0XE90,	"Elf32_Sym");
	MakeStruct	(0XEA0,	"Elf32_Sym");
	MakeStruct	(0XEB0,	"Elf32_Sym");
	MakeStruct	(0XEC0,	"Elf32_Sym");
	MakeStruct	(0XED0,	"Elf32_Sym");
	MakeStruct	(0XEE0,	"Elf32_Sym");
	MakeStruct	(0XEF0,	"Elf32_Sym");
	MakeStruct	(0XF00,	"Elf32_Sym");
	MakeStruct	(0XF10,	"Elf32_Sym");
	MakeStruct	(0XF20,	"Elf32_Sym");
	MakeStruct	(0XF30,	"Elf32_Sym");
	MakeStruct	(0XF40,	"Elf32_Sym");
	MakeStruct	(0XF50,	"Elf32_Sym");
	MakeStruct	(0XF60,	"Elf32_Sym");
	MakeStruct	(0XF70,	"Elf32_Sym");
	MakeStruct	(0XF80,	"Elf32_Sym");
	MakeStruct	(0XF90,	"Elf32_Sym");
	MakeStruct	(0XFA0,	"Elf32_Sym");
	MakeStruct	(0XFB0,	"Elf32_Sym");
	MakeStruct	(0XFC0,	"Elf32_Sym");
	MakeStruct	(0XFD0,	"Elf32_Sym");
	MakeStruct	(0XFE0,	"Elf32_Sym");
	MakeStruct	(0XFF0,	"Elf32_Sym");
	MakeStruct	(0X1000,	"Elf32_Sym");
	MakeStruct	(0X1010,	"Elf32_Sym");
	MakeStruct	(0X1020,	"Elf32_Sym");
	MakeStruct	(0X1030,	"Elf32_Sym");
	MakeStruct	(0X1040,	"Elf32_Sym");
	MakeStruct	(0X1050,	"Elf32_Sym");
	MakeStruct	(0X1060,	"Elf32_Sym");
	MakeStruct	(0X1070,	"Elf32_Sym");
	MakeStruct	(0X1080,	"Elf32_Sym");
	MakeStruct	(0X1090,	"Elf32_Sym");
	MakeStruct	(0X10A0,	"Elf32_Sym");
	MakeStruct	(0X10B0,	"Elf32_Sym");
	MakeStruct	(0X10C0,	"Elf32_Sym");
	MakeStruct	(0X10D0,	"Elf32_Sym");
	MakeStruct	(0X10E0,	"Elf32_Sym");
	MakeStruct	(0X10F0,	"Elf32_Sym");
	MakeStruct	(0X1100,	"Elf32_Sym");
	MakeStruct	(0X1110,	"Elf32_Sym");
	MakeStruct	(0X1120,	"Elf32_Sym");
	MakeStruct	(0X1130,	"Elf32_Sym");
	MakeStruct	(0X1140,	"Elf32_Sym");
	MakeStruct	(0X1150,	"Elf32_Sym");
	MakeStruct	(0X1160,	"Elf32_Sym");
	MakeStruct	(0X1170,	"Elf32_Sym");
	MakeStruct	(0X1180,	"Elf32_Sym");
	MakeStruct	(0X1190,	"Elf32_Sym");
	MakeStruct	(0X11A0,	"Elf32_Sym");
	MakeStruct	(0X11B0,	"Elf32_Sym");
	MakeStruct	(0X11C0,	"Elf32_Sym");
	MakeStruct	(0X11D0,	"Elf32_Sym");
	MakeStruct	(0X11E0,	"Elf32_Sym");
	MakeStruct	(0X11F0,	"Elf32_Sym");
	MakeStruct	(0X1200,	"Elf32_Sym");
	MakeStruct	(0X1210,	"Elf32_Sym");
	MakeStruct	(0X1220,	"Elf32_Sym");
	MakeStruct	(0X1230,	"Elf32_Sym");
	MakeStruct	(0X1240,	"Elf32_Sym");
	MakeStruct	(0X1250,	"Elf32_Sym");
	MakeStruct	(0X1260,	"Elf32_Sym");
	MakeStruct	(0X1270,	"Elf32_Sym");
	MakeStruct	(0X1280,	"Elf32_Sym");
	MakeStruct	(0X1290,	"Elf32_Sym");
	MakeStruct	(0X12A0,	"Elf32_Sym");
	MakeStruct	(0X12B0,	"Elf32_Sym");
	MakeStruct	(0X12C0,	"Elf32_Sym");
	MakeStruct	(0X12D0,	"Elf32_Sym");
	MakeStruct	(0X12E0,	"Elf32_Sym");
	MakeStruct	(0X12F0,	"Elf32_Sym");
	MakeStruct	(0X1300,	"Elf32_Sym");
	MakeStruct	(0X1310,	"Elf32_Sym");
	MakeStruct	(0X1320,	"Elf32_Sym");
	MakeStruct	(0X1330,	"Elf32_Sym");
	MakeStruct	(0X1340,	"Elf32_Sym");
	MakeStruct	(0X1350,	"Elf32_Sym");
	MakeStruct	(0X1360,	"Elf32_Sym");
	MakeStruct	(0X1370,	"Elf32_Sym");
	MakeStruct	(0X1380,	"Elf32_Sym");
	MakeStruct	(0X1390,	"Elf32_Sym");
	MakeStruct	(0X13A0,	"Elf32_Sym");
	MakeStruct	(0X13B0,	"Elf32_Sym");
	MakeStruct	(0X13C0,	"Elf32_Sym");
	MakeStruct	(0X13D0,	"Elf32_Sym");
	MakeStruct	(0X13E0,	"Elf32_Sym");
	MakeStruct	(0X13F0,	"Elf32_Sym");
	MakeStruct	(0X1400,	"Elf32_Sym");
	MakeStruct	(0X1410,	"Elf32_Sym");
	MakeStruct	(0X1420,	"Elf32_Sym");
	MakeStruct	(0X1430,	"Elf32_Sym");
	MakeStruct	(0X1440,	"Elf32_Sym");
	MakeStruct	(0X1450,	"Elf32_Sym");
	MakeStruct	(0X1460,	"Elf32_Sym");
	MakeStruct	(0X1470,	"Elf32_Sym");
	MakeStruct	(0X1480,	"Elf32_Sym");
	MakeStruct	(0X1490,	"Elf32_Sym");
	MakeStruct	(0X14A0,	"Elf32_Sym");
	MakeStruct	(0X14B0,	"Elf32_Sym");
	MakeStruct	(0X14C0,	"Elf32_Sym");
	MakeStruct	(0X14D0,	"Elf32_Sym");
	MakeStruct	(0X14E0,	"Elf32_Sym");
	MakeStruct	(0X14F0,	"Elf32_Sym");
	MakeStruct	(0X1500,	"Elf32_Sym");
	MakeStruct	(0X1510,	"Elf32_Sym");
	MakeStruct	(0X1520,	"Elf32_Sym");
	MakeStruct	(0X1530,	"Elf32_Sym");
	MakeStruct	(0X1540,	"Elf32_Sym");
	MakeStruct	(0X1550,	"Elf32_Sym");
	MakeStruct	(0X1560,	"Elf32_Sym");
	MakeStruct	(0X1570,	"Elf32_Sym");
	MakeStruct	(0X1580,	"Elf32_Sym");
	MakeStruct	(0X1590,	"Elf32_Sym");
	MakeStruct	(0X15A0,	"Elf32_Sym");
	MakeStruct	(0X15B0,	"Elf32_Sym");
	MakeStruct	(0X15C0,	"Elf32_Sym");
	MakeStruct	(0X15D0,	"Elf32_Sym");
	MakeStruct	(0X15E0,	"Elf32_Sym");
	MakeStruct	(0X15F0,	"Elf32_Sym");
	MakeStruct	(0X1600,	"Elf32_Sym");
	MakeStruct	(0X1610,	"Elf32_Sym");
	MakeStruct	(0X1620,	"Elf32_Sym");
	MakeStruct	(0X1630,	"Elf32_Sym");
	MakeStruct	(0X1640,	"Elf32_Sym");
	MakeStruct	(0X1650,	"Elf32_Sym");
	MakeStruct	(0X1660,	"Elf32_Sym");
	MakeStruct	(0X1670,	"Elf32_Sym");
	MakeStruct	(0X1680,	"Elf32_Sym");
	MakeStruct	(0X1690,	"Elf32_Sym");
	MakeStruct	(0X16A0,	"Elf32_Sym");
	MakeStruct	(0X16B0,	"Elf32_Sym");
	MakeStruct	(0X16C0,	"Elf32_Sym");
	MakeStruct	(0X16D0,	"Elf32_Sym");
	MakeStruct	(0X16E0,	"Elf32_Sym");
	MakeStruct	(0X16F0,	"Elf32_Sym");
	MakeStruct	(0X1700,	"Elf32_Sym");
	MakeStruct	(0X1710,	"Elf32_Sym");
	MakeStruct	(0X1720,	"Elf32_Sym");
	MakeStruct	(0X1730,	"Elf32_Sym");
	MakeStruct	(0X1740,	"Elf32_Sym");
	MakeStruct	(0X1750,	"Elf32_Sym");
	MakeStruct	(0X1760,	"Elf32_Sym");
	MakeStruct	(0X1770,	"Elf32_Sym");
	MakeStruct	(0X1780,	"Elf32_Sym");
	MakeStruct	(0X1790,	"Elf32_Sym");
	MakeStruct	(0X17A0,	"Elf32_Sym");
	MakeStruct	(0X17B0,	"Elf32_Sym");
	MakeStruct	(0X17C0,	"Elf32_Sym");
	MakeStruct	(0X17D0,	"Elf32_Sym");
	MakeStruct	(0X17E0,	"Elf32_Sym");
	MakeStruct	(0X17F0,	"Elf32_Sym");
	MakeStruct	(0X1800,	"Elf32_Sym");
	MakeStruct	(0X1810,	"Elf32_Sym");
	MakeStruct	(0X1820,	"Elf32_Sym");
	MakeStruct	(0X1830,	"Elf32_Sym");
	MakeStruct	(0X1840,	"Elf32_Sym");
	MakeStruct	(0X1850,	"Elf32_Sym");
	MakeStruct	(0X1860,	"Elf32_Sym");
	MakeStruct	(0X1870,	"Elf32_Sym");
	MakeStruct	(0X1880,	"Elf32_Sym");
	MakeStruct	(0X1890,	"Elf32_Sym");
	MakeStruct	(0X18A0,	"Elf32_Sym");
	MakeStruct	(0X18B0,	"Elf32_Sym");
	MakeStruct	(0X18C0,	"Elf32_Sym");
	MakeStruct	(0X18D0,	"Elf32_Sym");
	MakeStruct	(0X18E0,	"Elf32_Sym");
	MakeStruct	(0X18F0,	"Elf32_Sym");
	MakeStruct	(0X1900,	"Elf32_Sym");
	MakeStruct	(0X1910,	"Elf32_Sym");
	MakeStruct	(0X1920,	"Elf32_Sym");
	MakeStruct	(0X1930,	"Elf32_Sym");
	MakeStruct	(0X1940,	"Elf32_Sym");
	MakeStruct	(0X1950,	"Elf32_Sym");
	MakeStruct	(0X1960,	"Elf32_Sym");
	MakeStruct	(0X1970,	"Elf32_Sym");
	MakeStruct	(0X1980,	"Elf32_Sym");
	MakeStruct	(0X1990,	"Elf32_Sym");
	MakeStruct	(0X19A0,	"Elf32_Sym");
	MakeStruct	(0X19B0,	"Elf32_Sym");
	MakeStruct	(0X19C0,	"Elf32_Sym");
	MakeStruct	(0X19D0,	"Elf32_Sym");
	MakeStruct	(0X19E0,	"Elf32_Sym");
	MakeStruct	(0X19F0,	"Elf32_Sym");
	MakeStruct	(0X1A00,	"Elf32_Sym");
	MakeStruct	(0X1A10,	"Elf32_Sym");
	MakeStruct	(0X1A20,	"Elf32_Sym");
	MakeStruct	(0X1A30,	"Elf32_Sym");
	MakeStruct	(0X1A40,	"Elf32_Sym");
	MakeStruct	(0X1A50,	"Elf32_Sym");
	MakeStruct	(0X1A60,	"Elf32_Sym");
	MakeStruct	(0X1A70,	"Elf32_Sym");
	MakeStruct	(0X1A80,	"Elf32_Sym");
	MakeStruct	(0X1A90,	"Elf32_Sym");
	MakeStruct	(0X1AA0,	"Elf32_Sym");
	MakeStruct	(0X1AB0,	"Elf32_Sym");
	MakeStruct	(0X1AC0,	"Elf32_Sym");
	MakeStruct	(0X1AD0,	"Elf32_Sym");
	MakeStruct	(0X1AE0,	"Elf32_Sym");
	MakeStruct	(0X1AF0,	"Elf32_Sym");
	MakeStruct	(0X1B00,	"Elf32_Sym");
	MakeStruct	(0X1B10,	"Elf32_Sym");
	MakeStruct	(0X1B20,	"Elf32_Sym");
	MakeStruct	(0X1B30,	"Elf32_Sym");
	MakeStruct	(0X1B40,	"Elf32_Sym");
	MakeStruct	(0X1B50,	"Elf32_Sym");
	MakeStruct	(0X1B60,	"Elf32_Sym");
	MakeStruct	(0X1B70,	"Elf32_Sym");
	MakeStruct	(0X1B80,	"Elf32_Sym");
	MakeStruct	(0X1B90,	"Elf32_Sym");
	MakeStruct	(0X1BA0,	"Elf32_Sym");
	MakeStruct	(0X1BB0,	"Elf32_Sym");
	MakeStruct	(0X1BC0,	"Elf32_Sym");
	MakeStruct	(0X1BD0,	"Elf32_Sym");
	MakeStruct	(0X1BE0,	"Elf32_Sym");
	MakeStruct	(0X1BF0,	"Elf32_Sym");
	MakeStruct	(0X1C00,	"Elf32_Sym");
	MakeStruct	(0X1C10,	"Elf32_Sym");
	MakeStruct	(0X1C20,	"Elf32_Sym");
	MakeStruct	(0X1C30,	"Elf32_Sym");
	MakeStruct	(0X1C40,	"Elf32_Sym");
	MakeStruct	(0X1C50,	"Elf32_Sym");
	MakeStruct	(0X1C60,	"Elf32_Sym");
	MakeStruct	(0X1C70,	"Elf32_Sym");
	MakeStruct	(0X1C80,	"Elf32_Sym");
	MakeStruct	(0X1C90,	"Elf32_Sym");
	MakeStruct	(0X1CA0,	"Elf32_Sym");
	MakeStruct	(0X1CB0,	"Elf32_Sym");
	MakeStruct	(0X1CC0,	"Elf32_Sym");
	MakeStruct	(0X1CD0,	"Elf32_Sym");
	MakeStruct	(0X1CE0,	"Elf32_Sym");
	MakeStruct	(0X1CF0,	"Elf32_Sym");
	MakeStruct	(0X1D00,	"Elf32_Sym");
	MakeStruct	(0X1D10,	"Elf32_Sym");
	MakeStruct	(0X1D20,	"Elf32_Sym");
	MakeStruct	(0X1D30,	"Elf32_Sym");
	MakeStruct	(0X1D40,	"Elf32_Sym");
	MakeStruct	(0X1D50,	"Elf32_Sym");
	MakeStruct	(0X1D60,	"Elf32_Sym");
	MakeStruct	(0X1D70,	"Elf32_Sym");
	MakeStruct	(0X1D80,	"Elf32_Sym");
	MakeStruct	(0X1D90,	"Elf32_Sym");
	MakeStruct	(0X1DA0,	"Elf32_Sym");
	MakeStruct	(0X1DB0,	"Elf32_Sym");
	MakeStruct	(0X1DC0,	"Elf32_Sym");
	MakeStruct	(0X1DD0,	"Elf32_Sym");
	MakeStruct	(0X1DE0,	"Elf32_Sym");
	MakeStruct	(0X1DF0,	"Elf32_Sym");
	MakeStruct	(0X1E00,	"Elf32_Sym");
	MakeStruct	(0X1E10,	"Elf32_Sym");
	MakeStruct	(0X1E20,	"Elf32_Sym");
	MakeStruct	(0X1E30,	"Elf32_Sym");
	MakeStruct	(0X1E40,	"Elf32_Sym");
	MakeStruct	(0X1E50,	"Elf32_Sym");
	MakeStruct	(0X1E60,	"Elf32_Sym");
	MakeStruct	(0X1E70,	"Elf32_Sym");
	MakeStruct	(0X1E80,	"Elf32_Sym");
	MakeStruct	(0X1E90,	"Elf32_Sym");
	MakeStruct	(0X1EA0,	"Elf32_Sym");
	MakeStruct	(0X1EB0,	"Elf32_Sym");
	MakeStruct	(0X1EC0,	"Elf32_Sym");
	MakeStruct	(0X1ED0,	"Elf32_Sym");
	MakeStruct	(0X1EE0,	"Elf32_Sym");
	MakeStruct	(0X1EF0,	"Elf32_Sym");
	MakeStruct	(0X1F00,	"Elf32_Sym");
	MakeStruct	(0X1F10,	"Elf32_Sym");
	MakeStruct	(0X1F20,	"Elf32_Sym");
	MakeStruct	(0X1F30,	"Elf32_Sym");
	MakeStruct	(0X1F40,	"Elf32_Sym");
	MakeStruct	(0X1F50,	"Elf32_Sym");
	MakeStruct	(0X1F60,	"Elf32_Sym");
	MakeStruct	(0X1F70,	"Elf32_Sym");
	MakeStruct	(0X1F80,	"Elf32_Sym");
	MakeStruct	(0X1F90,	"Elf32_Sym");
	MakeStruct	(0X1FA0,	"Elf32_Sym");
	MakeStruct	(0X1FB0,	"Elf32_Sym");
	MakeStruct	(0X1FC0,	"Elf32_Sym");
	MakeStruct	(0X1FD0,	"Elf32_Sym");
	MakeStruct	(0X1FE0,	"Elf32_Sym");
	MakeStruct	(0X1FF0,	"Elf32_Sym");
	MakeStruct	(0X2000,	"Elf32_Sym");
	MakeStruct	(0X2010,	"Elf32_Sym");
	MakeStruct	(0X2020,	"Elf32_Sym");
	MakeStruct	(0X2030,	"Elf32_Sym");
	MakeStruct	(0X2040,	"Elf32_Sym");
	MakeStruct	(0X2050,	"Elf32_Sym");
	MakeStruct	(0X2060,	"Elf32_Sym");
	MakeStruct	(0X2070,	"Elf32_Sym");
	MakeStruct	(0X2080,	"Elf32_Sym");
	MakeStruct	(0X2090,	"Elf32_Sym");
	MakeStruct	(0X20A0,	"Elf32_Sym");
	MakeStruct	(0X20B0,	"Elf32_Sym");
	MakeStruct	(0X20C0,	"Elf32_Sym");
	MakeStruct	(0X20D0,	"Elf32_Sym");
	MakeStruct	(0X20E0,	"Elf32_Sym");
	MakeStruct	(0X20F0,	"Elf32_Sym");
	MakeStruct	(0X2100,	"Elf32_Sym");
	MakeStruct	(0X2110,	"Elf32_Sym");
	MakeStruct	(0X2120,	"Elf32_Sym");
	MakeStruct	(0X2130,	"Elf32_Sym");
	MakeStruct	(0X2140,	"Elf32_Sym");
	MakeStruct	(0X2150,	"Elf32_Sym");
	MakeStruct	(0X2160,	"Elf32_Sym");
	MakeStruct	(0X2170,	"Elf32_Sym");
	MakeStruct	(0X2180,	"Elf32_Sym");
	MakeStruct	(0X2190,	"Elf32_Sym");
	MakeStruct	(0X21A0,	"Elf32_Sym");
	MakeStruct	(0X21B0,	"Elf32_Sym");
	MakeStruct	(0X21C0,	"Elf32_Sym");
	MakeStruct	(0X21D0,	"Elf32_Sym");
	MakeStruct	(0X21E0,	"Elf32_Sym");
	MakeStruct	(0X21F0,	"Elf32_Sym");
	MakeStruct	(0X2200,	"Elf32_Sym");
	MakeStruct	(0X2210,	"Elf32_Sym");
	MakeStruct	(0X2220,	"Elf32_Sym");
	MakeStruct	(0X2230,	"Elf32_Sym");
	MakeStruct	(0X2240,	"Elf32_Sym");
	MakeStruct	(0X2250,	"Elf32_Sym");
	MakeStruct	(0X2260,	"Elf32_Sym");
	MakeStruct	(0X2270,	"Elf32_Sym");
	update_extra_cmt		(0X2280,	E_PREV + 0,	"; ELF String Table");
	create_byte	(0X2280);
	create_strlit	(0X2281,	0X2290);
	set_name	(0X2281,	"aGmonStart");
	create_strlit	(0X2290,	0X22A7);
	set_name	(0X2290,	"aAeabiUnwindCpp");
	create_strlit	(0X22A7,	0X22AD);
	set_name	(0X22A7,	"aFini");
	create_strlit	(0X22AD,	0X22BC);
	set_name	(0X22AD,	"aCxaFinalize");
	create_strlit	(0X22BC,	0X22D0);
	set_name	(0X22BC,	"aJvRegisterclas");
	create_strlit	(0X22D0,	0X22DD);
	set_name	(0X22D0,	"aDjicrc8table");
	create_strlit	(0X22DD,	0X22E8);
	set_name	(0X22DD,	"aWcrcTable");
	create_strlit	(0X22E8,	0X22F0);
	set_name	(0X22E8,	"aCalcrc8");
	create_strlit	(0X22F0,	0X22F9);
	set_name	(0X22F0,	"aCalcrc16");
	create_strlit	(0X22F9,	0X2309);
	set_name	(0X22F9,	"aDatabuffCreate");
	create_strlit	(0X2309,	0X2310);
	set_name	(0X2309,	"aMalloc");
	create_strlit	(0X2310,	0X2317);
	set_name	(0X2310,	"aMemset");
	create_strlit	(0X2317,	0X231C);
	set_name	(0X2317,	"aFree");
	create_strlit	(0X231C,	0X2333);
	set_name	(0X231C,	"aAeabiUnwindCpp_0");
	create_strlit	(0X2333,	0X2342);
	set_name	(0X2333,	"aDatabuffClear");
	create_strlit	(0X2342,	0X2352);
	set_name	(0X2342,	"aDatabuffDelete");
	create_strlit	(0X2352,	0X235B);
	set_name	(0X2352,	"aCodeHex");
	create_strlit	(0X235B,	0X2366);
	set_name	(0X235B,	"aDecodeHex");
	create_strlit	(0X2366,	0X2374);
	set_name	(0X2366,	"aDjiFrameCap");
	create_strlit	(0X2374,	0X237E);
	set_name	(0X2374,	"aIstimeout");
	create_strlit	(0X237E,	0X238D);
	set_name	(0X237E,	"aGetcurrenttime");
	create_strlit	(0X238D,	0X2394);
	set_name	(0X238D,	"aMemcpy");
	create_strlit	(0X2394,	0X23A6);
	set_name	(0X2394,	"aGetint16little");
	create_strlit	(0X23A6,	0X23B4);
	set_name	(0X23A6,	"aFrameCapture");
	create_strlit	(0X23B4,	0X23CA);
	set_name	(0X23B4,	"aFrameCapbyhead");
	create_strlit	(0X23CA,	0X23D8);
	set_name	(0X23CA,	"aAssertFail");
	create_strlit	(0X23D8,	0X23E0);
	set_name	(0X23D8,	"aGetfp32");
	create_strlit	(0X23E0,	0X23F2);
	set_name	(0X23E0,	"aPutint16little");
	create_strlit	(0X23F2,	0X2404);
	set_name	(0X23F2,	"aGetint32little");
	create_strlit	(0X2404,	0X2416);
	set_name	(0X2404,	"aPutint32little");
	create_strlit	(0X2416,	0X2426);
	set_name	(0X2416,	"aExchgint8uhlbi");
	create_strlit	(0X2426,	0X242F);
	set_name	(0X2426,	"aPrinthex");
	create_strlit	(0X242F,	0X2437);
	set_name	(0X242F,	"aPutchar");
	create_strlit	(0X2437,	0X2444);
	set_name	(0X2437,	"aGettimeofday");
	create_strlit	(0X2444,	0X2450);
	set_name	(0X2444,	"aInitprocmsg");
	create_strlit	(0X2450,	0X2457);
	set_name	(0X2450,	"aMsgget");
	create_strlit	(0X2457,	0X2463);
	set_name	(0X2457,	"aProcmsgsend");
	create_strlit	(0X2463,	0X246A);
	set_name	(0X2463,	"aMsgsnd");
	create_strlit	(0X246A,	0X2476);
	set_name	(0X246A,	"aProcmsgrecv");
	create_strlit	(0X2476,	0X247D);
	set_name	(0X2476,	"aMsgrcv");
	create_strlit	(0X247D,	0X2489);
	set_name	(0X247D,	"aGetfilesize");
	create_strlit	(0X2489,	0X2495);
	set_name	(0X2489,	"aIffileexist");
	create_strlit	(0X2495,	0X24A1);
	set_name	(0X2495,	"aGetbasename");
	create_strlit	(0X24A1,	0X24A8);
	set_name	(0X24A1,	"aStrlen");
	create_strlit	(0X24A8,	0X24B1);
	set_name	(0X24A8,	"aReadfile");
	create_strlit	(0X24B1,	0X24B7);
	set_name	(0X24B1,	"aFopen");
	create_strlit	(0X24B7,	0X24BD);
	set_name	(0X24B7,	"aFread");
	create_strlit	(0X24BD,	0X24C4);
	set_name	(0X24BD,	"aFclose");
	create_strlit	(0X24C4,	0X24D6);
	set_name	(0X24C4,	"aWritefileNoSyn");
	create_strlit	(0X24D6,	0X24DD);
	set_name	(0X24D6,	"aFwrite");
	create_strlit	(0X24DD,	0X24E7);
	set_name	(0X24DD,	"aWritefile");
	create_strlit	(0X24E7,	0X24EE);
	set_name	(0X24E7,	"aSystem");
	create_strlit	(0X24EE,	0X24FF);
	set_name	(0X24EE,	"aP2psocketCreat");
	create_strlit	(0X24FF,	0X2506);
	set_name	(0X24FF,	"aSocket");
	create_strlit	(0X2506,	0X250C);
	set_name	(0X2506,	"aFcntl");
	create_strlit	(0X250C,	0X2512);
	set_name	(0X250C,	"aBzero");
	create_strlit	(0X2512,	0X2518);
	set_name	(0X2512,	"aHtonl");
	create_strlit	(0X2518,	0X251E);
	set_name	(0X2518,	"aHtons");
	create_strlit	(0X251E,	0X2523);
	set_name	(0X251E,	"aBind");
	create_strlit	(0X2523,	0X2534);
	set_name	(0X2523,	"aP2psocketDelet");
	create_strlit	(0X2534,	0X2542);
	set_name	(0X2534,	"aP2psocketRec");
	create_strlit	(0X2542,	0X254B);
	set_name	(0X2542,	"aRecvfrom");
	create_strlit	(0X254B,	0X2551);
	set_name	(0X254B,	"aNtohl");
	create_strlit	(0X2551,	0X2557);
	set_name	(0X2551,	"aNtohs");
	create_strlit	(0X2557,	0X2566);
	set_name	(0X2557,	"aP2psocketSend");
	create_strlit	(0X2566,	0X256D);
	set_name	(0X2566,	"aSendto");
	create_strlit	(0X256D,	0X2573);
	set_name	(0X256D,	"aIoctl");
	create_strlit	(0X2573,	0X2578);
	set_name	(0X2573,	"aPuts");
	create_strlit	(0X2578,	0X2586);
	set_name	(0X2578,	"aWatchdogInit");
	create_strlit	(0X2586,	0X2594);
	set_name	(0X2586,	"aWatchdogFeed");
	create_strlit	(0X2594,	0X25A4);
	set_name	(0X2594,	"aWatchdogDelete");
	create_strlit	(0X25A4,	0X25BD);
	set_name	(0X25A4,	"aUpdateParseApp");
	create_strlit	(0X25BD,	0X25C3);
	set_name	(0X25BD,	"aFgets");
	create_strlit	(0X25C3,	0X25CA);
	set_name	(0X25C3,	"aSscanf");
	create_strlit	(0X25CA,	0X25E5);
	set_name	(0X25CA,	"aUpdateParse680");
	create_strlit	(0X25E5,	0X25EB);
	set_name	(0X25E5,	"aPopen");
	create_strlit	(0X25EB,	0X25F2);
	set_name	(0X25EB,	"aStrstr");
	create_strlit	(0X25F2,	0X25F9);
	set_name	(0X25F2,	"aStrchr");
	create_strlit	(0X25F9,	0X2600);
	set_name	(0X25F9,	"aPclose");
	create_strlit	(0X2600,	0X260B);
	set_name	(0X2600,	"aCalfilemd5");
	create_strlit	(0X260B,	0X2614);
	set_name	(0X260B,	"aMd5Init");
	create_strlit	(0X2614,	0X261F);
	set_name	(0X2614,	"aMd5Update");
	create_strlit	(0X261F,	0X2629);
	set_name	(0X261F,	"aMd5Final");
	create_strlit	(0X2629,	0X2630);
	set_name	(0X2629,	"aCalmd5");
	create_strlit	(0X2630,	0X2643);
	set_name	(0X2630,	"aDjiProstructIn");
	create_strlit	(0X2643,	0X2656);
	set_name	(0X2643,	"aSethardwarever");
	create_strlit	(0X2656,	0X2669);
	set_name	(0X2656,	"aGethardwarever");
	create_strlit	(0X2669,	0X2681);
	set_name	(0X2669,	"aSet68013hardwa");
	create_strlit	(0X2681,	0X2699);
	set_name	(0X2681,	"aGet68013hardwa");
	create_strlit	(0X2699,	0X26AD);
	set_name	(0X2699,	"aUpdateFillVers");
	create_strlit	(0X26AD,	0X26C7);
	set_name	(0X26AD,	"aUpdateFill6801");
	create_strlit	(0X26C7,	0X26D0);
	set_name	(0X26C7,	"aLockfile");
	create_strlit	(0X26D0,	0X26E0);
	set_name	(0X26D0,	"aAlreadyRunning");
	create_strlit	(0X26E0,	0X26EA);
	set_name	(0X26E0,	"aFtruncate");
	create_strlit	(0X26EA,	0X26F1);
	set_name	(0X26EA,	"aGetpid");
	create_strlit	(0X26F1,	0X26F9);
	set_name	(0X26F1,	"aSprintf");
	create_strlit	(0X26F9,	0X2706);
	set_name	(0X26F9,	"aGettickcount");
	create_strlit	(0X2706,	0X2714);
	set_name	(0X2706,	"aClockGettime");
	create_strlit	(0X2714,	0X272A);
	set_name	(0X2714,	"aThreadsignalMa");
	create_strlit	(0X272A,	0X2736);
	set_name	(0X272A,	"aSigemptyset");
	create_strlit	(0X2736,	0X2740);
	set_name	(0X2736,	"aSigaddset");
	create_strlit	(0X2740,	0X2750);
	set_name	(0X2740,	"aPthreadSigmask");
	create_strlit	(0X2750,	0X275E);
	set_name	(0X2750,	"aGetrandomdata");
	create_strlit	(0X275E,	0X2764);
	set_name	(0X275E,	"aSrand");
	create_strlit	(0X2764,	0X276B);
	set_name	(0X2764,	"aCalmac");
	create_strlit	(0X276B,	0X2772);
	set_name	(0X276B,	"aSha256");
	create_strlit	(0X2772,	0X277D);
	set_name	(0X2772,	"aAesencrypt");
	create_strlit	(0X277D,	0X2791);
	set_name	(0X277D,	"aAesSetEncryptK");
	create_strlit	(0X2791,	0X27A1);
	set_name	(0X2791,	"aAesCbcEncrypt");
	create_strlit	(0X27A1,	0X27AC);
	set_name	(0X27A1,	"aAesdecrypt");
	create_strlit	(0X27AC,	0X27C0);
	set_name	(0X27AC,	"aAesSetDecryptK");
	create_strlit	(0X27C0,	0X27D1);
	set_name	(0X27C0,	"aAesencrypttofi");
	create_strlit	(0X27D1,	0X27E4);
	set_name	(0X27D1,	"aAesdecryptfrom");
	create_strlit	(0X27E4,	0X27ED);
	set_name	(0X27E4,	"aGetTime");
	create_strlit	(0X27ED,	0X27F7);
	set_name	(0X27ED,	"aLocaltime");
	create_strlit	(0X27F7,	0X2800);
	set_name	(0X27F7,	"aSetTime");
	create_strlit	(0X2800,	0X2807);
	set_name	(0X2800,	"aMktime");
	create_strlit	(0X2807,	0X2814);
	set_name	(0X2807,	"aSettimeofday");
	create_strlit	(0X2814,	0X2828);
	set_name	(0X2814,	"aSetMutexAttrRe");
	create_strlit	(0X2828,	0X283F);
	set_name	(0X2828,	"aPthreadMutexat");
	create_strlit	(0X283F,	0X2859);
	set_name	(0X283F,	"aPthreadMutexat_0");
	create_strlit	(0X2859,	0X286C);
	set_name	(0X2859,	"aPthreadMutexIn");
	create_strlit	(0X286C,	0X2886);
	set_name	(0X286C,	"aPthreadMutexat_1");
	create_strlit	(0X2886,	0X288D);
	set_name	(0X2886,	"aUsleep");
	create_strlit	(0X288D,	0X28A8);
	set_name	(0X288D,	"aCreateFeedwatc");
	create_strlit	(0X28A8,	0X28BA);
	set_name	(0X28A8,	"aPthreadAttrIni");
	create_strlit	(0X28BA,	0X28D7);
	set_name	(0X28BA,	"aPthreadAttrSet");
	create_strlit	(0X28D7,	0X28F3);
	set_name	(0X28D7,	"aPthreadAttrSet_0");
	create_strlit	(0X28F3,	0X290A);
	set_name	(0X28F3,	"aSchedGetPriori");
	create_strlit	(0X290A,	0X2925);
	set_name	(0X290A,	"aPthreadAttrSet_1");
	create_strlit	(0X2925,	0X2934);
	set_name	(0X2925,	"aPthreadCreate");
	create_strlit	(0X2934,	0X2949);
	set_name	(0X2934,	"aPthreadAttrDes");
	create_strlit	(0X2949,	0X2955);
	set_name	(0X2949,	"aReset68013");
	create_strlit	(0X2955,	0X2962);
	set_name	(0X2955,	"aMfiCtrlSet");
	create_strlit	(0X2962,	0X296F);
	set_name	(0X2962,	"aMfiCtrlGet");
	create_strlit	(0X296F,	0X2988);
	set_name	(0X296F,	"aSimpleEncrypta");
	create_strlit	(0X2988,	0X299A);
	set_name	(0X2988,	"aProDealCallbac");
	create_strlit	(0X299A,	0X29B2);
	set_name	(0X299A,	"aProIspacketnee");
	create_strlit	(0X29B2,	0X29C2);
	set_name	(0X29B2,	"aProPackandsend");
	create_strlit	(0X29C2,	0X29DD);
	set_name	(0X29C2,	"aProPackandsend_0");
	create_strlit	(0X29DD,	0X29E6);
	set_name	(0X29DD,	"aProInit");
	create_strlit	(0X29E6,	0X29F3);
	set_name	(0X29E6,	"aProCheckrec");
	create_strlit	(0X29F3,	0X2A02);
	set_name	(0X29F3,	"aProGetCurseq");
	create_strlit	(0X2A02,	0X2A15);
	set_name	(0X2A02,	"aPthreadMutexLo");
	create_strlit	(0X2A15,	0X2A2A);
	set_name	(0X2A15,	"aPthreadMutexUn");
	create_strlit	(0X2A2A,	0X2A3E);
	set_name	(0X2A2A,	"aPthreadCondSig");
	create_strlit	(0X2A3E,	0X2A4E);
	set_name	(0X2A3E,	"aProSendwaitack");
	create_strlit	(0X2A4E,	0X2A60);
	set_name	(0X2A4E,	"aPthreadCondIni");
	create_strlit	(0X2A60,	0X2A77);
	set_name	(0X2A60,	"aPthreadCondTim");
	create_strlit	(0X2A77,	0X2A8D);
	set_name	(0X2A77,	"aPthreadMutexDe");
	create_strlit	(0X2A8D,	0X2AA2);
	set_name	(0X2A8D,	"aPthreadCondDes");
	create_strlit	(0X2AA2,	0X2AB6);
	set_name	(0X2AA2,	"aProCmdGetVersi");
	create_strlit	(0X2AB6,	0X2ACB);
	set_name	(0X2AB6,	"aProCmdEnterLoa");
	create_strlit	(0X2ACB,	0X2ADD);
	set_name	(0X2ACB,	"aProCmdGetState");
	create_strlit	(0X2ADD,	0X2AF0);
	set_name	(0X2ADD,	"aProCmdLoadStar");
	create_strlit	(0X2AF0,	0X2B02);
	set_name	(0X2AF0,	"aProCmdLoadData");
	create_strlit	(0X2B02,	0X2B16);
	set_name	(0X2B02,	"aProCmdLoadFini");
	create_strlit	(0X2B16,	0X2B25);
	set_name	(0X2B16,	"aProCmdReboot");
	create_strlit	(0X2B25,	0X2B39);
	set_name	(0X2B25,	"aProCmdUpdateCt");
	create_strlit	(0X2B39,	0X2B46);
	set_name	(0X2B39,	"aQueueCreate");
	create_strlit	(0X2B46,	0X2B53);
	set_name	(0X2B46,	"aQueueDelete");
	create_strlit	(0X2B53,	0X2B5B);
	set_name	(0X2B53,	"aKeyscan");
	create_strlit	(0X2B5B,	0X2B69);
	set_name	(0X2B5B,	"aQueuePutdata");
	create_strlit	(0X2B69,	0X2B70);
	set_name	(0X2B69,	"aGetkey");
	create_strlit	(0X2B70,	0X2B7E);
	set_name	(0X2B70,	"aQueueGetdata");
	create_strlit	(0X2B7E,	0X2B8E);
	set_name	(0X2B7E,	"aQueueCleardata");
	create_strlit	(0X2B8E,	0X2B9C);
	set_name	(0X2B8E,	"aSerialCreate");
	create_strlit	(0X2B9C,	0X2BA6);
	set_name	(0X2B9C,	"aTcgetattr");
	create_strlit	(0X2BA6,	0X2BB2);
	set_name	(0X2BA6,	"aCfsetispeed");
	create_strlit	(0X2BB2,	0X2BBE);
	set_name	(0X2BB2,	"aCfsetospeed");
	create_strlit	(0X2BBE,	0X2BC6);
	set_name	(0X2BBE,	"aTcflush");
	create_strlit	(0X2BC6,	0X2BD0);
	set_name	(0X2BC6,	"aTcsetattr");
	create_strlit	(0X2BD0,	0X2BD7);
	set_name	(0X2BD0,	"aSelect");
	create_strlit	(0X2BD7,	0X2BE5);
	set_name	(0X2BD7,	"aSerialDelete");
	create_strlit	(0X2BE5,	0X2BF5);
	set_name	(0X2BE5,	"aSerialReaddata");
	create_strlit	(0X2BF5,	0X2C06);
	set_name	(0X2BF5,	"aSerialWritedat");
	create_strlit	(0X2C06,	0X2C1C);
	set_name	(0X2C06,	"aSerialDisablec");
	create_strlit	(0X2C1C,	0X2C31);
	set_name	(0X2C1C,	"aSerialEnableco");
	create_strlit	(0X2C31,	0X2C39);
	set_name	(0X2C31,	"aTcdrain");
	create_strlit	(0X2C39,	0X2C43);
	set_name	(0X2C39,	"aSha256H0");
	create_strlit	(0X2C43,	0X2C4C);
	set_name	(0X2C43,	"aSha256K");
	create_strlit	(0X2C4C,	0X2C5A);
	set_name	(0X2C4C,	"aSha256Transf");
	create_strlit	(0X2C5A,	0X2C66);
	set_name	(0X2C5A,	"aSha256Init");
	create_strlit	(0X2C66,	0X2C74);
	set_name	(0X2C66,	"aSha256Update");
	create_strlit	(0X2C74,	0X2C81);
	set_name	(0X2C74,	"aSha256Final");
	create_strlit	(0X2C81,	0X2C8E);
	set_name	(0X2C81,	"aSha256Nopad");
	create_strlit	(0X2C8E,	0X2C98);
	set_name	(0X2C8E,	"aAt88Init");
	create_strlit	(0X2C98,	0X2CA7);
	set_name	(0X2C98,	"aAt88CheckAll");
	create_strlit	(0X2CA7,	0X2CB3);
	set_name	(0X2CA7,	"aAt88Delete");
	create_strlit	(0X2CB3,	0X2CC7);
	set_name	(0X2CB3,	"aAt88IsConfigLo");
	create_strlit	(0X2CC7,	0X2CDC);
	set_name	(0X2CC7,	"aAt88IsDataotpL");
	create_strlit	(0X2CDC,	0X2CED);
	set_name	(0X2CDC,	"aAt88ReadConfig");
	create_strlit	(0X2CED,	0X2D00);
	set_name	(0X2CED,	"aAt88IsConfigSe");
	create_strlit	(0X2D00,	0X2D07);
	set_name	(0X2D00,	"aMemcmp");
	create_strlit	(0X2D07,	0X2D18);
	set_name	(0X2D07,	"aAt88LockConfig");
	create_strlit	(0X2D18,	0X2D2A);
	set_name	(0X2D18,	"aAt88LockDataot");
	create_strlit	(0X2D2A,	0X2D3A);
	set_name	(0X2D2A,	"aAt88SetConfig");
	create_strlit	(0X2D3A,	0X2D54);
	set_name	(0X2D3A,	"aAt88CheckAndSe");
	create_strlit	(0X2D54,	0X2D68);
	set_name	(0X2D54,	"aAt88ReadChipIn");
	create_strlit	(0X2D68,	0X2D82);
	set_name	(0X2D68,	"aAt88WriteChipI");
	create_strlit	(0X2D82,	0X2D9B);
	set_name	(0X2D82,	"aAt88ReadChipIn_0");
	create_strlit	(0X2D9B,	0X2DB0);
	set_name	(0X2D9B,	"aAt88CheckChipI");
	create_strlit	(0X2DB0,	0X2DC8);
	set_name	(0X2DB0,	"aAt88SetChipInf");
	create_strlit	(0X2DC8,	0X2DE5);
	set_name	(0X2DC8,	"aAt88CheckAndSe_0");
	create_strlit	(0X2DE5,	0X2DFD);
	set_name	(0X2DE5,	"aAt88WriteFacto");
	create_strlit	(0X2DFD,	0X2E14);
	set_name	(0X2DFD,	"aAt88ReadFactor");
	create_strlit	(0X2E14,	0X2E31);
	set_name	(0X2E14,	"aAt88WriteFacto_0");
	create_strlit	(0X2E31,	0X2E4B);
	set_name	(0X2E31,	"aAt88WriteKerne");
	create_strlit	(0X2E4B,	0X2E67);
	set_name	(0X2E4B,	"aAt88WriteFacto_1");
	create_strlit	(0X2E67,	0X2E7F);
	set_name	(0X2E67,	"aAt88CheckFacto");
	create_strlit	(0X2E7F,	0X2E92);
	set_name	(0X2E7F,	"aAt88ReadKeyFil");
	create_strlit	(0X2E92,	0X2EA1);
	set_name	(0X2E92,	"aAt88MacCheck");
	create_strlit	(0X2EA1,	0X2EB5);
	set_name	(0X2EA1,	"aAt88WriteKeyFi");
	create_strlit	(0X2EB5,	0X2EC4);
	set_name	(0X2EB5,	"aAt88WriteKey");
	create_strlit	(0X2EC4,	0X2ED7);
	set_name	(0X2EC4,	"aAt88WriteKeyAl");
	create_strlit	(0X2ED7,	0X2EE6);
	set_name	(0X2ED7,	"aAt88CheckKey");
	create_strlit	(0X2EE6,	0X2EF6);
	set_name	(0X2EE6,	"aAt88CheckAuth");
	create_strlit	(0X2EF6,	0X2F06);
	set_name	(0X2EF6,	"aAt88IsEncrypt");
	create_strlit	(0X2F06,	0X2F15);
	set_name	(0X2F06,	"aAt88IsPassed");
	create_strlit	(0X2F15,	0X2F25);
	set_name	(0X2F15,	"aAt88CheckOnce");
	create_strlit	(0X2F25,	0X2F33);
	set_name	(0X2F25,	"aAt88IsExist");
	create_strlit	(0X2F33,	0X2F43);
	set_name	(0X2F33,	"aIsandroidplugi");
	create_strlit	(0X2F43,	0X2F51);
	set_name	(0X2F43,	"aAdbSubscribe");
	create_strlit	(0X2F51,	0X2F5D);
	set_name	(0X2F51,	"aAdbConnect");
	create_strlit	(0X2F5D,	0X2F69);
	set_name	(0X2F5D,	"aTcpConnect");
	create_strlit	(0X2F69,	0X2F73);
	set_name	(0X2F69,	"aAdbClose");
	create_strlit	(0X2F73,	0X2F7D);
	set_name	(0X2F73,	"aTcpClose");
	create_strlit	(0X2F7D,	0X2F86);
	set_name	(0X2F7D,	"aAdbSend");
	create_strlit	(0X2F86,	0X2F8F);
	set_name	(0X2F86,	"aTcpSend");
	create_strlit	(0X2F8F,	0X2F9B);
	set_name	(0X2F8F,	"aAdbIsConn");
	create_strlit	(0X2F9B,	0X2FA7);
	set_name	(0X2F9B,	"aTcpIsConn");
	create_strlit	(0X2FA7,	0X2FB0);
	set_name	(0X2FA7,	"aAdbRecv");
	create_strlit	(0X2FB0,	0X2FB9);
	set_name	(0X2FB0,	"aTcpRecv");
	create_strlit	(0X2FB9,	0X2FC7);
	set_name	(0X2FB9,	"aAoaSubscribe");
	create_strlit	(0X2FC7,	0X2FD3);
	set_name	(0X2FC7,	"aAoaConnect");
	create_strlit	(0X2FD3,	0X2FDD);
	set_name	(0X2FD3,	"aAoaClose");
	create_strlit	(0X2FDD,	0X2FE6);
	set_name	(0X2FDD,	"aAoaSend");
	create_strlit	(0X2FE6,	0X2FF2);
	set_name	(0X2FE6,	"aAoaIsConn");
	create_strlit	(0X2FF2,	0X2FFB);
	set_name	(0X2FF2,	"aAoaRecv");
	create_strlit	(0X2FFB,	0X3008);
	set_name	(0X2FFB,	"aMuxdIsConn");
	create_strlit	(0X3008,	0X3012);
	set_name	(0X3008,	"aMuxdConn");
	create_strlit	(0X3012,	0X3022);
	set_name	(0X3012,	"aUsbmuxdConnect");
	create_strlit	(0X3022,	0X3029);
	set_name	(0X3022,	"aMuxdev");
	create_strlit	(0X3029,	0X3034);
	set_name	(0X3029,	"aMuxdClose");
	create_strlit	(0X3034,	0X3047);
	set_name	(0X3034,	"aUsbmuxdDisconn");
	create_strlit	(0X3047,	0X3051);
	set_name	(0X3047,	"aMuxdRecv");
	create_strlit	(0X3051,	0X3066);
	set_name	(0X3051,	"aUsbmuxdRecvTim");
	create_strlit	(0X3066,	0X3073);
	set_name	(0X3066,	"aUsbmuxdSend");
	create_strlit	(0X3073,	0X3084);
	set_name	(0X3073,	"aErrnoLocation");
	create_strlit	(0X3084,	0X308F);
	set_name	(0X3084,	"aSetsockopt");
	create_strlit	(0X308F,	0X3099);
	set_name	(0X308F,	"aInetAddr");
	create_strlit	(0X3099,	0X30B4);
	set_name	(0X3099,	"aUsbmuxdGetDevi");
	create_strlit	(0X30B4,	0X30D0);
	set_name	(0X30B4,	"aPthreadAttrSet_2");
	create_strlit	(0X30D0,	0X30DF);
	set_name	(0X30D0,	"aUsbsocketInit");
	create_strlit	(0X30DF,	0X30F1);
	set_name	(0X30DF,	"aUsbmuxdSubscri");
	create_strlit	(0X30F1,	0X3109);
	set_name	(0X30F1,	"aUsbsocketCreat");
	create_strlit	(0X3109,	0X311B);
	set_name	(0X3109,	"aUsbsocketIsCon");
	create_strlit	(0X311B,	0X312A);
	set_name	(0X311B,	"aUsbsocketRecv");
	create_strlit	(0X312A,	0X3139);
	set_name	(0X312A,	"aUsbsocketSend");
	create_strlit	(0X3139,	0X3145);
	set_name	(0X3139,	"aInitLibusb");
	create_strlit	(0X3145,	0X3151);
	set_name	(0X3145,	"aLibusbInit");
	create_strlit	(0X3151,	0X315B);
	set_name	(0X3151,	"aOpen68013");
	create_strlit	(0X315B,	0X3169);
	set_name	(0X315B,	"aUninitLibusb");
	create_strlit	(0X3169,	0X3174);
	set_name	(0X3169,	"aClose68013");
	create_strlit	(0X3174,	0X3180);
	set_name	(0X3174,	"aLibusbExit");
	create_strlit	(0X3180,	0X3197);
	set_name	(0X3180,	"aLibusbGetDevic");
	create_strlit	(0X3197,	0X31AF);
	set_name	(0X3197,	"aLibusbFreeDevi");
	create_strlit	(0X31AF,	0X31CC);
	set_name	(0X31AF,	"aLibusbGetDevic_0");
	create_strlit	(0X31CC,	0X31D7);
	set_name	(0X31CC,	"aRecvbuffer");
	create_strlit	(0X31D7,	0X31E6);
	set_name	(0X31D7,	"aSyncsendbuffer");
	create_strlit	(0X31E6,	0X31F9);
	set_name	(0X31E6,	"aIs68013Connect");
	create_strlit	(0X31F9,	0X3209);
	set_name	(0X31F9,	"aHubErrorCheck");
	create_strlit	(0X3209,	0X3217);
	set_name	(0X3209,	"aApplecpCheck");
	create_strlit	(0X3217,	0X3227);
	set_name	(0X3217,	"aApplecpIsexist");
	create_strlit	(0X3227,	0X3241);
	set_name	(0X3227,	"aApplecpReadAut");
	create_strlit	(0X3241,	0X3260);
	set_name	(0X3241,	"aApplecpReqChal");
	create_strlit	(0X3260,	0X326F);
	set_name	(0X3260,	"aIap2QueuePut");
	create_strlit	(0X326F,	0X327E);
	set_name	(0X326F,	"aIap2QueueGet");
	create_strlit	(0X327E,	0X32A0);
	set_name	(0X327E,	"aIap2Usbdevicet");
	create_strlit	(0X32A0,	0X32BD);
	set_name	(0X32A0,	"aIap2Usbdevicet_0");
	create_strlit	(0X32BD,	0X32DA);
	set_name	(0X32BD,	"aIap2Usbdevicet_1");
	create_strlit	(0X32DA,	0X32F0);
	set_name	(0X32DA,	"aIap2CtrlSessio");
	create_strlit	(0X32F0,	0X32FD);
	set_name	(0X32F0,	"aPthreadJoin");
	create_strlit	(0X32FD,	0X330D);
	set_name	(0X32FD,	"aIap2TimerInit");
	create_strlit	(0X330D,	0X331E);
	set_name	(0X330D,	"aIap2Calchecksu");
	create_strlit	(0X331E,	0X332D);
	set_name	(0X331E,	"aIap2TimerDel");
	create_strlit	(0X332D,	0X3341);
	set_name	(0X332D,	"aIap2PktGetdata");
	create_strlit	(0X3341,	0X3350);
	set_name	(0X3341,	"aIap2PktParse");
	create_strlit	(0X3350,	0X3363);
	set_name	(0X3350,	"aIap2TimerIsval");
	create_strlit	(0X3363,	0X3384);
	set_name	(0X3363,	"aIap2LinkSessio");
	create_strlit	(0X3384,	0X339E);
	set_name	(0X3384,	"aIap2CtrlSessio_0");
	create_strlit	(0X339E,	0X33B3);
	set_name	(0X339E,	"aIap2TimerIstim");
	create_strlit	(0X33B3,	0X33C5);
	set_name	(0X33B3,	"aIap2LinkPreini");
	create_strlit	(0X33C5,	0X33D3);
	set_name	(0X33C5,	"aIap2LinkRun");
	create_strlit	(0X33D3,	0X33EE);
	set_name	(0X33D3,	"aIap2LinkCtrlse");
	create_strlit	(0X33EE,	0X3409);
	set_name	(0X33EE,	"aIap2LinkCtrlse_0");
	create_strlit	(0X3409,	0X3426);
	set_name	(0X3409,	"aIap2LinkSessio_0");
	create_strlit	(0X3426,	0X3447);
	set_name	(0X3426,	"aIap2LinkSessio_1");
	create_strlit	(0X3447,	0X3462);
	set_name	(0X3447,	"aIap2LinkEasess");
	create_strlit	(0X3462,	0X347B);
	set_name	(0X3462,	"aIap2LinkEasess_0");
	create_strlit	(0X347B,	0X3494);
	set_name	(0X347B,	"aIap2LinkEasess_1");
	create_strlit	(0X3494,	0X34B2);
	set_name	(0X3494,	"aIap2LinkEasess_2");
	create_strlit	(0X34B2,	0X34CB);
	set_name	(0X34B2,	"aIap2PktGeteapr");
	create_strlit	(0X34CB,	0X34E9);
	set_name	(0X34CB,	"aIap2LinkEasess_3");
	create_strlit	(0X34E9,	0X3506);
	set_name	(0X34E9,	"aIap2CtrlSessio_1");
	create_strlit	(0X3506,	0X3518);
	set_name	(0X3506,	"aIap2QueueIsful");
	create_strlit	(0X3518,	0X352B);
	set_name	(0X3518,	"aIap2QueueIsemp");
	create_strlit	(0X352B,	0X353E);
	set_name	(0X352B,	"aUsbupdateSavep");
	create_strlit	(0X353E,	0X355B);
	set_name	(0X353E,	"aUsbupdateSetdm");
	create_strlit	(0X355B,	0X357A);
	set_name	(0X355B,	"aUsbupdateClear");
	create_strlit	(0X357A,	0X358D);
	set_name	(0X357A,	"aUsbupdatePrint");
	create_strlit	(0X358D,	0X3593);
	set_name	(0X358D,	"aLseek");
	create_strlit	(0X3593,	0X35AD);
	set_name	(0X3593,	"aUsbupdateRegis");
	create_strlit	(0X35AD,	0X35B5);
	set_name	(0X35AD,	"aUsbinit");
	create_strlit	(0X35B5,	0X35BC);
	set_name	(0X35B5,	"aUsbdel");
	create_strlit	(0X35BC,	0X35D1);
	set_name	(0X35BC,	"aIfusbpartition");
	create_strlit	(0X35D1,	0X35EA);
	set_name	(0X35D1,	"aUsbupdateInitr");
	create_strlit	(0X35EA,	0X3604);
	set_name	(0X35EA,	"aUsbupdatePrint_0");
	create_strlit	(0X3604,	0X361D);
	set_name	(0X3604,	"aUsbupdateSaver");
	create_strlit	(0X361D,	0X362F);
	set_name	(0X361D,	"aUsbupdateInitl");
	create_strlit	(0X362F,	0X3641);
	set_name	(0X362F,	"aUsbupdateSavel");
	create_strlit	(0X3641,	0X3648);
	set_name	(0X3641,	"aStrcmp");
	create_strlit	(0X3648,	0X3650);
	set_name	(0X3648,	"aOpendir");
	create_strlit	(0X3650,	0X3657);
	set_name	(0X3650,	"aStrcpy");
	create_strlit	(0X3657,	0X365F);
	set_name	(0X3657,	"aReaddir");
	create_strlit	(0X365F,	0X3668);
	set_name	(0X365F,	"aClosedir");
	create_strlit	(0X3668,	0X3690);
	set_name	(0X3668,	"aUsbupdatecheck");
	create_strlit	(0X3690,	0X3697);
	set_name	(0X3690,	"aStrcat");
	create_strlit	(0X3697,	0X36B9);
	set_name	(0X3697,	"aUsbupdatecheck_0");
	create_strlit	(0X36B9,	0X36DE);
	set_name	(0X36B9,	"aUsbupdatecheck_1");
	create_strlit	(0X36DE,	0X36FF);
	set_name	(0X36DE,	"aUsbupdatecheck_2");
	create_strlit	(0X36FF,	0X3720);
	set_name	(0X36FF,	"aUsbupdatecheck_3");
	create_strlit	(0X3720,	0X3746);
	set_name	(0X3720,	"aUsbupdatecheck_4");
	create_strlit	(0X3746,	0X3771);
	set_name	(0X3746,	"aUsbupdatecheck_5");
	create_strlit	(0X3771,	0X3794);
	set_name	(0X3771,	"aUsbupdatecheck_6");
	create_strlit	(0X3794,	0X37B6);
	set_name	(0X3794,	"aUsbupdatecheck_7");
	create_strlit	(0X37B6,	0X37CF);
	set_name	(0X37B6,	"aUsbupdatecheck_8");
	create_strlit	(0X37CF,	0X37E2);
	set_name	(0X37CF,	"aUsbupdateDealA");
	create_strlit	(0X37E2,	0X37F9);
	set_name	(0X37E2,	"aUsbupdateCheck");
	create_strlit	(0X37F9,	0X3802);
	set_name	(0X37F9,	"aParaGet");
	create_strlit	(0X3802,	0X380B);
	set_name	(0X3802,	"aParaSet");
	create_strlit	(0X380B,	0X3815);
	set_name	(0X380B,	"aParaInit");
	create_strlit	(0X3815,	0X382A);
	set_name	(0X3815,	"aMd5BlockHostOr");
	create_strlit	(0X382A,	0X383F);
	set_name	(0X382A,	"aMd5BlockDataOr");
	create_strlit	(0X383F,	0X384D);
	set_name	(0X383F,	"aMd5Transform");
	create_strlit	(0X384D,	0X3859);
	set_name	(0X384D,	"aMd5Version");
	create_strlit	(0X3859,	0X3865);
	set_name	(0X3859,	"aAesEncrypt");
	create_strlit	(0X3865,	0X3871);
	set_name	(0X3865,	"aAesDecrypt");
	create_strlit	(0X3871,	0X387C);
	set_name	(0X3871,	"aLibrtSo1");
	create_strlit	(0X387C,	0X388C);
	set_name	(0X387C,	"aLibpthreadSo0");
	create_strlit	(0X388C,	0X389C);
	set_name	(0X388C,	"aLibusb10So0");
	create_strlit	(0X389C,	0X38AC);
	set_name	(0X389C,	"aLibusbmuxdSo2");
	create_strlit	(0X38AC,	0X38BA);
	set_name	(0X38AC,	"aLibplistSo1");
	create_strlit	(0X38BA,	0X38C7);
	set_name	(0X38BA,	"aLibxml2So2");
	create_strlit	(0X38C7,	0X38D1);
	set_name	(0X38C7,	"aLibzSo1");
	create_strlit	(0X38D1,	0X38D7);
	set_name	(0X38D1,	"aRaise");
	create_strlit	(0X38D7,	0X38E5);
	set_name	(0X38D7,	"aLibgccSSo1");
	create_strlit	(0X38E5,	0X38EF);
	set_name	(0X38E5,	"aLibcSo6");
	create_strlit	(0X38EF,	0X38F7);
	set_name	(0X38EF,	"aXstat");
	create_strlit	(0X38F7,	0X3905);
	set_name	(0X38F7,	"aExidxStart");
	create_strlit	(0X3905,	0X3911);
	set_name	(0X3905,	"aExidxEnd");
	create_strlit	(0X3911,	0X391E);
	set_name	(0X3911,	"aDataStart");
	create_strlit	(0X391E,	0X3925);
	set_name	(0X391E,	"aEdata");
	create_strlit	(0X3925,	0X3931);
	set_name	(0X3925,	"aBssStart");
	create_strlit	(0X3931,	0X393F);
	set_name	(0X3931,	"aBssStart_0");
	create_strlit	(0X393F,	0X394B);
	set_name	(0X393F,	"aBssEnd");
	create_strlit	(0X394B,	0X3953);
	set_name	(0X394B,	"aEnd");
	create_strlit	(0X3953,	0X395B);
	set_name	(0X3953,	"aGcc35");
	create_strlit	(0X395B,	0X3965);
	set_name	(0X395B,	"aGlibc24");
	create_byte	(0X3965);
	make_array	(0X3965,	0X3);
	create_dword	(0X3968);
	create_dword	(0X396C);
	make_array	(0X396C,	0X15);
	create_dword	(0X39C0);
	make_array	(0X39C0,	0XAF);
	create_dword	(0X3C7C);
	make_array	(0X3C7C,	0X8);
	create_dword	(0X3C9C);
	make_array	(0X3C9C,	0X8);
	create_dword	(0X3CBC);
	make_array	(0X3CBC,	0X4);
	create_dword	(0X3CCC);
	make_array	(0X3CCC,	0X4);
	set_cmt	(0X3CDC,	"R_ARM_RELATIVE",	0);
	update_extra_cmt		(0X3CDC,	E_PREV + 0,	"; ELF REL Relocation Table");
	MakeStruct	(0X3CDC,	"Elf32_Rel");
	set_cmt	(0X3CE4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3CE4,	"Elf32_Rel");
	set_cmt	(0X3CEC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3CEC,	"Elf32_Rel");
	set_cmt	(0X3CF4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3CF4,	"Elf32_Rel");
	set_cmt	(0X3CFC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3CFC,	"Elf32_Rel");
	set_cmt	(0X3D04,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D04,	"Elf32_Rel");
	set_cmt	(0X3D0C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D0C,	"Elf32_Rel");
	set_cmt	(0X3D14,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D14,	"Elf32_Rel");
	set_cmt	(0X3D1C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D1C,	"Elf32_Rel");
	set_cmt	(0X3D24,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D24,	"Elf32_Rel");
	set_cmt	(0X3D2C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D2C,	"Elf32_Rel");
	set_cmt	(0X3D34,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D34,	"Elf32_Rel");
	set_cmt	(0X3D3C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D3C,	"Elf32_Rel");
	set_cmt	(0X3D44,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D44,	"Elf32_Rel");
	set_cmt	(0X3D4C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D4C,	"Elf32_Rel");
	set_cmt	(0X3D54,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D54,	"Elf32_Rel");
	set_cmt	(0X3D5C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D5C,	"Elf32_Rel");
	set_cmt	(0X3D64,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D64,	"Elf32_Rel");
	set_cmt	(0X3D6C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D6C,	"Elf32_Rel");
	set_cmt	(0X3D74,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D74,	"Elf32_Rel");
	set_cmt	(0X3D7C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D7C,	"Elf32_Rel");
	set_cmt	(0X3D84,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D84,	"Elf32_Rel");
	set_cmt	(0X3D8C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D8C,	"Elf32_Rel");
	set_cmt	(0X3D94,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D94,	"Elf32_Rel");
	set_cmt	(0X3D9C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3D9C,	"Elf32_Rel");
	set_cmt	(0X3DA4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3DA4,	"Elf32_Rel");
	set_cmt	(0X3DAC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3DAC,	"Elf32_Rel");
	set_cmt	(0X3DB4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3DB4,	"Elf32_Rel");
	set_cmt	(0X3DBC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3DBC,	"Elf32_Rel");
	set_cmt	(0X3DC4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3DC4,	"Elf32_Rel");
	set_cmt	(0X3DCC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3DCC,	"Elf32_Rel");
	set_cmt	(0X3DD4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3DD4,	"Elf32_Rel");
	set_cmt	(0X3DDC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3DDC,	"Elf32_Rel");
	set_cmt	(0X3DE4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3DE4,	"Elf32_Rel");
	set_cmt	(0X3DEC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3DEC,	"Elf32_Rel");
	set_cmt	(0X3DF4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3DF4,	"Elf32_Rel");
	set_cmt	(0X3DFC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3DFC,	"Elf32_Rel");
	set_cmt	(0X3E04,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E04,	"Elf32_Rel");
	set_cmt	(0X3E0C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E0C,	"Elf32_Rel");
	set_cmt	(0X3E14,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E14,	"Elf32_Rel");
	set_cmt	(0X3E1C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E1C,	"Elf32_Rel");
	set_cmt	(0X3E24,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E24,	"Elf32_Rel");
	set_cmt	(0X3E2C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E2C,	"Elf32_Rel");
	set_cmt	(0X3E34,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E34,	"Elf32_Rel");
	set_cmt	(0X3E3C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E3C,	"Elf32_Rel");
	set_cmt	(0X3E44,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E44,	"Elf32_Rel");
	set_cmt	(0X3E4C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E4C,	"Elf32_Rel");
	set_cmt	(0X3E54,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E54,	"Elf32_Rel");
	set_cmt	(0X3E5C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E5C,	"Elf32_Rel");
	set_cmt	(0X3E64,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E64,	"Elf32_Rel");
	set_cmt	(0X3E6C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E6C,	"Elf32_Rel");
	set_cmt	(0X3E74,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E74,	"Elf32_Rel");
	set_cmt	(0X3E7C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E7C,	"Elf32_Rel");
	set_cmt	(0X3E84,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E84,	"Elf32_Rel");
	set_cmt	(0X3E8C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E8C,	"Elf32_Rel");
	set_cmt	(0X3E94,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E94,	"Elf32_Rel");
	set_cmt	(0X3E9C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3E9C,	"Elf32_Rel");
	set_cmt	(0X3EA4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3EA4,	"Elf32_Rel");
	set_cmt	(0X3EAC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3EAC,	"Elf32_Rel");
	set_cmt	(0X3EB4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3EB4,	"Elf32_Rel");
	set_cmt	(0X3EBC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3EBC,	"Elf32_Rel");
	set_cmt	(0X3EC4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3EC4,	"Elf32_Rel");
	set_cmt	(0X3ECC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3ECC,	"Elf32_Rel");
	set_cmt	(0X3ED4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3ED4,	"Elf32_Rel");
	set_cmt	(0X3EDC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3EDC,	"Elf32_Rel");
	set_cmt	(0X3EE4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3EE4,	"Elf32_Rel");
	set_cmt	(0X3EEC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3EEC,	"Elf32_Rel");
	set_cmt	(0X3EF4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3EF4,	"Elf32_Rel");
	set_cmt	(0X3EFC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3EFC,	"Elf32_Rel");
	set_cmt	(0X3F04,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F04,	"Elf32_Rel");
	set_cmt	(0X3F0C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F0C,	"Elf32_Rel");
	set_cmt	(0X3F14,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F14,	"Elf32_Rel");
	set_cmt	(0X3F1C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F1C,	"Elf32_Rel");
	set_cmt	(0X3F24,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F24,	"Elf32_Rel");
	set_cmt	(0X3F2C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F2C,	"Elf32_Rel");
	set_cmt	(0X3F34,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F34,	"Elf32_Rel");
	set_cmt	(0X3F3C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F3C,	"Elf32_Rel");
	set_cmt	(0X3F44,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F44,	"Elf32_Rel");
	set_cmt	(0X3F4C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F4C,	"Elf32_Rel");
	set_cmt	(0X3F54,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F54,	"Elf32_Rel");
	set_cmt	(0X3F5C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F5C,	"Elf32_Rel");
	set_cmt	(0X3F64,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F64,	"Elf32_Rel");
	set_cmt	(0X3F6C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F6C,	"Elf32_Rel");
	set_cmt	(0X3F74,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F74,	"Elf32_Rel");
	set_cmt	(0X3F7C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F7C,	"Elf32_Rel");
	set_cmt	(0X3F84,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F84,	"Elf32_Rel");
	set_cmt	(0X3F8C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F8C,	"Elf32_Rel");
	set_cmt	(0X3F94,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F94,	"Elf32_Rel");
	set_cmt	(0X3F9C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3F9C,	"Elf32_Rel");
	set_cmt	(0X3FA4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3FA4,	"Elf32_Rel");
	set_cmt	(0X3FAC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3FAC,	"Elf32_Rel");
	set_cmt	(0X3FB4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3FB4,	"Elf32_Rel");
	set_cmt	(0X3FBC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3FBC,	"Elf32_Rel");
	set_cmt	(0X3FC4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3FC4,	"Elf32_Rel");
	set_cmt	(0X3FCC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3FCC,	"Elf32_Rel");
	set_cmt	(0X3FD4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3FD4,	"Elf32_Rel");
	set_cmt	(0X3FDC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3FDC,	"Elf32_Rel");
	set_cmt	(0X3FE4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3FE4,	"Elf32_Rel");
	set_cmt	(0X3FEC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3FEC,	"Elf32_Rel");
	set_cmt	(0X3FF4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3FF4,	"Elf32_Rel");
	set_cmt	(0X3FFC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X3FFC,	"Elf32_Rel");
	set_cmt	(0X4004,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4004,	"Elf32_Rel");
	set_cmt	(0X400C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X400C,	"Elf32_Rel");
	set_cmt	(0X4014,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4014,	"Elf32_Rel");
	set_cmt	(0X401C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X401C,	"Elf32_Rel");
	set_cmt	(0X4024,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4024,	"Elf32_Rel");
	set_cmt	(0X402C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X402C,	"Elf32_Rel");
	set_cmt	(0X4034,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4034,	"Elf32_Rel");
	set_cmt	(0X403C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X403C,	"Elf32_Rel");
	set_cmt	(0X4044,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4044,	"Elf32_Rel");
	set_cmt	(0X404C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X404C,	"Elf32_Rel");
	set_cmt	(0X4054,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4054,	"Elf32_Rel");
	set_cmt	(0X405C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X405C,	"Elf32_Rel");
	set_cmt	(0X4064,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4064,	"Elf32_Rel");
	set_cmt	(0X406C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X406C,	"Elf32_Rel");
	set_cmt	(0X4074,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4074,	"Elf32_Rel");
	set_cmt	(0X407C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X407C,	"Elf32_Rel");
	set_cmt	(0X4084,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4084,	"Elf32_Rel");
	set_cmt	(0X408C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X408C,	"Elf32_Rel");
	set_cmt	(0X4094,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4094,	"Elf32_Rel");
	set_cmt	(0X409C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X409C,	"Elf32_Rel");
	set_cmt	(0X40A4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X40A4,	"Elf32_Rel");
	set_cmt	(0X40AC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X40AC,	"Elf32_Rel");
	set_cmt	(0X40B4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X40B4,	"Elf32_Rel");
	set_cmt	(0X40BC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X40BC,	"Elf32_Rel");
	set_cmt	(0X40C4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X40C4,	"Elf32_Rel");
	set_cmt	(0X40CC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X40CC,	"Elf32_Rel");
	set_cmt	(0X40D4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X40D4,	"Elf32_Rel");
	set_cmt	(0X40DC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X40DC,	"Elf32_Rel");
	set_cmt	(0X40E4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X40E4,	"Elf32_Rel");
	set_cmt	(0X40EC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X40EC,	"Elf32_Rel");
	set_cmt	(0X40F4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X40F4,	"Elf32_Rel");
	set_cmt	(0X40FC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X40FC,	"Elf32_Rel");
	set_cmt	(0X4104,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4104,	"Elf32_Rel");
	set_cmt	(0X410C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X410C,	"Elf32_Rel");
	set_cmt	(0X4114,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4114,	"Elf32_Rel");
	set_cmt	(0X411C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X411C,	"Elf32_Rel");
	set_cmt	(0X4124,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4124,	"Elf32_Rel");
	set_cmt	(0X412C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X412C,	"Elf32_Rel");
	set_cmt	(0X4134,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4134,	"Elf32_Rel");
	set_cmt	(0X413C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X413C,	"Elf32_Rel");
	set_cmt	(0X4144,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4144,	"Elf32_Rel");
	set_cmt	(0X414C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X414C,	"Elf32_Rel");
	set_cmt	(0X4154,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4154,	"Elf32_Rel");
	set_cmt	(0X415C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X415C,	"Elf32_Rel");
	set_cmt	(0X4164,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4164,	"Elf32_Rel");
	set_cmt	(0X416C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X416C,	"Elf32_Rel");
	set_cmt	(0X4174,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4174,	"Elf32_Rel");
	set_cmt	(0X417C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X417C,	"Elf32_Rel");
	set_cmt	(0X4184,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4184,	"Elf32_Rel");
	set_cmt	(0X418C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X418C,	"Elf32_Rel");
	set_cmt	(0X4194,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4194,	"Elf32_Rel");
	set_cmt	(0X419C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X419C,	"Elf32_Rel");
	set_cmt	(0X41A4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X41A4,	"Elf32_Rel");
	set_cmt	(0X41AC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X41AC,	"Elf32_Rel");
	set_cmt	(0X41B4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X41B4,	"Elf32_Rel");
	set_cmt	(0X41BC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X41BC,	"Elf32_Rel");
	set_cmt	(0X41C4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X41C4,	"Elf32_Rel");
	set_cmt	(0X41CC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X41CC,	"Elf32_Rel");
	set_cmt	(0X41D4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X41D4,	"Elf32_Rel");
	set_cmt	(0X41DC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X41DC,	"Elf32_Rel");
	set_cmt	(0X41E4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X41E4,	"Elf32_Rel");
	set_cmt	(0X41EC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X41EC,	"Elf32_Rel");
	set_cmt	(0X41F4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X41F4,	"Elf32_Rel");
	set_cmt	(0X41FC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X41FC,	"Elf32_Rel");
	set_cmt	(0X4204,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4204,	"Elf32_Rel");
	set_cmt	(0X420C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X420C,	"Elf32_Rel");
	set_cmt	(0X4214,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4214,	"Elf32_Rel");
	set_cmt	(0X421C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X421C,	"Elf32_Rel");
	set_cmt	(0X4224,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4224,	"Elf32_Rel");
	set_cmt	(0X422C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X422C,	"Elf32_Rel");
	set_cmt	(0X4234,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4234,	"Elf32_Rel");
	set_cmt	(0X423C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X423C,	"Elf32_Rel");
	set_cmt	(0X4244,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4244,	"Elf32_Rel");
	set_cmt	(0X424C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X424C,	"Elf32_Rel");
	set_cmt	(0X4254,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4254,	"Elf32_Rel");
	set_cmt	(0X425C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X425C,	"Elf32_Rel");
	set_cmt	(0X4264,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4264,	"Elf32_Rel");
	set_cmt	(0X426C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X426C,	"Elf32_Rel");
	set_cmt	(0X4274,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4274,	"Elf32_Rel");
	set_cmt	(0X427C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X427C,	"Elf32_Rel");
	set_cmt	(0X4284,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4284,	"Elf32_Rel");
	set_cmt	(0X428C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X428C,	"Elf32_Rel");
	set_cmt	(0X4294,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4294,	"Elf32_Rel");
	set_cmt	(0X429C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X429C,	"Elf32_Rel");
	set_cmt	(0X42A4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X42A4,	"Elf32_Rel");
	set_cmt	(0X42AC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X42AC,	"Elf32_Rel");
	set_cmt	(0X42B4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X42B4,	"Elf32_Rel");
	set_cmt	(0X42BC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X42BC,	"Elf32_Rel");
	set_cmt	(0X42C4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X42C4,	"Elf32_Rel");
	set_cmt	(0X42CC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X42CC,	"Elf32_Rel");
	set_cmt	(0X42D4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X42D4,	"Elf32_Rel");
	set_cmt	(0X42DC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X42DC,	"Elf32_Rel");
	set_cmt	(0X42E4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X42E4,	"Elf32_Rel");
	set_cmt	(0X42EC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X42EC,	"Elf32_Rel");
	set_cmt	(0X42F4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X42F4,	"Elf32_Rel");
	set_cmt	(0X42FC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X42FC,	"Elf32_Rel");
	set_cmt	(0X4304,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4304,	"Elf32_Rel");
	set_cmt	(0X430C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X430C,	"Elf32_Rel");
	set_cmt	(0X4314,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4314,	"Elf32_Rel");
	set_cmt	(0X431C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X431C,	"Elf32_Rel");
	set_cmt	(0X4324,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4324,	"Elf32_Rel");
	set_cmt	(0X432C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X432C,	"Elf32_Rel");
	set_cmt	(0X4334,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4334,	"Elf32_Rel");
	set_cmt	(0X433C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X433C,	"Elf32_Rel");
	set_cmt	(0X4344,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4344,	"Elf32_Rel");
	set_cmt	(0X434C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X434C,	"Elf32_Rel");
	set_cmt	(0X4354,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4354,	"Elf32_Rel");
	set_cmt	(0X435C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X435C,	"Elf32_Rel");
	set_cmt	(0X4364,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4364,	"Elf32_Rel");
	set_cmt	(0X436C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X436C,	"Elf32_Rel");
	set_cmt	(0X4374,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4374,	"Elf32_Rel");
	set_cmt	(0X437C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X437C,	"Elf32_Rel");
	set_cmt	(0X4384,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4384,	"Elf32_Rel");
	set_cmt	(0X438C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X438C,	"Elf32_Rel");
	set_cmt	(0X4394,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4394,	"Elf32_Rel");
	set_cmt	(0X439C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X439C,	"Elf32_Rel");
	set_cmt	(0X43A4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X43A4,	"Elf32_Rel");
	set_cmt	(0X43AC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X43AC,	"Elf32_Rel");
	set_cmt	(0X43B4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X43B4,	"Elf32_Rel");
	set_cmt	(0X43BC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X43BC,	"Elf32_Rel");
	set_cmt	(0X43C4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X43C4,	"Elf32_Rel");
	set_cmt	(0X43CC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X43CC,	"Elf32_Rel");
	set_cmt	(0X43D4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X43D4,	"Elf32_Rel");
	set_cmt	(0X43DC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X43DC,	"Elf32_Rel");
	set_cmt	(0X43E4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X43E4,	"Elf32_Rel");
	set_cmt	(0X43EC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X43EC,	"Elf32_Rel");
	set_cmt	(0X43F4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X43F4,	"Elf32_Rel");
	set_cmt	(0X43FC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X43FC,	"Elf32_Rel");
	set_cmt	(0X4404,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4404,	"Elf32_Rel");
	set_cmt	(0X440C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X440C,	"Elf32_Rel");
	set_cmt	(0X4414,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4414,	"Elf32_Rel");
	set_cmt	(0X441C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X441C,	"Elf32_Rel");
	set_cmt	(0X4424,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4424,	"Elf32_Rel");
	set_cmt	(0X442C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X442C,	"Elf32_Rel");
	set_cmt	(0X4434,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4434,	"Elf32_Rel");
	set_cmt	(0X443C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X443C,	"Elf32_Rel");
	set_cmt	(0X4444,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4444,	"Elf32_Rel");
	set_cmt	(0X444C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X444C,	"Elf32_Rel");
	set_cmt	(0X4454,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4454,	"Elf32_Rel");
	set_cmt	(0X445C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X445C,	"Elf32_Rel");
	set_cmt	(0X4464,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4464,	"Elf32_Rel");
	set_cmt	(0X446C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X446C,	"Elf32_Rel");
	set_cmt	(0X4474,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4474,	"Elf32_Rel");
	set_cmt	(0X447C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X447C,	"Elf32_Rel");
	set_cmt	(0X4484,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4484,	"Elf32_Rel");
	set_cmt	(0X448C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X448C,	"Elf32_Rel");
	set_cmt	(0X4494,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4494,	"Elf32_Rel");
	set_cmt	(0X449C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X449C,	"Elf32_Rel");
	set_cmt	(0X44A4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X44A4,	"Elf32_Rel");
	set_cmt	(0X44AC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X44AC,	"Elf32_Rel");
	set_cmt	(0X44B4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X44B4,	"Elf32_Rel");
	set_cmt	(0X44BC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X44BC,	"Elf32_Rel");
	set_cmt	(0X44C4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X44C4,	"Elf32_Rel");
	set_cmt	(0X44CC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X44CC,	"Elf32_Rel");
	set_cmt	(0X44D4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X44D4,	"Elf32_Rel");
	set_cmt	(0X44DC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X44DC,	"Elf32_Rel");
	set_cmt	(0X44E4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X44E4,	"Elf32_Rel");
	set_cmt	(0X44EC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X44EC,	"Elf32_Rel");
	set_cmt	(0X44F4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X44F4,	"Elf32_Rel");
	set_cmt	(0X44FC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X44FC,	"Elf32_Rel");
	set_cmt	(0X4504,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4504,	"Elf32_Rel");
	set_cmt	(0X450C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X450C,	"Elf32_Rel");
	set_cmt	(0X4514,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4514,	"Elf32_Rel");
	set_cmt	(0X451C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X451C,	"Elf32_Rel");
	set_cmt	(0X4524,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4524,	"Elf32_Rel");
	set_cmt	(0X452C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X452C,	"Elf32_Rel");
	set_cmt	(0X4534,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4534,	"Elf32_Rel");
	set_cmt	(0X453C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X453C,	"Elf32_Rel");
	set_cmt	(0X4544,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4544,	"Elf32_Rel");
	set_cmt	(0X454C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X454C,	"Elf32_Rel");
	set_cmt	(0X4554,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4554,	"Elf32_Rel");
	set_cmt	(0X455C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X455C,	"Elf32_Rel");
	set_cmt	(0X4564,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4564,	"Elf32_Rel");
	set_cmt	(0X456C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X456C,	"Elf32_Rel");
	set_cmt	(0X4574,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4574,	"Elf32_Rel");
	set_cmt	(0X457C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X457C,	"Elf32_Rel");
	set_cmt	(0X4584,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4584,	"Elf32_Rel");
	set_cmt	(0X458C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X458C,	"Elf32_Rel");
	set_cmt	(0X4594,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4594,	"Elf32_Rel");
	set_cmt	(0X459C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X459C,	"Elf32_Rel");
	set_cmt	(0X45A4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X45A4,	"Elf32_Rel");
	set_cmt	(0X45AC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X45AC,	"Elf32_Rel");
	set_cmt	(0X45B4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X45B4,	"Elf32_Rel");
	set_cmt	(0X45BC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X45BC,	"Elf32_Rel");
	set_cmt	(0X45C4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X45C4,	"Elf32_Rel");
	set_cmt	(0X45CC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X45CC,	"Elf32_Rel");
	set_cmt	(0X45D4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X45D4,	"Elf32_Rel");
	set_cmt	(0X45DC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X45DC,	"Elf32_Rel");
	set_cmt	(0X45E4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X45E4,	"Elf32_Rel");
	set_cmt	(0X45EC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X45EC,	"Elf32_Rel");
	set_cmt	(0X45F4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X45F4,	"Elf32_Rel");
	set_cmt	(0X45FC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X45FC,	"Elf32_Rel");
	set_cmt	(0X4604,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4604,	"Elf32_Rel");
	set_cmt	(0X460C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X460C,	"Elf32_Rel");
	set_cmt	(0X4614,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4614,	"Elf32_Rel");
	set_cmt	(0X461C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X461C,	"Elf32_Rel");
	set_cmt	(0X4624,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4624,	"Elf32_Rel");
	set_cmt	(0X462C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X462C,	"Elf32_Rel");
	set_cmt	(0X4634,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4634,	"Elf32_Rel");
	set_cmt	(0X463C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X463C,	"Elf32_Rel");
	set_cmt	(0X4644,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4644,	"Elf32_Rel");
	set_cmt	(0X464C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X464C,	"Elf32_Rel");
	set_cmt	(0X4654,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4654,	"Elf32_Rel");
	set_cmt	(0X465C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X465C,	"Elf32_Rel");
	set_cmt	(0X4664,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4664,	"Elf32_Rel");
	set_cmt	(0X466C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X466C,	"Elf32_Rel");
	set_cmt	(0X4674,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4674,	"Elf32_Rel");
	set_cmt	(0X467C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X467C,	"Elf32_Rel");
	set_cmt	(0X4684,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4684,	"Elf32_Rel");
	set_cmt	(0X468C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X468C,	"Elf32_Rel");
	set_cmt	(0X4694,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4694,	"Elf32_Rel");
	set_cmt	(0X469C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X469C,	"Elf32_Rel");
	set_cmt	(0X46A4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X46A4,	"Elf32_Rel");
	set_cmt	(0X46AC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X46AC,	"Elf32_Rel");
	set_cmt	(0X46B4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X46B4,	"Elf32_Rel");
	set_cmt	(0X46BC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X46BC,	"Elf32_Rel");
	set_cmt	(0X46C4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X46C4,	"Elf32_Rel");
	set_cmt	(0X46CC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X46CC,	"Elf32_Rel");
	set_cmt	(0X46D4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X46D4,	"Elf32_Rel");
	set_cmt	(0X46DC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X46DC,	"Elf32_Rel");
	set_cmt	(0X46E4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X46E4,	"Elf32_Rel");
	set_cmt	(0X46EC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X46EC,	"Elf32_Rel");
	set_cmt	(0X46F4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X46F4,	"Elf32_Rel");
	set_cmt	(0X46FC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X46FC,	"Elf32_Rel");
	set_cmt	(0X4704,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4704,	"Elf32_Rel");
	set_cmt	(0X470C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X470C,	"Elf32_Rel");
	set_cmt	(0X4714,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4714,	"Elf32_Rel");
	set_cmt	(0X471C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X471C,	"Elf32_Rel");
	set_cmt	(0X4724,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4724,	"Elf32_Rel");
	set_cmt	(0X472C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X472C,	"Elf32_Rel");
	set_cmt	(0X4734,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4734,	"Elf32_Rel");
	set_cmt	(0X473C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X473C,	"Elf32_Rel");
	set_cmt	(0X4744,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4744,	"Elf32_Rel");
	set_cmt	(0X474C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X474C,	"Elf32_Rel");
	set_cmt	(0X4754,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4754,	"Elf32_Rel");
	set_cmt	(0X475C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X475C,	"Elf32_Rel");
	set_cmt	(0X4764,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4764,	"Elf32_Rel");
	set_cmt	(0X476C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X476C,	"Elf32_Rel");
	set_cmt	(0X4774,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4774,	"Elf32_Rel");
	set_cmt	(0X477C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X477C,	"Elf32_Rel");
	set_cmt	(0X4784,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4784,	"Elf32_Rel");
	set_cmt	(0X478C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X478C,	"Elf32_Rel");
	set_cmt	(0X4794,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4794,	"Elf32_Rel");
	set_cmt	(0X479C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X479C,	"Elf32_Rel");
	set_cmt	(0X47A4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X47A4,	"Elf32_Rel");
	set_cmt	(0X47AC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X47AC,	"Elf32_Rel");
	set_cmt	(0X47B4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X47B4,	"Elf32_Rel");
	set_cmt	(0X47BC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X47BC,	"Elf32_Rel");
	set_cmt	(0X47C4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X47C4,	"Elf32_Rel");
	set_cmt	(0X47CC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X47CC,	"Elf32_Rel");
	set_cmt	(0X47D4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X47D4,	"Elf32_Rel");
	set_cmt	(0X47DC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X47DC,	"Elf32_Rel");
	set_cmt	(0X47E4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X47E4,	"Elf32_Rel");
	set_cmt	(0X47EC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X47EC,	"Elf32_Rel");
	set_cmt	(0X47F4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X47F4,	"Elf32_Rel");
	set_cmt	(0X47FC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X47FC,	"Elf32_Rel");
	set_cmt	(0X4804,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4804,	"Elf32_Rel");
	set_cmt	(0X480C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X480C,	"Elf32_Rel");
	set_cmt	(0X4814,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4814,	"Elf32_Rel");
	set_cmt	(0X481C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X481C,	"Elf32_Rel");
	set_cmt	(0X4824,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4824,	"Elf32_Rel");
	set_cmt	(0X482C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X482C,	"Elf32_Rel");
	set_cmt	(0X4834,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4834,	"Elf32_Rel");
	set_cmt	(0X483C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X483C,	"Elf32_Rel");
	set_cmt	(0X4844,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4844,	"Elf32_Rel");
	set_cmt	(0X484C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X484C,	"Elf32_Rel");
	set_cmt	(0X4854,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4854,	"Elf32_Rel");
	set_cmt	(0X485C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X485C,	"Elf32_Rel");
	set_cmt	(0X4864,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4864,	"Elf32_Rel");
	set_cmt	(0X486C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X486C,	"Elf32_Rel");
	set_cmt	(0X4874,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4874,	"Elf32_Rel");
	set_cmt	(0X487C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X487C,	"Elf32_Rel");
	set_cmt	(0X4884,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4884,	"Elf32_Rel");
	set_cmt	(0X488C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X488C,	"Elf32_Rel");
	set_cmt	(0X4894,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4894,	"Elf32_Rel");
	set_cmt	(0X489C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X489C,	"Elf32_Rel");
	set_cmt	(0X48A4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X48A4,	"Elf32_Rel");
	set_cmt	(0X48AC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X48AC,	"Elf32_Rel");
	set_cmt	(0X48B4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X48B4,	"Elf32_Rel");
	set_cmt	(0X48BC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X48BC,	"Elf32_Rel");
	set_cmt	(0X48C4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X48C4,	"Elf32_Rel");
	set_cmt	(0X48CC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X48CC,	"Elf32_Rel");
	set_cmt	(0X48D4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X48D4,	"Elf32_Rel");
	set_cmt	(0X48DC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X48DC,	"Elf32_Rel");
	set_cmt	(0X48E4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X48E4,	"Elf32_Rel");
	set_cmt	(0X48EC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X48EC,	"Elf32_Rel");
	set_cmt	(0X48F4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X48F4,	"Elf32_Rel");
	set_cmt	(0X48FC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X48FC,	"Elf32_Rel");
	set_cmt	(0X4904,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4904,	"Elf32_Rel");
	set_cmt	(0X490C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X490C,	"Elf32_Rel");
	set_cmt	(0X4914,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4914,	"Elf32_Rel");
	set_cmt	(0X491C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X491C,	"Elf32_Rel");
	set_cmt	(0X4924,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4924,	"Elf32_Rel");
	set_cmt	(0X492C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X492C,	"Elf32_Rel");
	set_cmt	(0X4934,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4934,	"Elf32_Rel");
	set_cmt	(0X493C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X493C,	"Elf32_Rel");
	set_cmt	(0X4944,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4944,	"Elf32_Rel");
	set_cmt	(0X494C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X494C,	"Elf32_Rel");
	set_cmt	(0X4954,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4954,	"Elf32_Rel");
	set_cmt	(0X495C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X495C,	"Elf32_Rel");
	set_cmt	(0X4964,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4964,	"Elf32_Rel");
	set_cmt	(0X496C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X496C,	"Elf32_Rel");
	set_cmt	(0X4974,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4974,	"Elf32_Rel");
	set_cmt	(0X497C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X497C,	"Elf32_Rel");
	set_cmt	(0X4984,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4984,	"Elf32_Rel");
	set_cmt	(0X498C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X498C,	"Elf32_Rel");
	set_cmt	(0X4994,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4994,	"Elf32_Rel");
	set_cmt	(0X499C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X499C,	"Elf32_Rel");
	set_cmt	(0X49A4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X49A4,	"Elf32_Rel");
	set_cmt	(0X49AC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X49AC,	"Elf32_Rel");
	set_cmt	(0X49B4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X49B4,	"Elf32_Rel");
	set_cmt	(0X49BC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X49BC,	"Elf32_Rel");
	set_cmt	(0X49C4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X49C4,	"Elf32_Rel");
	set_cmt	(0X49CC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X49CC,	"Elf32_Rel");
	set_cmt	(0X49D4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X49D4,	"Elf32_Rel");
	set_cmt	(0X49DC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X49DC,	"Elf32_Rel");
	set_cmt	(0X49E4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X49E4,	"Elf32_Rel");
	set_cmt	(0X49EC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X49EC,	"Elf32_Rel");
	set_cmt	(0X49F4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X49F4,	"Elf32_Rel");
	set_cmt	(0X49FC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X49FC,	"Elf32_Rel");
	set_cmt	(0X4A04,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A04,	"Elf32_Rel");
	set_cmt	(0X4A0C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A0C,	"Elf32_Rel");
	set_cmt	(0X4A14,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A14,	"Elf32_Rel");
	set_cmt	(0X4A1C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A1C,	"Elf32_Rel");
	set_cmt	(0X4A24,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A24,	"Elf32_Rel");
	set_cmt	(0X4A2C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A2C,	"Elf32_Rel");
	set_cmt	(0X4A34,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A34,	"Elf32_Rel");
	set_cmt	(0X4A3C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A3C,	"Elf32_Rel");
	set_cmt	(0X4A44,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A44,	"Elf32_Rel");
	set_cmt	(0X4A4C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A4C,	"Elf32_Rel");
	set_cmt	(0X4A54,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A54,	"Elf32_Rel");
	set_cmt	(0X4A5C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A5C,	"Elf32_Rel");
	set_cmt	(0X4A64,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A64,	"Elf32_Rel");
	set_cmt	(0X4A6C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A6C,	"Elf32_Rel");
	set_cmt	(0X4A74,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A74,	"Elf32_Rel");
	set_cmt	(0X4A7C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A7C,	"Elf32_Rel");
	set_cmt	(0X4A84,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A84,	"Elf32_Rel");
	set_cmt	(0X4A8C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A8C,	"Elf32_Rel");
	set_cmt	(0X4A94,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A94,	"Elf32_Rel");
	set_cmt	(0X4A9C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4A9C,	"Elf32_Rel");
	set_cmt	(0X4AA4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4AA4,	"Elf32_Rel");
	set_cmt	(0X4AAC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4AAC,	"Elf32_Rel");
	set_cmt	(0X4AB4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4AB4,	"Elf32_Rel");
	set_cmt	(0X4ABC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4ABC,	"Elf32_Rel");
	set_cmt	(0X4AC4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4AC4,	"Elf32_Rel");
	set_cmt	(0X4ACC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4ACC,	"Elf32_Rel");
	set_cmt	(0X4AD4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4AD4,	"Elf32_Rel");
	set_cmt	(0X4ADC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4ADC,	"Elf32_Rel");
	set_cmt	(0X4AE4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4AE4,	"Elf32_Rel");
	set_cmt	(0X4AEC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4AEC,	"Elf32_Rel");
	set_cmt	(0X4AF4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4AF4,	"Elf32_Rel");
	set_cmt	(0X4AFC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4AFC,	"Elf32_Rel");
	set_cmt	(0X4B04,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B04,	"Elf32_Rel");
	set_cmt	(0X4B0C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B0C,	"Elf32_Rel");
	set_cmt	(0X4B14,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B14,	"Elf32_Rel");
	set_cmt	(0X4B1C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B1C,	"Elf32_Rel");
	set_cmt	(0X4B24,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B24,	"Elf32_Rel");
	set_cmt	(0X4B2C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B2C,	"Elf32_Rel");
	set_cmt	(0X4B34,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B34,	"Elf32_Rel");
	set_cmt	(0X4B3C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B3C,	"Elf32_Rel");
	set_cmt	(0X4B44,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B44,	"Elf32_Rel");
	set_cmt	(0X4B4C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B4C,	"Elf32_Rel");
	set_cmt	(0X4B54,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B54,	"Elf32_Rel");
	set_cmt	(0X4B5C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B5C,	"Elf32_Rel");
	set_cmt	(0X4B64,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B64,	"Elf32_Rel");
	set_cmt	(0X4B6C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B6C,	"Elf32_Rel");
	set_cmt	(0X4B74,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B74,	"Elf32_Rel");
	set_cmt	(0X4B7C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B7C,	"Elf32_Rel");
	set_cmt	(0X4B84,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B84,	"Elf32_Rel");
	set_cmt	(0X4B8C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B8C,	"Elf32_Rel");
	set_cmt	(0X4B94,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B94,	"Elf32_Rel");
	set_cmt	(0X4B9C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4B9C,	"Elf32_Rel");
	set_cmt	(0X4BA4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4BA4,	"Elf32_Rel");
	set_cmt	(0X4BAC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4BAC,	"Elf32_Rel");
	set_cmt	(0X4BB4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4BB4,	"Elf32_Rel");
	set_cmt	(0X4BBC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4BBC,	"Elf32_Rel");
	set_cmt	(0X4BC4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4BC4,	"Elf32_Rel");
	set_cmt	(0X4BCC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4BCC,	"Elf32_Rel");
	set_cmt	(0X4BD4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4BD4,	"Elf32_Rel");
	set_cmt	(0X4BDC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4BDC,	"Elf32_Rel");
	set_cmt	(0X4BE4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4BE4,	"Elf32_Rel");
	set_cmt	(0X4BEC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4BEC,	"Elf32_Rel");
	set_cmt	(0X4BF4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4BF4,	"Elf32_Rel");
	set_cmt	(0X4BFC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4BFC,	"Elf32_Rel");
	set_cmt	(0X4C04,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C04,	"Elf32_Rel");
	set_cmt	(0X4C0C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C0C,	"Elf32_Rel");
	set_cmt	(0X4C14,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C14,	"Elf32_Rel");
	set_cmt	(0X4C1C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C1C,	"Elf32_Rel");
	set_cmt	(0X4C24,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C24,	"Elf32_Rel");
	set_cmt	(0X4C2C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C2C,	"Elf32_Rel");
	set_cmt	(0X4C34,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C34,	"Elf32_Rel");
	set_cmt	(0X4C3C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C3C,	"Elf32_Rel");
	set_cmt	(0X4C44,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C44,	"Elf32_Rel");
	set_cmt	(0X4C4C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C4C,	"Elf32_Rel");
	set_cmt	(0X4C54,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C54,	"Elf32_Rel");
	set_cmt	(0X4C5C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C5C,	"Elf32_Rel");
	set_cmt	(0X4C64,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C64,	"Elf32_Rel");
	set_cmt	(0X4C6C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C6C,	"Elf32_Rel");
	set_cmt	(0X4C74,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C74,	"Elf32_Rel");
	set_cmt	(0X4C7C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C7C,	"Elf32_Rel");
	set_cmt	(0X4C84,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C84,	"Elf32_Rel");
	set_cmt	(0X4C8C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C8C,	"Elf32_Rel");
	set_cmt	(0X4C94,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C94,	"Elf32_Rel");
	set_cmt	(0X4C9C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4C9C,	"Elf32_Rel");
	set_cmt	(0X4CA4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4CA4,	"Elf32_Rel");
	set_cmt	(0X4CAC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4CAC,	"Elf32_Rel");
	set_cmt	(0X4CB4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4CB4,	"Elf32_Rel");
	set_cmt	(0X4CBC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4CBC,	"Elf32_Rel");
	set_cmt	(0X4CC4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4CC4,	"Elf32_Rel");
	set_cmt	(0X4CCC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4CCC,	"Elf32_Rel");
	set_cmt	(0X4CD4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4CD4,	"Elf32_Rel");
	set_cmt	(0X4CDC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4CDC,	"Elf32_Rel");
	set_cmt	(0X4CE4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4CE4,	"Elf32_Rel");
	set_cmt	(0X4CEC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4CEC,	"Elf32_Rel");
	set_cmt	(0X4CF4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4CF4,	"Elf32_Rel");
	set_cmt	(0X4CFC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4CFC,	"Elf32_Rel");
	set_cmt	(0X4D04,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D04,	"Elf32_Rel");
	set_cmt	(0X4D0C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D0C,	"Elf32_Rel");
	set_cmt	(0X4D14,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D14,	"Elf32_Rel");
	set_cmt	(0X4D1C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D1C,	"Elf32_Rel");
	set_cmt	(0X4D24,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D24,	"Elf32_Rel");
	set_cmt	(0X4D2C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D2C,	"Elf32_Rel");
	set_cmt	(0X4D34,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D34,	"Elf32_Rel");
	set_cmt	(0X4D3C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D3C,	"Elf32_Rel");
	set_cmt	(0X4D44,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D44,	"Elf32_Rel");
	set_cmt	(0X4D4C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D4C,	"Elf32_Rel");
	set_cmt	(0X4D54,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D54,	"Elf32_Rel");
	set_cmt	(0X4D5C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D5C,	"Elf32_Rel");
	set_cmt	(0X4D64,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D64,	"Elf32_Rel");
	set_cmt	(0X4D6C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D6C,	"Elf32_Rel");
	set_cmt	(0X4D74,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D74,	"Elf32_Rel");
	set_cmt	(0X4D7C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D7C,	"Elf32_Rel");
	set_cmt	(0X4D84,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D84,	"Elf32_Rel");
	set_cmt	(0X4D8C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D8C,	"Elf32_Rel");
	set_cmt	(0X4D94,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D94,	"Elf32_Rel");
	set_cmt	(0X4D9C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4D9C,	"Elf32_Rel");
	set_cmt	(0X4DA4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4DA4,	"Elf32_Rel");
	set_cmt	(0X4DAC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4DAC,	"Elf32_Rel");
	set_cmt	(0X4DB4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4DB4,	"Elf32_Rel");
	set_cmt	(0X4DBC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4DBC,	"Elf32_Rel");
	set_cmt	(0X4DC4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4DC4,	"Elf32_Rel");
	set_cmt	(0X4DCC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4DCC,	"Elf32_Rel");
	set_cmt	(0X4DD4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4DD4,	"Elf32_Rel");
	set_cmt	(0X4DDC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4DDC,	"Elf32_Rel");
	set_cmt	(0X4DE4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4DE4,	"Elf32_Rel");
	set_cmt	(0X4DEC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4DEC,	"Elf32_Rel");
	set_cmt	(0X4DF4,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4DF4,	"Elf32_Rel");
	set_cmt	(0X4DFC,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4DFC,	"Elf32_Rel");
	set_cmt	(0X4E04,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4E04,	"Elf32_Rel");
	set_cmt	(0X4E0C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4E0C,	"Elf32_Rel");
	set_cmt	(0X4E14,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4E14,	"Elf32_Rel");
	set_cmt	(0X4E1C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4E1C,	"Elf32_Rel");
	set_cmt	(0X4E24,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4E24,	"Elf32_Rel");
	set_cmt	(0X4E2C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4E2C,	"Elf32_Rel");
	set_cmt	(0X4E34,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4E34,	"Elf32_Rel");
	set_cmt	(0X4E3C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4E3C,	"Elf32_Rel");
	set_cmt	(0X4E44,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4E44,	"Elf32_Rel");
	set_cmt	(0X4E4C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4E4C,	"Elf32_Rel");
	set_cmt	(0X4E54,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4E54,	"Elf32_Rel");
	set_cmt	(0X4E5C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4E5C,	"Elf32_Rel");
	set_cmt	(0X4E64,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4E64,	"Elf32_Rel");
	set_cmt	(0X4E6C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4E6C,	"Elf32_Rel");
	set_cmt	(0X4E74,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4E74,	"Elf32_Rel");
	set_cmt	(0X4E7C,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4E7C,	"Elf32_Rel");
	set_cmt	(0X4E84,	"R_ARM_RELATIVE",	0);
	MakeStruct	(0X4E84,	"Elf32_Rel");
	set_cmt	(0X4E8C,	"R_ARM_ABS32 DjiCrc8Table",	0);
	MakeStruct	(0X4E8C,	"Elf32_Rel");
	set_cmt	(0X4E94,	"R_ARM_ABS32 wCRC_Table",	0);
	MakeStruct	(0X4E94,	"Elf32_Rel");
	set_cmt	(0X4E9C,	"R_ARM_ABS32 sha256_k",	0);
	MakeStruct	(0X4E9C,	"Elf32_Rel");
	set_cmt	(0X4EA4,	"R_ARM_ABS32 sha256_h0",	0);
	MakeStruct	(0X4EA4,	"Elf32_Rel");
	set_cmt	(0X4EAC,	"R_ARM_ABS32 muxdev",	0);
	MakeStruct	(0X4EAC,	"Elf32_Rel");
	set_cmt	(0X4EB4,	"R_ARM_ABS32 muxdev",	0);
	MakeStruct	(0X4EB4,	"Elf32_Rel");
	set_cmt	(0X4EBC,	"R_ARM_ABS32 aoa_is_conn",	0);
	MakeStruct	(0X4EBC,	"Elf32_Rel");
	set_cmt	(0X4EC4,	"R_ARM_ABS32 aoa_connect",	0);
	MakeStruct	(0X4EC4,	"Elf32_Rel");
	set_cmt	(0X4ECC,	"R_ARM_ABS32 aoa_close",	0);
	MakeStruct	(0X4ECC,	"Elf32_Rel");
	set_cmt	(0X4ED4,	"R_ARM_ABS32 aoa_recv",	0);
	MakeStruct	(0X4ED4,	"Elf32_Rel");
	set_cmt	(0X4EDC,	"R_ARM_ABS32 aoa_send",	0);
	MakeStruct	(0X4EDC,	"Elf32_Rel");
	set_cmt	(0X4EE4,	"R_ARM_ABS32 muxd_is_conn",	0);
	MakeStruct	(0X4EE4,	"Elf32_Rel");
	set_cmt	(0X4EEC,	"R_ARM_ABS32 muxd_conn",	0);
	MakeStruct	(0X4EEC,	"Elf32_Rel");
	set_cmt	(0X4EF4,	"R_ARM_ABS32 muxd_close",	0);
	MakeStruct	(0X4EF4,	"Elf32_Rel");
	set_cmt	(0X4EFC,	"R_ARM_ABS32 muxd_recv",	0);
	MakeStruct	(0X4EFC,	"Elf32_Rel");
	set_cmt	(0X4F04,	"R_ARM_ABS32 muxd_send",	0);
	MakeStruct	(0X4F04,	"Elf32_Rel");
	set_cmt	(0X4F0C,	"R_ARM_ABS32 Iap2_UsbDeviceTransport_IsConnect",	0);
	MakeStruct	(0X4F0C,	"Elf32_Rel");
	set_cmt	(0X4F14,	"R_ARM_ABS32 Iap2_UsbDeviceTransport_Send",	0);
	MakeStruct	(0X4F14,	"Elf32_Rel");
	set_cmt	(0X4F1C,	"R_ARM_ABS32 Iap2_UsbDeviceTransport_Recv",	0);
	MakeStruct	(0X4F1C,	"Elf32_Rel");
	set_cmt	(0X4F24,	"R_ARM_ABS32 Iap2_Ctrl_Session_Run",	0);
	MakeStruct	(0X4F24,	"Elf32_Rel");
	set_cmt	(0X4F2C,	"R_ARM_GLOB_DAT __gmon_start__",	0);
	MakeStruct	(0X4F2C,	"Elf32_Rel");
	set_cmt	(0X4F34,	"R_ARM_GLOB_DAT _Jv_RegisterClasses",	0);
	MakeStruct	(0X4F34,	"Elf32_Rel");
	set_cmt	(0X4F3C,	"R_ARM_GLOB_DAT __cxa_finalize",	0);
	MakeStruct	(0X4F3C,	"Elf32_Rel");
	set_cmt	(0X4F44,	"R_ARM_JUMP_SLOT Usbupdate_ClearDM368UpdateFlag",	0);
	update_extra_cmt		(0X4F44,	E_PREV + 0,	"; ELF JMPREL Relocation Table");
	MakeStruct	(0X4F44,	"Elf32_Rel");
	set_cmt	(0X4F4C,	"R_ARM_JUMP_SLOT open",	0);
	MakeStruct	(0X4F4C,	"Elf32_Rel");
	set_cmt	(0X4F54,	"R_ARM_JUMP_SLOT At88_Set_Chip_Info_File",	0);
	MakeStruct	(0X4F54,	"Elf32_Rel");
	set_cmt	(0X4F5C,	"R_ARM_JUMP_SLOT usbmuxd_connect",	0);
	MakeStruct	(0X4F5C,	"Elf32_Rel");
	set_cmt	(0X4F64,	"R_ARM_JUMP_SLOT AppleCP_Req_Challenge_Response",	0);
	MakeStruct	(0X4F64,	"Elf32_Rel");
	set_cmt	(0X4F6C,	"R_ARM_JUMP_SLOT sigemptyset",	0);
	MakeStruct	(0X4F6C,	"Elf32_Rel");
	set_cmt	(0X4F74,	"R_ARM_JUMP_SLOT Usbupdate_PrintLog",	0);
	MakeStruct	(0X4F74,	"Elf32_Rel");
	set_cmt	(0X4F7C,	"R_ARM_JUMP_SLOT CalCrc16",	0);
	MakeStruct	(0X4F7C,	"Elf32_Rel");
	set_cmt	(0X4F84,	"R_ARM_JUMP_SLOT At88_Read_Config",	0);
	MakeStruct	(0X4F84,	"Elf32_Rel");
	set_cmt	(0X4F8C,	"R_ARM_JUMP_SLOT connect",	0);
	MakeStruct	(0X4F8C,	"Elf32_Rel");
	set_cmt	(0X4F94,	"R_ARM_JUMP_SLOT sha256_transf",	0);
	MakeStruct	(0X4F94,	"Elf32_Rel");
	set_cmt	(0X4F9C,	"R_ARM_JUMP_SLOT srand",	0);
	MakeStruct	(0X4F9C,	"Elf32_Rel");
	set_cmt	(0X4FA4,	"R_ARM_JUMP_SLOT usbmuxd_send",	0);
	MakeStruct	(0X4FA4,	"Elf32_Rel");
	set_cmt	(0X4FAC,	"R_ARM_JUMP_SLOT open68013",	0);
	MakeStruct	(0X4FAC,	"Elf32_Rel");
	set_cmt	(0X4FB4,	"R_ARM_JUMP_SLOT localtime",	0);
	MakeStruct	(0X4FB4,	"Elf32_Rel");
	set_cmt	(0X4FBC,	"R_ARM_JUMP_SLOT opendir",	0);
	MakeStruct	(0X4FBC,	"Elf32_Rel");
	set_cmt	(0X4FC4,	"R_ARM_JUMP_SLOT At88_Check_Chip_Info",	0);
	MakeStruct	(0X4FC4,	"Elf32_Rel");
	set_cmt	(0X4FCC,	"R_ARM_JUMP_SLOT At88_Check_Factory_Info",	0);
	MakeStruct	(0X4FCC,	"Elf32_Rel");
	set_cmt	(0X4FD4,	"R_ARM_JUMP_SLOT memcmp",	0);
	MakeStruct	(0X4FD4,	"Elf32_Rel");
	set_cmt	(0X4FDC,	"R_ARM_JUMP_SLOT getTickCount",	0);
	MakeStruct	(0X4FDC,	"Elf32_Rel");
	set_cmt	(0X4FE4,	"R_ARM_JUMP_SLOT pthread_attr_setdetachstate",	0);
	MakeStruct	(0X4FE4,	"Elf32_Rel");
	set_cmt	(0X4FEC,	"R_ARM_JUMP_SLOT clock_gettime",	0);
	MakeStruct	(0X4FEC,	"Elf32_Rel");
	set_cmt	(0X4FF4,	"R_ARM_JUMP_SLOT __xstat",	0);
	MakeStruct	(0X4FF4,	"Elf32_Rel");
	set_cmt	(0X4FFC,	"R_ARM_JUMP_SLOT Iap2_Queue_Put",	0);
	MakeStruct	(0X4FFC,	"Elf32_Rel");
	set_cmt	(0X5004,	"R_ARM_JUMP_SLOT AES_set_decrypt_key",	0);
	MakeStruct	(0X5004,	"Elf32_Rel");
	set_cmt	(0X500C,	"R_ARM_JUMP_SLOT tcp_close",	0);
	MakeStruct	(0X500C,	"Elf32_Rel");
	set_cmt	(0X5014,	"R_ARM_JUMP_SLOT AES_encrypt",	0);
	MakeStruct	(0X5014,	"Elf32_Rel");
	set_cmt	(0X501C,	"R_ARM_JUMP_SLOT signal",	0);
	MakeStruct	(0X501C,	"Elf32_Rel");
	set_cmt	(0X5024,	"R_ARM_JUMP_SLOT msgget",	0);
	MakeStruct	(0X5024,	"Elf32_Rel");
	set_cmt	(0X502C,	"R_ARM_JUMP_SLOT pthread_attr_setschedpolicy",	0);
	MakeStruct	(0X502C,	"Elf32_Rel");
	set_cmt	(0X5034,	"R_ARM_JUMP_SLOT __gmon_start__",	0);
	MakeStruct	(0X5034,	"Elf32_Rel");
	set_cmt	(0X503C,	"R_ARM_JUMP_SLOT GetFileSize",	0);
	MakeStruct	(0X503C,	"Elf32_Rel");
	set_cmt	(0X5044,	"R_ARM_JUMP_SLOT GetCurrentTime",	0);
	MakeStruct	(0X5044,	"Elf32_Rel");
	set_cmt	(0X504C,	"R_ARM_JUMP_SLOT Usbupdatecheck_PrintResult_Error",	0);
	MakeStruct	(0X504C,	"Elf32_Rel");
	set_cmt	(0X5054,	"R_ARM_JUMP_SLOT pthread_mutexattr_settype",	0);
	MakeStruct	(0X5054,	"Elf32_Rel");
	set_cmt	(0X505C,	"R_ARM_JUMP_SLOT Pro_Cmd_Get_Version",	0);
	MakeStruct	(0X505C,	"Elf32_Rel");
	set_cmt	(0X5064,	"R_ARM_JUMP_SLOT libusb_free_device_list",	0);
	MakeStruct	(0X5064,	"Elf32_Rel");
	set_cmt	(0X506C,	"R_ARM_JUMP_SLOT inet_addr",	0);
	MakeStruct	(0X506C,	"Elf32_Rel");
	set_cmt	(0X5074,	"R_ARM_JUMP_SLOT At88_Check_Key",	0);
	MakeStruct	(0X5074,	"Elf32_Rel");
	set_cmt	(0X507C,	"R_ARM_JUMP_SLOT Queue_Create",	0);
	MakeStruct	(0X507C,	"Elf32_Rel");
	set_cmt	(0X5084,	"R_ARM_JUMP_SLOT fclose",	0);
	MakeStruct	(0X5084,	"Elf32_Rel");
	set_cmt	(0X508C,	"R_ARM_JUMP_SLOT fgets",	0);
	MakeStruct	(0X508C,	"Elf32_Rel");
	set_cmt	(0X5094,	"R_ARM_JUMP_SLOT recv",	0);
	MakeStruct	(0X5094,	"Elf32_Rel");
	set_cmt	(0X509C,	"R_ARM_JUMP_SLOT Iap2_Queue_IsEmpty",	0);
	MakeStruct	(0X509C,	"Elf32_Rel");
	set_cmt	(0X50A4,	"R_ARM_JUMP_SLOT libusb_get_device_list",	0);
	MakeStruct	(0X50A4,	"Elf32_Rel");
	set_cmt	(0X50AC,	"R_ARM_JUMP_SLOT IfFileExist",	0);
	MakeStruct	(0X50AC,	"Elf32_Rel");
	set_cmt	(0X50B4,	"R_ARM_JUMP_SLOT MD5_Init",	0);
	MakeStruct	(0X50B4,	"Elf32_Rel");
	set_cmt	(0X50BC,	"R_ARM_JUMP_SLOT system",	0);
	MakeStruct	(0X50BC,	"Elf32_Rel");
	set_cmt	(0X50C4,	"R_ARM_JUMP_SLOT strchr",	0);
	MakeStruct	(0X50C4,	"Elf32_Rel");
	set_cmt	(0X50CC,	"R_ARM_JUMP_SLOT UnInit_libusb",	0);
	MakeStruct	(0X50CC,	"Elf32_Rel");
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_1(void) {
        auto x;
#define id x

	set_cmt	(0X50D4,	"R_ARM_JUMP_SLOT putchar",	0);
	MakeStruct	(0X50D4,	"Elf32_Rel");
	set_cmt	(0X50DC,	"R_ARM_JUMP_SLOT Pro_Cmd_Load_Finish",	0);
	MakeStruct	(0X50DC,	"Elf32_Rel");
	set_cmt	(0X50E4,	"R_ARM_JUMP_SLOT CalCrc8",	0);
	MakeStruct	(0X50E4,	"Elf32_Rel");
	set_cmt	(0X50EC,	"R_ARM_JUMP_SLOT pclose",	0);
	MakeStruct	(0X50EC,	"Elf32_Rel");
	set_cmt	(0X50F4,	"R_ARM_JUMP_SLOT MD5_Final",	0);
	MakeStruct	(0X50F4,	"Elf32_Rel");
	set_cmt	(0X50FC,	"R_ARM_JUMP_SLOT Simple_EncryptAndDecrypt",	0);
	MakeStruct	(0X50FC,	"Elf32_Rel");
	set_cmt	(0X5104,	"R_ARM_JUMP_SLOT At88_Is_Passed",	0);
	MakeStruct	(0X5104,	"Elf32_Rel");
	set_cmt	(0X510C,	"R_ARM_JUMP_SLOT sendto",	0);
	MakeStruct	(0X510C,	"Elf32_Rel");
	set_cmt	(0X5114,	"R_ARM_JUMP_SLOT htons",	0);
	MakeStruct	(0X5114,	"Elf32_Rel");
	set_cmt	(0X511C,	"R_ARM_JUMP_SLOT Iap2_Link_EASession_Send",	0);
	MakeStruct	(0X511C,	"Elf32_Rel");
	set_cmt	(0X5124,	"R_ARM_JUMP_SLOT fopen",	0);
	MakeStruct	(0X5124,	"Elf32_Rel");
	set_cmt	(0X512C,	"R_ARM_JUMP_SLOT Watchdog_Init",	0);
	MakeStruct	(0X512C,	"Elf32_Rel");
	set_cmt	(0X5134,	"R_ARM_JUMP_SLOT sched_get_priority_max",	0);
	MakeStruct	(0X5134,	"Elf32_Rel");
	set_cmt	(0X513C,	"R_ARM_JUMP_SLOT At88_Read_Factory_Info",	0);
	MakeStruct	(0X513C,	"Elf32_Rel");
	set_cmt	(0X5144,	"R_ARM_JUMP_SLOT mktime",	0);
	MakeStruct	(0X5144,	"Elf32_Rel");
	set_cmt	(0X514C,	"R_ARM_JUMP_SLOT Usbupdate_InitResultFile",	0);
	MakeStruct	(0X514C,	"Elf32_Rel");
	set_cmt	(0X5154,	"R_ARM_JUMP_SLOT memset",	0);
	MakeStruct	(0X5154,	"Elf32_Rel");
	set_cmt	(0X515C,	"R_ARM_JUMP_SLOT PrintHex",	0);
	MakeStruct	(0X515C,	"Elf32_Rel");
	set_cmt	(0X5164,	"R_ARM_JUMP_SLOT pthread_cond_timedwait",	0);
	MakeStruct	(0X5164,	"Elf32_Rel");
	set_cmt	(0X516C,	"R_ARM_JUMP_SLOT Queue_GetData",	0);
	MakeStruct	(0X516C,	"Elf32_Rel");
	set_cmt	(0X5174,	"R_ARM_JUMP_SLOT AesEncrypt",	0);
	MakeStruct	(0X5174,	"Elf32_Rel");
	set_cmt	(0X517C,	"R_ARM_JUMP_SLOT At88_Write_Key_File",	0);
	MakeStruct	(0X517C,	"Elf32_Rel");
	set_cmt	(0X5184,	"R_ARM_JUMP_SLOT Usbupdate_SetDM368UpdateFlag",	0);
	MakeStruct	(0X5184,	"Elf32_Rel");
	set_cmt	(0X518C,	"R_ARM_JUMP_SLOT ThreadSignal_MaskPipe",	0);
	MakeStruct	(0X518C,	"Elf32_Rel");
	set_cmt	(0X5194,	"R_ARM_JUMP_SLOT GetHardwareVersion",	0);
	MakeStruct	(0X5194,	"Elf32_Rel");
	set_cmt	(0X519C,	"R_ARM_JUMP_SLOT pthread_attr_setschedparam",	0);
	MakeStruct	(0X519C,	"Elf32_Rel");
	set_cmt	(0X51A4,	"R_ARM_JUMP_SLOT GetINT32LittleEnd",	0);
	MakeStruct	(0X51A4,	"Elf32_Rel");
	set_cmt	(0X51AC,	"R_ARM_JUMP_SLOT DJI_Frame_Cap",	0);
	MakeStruct	(0X51AC,	"Elf32_Rel");
	set_cmt	(0X51B4,	"R_ARM_JUMP_SLOT Iap2_CalChecksum",	0);
	MakeStruct	(0X51B4,	"Elf32_Rel");
	set_cmt	(0X51BC,	"R_ARM_JUMP_SLOT At88_Delete",	0);
	MakeStruct	(0X51BC,	"Elf32_Rel");
	set_cmt	(0X51C4,	"R_ARM_JUMP_SLOT ReadFile",	0);
	MakeStruct	(0X51C4,	"Elf32_Rel");
	set_cmt	(0X51CC,	"R_ARM_JUMP_SLOT Pro_SendWaitAck",	0);
	MakeStruct	(0X51CC,	"Elf32_Rel");
	set_cmt	(0X51D4,	"R_ARM_JUMP_SLOT Usbupdate_SavePara",	0);
	MakeStruct	(0X51D4,	"Elf32_Rel");
	set_cmt	(0X51DC,	"R_ARM_JUMP_SLOT Iap2_Pkt_Parse",	0);
	MakeStruct	(0X51DC,	"Elf32_Rel");
	set_cmt	(0X51E4,	"R_ARM_JUMP_SLOT __assert_fail",	0);
	MakeStruct	(0X51E4,	"Elf32_Rel");
	set_cmt	(0X51EC,	"R_ARM_JUMP_SLOT Pro_Deal_CallBack",	0);
	MakeStruct	(0X51EC,	"Elf32_Rel");
	set_cmt	(0X51F4,	"R_ARM_JUMP_SLOT AppleCP_Read_AuthCertData",	0);
	MakeStruct	(0X51F4,	"Elf32_Rel");
	set_cmt	(0X51FC,	"R_ARM_JUMP_SLOT ntohl",	0);
	MakeStruct	(0X51FC,	"Elf32_Rel");
	set_cmt	(0X5204,	"R_ARM_JUMP_SLOT usleep",	0);
	MakeStruct	(0X5204,	"Elf32_Rel");
	set_cmt	(0X520C,	"R_ARM_JUMP_SLOT msgsnd",	0);
	MakeStruct	(0X520C,	"Elf32_Rel");
	set_cmt	(0X5214,	"R_ARM_JUMP_SLOT tcp_recv",	0);
	MakeStruct	(0X5214,	"Elf32_Rel");
	set_cmt	(0X521C,	"R_ARM_JUMP_SLOT Iap2_Link_CtrlSession_Recv",	0);
	MakeStruct	(0X521C,	"Elf32_Rel");
	set_cmt	(0X5224,	"R_ARM_JUMP_SLOT tcdrain",	0);
	MakeStruct	(0X5224,	"Elf32_Rel");
	set_cmt	(0X522C,	"R_ARM_JUMP_SLOT Pro_Cmd_Reboot",	0);
	MakeStruct	(0X522C,	"Elf32_Rel");
	set_cmt	(0X5234,	"R_ARM_JUMP_SLOT At88_Is_Config_Set",	0);
	MakeStruct	(0X5234,	"Elf32_Rel");
	set_cmt	(0X523C,	"R_ARM_JUMP_SLOT free",	0);
	MakeStruct	(0X523C,	"Elf32_Rel");
	set_cmt	(0X5244,	"R_ARM_JUMP_SLOT read",	0);
	MakeStruct	(0X5244,	"Elf32_Rel");
	set_cmt	(0X524C,	"R_ARM_JUMP_SLOT write",	0);
	MakeStruct	(0X524C,	"Elf32_Rel");
	set_cmt	(0X5254,	"R_ARM_JUMP_SLOT DataBuff_Delete",	0);
	MakeStruct	(0X5254,	"Elf32_Rel");
	set_cmt	(0X525C,	"R_ARM_JUMP_SLOT PutINT32LittleEnd",	0);
	MakeStruct	(0X525C,	"Elf32_Rel");
	set_cmt	(0X5264,	"R_ARM_JUMP_SLOT Pro_PackAndSend_ThreadSafe",	0);
	MakeStruct	(0X5264,	"Elf32_Rel");
	set_cmt	(0X526C,	"R_ARM_JUMP_SLOT gettimeofday",	0);
	MakeStruct	(0X526C,	"Elf32_Rel");
	set_cmt	(0X5274,	"R_ARM_JUMP_SLOT At88_Read_Chip_Info_File",	0);
	MakeStruct	(0X5274,	"Elf32_Rel");
	set_cmt	(0X527C,	"R_ARM_JUMP_SLOT At88_Is_Config_Lock",	0);
	MakeStruct	(0X527C,	"Elf32_Rel");
	set_cmt	(0X5284,	"R_ARM_JUMP_SLOT sha256_final",	0);
	MakeStruct	(0X5284,	"Elf32_Rel");
	set_cmt	(0X528C,	"R_ARM_JUMP_SLOT tcgetattr",	0);
	MakeStruct	(0X528C,	"Elf32_Rel");
	set_cmt	(0X5294,	"R_ARM_JUMP_SLOT Usbupdate_SaveLog",	0);
	MakeStruct	(0X5294,	"Elf32_Rel");
	set_cmt	(0X529C,	"R_ARM_JUMP_SLOT pthread_mutex_unlock",	0);
	MakeStruct	(0X529C,	"Elf32_Rel");
	set_cmt	(0X52A4,	"R_ARM_JUMP_SLOT Iap2_Link_Session_ReleaseRecvPkt",	0);
	MakeStruct	(0X52A4,	"Elf32_Rel");
	set_cmt	(0X52AC,	"R_ARM_JUMP_SLOT tcflush",	0);
	MakeStruct	(0X52AC,	"Elf32_Rel");
	set_cmt	(0X52B4,	"R_ARM_JUMP_SLOT socket",	0);
	MakeStruct	(0X52B4,	"Elf32_Rel");
	set_cmt	(0X52BC,	"R_ARM_JUMP_SLOT md5_block_data_order",	0);
	MakeStruct	(0X52BC,	"Elf32_Rel");
	set_cmt	(0X52C4,	"R_ARM_JUMP_SLOT UsbDel",	0);
	MakeStruct	(0X52C4,	"Elf32_Rel");
	set_cmt	(0X52CC,	"R_ARM_JUMP_SLOT ioctl",	0);
	MakeStruct	(0X52CC,	"Elf32_Rel");
	set_cmt	(0X52D4,	"R_ARM_JUMP_SLOT ntohs",	0);
	MakeStruct	(0X52D4,	"Elf32_Rel");
	set_cmt	(0X52DC,	"R_ARM_JUMP_SLOT Usbupdatecheck_PrintResult_Forbid",	0);
	MakeStruct	(0X52DC,	"Elf32_Rel");
	set_cmt	(0X52E4,	"R_ARM_JUMP_SLOT LockFile",	0);
	MakeStruct	(0X52E4,	"Elf32_Rel");
	set_cmt	(0X52EC,	"R_ARM_JUMP_SLOT pthread_mutexattr_destroy",	0);
	MakeStruct	(0X52EC,	"Elf32_Rel");
	set_cmt	(0X52F4,	"R_ARM_JUMP_SLOT libusb_exit",	0);
	MakeStruct	(0X52F4,	"Elf32_Rel");
	set_cmt	(0X52FC,	"R_ARM_JUMP_SLOT pthread_mutex_lock",	0);
	MakeStruct	(0X52FC,	"Elf32_Rel");
	set_cmt	(0X5304,	"R_ARM_JUMP_SLOT Iap2_Queue_IsFull",	0);
	MakeStruct	(0X5304,	"Elf32_Rel");
	set_cmt	(0X530C,	"R_ARM_JUMP_SLOT AES_cbc_encrypt",	0);
	MakeStruct	(0X530C,	"Elf32_Rel");
	set_cmt	(0X5314,	"R_ARM_JUMP_SLOT strlen",	0);
	MakeStruct	(0X5314,	"Elf32_Rel");
	set_cmt	(0X531C,	"R_ARM_JUMP_SLOT sscanf",	0);
	MakeStruct	(0X531C,	"Elf32_Rel");
	set_cmt	(0X5324,	"R_ARM_JUMP_SLOT Iap2_Link_CtrlSession_Send",	0);
	MakeStruct	(0X5324,	"Elf32_Rel");
	set_cmt	(0X532C,	"R_ARM_JUMP_SLOT Usbupdate_SaveResultFile",	0);
	MakeStruct	(0X532C,	"Elf32_Rel");
	set_cmt	(0X5334,	"R_ARM_JUMP_SLOT DataBuff_Create",	0);
	MakeStruct	(0X5334,	"Elf32_Rel");
	set_cmt	(0X533C,	"R_ARM_JUMP_SLOT At88_Read_Key_File",	0);
	MakeStruct	(0X533C,	"Elf32_Rel");
	set_cmt	(0X5344,	"R_ARM_JUMP_SLOT libusb_init",	0);
	MakeStruct	(0X5344,	"Elf32_Rel");
	set_cmt	(0X534C,	"R_ARM_JUMP_SLOT pthread_create",	0);
	MakeStruct	(0X534C,	"Elf32_Rel");
	set_cmt	(0X5354,	"R_ARM_JUMP_SLOT memcpy",	0);
	MakeStruct	(0X5354,	"Elf32_Rel");
	set_cmt	(0X535C,	"R_ARM_JUMP_SLOT GetINT16LittleEnd",	0);
	MakeStruct	(0X535C,	"Elf32_Rel");
	set_cmt	(0X5364,	"R_ARM_JUMP_SLOT pthread_cond_signal",	0);
	MakeStruct	(0X5364,	"Elf32_Rel");
	set_cmt	(0X536C,	"R_ARM_JUMP_SLOT PutINT16LittleEnd",	0);
	MakeStruct	(0X536C,	"Elf32_Rel");
	set_cmt	(0X5374,	"R_ARM_JUMP_SLOT Iap2_Timer_Init",	0);
	MakeStruct	(0X5374,	"Elf32_Rel");
	set_cmt	(0X537C,	"R_ARM_JUMP_SLOT WriteFile_No_Sync",	0);
	MakeStruct	(0X537C,	"Elf32_Rel");
	set_cmt	(0X5384,	"R_ARM_JUMP_SLOT pthread_attr_setinheritsched",	0);
	MakeStruct	(0X5384,	"Elf32_Rel");
	set_cmt	(0X538C,	"R_ARM_JUMP_SLOT sigaddset",	0);
	MakeStruct	(0X538C,	"Elf32_Rel");
	set_cmt	(0X5394,	"R_ARM_JUMP_SLOT strcpy",	0);
	MakeStruct	(0X5394,	"Elf32_Rel");
	set_cmt	(0X539C,	"R_ARM_JUMP_SLOT close68013",	0);
	MakeStruct	(0X539C,	"Elf32_Rel");
	set_cmt	(0X53A4,	"R_ARM_JUMP_SLOT pthread_cond_destroy",	0);
	MakeStruct	(0X53A4,	"Elf32_Rel");
	set_cmt	(0X53AC,	"R_ARM_JUMP_SLOT pthread_sigmask",	0);
	MakeStruct	(0X53AC,	"Elf32_Rel");
	set_cmt	(0X53B4,	"R_ARM_JUMP_SLOT settimeofday",	0);
	MakeStruct	(0X53B4,	"Elf32_Rel");
	set_cmt	(0X53BC,	"R_ARM_JUMP_SLOT pthread_mutex_destroy",	0);
	MakeStruct	(0X53BC,	"Elf32_Rel");
	set_cmt	(0X53C4,	"R_ARM_JUMP_SLOT printf",	0);
	MakeStruct	(0X53C4,	"Elf32_Rel");
	set_cmt	(0X53CC,	"R_ARM_JUMP_SLOT raise",	0);
	MakeStruct	(0X53CC,	"Elf32_Rel");
	set_cmt	(0X53D4,	"R_ARM_JUMP_SLOT MFI_Ctrl_Get",	0);
	MakeStruct	(0X53D4,	"Elf32_Rel");
	set_cmt	(0X53DC,	"R_ARM_JUMP_SLOT At88_Write_Chip_Info_File",	0);
	MakeStruct	(0X53DC,	"Elf32_Rel");
	set_cmt	(0X53E4,	"R_ARM_JUMP_SLOT tcp_connect",	0);
	MakeStruct	(0X53E4,	"Elf32_Rel");
	set_cmt	(0X53EC,	"R_ARM_JUMP_SLOT Pro_IsPacketNeedEncrypt",	0);
	MakeStruct	(0X53EC,	"Elf32_Rel");
	set_cmt	(0X53F4,	"R_ARM_JUMP_SLOT pthread_mutex_init",	0);
	MakeStruct	(0X53F4,	"Elf32_Rel");
	set_cmt	(0X53FC,	"R_ARM_JUMP_SLOT usbmuxd_subscribe",	0);
	MakeStruct	(0X53FC,	"Elf32_Rel");
	set_cmt	(0X5404,	"R_ARM_JUMP_SLOT bind",	0);
	MakeStruct	(0X5404,	"Elf32_Rel");
	set_cmt	(0X540C,	"R_ARM_JUMP_SLOT Usbupdate_InitLog",	0);
	MakeStruct	(0X540C,	"Elf32_Rel");
	set_cmt	(0X5414,	"R_ARM_JUMP_SLOT strstr",	0);
	MakeStruct	(0X5414,	"Elf32_Rel");
	set_cmt	(0X541C,	"R_ARM_JUMP_SLOT select",	0);
	MakeStruct	(0X541C,	"Elf32_Rel");
	set_cmt	(0X5424,	"R_ARM_JUMP_SLOT Usbupdatecheck_PrintResult_Corrupted",	0);
	MakeStruct	(0X5424,	"Elf32_Rel");
	set_cmt	(0X542C,	"R_ARM_JUMP_SLOT close",	0);
	MakeStruct	(0X542C,	"Elf32_Rel");
	set_cmt	(0X5434,	"R_ARM_JUMP_SLOT fwrite",	0);
	MakeStruct	(0X5434,	"Elf32_Rel");
	set_cmt	(0X543C,	"R_ARM_JUMP_SLOT usbmuxd_disconnect",	0);
	MakeStruct	(0X543C,	"Elf32_Rel");
	set_cmt	(0X5444,	"R_ARM_JUMP_SLOT closedir",	0);
	MakeStruct	(0X5444,	"Elf32_Rel");
	set_cmt	(0X544C,	"R_ARM_JUMP_SLOT CalFileMD5",	0);
	MakeStruct	(0X544C,	"Elf32_Rel");
	set_cmt	(0X5454,	"R_ARM_JUMP_SLOT AES_decrypt",	0);
	MakeStruct	(0X5454,	"Elf32_Rel");
	set_cmt	(0X545C,	"R_ARM_JUMP_SLOT Iap2_Ctrl_Session_FastCmd",	0);
	MakeStruct	(0X545C,	"Elf32_Rel");
	set_cmt	(0X5464,	"R_ARM_JUMP_SLOT Iap2_Link_Session_GetSendPkt",	0);
	MakeStruct	(0X5464,	"Elf32_Rel");
	set_cmt	(0X546C,	"R_ARM_JUMP_SLOT sha256_update",	0);
	MakeStruct	(0X546C,	"Elf32_Rel");
	set_cmt	(0X5474,	"R_ARM_JUMP_SLOT time",	0);
	MakeStruct	(0X5474,	"Elf32_Rel");
	set_cmt	(0X547C,	"R_ARM_JUMP_SLOT MD5_Update",	0);
	MakeStruct	(0X547C,	"Elf32_Rel");
	set_cmt	(0X5484,	"R_ARM_JUMP_SLOT UsbInit",	0);
	MakeStruct	(0X5484,	"Elf32_Rel");
	set_cmt	(0X548C,	"R_ARM_JUMP_SLOT IsAndroidPlugIn",	0);
	MakeStruct	(0X548C,	"Elf32_Rel");
	set_cmt	(0X5494,	"R_ARM_JUMP_SLOT malloc",	0);
	MakeStruct	(0X5494,	"Elf32_Rel");
	set_cmt	(0X549C,	"R_ARM_JUMP_SLOT Iap2_Pkt_GetEAProDataPtr",	0);
	MakeStruct	(0X549C,	"Elf32_Rel");
	set_cmt	(0X54A4,	"R_ARM_JUMP_SLOT cfsetospeed",	0);
	MakeStruct	(0X54A4,	"Elf32_Rel");
	set_cmt	(0X54AC,	"R_ARM_JUMP_SLOT Update_Parse_App_Version",	0);
	MakeStruct	(0X54AC,	"Elf32_Rel");
	set_cmt	(0X54B4,	"R_ARM_JUMP_SLOT tcp_send",	0);
	MakeStruct	(0X54B4,	"Elf32_Rel");
	set_cmt	(0X54BC,	"R_ARM_JUMP_SLOT Usbupdatecheck_PrintResult_Downgrade_Abort",	0);
	MakeStruct	(0X54BC,	"Elf32_Rel");
	set_cmt	(0X54C4,	"R_ARM_JUMP_SLOT pthread_attr_init",	0);
	MakeStruct	(0X54C4,	"Elf32_Rel");
	set_cmt	(0X54CC,	"R_ARM_JUMP_SLOT IsTimeOut",	0);
	MakeStruct	(0X54CC,	"Elf32_Rel");
	set_cmt	(0X54D4,	"R_ARM_JUMP_SLOT Set_Mutex_Attr_Recu",	0);
	MakeStruct	(0X54D4,	"Elf32_Rel");
	set_cmt	(0X54DC,	"R_ARM_JUMP_SLOT Usbupdate_PrintResultFile",	0);
	MakeStruct	(0X54DC,	"Elf32_Rel");
	set_cmt	(0X54E4,	"R_ARM_JUMP_SLOT AES_set_encrypt_key",	0);
	MakeStruct	(0X54E4,	"Elf32_Rel");
	set_cmt	(0X54EC,	"R_ARM_JUMP_SLOT sha256",	0);
	MakeStruct	(0X54EC,	"Elf32_Rel");
	set_cmt	(0X54F4,	"R_ARM_JUMP_SLOT At88_Write_Key",	0);
	MakeStruct	(0X54F4,	"Elf32_Rel");
	set_cmt	(0X54FC,	"R_ARM_JUMP_SLOT Iap2_Link_EASession_Recv",	0);
	MakeStruct	(0X54FC,	"Elf32_Rel");
	set_cmt	(0X5504,	"R_ARM_JUMP_SLOT AesDecryptFromFile",	0);
	MakeStruct	(0X5504,	"Elf32_Rel");
	set_cmt	(0X550C,	"R_ARM_JUMP_SLOT ftruncate",	0);
	MakeStruct	(0X550C,	"Elf32_Rel");
	set_cmt	(0X5514,	"R_ARM_JUMP_SLOT CalMD5",	0);
	MakeStruct	(0X5514,	"Elf32_Rel");
	set_cmt	(0X551C,	"R_ARM_JUMP_SLOT AesDecrypt",	0);
	MakeStruct	(0X551C,	"Elf32_Rel");
	set_cmt	(0X5524,	"R_ARM_JUMP_SLOT sleep",	0);
	MakeStruct	(0X5524,	"Elf32_Rel");
	set_cmt	(0X552C,	"R_ARM_JUMP_SLOT Usbupdatecheck_PrintResult_Abort",	0);
	MakeStruct	(0X552C,	"Elf32_Rel");
	set_cmt	(0X5534,	"R_ARM_JUMP_SLOT Pro_Cmd_Load_Start",	0);
	MakeStruct	(0X5534,	"Elf32_Rel");
	set_cmt	(0X553C,	"R_ARM_JUMP_SLOT Usbupdatecheck_CreateAndCheck_Single_Fw",	0);
	MakeStruct	(0X553C,	"Elf32_Rel");
	set_cmt	(0X5544,	"R_ARM_JUMP_SLOT send",	0);
	MakeStruct	(0X5544,	"Elf32_Rel");
	set_cmt	(0X554C,	"R_ARM_JUMP_SLOT strcat",	0);
	MakeStruct	(0X554C,	"Elf32_Rel");
	set_cmt	(0X5554,	"R_ARM_JUMP_SLOT init_libusb",	0);
	MakeStruct	(0X5554,	"Elf32_Rel");
	set_cmt	(0X555C,	"R_ARM_JUMP_SLOT libusb_get_device_descriptor",	0);
	MakeStruct	(0X555C,	"Elf32_Rel");
	set_cmt	(0X5564,	"R_ARM_JUMP_SLOT Queue_Delete",	0);
	MakeStruct	(0X5564,	"Elf32_Rel");
	set_cmt	(0X556C,	"R_ARM_JUMP_SLOT popen",	0);
	MakeStruct	(0X556C,	"Elf32_Rel");
	set_cmt	(0X5574,	"R_ARM_JUMP_SLOT usbmuxd_recv_timeout",	0);
	MakeStruct	(0X5574,	"Elf32_Rel");
	set_cmt	(0X557C,	"R_ARM_JUMP_SLOT puts",	0);
	MakeStruct	(0X557C,	"Elf32_Rel");
	set_cmt	(0X5584,	"R_ARM_JUMP_SLOT tcsetattr",	0);
	MakeStruct	(0X5584,	"Elf32_Rel");
	set_cmt	(0X558C,	"R_ARM_JUMP_SLOT getpid",	0);
	MakeStruct	(0X558C,	"Elf32_Rel");
	set_cmt	(0X5594,	"R_ARM_JUMP_SLOT Iap2_Timer_IsValid",	0);
	MakeStruct	(0X5594,	"Elf32_Rel");
	set_cmt	(0X559C,	"R_ARM_JUMP_SLOT At88_Lock_Config",	0);
	MakeStruct	(0X559C,	"Elf32_Rel");
	set_cmt	(0X55A4,	"R_ARM_JUMP_SLOT md5_block_host_order",	0);
	MakeStruct	(0X55A4,	"Elf32_Rel");
	set_cmt	(0X55AC,	"R_ARM_JUMP_SLOT sha256_init",	0);
	MakeStruct	(0X55AC,	"Elf32_Rel");
	set_cmt	(0X55B4,	"R_ARM_JUMP_SLOT fcntl",	0);
	MakeStruct	(0X55B4,	"Elf32_Rel");
	set_cmt	(0X55BC,	"R_ARM_JUMP_SLOT tcp_is_conn",	0);
	MakeStruct	(0X55BC,	"Elf32_Rel");
	set_cmt	(0X55C4,	"R_ARM_JUMP_SLOT WriteFile",	0);
	MakeStruct	(0X55C4,	"Elf32_Rel");
	set_cmt	(0X55CC,	"R_ARM_JUMP_SLOT bzero",	0);
	MakeStruct	(0X55CC,	"Elf32_Rel");
	set_cmt	(0X55D4,	"R_ARM_JUMP_SLOT Iap2_Timer_Del",	0);
	MakeStruct	(0X55D4,	"Elf32_Rel");
	set_cmt	(0X55DC,	"R_ARM_JUMP_SLOT Iap2_Timer_IsTimeout",	0);
	MakeStruct	(0X55DC,	"Elf32_Rel");
	set_cmt	(0X55E4,	"R_ARM_JUMP_SLOT Iap2_Pkt_GetDataPtr",	0);
	MakeStruct	(0X55E4,	"Elf32_Rel");
	set_cmt	(0X55EC,	"R_ARM_JUMP_SLOT At88_Write_Factory_Info",	0);
	MakeStruct	(0X55EC,	"Elf32_Rel");
	set_cmt	(0X55F4,	"R_ARM_JUMP_SLOT htonl",	0);
	MakeStruct	(0X55F4,	"Elf32_Rel");
	set_cmt	(0X55FC,	"R_ARM_JUMP_SLOT Update_Parse_68013_Version",	0);
	MakeStruct	(0X55FC,	"Elf32_Rel");
	set_cmt	(0X5604,	"R_ARM_JUMP_SLOT pthread_attr_destroy",	0);
	MakeStruct	(0X5604,	"Elf32_Rel");
	set_cmt	(0X560C,	"R_ARM_JUMP_SLOT At88_Check_All",	0);
	MakeStruct	(0X560C,	"Elf32_Rel");
	set_cmt	(0X5614,	"R_ARM_JUMP_SLOT Get68013HardwareVersion",	0);
	MakeStruct	(0X5614,	"Elf32_Rel");
	set_cmt	(0X561C,	"R_ARM_JUMP_SLOT lseek",	0);
	MakeStruct	(0X561C,	"Elf32_Rel");
	set_cmt	(0X5624,	"R_ARM_JUMP_SLOT rand",	0);
	MakeStruct	(0X5624,	"Elf32_Rel");
	set_cmt	(0X562C,	"R_ARM_JUMP_SLOT At88_Set_Config",	0);
	MakeStruct	(0X562C,	"Elf32_Rel");
	set_cmt	(0X5634,	"R_ARM_JUMP_SLOT Iap2_Link_Session_ReleaseSendPkt",	0);
	MakeStruct	(0X5634,	"Elf32_Rel");
	set_cmt	(0X563C,	"R_ARM_JUMP_SLOT Pro_Cmd_Load_Data",	0);
	MakeStruct	(0X563C,	"Elf32_Rel");
	set_cmt	(0X5644,	"R_ARM_JUMP_SLOT fread",	0);
	MakeStruct	(0X5644,	"Elf32_Rel");
	set_cmt	(0X564C,	"R_ARM_JUMP_SLOT usbmuxd_get_device_by_udid",	0);
	MakeStruct	(0X564C,	"Elf32_Rel");
	set_cmt	(0X5654,	"R_ARM_JUMP_SLOT pthread_cond_init",	0);
	MakeStruct	(0X5654,	"Elf32_Rel");
	set_cmt	(0X565C,	"R_ARM_JUMP_SLOT Pro_PackAndSend",	0);
	MakeStruct	(0X565C,	"Elf32_Rel");
	set_cmt	(0X5664,	"R_ARM_JUMP_SLOT msgrcv",	0);
	MakeStruct	(0X5664,	"Elf32_Rel");
	set_cmt	(0X566C,	"R_ARM_JUMP_SLOT At88_Init",	0);
	MakeStruct	(0X566C,	"Elf32_Rel");
	set_cmt	(0X5674,	"R_ARM_JUMP_SLOT Pro_Cmd_Enter_Loader",	0);
	MakeStruct	(0X5674,	"Elf32_Rel");
	set_cmt	(0X567C,	"R_ARM_JUMP_SLOT recvfrom",	0);
	MakeStruct	(0X567C,	"Elf32_Rel");
	set_cmt	(0X5684,	"R_ARM_JUMP_SLOT Iap2_Queue_Get",	0);
	MakeStruct	(0X5684,	"Elf32_Rel");
	set_cmt	(0X568C,	"R_ARM_JUMP_SLOT At88_Write_Factory_Info_File",	0);
	MakeStruct	(0X568C,	"Elf32_Rel");
	set_cmt	(0X5694,	"R_ARM_JUMP_SLOT AesEncryptToFile",	0);
	MakeStruct	(0X5694,	"Elf32_Rel");
	set_cmt	(0X569C,	"R_ARM_JUMP_SLOT DJI_ProStruct_Init",	0);
	MakeStruct	(0X569C,	"Elf32_Rel");
	set_cmt	(0X56A4,	"R_ARM_JUMP_SLOT setsockopt",	0);
	MakeStruct	(0X56A4,	"Elf32_Rel");
	set_cmt	(0X56AC,	"R_ARM_JUMP_SLOT pthread_mutexattr_init",	0);
	MakeStruct	(0X56AC,	"Elf32_Rel");
	set_cmt	(0X56B4,	"R_ARM_JUMP_SLOT readdir",	0);
	MakeStruct	(0X56B4,	"Elf32_Rel");
	set_cmt	(0X56BC,	"R_ARM_JUMP_SLOT Watchdog_Feed",	0);
	MakeStruct	(0X56BC,	"Elf32_Rel");
	set_cmt	(0X56C4,	"R_ARM_JUMP_SLOT syncSendBuffer",	0);
	MakeStruct	(0X56C4,	"Elf32_Rel");
	set_cmt	(0X56CC,	"R_ARM_JUMP_SLOT At88_Write_Kernel_Encrypt",	0);
	MakeStruct	(0X56CC,	"Elf32_Rel");
	set_cmt	(0X56D4,	"R_ARM_JUMP_SLOT strcmp",	0);
	MakeStruct	(0X56D4,	"Elf32_Rel");
	set_cmt	(0X56DC,	"R_ARM_JUMP_SLOT Pro_Cmd_Get_State",	0);
	MakeStruct	(0X56DC,	"Elf32_Rel");
	set_cmt	(0X56E4,	"R_ARM_JUMP_SLOT exit",	0);
	MakeStruct	(0X56E4,	"Elf32_Rel");
	set_cmt	(0X56EC,	"R_ARM_JUMP_SLOT cfsetispeed",	0);
	MakeStruct	(0X56EC,	"Elf32_Rel");
	set_cmt	(0X56F4,	"R_ARM_JUMP_SLOT Reset_68013",	0);
	MakeStruct	(0X56F4,	"Elf32_Rel");
	set_cmt	(0X56FC,	"R_ARM_JUMP_SLOT At88_Mac_Check",	0);
	MakeStruct	(0X56FC,	"Elf32_Rel");
	set_cmt	(0X5704,	"R_ARM_JUMP_SLOT __errno_location",	0);
	MakeStruct	(0X5704,	"Elf32_Rel");
	set_cmt	(0X570C,	"R_ARM_JUMP_SLOT Pro_Get_CurSeq",	0);
	MakeStruct	(0X570C,	"Elf32_Rel");
	set_cmt	(0X5714,	"R_ARM_JUMP_SLOT Queue_PutData",	0);
	MakeStruct	(0X5714,	"Elf32_Rel");
	set_cmt	(0X571C,	"R_ARM_JUMP_SLOT At88_Read_Chip_Info",	0);
	MakeStruct	(0X571C,	"Elf32_Rel");
	set_cmt	(0X5724,	"R_ARM_JUMP_SLOT __cxa_finalize",	0);
	MakeStruct	(0X5724,	"Elf32_Rel");
	set_cmt	(0X572C,	"R_ARM_JUMP_SLOT sprintf",	0);
	MakeStruct	(0X572C,	"Elf32_Rel");
	set_cmt	(0X5734,	"R_ARM_JUMP_SLOT pthread_join",	0);
	MakeStruct	(0X5734,	"Elf32_Rel");
	set_cmt	(0X573C,	"R_ARM_JUMP_SLOT aoa_subscribe",	0);
	MakeStruct	(0X573C,	"Elf32_Rel");
	set_cmt	(0X5744,	"R_ARM_JUMP_SLOT At88_Check_Auth",	0);
	MakeStruct	(0X5744,	"Elf32_Rel");
	set_cmt	(0X574C,	"R_ARM_JUMP_SLOT Pro_Cmd_Update_Ctrl",	0);
	MakeStruct	(0X574C,	"Elf32_Rel");
	set_cmt	(0X5754,	"_init",	0);
	create_insn	(0X5754);
	set_name	(0X5754,	".init_proc");
	create_insn	(0X5760);
	set_cmt	(0X5764,	"PIC mode",	0);
	create_insn	(x=0X5764);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X5770);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X5774);
	op_hex		(x,	1);
	set_name	(0X5774,	"j_Usbupdate_ClearDM368UpdateFlag");
	create_insn	(x=0X5778);
	op_hex		(x,	1);
	create_insn	(x=0X577C);
	op_plain_offset	(x,	1,	0X3377C);
	op_plain_offset	(x,	129,	0X3377C);
	create_insn	(x=0X5780);
	op_hex		(x,	1);
	set_name	(0X5780,	"open");
	create_insn	(x=0X5784);
	op_hex		(x,	1);
	create_insn	(x=0X5788);
	op_plain_offset	(x,	1,	0X33788);
	op_plain_offset	(x,	129,	0X33788);
	create_insn	(x=0X578C);
	op_hex		(x,	1);
	set_name	(0X578C,	"j_At88_Set_Chip_Info_File");
	create_insn	(x=0X5790);
	op_hex		(x,	1);
	create_insn	(x=0X5794);
	op_plain_offset	(x,	1,	0X33794);
	op_plain_offset	(x,	129,	0X33794);
	create_insn	(x=0X5798);
	op_hex		(x,	1);
	set_name	(0X5798,	"usbmuxd_connect");
	create_insn	(x=0X579C);
	op_hex		(x,	1);
	create_insn	(x=0X57A0);
	op_plain_offset	(x,	1,	0X337A0);
	op_plain_offset	(x,	129,	0X337A0);
	create_insn	(x=0X57A4);
	op_hex		(x,	1);
	set_name	(0X57A4,	"j_AppleCP_Req_Challenge_Response");
	create_insn	(x=0X57A8);
	op_hex		(x,	1);
	create_insn	(x=0X57AC);
	op_plain_offset	(x,	1,	0X337AC);
	op_plain_offset	(x,	129,	0X337AC);
	create_insn	(x=0X57B0);
	op_hex		(x,	1);
	set_name	(0X57B0,	"sigemptyset");
	create_insn	(x=0X57B4);
	op_hex		(x,	1);
	create_insn	(x=0X57B8);
	op_plain_offset	(x,	1,	0X337B8);
	op_plain_offset	(x,	129,	0X337B8);
	create_insn	(x=0X57BC);
	op_hex		(x,	1);
	set_name	(0X57BC,	"j_Usbupdate_PrintLog");
	create_insn	(x=0X57C0);
	op_hex		(x,	1);
	create_insn	(x=0X57C4);
	op_plain_offset	(x,	1,	0X337C4);
	op_plain_offset	(x,	129,	0X337C4);
	create_insn	(x=0X57C8);
	op_hex		(x,	1);
	set_name	(0X57C8,	"j_CalCrc16");
	create_insn	(x=0X57CC);
	op_hex		(x,	1);
	create_insn	(x=0X57D0);
	op_plain_offset	(x,	1,	0X337D0);
	op_plain_offset	(x,	129,	0X337D0);
	create_insn	(x=0X57D4);
	op_hex		(x,	1);
	set_name	(0X57D4,	"j_At88_Read_Config");
	create_insn	(x=0X57D8);
	op_hex		(x,	1);
	create_insn	(x=0X57DC);
	op_plain_offset	(x,	1,	0X337DC);
	op_plain_offset	(x,	129,	0X337DC);
	create_insn	(x=0X57E0);
	op_hex		(x,	1);
	set_name	(0X57E0,	"connect");
	create_insn	(x=0X57E4);
	op_hex		(x,	1);
	create_insn	(x=0X57E8);
	op_plain_offset	(x,	1,	0X337E8);
	op_plain_offset	(x,	129,	0X337E8);
	create_insn	(x=0X57EC);
	op_hex		(x,	1);
	set_name	(0X57EC,	"j_sha256_transf");
	create_insn	(x=0X57F0);
	op_hex		(x,	1);
	create_insn	(x=0X57F4);
	op_plain_offset	(x,	1,	0X337F4);
	op_plain_offset	(x,	129,	0X337F4);
	create_insn	(x=0X57F8);
	op_hex		(x,	1);
	set_name	(0X57F8,	"srand");
	create_insn	(x=0X57FC);
	op_hex		(x,	1);
	create_insn	(x=0X5800);
	op_plain_offset	(x,	1,	0X33800);
	op_plain_offset	(x,	129,	0X33800);
	create_insn	(x=0X5804);
	op_hex		(x,	1);
	set_name	(0X5804,	"usbmuxd_send");
	create_insn	(x=0X5808);
	op_hex		(x,	1);
	create_insn	(x=0X580C);
	op_plain_offset	(x,	1,	0X3380C);
	op_plain_offset	(x,	129,	0X3380C);
	create_insn	(x=0X5810);
	op_hex		(x,	1);
	set_name	(0X5810,	"j_open68013");
	create_insn	(x=0X5814);
	op_hex		(x,	1);
	create_insn	(x=0X5818);
	op_plain_offset	(x,	1,	0X33818);
	op_plain_offset	(x,	129,	0X33818);
	create_insn	(x=0X581C);
	op_hex		(x,	1);
	set_name	(0X581C,	"localtime");
	create_insn	(x=0X5820);
	op_hex		(x,	1);
	create_insn	(x=0X5824);
	op_plain_offset	(x,	1,	0X33824);
	op_plain_offset	(x,	129,	0X33824);
	create_insn	(x=0X5828);
	op_hex		(x,	1);
	set_name	(0X5828,	"opendir");
	create_insn	(x=0X582C);
	op_hex		(x,	1);
	create_insn	(x=0X5830);
	op_plain_offset	(x,	1,	0X33830);
	op_plain_offset	(x,	129,	0X33830);
	create_insn	(x=0X5834);
	op_hex		(x,	1);
	set_name	(0X5834,	"j_At88_Check_Chip_Info");
	create_insn	(x=0X5838);
	op_hex		(x,	1);
	create_insn	(x=0X583C);
	op_plain_offset	(x,	1,	0X3383C);
	op_plain_offset	(x,	129,	0X3383C);
	create_insn	(x=0X5840);
	op_hex		(x,	1);
	set_name	(0X5840,	"j_At88_Check_Factory_Info");
	create_insn	(x=0X5844);
	op_hex		(x,	1);
	create_insn	(x=0X5848);
	op_plain_offset	(x,	1,	0X33848);
	op_plain_offset	(x,	129,	0X33848);
	create_insn	(x=0X584C);
	op_hex		(x,	1);
	set_name	(0X584C,	"memcmp");
	create_insn	(x=0X5850);
	op_hex		(x,	1);
	create_insn	(x=0X5854);
	op_plain_offset	(x,	1,	0X33854);
	op_plain_offset	(x,	129,	0X33854);
	create_insn	(x=0X5858);
	op_hex		(x,	1);
	set_name	(0X5858,	"j_getTickCount");
	create_insn	(x=0X585C);
	op_hex		(x,	1);
	create_insn	(x=0X5860);
	op_plain_offset	(x,	1,	0X33860);
	op_plain_offset	(x,	129,	0X33860);
	create_insn	(x=0X5864);
	op_hex		(x,	1);
	set_name	(0X5864,	"pthread_attr_setdetachstate");
	create_insn	(x=0X5868);
	op_hex		(x,	1);
	create_insn	(x=0X586C);
	op_plain_offset	(x,	1,	0X3386C);
	op_plain_offset	(x,	129,	0X3386C);
	create_insn	(x=0X5870);
	op_hex		(x,	1);
	set_name	(0X5870,	"clock_gettime");
	create_insn	(x=0X5874);
	op_hex		(x,	1);
	create_insn	(x=0X5878);
	op_plain_offset	(x,	1,	0X33878);
	op_plain_offset	(x,	129,	0X33878);
	create_insn	(x=0X587C);
	op_hex		(x,	1);
	set_name	(0X587C,	"__xstat");
	create_insn	(x=0X5880);
	op_hex		(x,	1);
	create_insn	(x=0X5884);
	op_plain_offset	(x,	1,	0X33884);
	op_plain_offset	(x,	129,	0X33884);
	create_insn	(x=0X5888);
	op_hex		(x,	1);
	set_name	(0X5888,	"j_Iap2_Queue_Put");
	create_insn	(x=0X588C);
	op_hex		(x,	1);
	create_insn	(x=0X5890);
	op_plain_offset	(x,	1,	0X33890);
	op_plain_offset	(x,	129,	0X33890);
	create_insn	(x=0X5894);
	op_hex		(x,	1);
	set_name	(0X5894,	"j_AES_set_decrypt_key");
	create_insn	(x=0X5898);
	op_hex		(x,	1);
	create_insn	(x=0X589C);
	op_plain_offset	(x,	1,	0X3389C);
	op_plain_offset	(x,	129,	0X3389C);
	create_insn	(x=0X58A0);
	op_hex		(x,	1);
	set_name	(0X58A0,	"j_tcp_close");
	create_insn	(x=0X58A4);
	op_hex		(x,	1);
	create_insn	(x=0X58A8);
	op_plain_offset	(x,	1,	0X338A8);
	op_plain_offset	(x,	129,	0X338A8);
	create_insn	(x=0X58AC);
	op_hex		(x,	1);
	set_name	(0X58AC,	"j_AES_encrypt");
	create_insn	(x=0X58B0);
	op_hex		(x,	1);
	create_insn	(x=0X58B4);
	op_plain_offset	(x,	1,	0X338B4);
	op_plain_offset	(x,	129,	0X338B4);
	create_insn	(x=0X58B8);
	op_hex		(x,	1);
	set_name	(0X58B8,	"signal");
	create_insn	(x=0X58BC);
	op_hex		(x,	1);
	create_insn	(x=0X58C0);
	op_plain_offset	(x,	1,	0X338C0);
	op_plain_offset	(x,	129,	0X338C0);
	create_insn	(x=0X58C4);
	op_hex		(x,	1);
	set_name	(0X58C4,	"msgget");
	create_insn	(x=0X58C8);
	op_hex		(x,	1);
	create_insn	(x=0X58CC);
	op_plain_offset	(x,	1,	0X338CC);
	op_plain_offset	(x,	129,	0X338CC);
	create_insn	(x=0X58D0);
	op_hex		(x,	1);
	set_name	(0X58D0,	"pthread_attr_setschedpolicy");
	create_insn	(x=0X58D4);
	op_hex		(x,	1);
	create_insn	(x=0X58D8);
	op_plain_offset	(x,	1,	0X338D8);
	op_plain_offset	(x,	129,	0X338D8);
	create_insn	(x=0X58DC);
	op_hex		(x,	1);
	set_name	(0X58DC,	"__gmon_start__");
	create_insn	(x=0X58E0);
	op_hex		(x,	1);
	create_insn	(x=0X58E4);
	op_plain_offset	(x,	1,	0X338E4);
	op_plain_offset	(x,	129,	0X338E4);
	create_insn	(x=0X58E8);
	op_hex		(x,	1);
	set_name	(0X58E8,	"j_GetFileSize");
	create_insn	(x=0X58EC);
	op_hex		(x,	1);
	create_insn	(x=0X58F0);
	op_plain_offset	(x,	1,	0X338F0);
	op_plain_offset	(x,	129,	0X338F0);
	create_insn	(x=0X58F4);
	op_hex		(x,	1);
	set_name	(0X58F4,	"j_GetCurrentTime");
	create_insn	(x=0X58F8);
	op_hex		(x,	1);
	create_insn	(x=0X58FC);
	op_plain_offset	(x,	1,	0X338FC);
	op_plain_offset	(x,	129,	0X338FC);
	create_insn	(x=0X5900);
	op_hex		(x,	1);
	set_name	(0X5900,	"j_Usbupdatecheck_PrintResult_Error");
	create_insn	(x=0X5904);
	op_hex		(x,	1);
	create_insn	(x=0X5908);
	op_plain_offset	(x,	1,	0X33908);
	op_plain_offset	(x,	129,	0X33908);
	create_insn	(x=0X590C);
	op_hex		(x,	1);
	set_name	(0X590C,	"pthread_mutexattr_settype");
	create_insn	(x=0X5910);
	op_hex		(x,	1);
	create_insn	(x=0X5914);
	op_plain_offset	(x,	1,	0X33914);
	op_plain_offset	(x,	129,	0X33914);
	create_insn	(x=0X5918);
	op_hex		(x,	1);
	set_name	(0X5918,	"j_Pro_Cmd_Get_Version");
	create_insn	(x=0X591C);
	op_hex		(x,	1);
	create_insn	(x=0X5920);
	op_plain_offset	(x,	1,	0X33920);
	op_plain_offset	(x,	129,	0X33920);
	create_insn	(x=0X5924);
	op_hex		(x,	1);
	set_name	(0X5924,	"libusb_free_device_list");
	create_insn	(x=0X5928);
	op_hex		(x,	1);
	create_insn	(x=0X592C);
	op_plain_offset	(x,	1,	0X3392C);
	op_plain_offset	(x,	129,	0X3392C);
	create_insn	(x=0X5930);
	op_hex		(x,	1);
	set_name	(0X5930,	"inet_addr");
	create_insn	(x=0X5934);
	op_hex		(x,	1);
	create_insn	(x=0X5938);
	op_plain_offset	(x,	1,	0X33938);
	op_plain_offset	(x,	129,	0X33938);
	create_insn	(x=0X593C);
	op_hex		(x,	1);
	set_name	(0X593C,	"j_At88_Check_Key");
	create_insn	(x=0X5940);
	op_hex		(x,	1);
	create_insn	(x=0X5944);
	op_plain_offset	(x,	1,	0X33944);
	op_plain_offset	(x,	129,	0X33944);
	create_insn	(x=0X5948);
	op_hex		(x,	1);
	set_name	(0X5948,	"j_Queue_Create");
	create_insn	(x=0X594C);
	op_hex		(x,	1);
	create_insn	(x=0X5950);
	op_plain_offset	(x,	1,	0X33950);
	op_plain_offset	(x,	129,	0X33950);
	create_insn	(x=0X5954);
	op_hex		(x,	1);
	set_name	(0X5954,	"fclose");
	create_insn	(x=0X5958);
	op_hex		(x,	1);
	create_insn	(x=0X595C);
	op_plain_offset	(x,	1,	0X3395C);
	op_plain_offset	(x,	129,	0X3395C);
	create_insn	(x=0X5960);
	op_hex		(x,	1);
	set_name	(0X5960,	"fgets");
	create_insn	(x=0X5964);
	op_hex		(x,	1);
	create_insn	(x=0X5968);
	op_plain_offset	(x,	1,	0X33968);
	op_plain_offset	(x,	129,	0X33968);
	create_insn	(x=0X596C);
	op_hex		(x,	1);
	set_name	(0X596C,	"recv");
	create_insn	(x=0X5970);
	op_hex		(x,	1);
	create_insn	(x=0X5974);
	op_plain_offset	(x,	1,	0X33974);
	op_plain_offset	(x,	129,	0X33974);
	create_insn	(x=0X5978);
	op_hex		(x,	1);
	set_name	(0X5978,	"j_Iap2_Queue_IsEmpty");
	create_insn	(x=0X597C);
	op_hex		(x,	1);
	create_insn	(x=0X5980);
	op_plain_offset	(x,	1,	0X33980);
	op_plain_offset	(x,	129,	0X33980);
	create_insn	(x=0X5984);
	op_hex		(x,	1);
	set_name	(0X5984,	"libusb_get_device_list");
	create_insn	(x=0X5988);
	op_hex		(x,	1);
	create_insn	(x=0X598C);
	op_plain_offset	(x,	1,	0X3398C);
	op_plain_offset	(x,	129,	0X3398C);
	create_insn	(x=0X5990);
	op_hex		(x,	1);
	set_name	(0X5990,	"j_IfFileExist");
	create_insn	(x=0X5994);
	op_hex		(x,	1);
	create_insn	(x=0X5998);
	op_plain_offset	(x,	1,	0X33998);
	op_plain_offset	(x,	129,	0X33998);
	create_insn	(x=0X599C);
	op_hex		(x,	1);
	set_name	(0X599C,	"j_MD5_Init");
	create_insn	(x=0X59A0);
	op_hex		(x,	1);
	create_insn	(x=0X59A4);
	op_plain_offset	(x,	1,	0X339A4);
	op_plain_offset	(x,	129,	0X339A4);
	create_insn	(x=0X59A8);
	op_hex		(x,	1);
	set_name	(0X59A8,	"system");
	create_insn	(x=0X59AC);
	op_hex		(x,	1);
	create_insn	(x=0X59B0);
	op_plain_offset	(x,	1,	0X339B0);
	op_plain_offset	(x,	129,	0X339B0);
	create_insn	(x=0X59B4);
	op_hex		(x,	1);
	set_name	(0X59B4,	"strchr");
	create_insn	(x=0X59B8);
	op_hex		(x,	1);
	create_insn	(x=0X59BC);
	op_plain_offset	(x,	1,	0X339BC);
	op_plain_offset	(x,	129,	0X339BC);
	create_insn	(x=0X59C0);
	op_hex		(x,	1);
	set_name	(0X59C0,	"j_UnInit_libusb");
	create_insn	(x=0X59C4);
	op_hex		(x,	1);
	create_insn	(x=0X59C8);
	op_plain_offset	(x,	1,	0X339C8);
	op_plain_offset	(x,	129,	0X339C8);
	create_insn	(x=0X59CC);
	op_hex		(x,	1);
	set_name	(0X59CC,	"putchar");
	create_insn	(x=0X59D0);
	op_hex		(x,	1);
	create_insn	(x=0X59D4);
	op_plain_offset	(x,	1,	0X339D4);
	op_plain_offset	(x,	129,	0X339D4);
	create_insn	(x=0X59D8);
	op_hex		(x,	1);
	set_name	(0X59D8,	"j_Pro_Cmd_Load_Finish");
	create_insn	(x=0X59DC);
	op_hex		(x,	1);
	create_insn	(x=0X59E0);
	op_plain_offset	(x,	1,	0X339E0);
	op_plain_offset	(x,	129,	0X339E0);
	create_insn	(x=0X59E4);
	op_hex		(x,	1);
	set_name	(0X59E4,	"j_CalCrc8");
	create_insn	(x=0X59E8);
	op_hex		(x,	1);
	create_insn	(x=0X59EC);
	op_plain_offset	(x,	1,	0X339EC);
	op_plain_offset	(x,	129,	0X339EC);
	create_insn	(x=0X59F0);
	op_hex		(x,	1);
	set_name	(0X59F0,	"pclose");
	create_insn	(x=0X59F4);
	op_hex		(x,	1);
	create_insn	(x=0X59F8);
	op_plain_offset	(x,	1,	0X339F8);
	op_plain_offset	(x,	129,	0X339F8);
	create_insn	(x=0X59FC);
	op_hex		(x,	1);
	set_name	(0X59FC,	"j_MD5_Final");
	create_insn	(x=0X5A00);
	op_hex		(x,	1);
	create_insn	(x=0X5A04);
	op_plain_offset	(x,	1,	0X33A04);
	op_plain_offset	(x,	129,	0X33A04);
	create_insn	(x=0X5A08);
	op_hex		(x,	1);
	set_name	(0X5A08,	"j_Simple_EncryptAndDecrypt");
	create_insn	(x=0X5A0C);
	op_hex		(x,	1);
	create_insn	(x=0X5A10);
	op_plain_offset	(x,	1,	0X33A10);
	op_plain_offset	(x,	129,	0X33A10);
	create_insn	(x=0X5A14);
	op_hex		(x,	1);
	set_name	(0X5A14,	"j_At88_Is_Passed");
	create_insn	(x=0X5A18);
	op_hex		(x,	1);
	create_insn	(x=0X5A1C);
	op_plain_offset	(x,	1,	0X33A1C);
	op_plain_offset	(x,	129,	0X33A1C);
	create_insn	(x=0X5A20);
	op_hex		(x,	1);
	set_name	(0X5A20,	"sendto");
	create_insn	(x=0X5A24);
	op_hex		(x,	1);
	create_insn	(x=0X5A28);
	op_plain_offset	(x,	1,	0X33A28);
	op_plain_offset	(x,	129,	0X33A28);
	create_insn	(x=0X5A2C);
	op_hex		(x,	1);
	set_name	(0X5A2C,	"htons");
	create_insn	(x=0X5A30);
	op_hex		(x,	1);
	create_insn	(x=0X5A34);
	op_plain_offset	(x,	1,	0X33A34);
	op_plain_offset	(x,	129,	0X33A34);
	create_insn	(x=0X5A38);
	op_hex		(x,	1);
	set_name	(0X5A38,	"j_Iap2_Link_EASession_Send");
	create_insn	(x=0X5A3C);
	op_hex		(x,	1);
	create_insn	(x=0X5A40);
	op_plain_offset	(x,	1,	0X33A40);
	op_plain_offset	(x,	129,	0X33A40);
	create_insn	(x=0X5A44);
	op_hex		(x,	1);
	set_name	(0X5A44,	"fopen");
	create_insn	(x=0X5A48);
	op_hex		(x,	1);
	create_insn	(x=0X5A4C);
	op_plain_offset	(x,	1,	0X33A4C);
	op_plain_offset	(x,	129,	0X33A4C);
	create_insn	(x=0X5A50);
	op_hex		(x,	1);
	set_name	(0X5A50,	"j_Watchdog_Init");
	create_insn	(x=0X5A54);
	op_hex		(x,	1);
	create_insn	(x=0X5A58);
	op_plain_offset	(x,	1,	0X33A58);
	op_plain_offset	(x,	129,	0X33A58);
	create_insn	(x=0X5A5C);
	op_hex		(x,	1);
	set_name	(0X5A5C,	"sched_get_priority_max");
	create_insn	(x=0X5A60);
	op_hex		(x,	1);
	create_insn	(x=0X5A64);
	op_plain_offset	(x,	1,	0X33A64);
	op_plain_offset	(x,	129,	0X33A64);
	create_insn	(x=0X5A68);
	op_hex		(x,	1);
	set_name	(0X5A68,	"j_At88_Read_Factory_Info");
	create_insn	(x=0X5A6C);
	op_hex		(x,	1);
	create_insn	(x=0X5A70);
	op_plain_offset	(x,	1,	0X33A70);
	op_plain_offset	(x,	129,	0X33A70);
	create_insn	(x=0X5A74);
	op_hex		(x,	1);
	set_name	(0X5A74,	"mktime");
	create_insn	(x=0X5A78);
	op_hex		(x,	1);
	create_insn	(x=0X5A7C);
	op_plain_offset	(x,	1,	0X33A7C);
	op_plain_offset	(x,	129,	0X33A7C);
	create_insn	(x=0X5A80);
	op_hex		(x,	1);
	set_name	(0X5A80,	"j_Usbupdate_InitResultFile");
	create_insn	(x=0X5A84);
	op_hex		(x,	1);
	create_insn	(x=0X5A88);
	op_plain_offset	(x,	1,	0X33A88);
	op_plain_offset	(x,	129,	0X33A88);
	create_insn	(x=0X5A8C);
	op_hex		(x,	1);
	set_name	(0X5A8C,	"memset");
	create_insn	(x=0X5A90);
	op_hex		(x,	1);
	create_insn	(x=0X5A94);
	op_plain_offset	(x,	1,	0X33A94);
	op_plain_offset	(x,	129,	0X33A94);
	create_insn	(x=0X5A98);
	op_hex		(x,	1);
	set_name	(0X5A98,	"j_PrintHex");
	create_insn	(x=0X5A9C);
	op_hex		(x,	1);
	create_insn	(x=0X5AA0);
	op_plain_offset	(x,	1,	0X33AA0);
	op_plain_offset	(x,	129,	0X33AA0);
	create_insn	(x=0X5AA4);
	op_hex		(x,	1);
	set_name	(0X5AA4,	"pthread_cond_timedwait");
	create_insn	(x=0X5AA8);
	op_hex		(x,	1);
	create_insn	(x=0X5AAC);
	op_plain_offset	(x,	1,	0X33AAC);
	op_plain_offset	(x,	129,	0X33AAC);
	create_insn	(x=0X5AB0);
	op_hex		(x,	1);
	set_name	(0X5AB0,	"j_Queue_GetData");
	create_insn	(x=0X5AB4);
	op_hex		(x,	1);
	create_insn	(x=0X5AB8);
	op_plain_offset	(x,	1,	0X33AB8);
	op_plain_offset	(x,	129,	0X33AB8);
	create_insn	(x=0X5ABC);
	op_hex		(x,	1);
	set_name	(0X5ABC,	"j_AesEncrypt");
	create_insn	(x=0X5AC0);
	op_hex		(x,	1);
	create_insn	(x=0X5AC4);
	op_plain_offset	(x,	1,	0X33AC4);
	op_plain_offset	(x,	129,	0X33AC4);
	create_insn	(x=0X5AC8);
	op_hex		(x,	1);
	set_name	(0X5AC8,	"j_At88_Write_Key_File");
	create_insn	(x=0X5ACC);
	op_hex		(x,	1);
	create_insn	(x=0X5AD0);
	op_plain_offset	(x,	1,	0X33AD0);
	op_plain_offset	(x,	129,	0X33AD0);
	create_insn	(x=0X5AD4);
	op_hex		(x,	1);
	set_name	(0X5AD4,	"j_Usbupdate_SetDM368UpdateFlag");
	create_insn	(x=0X5AD8);
	op_hex		(x,	1);
	create_insn	(x=0X5ADC);
	op_plain_offset	(x,	1,	0X33ADC);
	op_plain_offset	(x,	129,	0X33ADC);
	create_insn	(x=0X5AE0);
	op_hex		(x,	1);
	set_name	(0X5AE0,	"j_ThreadSignal_MaskPipe");
	create_insn	(x=0X5AE4);
	op_hex		(x,	1);
	create_insn	(x=0X5AE8);
	op_plain_offset	(x,	1,	0X33AE8);
	op_plain_offset	(x,	129,	0X33AE8);
	create_insn	(x=0X5AEC);
	op_hex		(x,	1);
	set_name	(0X5AEC,	"j_GetHardwareVersion");
	create_insn	(x=0X5AF0);
	op_hex		(x,	1);
	create_insn	(x=0X5AF4);
	op_plain_offset	(x,	1,	0X33AF4);
	op_plain_offset	(x,	129,	0X33AF4);
	create_insn	(x=0X5AF8);
	op_hex		(x,	1);
	set_name	(0X5AF8,	"pthread_attr_setschedparam");
	create_insn	(x=0X5AFC);
	op_hex		(x,	1);
	create_insn	(x=0X5B00);
	op_plain_offset	(x,	1,	0X33B00);
	op_plain_offset	(x,	129,	0X33B00);
	create_insn	(x=0X5B04);
	op_hex		(x,	1);
	set_name	(0X5B04,	"j_GetINT32LittleEnd");
	create_insn	(x=0X5B08);
	op_hex		(x,	1);
	create_insn	(x=0X5B0C);
	op_plain_offset	(x,	1,	0X33B0C);
	op_plain_offset	(x,	129,	0X33B0C);
	create_insn	(x=0X5B10);
	op_hex		(x,	1);
	set_name	(0X5B10,	"j_DJI_Frame_Cap");
	create_insn	(x=0X5B14);
	op_hex		(x,	1);
	create_insn	(x=0X5B18);
	op_plain_offset	(x,	1,	0X33B18);
	op_plain_offset	(x,	129,	0X33B18);
	create_insn	(x=0X5B1C);
	op_hex		(x,	1);
	set_name	(0X5B1C,	"j_Iap2_CalChecksum");
	create_insn	(x=0X5B20);
	op_hex		(x,	1);
	create_insn	(x=0X5B24);
	op_plain_offset	(x,	1,	0X33B24);
	op_plain_offset	(x,	129,	0X33B24);
	create_insn	(x=0X5B28);
	op_hex		(x,	1);
	set_name	(0X5B28,	"j_At88_Delete");
	create_insn	(x=0X5B2C);
	op_hex		(x,	1);
	create_insn	(x=0X5B30);
	op_plain_offset	(x,	1,	0X33B30);
	op_plain_offset	(x,	129,	0X33B30);
	create_insn	(x=0X5B34);
	op_hex		(x,	1);
	set_name	(0X5B34,	"j_ReadFile");
	create_insn	(x=0X5B38);
	op_hex		(x,	1);
	create_insn	(x=0X5B3C);
	op_plain_offset	(x,	1,	0X33B3C);
	op_plain_offset	(x,	129,	0X33B3C);
	create_insn	(x=0X5B40);
	op_hex		(x,	1);
	set_name	(0X5B40,	"j_Pro_SendWaitAck");
	create_insn	(x=0X5B44);
	op_hex		(x,	1);
	create_insn	(x=0X5B48);
	op_plain_offset	(x,	1,	0X33B48);
	op_plain_offset	(x,	129,	0X33B48);
	create_insn	(x=0X5B4C);
	op_hex		(x,	1);
	set_name	(0X5B4C,	"j_Usbupdate_SavePara");
	create_insn	(x=0X5B50);
	op_hex		(x,	1);
	create_insn	(x=0X5B54);
	op_plain_offset	(x,	1,	0X33B54);
	op_plain_offset	(x,	129,	0X33B54);
	create_insn	(x=0X5B58);
	op_hex		(x,	1);
	set_name	(0X5B58,	"j_Iap2_Pkt_Parse");
	create_insn	(x=0X5B5C);
	op_hex		(x,	1);
	create_insn	(x=0X5B60);
	op_plain_offset	(x,	1,	0X33B60);
	op_plain_offset	(x,	129,	0X33B60);
	create_insn	(x=0X5B64);
	op_hex		(x,	1);
	set_name	(0X5B64,	"__assert_fail");
	create_insn	(x=0X5B68);
	op_hex		(x,	1);
	create_insn	(x=0X5B6C);
	op_plain_offset	(x,	1,	0X33B6C);
	op_plain_offset	(x,	129,	0X33B6C);
	create_insn	(x=0X5B70);
	op_hex		(x,	1);
	set_name	(0X5B70,	"j_Pro_Deal_CallBack");
	create_insn	(x=0X5B74);
	op_hex		(x,	1);
	create_insn	(x=0X5B78);
	op_plain_offset	(x,	1,	0X33B78);
	op_plain_offset	(x,	129,	0X33B78);
	create_insn	(x=0X5B7C);
	op_hex		(x,	1);
	set_name	(0X5B7C,	"j_AppleCP_Read_AuthCertData");
	create_insn	(x=0X5B80);
	op_hex		(x,	1);
	create_insn	(x=0X5B84);
	op_plain_offset	(x,	1,	0X33B84);
	op_plain_offset	(x,	129,	0X33B84);
	create_insn	(x=0X5B88);
	op_hex		(x,	1);
	set_name	(0X5B88,	"ntohl");
	create_insn	(x=0X5B8C);
	op_hex		(x,	1);
	create_insn	(x=0X5B90);
	op_plain_offset	(x,	1,	0X33B90);
	op_plain_offset	(x,	129,	0X33B90);
	create_insn	(x=0X5B94);
	op_hex		(x,	1);
	set_name	(0X5B94,	"usleep");
	create_insn	(x=0X5B98);
	op_hex		(x,	1);
	create_insn	(x=0X5B9C);
	op_plain_offset	(x,	1,	0X33B9C);
	op_plain_offset	(x,	129,	0X33B9C);
	create_insn	(x=0X5BA0);
	op_hex		(x,	1);
	set_name	(0X5BA0,	"msgsnd");
	create_insn	(x=0X5BA4);
	op_hex		(x,	1);
	create_insn	(x=0X5BA8);
	op_plain_offset	(x,	1,	0X33BA8);
	op_plain_offset	(x,	129,	0X33BA8);
	create_insn	(x=0X5BAC);
	op_hex		(x,	1);
	set_name	(0X5BAC,	"j_tcp_recv");
	create_insn	(x=0X5BB0);
	op_hex		(x,	1);
	create_insn	(x=0X5BB4);
	op_plain_offset	(x,	1,	0X33BB4);
	op_plain_offset	(x,	129,	0X33BB4);
	create_insn	(x=0X5BB8);
	op_hex		(x,	1);
	set_name	(0X5BB8,	"j_Iap2_Link_CtrlSession_Recv");
	create_insn	(x=0X5BBC);
	op_hex		(x,	1);
	create_insn	(x=0X5BC0);
	op_plain_offset	(x,	1,	0X33BC0);
	op_plain_offset	(x,	129,	0X33BC0);
	create_insn	(x=0X5BC4);
	op_hex		(x,	1);
	set_name	(0X5BC4,	"tcdrain");
	create_insn	(x=0X5BC8);
	op_hex		(x,	1);
	create_insn	(x=0X5BCC);
	op_plain_offset	(x,	1,	0X33BCC);
	op_plain_offset	(x,	129,	0X33BCC);
	create_insn	(x=0X5BD0);
	op_hex		(x,	1);
	set_name	(0X5BD0,	"j_Pro_Cmd_Reboot");
	create_insn	(x=0X5BD4);
	op_hex		(x,	1);
	create_insn	(x=0X5BD8);
	op_plain_offset	(x,	1,	0X33BD8);
	op_plain_offset	(x,	129,	0X33BD8);
	create_insn	(x=0X5BDC);
	op_hex		(x,	1);
	set_name	(0X5BDC,	"j_At88_Is_Config_Set");
	create_insn	(x=0X5BE0);
	op_hex		(x,	1);
	create_insn	(x=0X5BE4);
	op_plain_offset	(x,	1,	0X33BE4);
	op_plain_offset	(x,	129,	0X33BE4);
	create_insn	(x=0X5BE8);
	op_hex		(x,	1);
	set_name	(0X5BE8,	"free");
	create_insn	(x=0X5BEC);
	op_hex		(x,	1);
	create_insn	(x=0X5BF0);
	op_plain_offset	(x,	1,	0X33BF0);
	op_plain_offset	(x,	129,	0X33BF0);
	create_insn	(x=0X5BF4);
	op_hex		(x,	1);
	set_name	(0X5BF4,	"read");
	create_insn	(x=0X5BF8);
	op_hex		(x,	1);
	create_insn	(x=0X5BFC);
	op_plain_offset	(x,	1,	0X33BFC);
	op_plain_offset	(x,	129,	0X33BFC);
	create_insn	(x=0X5C00);
	op_hex		(x,	1);
	set_name	(0X5C00,	"write");
	create_insn	(x=0X5C04);
	op_hex		(x,	1);
	create_insn	(x=0X5C08);
	op_plain_offset	(x,	1,	0X33C08);
	op_plain_offset	(x,	129,	0X33C08);
	create_insn	(x=0X5C0C);
	op_hex		(x,	1);
	set_name	(0X5C0C,	"j_DataBuff_Delete");
	create_insn	(x=0X5C10);
	op_hex		(x,	1);
	create_insn	(x=0X5C14);
	op_plain_offset	(x,	1,	0X33C14);
	op_plain_offset	(x,	129,	0X33C14);
	create_insn	(x=0X5C18);
	op_hex		(x,	1);
	set_name	(0X5C18,	"j_PutINT32LittleEnd");
	create_insn	(x=0X5C1C);
	op_hex		(x,	1);
	create_insn	(x=0X5C20);
	op_plain_offset	(x,	1,	0X33C20);
	op_plain_offset	(x,	129,	0X33C20);
	create_insn	(x=0X5C24);
	op_hex		(x,	1);
	set_name	(0X5C24,	"j_Pro_PackAndSend_ThreadSafe");
	create_insn	(x=0X5C28);
	op_hex		(x,	1);
	create_insn	(x=0X5C2C);
	op_plain_offset	(x,	1,	0X33C2C);
	op_plain_offset	(x,	129,	0X33C2C);
	create_insn	(x=0X5C30);
	op_hex		(x,	1);
	set_name	(0X5C30,	"gettimeofday");
	create_insn	(x=0X5C34);
	op_hex		(x,	1);
	create_insn	(x=0X5C38);
	op_plain_offset	(x,	1,	0X33C38);
	op_plain_offset	(x,	129,	0X33C38);
	create_insn	(x=0X5C3C);
	op_hex		(x,	1);
	set_name	(0X5C3C,	"j_At88_Read_Chip_Info_File");
	create_insn	(x=0X5C40);
	op_hex		(x,	1);
	create_insn	(x=0X5C44);
	op_plain_offset	(x,	1,	0X33C44);
	op_plain_offset	(x,	129,	0X33C44);
	create_insn	(x=0X5C48);
	op_hex		(x,	1);
	set_name	(0X5C48,	"j_At88_Is_Config_Lock");
	create_insn	(x=0X5C4C);
	op_hex		(x,	1);
	create_insn	(x=0X5C50);
	op_plain_offset	(x,	1,	0X33C50);
	op_plain_offset	(x,	129,	0X33C50);
	create_insn	(x=0X5C54);
	op_hex		(x,	1);
	set_name	(0X5C54,	"j_sha256_final");
	create_insn	(x=0X5C58);
	op_hex		(x,	1);
	create_insn	(x=0X5C5C);
	op_plain_offset	(x,	1,	0X33C5C);
	op_plain_offset	(x,	129,	0X33C5C);
	create_insn	(x=0X5C60);
	op_hex		(x,	1);
	set_name	(0X5C60,	"tcgetattr");
	create_insn	(x=0X5C64);
	op_hex		(x,	1);
	create_insn	(x=0X5C68);
	op_plain_offset	(x,	1,	0X33C68);
	op_plain_offset	(x,	129,	0X33C68);
	create_insn	(x=0X5C6C);
	op_hex		(x,	1);
	set_name	(0X5C6C,	"j_Usbupdate_SaveLog");
	create_insn	(x=0X5C70);
	op_hex		(x,	1);
	create_insn	(x=0X5C74);
	op_plain_offset	(x,	1,	0X33C74);
	op_plain_offset	(x,	129,	0X33C74);
	create_insn	(x=0X5C78);
	op_hex		(x,	1);
	set_name	(0X5C78,	"pthread_mutex_unlock");
	create_insn	(x=0X5C7C);
	op_hex		(x,	1);
	create_insn	(x=0X5C80);
	op_plain_offset	(x,	1,	0X33C80);
	op_plain_offset	(x,	129,	0X33C80);
	create_insn	(x=0X5C84);
	op_hex		(x,	1);
	set_name	(0X5C84,	"j_Iap2_Link_Session_ReleaseRecvPkt");
	create_insn	(x=0X5C88);
	op_hex		(x,	1);
	create_insn	(x=0X5C8C);
	op_plain_offset	(x,	1,	0X33C8C);
	op_plain_offset	(x,	129,	0X33C8C);
	create_insn	(x=0X5C90);
	op_hex		(x,	1);
	set_name	(0X5C90,	"tcflush");
	create_insn	(x=0X5C94);
	op_hex		(x,	1);
	create_insn	(x=0X5C98);
	op_plain_offset	(x,	1,	0X33C98);
	op_plain_offset	(x,	129,	0X33C98);
	create_insn	(x=0X5C9C);
	op_hex		(x,	1);
	set_name	(0X5C9C,	"socket");
	create_insn	(x=0X5CA0);
	op_hex		(x,	1);
	create_insn	(x=0X5CA4);
	op_plain_offset	(x,	1,	0X33CA4);
	op_plain_offset	(x,	129,	0X33CA4);
	create_insn	(x=0X5CA8);
	op_hex		(x,	1);
	set_name	(0X5CA8,	"j_md5_block_data_order");
	create_insn	(x=0X5CAC);
	op_hex		(x,	1);
	create_insn	(x=0X5CB0);
	op_plain_offset	(x,	1,	0X33CB0);
	op_plain_offset	(x,	129,	0X33CB0);
	create_insn	(x=0X5CB4);
	op_hex		(x,	1);
	set_name	(0X5CB4,	"j_UsbDel");
	create_insn	(x=0X5CB8);
	op_hex		(x,	1);
	create_insn	(x=0X5CBC);
	op_plain_offset	(x,	1,	0X33CBC);
	op_plain_offset	(x,	129,	0X33CBC);
	create_insn	(x=0X5CC0);
	op_hex		(x,	1);
	set_name	(0X5CC0,	"ioctl");
	create_insn	(x=0X5CC4);
	op_hex		(x,	1);
	create_insn	(x=0X5CC8);
	op_plain_offset	(x,	1,	0X33CC8);
	op_plain_offset	(x,	129,	0X33CC8);
	create_insn	(x=0X5CCC);
	op_hex		(x,	1);
	set_name	(0X5CCC,	"ntohs");
	create_insn	(x=0X5CD0);
	op_hex		(x,	1);
	create_insn	(x=0X5CD4);
	op_plain_offset	(x,	1,	0X33CD4);
	op_plain_offset	(x,	129,	0X33CD4);
	create_insn	(x=0X5CD8);
	op_hex		(x,	1);
	set_name	(0X5CD8,	"j_Usbupdatecheck_PrintResult_Forbid");
	create_insn	(x=0X5CDC);
	op_hex		(x,	1);
	create_insn	(x=0X5CE0);
	op_plain_offset	(x,	1,	0X33CE0);
	op_plain_offset	(x,	129,	0X33CE0);
	create_insn	(x=0X5CE4);
	op_hex		(x,	1);
	set_name	(0X5CE4,	"j_LockFile");
	create_insn	(x=0X5CE8);
	op_hex		(x,	1);
	create_insn	(x=0X5CEC);
	op_plain_offset	(x,	1,	0X33CEC);
	op_plain_offset	(x,	129,	0X33CEC);
	create_insn	(x=0X5CF0);
	op_hex		(x,	1);
	set_name	(0X5CF0,	"pthread_mutexattr_destroy");
	create_insn	(x=0X5CF4);
	op_hex		(x,	1);
	create_insn	(x=0X5CF8);
	op_plain_offset	(x,	1,	0X33CF8);
	op_plain_offset	(x,	129,	0X33CF8);
	create_insn	(x=0X5CFC);
	op_hex		(x,	1);
	set_name	(0X5CFC,	"libusb_exit");
	create_insn	(x=0X5D00);
	op_hex		(x,	1);
	create_insn	(x=0X5D04);
	op_plain_offset	(x,	1,	0X33D04);
	op_plain_offset	(x,	129,	0X33D04);
	create_insn	(x=0X5D08);
	op_hex		(x,	1);
	set_name	(0X5D08,	"pthread_mutex_lock");
	create_insn	(x=0X5D0C);
	op_hex		(x,	1);
	create_insn	(x=0X5D10);
	op_plain_offset	(x,	1,	0X33D10);
	op_plain_offset	(x,	129,	0X33D10);
	create_insn	(x=0X5D14);
	op_hex		(x,	1);
	set_name	(0X5D14,	"j_Iap2_Queue_IsFull");
	create_insn	(x=0X5D18);
	op_hex		(x,	1);
	create_insn	(x=0X5D1C);
	op_plain_offset	(x,	1,	0X33D1C);
	op_plain_offset	(x,	129,	0X33D1C);
	create_insn	(x=0X5D20);
	op_hex		(x,	1);
	set_name	(0X5D20,	"j_AES_cbc_encrypt");
	create_insn	(x=0X5D24);
	op_hex		(x,	1);
	create_insn	(x=0X5D28);
	op_plain_offset	(x,	1,	0X33D28);
	op_plain_offset	(x,	129,	0X33D28);
	create_insn	(x=0X5D2C);
	op_hex		(x,	1);
	set_name	(0X5D2C,	"strlen");
	create_insn	(x=0X5D30);
	op_hex		(x,	1);
	create_insn	(x=0X5D34);
	op_plain_offset	(x,	1,	0X33D34);
	op_plain_offset	(x,	129,	0X33D34);
	create_insn	(x=0X5D38);
	op_hex		(x,	1);
	set_name	(0X5D38,	"sscanf");
	create_insn	(x=0X5D3C);
	op_hex		(x,	1);
	create_insn	(x=0X5D40);
	op_plain_offset	(x,	1,	0X33D40);
	op_plain_offset	(x,	129,	0X33D40);
	create_insn	(x=0X5D44);
	op_hex		(x,	1);
	set_name	(0X5D44,	"j_Iap2_Link_CtrlSession_Send");
	create_insn	(x=0X5D48);
	op_hex		(x,	1);
	create_insn	(x=0X5D4C);
	op_plain_offset	(x,	1,	0X33D4C);
	op_plain_offset	(x,	129,	0X33D4C);
	create_insn	(x=0X5D50);
	op_hex		(x,	1);
	set_name	(0X5D50,	"j_Usbupdate_SaveResultFile");
	create_insn	(x=0X5D54);
	op_hex		(x,	1);
	create_insn	(x=0X5D58);
	op_plain_offset	(x,	1,	0X33D58);
	op_plain_offset	(x,	129,	0X33D58);
	create_insn	(x=0X5D5C);
	op_hex		(x,	1);
	set_name	(0X5D5C,	"j_DataBuff_Create");
	create_insn	(x=0X5D60);
	op_hex		(x,	1);
	create_insn	(x=0X5D64);
	op_plain_offset	(x,	1,	0X33D64);
	op_plain_offset	(x,	129,	0X33D64);
	create_insn	(x=0X5D68);
	op_hex		(x,	1);
	set_name	(0X5D68,	"j_At88_Read_Key_File");
	create_insn	(x=0X5D6C);
	op_hex		(x,	1);
	create_insn	(x=0X5D70);
	op_plain_offset	(x,	1,	0X33D70);
	op_plain_offset	(x,	129,	0X33D70);
	create_insn	(x=0X5D74);
	op_hex		(x,	1);
	set_name	(0X5D74,	"libusb_init");
	create_insn	(x=0X5D78);
	op_hex		(x,	1);
	create_insn	(x=0X5D7C);
	op_plain_offset	(x,	1,	0X33D7C);
	op_plain_offset	(x,	129,	0X33D7C);
	create_insn	(x=0X5D80);
	op_hex		(x,	1);
	set_name	(0X5D80,	"pthread_create");
	create_insn	(x=0X5D84);
	op_hex		(x,	1);
	create_insn	(x=0X5D88);
	op_plain_offset	(x,	1,	0X33D88);
	op_plain_offset	(x,	129,	0X33D88);
	create_insn	(x=0X5D8C);
	op_hex		(x,	1);
	set_name	(0X5D8C,	"memcpy");
	create_insn	(x=0X5D90);
	op_hex		(x,	1);
	create_insn	(x=0X5D94);
	op_plain_offset	(x,	1,	0X33D94);
	op_plain_offset	(x,	129,	0X33D94);
	create_insn	(x=0X5D98);
	op_hex		(x,	1);
	set_name	(0X5D98,	"j_GetINT16LittleEnd");
	create_insn	(x=0X5D9C);
	op_hex		(x,	1);
	create_insn	(x=0X5DA0);
	op_plain_offset	(x,	1,	0X33DA0);
	op_plain_offset	(x,	129,	0X33DA0);
	create_insn	(x=0X5DA4);
	op_hex		(x,	1);
	set_name	(0X5DA4,	"pthread_cond_signal");
	create_insn	(x=0X5DA8);
	op_hex		(x,	1);
	create_insn	(x=0X5DAC);
	op_plain_offset	(x,	1,	0X33DAC);
	op_plain_offset	(x,	129,	0X33DAC);
	create_insn	(x=0X5DB0);
	op_hex		(x,	1);
	set_name	(0X5DB0,	"j_PutINT16LittleEnd");
	create_insn	(x=0X5DB4);
	op_hex		(x,	1);
	create_insn	(x=0X5DB8);
	op_plain_offset	(x,	1,	0X33DB8);
	op_plain_offset	(x,	129,	0X33DB8);
	create_insn	(x=0X5DBC);
	op_hex		(x,	1);
	set_name	(0X5DBC,	"j_Iap2_Timer_Init");
	create_insn	(x=0X5DC0);
	op_hex		(x,	1);
	create_insn	(x=0X5DC4);
	op_plain_offset	(x,	1,	0X33DC4);
	op_plain_offset	(x,	129,	0X33DC4);
	create_insn	(x=0X5DC8);
	op_hex		(x,	1);
	set_name	(0X5DC8,	"j_WriteFile_No_Sync");
	create_insn	(x=0X5DCC);
	op_hex		(x,	1);
	create_insn	(x=0X5DD0);
	op_plain_offset	(x,	1,	0X33DD0);
	op_plain_offset	(x,	129,	0X33DD0);
	create_insn	(x=0X5DD4);
	op_hex		(x,	1);
	set_name	(0X5DD4,	"pthread_attr_setinheritsched");
	create_insn	(x=0X5DD8);
	op_hex		(x,	1);
	create_insn	(x=0X5DDC);
	op_plain_offset	(x,	1,	0X33DDC);
	op_plain_offset	(x,	129,	0X33DDC);
	create_insn	(x=0X5DE0);
	op_hex		(x,	1);
	set_name	(0X5DE0,	"sigaddset");
	create_insn	(x=0X5DE4);
	op_hex		(x,	1);
	create_insn	(x=0X5DE8);
	op_plain_offset	(x,	1,	0X33DE8);
	op_plain_offset	(x,	129,	0X33DE8);
	create_insn	(x=0X5DEC);
	op_hex		(x,	1);
	set_name	(0X5DEC,	"strcpy");
	create_insn	(x=0X5DF0);
	op_hex		(x,	1);
	create_insn	(x=0X5DF4);
	op_plain_offset	(x,	1,	0X33DF4);
	op_plain_offset	(x,	129,	0X33DF4);
	create_insn	(x=0X5DF8);
	op_hex		(x,	1);
	set_name	(0X5DF8,	"j_close68013");
	create_insn	(x=0X5DFC);
	op_hex		(x,	1);
	create_insn	(x=0X5E00);
	op_plain_offset	(x,	1,	0X33E00);
	op_plain_offset	(x,	129,	0X33E00);
	create_insn	(x=0X5E04);
	op_hex		(x,	1);
	set_name	(0X5E04,	"pthread_cond_destroy");
	create_insn	(x=0X5E08);
	op_hex		(x,	1);
	create_insn	(x=0X5E0C);
	op_plain_offset	(x,	1,	0X33E0C);
	op_plain_offset	(x,	129,	0X33E0C);
	create_insn	(x=0X5E10);
	op_hex		(x,	1);
	set_name	(0X5E10,	"pthread_sigmask");
	create_insn	(x=0X5E14);
	op_hex		(x,	1);
	create_insn	(x=0X5E18);
	op_plain_offset	(x,	1,	0X33E18);
	op_plain_offset	(x,	129,	0X33E18);
	create_insn	(x=0X5E1C);
	op_hex		(x,	1);
	set_name	(0X5E1C,	"settimeofday");
	create_insn	(x=0X5E20);
	op_hex		(x,	1);
	create_insn	(x=0X5E24);
	op_plain_offset	(x,	1,	0X33E24);
	op_plain_offset	(x,	129,	0X33E24);
	create_insn	(x=0X5E28);
	op_hex		(x,	1);
	set_name	(0X5E28,	"pthread_mutex_destroy");
	create_insn	(x=0X5E2C);
	op_hex		(x,	1);
	create_insn	(x=0X5E30);
	op_plain_offset	(x,	1,	0X33E30);
	op_plain_offset	(x,	129,	0X33E30);
	create_insn	(x=0X5E34);
	op_hex		(x,	1);
	set_name	(0X5E34,	"printf");
	create_insn	(x=0X5E38);
	op_hex		(x,	1);
	create_insn	(x=0X5E3C);
	op_plain_offset	(x,	1,	0X33E3C);
	op_plain_offset	(x,	129,	0X33E3C);
	create_insn	(x=0X5E40);
	op_hex		(x,	1);
	set_name	(0X5E40,	"raise");
	create_insn	(x=0X5E44);
	op_hex		(x,	1);
	create_insn	(x=0X5E48);
	op_plain_offset	(x,	1,	0X33E48);
	op_plain_offset	(x,	129,	0X33E48);
	create_insn	(x=0X5E4C);
	op_hex		(x,	1);
	set_name	(0X5E4C,	"j_MFI_Ctrl_Get");
	create_insn	(x=0X5E50);
	op_hex		(x,	1);
	create_insn	(x=0X5E54);
	op_plain_offset	(x,	1,	0X33E54);
	op_plain_offset	(x,	129,	0X33E54);
	create_insn	(x=0X5E58);
	op_hex		(x,	1);
	set_name	(0X5E58,	"j_At88_Write_Chip_Info_File");
	create_insn	(x=0X5E5C);
	op_hex		(x,	1);
	create_insn	(x=0X5E60);
	op_plain_offset	(x,	1,	0X33E60);
	op_plain_offset	(x,	129,	0X33E60);
	create_insn	(x=0X5E64);
	op_hex		(x,	1);
	set_name	(0X5E64,	"j_tcp_connect");
	create_insn	(x=0X5E68);
	op_hex		(x,	1);
	create_insn	(x=0X5E6C);
	op_plain_offset	(x,	1,	0X33E6C);
	op_plain_offset	(x,	129,	0X33E6C);
	create_insn	(x=0X5E70);
	op_hex		(x,	1);
	set_name	(0X5E70,	"j_Pro_IsPacketNeedEncrypt");
	create_insn	(x=0X5E74);
	op_hex		(x,	1);
	create_insn	(x=0X5E78);
	op_plain_offset	(x,	1,	0X33E78);
	op_plain_offset	(x,	129,	0X33E78);
	create_insn	(x=0X5E7C);
	op_hex		(x,	1);
	set_name	(0X5E7C,	"pthread_mutex_init");
	create_insn	(x=0X5E80);
	op_hex		(x,	1);
	create_insn	(x=0X5E84);
	op_plain_offset	(x,	1,	0X33E84);
	op_plain_offset	(x,	129,	0X33E84);
	create_insn	(x=0X5E88);
	op_hex		(x,	1);
	set_name	(0X5E88,	"usbmuxd_subscribe");
	create_insn	(x=0X5E8C);
	op_hex		(x,	1);
	create_insn	(x=0X5E90);
	op_plain_offset	(x,	1,	0X33E90);
	op_plain_offset	(x,	129,	0X33E90);
	create_insn	(x=0X5E94);
	op_hex		(x,	1);
	set_name	(0X5E94,	"bind");
	create_insn	(x=0X5E98);
	op_hex		(x,	1);
	create_insn	(x=0X5E9C);
	op_plain_offset	(x,	1,	0X33E9C);
	op_plain_offset	(x,	129,	0X33E9C);
	create_insn	(x=0X5EA0);
	op_hex		(x,	1);
	set_name	(0X5EA0,	"j_Usbupdate_InitLog");
	create_insn	(x=0X5EA4);
	op_hex		(x,	1);
	create_insn	(x=0X5EA8);
	op_plain_offset	(x,	1,	0X33EA8);
	op_plain_offset	(x,	129,	0X33EA8);
	create_insn	(x=0X5EAC);
	op_hex		(x,	1);
	set_name	(0X5EAC,	"strstr");
	create_insn	(x=0X5EB0);
	op_hex		(x,	1);
	create_insn	(x=0X5EB4);
	op_plain_offset	(x,	1,	0X33EB4);
	op_plain_offset	(x,	129,	0X33EB4);
	create_insn	(x=0X5EB8);
	op_hex		(x,	1);
	set_name	(0X5EB8,	"select");
	create_insn	(x=0X5EBC);
	op_hex		(x,	1);
	create_insn	(x=0X5EC0);
	op_plain_offset	(x,	1,	0X33EC0);
	op_plain_offset	(x,	129,	0X33EC0);
	create_insn	(x=0X5EC4);
	op_hex		(x,	1);
	set_name	(0X5EC4,	"j_Usbupdatecheck_PrintResult_Corrupted");
	create_insn	(x=0X5EC8);
	op_hex		(x,	1);
	create_insn	(x=0X5ECC);
	op_plain_offset	(x,	1,	0X33ECC);
	op_plain_offset	(x,	129,	0X33ECC);
	create_insn	(x=0X5ED0);
	op_hex		(x,	1);
	set_name	(0X5ED0,	"close");
	create_insn	(x=0X5ED4);
	op_hex		(x,	1);
	create_insn	(x=0X5ED8);
	op_plain_offset	(x,	1,	0X33ED8);
	op_plain_offset	(x,	129,	0X33ED8);
	create_insn	(x=0X5EDC);
	op_hex		(x,	1);
	set_name	(0X5EDC,	"fwrite");
	create_insn	(x=0X5EE0);
	op_hex		(x,	1);
	create_insn	(x=0X5EE4);
	op_plain_offset	(x,	1,	0X33EE4);
	op_plain_offset	(x,	129,	0X33EE4);
	create_insn	(x=0X5EE8);
	op_hex		(x,	1);
	set_name	(0X5EE8,	"usbmuxd_disconnect");
	create_insn	(x=0X5EEC);
	op_hex		(x,	1);
	create_insn	(x=0X5EF0);
	op_plain_offset	(x,	1,	0X33EF0);
	op_plain_offset	(x,	129,	0X33EF0);
	create_insn	(x=0X5EF4);
	op_hex		(x,	1);
	set_name	(0X5EF4,	"closedir");
	create_insn	(x=0X5EF8);
	op_hex		(x,	1);
	create_insn	(x=0X5EFC);
	op_plain_offset	(x,	1,	0X33EFC);
	op_plain_offset	(x,	129,	0X33EFC);
	create_insn	(x=0X5F00);
	op_hex		(x,	1);
	set_name	(0X5F00,	"j_CalFileMD5");
	create_insn	(x=0X5F04);
	op_hex		(x,	1);
	create_insn	(x=0X5F08);
	op_plain_offset	(x,	1,	0X33F08);
	op_plain_offset	(x,	129,	0X33F08);
	create_insn	(x=0X5F0C);
	op_hex		(x,	1);
	set_name	(0X5F0C,	"j_AES_decrypt");
	create_insn	(x=0X5F10);
	op_hex		(x,	1);
	create_insn	(x=0X5F14);
	op_plain_offset	(x,	1,	0X33F14);
	op_plain_offset	(x,	129,	0X33F14);
	create_insn	(x=0X5F18);
	op_hex		(x,	1);
	set_name	(0X5F18,	"j_Iap2_Ctrl_Session_FastCmd");
	create_insn	(x=0X5F1C);
	op_hex		(x,	1);
	create_insn	(x=0X5F20);
	op_plain_offset	(x,	1,	0X33F20);
	op_plain_offset	(x,	129,	0X33F20);
	create_insn	(x=0X5F24);
	op_hex		(x,	1);
	set_name	(0X5F24,	"j_Iap2_Link_Session_GetSendPkt");
	create_insn	(x=0X5F28);
	op_hex		(x,	1);
	create_insn	(x=0X5F2C);
	op_plain_offset	(x,	1,	0X33F2C);
	op_plain_offset	(x,	129,	0X33F2C);
	create_insn	(x=0X5F30);
	op_hex		(x,	1);
	set_name	(0X5F30,	"j_sha256_update");
	create_insn	(x=0X5F34);
	op_hex		(x,	1);
	create_insn	(x=0X5F38);
	op_plain_offset	(x,	1,	0X33F38);
	op_plain_offset	(x,	129,	0X33F38);
	create_insn	(x=0X5F3C);
	op_hex		(x,	1);
	set_name	(0X5F3C,	"time");
	create_insn	(x=0X5F40);
	op_hex		(x,	1);
	create_insn	(x=0X5F44);
	op_plain_offset	(x,	1,	0X33F44);
	op_plain_offset	(x,	129,	0X33F44);
	create_insn	(x=0X5F48);
	op_hex		(x,	1);
	set_name	(0X5F48,	"j_MD5_Update");
	create_insn	(x=0X5F4C);
	op_hex		(x,	1);
	create_insn	(x=0X5F50);
	op_plain_offset	(x,	1,	0X33F50);
	op_plain_offset	(x,	129,	0X33F50);
	create_insn	(x=0X5F54);
	op_hex		(x,	1);
	set_name	(0X5F54,	"j_UsbInit");
	create_insn	(x=0X5F58);
	op_hex		(x,	1);
	create_insn	(x=0X5F5C);
	op_plain_offset	(x,	1,	0X33F5C);
	op_plain_offset	(x,	129,	0X33F5C);
	create_insn	(x=0X5F60);
	op_hex		(x,	1);
	set_name	(0X5F60,	"j_IsAndroidPlugIn");
	create_insn	(x=0X5F64);
	op_hex		(x,	1);
	create_insn	(x=0X5F68);
	op_plain_offset	(x,	1,	0X33F68);
	op_plain_offset	(x,	129,	0X33F68);
	create_insn	(x=0X5F6C);
	op_hex		(x,	1);
	set_name	(0X5F6C,	"malloc");
	create_insn	(x=0X5F70);
	op_hex		(x,	1);
	create_insn	(x=0X5F74);
	op_plain_offset	(x,	1,	0X33F74);
	op_plain_offset	(x,	129,	0X33F74);
	create_insn	(x=0X5F78);
	op_hex		(x,	1);
	set_name	(0X5F78,	"j_Iap2_Pkt_GetEAProDataPtr");
	create_insn	(x=0X5F7C);
	op_hex		(x,	1);
	create_insn	(x=0X5F80);
	op_plain_offset	(x,	1,	0X33F80);
	op_plain_offset	(x,	129,	0X33F80);
	create_insn	(x=0X5F84);
	op_hex		(x,	1);
	set_name	(0X5F84,	"cfsetospeed");
	create_insn	(x=0X5F88);
	op_hex		(x,	1);
	create_insn	(x=0X5F8C);
	op_plain_offset	(x,	1,	0X33F8C);
	op_plain_offset	(x,	129,	0X33F8C);
	create_insn	(x=0X5F90);
	op_hex		(x,	1);
	set_name	(0X5F90,	"j_Update_Parse_App_Version");
	create_insn	(x=0X5F94);
	op_hex		(x,	1);
	create_insn	(x=0X5F98);
	op_plain_offset	(x,	1,	0X33F98);
	op_plain_offset	(x,	129,	0X33F98);
	create_insn	(x=0X5F9C);
	op_hex		(x,	1);
	set_name	(0X5F9C,	"j_tcp_send");
	create_insn	(x=0X5FA0);
	op_hex		(x,	1);
	create_insn	(x=0X5FA4);
	op_plain_offset	(x,	1,	0X33FA4);
	op_plain_offset	(x,	129,	0X33FA4);
	create_insn	(x=0X5FA8);
	op_hex		(x,	1);
	set_name	(0X5FA8,	"j_Usbupdatecheck_PrintResult_Downgrade_Abort");
	create_insn	(x=0X5FAC);
	op_hex		(x,	1);
	create_insn	(x=0X5FB0);
	op_plain_offset	(x,	1,	0X33FB0);
	op_plain_offset	(x,	129,	0X33FB0);
	create_insn	(x=0X5FB4);
	op_hex		(x,	1);
	set_name	(0X5FB4,	"pthread_attr_init");
	create_insn	(x=0X5FB8);
	op_hex		(x,	1);
	create_insn	(x=0X5FBC);
	op_plain_offset	(x,	1,	0X33FBC);
	op_plain_offset	(x,	129,	0X33FBC);
	create_insn	(x=0X5FC0);
	op_hex		(x,	1);
	set_name	(0X5FC0,	"j_IsTimeOut");
	create_insn	(x=0X5FC4);
	op_hex		(x,	1);
	create_insn	(x=0X5FC8);
	op_plain_offset	(x,	1,	0X33FC8);
	op_plain_offset	(x,	129,	0X33FC8);
	create_insn	(x=0X5FCC);
	op_hex		(x,	1);
	set_name	(0X5FCC,	"j_Set_Mutex_Attr_Recu");
	create_insn	(x=0X5FD0);
	op_hex		(x,	1);
	create_insn	(x=0X5FD4);
	op_plain_offset	(x,	1,	0X33FD4);
	op_plain_offset	(x,	129,	0X33FD4);
	create_insn	(x=0X5FD8);
	op_hex		(x,	1);
	set_name	(0X5FD8,	"j_Usbupdate_PrintResultFile");
	create_insn	(x=0X5FDC);
	op_hex		(x,	1);
	create_insn	(x=0X5FE0);
	op_plain_offset	(x,	1,	0X33FE0);
	op_plain_offset	(x,	129,	0X33FE0);
	create_insn	(x=0X5FE4);
	op_hex		(x,	1);
	set_name	(0X5FE4,	"j_AES_set_encrypt_key");
	create_insn	(x=0X5FE8);
	op_hex		(x,	1);
	create_insn	(x=0X5FEC);
	op_plain_offset	(x,	1,	0X33FEC);
	op_plain_offset	(x,	129,	0X33FEC);
	create_insn	(x=0X5FF0);
	op_hex		(x,	1);
	set_name	(0X5FF0,	"j_sha256");
	create_insn	(x=0X5FF4);
	op_hex		(x,	1);
	create_insn	(x=0X5FF8);
	op_plain_offset	(x,	1,	0X33FF8);
	op_plain_offset	(x,	129,	0X33FF8);
	create_insn	(x=0X5FFC);
	op_hex		(x,	1);
	set_name	(0X5FFC,	"j_At88_Write_Key");
	create_insn	(x=0X6004);
	op_plain_offset	(x,	1,	0X34004);
	op_plain_offset	(x,	129,	0X34004);
	create_insn	(x=0X6008);
	op_hex		(x,	1);
	set_name	(0X6008,	"j_Iap2_Link_EASession_Recv");
	create_insn	(x=0X6010);
	op_plain_offset	(x,	1,	0X34010);
	op_plain_offset	(x,	129,	0X34010);
	create_insn	(x=0X6014);
	op_hex		(x,	1);
	set_name	(0X6014,	"j_AesDecryptFromFile");
	create_insn	(x=0X601C);
	op_plain_offset	(x,	1,	0X3401C);
	op_plain_offset	(x,	129,	0X3401C);
	create_insn	(x=0X6020);
	op_hex		(x,	1);
	set_name	(0X6020,	"ftruncate");
	create_insn	(x=0X6028);
	op_plain_offset	(x,	1,	0X34028);
	op_plain_offset	(x,	129,	0X34028);
	create_insn	(x=0X602C);
	op_hex		(x,	1);
	set_name	(0X602C,	"j_CalMD5");
	create_insn	(x=0X6034);
	op_plain_offset	(x,	1,	0X34034);
	op_plain_offset	(x,	129,	0X34034);
	create_insn	(x=0X6038);
	op_hex		(x,	1);
	set_name	(0X6038,	"j_AesDecrypt");
	create_insn	(x=0X6040);
	op_plain_offset	(x,	1,	0X34040);
	op_plain_offset	(x,	129,	0X34040);
	create_insn	(x=0X6044);
	op_hex		(x,	1);
	set_name	(0X6044,	"sleep");
	create_insn	(x=0X604C);
	op_plain_offset	(x,	1,	0X3404C);
	op_plain_offset	(x,	129,	0X3404C);
	create_insn	(x=0X6050);
	op_hex		(x,	1);
	set_name	(0X6050,	"j_Usbupdatecheck_PrintResult_Abort");
	create_insn	(x=0X6058);
	op_plain_offset	(x,	1,	0X34058);
	op_plain_offset	(x,	129,	0X34058);
	create_insn	(x=0X605C);
	op_hex		(x,	1);
	set_name	(0X605C,	"j_Pro_Cmd_Load_Start");
	create_insn	(x=0X6064);
	op_plain_offset	(x,	1,	0X34064);
	op_plain_offset	(x,	129,	0X34064);
	create_insn	(x=0X6068);
	op_hex		(x,	1);
	set_name	(0X6068,	"j_Usbupdatecheck_CreateAndCheck_Single_Fw");
	create_insn	(x=0X6070);
	op_plain_offset	(x,	1,	0X34070);
	op_plain_offset	(x,	129,	0X34070);
	create_insn	(x=0X6074);
	op_hex		(x,	1);
	set_name	(0X6074,	"send");
	create_insn	(x=0X607C);
	op_plain_offset	(x,	1,	0X3407C);
	op_plain_offset	(x,	129,	0X3407C);
	create_insn	(x=0X6080);
	op_hex		(x,	1);
	set_name	(0X6080,	"strcat");
	create_insn	(x=0X6088);
	op_plain_offset	(x,	1,	0X34088);
	op_plain_offset	(x,	129,	0X34088);
	create_insn	(x=0X608C);
	op_hex		(x,	1);
	set_name	(0X608C,	"j_init_libusb");
	create_insn	(x=0X6094);
	op_plain_offset	(x,	1,	0X34094);
	op_plain_offset	(x,	129,	0X34094);
	create_insn	(x=0X6098);
	op_hex		(x,	1);
	set_name	(0X6098,	"libusb_get_device_descriptor");
	create_insn	(x=0X60A0);
	op_plain_offset	(x,	1,	0X340A0);
	op_plain_offset	(x,	129,	0X340A0);
	create_insn	(x=0X60A4);
	op_hex		(x,	1);
	set_name	(0X60A4,	"j_Queue_Delete");
	create_insn	(x=0X60AC);
	op_plain_offset	(x,	1,	0X340AC);
	op_plain_offset	(x,	129,	0X340AC);
	create_insn	(x=0X60B0);
	op_hex		(x,	1);
	set_name	(0X60B0,	"popen");
	create_insn	(x=0X60B8);
	op_plain_offset	(x,	1,	0X340B8);
	op_plain_offset	(x,	129,	0X340B8);
	create_insn	(x=0X60BC);
	op_hex		(x,	1);
	set_name	(0X60BC,	"usbmuxd_recv_timeout");
	create_insn	(x=0X60C4);
	op_plain_offset	(x,	1,	0X340C4);
	op_plain_offset	(x,	129,	0X340C4);
	create_insn	(x=0X60C8);
	op_hex		(x,	1);
	set_name	(0X60C8,	"puts");
	create_insn	(x=0X60D0);
	op_plain_offset	(x,	1,	0X340D0);
	op_plain_offset	(x,	129,	0X340D0);
	create_insn	(x=0X60D4);
	op_hex		(x,	1);
	set_name	(0X60D4,	"tcsetattr");
	create_insn	(x=0X60DC);
	op_plain_offset	(x,	1,	0X340DC);
	op_plain_offset	(x,	129,	0X340DC);
	create_insn	(x=0X60E0);
	op_hex		(x,	1);
	set_name	(0X60E0,	"getpid");
	create_insn	(x=0X60E8);
	op_plain_offset	(x,	1,	0X340E8);
	op_plain_offset	(x,	129,	0X340E8);
	create_insn	(x=0X60EC);
	op_hex		(x,	1);
	set_name	(0X60EC,	"j_Iap2_Timer_IsValid");
	create_insn	(x=0X60F4);
	op_plain_offset	(x,	1,	0X340F4);
	op_plain_offset	(x,	129,	0X340F4);
	create_insn	(x=0X60F8);
	op_hex		(x,	1);
	set_name	(0X60F8,	"j_At88_Lock_Config");
	create_insn	(x=0X6100);
	op_plain_offset	(x,	1,	0X34100);
	op_plain_offset	(x,	129,	0X34100);
	create_insn	(x=0X6104);
	op_hex		(x,	1);
	set_name	(0X6104,	"j_md5_block_host_order");
	create_insn	(x=0X610C);
	op_plain_offset	(x,	1,	0X3410C);
	op_plain_offset	(x,	129,	0X3410C);
	create_insn	(x=0X6110);
	op_hex		(x,	1);
	set_name	(0X6110,	"j_sha256_init");
	create_insn	(x=0X6118);
	op_plain_offset	(x,	1,	0X34118);
	op_plain_offset	(x,	129,	0X34118);
	create_insn	(x=0X611C);
	op_hex		(x,	1);
	set_name	(0X611C,	"fcntl");
	create_insn	(x=0X6124);
	op_plain_offset	(x,	1,	0X34124);
	op_plain_offset	(x,	129,	0X34124);
	create_insn	(x=0X6128);
	op_hex		(x,	1);
	set_name	(0X6128,	"j_tcp_is_conn");
	create_insn	(x=0X6130);
	op_plain_offset	(x,	1,	0X34130);
	op_plain_offset	(x,	129,	0X34130);
	create_insn	(x=0X6134);
	op_hex		(x,	1);
	set_name	(0X6134,	"j_WriteFile");
	create_insn	(x=0X613C);
	op_plain_offset	(x,	1,	0X3413C);
	op_plain_offset	(x,	129,	0X3413C);
	create_insn	(x=0X6140);
	op_hex		(x,	1);
	set_name	(0X6140,	"bzero");
	create_insn	(x=0X6148);
	op_plain_offset	(x,	1,	0X34148);
	op_plain_offset	(x,	129,	0X34148);
	create_insn	(x=0X614C);
	op_hex		(x,	1);
	set_name	(0X614C,	"j_Iap2_Timer_Del");
	create_insn	(x=0X6154);
	op_plain_offset	(x,	1,	0X34154);
	op_plain_offset	(x,	129,	0X34154);
	create_insn	(x=0X6158);
	op_hex		(x,	1);
	set_name	(0X6158,	"j_Iap2_Timer_IsTimeout");
	create_insn	(x=0X6160);
	op_plain_offset	(x,	1,	0X34160);
	op_plain_offset	(x,	129,	0X34160);
	create_insn	(x=0X6164);
	op_hex		(x,	1);
	set_name	(0X6164,	"j_Iap2_Pkt_GetDataPtr");
	create_insn	(x=0X616C);
	op_plain_offset	(x,	1,	0X3416C);
	op_plain_offset	(x,	129,	0X3416C);
	create_insn	(x=0X6170);
	op_hex		(x,	1);
	set_name	(0X6170,	"j_At88_Write_Factory_Info");
	create_insn	(x=0X6178);
	op_plain_offset	(x,	1,	0X34178);
	op_plain_offset	(x,	129,	0X34178);
	create_insn	(x=0X617C);
	op_hex		(x,	1);
	set_name	(0X617C,	"htonl");
	create_insn	(x=0X6184);
	op_plain_offset	(x,	1,	0X34184);
	op_plain_offset	(x,	129,	0X34184);
	create_insn	(x=0X6188);
	op_hex		(x,	1);
	set_name	(0X6188,	"j_Update_Parse_68013_Version");
	create_insn	(x=0X6190);
	op_plain_offset	(x,	1,	0X34190);
	op_plain_offset	(x,	129,	0X34190);
	create_insn	(x=0X6194);
	op_hex		(x,	1);
	set_name	(0X6194,	"pthread_attr_destroy");
	create_insn	(x=0X619C);
	op_plain_offset	(x,	1,	0X3419C);
	op_plain_offset	(x,	129,	0X3419C);
	create_insn	(x=0X61A0);
	op_hex		(x,	1);
	set_name	(0X61A0,	"j_At88_Check_All");
	create_insn	(x=0X61A8);
	op_plain_offset	(x,	1,	0X341A8);
	op_plain_offset	(x,	129,	0X341A8);
	create_insn	(x=0X61AC);
	op_hex		(x,	1);
	set_name	(0X61AC,	"j_Get68013HardwareVersion");
	create_insn	(x=0X61B4);
	op_plain_offset	(x,	1,	0X341B4);
	op_plain_offset	(x,	129,	0X341B4);
	create_insn	(x=0X61B8);
	op_hex		(x,	1);
	set_name	(0X61B8,	"lseek");
	create_insn	(x=0X61C0);
	op_plain_offset	(x,	1,	0X341C0);
	op_plain_offset	(x,	129,	0X341C0);
	create_insn	(x=0X61C4);
	op_hex		(x,	1);
	set_name	(0X61C4,	"rand");
	create_insn	(x=0X61CC);
	op_plain_offset	(x,	1,	0X341CC);
	op_plain_offset	(x,	129,	0X341CC);
	create_insn	(x=0X61D0);
	op_hex		(x,	1);
	set_name	(0X61D0,	"j_At88_Set_Config");
	create_insn	(x=0X61D8);
	op_plain_offset	(x,	1,	0X341D8);
	op_plain_offset	(x,	129,	0X341D8);
	create_insn	(x=0X61DC);
	op_hex		(x,	1);
	set_name	(0X61DC,	"j_Iap2_Link_Session_ReleaseSendPkt");
	create_insn	(x=0X61E4);
	op_plain_offset	(x,	1,	0X341E4);
	op_plain_offset	(x,	129,	0X341E4);
	create_insn	(x=0X61E8);
	op_hex		(x,	1);
	set_name	(0X61E8,	"j_Pro_Cmd_Load_Data");
	create_insn	(x=0X61F0);
	op_plain_offset	(x,	1,	0X341F0);
	op_plain_offset	(x,	129,	0X341F0);
	create_insn	(x=0X61F4);
	op_hex		(x,	1);
	set_name	(0X61F4,	"fread");
	create_insn	(x=0X61FC);
	op_plain_offset	(x,	1,	0X341FC);
	op_plain_offset	(x,	129,	0X341FC);
	create_insn	(x=0X6200);
	op_hex		(x,	1);
	set_name	(0X6200,	"usbmuxd_get_device_by_udid");
	create_insn	(x=0X6208);
	op_plain_offset	(x,	1,	0X34208);
	op_plain_offset	(x,	129,	0X34208);
	create_insn	(x=0X620C);
	op_hex		(x,	1);
	set_name	(0X620C,	"pthread_cond_init");
	create_insn	(x=0X6214);
	op_plain_offset	(x,	1,	0X34214);
	op_plain_offset	(x,	129,	0X34214);
	create_insn	(x=0X6218);
	op_hex		(x,	1);
	set_name	(0X6218,	"j_Pro_PackAndSend");
	create_insn	(x=0X6220);
	op_plain_offset	(x,	1,	0X34220);
	op_plain_offset	(x,	129,	0X34220);
	create_insn	(x=0X6224);
	op_hex		(x,	1);
	set_name	(0X6224,	"msgrcv");
	create_insn	(x=0X622C);
	op_plain_offset	(x,	1,	0X3422C);
	op_plain_offset	(x,	129,	0X3422C);
	create_insn	(x=0X6230);
	op_hex		(x,	1);
	set_name	(0X6230,	"j_At88_Init");
	create_insn	(x=0X6238);
	op_plain_offset	(x,	1,	0X34238);
	op_plain_offset	(x,	129,	0X34238);
	create_insn	(x=0X623C);
	op_hex		(x,	1);
	set_name	(0X623C,	"j_Pro_Cmd_Enter_Loader");
	create_insn	(x=0X6244);
	op_plain_offset	(x,	1,	0X34244);
	op_plain_offset	(x,	129,	0X34244);
	create_insn	(x=0X6248);
	op_hex		(x,	1);
	set_name	(0X6248,	"recvfrom");
	create_insn	(x=0X6250);
	op_plain_offset	(x,	1,	0X34250);
	op_plain_offset	(x,	129,	0X34250);
	create_insn	(x=0X6254);
	op_hex		(x,	1);
	set_name	(0X6254,	"j_Iap2_Queue_Get");
	create_insn	(x=0X625C);
	op_plain_offset	(x,	1,	0X3425C);
	op_plain_offset	(x,	129,	0X3425C);
	create_insn	(x=0X6260);
	op_hex		(x,	1);
	set_name	(0X6260,	"j_At88_Write_Factory_Info_File");
	create_insn	(x=0X6268);
	op_plain_offset	(x,	1,	0X34268);
	op_plain_offset	(x,	129,	0X34268);
	create_insn	(x=0X626C);
	op_hex		(x,	1);
	set_name	(0X626C,	"j_AesEncryptToFile");
	create_insn	(x=0X6274);
	op_plain_offset	(x,	1,	0X34274);
	op_plain_offset	(x,	129,	0X34274);
	create_insn	(x=0X6278);
	op_hex		(x,	1);
	set_name	(0X6278,	"j_DJI_ProStruct_Init");
	create_insn	(x=0X6280);
	op_plain_offset	(x,	1,	0X34280);
	op_plain_offset	(x,	129,	0X34280);
	create_insn	(x=0X6284);
	op_hex		(x,	1);
	set_name	(0X6284,	"setsockopt");
	create_insn	(x=0X628C);
	op_plain_offset	(x,	1,	0X3428C);
	op_plain_offset	(x,	129,	0X3428C);
	create_insn	(x=0X6290);
	op_hex		(x,	1);
	set_name	(0X6290,	"pthread_mutexattr_init");
	create_insn	(x=0X6298);
	op_plain_offset	(x,	1,	0X34298);
	op_plain_offset	(x,	129,	0X34298);
	create_insn	(x=0X629C);
	op_hex		(x,	1);
	set_name	(0X629C,	"readdir");
	create_insn	(x=0X62A4);
	op_plain_offset	(x,	1,	0X342A4);
	op_plain_offset	(x,	129,	0X342A4);
	create_insn	(x=0X62A8);
	op_hex		(x,	1);
	set_name	(0X62A8,	"j_Watchdog_Feed");
	create_insn	(x=0X62B0);
	op_plain_offset	(x,	1,	0X342B0);
	op_plain_offset	(x,	129,	0X342B0);
	create_insn	(x=0X62B4);
	op_hex		(x,	1);
	set_name	(0X62B4,	"j_syncSendBuffer");
	create_insn	(x=0X62BC);
	op_plain_offset	(x,	1,	0X342BC);
	op_plain_offset	(x,	129,	0X342BC);
	create_insn	(x=0X62C0);
	op_hex		(x,	1);
	set_name	(0X62C0,	"j_At88_Write_Kernel_Encrypt");
	create_insn	(x=0X62C8);
	op_plain_offset	(x,	1,	0X342C8);
	op_plain_offset	(x,	129,	0X342C8);
	create_insn	(x=0X62CC);
	op_hex		(x,	1);
	set_name	(0X62CC,	"strcmp");
	create_insn	(x=0X62D4);
	op_plain_offset	(x,	1,	0X342D4);
	op_plain_offset	(x,	129,	0X342D4);
	create_insn	(x=0X62D8);
	op_hex		(x,	1);
	set_name	(0X62D8,	"j_Pro_Cmd_Get_State");
	create_insn	(x=0X62E0);
	op_plain_offset	(x,	1,	0X342E0);
	op_plain_offset	(x,	129,	0X342E0);
	create_insn	(x=0X62E4);
	op_hex		(x,	1);
	set_name	(0X62E4,	"exit");
	create_insn	(x=0X62EC);
	op_plain_offset	(x,	1,	0X342EC);
	op_plain_offset	(x,	129,	0X342EC);
	create_insn	(x=0X62F0);
	op_hex		(x,	1);
	set_name	(0X62F0,	"cfsetispeed");
	create_insn	(x=0X62F8);
	op_plain_offset	(x,	1,	0X342F8);
	op_plain_offset	(x,	129,	0X342F8);
	create_insn	(x=0X62FC);
	op_hex		(x,	1);
	set_name	(0X62FC,	"j_Reset_68013");
	create_insn	(x=0X6304);
	op_plain_offset	(x,	1,	0X34304);
	op_plain_offset	(x,	129,	0X34304);
	create_insn	(x=0X6308);
	op_hex		(x,	1);
	set_name	(0X6308,	"j_At88_Mac_Check");
	create_insn	(x=0X6310);
	op_plain_offset	(x,	1,	0X34310);
	op_plain_offset	(x,	129,	0X34310);
	create_insn	(x=0X6314);
	op_hex		(x,	1);
	set_name	(0X6314,	"__errno_location");
	create_insn	(x=0X631C);
	op_plain_offset	(x,	1,	0X3431C);
	op_plain_offset	(x,	129,	0X3431C);
	create_insn	(x=0X6320);
	op_hex		(x,	1);
	set_name	(0X6320,	"j_Pro_Get_CurSeq");
	create_insn	(x=0X6328);
	op_plain_offset	(x,	1,	0X34328);
	op_plain_offset	(x,	129,	0X34328);
	create_insn	(x=0X632C);
	op_hex		(x,	1);
	set_name	(0X632C,	"j_Queue_PutData");
	create_insn	(x=0X6334);
	op_plain_offset	(x,	1,	0X34334);
	op_plain_offset	(x,	129,	0X34334);
	create_insn	(x=0X6338);
	op_hex		(x,	1);
	set_name	(0X6338,	"j_At88_Read_Chip_Info");
	create_insn	(x=0X6340);
	op_plain_offset	(x,	1,	0X34340);
	op_plain_offset	(x,	129,	0X34340);
	create_insn	(x=0X6344);
	op_hex		(x,	1);
	set_name	(0X6344,	"__cxa_finalize");
	create_insn	(x=0X634C);
	op_plain_offset	(x,	1,	0X3434C);
	op_plain_offset	(x,	129,	0X3434C);
	create_insn	(x=0X6350);
	op_hex		(x,	1);
	set_name	(0X6350,	"sprintf");
	create_insn	(x=0X6358);
	op_plain_offset	(x,	1,	0X34358);
	op_plain_offset	(x,	129,	0X34358);
	create_insn	(x=0X635C);
	op_hex		(x,	1);
	set_name	(0X635C,	"pthread_join");
	create_insn	(x=0X6364);
	op_plain_offset	(x,	1,	0X34364);
	op_plain_offset	(x,	129,	0X34364);
	create_insn	(x=0X6368);
	op_hex		(x,	1);
	set_name	(0X6368,	"j_aoa_subscribe");
	create_insn	(x=0X6370);
	op_plain_offset	(x,	1,	0X34370);
	op_plain_offset	(x,	129,	0X34370);
	create_insn	(x=0X6374);
	op_hex		(x,	1);
	set_name	(0X6374,	"j_At88_Check_Auth");
	create_insn	(x=0X637C);
	op_plain_offset	(x,	1,	0X3437C);
	op_plain_offset	(x,	129,	0X3437C);
	create_insn	(x=0X6380);
	op_hex		(x,	1);
	set_name	(0X6380,	"j_Pro_Cmd_Update_Ctrl");
	create_insn	(x=0X6388);
	op_plain_offset	(x,	1,	0X34388);
	op_plain_offset	(x,	129,	0X34388);
	create_insn	(0X638C);
	set_name	(0X638C,	"call_gmon_start");
	create_insn	(x=0X6390);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X63A8);
	op_plain_offset	(x,	0,	0X639C);
	op_plain_offset	(x,	128,	0X639C);
	create_dword	(x=0X63AC);
	op_plain_offset	(x,	0,	0X34134);
	op_plain_offset	(x,	128,	0X34134);
	create_insn	(0X63B0);
	set_name	(0X63B0,	"__do_global_dtors_aux");
	create_insn	(x=0X63B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X63CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X63DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X63F4);
	op_plain_offset	(x,	0,	0X63C4);
	op_plain_offset	(x,	128,	0X63C4);
	create_dword	(x=0X63F8);
	op_plain_offset	(x,	0,	0X34134);
	op_plain_offset	(x,	128,	0X34134);
	create_dword	(x=0X63FC);
	op_plain_offset	(x,	0,	0X34134);
	op_plain_offset	(x,	128,	0X34134);
	create_dword	(x=0X6400);
	op_plain_offset	(x,	0,	0X34134);
	op_plain_offset	(x,	128,	0X34134);
	create_insn	(0X6404);
	set_name	(0X6404,	"frame_dummy");
	create_insn	(x=0X6424);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X643C);
	op_plain_offset	(x,	0,	0X6414);
	op_plain_offset	(x,	128,	0X6414);
	create_dword	(x=0X6440);
	op_plain_offset	(x,	0,	0X34134);
	op_plain_offset	(x,	128,	0X34134);
	create_dword	(x=0X6444);
	op_plain_offset	(x,	0,	0X34134);
	op_plain_offset	(x,	128,	0X34134);
	create_insn	(x=0X6448);
	op_stkvar	(x,	1);
	set_name	(0X6448,	"CalCrc8");
	create_insn	(x=0X6458);
	op_stkvar	(x,	1);
	create_insn	(x=0X645C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6460);
	op_stkvar	(x,	1);
	create_insn	(x=0X6468);
	op_stkvar	(x,	1);
	create_insn	(x=0X6470);
	op_stkvar	(x,	1);
	create_insn	(x=0X6478);
	op_stkvar	(x,	1);
	create_insn	(x=0X6480);
	op_stkvar	(x,	1);
	create_insn	(x=0X6484);
	op_stkvar	(x,	1);
	create_insn	(x=0X6488);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X6490);
	op_stkvar	(x,	1);
	create_insn	(x=0X6494);
	op_stkvar	(x,	1);
	create_insn	(x=0X649C);
	op_stkvar	(x,	1);
	create_insn	(x=0X64A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X64B0);
	op_hex		(x,	1);
	create_insn	(x=0X64B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X64BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X64C8);
	op_stkvar	(x,	1);
	create_dword	(x=0X64DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X64E0);
	op_stkvar	(x,	1);
	set_name	(0X64E0,	"CalCrc16");
	create_insn	(x=0X64F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X64F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X64F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X64FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X650C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6514);
	op_stkvar	(x,	1);
	create_insn	(x=0X651C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6520);
	op_stkvar	(x,	1);
	create_insn	(x=0X6528);
	op_stkvar	(x,	1);
	create_insn	(x=0X652C);
	op_stkvar	(x,	1);
	create_insn	(x=0X653C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6540);
	op_stkvar	(x,	1);
	create_insn	(x=0X6548);
	op_hex		(x,	1);
	create_insn	(x=0X654C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X6560);
	op_stkvar	(x,	1);
	create_insn	(x=0X6564);
	op_stkvar	(x,	1);
	create_insn	(x=0X6574);
	op_hex		(x,	1);
	create_insn	(x=0X6578);
	op_stkvar	(x,	1);
	create_insn	(x=0X6580);
	op_stkvar	(x,	1);
	create_insn	(x=0X658C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6590);
	op_stkvar	(x,	1);
	create_insn	(x=0X6594);
	op_stkvar	(x,	1);
	create_dword	(0X65A8);
	create_dword	(x=0X65AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X65B0);
	set_name	(0X65B0,	"DataBuff_Create");
	create_insn	(x=0X65BC);
	op_stkvar	(x,	1);
	set_cmt	(0X65C0,	"size",	0);
	create_insn	(x=0X65CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X65D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X65E0);
	op_stkvar	(x,	1);
	set_cmt	(0X65E8,	"s",	0);
	create_insn	(x=0X65E8);
	op_stkvar	(x,	1);
	set_cmt	(0X65EC,	"c",	0);
	set_cmt	(0X65F0,	"n",	0);
	create_insn	(x=0X65F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X65FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6604);
	op_stkvar	(x,	1);
	set_cmt	(0X660C,	"size",	0);
	create_insn	(x=0X661C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6624);
	op_stkvar	(x,	1);
	create_insn	(x=0X6634);
	op_stkvar	(x,	1);
	create_insn	(x=0X6638);
	op_stkvar	(x,	1);
	set_cmt	(0X6640,	"ptr",	0);
	create_insn	(x=0X6640);
	op_stkvar	(x,	1);
	create_insn	(x=0X664C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6650);
	op_stkvar	(x,	1);
	create_insn	(x=0X6660);
	op_stkvar	(x,	1);
	set_name	(0X6660,	"DataBuff_Clear");
	create_insn	(x=0X666C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6670);
	op_stkvar	(x,	1);
	create_insn	(x=0X667C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6690);
	op_stkvar	(x,	1);
	create_insn	(x=0X6698);
	op_stkvar	(x,	1);
	create_insn	(x=0X66A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X66AC);
	op_stkvar	(x,	1);
	create_insn	(0X66C0);
	set_name	(0X66C0,	"DataBuff_Delete");
	create_insn	(x=0X66CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X66D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X66DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X66F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X66F8);
	op_stkvar	(x,	1);
	set_cmt	(0X6700,	"ptr",	0);
	set_cmt	(0X6708,	"ptr",	0);
	create_insn	(x=0X6708);
	op_stkvar	(x,	1);
	create_insn	(x=0X6714);
	op_stkvar	(x,	1);
	create_insn	(x=0X6718);
	op_stkvar	(x,	1);
	create_insn	(x=0X6728);
	op_stkvar	(x,	1);
	set_name	(0X6728,	"Code_Hex");
	create_insn	(x=0X6734);
	op_stkvar	(x,	1);
	create_insn	(x=0X6738);
	op_stkvar	(x,	1);
	create_insn	(x=0X6744);
	op_stkvar	(x,	1);
	create_insn	(x=0X6754);
	op_stkvar	(x,	1);
	create_insn	(x=0X6764);
	op_stkvar	(x,	1);
	create_insn	(x=0X6778);
	op_stkvar	(x,	1);
	create_insn	(x=0X6780);
	op_stkvar	(x,	1);
	create_insn	(x=0X6794);
	op_stkvar	(x,	1);
	create_insn	(x=0X679C);
	op_stkvar	(x,	1);
	create_insn	(x=0X67A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X67A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X67B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X67BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X67C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X67C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X67D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X67D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X67E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X67E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X67F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X67FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X680C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6814);
	op_stkvar	(x,	1);
	create_insn	(x=0X6820);
	op_stkvar	(x,	1);
	create_insn	(x=0X6830);
	op_stkvar	(x,	1);
	create_insn	(x=0X6838);
	op_stkvar	(x,	1);
	create_insn	(x=0X6844);
	op_stkvar	(x,	1);
	create_insn	(x=0X6854);
	op_stkvar	(x,	1);
	create_insn	(x=0X685C);
	op_stkvar	(x,	1);
	create_insn	(x=0X686C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6874);
	op_stkvar	(x,	1);
	create_insn	(x=0X687C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6884);
	op_stkvar	(x,	1);
	create_insn	(x=0X688C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6890);
	op_stkvar	(x,	1);
	create_insn	(x=0X6898);
	op_stkvar	(x,	1);
	create_insn	(x=0X68A8);
	op_hex		(x,	1);
	create_insn	(x=0X68AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X68B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X68BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X68C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X68C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X68D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X68E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X68E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X68F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X68FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6904);
	op_stkvar	(x,	1);
	create_insn	(x=0X6908);
	op_stkvar	(x,	1);
	create_insn	(x=0X6910);
	op_stkvar	(x,	1);
	create_insn	(x=0X6914);
	op_stkvar	(x,	1);
	create_insn	(x=0X691C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6928);
	op_stkvar	(x,	1);
	create_insn	(x=0X692C);
	op_stkvar	(x,	1);
	create_insn	(x=0X693C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6944);
	op_stkvar	(x,	1);
	create_insn	(x=0X694C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6954);
	op_stkvar	(x,	1);
	create_insn	(x=0X695C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6960);
	op_stkvar	(x,	1);
	create_insn	(x=0X6968);
	op_stkvar	(x,	1);
	create_insn	(x=0X696C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6980);
	op_stkvar	(x,	1);
	create_insn	(x=0X6984);
	op_stkvar	(x,	1);
	create_insn	(x=0X6998);
	op_stkvar	(x,	1);
	set_name	(0X6998,	"Decode_Hex");
	create_insn	(x=0X69A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X69A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X69B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X69C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X69D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X69E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X69F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X69FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X6A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X6A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6A2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6A34);
	op_stkvar	(x,	1);
	create_insn	(x=0X6A40);
	op_stkvar	(x,	1);
	create_insn	(x=0X6A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X6A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X6A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X6A70);
	op_stkvar	(x,	1);
	create_insn	(x=0X6A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6A84);
	op_stkvar	(x,	1);
	create_insn	(x=0X6A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X6AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X6AA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X6AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X6ABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6AD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X6AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X6ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X6AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6B0C);
	op_hex		(x,	1);
	create_insn	(x=0X6B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X6B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X6B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X6B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X6B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X6B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X6B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X6B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X6B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X6B68);
	op_stkvar	(x,	1);
	create_insn	(x=0X6B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X6B84);
	op_stkvar	(x,	1);
	create_insn	(0X6B98);
	set_name	(0X6B98,	"DJI_Frame_Cap");
	create_insn	(x=0X6BA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X6BAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X6BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6BCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X6C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X6C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X6C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X6C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X6C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X6C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X6C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6C5C);
	op_stkvar	(x,	1);
	set_cmt	(0X6C64,	"ptTime",	0);
	set_cmt	(0X6C68,	"ulTimeOutms",	0);
	create_insn	(x=0X6C7C);
	op_stkvar	(x,	1);
	create_insn	(0X6C8C);
	create_insn	(x=0X6C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X6C98);
	op_stkvar	(x,	1);
	create_insn	(x=0X6C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X6CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X6CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X6CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6CE0);
	op_stkvar	(x,	1);
	set_cmt	(0X6CE8,	"ptTime",	0);
	create_insn	(0X6CF4);
	create_insn	(x=0X6CF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X6D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X6D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X6D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X6D38);
	op_stkvar	(x,	1);
	set_cmt	(0X6D40,	"crc",	0);
	set_cmt	(0X6D44,	"pchMessage",	0);
	set_cmt	(0X6D48,	"dwLength",	0);
	create_insn	(x=0X6D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X6D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X6D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X6D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X6D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X6D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X6DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X6DB4);
	op_hex		(x,	1);
	create_insn	(x=0X6DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X6DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X6E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X6E0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X6E24);
	op_stkvar	(x,	1);
	create_insn	(x=0X6E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X6E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X6E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X6E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X6E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X6E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X6E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X6E60);
	op_stkvar	(x,	1);
	create_insn	(x=0X6E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X6E6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6E78);
	op_stkvar	(x,	1);
	create_insn	(x=0X6E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X6E90);
	op_stkvar	(x,	1);
	create_insn	(x=0X6EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X6EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X6EB0);
	op_stkvar	(x,	1);
	set_cmt	(0X6EB8,	"n",	0);
	create_insn	(x=0X6EB8);
	op_stkvar	(x,	1);
	set_cmt	(0X6EBC,	"dest",	0);
	create_insn	(x=0X6EBC);
	op_stkvar	(x,	1);
	set_cmt	(0X6EC0,	"src",	0);
	create_insn	(x=0X6EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X6ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6ED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X6ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X6EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X6EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X6EF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X6EFC);
	op_stkvar	(x,	1);
	set_cmt	(0X6F08,	"crc",	0);
	set_cmt	(0X6F0C,	"pchMessage",	0);
	set_cmt	(0X6F10,	"dwLength",	0);
	create_insn	(x=0X6F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X6F28);
	op_stkvar	(x,	1);
	create_insn	(x=0X6F38);
	op_stkvar	(x,	1);
	set_cmt	(0X6F3C,	"pOut",	0);
	set_cmt	(0X6F40,	"pIn",	0);
	create_insn	(x=0X6F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X6F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X6F68);
	op_stkvar	(x,	1);
	create_insn	(x=0X6F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X6F7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6F80);
	op_stkvar	(x,	1);
	create_insn	(x=0X6F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X6F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X6F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X6FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X6FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X6FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X6FC4);
	op_stkvar	(x,	1);
	create_dword	(0X6FD4);
	set_name	(0X6FD4,	"crc");
	create_insn	(x=0X6FD8);
	op_stkvar	(x,	1);
	set_name	(0X6FD8,	"Frame_Capture");
	create_insn	(x=0X6FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X6FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X6FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7004);
	op_stkvar	(x,	1);
	create_insn	(x=0X7014);
	op_stkvar	(x,	1);
	create_insn	(x=0X7024);
	op_stkvar	(x,	1);
	create_insn	(x=0X7034);
	op_stkvar	(x,	1);
	create_insn	(x=0X7048);
	op_stkvar	(x,	1);
	create_insn	(x=0X7050);
	op_stkvar	(x,	1);
	create_insn	(x=0X7058);
	op_stkvar	(x,	1);
	create_insn	(x=0X7068);
	op_stkvar	(x,	1);
	create_insn	(x=0X706C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7074);
	op_stkvar	(x,	1);
	create_insn	(x=0X7080);
	op_stkvar	(x,	1);
	create_insn	(x=0X7084);
	op_stkvar	(x,	1);
	create_insn	(x=0X7090);
	op_stkvar	(x,	1);
	create_insn	(x=0X7098);
	op_stkvar	(x,	1);
	create_insn	(x=0X70A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X70AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X70BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X70CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X70D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X70D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X70EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X70F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X70FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7114);
	op_stkvar	(x,	1);
	create_insn	(x=0X711C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7124);
	op_stkvar	(x,	1);
	create_insn	(x=0X7130);
	op_stkvar	(x,	1);
	create_insn	(x=0X7138);
	op_stkvar	(x,	1);
	create_insn	(x=0X7140);
	op_stkvar	(x,	1);
	create_insn	(x=0X7144);
	op_stkvar	(x,	1);
	create_insn	(x=0X714C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7158);
	op_stkvar	(x,	1);
	create_insn	(x=0X7168);
	op_stkvar	(x,	1);
	create_insn	(x=0X7170);
	op_stkvar	(x,	1);
	create_insn	(x=0X7174);
	op_stkvar	(x,	1);
	create_insn	(x=0X7184);
	op_stkvar	(x,	1);
	create_insn	(x=0X718C);
	op_stkvar	(x,	1);
	create_insn	(x=0X719C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71FC);
	op_stkvar	(x,	1);
	create_insn	(0X7210);
	set_name	(0X7210,	"Frame_CapByHeadAndLen");
	create_insn	(x=0X721C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7224);
	op_stkvar	(x,	1);
	create_insn	(x=0X7228);
	op_stkvar	(x,	1);
	create_insn	(x=0X7234);
	op_stkvar	(x,	1);
	create_insn	(x=0X7244);
	op_stkvar	(x,	1);
	create_insn	(x=0X7254);
	op_stkvar	(x,	1);
	create_insn	(x=0X7264);
	op_stkvar	(x,	1);
	create_insn	(x=0X7274);
	op_stkvar	(x,	1);
	create_insn	(x=0X7284);
	op_stkvar	(x,	1);
	create_insn	(x=0X7294);
	op_stkvar	(x,	1);
	create_insn	(x=0X72A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X72B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X72C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X72C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X72D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X72DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X72E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X72F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X72F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7300);
	op_stkvar	(x,	1);
	create_insn	(0X7308);
	create_insn	(x=0X730C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7314);
	op_stkvar	(x,	1);
	create_insn	(x=0X7318);
	op_stkvar	(x,	1);
	create_insn	(x=0X732C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7334);
	op_stkvar	(x,	1);
	create_insn	(x=0X7340);
	op_stkvar	(x,	1);
	create_insn	(x=0X7350);
	op_stkvar	(x,	1);
	create_insn	(0X7368);
	create_insn	(x=0X736C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7374);
	op_stkvar	(x,	1);
	create_insn	(x=0X7380);
	op_stkvar	(x,	1);
	create_insn	(x=0X7390);
	op_stkvar	(x,	1);
	create_insn	(x=0X7398);
	op_stkvar	(x,	1);
	create_insn	(x=0X73A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X73B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X73CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X73E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X73EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X73FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7410);
	op_stkvar	(x,	1);
	create_insn	(x=0X7420);
	op_stkvar	(x,	1);
	create_insn	(x=0X7428);
	op_stkvar	(x,	1);
	create_insn	(x=0X7430);
	op_stkvar	(x,	1);
	create_insn	(x=0X7438);
	op_stkvar	(x,	1);
	create_insn	(x=0X744C);
	op_stkvar	(x,	1);
	create_insn	(x=0X745C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7460);
	op_stkvar	(x,	1);
	create_insn	(x=0X7474);
	op_stkvar	(x,	1);
	create_insn	(x=0X747C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7484);
	op_stkvar	(x,	1);
	set_cmt	(0X748C,	"dest",	0);
	set_cmt	(0X7490,	"src",	0);
	set_cmt	(0X7494,	"n",	0);
	create_insn	(x=0X749C);
	op_stkvar	(x,	1);
	create_insn	(x=0X74B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X74B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X74C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X74C8);
	op_stkvar	(x,	1);
	set_cmt	(0X74D0,	"dest",	0);
	set_cmt	(0X74D4,	"src",	0);
	set_cmt	(0X74D8,	"n",	0);
	create_insn	(x=0X74E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X74F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7508);
	op_stkvar	(x,	1);
	create_insn	(x=0X7514);
	op_stkvar	(x,	1);
	create_insn	(x=0X751C);
	op_stkvar	(x,	1);
	set_cmt	(0X7524,	"dest",	0);
	set_cmt	(0X7528,	"src",	0);
	set_cmt	(0X752C,	"n",	0);
	create_insn	(x=0X7534);
	op_stkvar	(x,	1);
	create_insn	(x=0X7548);
	op_stkvar	(x,	1);
	create_insn	(x=0X755C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7570);
	op_stkvar	(x,	1);
	create_insn	(x=0X7580);
	op_stkvar	(x,	1);
	create_insn	(x=0X7588);
	op_stkvar	(x,	1);
	create_insn	(x=0X7590);
	op_stkvar	(x,	1);
	create_insn	(x=0X7598);
	op_stkvar	(x,	1);
	create_insn	(x=0X75A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X75B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X75BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X75C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X75CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X75D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X75DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X75E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X75EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X75F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X75FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7604);
	op_stkvar	(x,	1);
	create_insn	(x=0X760C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7614);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7618);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X761C,	"line",	0);
	create_insn	(x=0X7620);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7628);
	op_stkvar	(x,	1);
	create_insn	(x=0X7634);
	op_stkvar	(x,	1);
	create_insn	(x=0X7638);
	op_stkvar	(x,	1);
	create_insn	(x=0X7640);
	op_stkvar	(x,	1);
	create_insn	(x=0X764C);
	op_stkvar	(x,	1);
	create_insn	(x=0X765C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7664);
	op_stkvar	(x,	1);
	create_insn	(x=0X766C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7674);
	op_stkvar	(x,	1);
	create_insn	(x=0X767C);
	op_stkvar	(x,	1);
	set_cmt	(0X7684,	"n",	0);
	create_insn	(x=0X7684);
	op_stkvar	(x,	1);
	set_cmt	(0X7688,	"dest",	0);
	create_insn	(x=0X7688);
	op_stkvar	(x,	1);
	set_cmt	(0X768C,	"src",	0);
	create_insn	(x=0X7694);
	op_stkvar	(x,	1);
	create_insn	(x=0X7698);
	op_stkvar	(x,	1);
	create_insn	(x=0X76A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X76A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X76A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X76B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X76B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X76C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X76C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X76D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X76DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X76E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X76F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X76F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7700);
	op_stkvar	(x,	1);
	create_insn	(x=0X7704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7708);
	op_stkvar	(x,	1);
	create_dword	(x=0X7718);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7718,	"assertion");
	create_dword	(x=0X771C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X771C,	"file");
	create_dword	(0X7720);
	set_name	(0X7720,	"line");
	create_dword	(x=0X7724);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7724,	"function");
	create_insn	(0X7728);
	set_name	(0X7728,	"GetFP32");
	create_insn	(x=0X7734);
	op_stkvar	(x,	1);
	create_insn	(x=0X7738);
	op_stkvar	(x,	1);
	create_insn	(x=0X773C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7748);
	op_stkvar	(x,	1);
	set_cmt	(0X7754,	"dest",	0);
	create_insn	(x=0X7754);
	op_stkvar	(x,	1);
	set_cmt	(0X7758,	"src",	0);
	create_insn	(x=0X7758);
	op_stkvar	(x,	1);
	set_cmt	(0X775C,	"n",	0);
	create_insn	(0X776C);
	set_name	(0X776C,	"GetINT16LittleEnd");
	create_insn	(x=0X7778);
	op_stkvar	(x,	1);
	create_insn	(x=0X777C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7780);
	op_stkvar	(x,	1);
	create_insn	(x=0X778C);
	op_stkvar	(x,	1);
	set_cmt	(0X7798,	"dest",	0);
	create_insn	(x=0X7798);
	op_stkvar	(x,	1);
	set_cmt	(0X779C,	"src",	0);
	create_insn	(x=0X779C);
	op_stkvar	(x,	1);
	set_cmt	(0X77A0,	"n",	0);
	create_insn	(0X77B0);
	set_name	(0X77B0,	"PutINT16LittleEnd");
	create_insn	(x=0X77BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X77C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X77C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X77D4);
	op_stkvar	(x,	1);
	set_cmt	(0X77D8,	"dest",	0);
	create_insn	(x=0X77D8);
	op_stkvar	(x,	1);
	set_cmt	(0X77DC,	"src",	0);
	set_cmt	(0X77E0,	"n",	0);
	create_insn	(0X77F0);
	set_name	(0X77F0,	"GetINT32LittleEnd");
	create_insn	(x=0X77FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7800);
	op_stkvar	(x,	1);
	create_insn	(x=0X7804);
	op_stkvar	(x,	1);
	create_insn	(x=0X7810);
	op_stkvar	(x,	1);
	set_cmt	(0X781C,	"dest",	0);
	create_insn	(x=0X781C);
	op_stkvar	(x,	1);
	set_cmt	(0X7820,	"src",	0);
	create_insn	(x=0X7820);
	op_stkvar	(x,	1);
	set_cmt	(0X7824,	"n",	0);
	create_insn	(0X7834);
	set_name	(0X7834,	"PutINT32LittleEnd");
	create_insn	(x=0X7840);
	op_stkvar	(x,	1);
	create_insn	(x=0X7844);
	op_stkvar	(x,	1);
	create_insn	(x=0X7848);
	op_stkvar	(x,	1);
	create_insn	(x=0X7854);
	op_stkvar	(x,	1);
	set_cmt	(0X7858,	"dest",	0);
	create_insn	(x=0X7858);
	op_stkvar	(x,	1);
	set_cmt	(0X785C,	"src",	0);
	set_cmt	(0X7860,	"n",	0);
	create_insn	(x=0X7870);
	op_stkvar	(x,	1);
	set_name	(0X7870,	"ExchgINT8UHLBit");
	create_insn	(x=0X7880);
	op_stkvar	(x,	1);
	create_insn	(x=0X7884);
	op_stkvar	(x,	1);
	create_insn	(x=0X7888);
	op_hex		(x,	1);
	create_insn	(x=0X78A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X78A4);
	op_stkvar	(x,	1);
	create_insn	(0X78B8);
	set_name	(0X78B8,	"PrintHex");
	create_insn	(x=0X78C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X78C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X78D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X78D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X78DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X78E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X78F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X78FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7900);
	op_stkvar	(x,	1);
	create_insn	(x=0X7904);
	op_stkvar	(x,	1);
	set_cmt	(0X7910,	"c",	0);
	create_dword	(x=0X7920);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7920,	"format");
	create_insn	(0X7924);
	set_name	(0X7924,	"GetCurrentTime");
	create_insn	(x=0X7930);
	op_stkvar	(x,	1);
	create_insn	(x=0X7934);
	op_stkvar	(x,	1);
	create_insn	(x=0X7944);
	op_stkvar	(x,	1);
	set_cmt	(0X794C,	"tv",	0);
	create_insn	(x=0X794C);
	op_stkvar	(x,	1);
	set_cmt	(0X7950,	"tz",	0);
	create_insn	(x=0X795C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7960);
	op_stkvar	(x,	1);
	create_insn	(0X7970);
	set_name	(0X7970,	"IsTimeOut");
	create_insn	(x=0X797C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7980);
	op_stkvar	(x,	1);
	create_insn	(x=0X7984);
	op_stkvar	(x,	1);
	create_insn	(x=0X7994);
	op_stkvar	(x,	1);
	create_insn	(x=0X799C);
	op_stkvar	(x,	1);
	set_cmt	(0X79A0,	"tv",	0);
	set_cmt	(0X79A4,	"tz",	0);
	create_insn	(x=0X79BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X79C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X79C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X79F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X79F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7A18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7A20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7A34);
	op_stkvar	(x,	1);
	create_dword	(0X7A44);
	create_insn	(0X7A48);
	set_name	(0X7A48,	"InitProcMsg");
	set_cmt	(0X7A54,	"key",	0);
	set_cmt	(0X7A58,	"msgflg",	0);
	create_insn	(x=0X7A64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7A6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7A80);
	op_stkvar	(x,	1);
	create_insn	(0X7A88);
	create_insn	(x=0X7A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7A90);
	op_stkvar	(x,	1);
	create_dword	(0X7AA0);
	set_name	(0X7AA0,	"key");
	create_dword	(0X7AA4);
	set_name	(0X7AA4,	"msgflg");
	create_dword	(x=0X7AA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7AAC);
	set_name	(0X7AAC,	"ProcMsgSend");
	create_insn	(x=0X7AB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7ABC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7AE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7AEC,	"msqid",	0);
	set_cmt	(0X7AF0,	"msgp",	0);
	create_insn	(x=0X7AF0);
	op_stkvar	(x,	1);
	set_cmt	(0X7AF4,	"msgsz",	0);
	set_cmt	(0X7AF8,	"msgflg",	0);
	create_insn	(x=0X7B10);
	op_stkvar	(x,	1);
	create_insn	(0X7B18);
	create_insn	(x=0X7B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7B20);
	op_stkvar	(x,	1);
	create_dword	(x=0X7B30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7B34);
	set_name	(0X7B34,	"ProcMsgRecv");
	create_insn	(x=0X7B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7B44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7B64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7B6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7B74);
	op_stkvar	(x,	1);
	set_cmt	(0X7B80,	"msgflg",	0);
	create_insn	(x=0X7B80);
	op_stkvar	(x,	1);
	set_cmt	(0X7B84,	"msqid",	0);
	set_cmt	(0X7B88,	"msgp",	0);
	create_insn	(x=0X7B88);
	op_stkvar	(x,	1);
	set_cmt	(0X7B8C,	"msgsz",	0);
	set_cmt	(0X7B90,	"msgtyp",	0);
	create_insn	(x=0X7BA8);
	op_stkvar	(x,	1);
	create_insn	(0X7BB0);
	create_insn	(x=0X7BB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7BB8);
	op_stkvar	(x,	1);
	create_dword	(x=0X7BC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7BCC);
	set_name	(0X7BCC,	"GetFileSize");
	create_insn	(x=0X7BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7BF4);
	op_stkvar	(x,	1);
	set_cmt	(0X7BF8,	"filename",	0);
	create_insn	(x=0X7BF8);
	op_stkvar	(x,	1);
	set_cmt	(0X7BFC,	"stat_buf",	0);
	create_insn	(x=0X7C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7C24);
	op_stkvar	(x,	1);
	create_insn	(0X7C34);
	set_name	(0X7C34,	"IfFileExist");
	create_insn	(x=0X7C40);
	op_stkvar	(x,	1);
	set_cmt	(0X7C44,	"pFile",	0);
	create_insn	(x=0X7C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7C5C);
	op_stkvar	(x,	1);
	create_insn	(0X7C64);
	create_insn	(x=0X7C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7C6C);
	op_stkvar	(x,	1);
	create_insn	(0X7C7C);
	set_name	(0X7C7C,	"GetBaseName");
	create_insn	(x=0X7C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7C9C);
	op_stkvar	(x,	1);
	set_cmt	(0X7CA4,	"s",	0);
	create_insn	(x=0X7CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D20);
	op_stkvar	(x,	1);
	create_insn	(0X7D30);
	set_name	(0X7D30,	"ReadFile");
	create_insn	(x=0X7D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D6C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D74,	"filename",	0);
	create_insn	(x=0X7D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D98);
	op_stkvar	(x,	1);
	set_cmt	(0X7DA0,	"ptr",	0);
	create_insn	(x=0X7DA0);
	op_stkvar	(x,	1);
	set_cmt	(0X7DA4,	"size",	0);
	create_insn	(x=0X7DA4);
	op_stkvar	(x,	1);
	set_cmt	(0X7DA8,	"n",	0);
	set_cmt	(0X7DAC,	"stream",	0);
	create_insn	(x=0X7DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7DC4);
	op_stkvar	(x,	1);
	set_cmt	(0X7DC8,	"stream",	0);
	create_insn	(x=0X7DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7DD8);
	op_stkvar	(x,	1);
	create_dword	(x=0X7DE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7DE8,	"modes");
	create_insn	(0X7DEC);
	set_name	(0X7DEC,	"WriteFile_No_Sync");
	create_insn	(x=0X7DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7E0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7E28);
	op_stkvar	(x,	1);
	set_cmt	(0X7E30,	"filename",	0);
	create_insn	(x=0X7E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7E34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7E54);
	op_stkvar	(x,	1);
	set_cmt	(0X7E5C,	"ptr",	0);
	create_insn	(x=0X7E5C);
	op_stkvar	(x,	1);
	set_cmt	(0X7E60,	"size",	0);
	create_insn	(x=0X7E60);
	op_stkvar	(x,	1);
	set_cmt	(0X7E64,	"n",	0);
	set_cmt	(0X7E68,	"s",	0);
	create_insn	(x=0X7E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7E80);
	op_stkvar	(x,	1);
	set_cmt	(0X7E84,	"stream",	0);
	create_insn	(x=0X7E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7E8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7E90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7E94);
	op_stkvar	(x,	1);
	create_dword	(x=0X7EA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7EA8);
	set_name	(0X7EA8,	"WriteFile");
	create_insn	(x=0X7EB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7ED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7EE4);
	op_stkvar	(x,	1);
	set_cmt	(0X7EEC,	"filename",	0);
	create_insn	(x=0X7EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7EF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7F10);
	op_stkvar	(x,	1);
	set_cmt	(0X7F18,	"ptr",	0);
	create_insn	(x=0X7F18);
	op_stkvar	(x,	1);
	set_cmt	(0X7F1C,	"size",	0);
	create_insn	(x=0X7F1C);
	op_stkvar	(x,	1);
	set_cmt	(0X7F20,	"n",	0);
	set_cmt	(0X7F24,	"s",	0);
	create_insn	(x=0X7F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7F3C);
	op_stkvar	(x,	1);
	set_cmt	(0X7F40,	"stream",	0);
	create_insn	(x=0X7F40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7F48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7F58);
	op_stkvar	(x,	1);
	create_dword	(x=0X7F68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7F6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7F6C,	"command");
	create_insn	(0X7F70);
	set_name	(0X7F70,	"P2PSocket_Create");
	create_insn	(x=0X7F80);
	op_stkvar	(x,	1);
	set_cmt	(0X7F84,	"size",	0);
	create_insn	(x=0X7F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7FA4);
	op_stkvar	(x,	1);
	set_cmt	(0X7FAC,	"s",	0);
	create_insn	(x=0X7FAC);
	op_stkvar	(x,	1);
	set_cmt	(0X7FB0,	"c",	0);
	set_cmt	(0X7FB4,	"n",	0);
	set_cmt	(0X7FBC,	"domain",	0);
	set_cmt	(0X7FC0,	"type",	0);
	set_cmt	(0X7FC4,	"protocol",	0);
	create_insn	(x=0X7FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7FE8);
	op_stkvar	(x,	1);
	set_cmt	(0X7FF0,	"fd",	0);
	set_cmt	(0X7FF4,	"cmd",	0);
	create_insn	(x=0X8004);
	op_stkvar	(x,	1);
	create_insn	(x=0X8008);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014);
	op_stkvar	(x,	1);
	create_insn	(x=0X8018);
	op_hex		(x,	1);
	create_insn	(x=0X801C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8020);
	op_stkvar	(x,	1);
	set_cmt	(0X8028,	"fd",	0);
	set_cmt	(0X802C,	"cmd",	0);
	create_insn	(x=0X8030);
	op_stkvar	(x,	1);
	create_insn	(x=0X8044);
	op_stkvar	(x,	1);
	set_cmt	(0X8048,	"s",	0);
	set_cmt	(0X804C,	"n",	0);
	create_insn	(x=0X8058);
	op_stkvar	(x,	1);
	set_cmt	(0X805C,	"hostlong",	0);
	create_insn	(x=0X8068);
	op_stkvar	(x,	1);
	create_insn	(x=0X806C);
	op_stkvar	(x,	1);
	set_cmt	(0X8070,	"hostshort",	0);
	create_insn	(x=0X807C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8080);
	op_stkvar	(x,	1);
	create_insn	(x=0X8088);
	op_stkvar	(x,	1);
	set_cmt	(0X808C,	"fd",	0);
	set_cmt	(0X8090,	"addr",	0);
	set_cmt	(0X8094,	"len",	0);
	create_insn	(x=0X80A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X80AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80B4);
	op_stkvar	(x,	1);
	set_cmt	(0X80BC,	"fd",	0);
	set_cmt	(0X80C4,	"ptr",	0);
	create_insn	(x=0X80C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80D4);
	op_stkvar	(x,	1);
	create_insn	(0X80E4);
	set_name	(0X80E4,	"P2PSocket_Delete");
	create_insn	(x=0X80F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X8104);
	op_stkvar	(x,	1);
	create_insn	(x=0X810C);
	op_stkvar	(x,	1);
	create_insn	(x=0X811C);
	op_stkvar	(x,	1);
	set_cmt	(0X8124,	"fd",	0);
	set_cmt	(0X812C,	"ptr",	0);
	create_insn	(x=0X812C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8138);
	op_stkvar	(x,	1);
	create_insn	(x=0X813C);
	op_stkvar	(x,	1);
	create_insn	(0X814C);
	set_name	(0X814C,	"P2PSocket_Rec");
	create_insn	(x=0X8158);
	op_stkvar	(x,	1);
	create_insn	(x=0X815C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8160);
	op_stkvar	(x,	1);
	create_insn	(x=0X8164);
	op_stkvar	(x,	1);
	create_insn	(x=0X8168);
	op_stkvar	(x,	1);
	create_insn	(x=0X8178);
	op_stkvar	(x,	1);
	create_insn	(x=0X8180);
	op_stkvar	(x,	1);
	set_cmt	(0X8184,	"s",	0);
	set_cmt	(0X8188,	"n",	0);
	create_insn	(x=0X8194);
	op_stkvar	(x,	1);
	create_insn	(x=0X8198);
	op_stkvar	(x,	1);
	create_insn	(x=0X81A0);
	op_stkvar	(x,	1);
	set_cmt	(0X81A4,	"addr",	0);
	create_insn	(x=0X81A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X81A8);
	op_stkvar	(x,	1);
	set_cmt	(0X81AC,	"addr_len",	0);
	create_insn	(x=0X81AC);
	op_stkvar	(x,	1);
	set_cmt	(0X81B0,	"fd",	0);
	set_cmt	(0X81B4,	"buf",	0);
	create_insn	(x=0X81B4);
	op_stkvar	(x,	1);
	set_cmt	(0X81B8,	"n",	0);
	create_insn	(x=0X81B8);
	op_stkvar	(x,	1);
	set_cmt	(0X81BC,	"flags",	0);
	create_insn	(x=0X81C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X81CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X81DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X81E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X81F0);
	op_stkvar	(x,	1);
	set_cmt	(0X81F4,	"netlong",	0);
	create_insn	(x=0X8200);
	op_stkvar	(x,	1);
	create_insn	(x=0X8208);
	op_stkvar	(x,	1);
	create_insn	(x=0X8214);
	op_stkvar	(x,	1);
	set_cmt	(0X8218,	"netshort",	0);
	create_insn	(x=0X8228);
	op_stkvar	(x,	1);
	create_insn	(x=0X8230);
	op_stkvar	(x,	1);
	create_insn	(x=0X8234);
	op_stkvar	(x,	1);
	create_insn	(x=0X8238);
	op_stkvar	(x,	1);
	create_insn	(0X8248);
	set_name	(0X8248,	"P2PSocket_Send");
	create_insn	(x=0X8254);
	op_stkvar	(x,	1);
	create_insn	(x=0X8258);
	op_stkvar	(x,	1);
	create_insn	(x=0X825C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8260);
	op_stkvar	(x,	1);
	create_insn	(x=0X8264);
	op_stkvar	(x,	1);
	set_cmt	(0X8268,	"s",	0);
	set_cmt	(0X826C,	"n",	0);
	create_insn	(x=0X8278);
	op_stkvar	(x,	1);
	set_cmt	(0X827C,	"hostlong",	0);
	create_insn	(x=0X827C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8288);
	op_stkvar	(x,	1);
	create_insn	(x=0X828C);
	op_stkvar	(x,	1);
	set_cmt	(0X8290,	"hostshort",	0);
	create_insn	(x=0X829C);
	op_stkvar	(x,	1);
	create_insn	(x=0X82A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X82A8);
	op_stkvar	(x,	1);
	set_cmt	(0X82AC,	"addr",	0);
	create_insn	(x=0X82AC);
	op_stkvar	(x,	1);
	set_cmt	(0X82B4,	"addr_len",	0);
	create_insn	(x=0X82B4);
	op_stkvar	(x,	1);
	set_cmt	(0X82B8,	"fd",	0);
	set_cmt	(0X82BC,	"buf",	0);
	create_insn	(x=0X82BC);
	op_stkvar	(x,	1);
	set_cmt	(0X82C0,	"n",	0);
	create_insn	(x=0X82C0);
	op_stkvar	(x,	1);
	set_cmt	(0X82C4,	"flags",	0);
	create_insn	(0X82DC);
	set_name	(0X82DC,	"Kernel_Feed");
	create_insn	(x=0X82E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X82EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X82FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X8304,	"fd",	0);
	set_cmt	(0X8308,	"request",	0);
	create_insn	(x=0X8314);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X831C,	"status",	0);
	create_dword	(x=0X8324);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8328);
	set_name	(0X8328,	"request");
	create_dword	(x=0X832C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X832C,	"s");
	create_insn	(0X8330);
	set_name	(0X8330,	"Watchdog_Init");
	create_insn	(x=0X833C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8340);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X8344,	"oflag",	0);
	create_insn	(x=0X8350);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8358);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8368);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8370);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X8378,	"fd",	0);
	set_cmt	(0X837C,	"cmd",	0);
	create_insn	(x=0X8388);
	op_hex		(x,	1);
	set_cmt	(0X838C,	"fd",	0);
	set_cmt	(0X8390,	"cmd",	0);
	create_insn	(x=0X839C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X83A4);
	op_stkvar	(x,	1);
	set_cmt	(0X83A8,	"fd",	0);
	set_cmt	(0X83AC,	"request",	0);
	create_insn	(x=0X83B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X83BC);
	op_stkvar	(x,	1);
	set_cmt	(0X83C0,	"fd",	0);
	set_cmt	(0X83C4,	"request",	0);
	create_insn	(x=0X83D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X83DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X83E8,	"sig",	0);
	set_cmt	(0X83EC,	"handler",	0);
	create_insn	(x=0X83EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X83F4,	"sig",	0);
	set_cmt	(0X83F8,	"handler",	0);
	create_insn	(x=0X83F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8408);
	op_stkvar	(x,	1);
	create_insn	(x=0X8410);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X8418,	"fd",	0);
	create_insn	(x=0X8424);
	op_stkvar	(x,	1);
	create_insn	(x=0X8428);
	op_stkvar	(x,	1);
	create_dword	(x=0X8438);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X843C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8440);
	create_dword	(0X8444);
	create_dword	(x=0X8448);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X844C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X844C,	"handler");
	create_insn	(0X8450);
	set_name	(0X8450,	"Watchdog_Feed");
	create_insn	(x=0X845C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8470);
	op_stkvar	(x,	1);
	create_insn	(x=0X8478);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X8480,	"fd",	0);
	set_cmt	(0X8484,	"request",	0);
	create_insn	(x=0X84A0);
	op_stkvar	(x,	1);
	create_insn	(0X84A8);
	create_insn	(x=0X84AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X84B0);
	op_stkvar	(x,	1);
	create_dword	(x=0X84C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X84C4);
	create_insn	(0X84C8);
	set_name	(0X84C8,	"Watchdog_Delete");
	create_insn	(x=0X84D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X84E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X84E8,	"fd",	0);
	set_cmt	(0X84EC,	"request",	0);
	create_insn	(x=0X84F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X8500,	"fd",	0);
	create_insn	(x=0X8508);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X8520);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8524);
	create_insn	(0X8528);
	set_name	(0X8528,	"Update_Parse_App_Version");
	create_insn	(x=0X8534);
	op_stkvar	(x,	1);
	create_insn	(x=0X853C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8540);
	op_stkvar	(x,	1);
	create_insn	(x=0X8550);
	op_stkvar	(x,	1);
	create_insn	(x=0X8558);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X855C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8568);
	op_stkvar	(x,	1);
	create_insn	(x=0X856C);
	op_stkvar	(x,	1);
	create_insn	(x=0X857C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8584);
	op_stkvar	(x,	1);
	set_cmt	(0X8588,	"s",	0);
	set_cmt	(0X858C,	"n",	0);
	set_cmt	(0X8590,	"stream",	0);
	create_insn	(x=0X8590);
	op_stkvar	(x,	1);
	create_insn	(x=0X85A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X85B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X85B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X85B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X85BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X85C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X85CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X85D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X85D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X85DC);
	op_stkvar	(x,	1);
	set_cmt	(0X85E0,	"s",	0);
	create_insn	(x=0X85E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8604);
	op_stkvar	(x,	1);
	create_insn	(x=0X860C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8614);
	op_stkvar	(x,	1);
	create_insn	(x=0X8618);
	op_stkvar	(x,	1);
	create_insn	(x=0X8620);
	op_stkvar	(x,	1);
	create_insn	(x=0X862C);
	op_stkvar	(x,	1);
	create_insn	(x=0X863C);
	op_hex		(x,	1);
	create_insn	(x=0X8644);
	op_stkvar	(x,	1);
	create_insn	(x=0X864C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8650);
	op_stkvar	(x,	1);
	set_cmt	(0X865C,	"stream",	0);
	create_insn	(x=0X865C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8664);
	op_stkvar	(x,	1);
	create_insn	(x=0X8668);
	op_stkvar	(x,	1);
	create_insn	(x=0X866C);
	op_stkvar	(x,	1);
	create_dword	(x=0X867C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X867C,	"filename");
	create_dword	(x=0X8680);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8684);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8688);
	set_name	(0X8688,	"Update_Parse_68013_Version");
	create_insn	(x=0X8694);
	op_stkvar	(x,	1);
	create_insn	(x=0X8698);
	op_stkvar	(x,	1);
	create_insn	(x=0X869C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X86A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X86AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X86B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X86C0);
	op_stkvar	(x,	1);
	create_insn	(0X86C8);
	create_insn	(x=0X86CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X86D4);
	op_stkvar	(x,	1);
	set_cmt	(0X86D8,	"haystack",	0);
	create_insn	(x=0X86DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X86E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X86EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X86F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8700);
	op_stkvar	(x,	1);
	create_insn	(x=0X8704);
	op_stkvar	(x,	1);
	set_cmt	(0X8708,	"s",	0);
	create_insn	(x=0X8708);
	op_stkvar	(x,	1);
	create_insn	(x=0X870C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8724);
	op_stkvar	(x,	1);
	create_insn	(x=0X8738);
	op_stkvar	(x,	1);
	create_insn	(0X8740);
	create_insn	(x=0X8744);
	op_stkvar	(x,	1);
	create_insn	(x=0X8748);
	op_stkvar	(x,	1);
	create_insn	(x=0X8754);
	op_stkvar	(x,	1);
	set_cmt	(0X8758,	"haystack",	0);
	create_insn	(x=0X875C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8770);
	op_stkvar	(x,	1);
	create_insn	(x=0X8780);
	op_stkvar	(x,	1);
	create_insn	(x=0X878C);
	op_stkvar	(x,	1);
	set_cmt	(0X8790,	"haystack",	0);
	create_insn	(x=0X8794);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X87A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X87A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X87B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X87B8);
	op_stkvar	(x,	1);
	set_cmt	(0X87BC,	"s",	0);
	create_insn	(x=0X87BC);
	op_stkvar	(x,	1);
	set_cmt	(0X87C0,	"c",	0);
	create_insn	(x=0X87CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X87D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X87DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X87E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X87E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X87F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X87F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8800);
	op_stkvar	(x,	1);
	create_insn	(x=0X8804);
	op_stkvar	(x,	1);
	create_insn	(x=0X8808);
	op_stkvar	(x,	1);
	set_cmt	(0X880C,	"s",	0);
	create_insn	(x=0X880C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8810);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X882C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8834);
	op_stkvar	(x,	1);
	set_cmt	(0X8838,	"s",	0);
	set_cmt	(0X883C,	"n",	0);
	set_cmt	(0X8840,	"stream",	0);
	create_insn	(x=0X8840);
	op_stkvar	(x,	1);
	create_insn	(x=0X8854);
	op_stkvar	(x,	1);
	create_insn	(x=0X8860);
	op_stkvar	(x,	1);
	create_insn	(x=0X8864);
	op_stkvar	(x,	1);
	create_insn	(x=0X886C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8874);
	op_stkvar	(x,	1);
	create_insn	(x=0X8878);
	op_stkvar	(x,	1);
	create_insn	(x=0X8880);
	op_stkvar	(x,	1);
	create_insn	(x=0X888C);
	op_stkvar	(x,	1);
	create_insn	(x=0X889C);
	op_hex		(x,	1);
	create_insn	(x=0X88A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X88AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X88B0);
	op_stkvar	(x,	1);
	set_cmt	(0X88BC,	"stream",	0);
	create_insn	(x=0X88BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X88C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X88C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X88CC);
	op_stkvar	(x,	1);
	create_dword	(x=0X88DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X88E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X88E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X88E4,	"needle");
	create_dword	(x=0X88E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X88EC);
	create_dword	(x=0X88F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X88F4);
	create_dword	(x=0X88F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X88FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8900);
	set_name	(0X8900,	"CalFileMD5");
	create_insn	(x=0X8910);
	op_stkvar	(x,	1);
	create_insn	(x=0X8914);
	op_stkvar	(x,	1);
	set_cmt	(0X8918,	"file",	0);
	create_insn	(x=0X8918);
	op_stkvar	(x,	1);
	set_cmt	(0X891C,	"oflag",	0);
	create_insn	(x=0X8928);
	op_stkvar	(x,	1);
	create_insn	(x=0X892C);
	op_stkvar	(x,	1);
	create_insn	(x=0X893C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8944);
	op_stkvar	(x,	1);
	create_insn	(x=0X895C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8960);
	op_stkvar	(x,	1);
	create_insn	(x=0X896C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8988);
	op_stkvar	(x,	1);
	set_cmt	(0X8994,	"fd",	0);
	create_insn	(x=0X8994);
	op_stkvar	(x,	1);
	set_cmt	(0X8998,	"buf",	0);
	set_cmt	(0X899C,	"nbytes",	0);
	create_insn	(x=0X89A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X89AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X89B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X89C4);
	op_stkvar	(x,	1);
	set_cmt	(0X89D0,	"fd",	0);
	create_insn	(x=0X89D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X89DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X89E0);
	op_stkvar	(x,	1);
	create_insn	(0X89F0);
	set_name	(0X89F0,	"CalMD5");
	create_insn	(x=0X89FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X8A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X8A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X8A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X8A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8A20);
	op_stkvar	(x,	1);
	create_insn	(x=0X8A28);
	op_stkvar	(x,	1);
	create_insn	(x=0X8A2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8A48);
	op_stkvar	(x,	1);
	set_name	(0X8A48,	"DJI_ProStruct_Init");
	create_insn	(x=0X8A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X8A58);
	op_stkvar	(x,	1);
	create_insn	(x=0X8A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X8A78);
	op_stkvar	(x,	1);
	create_insn	(x=0X8A80);
	op_stkvar	(x,	1);
	create_insn	(x=0X8A84);
	op_stkvar	(x,	1);
	create_insn	(x=0X8A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8A94);
	op_stkvar	(x,	1);
	create_insn	(x=0X8AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8AA4);
	op_stkvar	(x,	1);
	create_insn	(0X8AB8);
	set_name	(0X8AB8,	"SetHardwareVersion");
	create_insn	(x=0X8AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X8AC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X8ACC,	"pData",	0);
	create_insn	(x=0X8ACC);
	op_stkvar	(x,	1);
	set_cmt	(0X8AD0,	"ulLen",	0);
	create_dword	(x=0X8AE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X8AE8,	"pcFileName");
	create_insn	(0X8AEC);
	set_name	(0X8AEC,	"GetHardwareVersion");
	create_insn	(x=0X8AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8AFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X8B00,	"pData",	0);
	create_insn	(x=0X8B00);
	op_stkvar	(x,	1);
	set_cmt	(0X8B04,	"ulLen",	0);
	create_insn	(x=0X8B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X8B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X8B24);
	op_stkvar	(x,	1);
	create_dword	(x=0X8B34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8B38);
	set_name	(0X8B38,	"Set68013HardwareVersion");
	create_insn	(x=0X8B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X8B48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X8B4C,	"pData",	0);
	create_insn	(x=0X8B4C);
	op_stkvar	(x,	1);
	set_cmt	(0X8B50,	"ulLen",	0);
	create_dword	(x=0X8B68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8B6C);
	set_name	(0X8B6C,	"Get68013HardwareVersion");
	create_insn	(x=0X8B78);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_2(void) {
        auto x;
#define id x

	create_insn	(x=0X8B7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X8B80,	"pData",	0);
	create_insn	(x=0X8B80);
	op_stkvar	(x,	1);
	set_cmt	(0X8B84,	"ulLen",	0);
	create_insn	(x=0X8B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X8B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X8BA4);
	op_stkvar	(x,	1);
	create_dword	(x=0X8BB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8BB8);
	set_name	(0X8BB8,	"Update_Fill_Version");
	create_insn	(x=0X8BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X8BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8BCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8BE4);
	op_stkvar	(x,	1);
	set_cmt	(0X8BE8,	"pVersion",	0);
	create_insn	(x=0X8BE8);
	op_stkvar	(x,	1);
	set_cmt	(0X8BFC,	"s",	0);
	create_insn	(x=0X8BFC);
	op_stkvar	(x,	1);
	set_cmt	(0X8C00,	"c",	0);
	set_cmt	(0X8C04,	"n",	0);
	create_insn	(x=0X8C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8C14);
	op_stkvar	(x,	1);
	set_cmt	(0X8C18,	"pOut",	0);
	create_insn	(x=0X8C18);
	op_stkvar	(x,	1);
	set_cmt	(0X8C1C,	"ulData",	0);
	create_insn	(x=0X8C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X8C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8C30);
	op_stkvar	(x,	1);
	set_cmt	(0X8C34,	"pulVersion",	0);
	create_insn	(x=0X8C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8C50);
	op_stkvar	(x,	1);
	set_cmt	(0X8C54,	"pOut",	0);
	create_insn	(x=0X8C54);
	op_stkvar	(x,	1);
	set_cmt	(0X8C58,	"ulData",	0);
	create_insn	(x=0X8C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X8C68);
	op_stkvar	(x,	1);
	set_cmt	(0X8C6C,	"pOut",	0);
	create_insn	(x=0X8C6C);
	op_stkvar	(x,	1);
	set_cmt	(0X8C70,	"ulData",	0);
	create_insn	(x=0X8C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X8C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X8C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X8C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X8C98);
	op_stkvar	(x,	1);
	create_insn	(x=0X8C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8CA0);
	op_stkvar	(x,	1);
	create_dword	(0X8CB4);
	set_name	(0X8CB4,	"ulData");
	create_insn	(0X8CB8);
	set_name	(0X8CB8,	"Update_Fill_68013_Version");
	create_insn	(x=0X8CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X8CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8CE4);
	op_stkvar	(x,	1);
	set_cmt	(0X8CE8,	"pVersion",	0);
	create_insn	(x=0X8CE8);
	op_stkvar	(x,	1);
	set_cmt	(0X8CFC,	"s",	0);
	create_insn	(x=0X8CFC);
	op_stkvar	(x,	1);
	set_cmt	(0X8D00,	"c",	0);
	set_cmt	(0X8D04,	"n",	0);
	create_insn	(x=0X8D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X8D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X8D1C);
	op_stkvar	(x,	1);
	set_cmt	(0X8D20,	"pulLoaderVersion",	0);
	set_cmt	(0X8D24,	"pulAppVersion",	0);
	create_insn	(x=0X8D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X8D48);
	op_stkvar	(x,	1);
	set_cmt	(0X8D4C,	"pOut",	0);
	create_insn	(x=0X8D4C);
	op_stkvar	(x,	1);
	set_cmt	(0X8D50,	"ulData",	0);
	create_insn	(x=0X8D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X8D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X8D64);
	op_stkvar	(x,	1);
	set_cmt	(0X8D68,	"pOut",	0);
	create_insn	(x=0X8D68);
	op_stkvar	(x,	1);
	set_cmt	(0X8D6C,	"ulData",	0);
	create_insn	(x=0X8D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X8D7C);
	op_stkvar	(x,	1);
	set_cmt	(0X8D80,	"pOut",	0);
	create_insn	(x=0X8D80);
	op_stkvar	(x,	1);
	set_cmt	(0X8D84,	"ulData",	0);
	create_insn	(x=0X8D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8D94);
	op_stkvar	(x,	1);
	create_insn	(x=0X8D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X8DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X8DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8DB4);
	op_stkvar	(x,	1);
	create_dword	(0X8DC8);
	create_insn	(0X8DCC);
	set_name	(0X8DCC,	"LockFile");
	create_insn	(x=0X8DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8DE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8DFC);
	op_stkvar	(x,	1);
	set_cmt	(0X8E00,	"fd",	0);
	create_insn	(x=0X8E00);
	op_stkvar	(x,	1);
	set_cmt	(0X8E04,	"cmd",	0);
	create_insn	(0X8E20);
	set_name	(0X8E20,	"already_running");
	create_insn	(x=0X8E2C);
	op_stkvar	(x,	1);
	set_cmt	(0X8E30,	"file",	0);
	create_insn	(x=0X8E30);
	op_stkvar	(x,	1);
	set_cmt	(0X8E34,	"oflag",	0);
	create_insn	(x=0X8E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X8E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X8E58);
	op_stkvar	(x,	1);
	set_cmt	(0X8E60,	"fd",	0);
	create_insn	(x=0X8E60);
	op_stkvar	(x,	1);
	set_cmt	(0X8E64,	"cmd",	0);
	create_insn	(x=0X8E70);
	op_hex		(x,	1);
	set_cmt	(0X8E74,	"fd",	0);
	create_insn	(x=0X8E74);
	op_stkvar	(x,	1);
	set_cmt	(0X8E78,	"cmd",	0);
	set_cmt	(0X8E84,	"fd",	0);
	create_insn	(x=0X8E84);
	op_stkvar	(x,	1);
	set_cmt	(0X8E98,	"fd",	0);
	create_insn	(x=0X8E98);
	op_stkvar	(x,	1);
	create_insn	(x=0X8EA4);
	op_stkvar	(x,	1);
	set_cmt	(0X8EAC,	"fd",	0);
	create_insn	(x=0X8EAC);
	op_stkvar	(x,	1);
	set_cmt	(0X8EB0,	"length",	0);
	create_insn	(x=0X8EC0);
	op_stkvar	(x,	1);
	set_cmt	(0X8EC4,	"s",	0);
	create_insn	(x=0X8EC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8ED0);
	op_stkvar	(x,	1);
	set_cmt	(0X8ED4,	"s",	0);
	set_cmt	(0X8EE0,	"n",	0);
	create_insn	(x=0X8EE4);
	op_stkvar	(x,	1);
	set_cmt	(0X8EE8,	"fd",	0);
	create_insn	(x=0X8EE8);
	op_stkvar	(x,	1);
	set_cmt	(0X8EEC,	"buf",	0);
	create_insn	(x=0X8EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8EFC);
	op_stkvar	(x,	1);
	create_dword	(x=0X8F0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8F10);
	set_name	(0X8F10,	"getTickCount");
	create_insn	(x=0X8F1C);
	op_stkvar	(x,	1);
	set_cmt	(0X8F20,	"clock_id",	0);
	set_cmt	(0X8F24,	"tp",	0);
	create_insn	(x=0X8F2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8F4C);
	op_stkvar	(x,	1);
	create_dword	(0X8F74);
	create_insn	(0X8F78);
	set_name	(0X8F78,	"ThreadSignal_MaskPipe");
	create_insn	(x=0X8F84);
	op_stkvar	(x,	1);
	set_cmt	(0X8F88,	"set",	0);
	create_insn	(x=0X8F90);
	op_stkvar	(x,	1);
	set_cmt	(0X8F94,	"set",	0);
	set_cmt	(0X8F98,	"signo",	0);
	create_insn	(x=0X8FA0);
	op_stkvar	(x,	1);
	set_cmt	(0X8FA4,	"how",	0);
	set_cmt	(0X8FA8,	"newmask",	0);
	set_cmt	(0X8FAC,	"oldmask",	0);
	create_insn	(x=0X8FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8FC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8FD4);
	op_stkvar	(x,	1);
	create_insn	(0X8FDC);
	create_insn	(x=0X8FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8FE4);
	op_stkvar	(x,	1);
	create_dword	(x=0X8FF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8FF8);
	set_name	(0X8FF8,	"GetRandomData");
	create_insn	(x=0X9004);
	op_stkvar	(x,	1);
	create_insn	(x=0X9008);
	op_stkvar	(x,	1);
	set_cmt	(0X900C,	"timer",	0);
	set_cmt	(0X9018,	"seed",	0);
	create_insn	(x=0X9020);
	op_stkvar	(x,	1);
	create_insn	(x=0X9024);
	op_stkvar	(x,	1);
	create_insn	(x=0X9028);
	op_stkvar	(x,	1);
	create_insn	(x=0X902C);
	op_stkvar	(x,	1);
	create_insn	(0X9034);
	create_insn	(x=0X903C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9040);
	op_stkvar	(x,	1);
	create_insn	(x=0X9050);
	op_stkvar	(x,	1);
	create_insn	(x=0X9058);
	op_stkvar	(x,	1);
	create_insn	(x=0X905C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9060);
	op_stkvar	(x,	1);
	set_cmt	(0X9064,	"dest",	0);
	create_insn	(x=0X9064);
	op_stkvar	(x,	1);
	set_cmt	(0X9068,	"src",	0);
	set_cmt	(0X906C,	"n",	0);
	create_insn	(x=0X906C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9074);
	op_stkvar	(x,	1);
	create_insn	(x=0X9078);
	op_stkvar	(x,	1);
	create_insn	(x=0X9080);
	op_stkvar	(x,	1);
	create_insn	(x=0X9084);
	op_stkvar	(x,	1);
	create_insn	(x=0X9088);
	op_stkvar	(x,	1);
	create_insn	(x=0X9090);
	op_stkvar	(x,	1);
	create_insn	(x=0X9094);
	op_stkvar	(x,	1);
	create_insn	(0X90B0);
	set_name	(0X90B0,	"CalMac");
	create_insn	(x=0X90BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X90C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X90C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X90C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X90CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X90D0);
	op_stkvar	(x,	1);
	set_cmt	(0X90D4,	"dest",	0);
	create_insn	(x=0X90D4);
	op_stkvar	(x,	1);
	set_cmt	(0X90D8,	"src",	0);
	create_insn	(x=0X90D8);
	op_stkvar	(x,	1);
	set_cmt	(0X90DC,	"n",	0);
	create_insn	(x=0X90E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X90EC);
	op_stkvar	(x,	1);
	set_cmt	(0X90F0,	"dest",	0);
	create_insn	(x=0X90F0);
	op_stkvar	(x,	1);
	set_cmt	(0X90F4,	"src",	0);
	create_insn	(x=0X90F4);
	op_stkvar	(x,	1);
	set_cmt	(0X90F8,	"n",	0);
	create_insn	(x=0X9100);
	op_stkvar	(x,	1);
	create_insn	(x=0X9108);
	op_stkvar	(x,	1);
	create_insn	(x=0X910C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9118);
	op_stkvar	(x,	1);
	create_insn	(x=0X9120);
	op_stkvar	(x,	1);
	create_insn	(x=0X9124);
	op_stkvar	(x,	1);
	create_insn	(x=0X9130);
	op_stkvar	(x,	1);
	create_insn	(x=0X9138);
	op_stkvar	(x,	1);
	create_insn	(x=0X913C);
	op_stkvar	(x,	1);
	set_cmt	(0X9140,	"pOut",	0);
	create_insn	(x=0X9140);
	op_stkvar	(x,	1);
	set_cmt	(0X9144,	"usData",	0);
	create_insn	(x=0X914C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9154);
	op_stkvar	(x,	1);
	set_cmt	(0X9158,	"s",	0);
	create_insn	(x=0X9158);
	op_stkvar	(x,	1);
	set_cmt	(0X915C,	"c",	0);
	set_cmt	(0X9160,	"n",	0);
	create_insn	(x=0X9168);
	op_stkvar	(x,	1);
	create_insn	(x=0X9170);
	op_stkvar	(x,	1);
	set_cmt	(0X9174,	"s",	0);
	create_insn	(x=0X9174);
	op_stkvar	(x,	1);
	set_cmt	(0X9178,	"c",	0);
	set_cmt	(0X917C,	"n",	0);
	create_insn	(x=0X9184);
	op_stkvar	(x,	1);
	create_insn	(x=0X918C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9190);
	op_stkvar	(x,	1);
	create_insn	(x=0X919C);
	op_stkvar	(x,	1);
	create_insn	(x=0X91A4);
	op_stkvar	(x,	1);
	set_cmt	(0X91A8,	"s",	0);
	create_insn	(x=0X91A8);
	op_stkvar	(x,	1);
	set_cmt	(0X91AC,	"c",	0);
	set_cmt	(0X91B0,	"n",	0);
	create_insn	(x=0X91B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X91C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X91C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X91D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X91D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X91DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X91E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X91F0);
	op_stkvar	(x,	1);
	set_cmt	(0X91F4,	"s",	0);
	create_insn	(x=0X91F4);
	op_stkvar	(x,	1);
	set_cmt	(0X91F8,	"c",	0);
	set_cmt	(0X91FC,	"n",	0);
	create_insn	(x=0X9204);
	op_stkvar	(x,	1);
	create_insn	(x=0X920C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9210);
	op_stkvar	(x,	1);
	set_cmt	(0X9214,	"message",	0);
	set_cmt	(0X9218,	"len",	0);
	set_cmt	(0X921C,	"digest",	0);
	create_insn	(x=0X921C);
	op_stkvar	(x,	1);
	create_insn	(0X9234);
	set_name	(0X9234,	"AesEncrypt");
	create_insn	(x=0X9240);
	op_stkvar	(x,	1);
	create_insn	(x=0X9244);
	op_stkvar	(x,	1);
	create_insn	(x=0X9248);
	op_stkvar	(x,	1);
	create_insn	(x=0X924C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9250);
	op_stkvar	(x,	1);
	create_insn	(x=0X925C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9268);
	op_stkvar	(x,	1);
	create_insn	(x=0X9278);
	op_stkvar	(x,	1);
	create_insn	(x=0X9280);
	op_stkvar	(x,	1);
	create_insn	(x=0X9284);
	op_stkvar	(x,	1);
	create_insn	(x=0X9294);
	op_stkvar	(x,	1);
	set_cmt	(0X9298,	"s",	0);
	set_cmt	(0X929C,	"c",	0);
	set_cmt	(0X92A0,	"n",	0);
	create_insn	(x=0X92A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X92AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X92B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X92B8);
	op_stkvar	(x,	1);
	set_cmt	(0X92BC,	"dest",	0);
	create_insn	(x=0X92BC);
	op_stkvar	(x,	1);
	set_cmt	(0X92C0,	"int",	0);
	create_insn	(x=0X92C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X92C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X92D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X92D8);
	op_stkvar	(x,	1);
	create_insn	(0X92E8);
	set_name	(0X92E8,	"AesDecrypt");
	create_insn	(x=0X92F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X92F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X92FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X9300);
	op_stkvar	(x,	1);
	create_insn	(x=0X9304);
	op_stkvar	(x,	1);
	create_insn	(x=0X9310);
	op_stkvar	(x,	1);
	create_insn	(x=0X931C);
	op_stkvar	(x,	1);
	create_insn	(x=0X932C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9334);
	op_stkvar	(x,	1);
	create_insn	(x=0X9338);
	op_stkvar	(x,	1);
	create_insn	(x=0X9348);
	op_stkvar	(x,	1);
	set_cmt	(0X934C,	"s",	0);
	set_cmt	(0X9350,	"c",	0);
	set_cmt	(0X9354,	"n",	0);
	create_insn	(x=0X935C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9360);
	op_stkvar	(x,	1);
	create_insn	(x=0X9364);
	op_stkvar	(x,	1);
	create_insn	(x=0X936C);
	op_stkvar	(x,	1);
	set_cmt	(0X9370,	"dest",	0);
	create_insn	(x=0X9370);
	op_stkvar	(x,	1);
	set_cmt	(0X9374,	"int",	0);
	create_insn	(x=0X9374);
	op_stkvar	(x,	1);
	create_insn	(x=0X9378);
	op_stkvar	(x,	1);
	create_insn	(x=0X9388);
	op_stkvar	(x,	1);
	create_insn	(x=0X938C);
	op_stkvar	(x,	1);
	create_insn	(0X939C);
	set_name	(0X939C,	"AesEncryptToFile");
	create_insn	(x=0X93A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X93AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X93B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X93B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X93C4);
	op_stkvar	(x,	1);
	set_cmt	(0X93C8,	"size",	0);
	create_insn	(x=0X93C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X93D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X93D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X93E8);
	op_stkvar	(x,	1);
	set_cmt	(0X93F0,	"pOut",	0);
	create_insn	(x=0X93F0);
	op_stkvar	(x,	1);
	set_cmt	(0X93F4,	"pIn",	0);
	create_insn	(x=0X93F4);
	op_stkvar	(x,	1);
	set_cmt	(0X93F8,	"ulLen",	0);
	create_insn	(x=0X93F8);
	op_stkvar	(x,	1);
	set_cmt	(0X93FC,	"pKey",	0);
	create_insn	(x=0X93FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X9404,	"pcFileName",	0);
	create_insn	(x=0X9404);
	op_stkvar	(x,	1);
	set_cmt	(0X9408,	"pData",	0);
	create_insn	(x=0X9408);
	op_stkvar	(x,	1);
	set_cmt	(0X940C,	"ulLen",	0);
	create_insn	(x=0X940C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9418);
	op_stkvar	(x,	1);
	set_cmt	(0X941C,	"ptr",	0);
	create_insn	(x=0X941C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9424);
	op_stkvar	(x,	1);
	create_insn	(x=0X9428);
	op_stkvar	(x,	1);
	create_insn	(x=0X942C);
	op_stkvar	(x,	1);
	create_dword	(x=0X943C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X943C,	"pKey");
	create_insn	(0X9440);
	set_name	(0X9440,	"AesDecryptFromFile");
	create_insn	(x=0X944C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9450);
	op_stkvar	(x,	1);
	create_insn	(x=0X9454);
	op_stkvar	(x,	1);
	create_insn	(x=0X9458);
	op_stkvar	(x,	1);
	create_insn	(x=0X9468);
	op_stkvar	(x,	1);
	set_cmt	(0X946C,	"size",	0);
	create_insn	(x=0X946C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9478);
	op_stkvar	(x,	1);
	create_insn	(x=0X947C);
	op_stkvar	(x,	1);
	create_insn	(x=0X948C);
	op_stkvar	(x,	1);
	set_cmt	(0X9494,	"pcFileName",	0);
	create_insn	(x=0X9494);
	op_stkvar	(x,	1);
	set_cmt	(0X9498,	"pData",	0);
	create_insn	(x=0X9498);
	op_stkvar	(x,	1);
	set_cmt	(0X949C,	"ulLen",	0);
	create_insn	(x=0X949C);
	op_stkvar	(x,	1);
	create_insn	(x=0X94A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X94AC);
	op_stkvar	(x,	1);
	set_cmt	(0X94B8,	"pOut",	0);
	create_insn	(x=0X94B8);
	op_stkvar	(x,	1);
	set_cmt	(0X94BC,	"ulLen",	0);
	create_insn	(x=0X94BC);
	op_stkvar	(x,	1);
	set_cmt	(0X94C0,	"pIn",	0);
	create_insn	(x=0X94C0);
	op_stkvar	(x,	1);
	set_cmt	(0X94C4,	"pKey",	0);
	create_insn	(x=0X94C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X94CC,	"ptr",	0);
	create_insn	(x=0X94CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X94D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X94D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X94DC);
	op_stkvar	(x,	1);
	create_dword	(x=0X94EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X94F0);
	set_name	(0X94F0,	"Get_Time");
	create_insn	(x=0X94FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X9500);
	op_stkvar	(x,	1);
	set_cmt	(0X9504,	"timer",	0);
	create_insn	(x=0X950C);
	op_stkvar	(x,	1);
	set_cmt	(0X9510,	"timer",	0);
	create_insn	(x=0X951C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9520);
	op_stkvar	(x,	1);
	create_insn	(x=0X9540);
	op_stkvar	(x,	1);
	create_insn	(x=0X9548);
	op_stkvar	(x,	1);
	create_insn	(x=0X9550);
	op_hex		(x,	1);
	create_insn	(x=0X9558);
	op_hex		(x,	1);
	create_insn	(x=0X955C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9564);
	op_stkvar	(x,	1);
	create_insn	(x=0X956C);
	op_hex		(x,	1);
	create_insn	(x=0X9570);
	op_stkvar	(x,	1);
	create_insn	(x=0X9578);
	op_stkvar	(x,	1);
	create_insn	(x=0X9580);
	op_hex		(x,	1);
	create_insn	(x=0X9584);
	op_stkvar	(x,	1);
	create_insn	(x=0X958C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9594);
	op_hex		(x,	1);
	create_insn	(x=0X9598);
	op_stkvar	(x,	1);
	create_insn	(x=0X95A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X95A8);
	op_hex		(x,	1);
	create_insn	(x=0X95AC);
	op_stkvar	(x,	1);
	create_insn	(0X95BC);
	set_name	(0X95BC,	"Set_Time");
	create_insn	(x=0X95C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X95CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X95DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X95E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X95EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X95F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X95F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X95FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X9604);
	op_stkvar	(x,	1);
	create_insn	(x=0X9608);
	op_stkvar	(x,	1);
	create_insn	(x=0X9610);
	op_stkvar	(x,	1);
	create_insn	(x=0X9614);
	op_stkvar	(x,	1);
	create_insn	(x=0X961C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9620);
	op_stkvar	(x,	1);
	set_cmt	(0X9624,	"tp",	0);
	create_insn	(x=0X9630);
	op_stkvar	(x,	1);
	create_insn	(x=0X9634);
	op_stkvar	(x,	1);
	create_insn	(x=0X9638);
	op_stkvar	(x,	1);
	create_insn	(x=0X9640);
	op_stkvar	(x,	1);
	create_insn	(x=0X9644);
	op_stkvar	(x,	1);
	set_cmt	(0X9648,	"tv",	0);
	set_cmt	(0X964C,	"tz",	0);
	create_insn	(0X965C);
	set_name	(0X965C,	"Set_Mutex_Attr_Recu");
	create_insn	(x=0X9668);
	op_stkvar	(x,	1);
	create_insn	(x=0X966C);
	op_stkvar	(x,	1);
	set_cmt	(0X9670,	"attr",	0);
	create_insn	(x=0X9678);
	op_stkvar	(x,	1);
	create_insn	(x=0X9688);
	op_stkvar	(x,	1);
	set_cmt	(0X968C,	"mutex",	0);
	create_insn	(x=0X968C);
	op_stkvar	(x,	1);
	set_cmt	(0X9690,	"mutexattr",	0);
	create_insn	(x=0X9698);
	op_stkvar	(x,	1);
	set_cmt	(0X969C,	"attr",	0);
	create_insn	(0X96AC);
	set_name	(0X96AC,	"Loop_FeedWatchDog");
	create_insn	(x=0X96B8);
	op_stkvar	(x,	1);
	set_cmt	(0X96BC,	"slTimeout",	0);
	set_cmt	(0X96C8,	"useconds",	0);
	create_insn	(x=0X96C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X96D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X96D4,	"useconds");
	create_insn	(0X96D8);
	set_name	(0X96D8,	"Create_FeedWatchDog_Thread");
	create_insn	(x=0X96E4);
	op_stkvar	(x,	1);
	set_cmt	(0X96E8,	"attr",	0);
	create_insn	(x=0X96F0);
	op_stkvar	(x,	1);
	set_cmt	(0X96F4,	"attr",	0);
	set_cmt	(0X96F8,	"inherit",	0);
	create_insn	(x=0X9700);
	op_stkvar	(x,	1);
	set_cmt	(0X9704,	"attr",	0);
	set_cmt	(0X9708,	"policy",	0);
	set_cmt	(0X9710,	"algorithm",	0);
	create_insn	(x=0X971C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9720);
	op_stkvar	(x,	1);
	create_insn	(x=0X9724);
	op_stkvar	(x,	1);
	set_cmt	(0X9728,	"attr",	0);
	set_cmt	(0X972C,	"param",	0);
	create_insn	(x=0X9734);
	op_stkvar	(x,	1);
	create_insn	(x=0X9738);
	op_stkvar	(x,	1);
	set_cmt	(0X973C,	"newthread",	0);
	set_cmt	(0X9740,	"attr",	0);
	set_cmt	(0X9744,	"start_routine",	0);
	create_insn	(x=0X9744);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X9748,	"arg",	0);
	create_insn	(x=0X9750);
	op_stkvar	(x,	1);
	set_cmt	(0X9754,	"attr",	0);
	create_dword	(x=0X9764);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X9764,	"start_routine");
	create_insn	(0X9768);
	set_name	(0X9768,	"Reset_68013");
	create_insn	(x=0X9770);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X9778,	"seconds",	0);
	create_insn	(x=0X9780);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X9788);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X9794);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X9798);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X979C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X97A0);
	set_name	(0X97A0,	"MFI_Ctrl_Set");
	create_insn	(x=0X97B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X97C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X97CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X97D8);
	op_stkvar	(x,	1);
	set_cmt	(0X97DC,	"s",	0);
	create_insn	(x=0X97E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X97E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X97F0);
	op_stkvar	(x,	1);
	set_cmt	(0X97F4,	"s",	0);
	create_insn	(x=0X97F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X97FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X9804);
	op_stkvar	(x,	1);
	set_cmt	(0X9808,	"command",	0);
	create_dword	(x=0X9818);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X981C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X9820);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X9824);
	set_name	(0X9824,	"MFI_Ctrl_Get");
	create_insn	(x=0X982C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X984C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X984C,	"pFile");
	create_insn	(x=0X9850);
	op_stkvar	(x,	1);
	set_name	(0X9850,	"Simple_EncryptAndDecrypt");
	create_insn	(x=0X985C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9860);
	op_stkvar	(x,	1);
	create_insn	(x=0X9868);
	op_stkvar	(x,	1);
	create_insn	(x=0X9870);
	op_stkvar	(x,	1);
	create_insn	(x=0X9874);
	op_stkvar	(x,	1);
	create_insn	(x=0X9878);
	op_stkvar	(x,	1);
	create_insn	(x=0X9880);
	op_stkvar	(x,	1);
	create_insn	(x=0X9888);
	op_stkvar	(x,	1);
	create_insn	(x=0X9890);
	op_stkvar	(x,	1);
	create_insn	(x=0X9894);
	op_hex		(x,	1);
	create_insn	(x=0X989C);
	op_stkvar	(x,	1);
	create_insn	(x=0X98A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X98A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X98B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X98BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X98C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X98C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X98CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X98D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X98E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X98F0);
	op_hex		(x,	1);
	create_insn	(x=0X98F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X98FC);
	op_hex		(x,	1);
	create_insn	(x=0X9900);
	op_hex		(x,	1);
	create_insn	(x=0X990C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9910);
	op_stkvar	(x,	1);
	create_insn	(x=0X9918);
	op_stkvar	(x,	1);
	create_insn	(x=0X991C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9928);
	op_stkvar	(x,	1);
	create_insn	(x=0X9938);
	op_hex		(x,	1);
	create_insn	(x=0X9940);
	op_hex		(x,	1);
	create_insn	(x=0X994C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9950);
	op_stkvar	(x,	1);
	create_insn	(x=0X9958);
	op_stkvar	(x,	1);
	create_insn	(x=0X995C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9968);
	op_stkvar	(x,	1);
	create_insn	(x=0X996C);
	op_hex		(x,	1);
	create_insn	(x=0X9974);
	op_hex		(x,	1);
	create_insn	(x=0X997C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9984);
	op_stkvar	(x,	1);
	create_insn	(x=0X9988);
	op_stkvar	(x,	1);
	create_insn	(x=0X998C);
	op_stkvar	(x,	1);
	create_dword	(x=0X99A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X99A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X99AC);
	set_name	(0X99AC,	"Pro_Deal_CallBack");
	create_insn	(x=0X99B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X99BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X99C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X99D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X99E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X99E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X99F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X9A08);
	op_stkvar	(x,	1);
	set_name	(0X9A08,	"Pro_IsPacketNeedEncrypt");
	create_insn	(x=0X9A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X9A18);
	op_stkvar	(x,	1);
	create_insn	(x=0X9A28);
	op_stkvar	(x,	1);
	create_insn	(x=0X9A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X9A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X9A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X9A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X9A78);
	op_stkvar	(x,	1);
	create_insn	(x=0X9A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X9AB8);
	op_stkvar	(x,	1);
	create_insn	(0X9AC0);
	create_insn	(x=0X9AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X9AC8);
	op_stkvar	(x,	1);
	create_insn	(0X9ADC);
	set_name	(0X9ADC,	"Pro_PackAndSend");
	create_insn	(x=0X9AE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X9AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X9AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X9B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X9B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X9B20);
	op_stkvar	(x,	1);
	create_insn	(x=0X9B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X9B28);
	op_hex		(x,	1);
	create_insn	(x=0X9B2C);
	op_hex		(x,	1);
	create_insn	(x=0X9B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X9B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X9B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X9B70);
	op_hex		(x,	1);
	create_insn	(x=0X9B94);
	op_hex		(x,	1);
	create_insn	(x=0X9B98);
	op_hex		(x,	1);
	create_insn	(x=0X9BA0);
	op_hex		(x,	1);
	create_insn	(x=0X9BB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X9BBC);
	op_stkvar	(x,	1);
	set_cmt	(0X9BC4,	"crc",	0);
	set_cmt	(0X9BC8,	"pchMessage",	0);
	set_cmt	(0X9BCC,	"dwLength",	0);
	create_insn	(x=0X9BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X9BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X9BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X9BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X9C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X9C34);
	op_hex		(x,	1);
	create_insn	(x=0X9C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X9C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X9C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X9C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X9C9C);
	op_hex		(x,	1);
	create_insn	(x=0X9CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X9CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X9CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X9CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X9CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X9CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X9CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X9CEC);
	op_stkvar	(x,	1);
	set_cmt	(0X9CF4,	"pProData",	0);
	create_insn	(x=0X9D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X9D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X9D18);
	op_hex		(x,	1);
	create_insn	(x=0X9D1C);
	op_hex		(x,	1);
	create_insn	(x=0X9D20);
	op_hex		(x,	1);
	create_insn	(x=0X9D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X9D2C);
	op_hex		(x,	1);
	create_insn	(x=0X9D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X9D34);
	op_hex		(x,	1);
	create_insn	(x=0X9D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X9D48);
	op_stkvar	(x,	1);
	set_cmt	(0X9D50,	"pucData",	0);
	create_insn	(x=0X9D54);
	op_stkvar	(x,	1);
	set_cmt	(0X9D5C,	"ulLen",	0);
	create_insn	(x=0X9D60);
	op_stkvar	(x,	1);
	set_cmt	(0X9D80,	"usSeq",	0);
	create_insn	(x=0X9D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X9D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9DA0);
	op_hex		(x,	1);
	create_insn	(x=0X9DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X9DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X9DB0);
	op_stkvar	(x,	1);
	set_cmt	(0X9DB8,	"pchMessage",	0);
	create_insn	(x=0X9DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X9DCC);
	op_hex		(x,	1);
	set_cmt	(0X9DE4,	"crc",	0);
	set_cmt	(0X9DE8,	"dwLength",	0);
	create_insn	(x=0X9DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X9DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X9E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X9E10);
	op_hex		(x,	1);
	create_insn	(x=0X9E2C);
	op_stkvar	(x,	1);
	set_cmt	(0X9E30,	"pOut",	0);
	set_cmt	(0X9E34,	"usData",	0);
	create_insn	(x=0X9E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X9E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X9E60);
	op_hex		(x,	1);
	create_insn	(x=0X9E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X9E88);
	op_stkvar	(x,	1);
	create_dword	(0X9E98);
	create_insn	(0X9E9C);
	set_name	(0X9E9C,	"Pro_DealProtocol");
	create_insn	(x=0X9EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X9EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X9EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X9EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X9ED0);
	op_hex		(x,	1);
	set_cmt	(0X9EDC,	"pPro",	0);
	create_insn	(x=0X9EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X9EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X9EF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X9F04);
	op_stkvar	(x,	1);
	create_insn	(x=0X9F0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X9F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X9F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X9F30);
	op_stkvar	(x,	1);
	create_insn	(x=0X9F34);
	op_stkvar	(x,	1);
	create_insn	(x=0X9F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9F48);
	op_hex		(x,	1);
	set_cmt	(0X9F54,	"pPro",	0);
	create_insn	(x=0X9F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X9F60);
	op_stkvar	(x,	1);
	set_cmt	(0X9F64,	"pPro",	0);
	create_insn	(x=0X9F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X9F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X9F70);
	op_stkvar	(x,	1);
	create_insn	(x=0X9F74);
	op_stkvar	(x,	1);
	create_insn	(0X9F84);
	set_name	(0X9F84,	"Pro_ParseProtocol");
	create_insn	(x=0X9F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X9F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X9FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X9FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X9FB8);
	op_hex		(x,	1);
	create_insn	(x=0X9FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X9FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X9FDC);
	op_hex		(x,	1);
	create_insn	(x=0X9FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X9FF4);
	op_hex		(x,	1);
	create_insn	(x=0XA004);
	op_stkvar	(x,	1);
	create_insn	(x=0XA00C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA01C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA028);
	op_hex		(x,	1);
	create_insn	(x=0XA034);
	op_stkvar	(x,	1);
	set_cmt	(0XA03C,	"pProData",	0);
	create_insn	(x=0XA050);
	op_stkvar	(x,	1);
	set_cmt	(0XA054,	"s",	0);
	set_cmt	(0XA058,	"c",	0);
	set_cmt	(0XA05C,	"n",	0);
	create_insn	(x=0XA064);
	op_stkvar	(x,	1);
	create_insn	(x=0XA070);
	op_stkvar	(x,	1);
	create_insn	(x=0XA074);
	op_stkvar	(x,	1);
	create_insn	(x=0XA080);
	op_stkvar	(x,	1);
	create_insn	(x=0XA084);
	op_stkvar	(x,	1);
	create_insn	(x=0XA094);
	op_hex		(x,	1);
	create_insn	(x=0XA098);
	op_hex		(x,	1);
	create_insn	(x=0XA09C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA0A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XA0AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XA0B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XA0B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA0D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA0DC);
	op_stkvar	(x,	1);
	set_cmt	(0XA0E0,	"pPro",	0);
	create_insn	(x=0XA0E0);
	op_stkvar	(x,	1);
	set_cmt	(0XA0E4,	"pCmd",	0);
	set_cmt	(0XA0E8,	"pData",	0);
	set_cmt	(0XA0EC,	"ulLen",	0);
	create_insn	(x=0XA0F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA100);
	op_stkvar	(x,	1);
	create_insn	(x=0XA110);
	op_hex		(x,	1);
	create_insn	(x=0XA128);
	op_stkvar	(x,	1);
	create_insn	(x=0XA130);
	op_stkvar	(x,	1);
	create_insn	(x=0XA144);
	op_stkvar	(x,	1);
	create_insn	(x=0XA154);
	op_stkvar	(x,	1);
	create_insn	(x=0XA160);
	op_hex		(x,	1);
	create_insn	(x=0XA16C);
	op_stkvar	(x,	1);
	set_cmt	(0XA174,	"pucData",	0);
	create_insn	(x=0XA178);
	op_stkvar	(x,	1);
	set_cmt	(0XA180,	"ulLen",	0);
	create_insn	(x=0XA184);
	op_stkvar	(x,	1);
	set_cmt	(0XA1A4,	"usSeq",	0);
	create_insn	(x=0XA1AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XA1C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XA1D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XA1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XA1EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XA200);
	op_stkvar	(x,	1);
	create_insn	(x=0XA210);
	op_stkvar	(x,	1);
	set_cmt	(0XA214,	"s",	0);
	set_cmt	(0XA218,	"c",	0);
	set_cmt	(0XA21C,	"n",	0);
	create_insn	(x=0XA224);
	op_stkvar	(x,	1);
	create_insn	(x=0XA230);
	op_stkvar	(x,	1);
	create_insn	(x=0XA234);
	op_stkvar	(x,	1);
	create_insn	(x=0XA240);
	op_stkvar	(x,	1);
	create_insn	(x=0XA244);
	op_stkvar	(x,	1);
	create_insn	(x=0XA254);
	op_hex		(x,	1);
	create_insn	(x=0XA258);
	op_hex		(x,	1);
	create_insn	(x=0XA25C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA260);
	op_stkvar	(x,	1);
	create_insn	(x=0XA26C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA270);
	op_stkvar	(x,	1);
	create_insn	(x=0XA27C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA280);
	op_stkvar	(x,	1);
	create_insn	(x=0XA290);
	op_hex		(x,	1);
	create_insn	(x=0XA294);
	op_stkvar	(x,	1);
	create_insn	(x=0XA298);
	op_stkvar	(x,	1);
	create_insn	(x=0XA2B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA2BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XA2CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XA2D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XA2DC);
	op_stkvar	(x,	1);
	set_cmt	(0XA2E0,	"pPro",	0);
	set_cmt	(0XA2E4,	"pCmd",	0);
	set_cmt	(0XA2E8,	"pData",	0);
	set_cmt	(0XA2EC,	"ulLen",	0);
	create_insn	(x=0XA2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XA30C);
	op_stkvar	(x,	1);
	create_insn	(0XA314);
	create_insn	(x=0XA318);
	op_stkvar	(x,	1);
	create_insn	(x=0XA31C);
	op_stkvar	(x,	1);
	create_insn	(0XA32C);
	set_name	(0XA32C,	"Pro_DealRec");
	create_insn	(x=0XA338);
	op_stkvar	(x,	1);
	create_insn	(x=0XA33C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA34C);
	op_stkvar	(x,	1);
	set_cmt	(0XA354,	"pPro",	0);
	create_insn	(x=0XA354);
	op_stkvar	(x,	1);
	create_insn	(x=0XA36C);
	op_stkvar	(x,	1);
	set_cmt	(0XA374,	"pPro",	0);
	create_insn	(x=0XA374);
	op_stkvar	(x,	1);
	create_insn	(x=0XA380);
	op_stkvar	(x,	1);
	create_insn	(x=0XA384);
	op_stkvar	(x,	1);
	create_insn	(0XA394);
	set_name	(0XA394,	"Pro_Init");
	create_insn	(x=0XA3A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XA3A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XA3A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA3AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XA3B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XA3C0);
	op_stkvar	(x,	1);
	set_cmt	(0XA3C8,	"s",	0);
	create_insn	(x=0XA3C8);
	op_stkvar	(x,	1);
	set_cmt	(0XA3CC,	"c",	0);
	set_cmt	(0XA3D0,	"n",	0);
	create_insn	(x=0XA3D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA3DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XA3E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XA3E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA3F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XA3F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XA3FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XA400);
	op_stkvar	(x,	1);
	set_cmt	(0XA408,	"slLen",	0);
	create_insn	(x=0XA408);
	op_stkvar	(x,	1);
	create_insn	(x=0XA414);
	op_stkvar	(x,	1);
	create_insn	(x=0XA41C);
	op_stkvar	(x,	1);
	set_cmt	(0XA42C,	"slLen",	0);
	create_insn	(x=0XA42C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA438);
	op_stkvar	(x,	1);
	create_insn	(x=0XA440);
	op_stkvar	(x,	1);
	create_insn	(x=0XA450);
	op_stkvar	(x,	1);
	create_insn	(x=0XA45C);
	op_stkvar	(x,	1);
	set_cmt	(0XA464,	"pcBuff",	0);
	set_cmt	(0XA468,	"pPro",	0);
	create_insn	(x=0XA470);
	op_stkvar	(x,	1);
	create_insn	(x=0XA47C);
	op_stkvar	(x,	1);
	set_cmt	(0XA484,	"pcBuff",	0);
	set_cmt	(0XA488,	"pPro",	0);
	create_insn	(x=0XA490);
	op_stkvar	(x,	1);
	create_insn	(x=0XA49C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA4A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XA4B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XA4B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA4C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XA4CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XA4D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA4E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XA4E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA4F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XA4F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XA4FC);
	op_stkvar	(x,	1);
	set_cmt	(0XA504,	"pMutex",	0);
	create_insn	(x=0XA510);
	op_stkvar	(x,	1);
	create_insn	(x=0XA518);
	op_stkvar	(x,	1);
	set_cmt	(0XA520,	"pDataBuffHandle",	0);
	create_insn	(x=0XA52C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA530);
	op_stkvar	(x,	1);
	create_insn	(0XA540);
	set_name	(0XA540,	"Pro_CheckRec");
	create_insn	(x=0XA550);
	op_stkvar	(x,	1);
	create_insn	(x=0XA558);
	op_stkvar	(x,	1);
	create_insn	(x=0XA55C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA56C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA574);
	op_stkvar	(x,	1);
	create_insn	(x=0XA57C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA598);
	op_stkvar	(x,	1);
	create_insn	(x=0XA59C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA5AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XA5B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XA5B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA5C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA5CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XA5E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XA5E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XA5E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA5F4);
	op_stkvar	(x,	1);
	set_cmt	(0XA5FC,	"pFrameCapture",	0);
	set_cmt	(0XA610,	"pPro",	0);
	create_insn	(x=0XA610);
	op_stkvar	(x,	1);
	create_insn	(x=0XA618);
	op_stkvar	(x,	1);
	create_insn	(x=0XA61C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA628);
	op_stkvar	(x,	1);
	create_insn	(x=0XA630);
	op_stkvar	(x,	1);
	create_insn	(x=0XA64C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA650);
	op_stkvar	(x,	1);
	create_insn	(x=0XA65C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA660);
	op_stkvar	(x,	1);
	create_insn	(x=0XA664);
	op_stkvar	(x,	1);
	create_insn	(0XA674);
	set_name	(0XA674,	"Pro_PackAndSend_ThreadSafe");
	create_insn	(x=0XA680);
	op_stkvar	(x,	1);
	create_insn	(x=0XA684);
	op_stkvar	(x,	1);
	create_insn	(x=0XA688);
	op_stkvar	(x,	1);
	create_insn	(x=0XA68C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA690);
	op_stkvar	(x,	1);
	create_insn	(x=0XA6A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XA6A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA6B0);
	op_stkvar	(x,	1);
	set_cmt	(0XA6B4,	"pcBuff",	0);
	set_cmt	(0XA6B8,	"pPro",	0);
	create_insn	(x=0XA6C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XA6D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XA6D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA6E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA6F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XA6FC);
	op_stkvar	(x,	1);
	set_cmt	(0XA700,	"dest",	0);
	set_cmt	(0XA704,	"src",	0);
	create_insn	(x=0XA704);
	op_stkvar	(x,	1);
	set_cmt	(0XA708,	"n",	0);
	create_insn	(x=0XA708);
	op_stkvar	(x,	1);
	create_insn	(x=0XA710);
	op_stkvar	(x,	1);
	create_insn	(x=0XA714);
	op_stkvar	(x,	1);
	create_insn	(x=0XA718);
	op_stkvar	(x,	1);
	create_insn	(x=0XA724);
	op_stkvar	(x,	1);
	create_insn	(x=0XA72C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA730);
	op_stkvar	(x,	1);
	create_insn	(x=0XA734);
	op_hex		(x,	1);
	create_insn	(x=0XA738);
	op_hex		(x,	1);
	create_insn	(x=0XA73C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA740);
	op_stkvar	(x,	1);
	create_insn	(x=0XA748);
	op_stkvar	(x,	1);
	create_insn	(x=0XA74C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA774);
	op_hex		(x,	1);
	create_insn	(x=0XA798);
	op_hex		(x,	1);
	create_insn	(x=0XA79C);
	op_hex		(x,	1);
	create_insn	(x=0XA7A4);
	op_hex		(x,	1);
	create_insn	(x=0XA7B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA7BC);
	op_stkvar	(x,	1);
	set_cmt	(0XA7C0,	"crc",	0);
	set_cmt	(0XA7C4,	"pchMessage",	0);
	set_cmt	(0XA7C8,	"dwLength",	0);
	create_insn	(x=0XA7D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA7DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XA7E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA7EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XA7F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA7FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XA804);
	op_hex		(x,	1);
	create_insn	(x=0XA83C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA848);
	op_stkvar	(x,	1);
	create_insn	(x=0XA84C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA854);
	op_hex		(x,	1);
	create_insn	(x=0XA858);
	op_hex		(x,	1);
	create_insn	(x=0XA860);
	op_stkvar	(x,	1);
	create_insn	(x=0XA864);
	op_hex		(x,	1);
	create_insn	(x=0XA868);
	op_stkvar	(x,	1);
	create_insn	(x=0XA86C);
	op_hex		(x,	1);
	create_insn	(x=0XA878);
	op_stkvar	(x,	1);
	create_insn	(x=0XA87C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA884);
	op_stkvar	(x,	1);
	create_insn	(x=0XA894);
	op_stkvar	(x,	1);
	create_insn	(x=0XA89C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA8A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XA8A8);
	op_hex		(x,	1);
	create_insn	(x=0XA8AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XA8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XA8B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA8BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XA8C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA8CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XA8D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA8E8);
	op_stkvar	(x,	1);
	set_cmt	(0XA8EC,	"pProData",	0);
	create_insn	(x=0XA900);
	op_stkvar	(x,	1);
	create_insn	(x=0XA904);
	op_stkvar	(x,	1);
	create_insn	(x=0XA90C);
	op_hex		(x,	1);
	create_insn	(x=0XA910);
	op_hex		(x,	1);
	create_insn	(x=0XA914);
	op_hex		(x,	1);
	create_insn	(x=0XA91C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA920);
	op_hex		(x,	1);
	create_insn	(x=0XA924);
	op_stkvar	(x,	1);
	create_insn	(x=0XA928);
	op_hex		(x,	1);
	create_insn	(x=0XA930);
	op_stkvar	(x,	1);
	create_insn	(x=0XA934);
	op_stkvar	(x,	1);
	create_insn	(x=0XA93C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA944);
	op_stkvar	(x,	1);
	create_insn	(x=0XA94C);
	op_stkvar	(x,	1);
	set_cmt	(0XA968,	"pucData",	0);
	set_cmt	(0XA96C,	"ulLen",	0);
	set_cmt	(0XA970,	"usSeq",	0);
	create_insn	(x=0XA97C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA984);
	op_stkvar	(x,	1);
	create_insn	(x=0XA988);
	op_stkvar	(x,	1);
	create_insn	(x=0XA98C);
	op_hex		(x,	1);
	create_insn	(x=0XA990);
	op_stkvar	(x,	1);
	create_insn	(x=0XA994);
	op_stkvar	(x,	1);
	create_insn	(x=0XA99C);
	op_stkvar	(x,	1);
	set_cmt	(0XA9A0,	"pchMessage",	0);
	create_insn	(x=0XA9A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XA9B0);
	op_hex		(x,	1);
	set_cmt	(0XA9C8,	"crc",	0);
	set_cmt	(0XA9CC,	"dwLength",	0);
	create_insn	(x=0XA9D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XA9DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XA9E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XA9EC);
	op_hex		(x,	1);
	create_insn	(x=0XAA08);
	op_stkvar	(x,	1);
	set_cmt	(0XAA0C,	"pOut",	0);
	set_cmt	(0XAA10,	"usData",	0);
	create_insn	(x=0XAA18);
	op_stkvar	(x,	1);
	create_insn	(x=0XAA20);
	op_stkvar	(x,	1);
	create_insn	(x=0XAA2C);
	op_hex		(x,	1);
	create_insn	(x=0XAA44);
	op_stkvar	(x,	1);
	create_insn	(x=0XAA5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XAA60);
	op_stkvar	(x,	1);
	create_dword	(x=0XAA70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XAA74);
	create_insn	(x=0XAA78);
	op_stkvar	(x,	1);
	set_name	(0XAA78,	"Pro_Get_CurSeq");
	create_insn	(x=0XAA84);
	op_stkvar	(x,	1);
	create_insn	(x=0XAA88);
	op_stkvar	(x,	1);
	create_insn	(x=0XAA98);
	op_stkvar	(x,	1);
	create_insn	(x=0XAAA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XAAA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XAAB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XAAC0);
	op_stkvar	(x,	1);
	create_insn	(0XAAD4);
	set_name	(0XAAD4,	"Pro_Register_CmdSend");
	create_insn	(x=0XAAE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XAAE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XAAE8);
	op_stkvar	(x,	1);
	create_insn	(x=0XAAF8);
	op_stkvar	(x,	1);
	create_insn	(0XAB00);
	create_insn	(x=0XAB04);
	op_stkvar	(x,	1);
	create_insn	(x=0XAB08);
	op_stkvar	(x,	1);
	set_cmt	(0XAB10,	"mutex",	0);
	create_insn	(x=0XAB1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XAB24);
	op_stkvar	(x,	1);
	create_insn	(x=0XAB28);
	op_stkvar	(x,	1);
	create_insn	(x=0XAB4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XAB50);
	op_stkvar	(x,	1);
	create_insn	(x=0XAB70);
	op_stkvar	(x,	1);
	create_insn	(x=0XAB74);
	op_stkvar	(x,	1);
	create_insn	(x=0XAB8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XAB98);
	op_stkvar	(x,	1);
	create_insn	(x=0XABA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XABA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XABAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XABB8);
	op_stkvar	(x,	1);
	set_cmt	(0XABC0,	"mutex",	0);
	create_insn	(x=0XABC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XABCC);
	op_stkvar	(x,	1);
	create_insn	(x=0XABD0);
	op_stkvar	(x,	1);
	create_insn	(0XABE0);
	set_name	(0XABE0,	"Pro_Cancel_CmdSend");
	create_insn	(x=0XABEC);
	op_stkvar	(x,	1);
	create_insn	(x=0XABF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XABF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XAC04);
	op_stkvar	(x,	1);
	create_insn	(0XAC0C);
	create_insn	(x=0XAC10);
	op_stkvar	(x,	1);
	create_insn	(x=0XAC14);
	op_stkvar	(x,	1);
	set_cmt	(0XAC1C,	"mutex",	0);
	create_insn	(x=0XAC28);
	op_stkvar	(x,	1);
	create_insn	(x=0XAC30);
	op_stkvar	(x,	1);
	create_insn	(x=0XAC34);
	op_stkvar	(x,	1);
	create_insn	(x=0XAC58);
	op_stkvar	(x,	1);
	create_insn	(x=0XAC5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XAC78);
	op_stkvar	(x,	1);
	create_insn	(x=0XAC84);
	op_stkvar	(x,	1);
	create_insn	(x=0XAC88);
	op_stkvar	(x,	1);
	create_insn	(x=0XACA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XACAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XACD0);
	op_stkvar	(x,	1);
	create_insn	(x=0XACD8);
	op_stkvar	(x,	1);
	create_insn	(x=0XACE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XACE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XACF0);
	op_stkvar	(x,	1);
	set_cmt	(0XACF8,	"mutex",	0);
	create_insn	(x=0XAD00);
	op_stkvar	(x,	1);
	create_insn	(x=0XAD04);
	op_stkvar	(x,	1);
	create_insn	(x=0XAD08);
	op_stkvar	(x,	1);
	create_insn	(0XAD18);
	set_name	(0XAD18,	"Pro_Check_CmdSend_Timeout");
	create_insn	(x=0XAD24);
	op_stkvar	(x,	1);
	create_insn	(x=0XAD28);
	op_stkvar	(x,	1);
	create_insn	(x=0XAD34);
	op_stkvar	(x,	1);
	set_cmt	(0XAD3C,	"mutex",	0);
	create_insn	(x=0XAD48);
	op_stkvar	(x,	1);
	create_insn	(x=0XAD50);
	op_stkvar	(x,	1);
	create_insn	(x=0XAD54);
	op_stkvar	(x,	1);
	create_insn	(x=0XAD78);
	op_stkvar	(x,	1);
	create_insn	(x=0XAD7C);
	op_stkvar	(x,	1);
	set_cmt	(0XAD98,	"ptTime",	0);
	create_insn	(x=0XAD9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XADA0);
	op_stkvar	(x,	1);
	set_cmt	(0XADC0,	"ulTimeOutms",	0);
	create_insn	(x=0XADD4);
	op_stkvar	(x,	1);
	create_insn	(x=0XADD8);
	op_stkvar	(x,	1);
	create_insn	(x=0XADF8);
	op_stkvar	(x,	1);
	create_insn	(x=0XADFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XAE1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XAE24);
	op_stkvar	(x,	1);
	create_insn	(x=0XAE28);
	op_stkvar	(x,	1);
	create_insn	(x=0XAE34);
	op_stkvar	(x,	1);
	set_cmt	(0XAE3C,	"mutex",	0);
	create_insn	(0XAE4C);
	set_name	(0XAE4C,	"Pro_Deal_CmdSend_Ack");
	create_insn	(x=0XAE58);
	op_stkvar	(x,	1);
	create_insn	(x=0XAE5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XAE6C);
	op_stkvar	(x,	1);
	create_insn	(0XAE74);
	create_insn	(x=0XAE78);
	op_stkvar	(x,	1);
	create_insn	(x=0XAE7C);
	op_stkvar	(x,	1);
	set_cmt	(0XAE84,	"mutex",	0);
	create_insn	(x=0XAE90);
	op_stkvar	(x,	1);
	create_insn	(x=0XAE98);
	op_stkvar	(x,	1);
	create_insn	(x=0XAE9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XAEC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XAEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XAEE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XAEF8);
	op_stkvar	(x,	1);
	create_insn	(x=0XAEFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XAF1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XAF30);
	op_stkvar	(x,	1);
	create_insn	(x=0XAF34);
	op_stkvar	(x,	1);
	create_insn	(x=0XAF54);
	op_stkvar	(x,	1);
	create_insn	(x=0XAF7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XAF80);
	op_stkvar	(x,	1);
	create_insn	(x=0XAFA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XAFB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XAFB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XAFD8);
	op_stkvar	(x,	1);
	create_insn	(x=0XAFEC);
	op_stkvar	(x,	1);
	create_insn	(x=0XAFF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XB018);
	op_stkvar	(x,	1);
	create_insn	(x=0XB01C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB03C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB04C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB050);
	op_stkvar	(x,	1);
	create_insn	(x=0XB070);
	op_stkvar	(x,	1);
	create_insn	(x=0XB078);
	op_stkvar	(x,	1);
	create_insn	(x=0XB080);
	op_stkvar	(x,	1);
	create_insn	(x=0XB084);
	op_stkvar	(x,	1);
	create_insn	(x=0XB088);
	op_stkvar	(x,	1);
	create_insn	(x=0XB0A8);
	op_stkvar	(x,	1);
	set_cmt	(0XB0B0,	"dest",	0);
	set_cmt	(0XB0B4,	"src",	0);
	set_cmt	(0XB0B8,	"n",	0);
	create_insn	(x=0XB0B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XB0C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XB0C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB0E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB0EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XB0F0);
	op_stkvar	(x,	1);
	set_cmt	(0XB110,	"mutex",	0);
	create_insn	(x=0XB118);
	op_stkvar	(x,	1);
	create_insn	(x=0XB11C);
	op_stkvar	(x,	1);
	set_cmt	(0XB13C,	"cond",	0);
	create_insn	(x=0XB144);
	op_stkvar	(x,	1);
	create_insn	(x=0XB148);
	op_stkvar	(x,	1);
	set_cmt	(0XB168,	"mutex",	0);
	create_insn	(x=0XB170);
	op_stkvar	(x,	1);
	create_insn	(x=0XB174);
	op_stkvar	(x,	1);
	create_insn	(x=0XB194);
	op_stkvar	(x,	1);
	create_insn	(x=0XB198);
	op_stkvar	(x,	1);
	create_insn	(x=0XB1BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XB1C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB1CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XB1D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XB1DC);
	op_stkvar	(x,	1);
	set_cmt	(0XB1E4,	"mutex",	0);
	create_insn	(x=0XB1EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XB1F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XB1F4);
	op_stkvar	(x,	1);
	create_insn	(0XB204);
	set_name	(0XB204,	"Pro_SendWaitAck");
	create_insn	(x=0XB210);
	op_stkvar	(x,	1);
	create_insn	(x=0XB214);
	op_stkvar	(x,	1);
	create_insn	(x=0XB218);
	op_stkvar	(x,	1);
	create_insn	(x=0XB21C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB220);
	op_stkvar	(x,	1);
	create_insn	(x=0XB230);
	op_stkvar	(x,	1);
	create_insn	(x=0XB238);
	op_stkvar	(x,	1);
	set_cmt	(0XB23C,	"s",	0);
	set_cmt	(0XB240,	"c",	0);
	set_cmt	(0XB244,	"n",	0);
	create_insn	(x=0XB24C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB254);
	op_stkvar	(x,	1);
	create_insn	(x=0XB258);
	op_stkvar	(x,	1);
	create_insn	(x=0XB260);
	op_stkvar	(x,	1);
	create_insn	(x=0XB264);
	op_stkvar	(x,	1);
	create_insn	(x=0XB26C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB270);
	op_stkvar	(x,	1);
	create_insn	(x=0XB278);
	op_stkvar	(x,	1);
	create_insn	(x=0XB27C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB284);
	op_stkvar	(x,	1);
	create_insn	(x=0XB288);
	op_stkvar	(x,	1);
	create_insn	(x=0XB290);
	op_stkvar	(x,	1);
	create_insn	(x=0XB294);
	op_stkvar	(x,	1);
	set_cmt	(0XB29C,	"ptTime",	0);
	create_insn	(x=0XB2A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB2A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XB2AC);
	op_stkvar	(x,	1);
	set_cmt	(0XB2B4,	"pMutex",	0);
	create_insn	(x=0XB2BC);
	op_stkvar	(x,	1);
	set_cmt	(0XB2C4,	"cond",	0);
	set_cmt	(0XB2C8,	"cond_attr",	0);
	create_insn	(x=0XB2D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XB2DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XB2E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XB2E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB2E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XB2EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XB2F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XB2F4);
	op_stkvar	(x,	1);
	set_cmt	(0XB2FC,	"mutex",	0);
	create_insn	(x=0XB304);
	op_stkvar	(x,	1);
	set_cmt	(0XB308,	"tv",	0);
	set_cmt	(0XB30C,	"tz",	0);
	create_insn	(x=0XB314);
	op_stkvar	(x,	1);
	create_insn	(x=0XB348);
	op_stkvar	(x,	1);
	create_insn	(x=0XB364);
	op_stkvar	(x,	1);
	create_insn	(x=0XB38C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB390);
	op_stkvar	(x,	1);
	create_insn	(x=0XB394);
	op_stkvar	(x,	1);
	create_insn	(x=0XB3C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB3C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XB41C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB420);
	op_stkvar	(x,	1);
	set_cmt	(0XB424,	"pPro",	0);
	create_insn	(x=0XB424);
	op_stkvar	(x,	1);
	set_cmt	(0XB428,	"pData",	0);
	set_cmt	(0XB430,	"pPro",	0);
	create_insn	(x=0XB430);
	op_stkvar	(x,	1);
	set_cmt	(0XB434,	"pCmd",	0);
	create_insn	(x=0XB434);
	op_stkvar	(x,	1);
	set_cmt	(0XB438,	"pData",	0);
	create_insn	(x=0XB438);
	op_stkvar	(x,	1);
	set_cmt	(0XB43C,	"ulLen",	0);
	create_insn	(x=0XB43C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB444);
	op_stkvar	(x,	1);
	create_insn	(x=0XB44C);
	op_stkvar	(x,	1);
	set_cmt	(0XB454,	"abstime",	0);
	create_insn	(x=0XB454);
	op_stkvar	(x,	1);
	set_cmt	(0XB458,	"cond",	0);
	set_cmt	(0XB45C,	"mutex",	0);
	create_insn	(x=0XB468);
	op_stkvar	(x,	1);
	create_insn	(x=0XB46C);
	op_stkvar	(x,	1);
	set_cmt	(0XB474,	"mutex",	0);
	create_insn	(x=0XB47C);
	op_stkvar	(x,	1);
	set_cmt	(0XB480,	"pPro",	0);
	create_insn	(x=0XB480);
	op_stkvar	(x,	1);
	set_cmt	(0XB484,	"pData",	0);
	create_insn	(x=0XB48C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB49C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB4A0);
	op_stkvar	(x,	1);
	set_cmt	(0XB4A8,	"mutex",	0);
	create_insn	(x=0XB4B0);
	op_stkvar	(x,	1);
	set_cmt	(0XB4B8,	"cond",	0);
	create_insn	(x=0XB4C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XB4C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB4C8);
	op_stkvar	(x,	1);
	create_dword	(0XB4D8);
	create_insn	(0XB4DC);
	set_name	(0XB4DC,	"Pro_Cmd_Get_Version");
	create_insn	(x=0XB4E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XB4EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XB4F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XB4F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XB4FC);
	op_stkvar	(x,	1);
	set_cmt	(0XB500,	"s",	0);
	set_cmt	(0XB504,	"c",	0);
	set_cmt	(0XB508,	"n",	0);
	create_insn	(x=0XB514);
	op_stkvar	(x,	1);
	create_insn	(x=0XB518);
	op_stkvar	(x,	1);
	create_insn	(x=0XB51C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB524);
	op_stkvar	(x,	1);
	create_insn	(x=0XB52C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB534);
	op_stkvar	(x,	1);
	create_insn	(x=0XB53C);
	op_stkvar	(x,	1);
	set_cmt	(0XB540,	"pPro",	0);
	create_insn	(x=0XB540);
	op_stkvar	(x,	1);
	create_insn	(x=0XB554);
	op_stkvar	(x,	1);
	create_insn	(x=0XB55C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB560);
	op_stkvar	(x,	1);
	set_cmt	(0XB564,	"ulSendTimeout",	0);
	create_insn	(x=0XB564);
	op_stkvar	(x,	1);
	create_insn	(x=0XB568);
	op_stkvar	(x,	1);
	set_cmt	(0XB56C,	"pRecvData",	0);
	create_insn	(x=0XB56C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB570);
	op_stkvar	(x,	1);
	set_cmt	(0XB574,	"pulRecvLen",	0);
	create_insn	(x=0XB574);
	op_stkvar	(x,	1);
	set_cmt	(0XB57C,	"ulRecvMaxLen",	0);
	create_insn	(x=0XB57C);
	op_stkvar	(x,	1);
	set_cmt	(0XB580,	"pPro",	0);
	create_insn	(x=0XB580);
	op_stkvar	(x,	1);
	set_cmt	(0XB584,	"pCmd",	0);
	set_cmt	(0XB588,	"pSendData",	0);
	set_cmt	(0XB58C,	"ulSendLen",	0);
	create_insn	(x=0XB5A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB5AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XB5BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XB5C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB5D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB5DC);
	op_stkvar	(x,	1);
	set_cmt	(0XB5E4,	"pOut",	0);
	create_insn	(x=0XB5E4);
	op_stkvar	(x,	1);
	set_cmt	(0XB5E8,	"pIn",	0);
	create_insn	(x=0XB5F0);
	op_stkvar	(x,	1);
	set_cmt	(0XB5F8,	"pOut",	0);
	create_insn	(x=0XB5F8);
	op_stkvar	(x,	1);
	set_cmt	(0XB5FC,	"pIn",	0);
	create_insn	(x=0XB604);
	op_stkvar	(x,	1);
	create_insn	(x=0XB610);
	op_stkvar	(x,	1);
	create_insn	(x=0XB614);
	op_stkvar	(x,	1);
	create_insn	(x=0XB620);
	op_stkvar	(x,	1);
	create_insn	(x=0XB630);
	op_stkvar	(x,	1);
	create_insn	(x=0XB634);
	op_stkvar	(x,	1);
	create_dword	(0XB644);
	create_insn	(0XB648);
	set_name	(0XB648,	"Pro_Cmd_Enter_Loader");
	create_insn	(x=0XB654);
	op_stkvar	(x,	1);
	create_insn	(x=0XB65C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB660);
	op_stkvar	(x,	1);
	create_insn	(x=0XB664);
	op_stkvar	(x,	1);
	set_cmt	(0XB668,	"s",	0);
	set_cmt	(0XB66C,	"c",	0);
	set_cmt	(0XB670,	"n",	0);
	create_insn	(x=0XB67C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB680);
	op_stkvar	(x,	1);
	create_insn	(x=0XB684);
	op_stkvar	(x,	1);
	create_insn	(x=0XB68C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB694);
	op_stkvar	(x,	1);
	create_insn	(x=0XB69C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB6A4);
	op_stkvar	(x,	1);
	set_cmt	(0XB6A8,	"pPro",	0);
	create_insn	(x=0XB6A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XB6BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XB6C4);
	op_stkvar	(x,	1);
	set_cmt	(0XB6C8,	"s",	0);
	set_cmt	(0XB6CC,	"c",	0);
	set_cmt	(0XB6D0,	"n",	0);
	create_insn	(x=0XB6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XB6E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XB6E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB6E8);
	op_stkvar	(x,	1);
	set_cmt	(0XB6EC,	"ulSendTimeout",	0);
	create_insn	(x=0XB6EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XB6F0);
	op_stkvar	(x,	1);
	set_cmt	(0XB6F4,	"pRecvData",	0);
	create_insn	(x=0XB6F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB6F8);
	op_stkvar	(x,	1);
	set_cmt	(0XB6FC,	"pulRecvLen",	0);
	create_insn	(x=0XB6FC);
	op_stkvar	(x,	1);
	set_cmt	(0XB704,	"ulRecvMaxLen",	0);
	create_insn	(x=0XB704);
	op_stkvar	(x,	1);
	set_cmt	(0XB708,	"pPro",	0);
	create_insn	(x=0XB708);
	op_stkvar	(x,	1);
	set_cmt	(0XB70C,	"pCmd",	0);
	set_cmt	(0XB710,	"pSendData",	0);
	set_cmt	(0XB714,	"ulSendLen",	0);
	create_insn	(x=0XB714);
	op_stkvar	(x,	1);
	create_insn	(x=0XB72C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB734);
	op_stkvar	(x,	1);
	create_insn	(x=0XB744);
	op_stkvar	(x,	1);
	create_insn	(x=0XB74C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB75C);
	op_stkvar	(x,	1);
	create_insn	(0XB764);
	create_insn	(x=0XB768);
	op_stkvar	(x,	1);
	create_insn	(x=0XB76C);
	op_stkvar	(x,	1);
	create_dword	(0XB77C);
	create_insn	(0XB780);
	set_name	(0XB780,	"Pro_Cmd_Get_State");
	create_insn	(x=0XB78C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB790);
	op_stkvar	(x,	1);
	create_insn	(x=0XB794);
	op_stkvar	(x,	1);
	create_insn	(x=0XB79C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB7A0);
	op_stkvar	(x,	1);
	set_cmt	(0XB7A4,	"s",	0);
	set_cmt	(0XB7A8,	"c",	0);
	set_cmt	(0XB7AC,	"n",	0);
	create_insn	(x=0XB7B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XB7BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XB7C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XB7C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XB7D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XB7D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XB7E0);
	op_stkvar	(x,	1);
	set_cmt	(0XB7E4,	"pPro",	0);
	create_insn	(x=0XB7E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB7F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XB800);
	op_stkvar	(x,	1);
	set_cmt	(0XB804,	"s",	0);
	set_cmt	(0XB808,	"c",	0);
	set_cmt	(0XB80C,	"n",	0);
	create_insn	(x=0XB818);
	op_stkvar	(x,	1);
	create_insn	(x=0XB81C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB820);
	op_stkvar	(x,	1);
	create_insn	(x=0XB824);
	op_stkvar	(x,	1);
	set_cmt	(0XB828,	"ulSendTimeout",	0);
	create_insn	(x=0XB828);
	op_stkvar	(x,	1);
	create_insn	(x=0XB82C);
	op_stkvar	(x,	1);
	set_cmt	(0XB830,	"pRecvData",	0);
	create_insn	(x=0XB830);
	op_stkvar	(x,	1);
	create_insn	(x=0XB834);
	op_stkvar	(x,	1);
	set_cmt	(0XB838,	"pulRecvLen",	0);
	create_insn	(x=0XB838);
	op_stkvar	(x,	1);
	set_cmt	(0XB840,	"ulRecvMaxLen",	0);
	create_insn	(x=0XB840);
	op_stkvar	(x,	1);
	set_cmt	(0XB844,	"pPro",	0);
	create_insn	(x=0XB844);
	op_stkvar	(x,	1);
	set_cmt	(0XB848,	"pCmd",	0);
	set_cmt	(0XB84C,	"pSendData",	0);
	set_cmt	(0XB850,	"ulSendLen",	0);
	create_insn	(x=0XB850);
	op_stkvar	(x,	1);
	create_insn	(x=0XB868);
	op_stkvar	(x,	1);
	create_insn	(x=0XB870);
	op_stkvar	(x,	1);
	create_insn	(x=0XB880);
	op_stkvar	(x,	1);
	create_insn	(x=0XB888);
	op_stkvar	(x,	1);
	create_insn	(x=0XB898);
	op_stkvar	(x,	1);
	create_insn	(x=0XB8A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XB8A4);
	op_hex		(x,	1);
	create_insn	(x=0XB8A8);
	op_hex		(x,	1);
	create_insn	(x=0XB8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB8C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB8D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB8D8);
	op_stkvar	(x,	1);
	create_dword	(0XB8E8);
	create_insn	(0XB8EC);
	set_name	(0XB8EC,	"Pro_Cmd_Load_Start");
	create_insn	(x=0XB8F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XB8FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XB900);
	op_stkvar	(x,	1);
	create_insn	(x=0XB908);
	op_stkvar	(x,	1);
	create_insn	(x=0XB90C);
	op_stkvar	(x,	1);
	set_cmt	(0XB910,	"s",	0);
	set_cmt	(0XB914,	"c",	0);
	set_cmt	(0XB918,	"n",	0);
	create_insn	(x=0XB924);
	op_stkvar	(x,	1);
	create_insn	(x=0XB928);
	op_stkvar	(x,	1);
	create_insn	(x=0XB92C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB934);
	op_stkvar	(x,	1);
	create_insn	(x=0XB93C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB944);
	op_stkvar	(x,	1);
	create_insn	(x=0XB94C);
	op_stkvar	(x,	1);
	set_cmt	(0XB950,	"pPro",	0);
	create_insn	(x=0XB950);
	op_stkvar	(x,	1);
	create_insn	(x=0XB964);
	op_stkvar	(x,	1);
	create_insn	(x=0XB96C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB970);
	op_stkvar	(x,	1);
	create_insn	(x=0XB974);
	op_stkvar	(x,	1);
	create_insn	(x=0XB980);
	op_stkvar	(x,	1);
	create_insn	(x=0XB988);
	op_stkvar	(x,	1);
	set_cmt	(0XB98C,	"pOut",	0);
	create_insn	(x=0XB98C);
	op_stkvar	(x,	1);
	set_cmt	(0XB990,	"ulData",	0);
	create_insn	(x=0XB990);
	op_stkvar	(x,	1);
	create_insn	(x=0XB998);
	op_stkvar	(x,	1);
	create_insn	(x=0XB9A0);
	op_stkvar	(x,	1);
	set_cmt	(0XB9A4,	"s",	0);
	create_insn	(x=0XB9A4);
	op_stkvar	(x,	1);
	set_cmt	(0XB9A8,	"c",	0);
	set_cmt	(0XB9AC,	"n",	0);
	create_insn	(x=0XB9B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB9BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XB9C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XB9C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB9CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XB9D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XB9D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB9D8);
	op_stkvar	(x,	1);
	set_cmt	(0XB9DC,	"ulSendTimeout",	0);
	create_insn	(x=0XB9DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XB9E0);
	op_stkvar	(x,	1);
	set_cmt	(0XB9E4,	"pRecvData",	0);
	create_insn	(x=0XB9E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XB9E8);
	op_stkvar	(x,	1);
	set_cmt	(0XB9EC,	"pulRecvLen",	0);
	create_insn	(x=0XB9EC);
	op_stkvar	(x,	1);
	set_cmt	(0XB9F4,	"ulRecvMaxLen",	0);
	create_insn	(x=0XB9F4);
	op_stkvar	(x,	1);
	set_cmt	(0XB9F8,	"pPro",	0);
	create_insn	(x=0XB9F8);
	op_stkvar	(x,	1);
	set_cmt	(0XB9FC,	"pCmd",	0);
	set_cmt	(0XBA00,	"pSendData",	0);
	set_cmt	(0XBA04,	"ulSendLen",	0);
	create_insn	(x=0XBA04);
	op_stkvar	(x,	1);
	create_insn	(x=0XBA1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBA24);
	op_stkvar	(x,	1);
	create_insn	(x=0XBA34);
	op_stkvar	(x,	1);
	create_insn	(x=0XBA3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBA40);
	op_stkvar	(x,	1);
	create_insn	(x=0XBA48);
	op_stkvar	(x,	1);
	set_cmt	(0XBA50,	"pOut",	0);
	create_insn	(x=0XBA50);
	op_stkvar	(x,	1);
	set_cmt	(0XBA54,	"pIn",	0);
	create_insn	(x=0XBA60);
	op_stkvar	(x,	1);
	create_insn	(x=0XBA64);
	op_stkvar	(x,	1);
	create_dword	(0XBA74);
	create_insn	(0XBA78);
	set_name	(0XBA78,	"Pro_Cmd_Load_Data");
	create_insn	(x=0XBA84);
	op_stkvar	(x,	1);
	create_insn	(x=0XBA88);
	op_stkvar	(x,	1);
	create_insn	(x=0XBA94);
	op_stkvar	(x,	1);
	create_insn	(x=0XBA9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBAA0);
	op_stkvar	(x,	1);
	set_cmt	(0XBAA4,	"s",	0);
	set_cmt	(0XBAA8,	"c",	0);
	set_cmt	(0XBAAC,	"n",	0);
	create_insn	(x=0XBAB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XBABC);
	op_stkvar	(x,	1);
	create_insn	(x=0XBAC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XBAC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XBAD0);
	op_stkvar	(x,	1);
	create_insn	(x=0XBAD8);
	op_stkvar	(x,	1);
	create_insn	(x=0XBAE0);
	op_stkvar	(x,	1);
	set_cmt	(0XBAE4,	"pPro",	0);
	create_insn	(x=0XBAE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XBAF8);
	op_stkvar	(x,	1);
	create_insn	(x=0XBB00);
	op_stkvar	(x,	1);
	create_insn	(x=0XBB04);
	op_stkvar	(x,	1);
	create_insn	(x=0XBB08);
	op_stkvar	(x,	1);
	create_insn	(x=0XBB0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBB14);
	op_stkvar	(x,	1);
	create_insn	(x=0XBB1C);
	op_stkvar	(x,	1);
	set_cmt	(0XBB20,	"pOut",	0);
	create_insn	(x=0XBB20);
	op_stkvar	(x,	1);
	set_cmt	(0XBB24,	"ulData",	0);
	create_insn	(x=0XBB24);
	op_stkvar	(x,	1);
	create_insn	(x=0XBB2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBB34);
	op_stkvar	(x,	1);
	create_insn	(x=0XBB38);
	op_stkvar	(x,	1);
	set_cmt	(0XBB3C,	"pOut",	0);
	create_insn	(x=0XBB3C);
	op_stkvar	(x,	1);
	set_cmt	(0XBB40,	"usData",	0);
	create_insn	(x=0XBB48);
	op_stkvar	(x,	1);
	create_insn	(x=0XBB50);
	op_stkvar	(x,	1);
	create_insn	(x=0XBB54);
	op_stkvar	(x,	1);
	create_insn	(x=0XBB58);
	op_stkvar	(x,	1);
	create_insn	(x=0XBB60);
	op_stkvar	(x,	1);
	create_insn	(x=0XBB70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XBB7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBB84);
	op_stkvar	(x,	1);
	set_cmt	(0XBB88,	"dest",	0);
	create_insn	(x=0XBB88);
	op_stkvar	(x,	1);
	set_cmt	(0XBB8C,	"src",	0);
	create_insn	(x=0XBB8C);
	op_stkvar	(x,	1);
	set_cmt	(0XBB90,	"n",	0);
	create_insn	(x=0XBB98);
	op_stkvar	(x,	1);
	create_insn	(x=0XBB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBBA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XBBA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XBBAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XBBB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XBBB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XBBBC);
	op_stkvar	(x,	1);
	create_insn	(x=0XBBC0);
	op_stkvar	(x,	1);
	set_cmt	(0XBBC4,	"ulSendTimeout",	0);
	create_insn	(x=0XBBC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XBBC8);
	op_stkvar	(x,	1);
	set_cmt	(0XBBCC,	"pRecvData",	0);
	create_insn	(x=0XBBCC);
	op_stkvar	(x,	1);
	create_insn	(x=0XBBD0);
	op_stkvar	(x,	1);
	set_cmt	(0XBBD4,	"pulRecvLen",	0);
	create_insn	(x=0XBBD4);
	op_stkvar	(x,	1);
	set_cmt	(0XBBDC,	"ulRecvMaxLen",	0);
	create_insn	(x=0XBBDC);
	op_stkvar	(x,	1);
	set_cmt	(0XBBE0,	"pPro",	0);
	create_insn	(x=0XBBE0);
	op_stkvar	(x,	1);
	set_cmt	(0XBBE4,	"pCmd",	0);
	set_cmt	(0XBBE8,	"pSendData",	0);
	set_cmt	(0XBBEC,	"ulSendLen",	0);
	create_insn	(x=0XBBEC);
	op_stkvar	(x,	1);
	create_insn	(x=0XBC04);
	op_stkvar	(x,	1);
	create_insn	(x=0XBC0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBC1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBC24);
	op_stkvar	(x,	1);
	create_insn	(x=0XBC28);
	op_stkvar	(x,	1);
	create_insn	(x=0XBC30);
	op_stkvar	(x,	1);
	set_cmt	(0XBC38,	"pOut",	0);
	create_insn	(x=0XBC38);
	op_stkvar	(x,	1);
	set_cmt	(0XBC3C,	"pIn",	0);
	create_insn	(x=0XBC44);
	op_stkvar	(x,	1);
	create_insn	(x=0XBC54);
	op_stkvar	(x,	1);
	create_insn	(0XBC5C);
	create_insn	(x=0XBC60);
	op_stkvar	(x,	1);
	create_insn	(x=0XBC64);
	op_stkvar	(x,	1);
	create_dword	(0XBC74);
	create_dword	(x=0XBC78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XBC7C);
	set_name	(0XBC7C,	"Pro_Cmd_Load_Finish");
	create_insn	(x=0XBC88);
	op_stkvar	(x,	1);
	create_insn	(x=0XBC8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBC90);
	op_stkvar	(x,	1);
	create_insn	(x=0XBC98);
	op_stkvar	(x,	1);
	create_insn	(x=0XBC9C);
	op_stkvar	(x,	1);
	set_cmt	(0XBCA0,	"s",	0);
	set_cmt	(0XBCA4,	"c",	0);
	set_cmt	(0XBCA8,	"n",	0);
	create_insn	(x=0XBCB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XBCB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XBCBC);
	op_stkvar	(x,	1);
	create_insn	(x=0XBCC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XBCCC);
	op_stkvar	(x,	1);
	create_insn	(x=0XBCD4);
	op_stkvar	(x,	1);
	create_insn	(x=0XBCDC);
	op_stkvar	(x,	1);
	set_cmt	(0XBCE0,	"pPro",	0);
	create_insn	(x=0XBCE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XBCF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XBCFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XBD00);
	op_stkvar	(x,	1);
	create_insn	(x=0XBD04);
	op_stkvar	(x,	1);
	create_insn	(x=0XBD10);
	op_stkvar	(x,	1);
	create_insn	(x=0XBD18);
	op_stkvar	(x,	1);
	set_cmt	(0XBD1C,	"dest",	0);
	create_insn	(x=0XBD1C);
	op_stkvar	(x,	1);
	set_cmt	(0XBD20,	"src",	0);
	create_insn	(x=0XBD20);
	op_stkvar	(x,	1);
	set_cmt	(0XBD24,	"n",	0);
	create_insn	(x=0XBD2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBD34);
	op_stkvar	(x,	1);
	create_insn	(x=0XBD38);
	op_stkvar	(x,	1);
	create_insn	(x=0XBD3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBD44);
	op_stkvar	(x,	1);
	create_insn	(x=0XBD48);
	op_stkvar	(x,	1);
	create_insn	(x=0XBD4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBD50);
	op_stkvar	(x,	1);
	set_cmt	(0XBD54,	"ulSendTimeout",	0);
	create_insn	(x=0XBD54);
	op_stkvar	(x,	1);
	create_insn	(x=0XBD58);
	op_stkvar	(x,	1);
	set_cmt	(0XBD5C,	"pRecvData",	0);
	create_insn	(x=0XBD5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBD60);
	op_stkvar	(x,	1);
	set_cmt	(0XBD64,	"pulRecvLen",	0);
	create_insn	(x=0XBD64);
	op_stkvar	(x,	1);
	set_cmt	(0XBD6C,	"ulRecvMaxLen",	0);
	create_insn	(x=0XBD6C);
	op_stkvar	(x,	1);
	set_cmt	(0XBD70,	"pPro",	0);
	create_insn	(x=0XBD70);
	op_stkvar	(x,	1);
	set_cmt	(0XBD74,	"pCmd",	0);
	set_cmt	(0XBD78,	"pSendData",	0);
	set_cmt	(0XBD7C,	"ulSendLen",	0);
	create_insn	(x=0XBD7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBD94);
	op_stkvar	(x,	1);
	create_insn	(x=0XBD9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBDAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XBDB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XBDB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XBDC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XBDC8);
	op_stkvar	(x,	1);
	create_dword	(0XBDD8);
	create_insn	(0XBDDC);
	set_name	(0XBDDC,	"Pro_Cmd_Reboot");
	create_insn	(x=0XBDE8);
	op_stkvar	(x,	1);
	create_insn	(x=0XBDEC);
	op_stkvar	(x,	1);
	create_insn	(x=0XBDF8);
	op_stkvar	(x,	1);
	create_insn	(x=0XBE00);
	op_stkvar	(x,	1);
	create_insn	(x=0XBE04);
	op_stkvar	(x,	1);
	set_cmt	(0XBE08,	"s",	0);
	set_cmt	(0XBE0C,	"c",	0);
	set_cmt	(0XBE10,	"n",	0);
	create_insn	(x=0XBE1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBE20);
	op_stkvar	(x,	1);
	create_insn	(x=0XBE24);
	op_stkvar	(x,	1);
	create_insn	(x=0XBE2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBE34);
	op_stkvar	(x,	1);
	create_insn	(x=0XBE3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBE44);
	op_stkvar	(x,	1);
	set_cmt	(0XBE48,	"pPro",	0);
	create_insn	(x=0XBE48);
	op_stkvar	(x,	1);
	create_insn	(x=0XBE5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBE64);
	op_stkvar	(x,	1);
	create_insn	(x=0XBE68);
	op_stkvar	(x,	1);
	create_insn	(x=0XBE6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBE78);
	op_stkvar	(x,	1);
	create_insn	(x=0XBE80);
	op_stkvar	(x,	1);
	create_insn	(x=0XBE84);
	op_stkvar	(x,	1);
	create_insn	(x=0XBE88);
	op_stkvar	(x,	1);
	create_insn	(x=0XBE90);
	op_stkvar	(x,	1);
	create_insn	(x=0XBE98);
	op_stkvar	(x,	1);
	set_cmt	(0XBE9C,	"pOut",	0);
	create_insn	(x=0XBE9C);
	op_stkvar	(x,	1);
	set_cmt	(0XBEA0,	"ulData",	0);
	create_insn	(x=0XBEA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XBEA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XBEB0);
	op_stkvar	(x,	1);
	set_cmt	(0XBEB4,	"s",	0);
	create_insn	(x=0XBEB4);
	op_stkvar	(x,	1);
	set_cmt	(0XBEB8,	"c",	0);
	set_cmt	(0XBEBC,	"n",	0);
	create_insn	(x=0XBEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XBECC);
	op_stkvar	(x,	1);
	create_insn	(x=0XBED0);
	op_stkvar	(x,	1);
	create_insn	(x=0XBED4);
	op_stkvar	(x,	1);
	create_insn	(x=0XBEDC);
	op_stkvar	(x,	1);
	create_insn	(x=0XBEE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XBEE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XBEE8);
	op_stkvar	(x,	1);
	set_cmt	(0XBEEC,	"ulSendTimeout",	0);
	create_insn	(x=0XBEEC);
	op_stkvar	(x,	1);
	create_insn	(x=0XBEF0);
	op_stkvar	(x,	1);
	set_cmt	(0XBEF4,	"pRecvData",	0);
	create_insn	(x=0XBEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XBEF8);
	op_stkvar	(x,	1);
	set_cmt	(0XBEFC,	"pulRecvLen",	0);
	create_insn	(x=0XBEFC);
	op_stkvar	(x,	1);
	set_cmt	(0XBF04,	"ulRecvMaxLen",	0);
	create_insn	(x=0XBF04);
	op_stkvar	(x,	1);
	set_cmt	(0XBF08,	"pPro",	0);
	create_insn	(x=0XBF08);
	op_stkvar	(x,	1);
	set_cmt	(0XBF0C,	"pCmd",	0);
	set_cmt	(0XBF10,	"pSendData",	0);
	set_cmt	(0XBF14,	"ulSendLen",	0);
	create_insn	(x=0XBF14);
	op_stkvar	(x,	1);
	create_insn	(x=0XBF2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBF34);
	op_stkvar	(x,	1);
	create_insn	(x=0XBF44);
	op_stkvar	(x,	1);
	create_insn	(x=0XBF4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBF5C);
	op_stkvar	(x,	1);
	create_insn	(0XBF64);
	create_insn	(x=0XBF68);
	op_stkvar	(x,	1);
	create_insn	(x=0XBF6C);
	op_stkvar	(x,	1);
	create_dword	(0XBF7C);
	create_insn	(0XBF80);
	set_name	(0XBF80,	"Pro_Cmd_Update_Ctrl");
	create_insn	(x=0XBF8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBF90);
	op_stkvar	(x,	1);
	create_insn	(x=0XBF94);
	op_stkvar	(x,	1);
	create_insn	(x=0XBF9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XBFA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XBFAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XBFB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XBFBC);
	op_stkvar	(x,	1);
	create_insn	(x=0XBFC4);
	op_stkvar	(x,	1);
	set_cmt	(0XBFC8,	"pPro",	0);
	create_insn	(x=0XBFC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XBFDC);
	op_stkvar	(x,	1);
	create_insn	(x=0XBFE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XBFE8);
	op_hex		(x,	1);
	create_insn	(x=0XBFEC);
	op_stkvar	(x,	1);
	create_insn	(x=0XBFF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XBFF8);
	op_stkvar	(x,	1);
	create_insn	(x=0XC004);
	op_stkvar	(x,	1);
	create_insn	(x=0XC008);
	op_stkvar	(x,	1);
	create_insn	(x=0XC00C);
	op_stkvar	(x,	1);
	set_cmt	(0XC010,	"ulSendTimeout",	0);
	create_insn	(x=0XC010);
	op_stkvar	(x,	1);
	create_insn	(x=0XC014);
	op_stkvar	(x,	1);
	set_cmt	(0XC018,	"pRecvData",	0);
	create_insn	(x=0XC018);
	op_stkvar	(x,	1);
	create_insn	(x=0XC01C);
	op_stkvar	(x,	1);
	set_cmt	(0XC020,	"pulRecvLen",	0);
	create_insn	(x=0XC020);
	op_stkvar	(x,	1);
	set_cmt	(0XC028,	"ulRecvMaxLen",	0);
	create_insn	(x=0XC028);
	op_stkvar	(x,	1);
	set_cmt	(0XC02C,	"pPro",	0);
	create_insn	(x=0XC02C);
	op_stkvar	(x,	1);
	set_cmt	(0XC030,	"pCmd",	0);
	set_cmt	(0XC034,	"pSendData",	0);
	set_cmt	(0XC038,	"ulSendLen",	0);
	create_insn	(x=0XC038);
	op_stkvar	(x,	1);
	create_insn	(x=0XC050);
	op_stkvar	(x,	1);
	create_insn	(x=0XC058);
	op_stkvar	(x,	1);
	create_insn	(x=0XC068);
	op_stkvar	(x,	1);
	create_insn	(x=0XC070);
	op_stkvar	(x,	1);
	create_insn	(x=0XC080);
	op_stkvar	(x,	1);
	create_insn	(0XC088);
	create_insn	(x=0XC08C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC094);
	op_stkvar	(x,	1);
	set_cmt	(0XC098,	"pData",	0);
	create_insn	(x=0XC098);
	op_stkvar	(x,	1);
	set_cmt	(0XC09C,	"pPro",	0);
	create_insn	(x=0XC09C);
	op_stkvar	(x,	1);
	set_cmt	(0XC0A0,	"pCmd",	0);
	set_cmt	(0XC0A4,	"ulLen",	0);
	create_insn	(x=0XC0A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XC0B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XC0B4);
	op_stkvar	(x,	1);
	create_dword	(0XC0C4);
	create_insn	(0XC0C8);
	set_name	(0XC0C8,	"Key_Init");
	set_cmt	(0XC0D4,	"ulElementNum",	0);
	set_cmt	(0XC0D8,	"ulElementSize",	0);
	create_insn	(x=0XC0E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC0EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC100);
	op_stkvar	(x,	1);
	create_insn	(x=0XC108);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XC10C,	"oflag",	0);
	create_insn	(x=0XC118);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC120);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC130);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC138);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XC140,	"fd",	0);
	set_cmt	(0XC144,	"cmd",	0);
	create_insn	(x=0XC150);
	op_hex		(x,	1);
	set_cmt	(0XC154,	"fd",	0);
	set_cmt	(0XC158,	"cmd",	0);
	create_insn	(x=0XC168);
	op_stkvar	(x,	1);
	create_insn	(x=0XC170);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XC178,	"pQueueHandle",	0);
	create_insn	(x=0XC184);
	op_stkvar	(x,	1);
	create_insn	(x=0XC188);
	op_stkvar	(x,	1);
	create_dword	(x=0XC198);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC19C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC1A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XC1A4);
	set_name	(0XC1A4,	"KeyScan");
	create_insn	(x=0XC1B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XC1D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XC1E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XC1E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC1F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XC1FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XC204);
	op_stkvar	(x,	1);
	create_insn	(x=0XC208);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC210);
	op_stkvar	(x,	1);
	create_insn	(x=0XC21C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC224);
	op_stkvar	(x,	1);
	create_insn	(x=0XC230);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XC238,	"pQueueHandle",	0);
	set_cmt	(0XC23C,	"pData",	0);
	set_cmt	(0XC240,	"ulDataLen",	0);
	create_insn	(x=0XC248);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC250);
	op_stkvar	(x,	1);
	set_cmt	(0XC254,	"fd",	0);
	set_cmt	(0XC258,	"buf",	0);
	set_cmt	(0XC25C,	"nbytes",	0);
	set_cmt	(0XC270,	"useconds",	0);
	create_insn	(x=0XC270);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0XC27C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC280);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC284);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC288);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC28C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XC290);
	set_name	(0XC290,	"GetKey");
	create_insn	(x=0XC29C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC2A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XC2A8,	"pQueueHandle",	0);
	set_cmt	(0XC2AC,	"pData",	0);
	create_insn	(x=0XC2AC);
	op_stkvar	(x,	1);
	set_cmt	(0XC2B0,	"ulDataLen",	0);
	create_dword	(x=0XC2C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XC2CC);
	set_name	(0XC2CC,	"Queue_Create");
	create_insn	(x=0XC2D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XC2DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XC2E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XC2EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XC2FC);
	op_stkvar	(x,	1);
	set_cmt	(0XC304,	"size",	0);
	create_insn	(0XC304);
	create_insn	(x=0XC310);
	op_stkvar	(x,	1);
	create_insn	(x=0XC314);
	op_stkvar	(x,	1);
	create_insn	(x=0XC324);
	op_stkvar	(x,	1);
	set_cmt	(0XC32C,	"s",	0);
	create_insn	(x=0XC32C);
	op_stkvar	(x,	1);
	set_cmt	(0XC330,	"c",	0);
	set_cmt	(0XC334,	"n",	0);
	create_insn	(x=0XC33C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC340);
	op_stkvar	(x,	1);
	create_insn	(x=0XC348);
	op_stkvar	(x,	1);
	create_insn	(x=0XC34C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC354);
	op_stkvar	(x,	1);
	create_insn	(x=0XC35C);
	op_stkvar	(x,	1);
	set_cmt	(0XC368,	"size",	0);
	create_insn	(x=0XC378);
	op_stkvar	(x,	1);
	create_insn	(x=0XC380);
	op_stkvar	(x,	1);
	create_insn	(x=0XC390);
	op_stkvar	(x,	1);
	create_insn	(x=0XC394);
	op_stkvar	(x,	1);
	set_cmt	(0XC39C,	"ptr",	0);
	create_insn	(x=0XC39C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC3A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XC3AC);
	op_stkvar	(x,	1);
	create_insn	(0XC3BC);
	set_name	(0XC3BC,	"Queue_Delete");
	create_insn	(x=0XC3C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XC3CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XC3DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XC3E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XC3F4);
	op_stkvar	(x,	1);
	set_cmt	(0XC3FC,	"ptr",	0);
	set_cmt	(0XC404,	"ptr",	0);
	create_insn	(x=0XC404);
	op_stkvar	(x,	1);
	create_insn	(x=0XC410);
	op_stkvar	(x,	1);
	create_insn	(x=0XC414);
	op_stkvar	(x,	1);
	create_insn	(0XC424);
	set_name	(0XC424,	"Queue_GetData");
	create_insn	(x=0XC430);
	op_stkvar	(x,	1);
	create_insn	(x=0XC434);
	op_stkvar	(x,	1);
	create_insn	(x=0XC438);
	op_stkvar	(x,	1);
	create_insn	(x=0XC43C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC448);
	op_stkvar	(x,	1);
	create_insn	(x=0XC454);
	op_stkvar	(x,	1);
	create_insn	(x=0XC45C);
	op_stkvar	(x,	1);
	set_cmt	(0XC468,	"pQueueHandle",	0);
	create_insn	(x=0XC468);
	op_stkvar	(x,	1);
	create_insn	(x=0XC480);
	op_stkvar	(x,	1);
	create_insn	(x=0XC488);
	op_stkvar	(x,	1);
	create_insn	(x=0XC490);
	op_stkvar	(x,	1);
	create_insn	(x=0XC498);
	op_stkvar	(x,	1);
	create_insn	(x=0XC4A8);
	op_stkvar	(x,	1);
	set_cmt	(0XC4B0,	"dest",	0);
	create_insn	(x=0XC4B0);
	op_stkvar	(x,	1);
	set_cmt	(0XC4B4,	"src",	0);
	set_cmt	(0XC4B8,	"n",	0);
	create_insn	(x=0XC4C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XC4C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XC4DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XC4EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XC4F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XC504);
	op_stkvar	(x,	1);
	create_insn	(x=0XC508);
	op_stkvar	(x,	1);
	create_insn	(0XC518);
	set_name	(0XC518,	"Queue_PutData");
	create_insn	(x=0XC524);
	op_stkvar	(x,	1);
	create_insn	(x=0XC528);
	op_stkvar	(x,	1);
	create_insn	(x=0XC52C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC530);
	op_stkvar	(x,	1);
	create_insn	(x=0XC53C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC548);
	op_stkvar	(x,	1);
	create_insn	(x=0XC550);
	op_stkvar	(x,	1);
	set_cmt	(0XC55C,	"pQueueHandle",	0);
	create_insn	(x=0XC55C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC574);
	op_stkvar	(x,	1);
	create_insn	(x=0XC57C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC584);
	op_stkvar	(x,	1);
	create_insn	(x=0XC58C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC59C);
	op_stkvar	(x,	1);
	set_cmt	(0XC5A4,	"dest",	0);
	set_cmt	(0XC5A8,	"src",	0);
	create_insn	(x=0XC5A8);
	op_stkvar	(x,	1);
	set_cmt	(0XC5AC,	"n",	0);
	create_insn	(x=0XC5B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XC5BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XC5D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XC5E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XC5EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XC5F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XC5FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XC60C);
	op_stkvar	(x,	1);
	set_name	(0XC60C,	"Queue_ClearData");
	create_insn	(x=0XC618);
	op_stkvar	(x,	1);
	create_insn	(x=0XC61C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC628);
	op_stkvar	(x,	1);
	create_insn	(x=0XC640);
	op_stkvar	(x,	1);
	set_name	(0XC640,	"Queue_Empty");
	create_insn	(x=0XC64C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC650);
	op_stkvar	(x,	1);
	create_insn	(x=0XC658);
	op_stkvar	(x,	1);
	create_insn	(x=0XC66C);
	op_stkvar	(x,	1);
	create_insn	(0XC674);
	create_insn	(x=0XC678);
	op_stkvar	(x,	1);
	create_insn	(x=0XC67C);
	op_stkvar	(x,	1);
	create_insn	(0XC690);
	set_name	(0XC690,	"Queue_Full");
	create_insn	(x=0XC69C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC6A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XC6A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XC6B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XC6C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XC6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XC6F4);
	op_stkvar	(x,	1);
	create_insn	(0XC6FC);
	create_insn	(x=0XC700);
	op_stkvar	(x,	1);
	create_insn	(x=0XC704);
	op_stkvar	(x,	1);
	create_insn	(0XC714);
	set_name	(0XC714,	"Serial_Create");
	create_insn	(x=0XC720);
	op_stkvar	(x,	1);
	create_insn	(x=0XC724);
	op_stkvar	(x,	1);
	create_insn	(x=0XC728);
	op_stkvar	(x,	1);
	create_insn	(x=0XC72C);
	op_stkvar	(x,	1);
	set_cmt	(0XC730,	"size",	0);
	create_insn	(x=0XC73C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC740);
	op_stkvar	(x,	1);
	create_insn	(x=0XC750);
	op_stkvar	(x,	1);
	set_cmt	(0XC758,	"s",	0);
	create_insn	(x=0XC758);
	op_stkvar	(x,	1);
	set_cmt	(0XC75C,	"c",	0);
	set_cmt	(0XC760,	"n",	0);
	set_cmt	(0XC768,	"file",	0);
	create_insn	(x=0XC768);
	op_stkvar	(x,	1);
	set_cmt	(0XC76C,	"oflag",	0);
	create_insn	(x=0XC778);
	op_stkvar	(x,	1);
	create_insn	(x=0XC780);
	op_stkvar	(x,	1);
	create_insn	(x=0XC790);
	op_stkvar	(x,	1);
	create_insn	(x=0XC798);
	op_stkvar	(x,	1);
	set_cmt	(0XC7A0,	"fd",	0);
	set_cmt	(0XC7A4,	"cmd",	0);
	create_insn	(x=0XC7B0);
	op_hex		(x,	1);
	set_cmt	(0XC7B4,	"fd",	0);
	set_cmt	(0XC7B8,	"cmd",	0);
	create_insn	(x=0XC7C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XC7CC);
	op_stkvar	(x,	1);
	set_cmt	(0XC7D0,	"eParity",	0);
	create_insn	(x=0XC7D0);
	op_stkvar	(x,	1);
	set_cmt	(0XC7D4,	"slFd",	0);
	set_cmt	(0XC7D8,	"eBandRate",	0);
	create_insn	(x=0XC7D8);
	op_stkvar	(x,	1);
	set_cmt	(0XC7DC,	"eDatabit",	0);
	create_insn	(x=0XC7DC);
	op_stkvar	(x,	1);
	set_cmt	(0XC7E0,	"eStopBit",	0);
	create_insn	(x=0XC7E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XC7F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XC7F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XC800);
	op_stkvar	(x,	1);
	set_cmt	(0XC808,	"fd",	0);
	set_cmt	(0XC810,	"ptr",	0);
	create_insn	(x=0XC810);
	op_stkvar	(x,	1);
	create_insn	(x=0XC81C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC820);
	op_stkvar	(x,	1);
	create_dword	(0XC830);
	set_name	(0XC830,	"oflag");
	create_insn	(0XC834);
	set_name	(0XC834,	"SetAttr");
	create_insn	(x=0XC840);
	op_stkvar	(x,	1);
	create_insn	(x=0XC844);
	op_stkvar	(x,	1);
	create_insn	(x=0XC848);
	op_stkvar	(x,	1);
	create_insn	(x=0XC84C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC850);
	op_stkvar	(x,	1);
	set_cmt	(0XC854,	"fd",	0);
	create_insn	(x=0XC854);
	op_stkvar	(x,	1);
	set_cmt	(0XC858,	"termios_p",	0);
	create_insn	(x=0XC870);
	op_stkvar	(x,	1);
	create_insn	(0XC878);
	create_insn	(x=0XC87C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC884);
	op_stkvar	(x,	1);
	create_insn	(x=0XC888);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC894);
	op_stkvar	(x,	1);
	create_insn	(x=0XC8A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XC8A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC8B8);
	op_stkvar	(x,	1);
	set_cmt	(0XC8BC,	"termios_p",	0);
	set_cmt	(0XC8C0,	"speed",	0);
	create_insn	(x=0XC8C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XC8CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC8E0);
	op_stkvar	(x,	1);
	set_cmt	(0XC8E4,	"termios_p",	0);
	set_cmt	(0XC8E8,	"speed",	0);
	create_insn	(x=0XC8F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XC8FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XC900);
	op_stkvar	(x,	1);
	create_insn	(x=0XC90C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC910);
	op_hex		(x,	1);
	create_insn	(x=0XC914);
	op_stkvar	(x,	1);
	create_insn	(x=0XC918);
	op_stkvar	(x,	1);
	create_insn	(x=0XC91C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC920);
	op_stkvar	(x,	1);
	create_insn	(x=0XC92C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC93C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC940);
	op_hex		(x,	1);
	create_insn	(x=0XC944);
	op_stkvar	(x,	1);
	create_insn	(x=0XC94C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC950);
	op_hex		(x,	1);
	create_insn	(x=0XC954);
	op_stkvar	(x,	1);
	create_insn	(x=0XC958);
	op_stkvar	(x,	1);
	create_insn	(x=0XC95C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC960);
	op_stkvar	(x,	1);
	create_insn	(x=0XC96C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC97C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC980);
	op_hex		(x,	1);
	create_insn	(x=0XC984);
	op_stkvar	(x,	1);
	create_insn	(x=0XC98C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC990);
	op_hex		(x,	1);
	create_insn	(x=0XC994);
	op_stkvar	(x,	1);
	create_insn	(x=0XC998);
	op_stkvar	(x,	1);
	create_insn	(x=0XC99C);
	op_stkvar	(x,	1);
	create_insn	(x=0XC9A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XC9AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XC9B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XC9C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XC9CC);
	op_hex		(x,	1);
	create_insn	(x=0XC9D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XC9D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XC9D8);
	op_hex		(x,	1);
	create_insn	(x=0XC9DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XC9E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XC9E8);
	op_hex		(x,	1);
	create_insn	(x=0XC9EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XC9F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XC9F4);
	op_hex		(x,	1);
	create_insn	(x=0XC9F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XC9FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA00);
	op_hex		(x,	1);
	create_insn	(x=0XCA04);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA10);
	op_hex		(x,	1);
	create_insn	(x=0XCA14);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA18);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA1C);
	op_hex		(x,	1);
	create_insn	(x=0XCA20);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA24);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA28);
	op_hex		(x,	1);
	create_insn	(x=0XCA2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA30);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA34);
	op_hex		(x,	1);
	create_insn	(x=0XCA38);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA40);
	op_hex		(x,	1);
	create_insn	(x=0XCA44);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA48);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA4C);
	op_hex		(x,	1);
	create_insn	(x=0XCA50);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA54);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA58);
	op_hex		(x,	1);
	create_insn	(x=0XCA5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA60);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA64);
	op_hex		(x,	1);
	create_insn	(x=0XCA68);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA70);
	op_hex		(x,	1);
	create_insn	(x=0XCA74);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XCA84);
	op_stkvar	(x,	1);
	set_cmt	(0XCA88,	"fd",	0);
	create_insn	(x=0XCA88);
	op_stkvar	(x,	1);
	set_cmt	(0XCA8C,	"queue_selector",	0);
	create_insn	(x=0XCA94);
	op_stkvar	(x,	1);
	set_cmt	(0XCA98,	"fd",	0);
	create_insn	(x=0XCA98);
	op_stkvar	(x,	1);
	set_cmt	(0XCA9C,	"optional_actions",	0);
	set_cmt	(0XCAA0,	"termios_p",	0);
	create_insn	(x=0XCAAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XCAB0);
	op_stkvar	(x,	1);
	create_insn	(x=0XCAC0);
	op_stkvar	(x,	1);
	set_cmt	(0XCAC8,	"fd",	0);
	create_insn	(x=0XCAC8);
	op_stkvar	(x,	1);
	set_cmt	(0XCACC,	"queue_selector",	0);
	create_insn	(x=0XCAD8);
	op_stkvar	(x,	1);
	create_insn	(x=0XCADC);
	op_stkvar	(x,	1);
	create_dword	(x=0XCAEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XCAF0);
	set_name	(0XCAF0,	"IsSerialHaveRecData");
	create_insn	(x=0XCAFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XCB00);
	op_stkvar	(x,	1);
	create_insn	(x=0XCB0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XCB20);
	op_stkvar	(x,	1);
	create_insn	(x=0XCB28);
	op_stkvar	(x,	1);
	create_insn	(x=0XCB2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XCB34);
	op_stkvar	(x,	1);
	create_insn	(x=0XCB3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XCB40);
	op_stkvar	(x,	1);
	create_insn	(x=0XCB4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XCB54);
	op_stkvar	(x,	1);
	create_insn	(x=0XCB58);
	op_stkvar	(x,	1);
	create_insn	(x=0XCB64);
	op_stkvar	(x,	1);
	create_insn	(x=0XCB7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XCB90);
	op_stkvar	(x,	1);
	create_insn	(x=0XCB98);
	op_hex		(x,	1);
	create_insn	(x=0XCBB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XCBC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XCBD0);
	op_stkvar	(x,	1);
	create_insn	(x=0XCBD4);
	op_stkvar	(x,	1);
	set_cmt	(0XCBE0,	"readfds",	0);
	create_insn	(x=0XCBE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XCBE4);
	op_stkvar	(x,	1);
	set_cmt	(0XCBE8,	"timeout",	0);
	create_insn	(x=0XCBE8);
	op_stkvar	(x,	1);
	set_cmt	(0XCBEC,	"nfds",	0);
	set_cmt	(0XCBF0,	"writefds",	0);
	set_cmt	(0XCBF4,	"exceptfds",	0);
	create_insn	(x=0XCC00);
	op_stkvar	(x,	1);
	create_insn	(x=0XCC04);
	op_stkvar	(x,	1);
	create_insn	(x=0XCC14);
	op_stkvar	(x,	1);
	create_insn	(x=0XCC18);
	op_stkvar	(x,	1);
	create_insn	(0XCC28);
	set_name	(0XCC28,	"Serial_Delete");
	create_insn	(x=0XCC34);
	op_stkvar	(x,	1);
	create_insn	(x=0XCC38);
	op_stkvar	(x,	1);
	create_insn	(x=0XCC48);
	op_stkvar	(x,	1);
	create_insn	(x=0XCC50);
	op_stkvar	(x,	1);
	create_insn	(x=0XCC60);
	op_stkvar	(x,	1);
	set_cmt	(0XCC68,	"fd",	0);
	set_cmt	(0XCC70,	"ptr",	0);
	create_insn	(x=0XCC70);
	op_stkvar	(x,	1);
	create_insn	(x=0XCC7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XCC80);
	op_stkvar	(x,	1);
	create_insn	(0XCC90);
	set_name	(0XCC90,	"Serial_ReadData");
	create_insn	(x=0XCC9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XCCA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XCCA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XCCA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XCCB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XCCC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XCCD4);
	op_stkvar	(x,	1);
	set_cmt	(0XCCDC,	"pSerialHandle",	0);
	create_insn	(x=0XCCDC);
	op_stkvar	(x,	1);
	create_insn	(x=0XCCF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XCCFC);
	op_stkvar	(x,	1);
	set_cmt	(0XCD04,	"fd",	0);
	set_cmt	(0XCD08,	"buf",	0);
	create_insn	(x=0XCD08);
	op_stkvar	(x,	1);
	set_cmt	(0XCD0C,	"nbytes",	0);
	create_insn	(x=0XCD0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XCD18);
	op_stkvar	(x,	1);
	create_insn	(x=0XCD1C);
	op_stkvar	(x,	1);
	create_insn	(0XCD2C);
	set_name	(0XCD2C,	"Serial_WriteData");
	create_insn	(x=0XCD38);
	op_stkvar	(x,	1);
	create_insn	(x=0XCD3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XCD40);
	op_stkvar	(x,	1);
	create_insn	(x=0XCD44);
	op_stkvar	(x,	1);
	create_insn	(x=0XCD50);
	op_stkvar	(x,	1);
	create_insn	(x=0XCD60);
	op_stkvar	(x,	1);
	create_insn	(x=0XCD70);
	op_stkvar	(x,	1);
	create_insn	(x=0XCD78);
	op_stkvar	(x,	1);
	set_cmt	(0XCD80,	"fd",	0);
	set_cmt	(0XCD84,	"buf",	0);
	create_insn	(x=0XCD84);
	op_stkvar	(x,	1);
	set_cmt	(0XCD88,	"n",	0);
	create_insn	(x=0XCD88);
	op_stkvar	(x,	1);
	create_insn	(x=0XCD94);
	op_stkvar	(x,	1);
	create_insn	(x=0XCD98);
	op_stkvar	(x,	1);
	create_insn	(0XCDA8);
	set_name	(0XCDA8,	"Serial_DisableConsole");
	create_insn	(x=0XCDB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCDC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XCDC8,	"oflag",	0);
	create_insn	(x=0XCDD4);
	op_stkvar	(x,	1);
	create_insn	(x=0XCDD8);
	op_stkvar	(x,	1);
	create_insn	(x=0XCDE8);
	op_stkvar	(x,	1);
	set_cmt	(0XCDF0,	"fd",	0);
	create_insn	(x=0XCDF0);
	op_stkvar	(x,	1);
	set_cmt	(0XCDF4,	"cmd",	0);
	create_insn	(x=0XCE00);
	op_hex		(x,	1);
	set_cmt	(0XCE04,	"fd",	0);
	create_insn	(x=0XCE04);
	op_stkvar	(x,	1);
	set_cmt	(0XCE08,	"cmd",	0);
	set_cmt	(0XCE14,	"fd",	0);
	create_insn	(x=0XCE14);
	op_stkvar	(x,	1);
	set_cmt	(0XCE18,	"termios_p",	0);
	create_insn	(x=0XCE18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCE24);
	op_stkvar	(x,	1);
	set_cmt	(0XCE28,	"fd",	0);
	create_insn	(x=0XCE28);
	op_stkvar	(x,	1);
	create_insn	(x=0XCE30);
	op_stkvar	(x,	1);
	create_insn	(x=0XCE40);
	op_stkvar	(x,	1);
	create_insn	(x=0XCE48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCE54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XCE58,	"oflag",	0);
	create_insn	(x=0XCE64);
	op_stkvar	(x,	1);
	create_insn	(x=0XCE68);
	op_stkvar	(x,	1);
	create_insn	(x=0XCE78);
	op_stkvar	(x,	1);
	set_cmt	(0XCE80,	"fd",	0);
	create_insn	(x=0XCE80);
	op_stkvar	(x,	1);
	set_cmt	(0XCE84,	"cmd",	0);
	create_insn	(x=0XCE90);
	op_hex		(x,	1);
	set_cmt	(0XCE94,	"fd",	0);
	create_insn	(x=0XCE94);
	op_stkvar	(x,	1);
	set_cmt	(0XCE98,	"cmd",	0);
	set_cmt	(0XCEA4,	"fd",	0);
	create_insn	(x=0XCEA4);
	op_stkvar	(x,	1);
	set_cmt	(0XCEA8,	"request",	0);
	create_insn	(x=0XCEA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCEB4);
	op_stkvar	(x,	1);
	set_cmt	(0XCEB8,	"fd",	0);
	create_insn	(x=0XCEB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XCEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XCEC8);
	op_stkvar	(x,	1);
	create_dword	(x=0XCED8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XCEDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XCEE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XCEE0,	"termios_p");
	create_dword	(x=0XCEE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XCEE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XCEEC);
	set_name	(0XCEEC,	"Serial_EnableConsole");
	create_insn	(x=0XCEF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCF0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XCF14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XCF18,	"oflag",	0);
	create_insn	(x=0XCF24);
	op_stkvar	(x,	1);
	create_insn	(x=0XCF28);
	op_stkvar	(x,	1);
	create_insn	(x=0XCF38);
	op_stkvar	(x,	1);
	set_cmt	(0XCF40,	"fd",	0);
	create_insn	(x=0XCF40);
	op_stkvar	(x,	1);
	set_cmt	(0XCF44,	"cmd",	0);
	create_insn	(x=0XCF50);
	op_hex		(x,	1);
	set_cmt	(0XCF54,	"fd",	0);
	create_insn	(x=0XCF54);
	op_stkvar	(x,	1);
	set_cmt	(0XCF58,	"cmd",	0);
	set_cmt	(0XCF64,	"fd",	0);
	create_insn	(x=0XCF64);
	op_stkvar	(x,	1);
	set_cmt	(0XCF6C,	"fd",	0);
	create_insn	(x=0XCF6C);
	op_stkvar	(x,	1);
	set_cmt	(0XCF70,	"queue_selector",	0);
	set_cmt	(0XCF78,	"fd",	0);
	create_insn	(x=0XCF78);
	op_stkvar	(x,	1);
	set_cmt	(0XCF7C,	"optional_actions",	0);
	set_cmt	(0XCF80,	"termios_p",	0);
	create_insn	(x=0XCF80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XCF88,	"fd",	0);
	create_insn	(x=0XCF88);
	op_stkvar	(x,	1);
	set_cmt	(0XCF8C,	"request",	0);
	create_insn	(x=0XCF8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XCF94,	"fd",	0);
	create_insn	(x=0XCF94);
	op_stkvar	(x,	1);
	create_insn	(x=0XCFA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XCFA4);
	op_stkvar	(x,	1);
	create_dword	(x=0XCFB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XCFB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XCFBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XCFC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XCFC4);
	set_name	(0XCFC4,	"sha256_transf");
	create_insn	(x=0XCFD0);
	op_stkvar	(x,	1);
	create_insn	(x=0XCFD4);
	op_stkvar	(x,	1);
	create_insn	(x=0XCFD8);
	op_stkvar	(x,	1);
	create_insn	(x=0XCFE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XCFE8);
	op_stkvar	(x,	1);
	create_insn	(x=0XCFF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XCFFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD004);
	op_stkvar	(x,	1);
	create_insn	(x=0XD00C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD014);
	op_stkvar	(x,	1);
	create_insn	(x=0XD01C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD028);
	op_stkvar	(x,	1);
	create_insn	(x=0XD038);
	op_stkvar	(x,	1);
	create_insn	(x=0XD044);
	op_stkvar	(x,	1);
	create_insn	(x=0XD058);
	op_stkvar	(x,	1);
	create_insn	(x=0XD064);
	op_stkvar	(x,	1);
	create_insn	(x=0XD078);
	op_stkvar	(x,	1);
	create_insn	(x=0XD084);
	op_stkvar	(x,	1);
	create_insn	(x=0XD09C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD0A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD0A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD0B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD0C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD0C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD0D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD0E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD0F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD110);
	op_stkvar	(x,	1);
	create_insn	(x=0XD120);
	op_stkvar	(x,	1);
	create_insn	(x=0XD138);
	op_stkvar	(x,	1);
	create_insn	(x=0XD148);
	op_stkvar	(x,	1);
	create_insn	(x=0XD15C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD16C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD180);
	op_stkvar	(x,	1);
	create_insn	(x=0XD190);
	op_stkvar	(x,	1);
	create_insn	(x=0XD1A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD1B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD1D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD200);
	op_stkvar	(x,	1);
	create_insn	(x=0XD210);
	op_stkvar	(x,	1);
	create_insn	(x=0XD218);
	op_stkvar	(x,	1);
	create_insn	(x=0XD21C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD22C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD234);
	op_stkvar	(x,	1);
	create_insn	(x=0XD238);
	op_stkvar	(x,	1);
	create_insn	(x=0XD23C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD250);
	op_stkvar	(x,	1);
	create_insn	(x=0XD260);
	op_stkvar	(x,	1);
	create_insn	(x=0XD268);
	op_stkvar	(x,	1);
	create_insn	(x=0XD26C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD27C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD284);
	op_stkvar	(x,	1);
	create_insn	(x=0XD288);
	op_stkvar	(x,	1);
	create_insn	(x=0XD290);
	op_stkvar	(x,	1);
	create_insn	(x=0XD29C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD2AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD2B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD2B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD2C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD2D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD2D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD2E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD2EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD300);
	op_stkvar	(x,	1);
	create_insn	(x=0XD304);
	op_stkvar	(x,	1);
	create_insn	(x=0XD30C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD318);
	op_stkvar	(x,	1);
	create_insn	(x=0XD324);
	op_stkvar	(x,	1);
	create_insn	(x=0XD328);
	op_stkvar	(x,	1);
	create_insn	(x=0XD330);
	op_stkvar	(x,	1);
	create_insn	(x=0XD334);
	op_stkvar	(x,	1);
	create_insn	(x=0XD340);
	op_stkvar	(x,	1);
	create_insn	(x=0XD344);
	op_stkvar	(x,	1);
	create_insn	(x=0XD354);
	op_stkvar	(x,	1);
	create_insn	(x=0XD358);
	op_stkvar	(x,	1);
	create_insn	(x=0XD35C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD360);
	op_stkvar	(x,	1);
	create_insn	(x=0XD364);
	op_stkvar	(x,	1);
	create_insn	(x=0XD368);
	op_stkvar	(x,	1);
	create_insn	(x=0XD36C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD370);
	op_stkvar	(x,	1);
	create_insn	(x=0XD374);
	op_stkvar	(x,	1);
	create_insn	(x=0XD37C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD380);
	op_stkvar	(x,	1);
	create_insn	(x=0XD384);
	op_stkvar	(x,	1);
	create_insn	(x=0XD388);
	op_stkvar	(x,	1);
	create_insn	(x=0XD38C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD390);
	op_stkvar	(x,	1);
	create_insn	(x=0XD394);
	op_stkvar	(x,	1);
	create_insn	(x=0XD398);
	op_stkvar	(x,	1);
	create_insn	(x=0XD39C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD3A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD3A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD3B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD3B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD3C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD3CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD3D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD3D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD3E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD3EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD400);
	op_stkvar	(x,	1);
	create_insn	(x=0XD40C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD414);
	op_stkvar	(x,	1);
	create_insn	(x=0XD418);
	op_stkvar	(x,	1);
	create_insn	(x=0XD424);
	op_stkvar	(x,	1);
	create_insn	(x=0XD42C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD430);
	op_stkvar	(x,	1);
	create_insn	(x=0XD434);
	op_stkvar	(x,	1);
	create_dword	(0XD44C);
	create_dword	(0XD450);
	create_dword	(x=0XD454);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XD458);
	set_name	(0XD458,	"sha256");
	create_insn	(x=0XD464);
	op_stkvar	(x,	1);
	create_insn	(x=0XD468);
	op_stkvar	(x,	1);
	create_insn	(x=0XD46C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD470);
	op_stkvar	(x,	1);
	set_cmt	(0XD474,	"ctx",	0);
	create_insn	(x=0XD47C);
	op_stkvar	(x,	1);
	set_cmt	(0XD480,	"ctx",	0);
	set_cmt	(0XD484,	"message",	0);
	create_insn	(x=0XD484);
	op_stkvar	(x,	1);
	set_cmt	(0XD488,	"len",	0);
	create_insn	(x=0XD488);
	op_stkvar	(x,	1);
	create_insn	(x=0XD490);
	op_stkvar	(x,	1);
	set_cmt	(0XD494,	"ctx",	0);
	set_cmt	(0XD498,	"digest",	0);
	create_insn	(x=0XD498);
	op_stkvar	(x,	1);
	create_insn	(x=0XD4A8);
	op_stkvar	(x,	1);
	set_name	(0XD4A8,	"sha256_init");
	create_insn	(x=0XD4B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD4BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD4C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD4C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD4CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD4D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD4E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD4E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD4EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD4F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD504);
	op_stkvar	(x,	1);
	create_dword	(x=0XD51C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XD520);
	set_name	(0XD520,	"sha256_update");
	create_insn	(x=0XD52C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD530);
	op_stkvar	(x,	1);
	create_insn	(x=0XD534);
	op_stkvar	(x,	1);
	create_insn	(x=0XD538);
	op_stkvar	(x,	1);
	create_insn	(x=0XD544);
	op_stkvar	(x,	1);
	create_insn	(x=0XD548);
	op_stkvar	(x,	1);
	create_insn	(x=0XD54C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD558);
	op_stkvar	(x,	1);
	create_insn	(x=0XD55C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD564);
	op_stkvar	(x,	1);
	set_cmt	(0XD570,	"dest",	0);
	set_cmt	(0XD574,	"src",	0);
	create_insn	(x=0XD574);
	op_stkvar	(x,	1);
	set_cmt	(0XD578,	"n",	0);
	create_insn	(x=0XD578);
	op_stkvar	(x,	1);
	create_insn	(x=0XD580);
	op_stkvar	(x,	1);
	create_insn	(x=0XD588);
	op_stkvar	(x,	1);
	create_insn	(x=0XD598);
	op_stkvar	(x,	1);
	create_insn	(x=0XD5A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD5A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD5B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD5B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD5C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD5C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD5CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD5D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD5D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD5DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD5E0);
	op_stkvar	(x,	1);
	set_cmt	(0XD5E8,	"ctx",	0);
	create_insn	(x=0XD5E8);
	op_stkvar	(x,	1);
	set_cmt	(0XD5EC,	"message",	0);
	set_cmt	(0XD5F0,	"block_nb",	0);
	set_cmt	(0XD5F8,	"ctx",	0);
	create_insn	(x=0XD5F8);
	op_stkvar	(x,	1);
	set_cmt	(0XD5FC,	"message",	0);
	create_insn	(x=0XD5FC);
	op_stkvar	(x,	1);
	set_cmt	(0XD600,	"block_nb",	0);
	create_insn	(x=0XD600);
	op_stkvar	(x,	1);
	create_insn	(x=0XD608);
	op_stkvar	(x,	1);
	create_insn	(x=0XD60C);
	op_hex		(x,	1);
	create_insn	(x=0XD610);
	op_stkvar	(x,	1);
	create_insn	(x=0XD614);
	op_stkvar	(x,	1);
	create_insn	(x=0XD61C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD624);
	op_stkvar	(x,	1);
	set_cmt	(0XD62C,	"dest",	0);
	set_cmt	(0XD630,	"src",	0);
	set_cmt	(0XD634,	"n",	0);
	create_insn	(x=0XD634);
	op_stkvar	(x,	1);
	create_insn	(x=0XD63C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD640);
	op_stkvar	(x,	1);
	create_insn	(x=0XD648);
	op_stkvar	(x,	1);
	create_insn	(x=0XD650);
	op_stkvar	(x,	1);
	create_insn	(x=0XD660);
	op_stkvar	(x,	1);
	create_insn	(0XD670);
	set_name	(0XD670,	"sha256_final");
	create_insn	(x=0XD67C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD680);
	op_stkvar	(x,	1);
	create_insn	(x=0XD684);
	op_stkvar	(x,	1);
	create_insn	(x=0XD68C);
	op_hex		(x,	1);
	create_insn	(x=0XD69C);
	op_stkvar	(x,	1);
	create_insn	(0XD6A4);
	create_insn	(x=0XD6A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD6AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD6B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD6B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD6BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD6CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD6D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD6D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD6E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD6F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD6F8);
	op_stkvar	(x,	1);
	set_cmt	(0XD700,	"s",	0);
	set_cmt	(0XD704,	"c",	0);
	set_cmt	(0XD708,	"n",	0);
	create_insn	(x=0XD710);
	op_stkvar	(x,	1);
	create_insn	(x=0XD718);
	op_stkvar	(x,	1);
	create_insn	(x=0XD730);
	op_stkvar	(x,	1);
	create_insn	(x=0XD738);
	op_stkvar	(x,	1);
	create_insn	(x=0XD744);
	op_stkvar	(x,	1);
	create_insn	(x=0XD748);
	op_hex		(x,	1);
	create_insn	(x=0XD750);
	op_stkvar	(x,	1);
	create_insn	(x=0XD758);
	op_stkvar	(x,	1);
	create_insn	(x=0XD764);
	op_stkvar	(x,	1);
	create_insn	(x=0XD76C);
	op_hex		(x,	1);
	create_insn	(x=0XD774);
	op_stkvar	(x,	1);
	create_insn	(x=0XD77C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD788);
	op_stkvar	(x,	1);
	create_insn	(x=0XD790);
	op_hex		(x,	1);
	create_insn	(x=0XD798);
	op_stkvar	(x,	1);
	create_insn	(x=0XD7A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD7AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD7B4);
	op_hex		(x,	1);
	create_insn	(x=0XD7BC);
	op_stkvar	(x,	1);
	set_cmt	(0XD7C4,	"ctx",	0);
	create_insn	(x=0XD7C4);
	op_stkvar	(x,	1);
	set_cmt	(0XD7C8,	"message",	0);
	set_cmt	(0XD7CC,	"block_nb",	0);
	create_insn	(x=0XD7CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD7D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD7E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD7EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD7F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD7F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD804);
	op_hex		(x,	1);
	create_insn	(x=0XD80C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD818);
	op_stkvar	(x,	1);
	create_insn	(x=0XD820);
	op_stkvar	(x,	1);
	create_insn	(x=0XD824);
	op_stkvar	(x,	1);
	create_insn	(x=0XD834);
	op_hex		(x,	1);
	create_insn	(x=0XD83C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD848);
	op_stkvar	(x,	1);
	create_insn	(x=0XD850);
	op_stkvar	(x,	1);
	create_insn	(x=0XD854);
	op_stkvar	(x,	1);
	create_insn	(x=0XD864);
	op_hex		(x,	1);
	create_insn	(x=0XD86C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD878);
	op_stkvar	(x,	1);
	create_insn	(x=0XD880);
	op_stkvar	(x,	1);
	create_insn	(x=0XD884);
	op_stkvar	(x,	1);
	create_insn	(x=0XD894);
	op_hex		(x,	1);
	create_insn	(x=0XD89C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD8A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD8A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD8BC);
	op_stkvar	(x,	1);
	set_name	(0XD8BC,	"sha256_noPad");
	create_insn	(x=0XD8C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD8CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD8D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD8DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD8E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD8F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD8F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD900);
	op_hex		(x,	1);
	create_insn	(x=0XD908);
	op_stkvar	(x,	1);
	create_insn	(x=0XD914);
	op_stkvar	(x,	1);
	create_insn	(x=0XD91C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD920);
	op_stkvar	(x,	1);
	create_insn	(x=0XD930);
	op_hex		(x,	1);
	create_insn	(x=0XD938);
	op_stkvar	(x,	1);
	create_insn	(x=0XD944);
	op_stkvar	(x,	1);
	create_insn	(x=0XD94C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD950);
	op_stkvar	(x,	1);
	create_insn	(x=0XD960);
	op_hex		(x,	1);
	create_insn	(x=0XD968);
	op_stkvar	(x,	1);
	create_insn	(x=0XD974);
	op_stkvar	(x,	1);
	create_insn	(x=0XD97C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD980);
	op_stkvar	(x,	1);
	create_insn	(x=0XD990);
	op_hex		(x,	1);
	create_insn	(x=0XD998);
	op_stkvar	(x,	1);
	create_insn	(x=0XD9A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD9A4);
	op_stkvar	(x,	1);
	create_insn	(0XD9BC);
	set_name	(0XD9BC,	"At88_Ioctl_ThreadSafe");
	create_insn	(x=0XD9C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD9CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD9D0);
	op_stkvar	(x,	1);
	set_cmt	(0XD9D4,	"mutex",	0);
	create_insn	(x=0XD9D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD9DC);
	op_stkvar	(x,	1);
	set_cmt	(0XD9E0,	"fd",	0);
	create_insn	(x=0XD9E0);
	op_stkvar	(x,	1);
	set_cmt	(0XD9E4,	"request",	0);
	create_insn	(x=0XD9E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD9F4);
	op_stkvar	(x,	1);
	set_cmt	(0XD9F8,	"mutex",	0);
	create_insn	(x=0XD9F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDA00);
	op_stkvar	(x,	1);
	create_dword	(x=0XDA10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XDA10,	"mutex");
	create_insn	(0XDA14);
	set_name	(0XDA14,	"At88_Init");
	set_cmt	(0XDA20,	"pMutex",	0);
	create_insn	(x=0XDA20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDA28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XDA2C,	"oflag",	0);
	create_insn	(x=0XDA38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDA40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDA54);
	op_stkvar	(x,	1);
	create_insn	(x=0XDA5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDA64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XDA6C,	"fd",	0);
	set_cmt	(0XDA70,	"cmd",	0);
	create_insn	(x=0XDA7C);
	op_hex		(x,	1);
	set_cmt	(0XDA80,	"fd",	0);
	set_cmt	(0XDA84,	"cmd",	0);
	create_insn	(x=0XDA90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDA98);
	op_stkvar	(x,	1);
	set_cmt	(0XDAA0,	"slFd",	0);
	set_cmt	(0XDAA4,	"slOpt",	0);
	set_cmt	(0XDAA8,	"pData",	0);
	create_insn	(x=0XDAB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XDAB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XDAC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XDACC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDAD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDAEC);
	op_stkvar	(x,	1);
	create_insn	(x=0XDAF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XDAFC,	"fd",	0);
	create_insn	(x=0XDB04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDB14);
	op_stkvar	(x,	1);
	create_insn	(x=0XDB18);
	op_stkvar	(x,	1);
	create_dword	(x=0XDB28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XDB28,	"pMutex");
	create_dword	(x=0XDB2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XDB30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XDB34);
	set_name	(0XDB34,	"slOpt");
	create_dword	(x=0XDB38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XDB3C);
	set_name	(0XDB3C,	"At88_Delete");
	create_insn	(x=0XDB44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDB54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XDB5C,	"fd",	0);
	create_insn	(x=0XDB64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0XDB7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XDB80);
	set_name	(0XDB80,	"At88_Is_Config_Lock");
	create_insn	(x=0XDB8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XDB90);
	op_stkvar	(x,	1);
	create_insn	(x=0XDB9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDBB0);
	op_stkvar	(x,	1);
	create_insn	(0XDBB8);
	create_insn	(x=0XDBBC);
	op_stkvar	(x,	1);
	create_insn	(x=0XDBC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XDBD0);
	op_stkvar	(x,	1);
	create_insn	(x=0XDBD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDBE0);
	op_stkvar	(x,	1);
	set_cmt	(0XDBE8,	"slFd",	0);
	set_cmt	(0XDBEC,	"slOpt",	0);
	create_insn	(x=0XDBEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XDBF0,	"pData",	0);
	create_insn	(x=0XDBFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XDC00);
	op_stkvar	(x,	1);
	create_insn	(x=0XDC10);
	op_stkvar	(x,	1);
	create_insn	(x=0XDC18);
	op_stkvar	(x,	1);
	create_insn	(x=0XDC24);
	op_stkvar	(x,	1);
	create_insn	(x=0XDC34);
	op_stkvar	(x,	1);
	create_insn	(x=0XDC40);
	op_stkvar	(x,	1);
	create_insn	(0XDC50);
	create_insn	(x=0XDC54);
	op_stkvar	(x,	1);
	create_insn	(0XDC5C);
	create_insn	(x=0XDC60);
	op_stkvar	(x,	1);
	create_insn	(x=0XDC64);
	op_stkvar	(x,	1);
	create_dword	(x=0XDC74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XDC78);
	create_dword	(x=0XDC7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XDC80);
	set_name	(0XDC80,	"At88_Is_DataOTP_Lock");
	create_insn	(x=0XDC8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XDC90);
	op_stkvar	(x,	1);
	create_insn	(x=0XDC9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDCB0);
	op_stkvar	(x,	1);
	create_insn	(0XDCB8);
	create_insn	(x=0XDCBC);
	op_stkvar	(x,	1);
	create_insn	(x=0XDCC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XDCD0);
	op_stkvar	(x,	1);
	create_insn	(x=0XDCD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDCE0);
	op_stkvar	(x,	1);
	set_cmt	(0XDCE8,	"slFd",	0);
	set_cmt	(0XDCEC,	"slOpt",	0);
	create_insn	(x=0XDCEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XDCF0,	"pData",	0);
	create_insn	(x=0XDCFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD00);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD10);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD18);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD24);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD34);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD40);
	op_stkvar	(x,	1);
	create_insn	(0XDD50);
	create_insn	(x=0XDD54);
	op_stkvar	(x,	1);
	create_insn	(0XDD5C);
	create_insn	(x=0XDD60);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD64);
	op_stkvar	(x,	1);
	create_dword	(x=0XDD74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XDD78);
	create_dword	(x=0XDD7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XDD80);
	set_name	(0XDD80,	"At88_Read_Config");
	create_insn	(x=0XDD8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD90);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD94);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD98);
	op_stkvar	(x,	1);
	create_insn	(x=0XDDA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDDB8);
	op_stkvar	(x,	1);
	create_insn	(0XDDC0);
	create_insn	(x=0XDDC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XDDCC);
	op_stkvar	(x,	1);
	create_insn	(x=0XDDD4);
	op_stkvar	(x,	1);
	create_insn	(x=0XDDDC);
	op_stkvar	(x,	1);
	create_insn	(x=0XDDEC);
	op_stkvar	(x,	1);
	create_insn	(x=0XDDF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDDFC);
	op_stkvar	(x,	1);
	set_cmt	(0XDE04,	"slFd",	0);
	set_cmt	(0XDE08,	"slOpt",	0);
	create_insn	(x=0XDE08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XDE0C,	"pData",	0);
	create_insn	(x=0XDE18);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE34);
	op_stkvar	(x,	1);
	set_cmt	(0XDE40,	"dest",	0);
	create_insn	(x=0XDE40);
	op_stkvar	(x,	1);
	set_cmt	(0XDE44,	"src",	0);
	set_cmt	(0XDE48,	"n",	0);
	create_insn	(x=0XDE50);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE58);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE64);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE68);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE78);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE7C);
	op_stkvar	(x,	1);
	create_dword	(x=0XDE8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XDE90);
	create_dword	(x=0XDE94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XDE98);
	set_name	(0XDE98,	"At88_Is_Config_Set");
	create_insn	(x=0XDEA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XDEA8);
	op_stkvar	(x,	1);
	set_cmt	(0XDEAC,	"pData",	0);
	create_insn	(x=0XDEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XDECC);
	op_stkvar	(x,	1);
	create_insn	(x=0XDED0);
	op_stkvar	(x,	1);
	create_insn	(x=0XDED4);
	op_stkvar	(x,	1);
	create_insn	(x=0XDEE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XDEE8);
	op_stkvar	(x,	1);
	create_insn	(x=0XDEEC);
	op_stkvar	(x,	1);
	create_insn	(x=0XDEF8);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF00);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF04);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF10);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF18);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF28);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF30);
	op_stkvar	(x,	1);
	set_cmt	(0XDF34,	"s",	0);
	create_insn	(x=0XDF34);
	op_stkvar	(x,	1);
	set_cmt	(0XDF38,	"c",	0);
	set_cmt	(0XDF3C,	"n",	0);
	create_insn	(x=0XDF44);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF48);
	op_stkvar	(x,	1);
	set_cmt	(0XDF4C,	"s1",	0);
	set_cmt	(0XDF50,	"s2",	0);
	set_cmt	(0XDF54,	"n",	0);
	create_insn	(x=0XDF68);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF78);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF88);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF8C);
	op_stkvar	(x,	1);
	create_insn	(0XDF9C);
	set_name	(0XDF9C,	"At88_Lock_Config");
	create_insn	(x=0XDFA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDFBC);
	op_stkvar	(x,	1);
	create_insn	(0XDFC4);
	create_insn	(x=0XDFC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XDFCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDFD4);
	op_stkvar	(x,	1);
	set_cmt	(0XDFDC,	"slFd",	0);
	set_cmt	(0XDFE0,	"slOpt",	0);
	set_cmt	(0XDFE4,	"pData",	0);
	create_insn	(x=0XDFF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XDFF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE004);
	op_stkvar	(x,	1);
	create_insn	(0XE00C);
	create_insn	(x=0XE010);
	op_stkvar	(x,	1);
	create_insn	(x=0XE014);
	op_stkvar	(x,	1);
	create_dword	(x=0XE024);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XE028);
	create_insn	(0XE02C);
	set_name	(0XE02C,	"At88_Lock_DataOTP");
	create_insn	(x=0XE038);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE04C);
	op_stkvar	(x,	1);
	create_insn	(0XE054);
	create_insn	(x=0XE058);
	op_stkvar	(x,	1);
	create_insn	(x=0XE05C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE064);
	op_stkvar	(x,	1);
	set_cmt	(0XE06C,	"slFd",	0);
	set_cmt	(0XE070,	"slOpt",	0);
	set_cmt	(0XE074,	"pData",	0);
	create_insn	(x=0XE080);
	op_stkvar	(x,	1);
	create_insn	(x=0XE084);
	op_stkvar	(x,	1);
	create_insn	(x=0XE094);
	op_stkvar	(x,	1);
	create_insn	(0XE09C);
	create_insn	(x=0XE0A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE0A4);
	op_stkvar	(x,	1);
	create_dword	(x=0XE0B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XE0B8);
	create_insn	(0XE0BC);
	set_name	(0XE0BC,	"At88_Set_Config");
	create_insn	(x=0XE0C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE0DC);
	op_stkvar	(x,	1);
	create_insn	(0XE0E4);
	create_insn	(x=0XE0E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE0F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE0F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE100);
	op_stkvar	(x,	1);
	create_insn	(x=0XE108);
	op_stkvar	(x,	1);
	create_insn	(x=0XE110);
	op_stkvar	(x,	1);
	create_insn	(x=0XE11C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE124);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE12C);
	op_stkvar	(x,	1);
	set_cmt	(0XE134,	"slFd",	0);
	set_cmt	(0XE138,	"slOpt",	0);
	create_insn	(x=0XE138);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE13C,	"pData",	0);
	create_insn	(x=0XE148);
	op_stkvar	(x,	1);
	create_insn	(x=0XE14C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE15C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE164);
	op_stkvar	(x,	1);
	set_cmt	(0XE170,	"s",	0);
	set_cmt	(0XE174,	"c",	0);
	set_cmt	(0XE178,	"n",	0);
	create_insn	(x=0XE184);
	op_stkvar	(x,	1);
	create_insn	(x=0XE18C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE19C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE1A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE1AC);
	op_stkvar	(x,	1);
	set_cmt	(0XE1B4,	"slFd",	0);
	set_cmt	(0XE1B8,	"slOpt",	0);
	create_insn	(x=0XE1B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE1BC,	"pData",	0);
	create_insn	(x=0XE1C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE1CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE1DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE1EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE1F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE200);
	op_stkvar	(x,	1);
	create_insn	(x=0XE204);
	op_stkvar	(x,	1);
	create_dword	(x=0XE214);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XE218);
	create_dword	(x=0XE21C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE220);
	set_name	(0XE220,	"At88_Check_And_Set_Config");
	create_insn	(x=0XE22C);
	op_stkvar	(x,	1);
	set_cmt	(0XE230,	"pData",	0);
	create_insn	(x=0XE248);
	op_stkvar	(x,	1);
	create_insn	(x=0XE250);
	op_stkvar	(x,	1);
	set_cmt	(0XE254,	"pData",	0);
	create_insn	(x=0XE26C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE274);
	op_stkvar	(x,	1);
	create_insn	(x=0XE280);
	op_stkvar	(x,	1);
	create_insn	(x=0XE290);
	op_stkvar	(x,	1);
	create_insn	(0XE298);
	create_insn	(x=0XE29C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE2A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE2C4);
	op_stkvar	(x,	1);
	create_insn	(0XE2CC);
	create_insn	(x=0XE2D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE2D8);
	op_stkvar	(x,	1);
	create_insn	(0XE2E8);
	set_name	(0XE2E8,	"At88_Read_Chip_Info");
	create_insn	(x=0XE2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE2FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE300);
	op_stkvar	(x,	1);
	create_insn	(x=0XE30C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE320);
	op_stkvar	(x,	1);
	create_insn	(0XE328);
	create_insn	(x=0XE32C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE334);
	op_stkvar	(x,	1);
	create_insn	(x=0XE340);
	op_stkvar	(x,	1);
	create_insn	(x=0XE348);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE350);
	op_stkvar	(x,	1);
	set_cmt	(0XE358,	"slFd",	0);
	set_cmt	(0XE35C,	"slOpt",	0);
	create_insn	(x=0XE35C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE360,	"pData",	0);
	create_insn	(x=0XE36C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE370);
	op_stkvar	(x,	1);
	create_insn	(x=0XE380);
	op_stkvar	(x,	1);
	create_insn	(x=0XE388);
	op_stkvar	(x,	1);
	set_cmt	(0XE394,	"dest",	0);
	create_insn	(x=0XE394);
	op_stkvar	(x,	1);
	set_cmt	(0XE398,	"src",	0);
	set_cmt	(0XE39C,	"n",	0);
	create_insn	(x=0XE3A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE3AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE3B0);
	op_stkvar	(x,	1);
	set_cmt	(0XE3BC,	"dest",	0);
	create_insn	(x=0XE3BC);
	op_stkvar	(x,	1);
	set_cmt	(0XE3C0,	"src",	0);
	set_cmt	(0XE3C4,	"n",	0);
	create_insn	(x=0XE3D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE3D4);
	op_stkvar	(x,	1);
	create_dword	(x=0XE3E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XE3E8);
	create_dword	(x=0XE3EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE3F0);
	set_name	(0XE3F0,	"At88_Write_Chip_Info_File");
	create_insn	(x=0XE3FC);
	op_stkvar	(x,	1);
	set_cmt	(0XE400,	"pIn",	0);
	create_insn	(x=0XE400);
	op_stkvar	(x,	1);
	set_cmt	(0XE404,	"ulLen",	0);
	create_insn	(x=0XE408);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0XE420);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE420,	"pcFile");
	create_insn	(0XE424);
	set_name	(0XE424,	"At88_Read_Chip_Info_File");
	create_insn	(x=0XE430);
	op_stkvar	(x,	1);
	set_cmt	(0XE434,	"pOut",	0);
	create_insn	(x=0XE434);
	op_stkvar	(x,	1);
	set_cmt	(0XE438,	"ulLen",	0);
	create_insn	(x=0XE43C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0XE454);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE458);
	set_name	(0XE458,	"At88_Check_Chip_Info");
	create_insn	(x=0XE464);
	op_stkvar	(x,	1);
	set_cmt	(0XE468,	"pData",	0);
	create_insn	(x=0XE480);
	op_stkvar	(x,	1);
	create_insn	(x=0XE488);
	op_stkvar	(x,	1);
	set_cmt	(0XE48C,	"pData",	0);
	create_insn	(x=0XE4A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE4AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE4B0);
	op_stkvar	(x,	1);
	set_cmt	(0XE4B4,	"s1",	0);
	set_cmt	(0XE4B8,	"s2",	0);
	set_cmt	(0XE4BC,	"n",	0);
	create_insn	(x=0XE4D4);
	op_stkvar	(x,	1);
	create_insn	(0XE4DC);
	create_insn	(x=0XE4E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE4E4);
	op_stkvar	(x,	1);
	create_insn	(0XE4F4);
	set_name	(0XE4F4,	"At88_Set_Chip_Info_File");
	create_insn	(x=0XE500);
	op_stkvar	(x,	1);
	set_cmt	(0XE504,	"pData",	0);
	create_insn	(x=0XE51C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE524);
	op_stkvar	(x,	1);
	set_cmt	(0XE528,	"pData",	0);
	create_insn	(x=0XE53C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE540);
	op_stkvar	(x,	1);
	set_cmt	(0XE544,	"s1",	0);
	set_cmt	(0XE548,	"s2",	0);
	set_cmt	(0XE54C,	"n",	0);
	create_insn	(x=0XE560);
	op_stkvar	(x,	1);
	set_cmt	(0XE564,	"pData",	0);
	create_insn	(x=0XE570);
	op_stkvar	(x,	1);
	create_insn	(0XE578);
	create_insn	(x=0XE57C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE580);
	op_stkvar	(x,	1);
	create_insn	(0XE590);
	set_name	(0XE590,	"At88_Check_And_Set_Chip_Info");
	create_insn	(x=0XE5B4);
	op_stkvar	(x,	1);
	create_insn	(0XE5BC);
	create_insn	(x=0XE5C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5C4);
	op_stkvar	(x,	1);
	create_insn	(0XE5D4);
	set_name	(0XE5D4,	"At88_Write_Factory_Info");
	create_insn	(x=0XE5E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE60C);
	op_stkvar	(x,	1);
	create_insn	(0XE614);
	create_insn	(x=0XE618);
	op_stkvar	(x,	1);
	create_insn	(x=0XE620);
	op_stkvar	(x,	1);
	create_insn	(x=0XE628);
	op_stkvar	(x,	1);
	create_insn	(x=0XE634);
	op_stkvar	(x,	1);
	create_insn	(x=0XE638);
	op_stkvar	(x,	1);
	create_insn	(0XE640);
	create_insn	(x=0XE644);
	op_stkvar	(x,	1);
	create_insn	(x=0XE648);
	op_stkvar	(x,	1);
	set_cmt	(0XE654,	"s",	0);
	set_cmt	(0XE658,	"c",	0);
	set_cmt	(0XE65C,	"n",	0);
	create_insn	(x=0XE664);
	op_stkvar	(x,	1);
	set_cmt	(0XE670,	"dest",	0);
	set_cmt	(0XE674,	"src",	0);
	create_insn	(x=0XE674);
	op_stkvar	(x,	1);
	set_cmt	(0XE678,	"n",	0);
	create_insn	(x=0XE678);
	op_stkvar	(x,	1);
	create_insn	(x=0XE684);
	op_stkvar	(x,	1);
	create_insn	(x=0XE68C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE690);
	op_stkvar	(x,	1);
	create_insn	(x=0XE6A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE6A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE6B0);
	op_stkvar	(x,	1);
	set_cmt	(0XE6B8,	"slFd",	0);
	set_cmt	(0XE6BC,	"slOpt",	0);
	create_insn	(x=0XE6BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE6C0,	"pData",	0);
	create_insn	(x=0XE6CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE6D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE6E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE6E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE6EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE6F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE6F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE700);
	op_stkvar	(x,	1);
	create_insn	(x=0XE704);
	op_stkvar	(x,	1);
	create_insn	(x=0XE708);
	op_stkvar	(x,	1);
	create_insn	(x=0XE710);
	op_stkvar	(x,	1);
	create_insn	(x=0XE714);
	op_stkvar	(x,	1);
	create_insn	(x=0XE720);
	op_stkvar	(x,	1);
	set_cmt	(0XE72C,	"s",	0);
	set_cmt	(0XE730,	"c",	0);
	set_cmt	(0XE734,	"n",	0);
	create_insn	(x=0XE73C);
	op_stkvar	(x,	1);
	set_cmt	(0XE748,	"dest",	0);
	set_cmt	(0XE74C,	"src",	0);
	create_insn	(x=0XE74C);
	op_stkvar	(x,	1);
	set_cmt	(0XE750,	"n",	0);
	create_insn	(x=0XE75C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE764);
	op_stkvar	(x,	1);
	create_insn	(x=0XE770);
	op_stkvar	(x,	1);
	create_insn	(x=0XE778);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE780);
	op_stkvar	(x,	1);
	set_cmt	(0XE788,	"slFd",	0);
	set_cmt	(0XE78C,	"slOpt",	0);
	create_insn	(x=0XE78C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE790,	"pData",	0);
	create_insn	(x=0XE79C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE7A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE7B0);
	op_stkvar	(x,	1);
	create_insn	(0XE7B8);
	create_insn	(x=0XE7BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE7C0);
	op_stkvar	(x,	1);
	create_dword	(x=0XE7D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XE7D4);
	create_dword	(x=0XE7D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE7DC);
	set_name	(0XE7DC,	"At88_Read_Factory_Info");
	create_insn	(x=0XE7E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE7EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE7F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE7F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE800);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE814);
	op_stkvar	(x,	1);
	create_insn	(0XE81C);
	create_insn	(x=0XE820);
	op_stkvar	(x,	1);
	create_insn	(x=0XE828);
	op_stkvar	(x,	1);
	create_insn	(x=0XE830);
	op_stkvar	(x,	1);
	create_insn	(x=0XE83C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE840);
	op_stkvar	(x,	1);
	create_insn	(0XE848);
	create_insn	(x=0XE84C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE854);
	op_stkvar	(x,	1);
	create_insn	(x=0XE85C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE860);
	op_stkvar	(x,	1);
	create_insn	(x=0XE870);
	op_stkvar	(x,	1);
	create_insn	(x=0XE878);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE880);
	op_stkvar	(x,	1);
	set_cmt	(0XE888,	"slFd",	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_3(void) {
        auto x;
#define id x

	set_cmt	(0XE88C,	"slOpt",	0);
	create_insn	(x=0XE88C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE890,	"pData",	0);
	create_insn	(x=0XE89C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE8A0);
	op_stkvar	(x,	1);
	set_cmt	(0XE8AC,	"s",	0);
	create_insn	(x=0XE8AC);
	op_stkvar	(x,	1);
	set_cmt	(0XE8B0,	"c",	0);
	set_cmt	(0XE8B4,	"n",	0);
	create_insn	(x=0XE8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE8C0);
	op_stkvar	(x,	1);
	set_cmt	(0XE8CC,	"dest",	0);
	create_insn	(x=0XE8CC);
	op_stkvar	(x,	1);
	set_cmt	(0XE8D0,	"src",	0);
	set_cmt	(0XE8D4,	"n",	0);
	create_insn	(x=0XE8D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE8DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE8E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE8E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE8EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE8F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE8F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE8FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE904);
	op_stkvar	(x,	1);
	create_insn	(x=0XE908);
	op_stkvar	(x,	1);
	create_insn	(x=0XE918);
	op_stkvar	(x,	1);
	create_insn	(x=0XE91C);
	op_stkvar	(x,	1);
	create_dword	(x=0XE92C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XE930);
	create_dword	(x=0XE934);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE938);
	set_name	(0XE938,	"At88_Write_Factory_Info_File");
	create_insn	(x=0XE944);
	op_stkvar	(x,	1);
	create_insn	(x=0XE948);
	op_stkvar	(x,	1);
	set_cmt	(0XE94C,	"pData",	0);
	create_insn	(0XE964);
	set_name	(0XE964,	"At88_Write_Kernel_Encrypt");
	create_insn	(x=0XE970);
	op_stkvar	(x,	1);
	create_insn	(x=0XE974);
	op_stkvar	(x,	1);
	create_insn	(x=0XE978);
	op_stkvar	(x,	1);
	create_insn	(x=0XE97C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE988);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE99C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE9A4);
	op_stkvar	(x,	1);
	set_cmt	(0XE9B0,	"dest",	0);
	set_cmt	(0XE9B4,	"src",	0);
	create_insn	(x=0XE9B4);
	op_stkvar	(x,	1);
	set_cmt	(0XE9B8,	"n",	0);
	create_insn	(x=0XE9C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE9C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE9D0);
	op_stkvar	(x,	1);
	set_cmt	(0XE9D8,	"slFd",	0);
	set_cmt	(0XE9DC,	"slOpt",	0);
	set_cmt	(0XE9E0,	"pData",	0);
	create_insn	(x=0XE9F8);
	op_stkvar	(x,	1);
	create_insn	(0XEA00);
	create_insn	(x=0XEA04);
	op_stkvar	(x,	1);
	create_insn	(x=0XEA08);
	op_stkvar	(x,	1);
	create_dword	(x=0XEA18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XEA1C);
	create_insn	(0XEA20);
	set_name	(0XEA20,	"At88_Write_Factory_Info_All");
	create_insn	(x=0XEA2C);
	op_stkvar	(x,	1);
	set_cmt	(0XEA30,	"pData",	0);
	create_insn	(x=0XEA30);
	op_stkvar	(x,	1);
	create_insn	(x=0XEA48);
	op_stkvar	(x,	1);
	set_cmt	(0XEA50,	"pData",	0);
	create_insn	(x=0XEA50);
	op_stkvar	(x,	1);
	create_insn	(x=0XEA68);
	op_stkvar	(x,	1);
	create_insn	(0XEA70);
	create_insn	(x=0XEA74);
	op_stkvar	(x,	1);
	create_insn	(x=0XEA78);
	op_stkvar	(x,	1);
	create_insn	(0XEA88);
	set_name	(0XEA88,	"At88_Check_Factory_Info");
	create_insn	(x=0XEA94);
	op_stkvar	(x,	1);
	set_cmt	(0XEA9C,	"pData",	0);
	create_insn	(x=0XEAB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XEABC);
	op_stkvar	(x,	1);
	set_cmt	(0XEAC0,	"pData",	0);
	create_insn	(x=0XEAD8);
	op_stkvar	(x,	1);
	create_insn	(x=0XEAE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XEAE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XEAE8);
	op_stkvar	(x,	1);
	set_cmt	(0XEAF0,	"dest",	0);
	create_insn	(x=0XEAF0);
	op_stkvar	(x,	1);
	set_cmt	(0XEAF4,	"src",	0);
	set_cmt	(0XEAF8,	"n",	0);
	create_insn	(x=0XEB00);
	op_stkvar	(x,	1);
	create_insn	(x=0XEB08);
	op_stkvar	(x,	1);
	create_insn	(x=0XEB0C);
	op_stkvar	(x,	1);
	set_cmt	(0XEB10,	"dest",	0);
	create_insn	(x=0XEB10);
	op_stkvar	(x,	1);
	set_cmt	(0XEB14,	"src",	0);
	set_cmt	(0XEB18,	"n",	0);
	create_insn	(x=0XEB20);
	op_stkvar	(x,	1);
	create_insn	(x=0XEB28);
	op_stkvar	(x,	1);
	create_insn	(x=0XEB2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XEB30);
	op_stkvar	(x,	1);
	set_cmt	(0XEB38,	"ulLen",	0);
	create_insn	(x=0XEB3C);
	op_stkvar	(x,	1);
	set_cmt	(0XEB40,	"pucMD5",	0);
	create_insn	(x=0XEB40);
	op_stkvar	(x,	1);
	set_cmt	(0XEB44,	"pucData",	0);
	create_insn	(x=0XEB4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XEB50);
	op_stkvar	(x,	1);
	set_cmt	(0XEB5C,	"s1",	0);
	set_cmt	(0XEB60,	"s2",	0);
	set_cmt	(0XEB64,	"n",	0);
	create_insn	(x=0XEB7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XEB84);
	op_stkvar	(x,	1);
	set_cmt	(0XEB8C,	"ucKey",	0);
	set_cmt	(0XEB90,	"pData",	0);
	set_cmt	(0XEB94,	"ulLen",	0);
	create_insn	(x=0XEBAC);
	op_stkvar	(x,	1);
	create_insn	(0XEBB4);
	create_insn	(x=0XEBB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XEBBC);
	op_stkvar	(x,	1);
	create_insn	(0XEBCC);
	set_name	(0XEBCC,	"At88_Write_Key_File");
	create_insn	(x=0XEBD8);
	op_stkvar	(x,	1);
	set_cmt	(0XEBDC,	"pIn",	0);
	create_insn	(x=0XEBDC);
	op_stkvar	(x,	1);
	set_cmt	(0XEBE0,	"ulLen",	0);
	create_insn	(x=0XEBE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0XEBFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XEC00);
	set_name	(0XEC00,	"At88_Read_Key_File");
	create_insn	(x=0XEC0C);
	op_stkvar	(x,	1);
	set_cmt	(0XEC10,	"pOut",	0);
	create_insn	(x=0XEC10);
	op_stkvar	(x,	1);
	set_cmt	(0XEC14,	"ulLen",	0);
	create_insn	(x=0XEC18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0XEC30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XEC34);
	set_name	(0XEC34,	"At88_Write_Key");
	create_insn	(x=0XEC40);
	op_stkvar	(x,	1);
	create_insn	(x=0XEC44);
	op_stkvar	(x,	1);
	create_insn	(x=0XEC48);
	op_stkvar	(x,	1);
	create_insn	(x=0XEC4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XEC58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XEC6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XEC74);
	op_stkvar	(x,	1);
	set_cmt	(0XEC80,	"s",	0);
	set_cmt	(0XEC84,	"c",	0);
	set_cmt	(0XEC88,	"n",	0);
	create_insn	(x=0XEC90);
	op_stkvar	(x,	1);
	set_cmt	(0XEC9C,	"dest",	0);
	set_cmt	(0XECA0,	"src",	0);
	create_insn	(x=0XECA0);
	op_stkvar	(x,	1);
	set_cmt	(0XECA4,	"n",	0);
	create_insn	(x=0XECB0);
	op_stkvar	(x,	1);
	create_insn	(x=0XECB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XECC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XECCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XECD4);
	op_stkvar	(x,	1);
	set_cmt	(0XECDC,	"slFd",	0);
	set_cmt	(0XECE0,	"slOpt",	0);
	create_insn	(x=0XECE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XECE4,	"pData",	0);
	create_insn	(x=0XECF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XECF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XED04);
	op_stkvar	(x,	1);
	create_insn	(0XED0C);
	create_insn	(x=0XED10);
	op_stkvar	(x,	1);
	create_insn	(x=0XED14);
	op_stkvar	(x,	1);
	create_dword	(x=0XED24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XED28);
	create_dword	(x=0XED2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XED30);
	set_name	(0XED30,	"At88_Write_Key_All");
	create_insn	(x=0XED3C);
	op_stkvar	(x,	1);
	set_cmt	(0XED40,	"pData",	0);
	create_insn	(x=0XED40);
	op_stkvar	(x,	1);
	create_insn	(x=0XED58);
	op_stkvar	(x,	1);
	set_cmt	(0XED60,	"pData",	0);
	create_insn	(x=0XED60);
	op_stkvar	(x,	1);
	create_insn	(x=0XED78);
	op_stkvar	(x,	1);
	create_insn	(0XED80);
	create_insn	(x=0XED84);
	op_stkvar	(x,	1);
	create_insn	(x=0XED88);
	op_stkvar	(x,	1);
	create_insn	(0XED98);
	set_name	(0XED98,	"At88_Mac_Check");
	create_insn	(x=0XEDA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XEDAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XEDB0);
	op_stkvar	(x,	1);
	set_cmt	(0XEDB4,	"timer",	0);
	set_cmt	(0XEDC0,	"seed",	0);
	create_insn	(x=0XEDC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XEDD0);
	op_stkvar	(x,	1);
	create_insn	(x=0XEDD8);
	op_stkvar	(x,	1);
	create_insn	(x=0XEDE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XEDF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XEDF8);
	op_stkvar	(x,	1);
	create_insn	(x=0XEDFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE04);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE08);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE14);
	op_stkvar	(x,	1);
	set_cmt	(0XEE1C,	"s",	0);
	set_cmt	(0XEE20,	"c",	0);
	set_cmt	(0XEE24,	"n",	0);
	create_insn	(x=0XEE2C);
	op_stkvar	(x,	1);
	set_cmt	(0XEE34,	"dest",	0);
	set_cmt	(0XEE38,	"src",	0);
	create_insn	(x=0XEE38);
	op_stkvar	(x,	1);
	set_cmt	(0XEE3C,	"n",	0);
	create_insn	(x=0XEE3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE44);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE48);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE58);
	op_stkvar	(x,	1);
	set_cmt	(0XEE60,	"dest",	0);
	set_cmt	(0XEE64,	"src",	0);
	set_cmt	(0XEE68,	"n",	0);
	create_insn	(x=0XEE70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XEE78);
	op_stkvar	(x,	1);
	set_cmt	(0XEE80,	"slFd",	0);
	set_cmt	(0XEE84,	"slOpt",	0);
	set_cmt	(0XEE88,	"pData",	0);
	create_insn	(x=0XEE94);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE98);
	op_stkvar	(x,	1);
	create_insn	(x=0XEEA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XEEB0);
	op_stkvar	(x,	1);
	create_insn	(x=0XEEB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XEEBC);
	op_stkvar	(x,	1);
	set_cmt	(0XEEC4,	"dest",	0);
	create_insn	(x=0XEEC4);
	op_stkvar	(x,	1);
	set_cmt	(0XEEC8,	"src",	0);
	set_cmt	(0XEECC,	"n",	0);
	create_insn	(x=0XEED4);
	op_stkvar	(x,	1);
	create_insn	(x=0XEEDC);
	op_stkvar	(x,	1);
	create_insn	(x=0XEEE0);
	op_stkvar	(x,	1);
	set_cmt	(0XEEE8,	"dest",	0);
	create_insn	(x=0XEEE8);
	op_stkvar	(x,	1);
	set_cmt	(0XEEEC,	"src",	0);
	set_cmt	(0XEEF0,	"n",	0);
	create_insn	(x=0XEEF8);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF00);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF04);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF10);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF18);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF28);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF30);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF34);
	op_stkvar	(x,	1);
	set_cmt	(0XEF38,	"pOut",	0);
	create_insn	(x=0XEF38);
	op_stkvar	(x,	1);
	set_cmt	(0XEF3C,	"usData",	0);
	create_insn	(x=0XEF44);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF4C);
	op_stkvar	(x,	1);
	set_cmt	(0XEF50,	"s",	0);
	create_insn	(x=0XEF50);
	op_stkvar	(x,	1);
	set_cmt	(0XEF54,	"c",	0);
	set_cmt	(0XEF58,	"n",	0);
	create_insn	(x=0XEF60);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF68);
	op_stkvar	(x,	1);
	set_cmt	(0XEF6C,	"s",	0);
	create_insn	(x=0XEF6C);
	op_stkvar	(x,	1);
	set_cmt	(0XEF70,	"c",	0);
	set_cmt	(0XEF74,	"n",	0);
	create_insn	(x=0XEF7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF84);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF88);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF94);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF9C);
	op_stkvar	(x,	1);
	set_cmt	(0XEFA0,	"s",	0);
	create_insn	(x=0XEFA0);
	op_stkvar	(x,	1);
	set_cmt	(0XEFA4,	"c",	0);
	set_cmt	(0XEFA8,	"n",	0);
	create_insn	(x=0XEFB0);
	op_stkvar	(x,	1);
	create_insn	(x=0XEFB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XEFBC);
	op_stkvar	(x,	1);
	create_insn	(x=0XEFC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XEFD0);
	op_stkvar	(x,	1);
	create_insn	(x=0XEFD4);
	op_stkvar	(x,	1);
	create_insn	(x=0XEFE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XEFE8);
	op_stkvar	(x,	1);
	set_cmt	(0XEFEC,	"s",	0);
	create_insn	(x=0XEFEC);
	op_stkvar	(x,	1);
	set_cmt	(0XEFF0,	"c",	0);
	set_cmt	(0XEFF4,	"n",	0);
	create_insn	(x=0XEFFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XF004);
	op_stkvar	(x,	1);
	create_insn	(x=0XF008);
	op_stkvar	(x,	1);
	create_insn	(x=0XF010);
	op_stkvar	(x,	1);
	set_cmt	(0XF014,	"digest",	0);
	set_cmt	(0XF018,	"message",	0);
	set_cmt	(0XF01C,	"len",	0);
	create_insn	(x=0XF024);
	op_stkvar	(x,	1);
	create_insn	(x=0XF030);
	op_stkvar	(x,	1);
	set_cmt	(0XF038,	"s1",	0);
	set_cmt	(0XF03C,	"s2",	0);
	set_cmt	(0XF040,	"n",	0);
	create_insn	(x=0XF058);
	op_stkvar	(x,	1);
	create_insn	(0XF060);
	create_insn	(x=0XF064);
	op_stkvar	(x,	1);
	create_insn	(x=0XF068);
	op_stkvar	(x,	1);
	create_dword	(x=0XF078);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XF07C);
	create_insn	(0XF080);
	set_name	(0XF080,	"At88_Check_Key");
	create_insn	(x=0XF08C);
	op_stkvar	(x,	1);
	set_cmt	(0XF090,	"ucKey",	0);
	set_cmt	(0XF094,	"pData",	0);
	create_insn	(x=0XF094);
	op_stkvar	(x,	1);
	set_cmt	(0XF098,	"ulLen",	0);
	create_insn	(0XF0B0);
	set_name	(0XF0B0,	"At88_Check_Auth");
	create_insn	(x=0XF0BC);
	op_stkvar	(x,	1);
	set_cmt	(0XF0C0,	"pData",	0);
	create_insn	(x=0XF0D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XF0E0);
	op_stkvar	(x,	1);
	set_cmt	(0XF0E4,	"pData",	0);
	create_insn	(x=0XF0FC);
	op_stkvar	(x,	1);
	create_insn	(0XF104);
	create_insn	(x=0XF108);
	op_stkvar	(x,	1);
	create_insn	(x=0XF10C);
	op_stkvar	(x,	1);
	create_insn	(0XF11C);
	set_name	(0XF11C,	"At88_Check_All");
	create_insn	(x=0XF13C);
	op_stkvar	(x,	1);
	create_insn	(0XF144);
	create_insn	(x=0XF158);
	op_stkvar	(x,	1);
	create_insn	(0XF160);
	create_insn	(x=0XF174);
	op_stkvar	(x,	1);
	create_insn	(x=0XF17C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF18C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF190);
	op_stkvar	(x,	1);
	create_dword	(x=0XF1A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XF1A4);
	set_name	(0XF1A4,	"At88_Is_Encrypt");
	create_insn	(x=0XF1B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF1C8);
	op_stkvar	(x,	1);
	create_insn	(0XF1D0);
	create_insn	(x=0XF1D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XF1D8);
	op_stkvar	(x,	1);
	create_dword	(x=0XF1E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XF1EC);
	op_stkvar	(x,	1);
	set_name	(0XF1EC,	"At88_Is_Passed");
	create_insn	(x=0XF1F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0XF20C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XF210);
	set_name	(0XF210,	"At88_Check_Once");
	create_insn	(x=0XF230);
	op_stkvar	(x,	1);
	create_insn	(0XF238);
	create_insn	(x=0XF240);
	op_stkvar	(x,	1);
	create_insn	(x=0XF248);
	op_stkvar	(x,	1);
	create_insn	(x=0XF24C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF250);
	op_stkvar	(x,	1);
	create_insn	(x=0XF260);
	op_stkvar	(x,	1);
	set_name	(0XF260,	"At88_Is_Exist");
	create_insn	(x=0XF26C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF280);
	op_stkvar	(x,	1);
	create_insn	(0XF288);
	create_insn	(x=0XF28C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF290);
	op_stkvar	(x,	1);
	create_dword	(x=0XF2A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XF2A8);
	set_name	(0XF2A8,	"thread_recv_event");
	create_insn	(x=0XF2B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XF2BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XF2C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XF2C8);
	op_stkvar	(x,	1);
	set_cmt	(0XF2CC,	"state",	0);
	create_insn	(x=0XF2D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XF2DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XF2E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XF2EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XF2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XF2FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XF300);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF308);
	op_stkvar	(x,	1);
	set_cmt	(0XF310,	"useconds",	0);
	create_insn	(x=0XF310);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0XF31C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF320);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XF324);
	set_name	(0XF324,	"adb_subscribe");
	create_insn	(x=0XF330);
	op_stkvar	(x,	1);
	create_insn	(x=0XF334);
	op_stkvar	(x,	1);
	create_insn	(x=0XF338);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF33C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF340);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF344);
	op_stkvar	(x,	1);
	set_cmt	(0XF348,	"pFile",	0);
	create_insn	(x=0XF348);
	op_stkvar	(x,	1);
	set_cmt	(0XF35C,	"pFile",	0);
	create_insn	(x=0XF35C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF370);
	op_stkvar	(x,	1);
	set_cmt	(0XF374,	"s",	0);
	create_insn	(x=0XF378);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF37C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF384);
	op_stkvar	(x,	1);
	set_cmt	(0XF388,	"command",	0);
	create_insn	(x=0XF390);
	op_stkvar	(x,	1);
	set_cmt	(0XF394,	"s",	0);
	create_insn	(x=0XF398);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF39C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF3A4);
	op_stkvar	(x,	1);
	set_cmt	(0XF3A8,	"command",	0);
	create_insn	(x=0XF3B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF3B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF3C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF3C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XF3CC);
	op_stkvar	(x,	1);
	set_cmt	(0XF3D0,	"newthread",	0);
	set_cmt	(0XF3D4,	"attr",	0);
	set_cmt	(0XF3D8,	"start_routine",	0);
	create_insn	(x=0XF3D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XF3DC,	"arg",	0);
	create_insn	(x=0XF3DC);
	op_stkvar	(x,	1);
	create_dword	(x=0XF3F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF3F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF3FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF400);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF404);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF408);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF40C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XF410);
	set_name	(0XF410,	"adb_connect");
	create_insn	(x=0XF41C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF420);
	op_stkvar	(x,	1);
	create_insn	(x=0XF424);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF42C);
	op_hex		(x,	1);
	create_insn	(x=0XF438);
	op_stkvar	(x,	1);
	set_cmt	(0XF43C,	"s",	0);
	create_insn	(x=0XF440);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF444);
	op_stkvar	(x,	1);
	create_insn	(x=0XF448);
	op_stkvar	(x,	1);
	create_insn	(x=0XF450);
	op_stkvar	(x,	1);
	set_cmt	(0XF454,	"command",	0);
	create_insn	(x=0XF45C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF468);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XF470,	"sfd",	0);
	create_insn	(x=0XF470);
	op_stkvar	(x,	1);
	create_insn	(x=0XF474);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XF478,	"port",	0);
	create_insn	(x=0XF478);
	op_stkvar	(x,	1);
	create_dword	(x=0XF490);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF494);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XF498,	"m_remoteIP");
	create_insn	(0XF49C);
	set_name	(0XF49C,	"adb_close");
	create_insn	(x=0XF4A8);
	op_stkvar	(x,	1);
	set_cmt	(0XF4AC,	"sfd",	0);
	create_insn	(x=0XF4AC);
	op_stkvar	(x,	1);
	create_insn	(0XF4C4);
	set_name	(0XF4C4,	"adb_send");
	create_insn	(x=0XF4D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XF4D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XF4D8);
	op_stkvar	(x,	1);
	set_cmt	(0XF4DC,	"sfd",	0);
	create_insn	(x=0XF4DC);
	op_stkvar	(x,	1);
	set_cmt	(0XF4E0,	"data",	0);
	create_insn	(x=0XF4E0);
	op_stkvar	(x,	1);
	set_cmt	(0XF4E4,	"iSize",	0);
	create_insn	(x=0XF4E4);
	op_stkvar	(x,	1);
	create_insn	(0XF4FC);
	set_name	(0XF4FC,	"adb_is_conn");
	create_insn	(x=0XF508);
	op_stkvar	(x,	1);
	set_cmt	(0XF50C,	"sfd",	0);
	create_insn	(x=0XF50C);
	op_stkvar	(x,	1);
	create_insn	(0XF524);
	set_name	(0XF524,	"adb_recv");
	create_insn	(x=0XF530);
	op_stkvar	(x,	1);
	create_insn	(x=0XF534);
	op_stkvar	(x,	1);
	create_insn	(x=0XF538);
	op_stkvar	(x,	1);
	set_cmt	(0XF53C,	"sfd",	0);
	create_insn	(x=0XF53C);
	op_stkvar	(x,	1);
	set_cmt	(0XF540,	"buff",	0);
	create_insn	(x=0XF540);
	op_stkvar	(x,	1);
	set_cmt	(0XF544,	"iSize",	0);
	create_insn	(x=0XF544);
	op_stkvar	(x,	1);
	create_insn	(0XF55C);
	set_name	(0XF55C,	"aoa_start");
	create_insn	(x=0XF56C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF570);
	op_stkvar	(x,	1);
	set_cmt	(0XF578,	"dest",	0);
	create_insn	(x=0XF57C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XF580,	"n",	0);
	create_insn	(x=0XF588);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF590);
	op_stkvar	(x,	1);
	set_cmt	(0XF594,	"fd",	0);
	set_cmt	(0XF598,	"request",	0);
	create_insn	(x=0XF598);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF5A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XF5A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XF5B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XF5B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF5C8);
	op_stkvar	(x,	1);
	create_insn	(0XF5D0);
	create_insn	(x=0XF5D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XF5D8);
	op_stkvar	(x,	1);
	set_cmt	(0XF5E0,	"dest",	0);
	create_insn	(x=0XF5E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XF5E8,	"n",	0);
	create_insn	(x=0XF5F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF5F8);
	op_stkvar	(x,	1);
	set_cmt	(0XF5FC,	"fd",	0);
	set_cmt	(0XF600,	"request",	0);
	create_insn	(x=0XF600);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF60C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF610);
	op_stkvar	(x,	1);
	create_insn	(x=0XF61C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF620);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF630);
	op_stkvar	(x,	1);
	create_insn	(0XF638);
	create_insn	(x=0XF63C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF640);
	op_stkvar	(x,	1);
	set_cmt	(0XF648,	"dest",	0);
	create_insn	(x=0XF64C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XF650,	"n",	0);
	create_insn	(x=0XF658);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF660);
	op_stkvar	(x,	1);
	set_cmt	(0XF664,	"fd",	0);
	set_cmt	(0XF668,	"request",	0);
	create_insn	(x=0XF668);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF674);
	op_stkvar	(x,	1);
	create_insn	(x=0XF678);
	op_stkvar	(x,	1);
	create_insn	(x=0XF684);
	op_stkvar	(x,	1);
	create_insn	(x=0XF688);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF698);
	op_stkvar	(x,	1);
	create_insn	(0XF6A0);
	create_insn	(x=0XF6A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XF6A8);
	op_stkvar	(x,	1);
	set_cmt	(0XF6AC,	"pulVersion",	0);
	create_insn	(x=0XF6C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XF6C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XF6CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XF6D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XF6E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XF6F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XF700);
	op_stkvar	(x,	1);
	create_insn	(x=0XF70C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF714);
	op_stkvar	(x,	1);
	create_insn	(x=0XF718);
	op_stkvar	(x,	1);
	set_cmt	(0XF71C,	"s",	0);
	create_insn	(x=0XF720);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF730);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF738);
	op_stkvar	(x,	1);
	set_cmt	(0XF73C,	"fd",	0);
	set_cmt	(0XF740,	"request",	0);
	create_insn	(x=0XF740);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF74C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF750);
	op_stkvar	(x,	1);
	create_insn	(x=0XF75C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF760);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF770);
	op_stkvar	(x,	1);
	create_insn	(0XF778);
	create_insn	(x=0XF77C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF780);
	op_stkvar	(x,	1);
	set_cmt	(0XF788,	"dest",	0);
	create_insn	(x=0XF78C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XF790,	"n",	0);
	create_insn	(x=0XF798);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF7A0);
	op_stkvar	(x,	1);
	set_cmt	(0XF7A4,	"fd",	0);
	set_cmt	(0XF7A8,	"request",	0);
	create_insn	(x=0XF7A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF7B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XF7B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XF7C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XF7C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF7D8);
	op_stkvar	(x,	1);
	create_insn	(0XF7E0);
	create_insn	(x=0XF7E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XF7E8);
	op_stkvar	(x,	1);
	set_cmt	(0XF7F0,	"pVersion",	0);
	create_insn	(x=0XF804);
	op_stkvar	(x,	1);
	create_insn	(x=0XF818);
	op_stkvar	(x,	1);
	set_cmt	(0XF820,	"s",	0);
	set_cmt	(0XF824,	"c",	0);
	set_cmt	(0XF828,	"n",	0);
	create_insn	(x=0XF834);
	op_stkvar	(x,	1);
	create_insn	(x=0XF838);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF840);
	op_stkvar	(x,	1);
	set_cmt	(0XF844,	"fd",	0);
	set_cmt	(0XF848,	"request",	0);
	create_insn	(x=0XF848);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF854);
	op_stkvar	(x,	1);
	create_insn	(x=0XF858);
	op_stkvar	(x,	1);
	create_insn	(x=0XF864);
	op_stkvar	(x,	1);
	create_insn	(x=0XF868);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF878);
	op_stkvar	(x,	1);
	create_insn	(x=0XF880);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XF888,	"fd",	0);
	set_cmt	(0XF88C,	"request",	0);
	create_insn	(x=0XF89C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF8A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XF8AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF8B8);
	op_stkvar	(x,	1);
	create_insn	(0XF8C0);
	create_insn	(x=0XF8C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XF8C8);
	op_stkvar	(x,	1);
	create_dword	(x=0XF8D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XF8D8,	"src");
	create_dword	(x=0XF8DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF8E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF8E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF8E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF8EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF8F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF8F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XF8F8);
	create_dword	(x=0XF8FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XF900);
	set_name	(0XF900,	"aoa_thread_event");
	create_insn	(x=0XF90C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF910);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XF914,	"oflag",	0);
	create_insn	(x=0XF920);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF928);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF938);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF93C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF948);
	op_stkvar	(x,	1);
	create_insn	(x=0XF950);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF958);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XF960,	"fd",	0);
	set_cmt	(0XF964,	"cmd",	0);
	create_insn	(x=0XF970);
	op_hex		(x,	1);
	set_cmt	(0XF974,	"fd",	0);
	set_cmt	(0XF978,	"cmd",	0);
	create_insn	(x=0XF994);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XF99C,	"fd",	0);
	create_insn	(x=0XF9A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF9B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF9BC);
	op_stkvar	(x,	1);
	create_insn	(0XF9C4);
	create_insn	(x=0XF9C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XF9CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF9D4);
	op_stkvar	(x,	1);
	set_cmt	(0XF9D8,	"fd",	0);
	set_cmt	(0XF9DC,	"request",	0);
	create_insn	(x=0XF9E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XF9EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XF9F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XF9FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFA08);
	op_stkvar	(x,	1);
	create_insn	(x=0XFA0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFA10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFA18);
	op_stkvar	(x,	1);
	set_cmt	(0XFA24,	"useconds",	0);
	create_insn	(x=0XFA24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFA30);
	op_stkvar	(x,	1);
	create_dword	(x=0XFA40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFA44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFA48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFA4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFA50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFA54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFA58);
	set_name	(0XFA58,	"aoa_subscribe");
	create_insn	(x=0XFA64);
	op_stkvar	(x,	1);
	create_insn	(x=0XFA68);
	op_stkvar	(x,	1);
	create_insn	(x=0XFA6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFA70);
	op_stkvar	(x,	1);
	create_insn	(x=0XFA78);
	op_stkvar	(x,	1);
	set_cmt	(0XFA7C,	"newthread",	0);
	set_cmt	(0XFA80,	"attr",	0);
	set_cmt	(0XFA84,	"start_routine",	0);
	create_insn	(x=0XFA84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFA88,	"arg",	0);
	create_insn	(x=0XFA88);
	op_stkvar	(x,	1);
	create_dword	(x=0XFAA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFAA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XFAA8);
	op_stkvar	(x,	1);
	set_name	(0XFAA8,	"aoa_connect");
	create_insn	(x=0XFAB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFAB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFABC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFAD0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFAD8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFADC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFAE8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFAEC);
	op_stkvar	(x,	1);
	create_dword	(x=0XFB00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XFB04);
	op_stkvar	(x,	1);
	set_name	(0XFB04,	"aoa_close");
	create_insn	(x=0XFB10);
	op_stkvar	(x,	1);
	create_insn	(x=0XFB14);
	op_stkvar	(x,	1);
	create_insn	(0XFB34);
	set_name	(0XFB34,	"aoa_send");
	create_insn	(x=0XFB40);
	op_stkvar	(x,	1);
	create_insn	(x=0XFB44);
	op_stkvar	(x,	1);
	create_insn	(x=0XFB48);
	op_stkvar	(x,	1);
	create_insn	(x=0XFB4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFB50);
	op_stkvar	(x,	1);
	create_insn	(x=0XFB54);
	op_stkvar	(x,	1);
	create_insn	(x=0XFB58);
	op_stkvar	(x,	1);
	create_insn	(x=0XFB60);
	op_stkvar	(x,	1);
	create_insn	(x=0XFB68);
	op_stkvar	(x,	1);
	create_insn	(x=0XFB6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFB74);
	op_stkvar	(x,	1);
	create_insn	(x=0XFB78);
	op_stkvar	(x,	1);
	create_insn	(x=0XFB88);
	op_stkvar	(x,	1);
	create_insn	(x=0XFB8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFB90);
	op_stkvar	(x,	1);
	create_insn	(x=0XFB94);
	op_stkvar	(x,	1);
	create_insn	(x=0XFB98);
	op_stkvar	(x,	1);
	create_insn	(x=0XFB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFBA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFBA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFBAC);
	op_stkvar	(x,	1);
	set_cmt	(0XFBB0,	"fd",	0);
	set_cmt	(0XFBB4,	"request",	0);
	create_insn	(x=0XFBC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFBC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFBD0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFBD4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFBDC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFBE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFBE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFBF0);
	op_stkvar	(x,	1);
	create_dword	(x=0XFC00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFC04);
	create_insn	(x=0XFC08);
	op_stkvar	(x,	1);
	set_name	(0XFC08,	"aoa_is_conn");
	create_insn	(x=0XFC14);
	op_stkvar	(x,	1);
	create_insn	(x=0XFC18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFC2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFC34);
	op_stkvar	(x,	1);
	create_insn	(x=0XFC44);
	op_stkvar	(x,	1);
	create_insn	(0XFC4C);
	create_insn	(x=0XFC50);
	op_stkvar	(x,	1);
	create_insn	(x=0XFC54);
	op_stkvar	(x,	1);
	create_dword	(x=0XFC68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFC6C);
	set_name	(0XFC6C,	"aoa_recv");
	create_insn	(x=0XFC78);
	op_stkvar	(x,	1);
	create_insn	(x=0XFC7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFC80);
	op_stkvar	(x,	1);
	create_insn	(x=0XFC84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFC98);
	op_stkvar	(x,	1);
	create_insn	(x=0XFCA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFCA8,	"nbytes",	0);
	create_insn	(x=0XFCA8);
	op_stkvar	(x,	1);
	set_cmt	(0XFCAC,	"fd",	0);
	set_cmt	(0XFCB0,	"buf",	0);
	create_insn	(x=0XFCB0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFCBC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFCC0);
	op_stkvar	(x,	1);
	create_dword	(x=0XFCD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFCD4);
	set_name	(0XFCD4,	"muxd_is_conn");
	create_insn	(x=0XFCE0);
	op_stkvar	(x,	1);
	set_cmt	(0XFCE4,	"sfd",	0);
	create_insn	(x=0XFCE4);
	op_stkvar	(x,	1);
	create_insn	(0XFCFC);
	set_name	(0XFCFC,	"muxd_conn");
	create_insn	(x=0XFD08);
	op_stkvar	(x,	1);
	create_insn	(x=0XFD0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFD10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFD18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFD34);
	op_stkvar	(x,	1);
	create_insn	(x=0XFD3C);
	op_stkvar	(x,	1);
	create_dword	(x=0XFD50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFD54);
	set_name	(0XFD54,	"muxd_close");
	create_insn	(x=0XFD60);
	op_stkvar	(x,	1);
	create_insn	(x=0XFD64);
	op_stkvar	(x,	1);
	create_insn	(x=0XFD74);
	op_stkvar	(x,	1);
	create_insn	(0XFD90);
	set_name	(0XFD90,	"muxd_recv");
	create_insn	(x=0XFD9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFDA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFDA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFDA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFDAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFDB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFDB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFDBC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFDCC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFDD0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFDDC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFDE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFDE8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFDEC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFDF0);
	op_stkvar	(x,	1);
	create_insn	(0XFE00);
	set_name	(0XFE00,	"muxd_send");
	create_insn	(x=0XFE0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFE10);
	op_stkvar	(x,	1);
	create_insn	(x=0XFE14);
	op_stkvar	(x,	1);
	create_insn	(x=0XFE18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFE1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFE20);
	op_stkvar	(x,	1);
	create_insn	(x=0XFE24);
	op_stkvar	(x,	1);
	create_insn	(x=0XFE38);
	op_stkvar	(x,	1);
	create_insn	(x=0XFE3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFE48);
	op_stkvar	(x,	1);
	create_insn	(x=0XFE4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFE54);
	op_stkvar	(x,	1);
	create_insn	(x=0XFE58);
	op_stkvar	(x,	1);
	create_insn	(x=0XFE5C);
	op_stkvar	(x,	1);
	create_insn	(0XFE6C);
	set_name	(0XFE6C,	"tcp_is_conn");
	create_insn	(x=0XFE78);
	op_stkvar	(x,	1);
	create_insn	(x=0XFE7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFE8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFE94);
	op_stkvar	(x,	1);
	set_cmt	(0XFE98,	"fd",	0);
	create_insn	(x=0XFE98);
	op_stkvar	(x,	1);
	set_cmt	(0XFE9C,	"buf",	0);
	set_cmt	(0XFEA0,	"n",	0);
	set_cmt	(0XFEA4,	"flags",	0);
	create_insn	(x=0XFEB0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFEB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFECC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFEF0);
	op_stkvar	(x,	1);
	create_insn	(0XFEF8);
	set_cmt	(0XFF0C,	"useconds",	0);
	create_insn	(0XFF18);
	create_insn	(x=0XFF1C);
	op_stkvar	(x,	1);
	create_insn	(0XFF24);
	create_insn	(x=0XFF28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFF2C);
	op_stkvar	(x,	1);
	create_insn	(0XFF3C);
	set_name	(0XFF3C,	"tcp_connect");
	create_insn	(x=0XFF48);
	op_stkvar	(x,	1);
	create_insn	(x=0XFF4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFF50);
	op_stkvar	(x,	1);
	create_insn	(x=0XFF54);
	op_stkvar	(x,	1);
	create_insn	(x=0XFF64);
	op_stkvar	(x,	1);
	set_cmt	(0XFF6C,	"fd",	0);
	create_insn	(x=0XFF74);
	op_stkvar	(x,	1);
	create_insn	(x=0XFF80);
	op_stkvar	(x,	1);
	set_cmt	(0XFF84,	"s",	0);
	set_cmt	(0XFF88,	"n",	0);
	create_insn	(x=0XFF94);
	op_stkvar	(x,	1);
	set_cmt	(0XFF98,	"hostshort",	0);
	create_insn	(x=0XFFA4);
	op_stkvar	(x,	1);
	set_cmt	(0XFFA8,	"hostshort",	0);
	create_insn	(x=0XFFB4);
	op_stkvar	(x,	1);
	set_cmt	(0XFFB8,	"domain",	0);
	set_cmt	(0XFFBC,	"type",	0);
	set_cmt	(0XFFC0,	"protocol",	0);
	create_insn	(x=0XFFCC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFD4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFF0);
	op_stkvar	(x,	1);
	create_insn	(0XFFF8);
	create_insn	(x=0XFFFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X10004);
	op_stkvar	(x,	1);
	create_insn	(x=0X1000C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10010);
	op_stkvar	(x,	1);
	create_insn	(x=0X10018);
	op_stkvar	(x,	1);
	set_cmt	(0X10020,	"optlen",	0);
	create_insn	(x=0X10020);
	op_stkvar	(x,	1);
	set_cmt	(0X10024,	"fd",	0);
	set_cmt	(0X10028,	"level",	0);
	set_cmt	(0X1002C,	"optname",	0);
	set_cmt	(0X10030,	"optval",	0);
	create_insn	(x=0X10038);
	op_stkvar	(x,	1);
	create_insn	(x=0X10040);
	op_stkvar	(x,	1);
	set_cmt	(0X10048,	"optlen",	0);
	create_insn	(x=0X10048);
	op_stkvar	(x,	1);
	set_cmt	(0X1004C,	"fd",	0);
	set_cmt	(0X10050,	"level",	0);
	set_cmt	(0X10054,	"optname",	0);
	set_cmt	(0X10058,	"optval",	0);
	create_insn	(x=0X10060);
	op_stkvar	(x,	1);
	create_insn	(x=0X10068);
	op_stkvar	(x,	1);
	set_cmt	(0X10070,	"optlen",	0);
	create_insn	(x=0X10070);
	op_stkvar	(x,	1);
	set_cmt	(0X10074,	"fd",	0);
	set_cmt	(0X10078,	"level",	0);
	set_cmt	(0X1007C,	"optname",	0);
	set_cmt	(0X10080,	"optval",	0);
	create_insn	(x=0X1008C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10090);
	op_stkvar	(x,	1);
	create_insn	(x=0X10098);
	op_stkvar	(x,	1);
	set_cmt	(0X100A0,	"optlen",	0);
	create_insn	(x=0X100A0);
	op_stkvar	(x,	1);
	set_cmt	(0X100A4,	"fd",	0);
	set_cmt	(0X100A8,	"level",	0);
	set_cmt	(0X100AC,	"optname",	0);
	set_cmt	(0X100B0,	"optval",	0);
	create_insn	(x=0X100B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X100C0);
	op_stkvar	(x,	1);
	set_cmt	(0X100C4,	"fd",	0);
	set_cmt	(0X100C8,	"addr",	0);
	set_cmt	(0X100CC,	"len",	0);
	create_insn	(x=0X100E0);
	op_stkvar	(x,	1);
	set_cmt	(0X100E8,	"fd",	0);
	create_insn	(x=0X100F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X100FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10108);
	op_stkvar	(x,	1);
	create_insn	(x=0X10110);
	op_stkvar	(x,	1);
	set_cmt	(0X10114,	"s",	0);
	set_cmt	(0X10118,	"n",	0);
	create_insn	(x=0X10124);
	op_stkvar	(x,	1);
	set_cmt	(0X10128,	"cp",	0);
	create_insn	(x=0X10128);
	op_stkvar	(x,	1);
	create_insn	(x=0X10134);
	op_stkvar	(x,	1);
	create_insn	(x=0X10138);
	op_stkvar	(x,	1);
	set_cmt	(0X10144,	"hostshort",	0);
	create_insn	(x=0X10150);
	op_stkvar	(x,	1);
	create_insn	(x=0X10158);
	op_stkvar	(x,	1);
	create_insn	(x=0X1015C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10164);
	op_stkvar	(x,	1);
	set_cmt	(0X10168,	"fd",	0);
	set_cmt	(0X1016C,	"request",	0);
	create_insn	(x=0X10174);
	op_stkvar	(x,	1);
	create_insn	(x=0X1017C);
	op_stkvar	(x,	1);
	set_cmt	(0X10180,	"fd",	0);
	set_cmt	(0X10184,	"addr",	0);
	set_cmt	(0X10188,	"len",	0);
	create_insn	(x=0X1019C);
	op_stkvar	(x,	1);
	create_insn	(x=0X101A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X101AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X101B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X101B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X101BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X101C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X101CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X101D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X101DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X101E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X101E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X101F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1020C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10220);
	op_stkvar	(x,	1);
	create_insn	(x=0X10228);
	op_hex		(x,	1);
	create_insn	(x=0X10244);
	op_stkvar	(x,	1);
	create_insn	(x=0X10254);
	op_stkvar	(x,	1);
	create_insn	(x=0X10258);
	op_stkvar	(x,	1);
	create_insn	(x=0X10260);
	op_stkvar	(x,	1);
	create_insn	(x=0X10268);
	op_stkvar	(x,	1);
	create_insn	(x=0X1026C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10278);
	op_stkvar	(x,	1);
	create_insn	(x=0X10280);
	op_stkvar	(x,	1);
	create_insn	(x=0X10284);
	op_stkvar	(x,	1);
	create_insn	(x=0X10290);
	op_stkvar	(x,	1);
	create_insn	(x=0X102A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X102BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X102C4);
	op_hex		(x,	1);
	create_insn	(x=0X102E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X102F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X102F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X102FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X10304);
	op_stkvar	(x,	1);
	create_insn	(x=0X10308);
	op_stkvar	(x,	1);
	create_insn	(x=0X10314);
	op_stkvar	(x,	1);
	create_insn	(x=0X1031C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10320);
	op_stkvar	(x,	1);
	create_insn	(x=0X1032C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10344);
	op_stkvar	(x,	1);
	create_insn	(x=0X10358);
	op_stkvar	(x,	1);
	create_insn	(x=0X10360);
	op_hex		(x,	1);
	create_insn	(x=0X1037C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1038C);
	op_stkvar	(x,	1);
	set_cmt	(0X10394,	"readfds",	0);
	create_insn	(x=0X10394);
	op_stkvar	(x,	1);
	create_insn	(x=0X10398);
	op_stkvar	(x,	1);
	create_insn	(x=0X1039C);
	op_stkvar	(x,	1);
	create_insn	(x=0X103A0);
	op_stkvar	(x,	1);
	set_cmt	(0X103A4,	"timeout",	0);
	create_insn	(x=0X103A4);
	op_stkvar	(x,	1);
	set_cmt	(0X103A8,	"nfds",	0);
	set_cmt	(0X103AC,	"writefds",	0);
	set_cmt	(0X103B0,	"exceptfds",	0);
	create_insn	(x=0X103C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X103D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X103EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X103F4);
	op_hex		(x,	1);
	create_insn	(x=0X103FC);
	op_hex		(x,	1);
	create_insn	(x=0X10400);
	op_hex		(x,	1);
	create_insn	(x=0X1040C);
	op_stkvar	(x,	1);
	set_cmt	(0X10414,	"fd",	0);
	create_insn	(x=0X1041C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10434);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10444);
	op_stkvar	(x,	1);
	create_insn	(x=0X1044C);
	op_stkvar	(x,	1);
	set_cmt	(0X10454,	"fd",	0);
	create_insn	(x=0X1045C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10468);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10474);
	op_stkvar	(x,	1);
	create_insn	(0X1047C);
	create_insn	(x=0X10480);
	op_stkvar	(x,	1);
	create_insn	(x=0X10484);
	op_stkvar	(x,	1);
	create_insn	(x=0X1048C);
	op_stkvar	(x,	1);
	set_cmt	(0X10490,	"fd",	0);
	set_cmt	(0X10494,	"request",	0);
	create_insn	(x=0X104A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X104A4);
	op_stkvar	(x,	1);
	create_dword	(x=0X104B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X104B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X104BC);
	create_dword	(0X104C0);
	create_dword	(0X104C4);
	create_dword	(x=0X104C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X104CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X104D0);
	set_name	(0X104D0,	"tcp_send");
	create_insn	(x=0X104DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X104E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X104E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X104E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X104EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X104F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X10500);
	op_stkvar	(x,	1);
	create_insn	(0X10508);
	create_insn	(x=0X1050C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10514);
	op_stkvar	(x,	1);
	create_insn	(x=0X10518);
	op_stkvar	(x,	1);
	create_insn	(x=0X1051C);
	op_stkvar	(x,	1);
	set_cmt	(0X10520,	"buf",	0);
	create_insn	(x=0X10524);
	op_stkvar	(x,	1);
	create_insn	(x=0X10528);
	op_stkvar	(x,	1);
	set_cmt	(0X10530,	"fd",	0);
	create_insn	(x=0X10530);
	op_stkvar	(x,	1);
	set_cmt	(0X10534,	"n",	0);
	set_cmt	(0X10538,	"flags",	0);
	create_insn	(x=0X10544);
	op_stkvar	(x,	1);
	create_insn	(x=0X10548);
	op_stkvar	(x,	1);
	create_insn	(x=0X10554);
	op_stkvar	(x,	1);
	create_insn	(x=0X10558);
	op_stkvar	(x,	1);
	create_insn	(x=0X10560);
	op_stkvar	(x,	1);
	create_insn	(x=0X10568);
	op_stkvar	(x,	1);
	set_cmt	(0X10588,	"useconds",	0);
	create_insn	(0X10594);
	set_cmt	(0X105A8,	"useconds",	0);
	create_insn	(x=0X105B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X105B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X105C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X105C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X105C8);
	op_stkvar	(x,	1);
	create_insn	(0X105D8);
	set_name	(0X105D8,	"tcp_recv");
	create_insn	(x=0X105E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X105E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X105EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X105F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X105F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X105FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X10600);
	op_stkvar	(x,	1);
	create_insn	(x=0X10610);
	op_stkvar	(x,	1);
	create_insn	(x=0X10618);
	op_stkvar	(x,	1);
	create_insn	(x=0X1061C);
	op_stkvar	(x,	1);
	set_cmt	(0X10620,	"buf",	0);
	create_insn	(x=0X10624);
	op_stkvar	(x,	1);
	create_insn	(x=0X10628);
	op_stkvar	(x,	1);
	set_cmt	(0X10630,	"fd",	0);
	create_insn	(x=0X10630);
	op_stkvar	(x,	1);
	set_cmt	(0X10634,	"n",	0);
	set_cmt	(0X10638,	"flags",	0);
	create_insn	(x=0X10644);
	op_stkvar	(x,	1);
	create_insn	(x=0X10648);
	op_stkvar	(x,	1);
	create_insn	(x=0X10654);
	op_stkvar	(x,	1);
	create_insn	(x=0X10658);
	op_stkvar	(x,	1);
	create_insn	(x=0X10660);
	op_stkvar	(x,	1);
	create_insn	(x=0X10668);
	op_stkvar	(x,	1);
	set_cmt	(0X1069C,	"useconds",	0);
	create_insn	(x=0X106A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X106A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X106B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X106B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X106BC);
	op_stkvar	(x,	1);
	create_insn	(0X106CC);
	set_name	(0X106CC,	"tcp_close");
	create_insn	(x=0X106D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X106DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X106F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X106F8);
	op_stkvar	(x,	1);
	set_cmt	(0X10700,	"fd",	0);
	create_insn	(x=0X10708);
	op_stkvar	(x,	1);
	create_insn	(x=0X10718);
	op_stkvar	(x,	1);
	create_insn	(x=0X1071C);
	op_stkvar	(x,	1);
	create_insn	(0X1072C);
	set_name	(0X1072C,	"usbmuxd_send_first");
	create_insn	(x=0X10738);
	op_stkvar	(x,	1);
	create_insn	(x=0X1073C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10740);
	op_stkvar	(x,	1);
	set_cmt	(0X10744,	"hostlong",	0);
	create_insn	(x=0X1074C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10750);
	op_hex		(x,	1);
	create_insn	(x=0X1076C);
	op_hex		(x,	1);
	create_insn	(x=0X10788);
	op_hex		(x,	1);
	set_cmt	(0X107B8,	"hostlong",	0);
	create_insn	(x=0X107C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X107C4);
	op_hex		(x,	1);
	create_insn	(x=0X107E0);
	op_hex		(x,	1);
	create_insn	(x=0X107FC);
	op_hex		(x,	1);
	set_cmt	(0X1082C,	"hostlong",	0);
	create_insn	(x=0X10834);
	op_stkvar	(x,	1);
	create_insn	(x=0X10838);
	op_hex		(x,	1);
	create_insn	(x=0X10854);
	op_hex		(x,	1);
	create_insn	(x=0X10870);
	op_hex		(x,	1);
	set_cmt	(0X108A0,	"hostlong",	0);
	create_insn	(x=0X108A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X108AC);
	op_hex		(x,	1);
	create_insn	(x=0X108C8);
	op_hex		(x,	1);
	create_insn	(x=0X108E4);
	op_hex		(x,	1);
	create_insn	(x=0X10914);
	op_stkvar	(x,	1);
	create_insn	(x=0X1091C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10924);
	op_stkvar	(x,	1);
	create_insn	(x=0X10948);
	op_stkvar	(x,	1);
	set_name	(0X10948,	"init_connection");
	create_insn	(x=0X10954);
	op_stkvar	(x,	1);
	create_insn	(x=0X10958);
	op_stkvar	(x,	1);
	create_insn	(x=0X1095C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10968);
	op_stkvar	(x,	1);
	create_insn	(x=0X1096C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10974);
	op_stkvar	(x,	1);
	create_insn	(x=0X10978);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10980);
	op_stkvar	(x,	1);
	create_insn	(x=0X10984);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1098C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10990);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10998);
	op_stkvar	(x,	1);
	create_insn	(x=0X1099C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X109A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X109AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X109B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X109B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X109C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X109C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X109CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X109D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X109D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X109DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X109E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X109E8);
	op_stkvar	(x,	1);
	create_dword	(x=0X109FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10A00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10A04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10A08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10A0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10A10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10A14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10A18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10A1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10A20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X10A24);
	set_name	(0X10A24,	"thread_connection_fun");
	create_insn	(x=0X10A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X10A34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X10A50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10A5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X10A8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10A94);
	op_stkvar	(x,	1);
	create_insn	(x=0X10A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X10AA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X10AB0,	"pConn",	0);
	create_insn	(x=0X10AB0);
	op_stkvar	(x,	1);
	set_cmt	(0X10AB4,	"device_type",	0);
	create_insn	(x=0X10ABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X10AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X10AD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X10ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X10AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X10AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X10B00);
	op_stkvar	(x,	1);
	create_insn	(x=0X10B04);
	op_stkvar	(x,	1);
	create_insn	(0X10B14);
	create_insn	(x=0X10B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X10B20);
	op_stkvar	(x,	1);
	create_insn	(x=0X10B38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X10B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X10B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X10B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10B78);
	op_stkvar	(x,	1);
	create_insn	(x=0X10B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X10B88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10B98);
	op_stkvar	(x,	1);
	create_insn	(x=0X10BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X10BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X10BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X10BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X10BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X10BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X10BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X10C00);
	op_stkvar	(x,	1);
	set_cmt	(0X10C10,	"pConn",	0);
	create_insn	(x=0X10C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X10C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X10C28);
	op_stkvar	(x,	1);
	create_insn	(x=0X10C34);
	op_stkvar	(x,	1);
	create_insn	(x=0X10C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10C44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10C54);
	op_stkvar	(x,	1);
	create_insn	(x=0X10C64);
	op_stkvar	(x,	1);
	create_insn	(x=0X10C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X10C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X10C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X10CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X10CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X10CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X10CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X10CD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X10CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X10CF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X10CFC);
	op_stkvar	(x,	1);
	set_cmt	(0X10D08,	"useconds",	0);
	create_insn	(x=0X10D10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10DA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10DB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X10DC4);
	op_stkvar	(x,	1);
	create_dword	(x=0X10DD4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10DD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10DDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10DE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10DE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10DE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10DEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X10DF0);
	create_dword	(x=0X10DF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10DF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X10DFC);
	set_name	(0X10DFC,	"usbmux_event_cb");
	create_insn	(x=0X10E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X10E0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X10E20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10E2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10E34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10E40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10E4C);
	op_stkvar	(x,	1);
	set_cmt	(0X10E50,	"attr",	0);
	create_insn	(x=0X10E58);
	op_stkvar	(x,	1);
	set_cmt	(0X10E5C,	"attr",	0);
	set_cmt	(0X10E60,	"detachstate",	0);
	create_insn	(x=0X10E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X10E6C);
	op_stkvar	(x,	1);
	set_cmt	(0X10E70,	"newthread",	0);
	set_cmt	(0X10E74,	"attr",	0);
	set_cmt	(0X10E78,	"start_routine",	0);
	create_insn	(x=0X10E78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X10E7C,	"arg",	0);
	create_insn	(x=0X10E84);
	op_stkvar	(x,	1);
	set_cmt	(0X10E88,	"attr",	0);
	create_insn	(x=0X10E94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10E9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X10EB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10EB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10EB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10EBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10EC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10EC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X10EC8);
	set_name	(0X10EC8,	"adb_event_cb");
	create_insn	(x=0X10ED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X10ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X10EE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X10EF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10EFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10F08);
	op_stkvar	(x,	1);
	set_cmt	(0X10F0C,	"attr",	0);
	create_insn	(x=0X10F14);
	op_stkvar	(x,	1);
	set_cmt	(0X10F18,	"attr",	0);
	set_cmt	(0X10F1C,	"detachstate",	0);
	create_insn	(x=0X10F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X10F28);
	op_stkvar	(x,	1);
	set_cmt	(0X10F2C,	"newthread",	0);
	set_cmt	(0X10F30,	"attr",	0);
	set_cmt	(0X10F34,	"start_routine",	0);
	create_insn	(x=0X10F34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X10F38,	"arg",	0);
	create_insn	(x=0X10F40);
	op_stkvar	(x,	1);
	set_cmt	(0X10F44,	"attr",	0);
	create_insn	(x=0X10F50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10F58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X10F6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10F70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10F74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10F78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10F7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X10F80);
	set_name	(0X10F80,	"usbsocket_init");
	create_insn	(x=0X10F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X10F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X10FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X10FB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X10FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X10FD0);
	op_stkvar	(x,	1);
	set_cmt	(0X10FD8,	"pMutex",	0);
	create_insn	(x=0X10FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X10FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X10FEC);
	op_stkvar	(x,	1);
	set_cmt	(0X10FF8,	"event_cb",	0);
	create_insn	(x=0X10FF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X10FFC,	"pUser",	0);
	create_insn	(x=0X11004);
	op_stkvar	(x,	1);
	create_insn	(x=0X11010);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11020);
	op_stkvar	(x,	1);
	create_insn	(x=0X11024);
	op_stkvar	(x,	1);
	create_insn	(x=0X11030);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1103C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11044);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11050);
	op_stkvar	(x,	1);
	create_insn	(x=0X11058);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11060);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1106C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11070);
	op_stkvar	(x,	1);
	create_dword	(x=0X11080);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11084);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X11084,	"event_cb");
	create_dword	(x=0X11088);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1108C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11090);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11094);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11098);
	set_name	(0X11098,	"usbsocket_create_handle");
	create_insn	(x=0X110A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X110AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X110B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X110BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X110D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X110DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X110E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X110F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X110F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X110FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X11100);
	op_stkvar	(x,	1);
	create_insn	(x=0X11108);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11118);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X11120,	"pConn",	0);
	create_insn	(x=0X11120);
	op_stkvar	(x,	1);
	set_cmt	(0X11124,	"device_type",	0);
	create_insn	(x=0X1112C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11138);
	op_stkvar	(x,	1);
	create_insn	(x=0X1113C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11140);
	op_stkvar	(x,	1);
	create_insn	(x=0X1114C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11150);
	op_stkvar	(x,	1);
	create_insn	(x=0X11158);
	op_stkvar	(x,	1);
	create_insn	(x=0X11160);
	op_stkvar	(x,	1);
	create_insn	(x=0X1116C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11170);
	op_stkvar	(x,	1);
	create_insn	(x=0X1117C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11184);
	op_stkvar	(x,	1);
	create_insn	(x=0X1118C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11190);
	op_stkvar	(x,	1);
	create_insn	(x=0X1119C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X111A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X111AC);
	op_stkvar	(x,	1);
	create_dword	(x=0X111BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X111C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X111C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X111C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X111CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X111D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X111D4);
	op_stkvar	(x,	1);
	set_name	(0X111D4,	"usbsocket_is_conn");
	create_insn	(x=0X111E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X111E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X111F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X11200);
	op_stkvar	(x,	1);
	create_insn	(x=0X1120C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1121C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11224);
	op_stkvar	(x,	1);
	create_insn	(x=0X1123C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11244);
	op_stkvar	(x,	1);
	create_insn	(x=0X11248);
	op_stkvar	(x,	1);
	create_insn	(x=0X11250);
	op_stkvar	(x,	1);
	create_insn	(x=0X11254);
	op_stkvar	(x,	1);
	create_dword	(x=0X11268);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1126C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11270);
	set_name	(0X11270,	"usbsocket_recv");
	create_insn	(x=0X1127C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11280);
	op_stkvar	(x,	1);
	create_insn	(x=0X11284);
	op_stkvar	(x,	1);
	create_insn	(x=0X11288);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1129C);
	op_stkvar	(x,	1);
	create_insn	(x=0X112A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X112B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X112C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X112C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X112E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X112E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X112EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X11300);
	op_stkvar	(x,	1);
	create_insn	(x=0X11308);
	op_stkvar	(x,	1);
	create_insn	(x=0X11310);
	op_stkvar	(x,	1);
	create_insn	(x=0X11318);
	op_stkvar	(x,	1);
	create_insn	(x=0X11320);
	op_stkvar	(x,	1);
	create_insn	(x=0X1132C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11330);
	op_stkvar	(x,	1);
	create_dword	(x=0X11340);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11344);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11348);
	set_name	(0X11348,	"usbsocket_send");
	create_insn	(x=0X11354);
	op_stkvar	(x,	1);
	create_insn	(x=0X11358);
	op_stkvar	(x,	1);
	create_insn	(x=0X1135C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11360);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11374);
	op_stkvar	(x,	1);
	create_insn	(x=0X1137C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11388);
	op_stkvar	(x,	1);
	create_insn	(x=0X11398);
	op_stkvar	(x,	1);
	create_insn	(x=0X113A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X113B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X113C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X113C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X113D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X113E0);
	op_stkvar	(x,	1);
	set_cmt	(0X113E8,	"mutex",	0);
	create_insn	(x=0X113F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X113F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X11400);
	op_stkvar	(x,	1);
	create_insn	(x=0X11408);
	op_stkvar	(x,	1);
	create_insn	(x=0X11414);
	op_stkvar	(x,	1);
	create_insn	(x=0X11418);
	op_stkvar	(x,	1);
	set_cmt	(0X11420,	"mutex",	0);
	create_insn	(x=0X11428);
	op_stkvar	(x,	1);
	create_insn	(x=0X1142C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11430);
	op_stkvar	(x,	1);
	create_dword	(x=0X11440);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11444);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11448);
	set_name	(0X11448,	"init_libusb");
	create_insn	(x=0X11460);
	op_stkvar	(x,	1);
	create_insn	(x=0X11464);
	op_stkvar	(x,	1);
	create_insn	(x=0X11470);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11474);
	op_stkvar	(x,	1);
	create_insn	(x=0X11480);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1148C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X114A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X114A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X114A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X114AC);
	set_name	(0X114AC,	"UnInit_libusb");
	create_insn	(x=0X114B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X114D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X114E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X114E4);
	set_name	(0X114E4,	"IsAndroidPlugIn");
	create_insn	(x=0X114F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X114F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X11508);
	op_stkvar	(x,	1);
	create_insn	(x=0X1150C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1151C);
	op_stkvar	(x,	1);
	create_insn	(0X11524);
	create_insn	(x=0X11528);
	op_stkvar	(x,	1);
	create_insn	(x=0X1152C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11534);
	op_stkvar	(x,	1);
	create_insn	(x=0X11540);
	op_stkvar	(x,	1);
	create_insn	(x=0X11550);
	op_stkvar	(x,	1);
	create_insn	(x=0X11560);
	op_stkvar	(x,	1);
	create_insn	(x=0X11568);
	op_stkvar	(x,	1);
	create_insn	(x=0X11574);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11578);
	op_stkvar	(x,	1);
	create_insn	(x=0X11584);
	op_stkvar	(x,	1);
	create_insn	(x=0X1158C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11590);
	op_stkvar	(x,	1);
	create_insn	(x=0X115A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X115A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X115B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X115BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X115CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X115D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X115DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X115EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X115FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X11600);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1160C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11610);
	op_stkvar	(x,	1);
	create_insn	(x=0X11618);
	op_stkvar	(x,	1);
	create_insn	(x=0X1161C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1162C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11630);
	op_stkvar	(x,	1);
	create_insn	(x=0X11640);
	op_hex		(x,	1);
	create_insn	(x=0X11644);
	op_stkvar	(x,	1);
	create_insn	(x=0X1164C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11658);
	op_stkvar	(x,	1);
	create_insn	(x=0X11668);
	op_stkvar	(x,	1);
	create_insn	(x=0X1166C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11670);
	op_stkvar	(x,	1);
	create_dword	(x=0X11680);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11684);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X11688);
	create_dword	(x=0X1168C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X11690);
	create_dword	(0X11694);
	create_dword	(x=0X11698);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1169C);
	set_name	(0X1169C,	"open68013");
	create_insn	(x=0X116A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X116AC,	"oflag",	0);
	create_insn	(x=0X116B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X116C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X116D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X116D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X116E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X116E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X116F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X116F8,	"fd",	0);
	set_cmt	(0X116FC,	"cmd",	0);
	create_insn	(x=0X11708);
	op_hex		(x,	1);
	set_cmt	(0X1170C,	"fd",	0);
	set_cmt	(0X11710,	"cmd",	0);
	create_insn	(x=0X1171C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11724);
	op_stkvar	(x,	1);
	set_cmt	(0X11728,	"fd",	0);
	set_cmt	(0X1172C,	"request",	0);
	set_cmt	(0X11734,	"ptTime",	0);
	create_insn	(x=0X11734);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11740);
	op_stkvar	(x,	1);
	create_insn	(x=0X11744);
	op_stkvar	(x,	1);
	create_dword	(x=0X11754);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11758);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1175C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X11760);
	create_dword	(x=0X11764);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X11764,	"ptTime");
	create_insn	(0X11768);
	set_name	(0X11768,	"close68013");
	create_insn	(x=0X11770);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X11778,	"fd",	0);
	create_insn	(x=0X11780);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X11790);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11794);
	set_name	(0X11794,	"RecvBuffer");
	create_insn	(x=0X117A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X117A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X117A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X117AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X117B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X117D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X117DC);
	op_stkvar	(x,	1);
	set_cmt	(0X117E0,	"s",	0);
	set_cmt	(0X117E4,	"c",	0);
	set_cmt	(0X117E8,	"n",	0);
	create_insn	(x=0X117F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X117FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X11800);
	op_stkvar	(x,	1);
	create_insn	(x=0X11804);
	op_stkvar	(x,	1);
	create_insn	(x=0X11808);
	op_stkvar	(x,	1);
	create_insn	(x=0X1180C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11810);
	op_stkvar	(x,	1);
	create_insn	(x=0X11814);
	op_stkvar	(x,	1);
	create_insn	(x=0X11818);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11820);
	op_stkvar	(x,	1);
	set_cmt	(0X11824,	"fd",	0);
	set_cmt	(0X11828,	"request",	0);
	create_insn	(x=0X11828);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11834);
	op_stkvar	(x,	1);
	create_insn	(x=0X11838);
	op_stkvar	(x,	1);
	create_insn	(x=0X11844);
	op_stkvar	(x,	1);
	create_insn	(x=0X1184C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11854);
	op_stkvar	(x,	1);
	create_insn	(x=0X11858);
	op_stkvar	(x,	1);
	create_insn	(x=0X1185C);
	op_stkvar	(x,	1);
	create_dword	(x=0X1186C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11870);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11874);
	set_name	(0X11874,	"syncSendBuffer");
	create_insn	(x=0X11880);
	op_stkvar	(x,	1);
	create_insn	(x=0X11884);
	op_stkvar	(x,	1);
	create_insn	(x=0X11888);
	op_stkvar	(x,	1);
	create_insn	(x=0X1188C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X118B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X118B8);
	op_stkvar	(x,	1);
	set_cmt	(0X118BC,	"s",	0);
	set_cmt	(0X118C0,	"c",	0);
	set_cmt	(0X118C4,	"n",	0);
	create_insn	(x=0X118D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X118D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X118DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X118E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X118E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X118E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X118EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X118F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X118F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X118FC);
	op_stkvar	(x,	1);
	set_cmt	(0X11900,	"fd",	0);
	set_cmt	(0X11904,	"request",	0);
	create_insn	(x=0X11904);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11910);
	op_stkvar	(x,	1);
	create_insn	(x=0X11914);
	op_stkvar	(x,	1);
	create_insn	(x=0X11920);
	op_stkvar	(x,	1);
	create_insn	(x=0X11924);
	op_stkvar	(x,	1);
	create_insn	(0X1192C);
	create_insn	(x=0X11930);
	op_stkvar	(x,	1);
	create_insn	(x=0X11934);
	op_stkvar	(x,	1);
	create_dword	(x=0X11944);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11948);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1194C);
	set_name	(0X1194C,	"Is_68013_Connected");
	create_insn	(x=0X11958);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1197C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11984);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1198C);
	op_stkvar	(x,	1);
	set_cmt	(0X11990,	"fd",	0);
	set_cmt	(0X11994,	"request",	0);
	create_insn	(x=0X119A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X119A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X119B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X119C0);
	op_stkvar	(x,	1);
	create_insn	(0X119C8);
	create_insn	(x=0X119CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X119D0);
	op_stkvar	(x,	1);
	create_dword	(x=0X119E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X119E4);
	set_name	(0X119E4,	"Hub_Error_Check");
	create_insn	(x=0X119F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X11A10,	"ptTime",	0);
	create_insn	(x=0X11A10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X11A14,	"ulTimeOutms",	0);
	create_insn	(x=0X11A14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X11A28,	"ptTime",	0);
	create_insn	(x=0X11A28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11A34);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11A40);
	op_stkvar	(x,	1);
	set_cmt	(0X11A44,	"fd",	0);
	set_cmt	(0X11A48,	"request",	0);
	create_insn	(x=0X11A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X11A78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11A7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11A80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X11A80,	"ulTimeOutms");
	create_dword	(0X11A84);
	create_dword	(x=0X11A88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11A8C);
	set_name	(0X11A8C,	"__AppleCP_IsExist");
	create_insn	(x=0X11A9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11AA0);
	op_stkvar	(x,	1);
	set_cmt	(0X11AAC,	"dest",	0);
	set_cmt	(0X11AB0,	"src",	0);
	set_cmt	(0X11AB4,	"n",	0);
	create_insn	(x=0X11ABC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11AD0);
	op_stkvar	(x,	1);
	create_insn	(0X11AD8);
	create_insn	(x=0X11ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X11AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X11AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X11AF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11AF8);
	op_stkvar	(x,	1);
	set_cmt	(0X11B04,	"fd",	0);
	set_cmt	(0X11B08,	"request",	0);
	create_insn	(x=0X11B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X11B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X11B38);
	op_stkvar	(x,	1);
	set_cmt	(0X11B40,	"s1",	0);
	set_cmt	(0X11B44,	"s2",	0);
	set_cmt	(0X11B48,	"n",	0);
	create_insn	(x=0X11B60);
	op_stkvar	(x,	1);
	create_insn	(0X11B68);
	create_insn	(x=0X11B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11B70);
	op_stkvar	(x,	1);
	create_dword	(x=0X11B80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11B84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11B88);
	set_name	(0X11B88,	"AppleCP_Check");
	create_insn	(x=0X11B90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X11B94,	"oflag",	0);
	create_insn	(x=0X11BA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11BA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11BB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11BC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X11BC8,	"fd",	0);
	set_cmt	(0X11BCC,	"cmd",	0);
	create_insn	(x=0X11BD8);
	op_hex		(x,	1);
	set_cmt	(0X11BDC,	"fd",	0);
	set_cmt	(0X11BE0,	"cmd",	0);
	set_cmt	(0X11BEC,	"pMutex",	0);
	create_insn	(x=0X11BEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11BFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X11C08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11C0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11C10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11C14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X11C18);
	op_stkvar	(x,	1);
	set_name	(0X11C18,	"AppleCP_IsExist");
	create_insn	(x=0X11C20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X11C38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11C3C);
	set_name	(0X11C3C,	"AppleCP_Read_AuthCertData_Nolock");
	create_insn	(x=0X11C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C58);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11C70);
	op_stkvar	(x,	1);
	create_insn	(0X11C78);
	create_insn	(x=0X11C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11C98);
	op_stkvar	(x,	1);
	set_cmt	(0X11CA0,	"fd",	0);
	set_cmt	(0X11CA4,	"request",	0);
	create_insn	(x=0X11CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X11CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X11CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X11CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X11CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X11CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X11CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X11CEC);
	op_stkvar	(x,	1);
	create_insn	(0X11CF4);
	create_insn	(x=0X11CF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11D14);
	op_stkvar	(x,	1);
	set_cmt	(0X11D1C,	"fd",	0);
	set_cmt	(0X11D20,	"request",	0);
	create_insn	(0X11D38);
	create_insn	(x=0X11D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D44);
	op_stkvar	(x,	1);
	set_cmt	(0X11D50,	"dest",	0);
	create_insn	(x=0X11D50);
	op_stkvar	(x,	1);
	set_cmt	(0X11D54,	"src",	0);
	set_cmt	(0X11D58,	"n",	0);
	create_insn	(x=0X11D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D64);
	op_stkvar	(x,	1);
	create_insn	(0X11D70);
	create_insn	(x=0X11D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D80);
	op_stkvar	(x,	1);
	create_dword	(x=0X11D90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11D94);
	set_name	(0X11D94,	"AppleCP_Read_AuthCertData");
	create_insn	(x=0X11DA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DA8);
	op_stkvar	(x,	1);
	set_cmt	(0X11DAC,	"mutex",	0);
	create_insn	(x=0X11DAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X11DB4,	"pucData",	0);
	create_insn	(x=0X11DB4);
	op_stkvar	(x,	1);
	set_cmt	(0X11DB8,	"pulRealLen",	0);
	create_insn	(x=0X11DB8);
	op_stkvar	(x,	1);
	set_cmt	(0X11DBC,	"ulMaxLen",	0);
	create_insn	(x=0X11DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DC8);
	op_stkvar	(x,	1);
	set_cmt	(0X11DCC,	"mutex",	0);
	create_insn	(x=0X11DCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11DD4);
	op_stkvar	(x,	1);
	create_dword	(x=0X11DE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11DE8);
	set_name	(0X11DE8,	"AppleCP_Req_Challenge_Response_Nolock");
	create_insn	(x=0X11DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11E20);
	op_stkvar	(x,	1);
	create_insn	(0X11E28);
	create_insn	(x=0X11E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E48);
	op_hex		(x,	1);
	create_insn	(x=0X11E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E54);
	op_hex		(x,	1);
	create_insn	(x=0X11E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11E64);
	op_stkvar	(x,	1);
	set_cmt	(0X11E70,	"fd",	0);
	set_cmt	(0X11E74,	"request",	0);
	create_insn	(x=0X11E90);
	op_stkvar	(x,	1);
	create_insn	(0X11E98);
	create_insn	(x=0X11E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X11EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X11EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X11EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X11EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X11EC8);
	op_stkvar	(x,	1);
	set_cmt	(0X11ED8,	"dest",	0);
	set_cmt	(0X11EDC,	"src",	0);
	create_insn	(x=0X11EDC);
	op_stkvar	(x,	1);
	set_cmt	(0X11EE0,	"n",	0);
	create_insn	(x=0X11EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X11EE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11EF0);
	op_stkvar	(x,	1);
	set_cmt	(0X11EFC,	"fd",	0);
	set_cmt	(0X11F00,	"request",	0);
	create_insn	(x=0X11F1C);
	op_stkvar	(x,	1);
	create_insn	(0X11F24);
	create_insn	(x=0X11F28);
	op_stkvar	(x,	1);
	create_insn	(x=0X11F30);
	op_stkvar	(x,	1);
	create_insn	(x=0X11F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X11F3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11F44);
	op_stkvar	(x,	1);
	set_cmt	(0X11F50,	"fd",	0);
	set_cmt	(0X11F54,	"request",	0);
	create_insn	(x=0X11F70);
	op_stkvar	(x,	1);
	create_insn	(0X11F78);
	create_insn	(x=0X11F7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11F84);
	op_stkvar	(x,	1);
	create_insn	(x=0X11F8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X11F98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11FA0);
	op_stkvar	(x,	1);
	set_cmt	(0X11FAC,	"fd",	0);
	set_cmt	(0X11FB0,	"request",	0);
	create_insn	(x=0X11FCC);
	op_stkvar	(x,	1);
	create_insn	(0X11FD4);
	create_insn	(x=0X11FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X11FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X11FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X11FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X11FF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12000);
	op_stkvar	(x,	1);
	set_cmt	(0X1200C,	"fd",	0);
	set_cmt	(0X12010,	"request",	0);
	create_insn	(x=0X12028);
	op_stkvar	(x,	1);
	create_insn	(x=0X12040);
	op_stkvar	(x,	1);
	create_insn	(x=0X12048);
	op_stkvar	(x,	1);
	create_insn	(x=0X12050);
	op_hex		(x,	1);
	create_insn	(x=0X12054);
	op_hex		(x,	1);
	create_insn	(x=0X12058);
	op_stkvar	(x,	1);
	create_insn	(x=0X1205C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12068);
	op_stkvar	(x,	1);
	create_insn	(x=0X12070);
	op_stkvar	(x,	1);
	set_cmt	(0X12074,	"useconds",	0);
	create_insn	(x=0X1207C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12088);
	op_stkvar	(x,	1);
	create_insn	(x=0X12098);
	op_stkvar	(x,	1);
	create_insn	(0X120A0);
	create_insn	(x=0X120A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X120AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X120B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X120B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X120C0);
	op_stkvar	(x,	1);
	set_cmt	(0X120CC,	"fd",	0);
	set_cmt	(0X120D0,	"request",	0);
	create_insn	(x=0X120E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X120F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X120F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X120FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X12104);
	op_stkvar	(x,	1);
	create_insn	(x=0X12108);
	op_stkvar	(x,	1);
	create_insn	(x=0X1210C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1211C);
	op_stkvar	(x,	1);
	create_insn	(0X12124);
	create_insn	(x=0X12128);
	op_stkvar	(x,	1);
	create_insn	(x=0X12130);
	op_stkvar	(x,	1);
	create_insn	(x=0X12134);
	op_stkvar	(x,	1);
	create_insn	(x=0X12138);
	op_stkvar	(x,	1);
	create_insn	(x=0X1213C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12144);
	op_stkvar	(x,	1);
	set_cmt	(0X12150,	"fd",	0);
	set_cmt	(0X12154,	"request",	0);
	create_insn	(0X12170);
	create_insn	(x=0X12174);
	op_stkvar	(x,	1);
	create_insn	(x=0X1217C);
	op_stkvar	(x,	1);
	set_cmt	(0X1218C,	"dest",	0);
	create_insn	(x=0X1218C);
	op_stkvar	(x,	1);
	set_cmt	(0X12190,	"src",	0);
	set_cmt	(0X12194,	"n",	0);
	create_insn	(x=0X12194);
	op_stkvar	(x,	1);
	create_insn	(x=0X1219C);
	op_stkvar	(x,	1);
	create_insn	(x=0X121A0);
	op_stkvar	(x,	1);
	create_insn	(0X121AC);
	create_insn	(x=0X121B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X121B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X121B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X121BC);
	op_stkvar	(x,	1);
	create_dword	(x=0X121CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X121D0);
	create_insn	(0X121D4);
	set_name	(0X121D4,	"AppleCP_Req_Challenge_Response");
	create_insn	(x=0X121E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X121E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X121E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X121EC);
	op_stkvar	(x,	1);
	set_cmt	(0X121F0,	"mutex",	0);
	create_insn	(x=0X121F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X121F8);
	op_stkvar	(x,	1);
	set_cmt	(0X121FC,	"ulResponseMaxLen",	0);
	create_insn	(x=0X121FC);
	op_stkvar	(x,	1);
	set_cmt	(0X12200,	"pucChallengeData",	0);
	create_insn	(x=0X12200);
	op_stkvar	(x,	1);
	set_cmt	(0X12204,	"ulChallengeLen",	0);
	create_insn	(x=0X12204);
	op_stkvar	(x,	1);
	set_cmt	(0X12208,	"pucResponseData",	0);
	create_insn	(x=0X12208);
	op_stkvar	(x,	1);
	set_cmt	(0X1220C,	"pulResponseRealLen",	0);
	create_insn	(x=0X1220C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12218);
	op_stkvar	(x,	1);
	set_cmt	(0X1221C,	"mutex",	0);
	create_insn	(x=0X1221C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12224);
	op_stkvar	(x,	1);
	create_dword	(x=0X12234);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X12238);
	set_name	(0X12238,	"Iap2_Link_Init");
	create_insn	(x=0X12244);
	op_stkvar	(x,	1);
	create_insn	(x=0X1224C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12250);
	op_stkvar	(x,	1);
	set_cmt	(0X1225C,	"s",	0);
	create_insn	(x=0X1225C);
	op_stkvar	(x,	1);
	set_cmt	(0X12260,	"c",	0);
	set_cmt	(0X12264,	"n",	0);
	create_insn	(x=0X12264);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1226C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12270);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12278);
	op_stkvar	(x,	1);
	create_insn	(x=0X1227C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12284);
	op_stkvar	(x,	1);
	create_insn	(x=0X12288);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12290);
	op_stkvar	(x,	1);
	set_cmt	(0X1229C,	"pMutex",	0);
	create_insn	(x=0X122A4);
	op_stkvar	(x,	1);
	set_cmt	(0X122B0,	"pMutex",	0);
	create_insn	(x=0X122B8);
	op_stkvar	(x,	1);
	set_cmt	(0X122C4,	"pMutex",	0);
	create_insn	(x=0X122D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X122D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X122E4);
	op_stkvar	(x,	1);
	set_cmt	(0X122FC,	"pMutex",	0);
	create_insn	(x=0X12304);
	op_stkvar	(x,	1);
	create_insn	(x=0X1230C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12310);
	op_stkvar	(x,	1);
	create_insn	(x=0X12320);
	op_stkvar	(x,	1);
	set_cmt	(0X12328,	"s",	0);
	set_cmt	(0X1232C,	"c",	0);
	set_cmt	(0X12330,	"n",	0);
	create_insn	(x=0X12338);
	op_stkvar	(x,	1);
	create_insn	(x=0X12344);
	op_stkvar	(x,	1);
	create_insn	(x=0X12350);
	op_stkvar	(x,	1);
	set_cmt	(0X12358,	"s",	0);
	set_cmt	(0X1235C,	"c",	0);
	set_cmt	(0X12360,	"n",	0);
	create_insn	(x=0X12368);
	op_stkvar	(x,	1);
	set_cmt	(0X12370,	"s",	0);
	set_cmt	(0X12374,	"c",	0);
	set_cmt	(0X12378,	"n",	0);
	create_insn	(x=0X12380);
	op_stkvar	(x,	1);
	create_insn	(x=0X1238C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12398);
	op_stkvar	(x,	1);
	create_insn	(x=0X123A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X123B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X123BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X123C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X123D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X123E0);
	op_stkvar	(x,	1);
	set_cmt	(0X123EC,	"s",	0);
	set_cmt	(0X123F0,	"c",	0);
	set_cmt	(0X123F4,	"n",	0);
	create_insn	(x=0X123FC);
	op_stkvar	(x,	1);
	set_cmt	(0X12408,	"s",	0);
	set_cmt	(0X1240C,	"c",	0);
	set_cmt	(0X12410,	"n",	0);
	create_insn	(x=0X12418);
	op_stkvar	(x,	1);
	set_cmt	(0X12424,	"s",	0);
	set_cmt	(0X12428,	"c",	0);
	set_cmt	(0X1242C,	"n",	0);
	create_insn	(x=0X1242C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12434);
	op_stkvar	(x,	1);
	set_cmt	(0X12440,	"s",	0);
	set_cmt	(0X12444,	"c",	0);
	set_cmt	(0X12448,	"n",	0);
	set_cmt	(0X12450,	"s",	0);
	create_insn	(x=0X12450);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X12454,	"c",	0);
	set_cmt	(0X12458,	"n",	0);
	set_cmt	(0X12460,	"s",	0);
	create_insn	(x=0X12460);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X12464,	"c",	0);
	set_cmt	(0X12468,	"n",	0);
	set_cmt	(0X12470,	"s",	0);
	create_insn	(x=0X12470);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X12474,	"c",	0);
	set_cmt	(0X12478,	"n",	0);
	set_cmt	(0X12480,	"s",	0);
	create_insn	(x=0X12480);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X12484,	"c",	0);
	set_cmt	(0X12488,	"n",	0);
	create_insn	(x=0X12494);
	op_stkvar	(x,	1);
	create_insn	(x=0X1249C);
	op_stkvar	(x,	1);
	create_insn	(x=0X124A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X124A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X124C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X124E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X124EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1250C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12514);
	op_stkvar	(x,	1);
	create_insn	(x=0X1251C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12534);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1253C,	"pQueue",	0);
	set_cmt	(0X12540,	"pData",	0);
	create_insn	(x=0X12548);
	op_stkvar	(x,	1);
	create_insn	(x=0X12550);
	op_stkvar	(x,	1);
	create_insn	(x=0X12554);
	op_stkvar	(x,	1);
	create_insn	(x=0X12564);
	op_stkvar	(x,	1);
	create_insn	(x=0X1256C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12570);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12574);
	op_stkvar	(x,	1);
	create_insn	(x=0X12580);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X125A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X125A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X125D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X125D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X125F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X125F8,	"pQueue",	0);
	set_cmt	(0X125FC,	"pData",	0);
	create_insn	(x=0X12604);
	op_stkvar	(x,	1);
	create_insn	(x=0X1260C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12610);
	op_stkvar	(x,	1);
	create_insn	(x=0X1261C);
	op_stkvar	(x,	1);
	set_cmt	(0X12624,	"pQueue",	0);
	create_insn	(x=0X12634);
	op_stkvar	(x,	1);
	create_insn	(x=0X1263C);
	op_stkvar	(x,	1);
	set_cmt	(0X12644,	"list",	0);
	create_insn	(x=0X1264C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12658);
	op_stkvar	(x,	1);
	set_cmt	(0X12664,	"list",	0);
	create_insn	(x=0X1266C);
	op_stkvar	(x,	1);
	set_cmt	(0X12678,	"ptLink",	0);
	create_insn	(x=0X12678);
	op_stkvar	(x,	1);
	create_insn	(x=0X12680);
	op_stkvar	(x,	1);
	create_insn	(x=0X1268C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12698);
	op_stkvar	(x,	1);
	create_insn	(x=0X126A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X126AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X126B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X126C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X126D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X126E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X126EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X126F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X12704);
	op_stkvar	(x,	1);
	create_insn	(x=0X12710);
	op_stkvar	(x,	1);
	create_insn	(x=0X1271C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12728);
	op_stkvar	(x,	1);
	create_insn	(x=0X12734);
	op_stkvar	(x,	1);
	create_insn	(x=0X12740);
	op_stkvar	(x,	1);
	set_cmt	(0X1274C,	"dest",	0);
	set_cmt	(0X12750,	"src",	0);
	set_cmt	(0X12754,	"n",	0);
	create_insn	(x=0X1275C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12768);
	op_stkvar	(x,	1);
	create_insn	(x=0X12774);
	op_stkvar	(x,	1);
	create_insn	(x=0X12784);
	op_stkvar	(x,	1);
	create_insn	(x=0X12788);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12794);
	op_stkvar	(x,	1);
	create_insn	(x=0X127A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X127B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X127BC);
	op_stkvar	(x,	1);
	create_dword	(x=0X127D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X127D0,	"n");
	create_dword	(x=0X127D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X127D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X127DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X127E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X127E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X127E8);
	create_dword	(x=0X127EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X127F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X127F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X127F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X127FC);
	create_dword	(x=0X12800);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X12804);
	create_dword	(0X12808);
	create_dword	(x=0X1280C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X12810);
	create_insn	(x=0X12814);
	op_stkvar	(x,	1);
	set_name	(0X12814,	"INIT_LIST_HEAD");
	create_insn	(x=0X12820);
	op_stkvar	(x,	1);
	create_insn	(x=0X12824);
	op_stkvar	(x,	1);
	create_insn	(x=0X12828);
	op_stkvar	(x,	1);
	create_insn	(x=0X12830);
	op_stkvar	(x,	1);
	create_insn	(x=0X12834);
	op_stkvar	(x,	1);
	create_insn	(0X12848);
	set_name	(0X12848,	"Iap2_Link_lockall");
	create_insn	(x=0X12858);
	op_stkvar	(x,	1);
	create_insn	(x=0X12860);
	op_stkvar	(x,	1);
	create_insn	(x=0X12878);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X12880,	"mutex",	0);
	create_insn	(x=0X12888);
	op_stkvar	(x,	1);
	create_insn	(x=0X12890);
	op_stkvar	(x,	1);
	create_insn	(x=0X12894);
	op_stkvar	(x,	1);
	set_cmt	(0X128A0,	"mutex",	0);
	create_insn	(x=0X128A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X128A8,	"mutex",	0);
	create_insn	(x=0X128A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X128B0,	"mutex",	0);
	create_insn	(x=0X128B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X128C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X128C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X128C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X128CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X128D0);
	set_name	(0X128D0,	"Iap2_Link_unlockall");
	set_cmt	(0X128DC,	"mutex",	0);
	create_insn	(x=0X128DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X128E4,	"mutex",	0);
	create_insn	(x=0X128E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X128EC,	"mutex",	0);
	create_insn	(x=0X128EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X128F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X12900);
	op_stkvar	(x,	1);
	create_insn	(x=0X12918);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X12920,	"mutex",	0);
	create_insn	(x=0X12928);
	op_stkvar	(x,	1);
	create_insn	(x=0X12930);
	op_stkvar	(x,	1);
	create_insn	(x=0X12934);
	op_stkvar	(x,	1);
	create_dword	(x=0X12948);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1294C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12950);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12954);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X12958);
	set_name	(0X12958,	"Iap2_Link_Start");
	create_insn	(x=0X12964);
	op_stkvar	(x,	1);
	create_insn	(x=0X12968);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12978);
	op_stkvar	(x,	1);
	create_insn	(x=0X1297C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12988);
	op_stkvar	(x,	1);
	set_cmt	(0X12994,	"newthread",	0);
	set_cmt	(0X12998,	"attr",	0);
	set_cmt	(0X1299C,	"start_routine",	0);
	create_insn	(x=0X1299C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X129A0,	"arg",	0);
	create_insn	(x=0X129A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X129AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X129C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X129C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X129CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X129D0);
	set_name	(0X129D0,	"Iap2_Link_Stop");
	create_insn	(x=0X129DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X129E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X129F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X12A08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X12A18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X12A20,	"th",	0);
	set_cmt	(0X12A24,	"thread_return",	0);
	set_cmt	(0X12A2C,	"ptLink",	0);
	create_insn	(x=0X12A2C);
	op_stkvar	(x,	1);
	set_cmt	(0X12A30,	"bFirst",	0);
	create_dword	(x=0X12A40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12A44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12A48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X12A4C);
	set_name	(0X12A4C,	"Iap2_Link_SendInitSeq");
	create_insn	(x=0X12A58);
	op_stkvar	(x,	1);
	create_insn	(x=0X12A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12A64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12A70);
	op_stkvar	(x,	1);
	set_cmt	(0X12A78,	"pTimer",	0);
	create_dword	(x=0X12A88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X12A8C);
	set_name	(0X12A8C,	"Iap2_Link_SendNoSupportSeq");
	create_insn	(x=0X12A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X12A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12AA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12AB0);
	op_stkvar	(x,	1);
	create_dword	(x=0X12AC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X12AC8);
	set_name	(0X12AC8,	"Iap2_Link_SendLostAck");
	create_insn	(x=0X12AD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X12ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X12AE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X12AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X12AF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X12AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X12B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X12B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X12B20);
	op_stkvar	(x,	1);
	create_insn	(x=0X12B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12B38);
	op_hex		(x,	1);
	create_insn	(x=0X12B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X12B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X12B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X12B5C);
	op_stkvar	(x,	1);
	set_cmt	(0X12B60,	"pucData",	0);
	set_cmt	(0X12B64,	"ulLen",	0);
	create_insn	(x=0X12B70);
	op_stkvar	(x,	1);
	create_insn	(x=0X12B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X12B88);
	op_stkvar	(x,	1);
	create_insn	(x=0X12B98);
	op_stkvar	(x,	1);
	create_insn	(0X12BA8);
	set_name	(0X12BA8,	"Iap2_Link_SendCommonAck");
	create_insn	(x=0X12BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X12BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X12BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X12BCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X12BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X12BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X12BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C28);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C40);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C54);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C64);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C98);
	op_stkvar	(x,	1);
	create_insn	(x=0X12C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12CA4);
	op_stkvar	(x,	1);
	set_cmt	(0X12CA8,	"pucData",	0);
	create_insn	(x=0X12CA8);
	op_stkvar	(x,	1);
	set_cmt	(0X12CAC,	"ulLen",	0);
	create_insn	(x=0X12CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X12CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X12CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X12CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X12CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X12CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X12CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X12CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X12CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X12CF8);
	op_hex		(x,	1);
	create_insn	(x=0X12CFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D08);
	op_hex		(x,	1);
	create_insn	(x=0X12D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D20);
	op_hex		(x,	1);
	create_insn	(x=0X12D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D38);
	op_hex		(x,	1);
	create_insn	(x=0X12D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D50);
	op_stkvar	(x,	1);
	set_cmt	(0X12D54,	"pucData",	0);
	set_cmt	(0X12D58,	"ulLen",	0);
	create_insn	(x=0X12D64);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D94);
	op_stkvar	(x,	1);
	create_insn	(x=0X12D9C);
	op_stkvar	(x,	1);
	set_cmt	(0X12DA8,	"pTimer",	0);
	create_insn	(0X12DB8);
	set_name	(0X12DB8,	"Iap2_Link_SendEak");
	create_insn	(x=0X12DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X12DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X12DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X12DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X12DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X12DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X12DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E40);
	op_stkvar	(x,	1);
	set_cmt	(0X12E44,	"pucData",	0);
	create_insn	(x=0X12E44);
	op_stkvar	(x,	1);
	set_cmt	(0X12E48,	"ulLen",	0);
	create_insn	(x=0X12E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E64);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E74);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E7C);
	op_hex		(x,	1);
	create_insn	(x=0X12E80);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E8C);
	op_hex		(x,	1);
	create_insn	(x=0X12E90);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E98);
	op_stkvar	(x,	1);
	create_insn	(x=0X12EA4);
	op_hex		(x,	1);
	create_insn	(x=0X12EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X12EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X12EBC);
	op_hex		(x,	1);
	create_insn	(x=0X12EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X12EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X12ED4);
	op_stkvar	(x,	1);
	set_cmt	(0X12ED8,	"pucData",	0);
	set_cmt	(0X12EDC,	"ulLen",	0);
	create_insn	(x=0X12EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X12EF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X12EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X12F04);
	op_stkvar	(x,	1);
	create_insn	(x=0X12F0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X12F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X12F1C);
	op_stkvar	(x,	1);
	set_cmt	(0X12F28,	"pTimer",	0);
	create_insn	(0X12F38);
	set_name	(0X12F38,	"Iap2_Link_SendSync");
	create_insn	(x=0X12F44);
	op_stkvar	(x,	1);
	create_insn	(x=0X12F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X12F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X12F60);
	op_stkvar	(x,	1);
	set_cmt	(0X12F6C,	"mutex",	0);
	create_insn	(x=0X12F74);
	op_stkvar	(x,	1);
	set_cmt	(0X12F7C,	"pQueue",	0);
	create_insn	(x=0X12F88);
	op_stkvar	(x,	1);
	create_insn	(x=0X12F8C);
	op_stkvar	(x,	1);
	set_cmt	(0X12F98,	"mutex",	0);
	create_insn	(x=0X12FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X12FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X12FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X12FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X12FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X12FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X12FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X12FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X12FF8);
	op_hex		(x,	1);
	create_insn	(x=0X12FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X13008);
	op_stkvar	(x,	1);
	create_insn	(x=0X13014);
	op_stkvar	(x,	1);
	create_insn	(x=0X13020);
	op_stkvar	(x,	1);
	create_insn	(x=0X13028);
	op_stkvar	(x,	1);
	create_insn	(x=0X13038);
	op_hex		(x,	1);
	create_insn	(x=0X1303C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13044);
	op_stkvar	(x,	1);
	set_cmt	(0X13050,	"ptPkt",	0);
	create_insn	(x=0X13050);
	op_stkvar	(x,	1);
	create_insn	(x=0X1305C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13060);
	op_stkvar	(x,	1);
	create_insn	(x=0X13064);
	op_stkvar	(x,	1);
	create_insn	(x=0X13068);
	op_stkvar	(x,	1);
	create_insn	(x=0X13070);
	op_stkvar	(x,	1);
	create_insn	(x=0X13078);
	op_stkvar	(x,	1);
	create_insn	(x=0X13080);
	op_stkvar	(x,	1);
	create_insn	(x=0X13084);
	op_stkvar	(x,	1);
	create_insn	(x=0X1308C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13094);
	op_stkvar	(x,	1);
	create_insn	(x=0X1309C);
	op_stkvar	(x,	1);
	create_insn	(x=0X130A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X130B8);
	op_hex		(x,	1);
	create_insn	(x=0X130BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X130C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X130CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X130D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X130DC);
	op_hex		(x,	1);
	create_insn	(x=0X130E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X130E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X130F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X130F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1310C);
	op_hex		(x,	1);
	create_insn	(x=0X13110);
	op_stkvar	(x,	1);
	create_insn	(x=0X13118);
	op_stkvar	(x,	1);
	create_insn	(x=0X13120);
	op_stkvar	(x,	1);
	create_insn	(x=0X13124);
	op_stkvar	(x,	1);
	create_insn	(x=0X13130);
	op_hex		(x,	1);
	create_insn	(x=0X13134);
	op_stkvar	(x,	1);
	create_insn	(x=0X1313C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13144);
	op_stkvar	(x,	1);
	create_insn	(x=0X13148);
	op_stkvar	(x,	1);
	create_insn	(x=0X13160);
	op_hex		(x,	1);
	create_insn	(x=0X13164);
	op_stkvar	(x,	1);
	create_insn	(x=0X1316C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13174);
	op_stkvar	(x,	1);
	create_insn	(x=0X13178);
	op_stkvar	(x,	1);
	create_insn	(x=0X13184);
	op_hex		(x,	1);
	create_insn	(x=0X13188);
	op_stkvar	(x,	1);
	create_insn	(x=0X13190);
	op_stkvar	(x,	1);
	create_insn	(x=0X13198);
	op_stkvar	(x,	1);
	create_insn	(x=0X1319C);
	op_stkvar	(x,	1);
	create_insn	(x=0X131A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X131AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X131B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X131B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X131C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X131C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X131D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X131D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X131E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X131EC);
	op_stkvar	(x,	1);
	set_cmt	(0X13200,	"dest",	0);
	create_insn	(x=0X13200);
	op_stkvar	(x,	1);
	set_cmt	(0X13204,	"src",	0);
	set_cmt	(0X13208,	"n",	0);
	create_insn	(x=0X13210);
	op_stkvar	(x,	1);
	create_insn	(x=0X13218);
	op_stkvar	(x,	1);
	create_insn	(x=0X1321C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13224);
	op_stkvar	(x,	1);
	create_insn	(x=0X13228);
	op_stkvar	(x,	1);
	create_insn	(x=0X13234);
	op_stkvar	(x,	1);
	create_insn	(x=0X13240);
	op_stkvar	(x,	1);
	create_insn	(x=0X1324C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13264);
	op_stkvar	(x,	1);
	create_insn	(x=0X1326C);
	op_stkvar	(x,	1);
	set_cmt	(0X13274,	"pucData",	0);
	create_insn	(x=0X13274);
	op_stkvar	(x,	1);
	set_cmt	(0X13278,	"ulLen",	0);
	create_insn	(x=0X13284);
	op_stkvar	(x,	1);
	create_insn	(x=0X1328C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13294);
	op_stkvar	(x,	1);
	create_insn	(x=0X13298);
	op_stkvar	(x,	1);
	create_insn	(x=0X132A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X132AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X132B8);
	op_hex		(x,	1);
	create_insn	(x=0X132BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X132C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X132CC);
	op_hex		(x,	1);
	create_insn	(x=0X132D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X132D8);
	op_stkvar	(x,	1);
	set_cmt	(0X132DC,	"pucData",	0);
	set_cmt	(0X132E0,	"ulLen",	0);
	create_insn	(x=0X132EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X132F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X132FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X13304);
	op_stkvar	(x,	1);
	create_insn	(x=0X13318);
	op_stkvar	(x,	1);
	create_insn	(x=0X13328);
	op_stkvar	(x,	1);
	create_insn	(x=0X13330);
	op_stkvar	(x,	1);
	create_insn	(x=0X13338);
	op_stkvar	(x,	1);
	set_cmt	(0X13344,	"pTimer",	0);
	create_insn	(x=0X1334C);
	op_stkvar	(x,	1);
	set_cmt	(0X13354,	"pTimer",	0);
	create_insn	(x=0X1335C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13368);
	op_stkvar	(x,	1);
	create_insn	(x=0X13370);
	op_stkvar	(x,	1);
	set_cmt	(0X1337C,	"new",	0);
	set_cmt	(0X13380,	"head",	0);
	create_insn	(x=0X13388);
	op_stkvar	(x,	1);
	create_insn	(x=0X13394);
	op_stkvar	(x,	1);
	create_insn	(x=0X1339C);
	op_stkvar	(x,	1);
	create_dword	(0X133B0);
	create_dword	(0X133B4);
	create_insn	(0X133B8);
	set_name	(0X133B8,	"list_add_tail");
	create_insn	(x=0X133C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X133C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X133CC);
	op_stkvar	(x,	1);
	set_cmt	(0X133D4,	"new",	0);
	create_insn	(x=0X133D4);
	op_stkvar	(x,	1);
	set_cmt	(0X133D8,	"prev",	0);
	set_cmt	(0X133DC,	"next",	0);
	create_insn	(x=0X133DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X133EC);
	op_stkvar	(x,	1);
	set_name	(0X133EC,	"__list_add");
	create_insn	(x=0X133F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X133FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X13400);
	op_stkvar	(x,	1);
	create_insn	(x=0X13404);
	op_stkvar	(x,	1);
	create_insn	(x=0X13408);
	op_stkvar	(x,	1);
	create_insn	(x=0X13410);
	op_stkvar	(x,	1);
	create_insn	(x=0X13414);
	op_stkvar	(x,	1);
	create_insn	(x=0X1341C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13420);
	op_stkvar	(x,	1);
	create_insn	(x=0X13428);
	op_stkvar	(x,	1);
	create_insn	(x=0X1342C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13440);
	op_stkvar	(x,	1);
	set_name	(0X13440,	"Iap2_Link_GetSendSessionIDByType");
	create_insn	(x=0X1344C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13454);
	op_stkvar	(x,	1);
	create_insn	(x=0X1345C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13464);
	op_stkvar	(x,	1);
	create_insn	(x=0X13468);
	op_stkvar	(x,	1);
	create_insn	(x=0X1346C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13488);
	op_stkvar	(x,	1);
	create_insn	(x=0X13494);
	op_stkvar	(x,	1);
	create_insn	(x=0X13498);
	op_stkvar	(x,	1);
	create_insn	(x=0X1349C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X134B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X134C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X134C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X134CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X134D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X134E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X134EC);
	op_stkvar	(x,	1);
	create_dword	(x=0X13500);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X13504);
	set_name	(0X13504,	"Iap2_Link_SendDataPkt");
	create_insn	(x=0X13510);
	op_stkvar	(x,	1);
	create_insn	(x=0X13514);
	op_stkvar	(x,	1);
	create_insn	(x=0X13518);
	op_stkvar	(x,	1);
	create_insn	(x=0X13520);
	op_stkvar	(x,	1);
	create_insn	(x=0X13524);
	op_stkvar	(x,	1);
	create_insn	(x=0X13530);
	op_stkvar	(x,	1);
	create_insn	(x=0X1353C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13548);
	op_stkvar	(x,	1);
	create_insn	(x=0X13550);
	op_stkvar	(x,	1);
	create_insn	(x=0X13560);
	op_hex		(x,	1);
	create_insn	(x=0X13564);
	op_stkvar	(x,	1);
	create_insn	(x=0X1356C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13578);
	op_hex		(x,	1);
	create_insn	(x=0X1357C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13584);
	op_stkvar	(x,	1);
	set_cmt	(0X1358C,	"ptLink",	0);
	create_insn	(x=0X1358C);
	op_stkvar	(x,	1);
	set_cmt	(0X13590,	"ucType",	0);
	create_insn	(x=0X1359C);
	op_stkvar	(x,	1);
	set_cmt	(0X135A4,	"ptPkt",	0);
	create_insn	(x=0X135A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X135B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X135B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X135C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X135C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X135CC);
	op_stkvar	(x,	1);
	set_cmt	(0X135D4,	"pucData",	0);
	create_insn	(x=0X135D4);
	op_stkvar	(x,	1);
	set_cmt	(0X135D8,	"ulLen",	0);
	create_insn	(x=0X135E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X135EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X135F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X13600);
	op_stkvar	(x,	1);
	create_insn	(x=0X1360C);
	op_hex		(x,	1);
	create_insn	(x=0X13610);
	op_stkvar	(x,	1);
	create_insn	(x=0X13618);
	op_stkvar	(x,	1);
	create_insn	(x=0X13620);
	op_hex		(x,	1);
	create_insn	(x=0X13624);
	op_stkvar	(x,	1);
	create_insn	(x=0X1362C);
	op_stkvar	(x,	1);
	set_cmt	(0X13630,	"pucData",	0);
	set_cmt	(0X13634,	"ulLen",	0);
	create_insn	(x=0X13640);
	op_stkvar	(x,	1);
	create_insn	(x=0X13648);
	op_stkvar	(x,	1);
	create_insn	(x=0X13650);
	op_stkvar	(x,	1);
	create_insn	(x=0X13658);
	op_stkvar	(x,	1);
	create_insn	(x=0X1366C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13674);
	op_stkvar	(x,	1);
	create_insn	(x=0X1367C);
	op_stkvar	(x,	1);
	set_cmt	(0X13688,	"pTimer",	0);
	create_insn	(x=0X13690);
	op_stkvar	(x,	1);
	set_cmt	(0X13698,	"pTimer",	0);
	create_insn	(x=0X136A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X136AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X136B4);
	op_stkvar	(x,	1);
	set_cmt	(0X136C0,	"new",	0);
	set_cmt	(0X136C4,	"head",	0);
	create_insn	(x=0X136CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X136D8);
	op_stkvar	(x,	1);
	create_insn	(0X136E8);
	set_name	(0X136E8,	"Iap2_Link_ResendPkt");
	create_insn	(x=0X136F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X136F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X136FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X13704);
	op_stkvar	(x,	1);
	create_insn	(x=0X13708);
	op_stkvar	(x,	1);
	create_insn	(x=0X13714);
	op_hex		(x,	1);
	create_insn	(x=0X13718);
	op_stkvar	(x,	1);
	create_insn	(x=0X13720);
	op_stkvar	(x,	1);
	set_cmt	(0X13724,	"pucData",	0);
	set_cmt	(0X13728,	"ulLen",	0);
	create_insn	(x=0X13734);
	op_stkvar	(x,	1);
	create_insn	(x=0X1373C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13744);
	op_stkvar	(x,	1);
	create_insn	(x=0X1374C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13760);
	op_stkvar	(x,	1);
	create_insn	(x=0X13768);
	op_stkvar	(x,	1);
	create_insn	(x=0X13770);
	op_stkvar	(x,	1);
	set_cmt	(0X1377C,	"pTimer",	0);
	create_insn	(x=0X13784);
	op_stkvar	(x,	1);
	set_cmt	(0X1378C,	"pTimer",	0);
	create_insn	(x=0X13794);
	op_stkvar	(x,	1);
	create_insn	(x=0X137A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X137A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X137B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X137C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X137C8);
	set_name	(0X137C8,	"Iap2_Link_Sync_Parse");
	create_insn	(x=0X137D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X137D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X137DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X137E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X137EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X13800);
	op_stkvar	(x,	1);
	create_insn	(x=0X13804);
	op_stkvar	(x,	1);
	create_insn	(x=0X1380C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13818);
	op_stkvar	(x,	1);
	create_insn	(x=0X1381C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1382C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13834);
	op_stkvar	(x,	1);
	create_insn	(x=0X13848);
	op_hex		(x,	1);
	create_insn	(x=0X1384C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13854);
	op_stkvar	(x,	1);
	create_insn	(x=0X13868);
	op_stkvar	(x,	1);
	create_insn	(x=0X13870);
	op_stkvar	(x,	1);
	create_insn	(x=0X13874);
	op_stkvar	(x,	1);
	create_insn	(x=0X13878);
	op_stkvar	(x,	1);
	create_insn	(x=0X13880);
	op_stkvar	(x,	1);
	create_insn	(x=0X13888);
	op_stkvar	(x,	1);
	create_insn	(x=0X13890);
	op_stkvar	(x,	1);
	create_insn	(x=0X13894);
	op_stkvar	(x,	1);
	create_insn	(x=0X1389C);
	op_stkvar	(x,	1);
	create_insn	(x=0X138A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X138AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X138B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X138C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X138CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X138D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X138D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X138E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X138F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X138FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X13904);
	op_stkvar	(x,	1);
	create_insn	(x=0X13908);
	op_stkvar	(x,	1);
	create_insn	(x=0X1391C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13924);
	op_stkvar	(x,	1);
	create_insn	(x=0X1392C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13930);
	op_stkvar	(x,	1);
	create_insn	(x=0X13938);
	op_stkvar	(x,	1);
	create_insn	(x=0X1394C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13954);
	op_stkvar	(x,	1);
	create_insn	(x=0X1395C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13960);
	op_stkvar	(x,	1);
	create_insn	(x=0X13974);
	op_stkvar	(x,	1);
	create_insn	(x=0X1397C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13984);
	op_stkvar	(x,	1);
	create_insn	(x=0X13988);
	op_stkvar	(x,	1);
	create_insn	(x=0X13990);
	op_stkvar	(x,	1);
	create_insn	(x=0X139A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X139AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X139B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X139B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X139C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X139C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X139D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X139D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X139DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X139E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X139EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X139F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X139FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A04);
	op_stkvar	(x,	1);
	set_cmt	(0X13A18,	"dest",	0);
	set_cmt	(0X13A1C,	"src",	0);
	create_insn	(x=0X13A1C);
	op_stkvar	(x,	1);
	set_cmt	(0X13A20,	"n",	0);
	create_insn	(x=0X13A28);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A34);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A40);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A4C);
	op_stkvar	(x,	1);
	set_cmt	(0X13A58,	"ptSync",	0);
	create_insn	(x=0X13A58);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A70);
	op_stkvar	(x,	1);
	create_insn	(0X13A78);
	create_insn	(x=0X13A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A80);
	op_stkvar	(x,	1);
	create_dword	(0X13A90);
	create_insn	(x=0X13A94);
	op_stkvar	(x,	1);
	set_name	(0X13A94,	"Iap2_Link_Sync_IsValid");
	create_insn	(x=0X13AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X13AA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X13AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X13AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X13AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X13AD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X13AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X13AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X13B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X13B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X13B64);
	op_stkvar	(x,	1);
	create_insn	(x=0X13B80);
	op_stkvar	(x,	1);
	create_insn	(0X13B88);
	create_insn	(x=0X13B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X13B98);
	op_stkvar	(x,	1);
	create_insn	(x=0X13BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X13BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X13BF0);
	op_stkvar	(x,	1);
	create_insn	(0X13BF8);
	create_insn	(x=0X13BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X13C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X13C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X13C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X13C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X13C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X13C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13C64);
	op_stkvar	(x,	1);
	create_insn	(x=0X13C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X13C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X13C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X13CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X13CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X13CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X13CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X13CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X13CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X13D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X13D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X13D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X13D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X13D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X13D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X13D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X13D90);
	op_stkvar	(x,	1);
	create_insn	(0X13D98);
	create_insn	(x=0X13D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13DA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X13DA4);
	op_hex		(x,	1);
	create_insn	(x=0X13DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X13DAC);
	op_stkvar	(x,	1);
	create_insn	(0X13DC0);
	set_name	(0X13DC0,	"Iap2_Link_CheckRecv");
	create_insn	(x=0X13DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X13DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X13DE0);
	op_stkvar	(x,	1);
	set_cmt	(0X13DE8,	"pQueue",	0);
	create_insn	(x=0X13DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X13E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X13E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X13E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X13E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X13E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X13E60);
	op_stkvar	(x,	1);
	create_insn	(x=0X13E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X13E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X13E78);
	op_stkvar	(x,	1);
	set_cmt	(0X13E7C,	"pucInBuff",	0);
	set_cmt	(0X13E80,	"ulInlen",	0);
	set_cmt	(0X13E84,	"pInOff",	0);
	set_cmt	(0X13E88,	"ptPkt",	0);
	set_cmt	(0X13E9C,	"ptLink",	0);
	create_insn	(x=0X13E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X13EB4);
	op_stkvar	(x,	1);
	set_cmt	(0X13EBC,	"pQueue",	0);
	create_insn	(x=0X13ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X13ED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X13EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X13EEC);
	op_stkvar	(x,	1);
	create_insn	(0X13EFC);
	create_insn	(0X13F04);
	set_name	(0X13F04,	"Iap2_Link_DealRecv");
	create_insn	(x=0X13F10);
	op_stkvar	(x,	1);
	create_insn	(x=0X13F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X13F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X13F2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X13F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X13F70);
	op_stkvar	(x,	1);
	set_cmt	(0X13F84,	"ptLink",	0);
	create_insn	(x=0X13F84);
	op_stkvar	(x,	1);
	set_cmt	(0X13F90,	"ptLink",	0);
	create_insn	(x=0X13F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X13FA0);
	op_stkvar	(x,	1);
	set_name	(0X13FA0,	"Iap2_Link_IsSyncAckPkt");
	create_insn	(x=0X13FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X13FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X13FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X13FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X13FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X13FDC);
	op_hex		(x,	1);
	create_insn	(x=0X13FEC);
	op_stkvar	(x,	1);
	create_insn	(0X13FF4);
	create_insn	(x=0X13FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X13FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X14010);
	op_stkvar	(x,	1);
	set_name	(0X14010,	"Iap2_Link_IsAckPkt");
	create_insn	(x=0X1401C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14020);
	op_stkvar	(x,	1);
	create_insn	(x=0X14028);
	op_stkvar	(x,	1);
	create_insn	(x=0X1402C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14034);
	op_hex		(x,	1);
	create_insn	(x=0X14044);
	op_stkvar	(x,	1);
	create_insn	(0X1404C);
	create_insn	(x=0X14050);
	op_stkvar	(x,	1);
	create_insn	(x=0X14054);
	op_stkvar	(x,	1);
	create_insn	(x=0X14068);
	op_stkvar	(x,	1);
	set_name	(0X14068,	"Iap2_Link_IsOnlyAckPkt");
	create_insn	(x=0X14074);
	op_stkvar	(x,	1);
	create_insn	(x=0X14078);
	op_stkvar	(x,	1);
	create_insn	(x=0X14080);
	op_stkvar	(x,	1);
	create_insn	(x=0X14084);
	op_stkvar	(x,	1);
	create_insn	(x=0X14094);
	op_stkvar	(x,	1);
	create_insn	(x=0X140A8);
	op_stkvar	(x,	1);
	create_insn	(0X140B0);
	create_insn	(x=0X140B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X140B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X140CC);
	op_stkvar	(x,	1);
	set_name	(0X140CC,	"Iap2_Link_IsEakPkt");
	create_insn	(x=0X140D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X140DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X140E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X140E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X140F0);
	op_hex		(x,	1);
	create_insn	(x=0X14100);
	op_stkvar	(x,	1);
	create_insn	(0X14108);
	create_insn	(x=0X1410C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14110);
	op_stkvar	(x,	1);
	create_insn	(x=0X14124);
	op_stkvar	(x,	1);
	set_name	(0X14124,	"Iap2_Link_IsRstPkt");
	create_insn	(x=0X14130);
	op_stkvar	(x,	1);
	create_insn	(x=0X14134);
	op_stkvar	(x,	1);
	create_insn	(x=0X1413C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14140);
	op_stkvar	(x,	1);
	create_insn	(x=0X14148);
	op_hex		(x,	1);
	create_insn	(x=0X14158);
	op_stkvar	(x,	1);
	create_insn	(0X14160);
	create_insn	(x=0X14164);
	op_stkvar	(x,	1);
	create_insn	(x=0X14168);
	op_stkvar	(x,	1);
	create_insn	(x=0X1417C);
	op_stkvar	(x,	1);
	set_name	(0X1417C,	"Iap2_Link_IsSusPkt");
	create_insn	(x=0X14188);
	op_stkvar	(x,	1);
	create_insn	(x=0X1418C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14194);
	op_stkvar	(x,	1);
	create_insn	(x=0X14198);
	op_stkvar	(x,	1);
	create_insn	(x=0X141A0);
	op_hex		(x,	1);
	create_insn	(x=0X141B0);
	op_stkvar	(x,	1);
	create_insn	(0X141B8);
	create_insn	(x=0X141BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X141C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X141D4);
	op_stkvar	(x,	1);
	set_name	(0X141D4,	"Iap2_Link_LeftGap");
	create_insn	(x=0X141E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X141F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X141F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X141F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X14200);
	op_hex		(x,	1);
	create_insn	(x=0X14214);
	op_stkvar	(x,	1);
	set_name	(0X14214,	"Iap2_Link_RightGap");
	create_insn	(x=0X14228);
	op_stkvar	(x,	1);
	create_insn	(x=0X14230);
	op_stkvar	(x,	1);
	create_insn	(x=0X14234);
	op_stkvar	(x,	1);
	create_insn	(x=0X14238);
	op_stkvar	(x,	1);
	create_insn	(x=0X14240);
	op_hex		(x,	1);
	create_insn	(0X14254);
	set_name	(0X14254,	"Iap2_Link_IsInLeftGap");
	create_insn	(x=0X14264);
	op_stkvar	(x,	1);
	create_insn	(x=0X1426C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14274);
	op_stkvar	(x,	1);
	create_insn	(x=0X14278);
	op_stkvar	(x,	1);
	create_insn	(x=0X1427C);
	op_stkvar	(x,	1);
	set_cmt	(0X14280,	"ucCur",	0);
	set_cmt	(0X14284,	"ucLeft",	0);
	create_insn	(x=0X14294);
	op_stkvar	(x,	1);
	create_insn	(0X142B0);
	set_name	(0X142B0,	"Iap2_Link_IsInRightGap");
	create_insn	(x=0X142C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X142C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X142D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X142D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X142D8);
	op_stkvar	(x,	1);
	set_cmt	(0X142DC,	"ucCur",	0);
	set_cmt	(0X142E0,	"ucRight",	0);
	create_insn	(x=0X142F0);
	op_stkvar	(x,	1);
	create_insn	(0X1430C);
	set_name	(0X1430C,	"Iap2_Link_DealLink");
	create_insn	(x=0X14318);
	op_stkvar	(x,	1);
	create_insn	(x=0X1431C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14328);
	op_stkvar	(x,	1);
	create_insn	(x=0X1432C);
	op_stkvar	(x,	1);
	set_cmt	(0X14334,	"ptPkt",	0);
	create_insn	(x=0X14348);
	op_stkvar	(x,	1);
	set_cmt	(0X14350,	"ptPkt",	0);
	set_cmt	(0X14364,	"ptLink",	0);
	create_insn	(x=0X14364);
	op_stkvar	(x,	1);
	set_cmt	(0X14368,	"bFirst",	0);
	create_insn	(x=0X14374);
	op_stkvar	(x,	1);
	set_cmt	(0X1437C,	"ptPkt",	0);
	create_insn	(x=0X14390);
	op_stkvar	(x,	1);
	create_insn	(x=0X143A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X143B0);
	op_stkvar	(x,	1);
	set_cmt	(0X143B8,	"ptPkt",	0);
	create_insn	(x=0X143CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X143D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X143E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X143E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X143F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X143F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X14400);
	op_stkvar	(x,	1);
	create_insn	(x=0X14408);
	op_stkvar	(x,	1);
	create_insn	(x=0X14414);
	op_stkvar	(x,	1);
	create_insn	(x=0X14418);
	op_stkvar	(x,	1);
	create_insn	(x=0X14424);
	op_stkvar	(x,	1);
	create_insn	(x=0X1442C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14434);
	op_stkvar	(x,	1);
	create_insn	(x=0X14438);
	op_stkvar	(x,	1);
	create_insn	(x=0X14440);
	op_stkvar	(x,	1);
	create_insn	(x=0X14450);
	op_stkvar	(x,	1);
	create_insn	(x=0X14454);
	op_stkvar	(x,	1);
	create_insn	(x=0X14458);
	op_stkvar	(x,	1);
	create_insn	(x=0X14464);
	op_stkvar	(x,	1);
	create_insn	(x=0X14468);
	op_stkvar	(x,	1);
	create_insn	(x=0X14474);
	op_stkvar	(x,	1);
	create_insn	(x=0X1447C);
	op_stkvar	(x,	1);
	set_cmt	(0X14488,	"mutex",	0);
	create_insn	(x=0X14490);
	op_stkvar	(x,	1);
	set_cmt	(0X14498,	"pQueue",	0);
	set_cmt	(0X1449C,	"pData",	0);
	create_insn	(x=0X1449C);
	op_stkvar	(x,	1);
	create_insn	(x=0X144A4);
	op_stkvar	(x,	1);
	set_cmt	(0X144B0,	"mutex",	0);
	create_insn	(x=0X144B8);
	op_stkvar	(x,	1);
	set_cmt	(0X144C0,	"entry",	0);
	create_insn	(x=0X144C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X144D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X144DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X144E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X144E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X144F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X144F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X144F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X14508);
	op_stkvar	(x,	1);
	create_insn	(x=0X1450C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14510);
	op_stkvar	(x,	1);
	create_insn	(x=0X1451C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14520);
	op_stkvar	(x,	1);
	create_insn	(x=0X14528);
	op_stkvar	(x,	1);
	create_insn	(x=0X1453C);
	op_stkvar	(x,	1);
	set_cmt	(0X14544,	"ptPkt",	0);
	create_insn	(x=0X14558);
	op_stkvar	(x,	1);
	create_insn	(x=0X14564);
	op_stkvar	(x,	1);
	create_insn	(x=0X14578);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_4(void) {
        auto x;
#define id x

	set_cmt	(0X14580,	"ptLink",	0);
	create_insn	(x=0X14580);
	op_stkvar	(x,	1);
	set_cmt	(0X14584,	"ucSeq",	0);
	create_insn	(x=0X14590);
	op_stkvar	(x,	1);
	set_cmt	(0X14598,	"ptPkt",	0);
	create_insn	(x=0X145AC);
	op_stkvar	(x,	1);
	set_cmt	(0X145B4,	"ptPkt",	0);
	create_insn	(x=0X145C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X145C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X145D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X145D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X145E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X145E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X145F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X145F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X14600);
	op_stkvar	(x,	1);
	create_insn	(x=0X14604);
	op_stkvar	(x,	1);
	create_insn	(x=0X14610);
	op_stkvar	(x,	1);
	create_insn	(x=0X14620);
	op_stkvar	(x,	1);
	set_cmt	(0X14628,	"pTimer",	0);
	create_insn	(x=0X14634);
	op_stkvar	(x,	1);
	create_insn	(x=0X1463C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14640);
	op_stkvar	(x,	1);
	create_insn	(x=0X14650);
	op_stkvar	(x,	1);
	create_insn	(x=0X1465C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1466C);
	op_stkvar	(x,	1);
	set_cmt	(0X14678,	"ptLink",	0);
	create_insn	(x=0X14678);
	op_stkvar	(x,	1);
	set_cmt	(0X1467C,	"ptPkt",	0);
	create_insn	(x=0X1467C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14684);
	op_stkvar	(x,	1);
	create_insn	(x=0X14688);
	op_stkvar	(x,	1);
	create_insn	(x=0X1468C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14698);
	op_stkvar	(x,	1);
	create_insn	(x=0X1469C);
	op_stkvar	(x,	1);
	create_insn	(x=0X146A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X146B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X146C0);
	op_stkvar	(x,	1);
	set_cmt	(0X146D0,	"ptLink",	0);
	create_insn	(x=0X146D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X146DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X146E4);
	op_stkvar	(x,	1);
	set_cmt	(0X146EC,	"ucCur",	0);
	set_cmt	(0X146F0,	"ucLeft",	0);
	set_cmt	(0X146F4,	"ucGap",	0);
	create_insn	(x=0X14708);
	op_stkvar	(x,	1);
	set_cmt	(0X14710,	"ptLink",	0);
	create_insn	(x=0X14710);
	op_stkvar	(x,	1);
	set_cmt	(0X14714,	"ucAckSeq",	0);
	create_insn	(x=0X14720);
	op_stkvar	(x,	1);
	create_insn	(x=0X14728);
	op_stkvar	(x,	1);
	set_cmt	(0X1472C,	"ucRight",	0);
	create_insn	(x=0X14730);
	op_stkvar	(x,	1);
	create_insn	(x=0X1473C);
	op_hex		(x,	1);
	set_cmt	(0X14740,	"ucCur",	0);
	set_cmt	(0X14744,	"ucGap",	0);
	set_cmt	(0X14758,	"ptLink",	0);
	create_insn	(x=0X14758);
	op_stkvar	(x,	1);
	create_insn	(0X14768);
	set_name	(0X14768,	"list_del");
	create_insn	(x=0X14774);
	op_stkvar	(x,	1);
	create_insn	(x=0X14778);
	op_stkvar	(x,	1);
	create_insn	(x=0X14780);
	op_stkvar	(x,	1);
	set_cmt	(0X14788,	"prev",	0);
	set_cmt	(0X1478C,	"next",	0);
	create_insn	(x=0X1479C);
	op_stkvar	(x,	1);
	set_name	(0X1479C,	"__list_del");
	create_insn	(x=0X147A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X147AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X147B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X147B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X147BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X147C0);
	op_stkvar	(x,	1);
	create_insn	(0X147D4);
	set_name	(0X147D4,	"Iap2_Link_DealLinkInSeqPkt");
	create_insn	(x=0X147E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X147E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X147F0);
	op_hex		(x,	1);
	create_insn	(x=0X147F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X147FC);
	op_stkvar	(x,	1);
	set_cmt	(0X14804,	"ptLink",	0);
	create_insn	(x=0X14804);
	op_stkvar	(x,	1);
	set_cmt	(0X14808,	"ptPkt",	0);
	create_insn	(x=0X14814);
	op_stkvar	(x,	1);
	create_insn	(x=0X14820);
	op_stkvar	(x,	1);
	create_insn	(x=0X14828);
	op_stkvar	(x,	1);
	create_insn	(x=0X1482C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1483C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14848);
	op_stkvar	(x,	1);
	create_insn	(x=0X1484C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14854);
	op_stkvar	(x,	1);
	create_insn	(x=0X14858);
	op_stkvar	(x,	1);
	create_insn	(x=0X14860);
	op_stkvar	(x,	1);
	create_insn	(x=0X14874);
	op_stkvar	(x,	1);
	create_insn	(x=0X1487C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14880);
	op_stkvar	(x,	1);
	create_insn	(x=0X1488C);
	op_hex		(x,	1);
	create_insn	(x=0X14890);
	op_stkvar	(x,	1);
	set_cmt	(0X14898,	"ptLink",	0);
	create_insn	(x=0X14898);
	op_stkvar	(x,	1);
	set_cmt	(0X1489C,	"ptPkt",	0);
	create_insn	(x=0X1489C);
	op_stkvar	(x,	1);
	create_insn	(x=0X148A4);
	op_stkvar	(x,	1);
	set_cmt	(0X148AC,	"entry",	0);
	create_insn	(x=0X148B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X148C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X148C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X148D4);
	op_stkvar	(x,	1);
	set_cmt	(0X148E0,	"ptLink",	0);
	create_insn	(x=0X148E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X148EC);
	op_stkvar	(x,	1);
	set_cmt	(0X148F8,	"pTimer",	0);
	create_insn	(x=0X1490C);
	op_stkvar	(x,	1);
	set_cmt	(0X14918,	"pTimer",	0);
	create_insn	(0X14928);
	set_name	(0X14928,	"Iap2_Link_DealLinkInSeqPkt_Parse");
	create_insn	(x=0X14934);
	op_stkvar	(x,	1);
	create_insn	(x=0X14938);
	op_stkvar	(x,	1);
	create_insn	(x=0X1493C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14940);
	op_stkvar	(x,	1);
	create_insn	(x=0X14944);
	op_stkvar	(x,	1);
	create_insn	(x=0X1494C);
	op_stkvar	(x,	1);
	set_cmt	(0X14950,	"ptPkt",	0);
	create_insn	(x=0X14950);
	op_stkvar	(x,	1);
	set_cmt	(0X14964,	"ptPkt",	0);
	create_insn	(x=0X14964);
	op_stkvar	(x,	1);
	create_insn	(x=0X14970);
	op_stkvar	(x,	1);
	set_cmt	(0X14978,	"ptSync",	0);
	create_insn	(x=0X14978);
	op_stkvar	(x,	1);
	set_cmt	(0X1497C,	"pucData",	0);
	set_cmt	(0X14980,	"ulLen",	0);
	create_insn	(x=0X14994);
	op_stkvar	(x,	1);
	create_insn	(x=0X14998);
	op_stkvar	(x,	1);
	create_insn	(x=0X149A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X149A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X149B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X149B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X149C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X149C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X149CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X149D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X149E8);
	op_stkvar	(x,	1);
	set_cmt	(0X149F4,	"ptLink",	0);
	create_insn	(x=0X149F4);
	op_stkvar	(x,	1);
	set_cmt	(0X149FC,	"ptPkt",	0);
	create_insn	(x=0X149FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X14A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X14A10);
	op_stkvar	(x,	1);
	set_cmt	(0X14A20,	"ptRecvPkt",	0);
	create_insn	(x=0X14A20);
	op_stkvar	(x,	1);
	set_cmt	(0X14A24,	"ptLink",	0);
	create_insn	(x=0X14A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X14A38);
	op_stkvar	(x,	1);
	set_cmt	(0X14A44,	"pQueue",	0);
	set_cmt	(0X14A48,	"pData",	0);
	create_insn	(x=0X14A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X14A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X14A5C);
	op_stkvar	(x,	1);
	set_cmt	(0X14A6C,	"ptPkt",	0);
	create_insn	(x=0X14A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14A78);
	op_stkvar	(x,	1);
	create_insn	(x=0X14A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14A88);
	op_stkvar	(x,	1);
	create_insn	(x=0X14A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14A94);
	op_stkvar	(x,	1);
	create_insn	(x=0X14A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X14AA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X14AAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X14AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X14ABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X14AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X14AC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X14B00);
	op_stkvar	(x,	1);
	create_insn	(x=0X14B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X14B08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X14B6C);
	op_stkvar	(x,	1);
	set_cmt	(0X14B78,	"pQueue",	0);
	set_cmt	(0X14B7C,	"pData",	0);
	create_insn	(x=0X14B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14B88);
	op_stkvar	(x,	1);
	create_insn	(x=0X14B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X14B98);
	op_stkvar	(x,	1);
	create_insn	(x=0X14B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14BA8);
	op_stkvar	(x,	1);
	set_cmt	(0X14BB4,	"ptPkt",	0);
	create_insn	(x=0X14BB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X14BC0);
	op_stkvar	(x,	1);
	set_cmt	(0X14BC8,	"ptPkt",	0);
	create_insn	(x=0X14BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X14BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X14BD8);
	op_stkvar	(x,	1);
	create_dword	(0X14BE8);
	create_dword	(x=0X14BEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X14BF0);
	set_name	(0X14BF0,	"Iap2_Link_DealLinkOutSeqPkt");
	create_insn	(x=0X14BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X14C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X14C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X14C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X14C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X14C28);
	op_stkvar	(x,	1);
	create_insn	(x=0X14C34);
	op_stkvar	(x,	1);
	create_insn	(x=0X14C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X14C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X14C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X14C64);
	op_stkvar	(x,	1);
	create_insn	(x=0X14C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14C74);
	op_stkvar	(x,	1);
	set_cmt	(0X14C78,	"ucLeft",	0);
	create_insn	(x=0X14C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14C88);
	op_hex		(x,	1);
	set_cmt	(0X14C8C,	"ucCur",	0);
	set_cmt	(0X14C90,	"ucGap",	0);
	create_insn	(x=0X14CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X14CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X14CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X14CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X14CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X14CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X14CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X14CE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X14CEC);
	op_stkvar	(x,	1);
	set_cmt	(0X14CF4,	"new",	0);
	set_cmt	(0X14CF8,	"head",	0);
	create_insn	(x=0X14D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X14D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14D14);
	op_stkvar	(x,	1);
	set_cmt	(0X14D20,	"ptLink",	0);
	create_insn	(x=0X14D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X14D30);
	op_stkvar	(x,	1);
	set_name	(0X14D30,	"Iap2_Link_IsRecvPktValid");
	create_insn	(x=0X14D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X14D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X14D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14D64);
	op_stkvar	(x,	1);
	create_insn	(x=0X14D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X14D70);
	op_hex		(x,	1);
	create_insn	(x=0X14D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X14D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X14D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X14D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X14D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X14DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X14DBC);
	op_hex		(x,	1);
	create_insn	(x=0X14DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X14DD0);
	op_hex		(x,	1);
	create_insn	(x=0X14DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X14DE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X14DF0);
	op_hex		(x,	1);
	create_insn	(x=0X14DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X14E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X14E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X14E20);
	op_hex		(x,	1);
	create_insn	(x=0X14E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X14E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X14E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X14E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X14E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X14E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X14E9C);
	op_hex		(x,	1);
	create_insn	(x=0X14EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X14EBC);
	op_stkvar	(x,	1);
	create_insn	(0X14EC4);
	create_insn	(x=0X14EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X14ECC);
	op_stkvar	(x,	1);
	create_insn	(0X14EE0);
	set_name	(0X14EE0,	"Iap2_Link_CheckState");
	create_insn	(x=0X14EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X14EF0);
	op_stkvar	(x,	1);
	set_cmt	(0X14EF8,	"switch 4 cases ",	0);
	set_cmt	(0X14EFC,	"switch jump",	0);
	set_cmt	(0X14F04,	"jump table for switch statement",	0);
	create_dword	(x=0X14F04);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X14F14,	"jumptable 00014EFC case 0",	1);
	create_insn	(x=0X14F14);
	op_stkvar	(x,	1);
	set_cmt	(0X14F1C,	"pTimer",	0);
	set_cmt	(0X14F20,	"ulTimeout",	0);
	set_cmt	(0X14F34,	"ptLink",	0);
	create_insn	(x=0X14F34);
	op_stkvar	(x,	1);
	set_cmt	(0X14F40,	"jumptable 00014EFC case 1",	1);
	create_insn	(x=0X14F40);
	op_stkvar	(x,	1);
	set_cmt	(0X14F4C,	"jumptable 00014EFC cases 2,3",	1);
	create_insn	(x=0X14F4C);
	op_stkvar	(x,	1);
	set_cmt	(0X14F54,	"jumptable 00014EFC default case",	1);
	create_insn	(0X14F5C);
	set_name	(0X14F5C,	"Iap2_Link_CheckSendRecv");
	create_insn	(x=0X14F68);
	op_stkvar	(x,	1);
	create_insn	(x=0X14F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X14F7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14F88);
	op_stkvar	(x,	1);
	create_insn	(x=0X14F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X14F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X14FA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X14FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X14FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X14FC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X14FCC,	"pTimer",	0);
	set_cmt	(0X14FD0,	"ulTimeout",	0);
	set_cmt	(0X14FE4,	"ptLink",	0);
	create_insn	(x=0X14FE4);
	op_stkvar	(x,	1);
	set_cmt	(0X14FE8,	"ptPkt",	0);
	create_insn	(x=0X14FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X14FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X14FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X14FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X15004);
	op_stkvar	(x,	1);
	create_insn	(x=0X15008);
	op_stkvar	(x,	1);
	create_insn	(x=0X15010);
	op_stkvar	(x,	1);
	create_insn	(x=0X15024);
	op_stkvar	(x,	1);
	create_insn	(x=0X1502C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1503C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15044);
	op_stkvar	(x,	1);
	create_insn	(x=0X1504C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15054);
	op_stkvar	(x,	1);
	create_insn	(x=0X15058);
	op_stkvar	(x,	1);
	create_insn	(x=0X15068);
	op_stkvar	(x,	1);
	create_insn	(x=0X1506C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15074);
	op_stkvar	(x,	1);
	set_cmt	(0X1507C,	"ucCur",	0);
	set_cmt	(0X15080,	"ucRight",	0);
	create_insn	(x=0X15090);
	op_stkvar	(x,	1);
	create_insn	(x=0X1509C);
	op_stkvar	(x,	1);
	create_insn	(x=0X150A8);
	op_stkvar	(x,	1);
	set_cmt	(0X150B4,	"pTimer",	0);
	set_cmt	(0X150B8,	"ulTimeout",	0);
	set_cmt	(0X150CC,	"ptLink",	0);
	create_insn	(x=0X150CC);
	op_stkvar	(x,	1);
	create_dword	(x=0X150DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X150E0);
	create_insn	(0X150E4);
	set_name	(0X150E4,	"Iap2_Link_CheckSend");
	create_insn	(x=0X150F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X150F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X150FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1510C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15118);
	op_stkvar	(x,	1);
	set_cmt	(0X15124,	"pQueue",	0);
	create_insn	(x=0X15130);
	op_stkvar	(x,	1);
	create_insn	(x=0X15134);
	op_stkvar	(x,	1);
	set_cmt	(0X15140,	"ptLink",	0);
	create_insn	(x=0X15140);
	op_stkvar	(x,	1);
	set_cmt	(0X15144,	"ptPkt",	0);
	create_insn	(x=0X15144);
	op_stkvar	(x,	1);
	create_insn	(0X15150);
	create_insn	(x=0X15154);
	op_stkvar	(x,	1);
	create_insn	(x=0X1515C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15188);
	op_stkvar	(x,	1);
	set_cmt	(0X15194,	"pQueue",	0);
	create_insn	(x=0X151A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X151A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X151B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X151B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X151BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X151C8);
	op_stkvar	(x,	1);
	set_cmt	(0X151D4,	"ptLink",	0);
	create_insn	(x=0X151D4);
	op_stkvar	(x,	1);
	set_cmt	(0X151D8,	"ptPkt",	0);
	create_insn	(x=0X151D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X151E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X151E8);
	op_stkvar	(x,	1);
	create_dword	(x=0X15200);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X15204);
	set_name	(0X15204,	"Iap2_Link_Runloop");
	create_insn	(x=0X15210);
	op_stkvar	(x,	1);
	set_cmt	(0X15214,	"ptLink",	0);
	create_insn	(x=0X15214);
	op_stkvar	(x,	1);
	set_cmt	(0X1521C,	"ptLink",	0);
	create_insn	(x=0X1521C);
	op_stkvar	(x,	1);
	set_cmt	(0X15224,	"ptLink",	0);
	create_insn	(x=0X15224);
	op_stkvar	(x,	1);
	create_insn	(0X15234);
	set_name	(0X15234,	"Iap2_Link_PreInit");
	set_cmt	(0X1523C,	"ptLink",	0);
	create_insn	(x=0X1523C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X15240,	"bFirst",	0);
	create_dword	(x=0X1524C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X1524C,	"ptLink");
	create_insn	(0X15250);
	set_name	(0X15250,	"Iap2_Link_Run");
	create_insn	(x=0X1525C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15260);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15264);
	op_plain_offset	(x,	1,	0X81E98);
	op_plain_offset	(x,	129,	0X81E98);
	set_cmt	(0X15278,	"ptLink",	0);
	create_insn	(x=0X15278);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X15280,	"useconds",	0);
	set_cmt	(0X1528C,	"ptLink",	0);
	create_insn	(x=0X1528C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X15294,	"ptLink",	0);
	create_insn	(x=0X15294);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X152A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X152A4);
	create_insn	(0X152A8);
	set_name	(0X152A8,	"Iap2_Link_CtrlSession_Recv");
	create_insn	(x=0X152B4);
	op_stkvar	(x,	1);
	set_cmt	(0X152B8,	"pQueue",	0);
	create_insn	(x=0X152B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X152C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X152D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X152E4);
	op_stkvar	(x,	1);
	create_insn	(0X152EC);
	create_insn	(x=0X152F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X152F4);
	op_stkvar	(x,	1);
	create_dword	(x=0X15304);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X15304,	"pQueue");
	create_insn	(0X15308);
	set_name	(0X15308,	"Iap2_Link_CtrlSession_Send");
	create_insn	(x=0X15314);
	op_stkvar	(x,	1);
	create_insn	(x=0X15318);
	op_stkvar	(x,	1);
	set_cmt	(0X15324,	"mutex",	0);
	create_insn	(x=0X15324);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1532C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1533C,	"pQueue",	0);
	create_insn	(x=0X1533C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X15340,	"pData",	0);
	create_insn	(x=0X15340);
	op_stkvar	(x,	1);
	set_cmt	(0X15348,	"mutex",	0);
	create_insn	(x=0X15348);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X15360);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X15364);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X15368);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1536C);
	set_name	(0X1536C,	"Iap2_Link_Session_ReleaseRecvPkt");
	create_insn	(x=0X15378);
	op_stkvar	(x,	1);
	set_cmt	(0X1537C,	"mutex",	0);
	create_insn	(x=0X1537C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15384);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X15394,	"pQueue",	0);
	create_insn	(x=0X15394);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X15398,	"pData",	0);
	create_insn	(x=0X15398);
	op_stkvar	(x,	1);
	set_cmt	(0X153A0,	"mutex",	0);
	create_insn	(x=0X153A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X153B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X153B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X153B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X153BC);
	set_name	(0X153BC,	"Iap2_Link_Session_GetSendPkt");
	create_insn	(x=0X153C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X153D0);
	op_stkvar	(x,	1);
	set_cmt	(0X153D4,	"mutex",	0);
	create_insn	(x=0X153D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X153DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X153EC,	"pQueue",	0);
	create_insn	(x=0X153EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X153FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X15404);
	op_stkvar	(x,	1);
	create_insn	(x=0X15418);
	op_stkvar	(x,	1);
	create_insn	(x=0X15420);
	op_stkvar	(x,	1);
	set_cmt	(0X1542C,	"mutex",	0);
	create_insn	(x=0X1542C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15434);
	op_stkvar	(x,	1);
	create_dword	(x=0X15444);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X15448);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1544C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X15450);
	set_name	(0X15450,	"Iap2_Link_Session_ReleaseSendPkt");
	create_insn	(x=0X1545C);
	op_stkvar	(x,	1);
	set_cmt	(0X15460,	"mutex",	0);
	create_insn	(x=0X15460);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15468);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X15478,	"pQueue",	0);
	create_insn	(x=0X15478);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1547C,	"pData",	0);
	create_insn	(x=0X1547C);
	op_stkvar	(x,	1);
	set_cmt	(0X15484,	"mutex",	0);
	create_insn	(x=0X15484);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X15494);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X15498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1549C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X154A0);
	set_name	(0X154A0,	"Iap2_Link_EASession_IsConn");
	create_insn	(x=0X154AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X154B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X154B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X154C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X154D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X154E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X154F0,	"mutex",	0);
	create_insn	(x=0X154F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15508);
	op_stkvar	(x,	1);
	create_insn	(x=0X1550C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15510);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1554C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15550);
	op_stkvar	(x,	1);
	create_insn	(x=0X15568);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X15570,	"mutex",	0);
	create_insn	(x=0X15578);
	op_stkvar	(x,	1);
	create_insn	(x=0X1557C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15580);
	op_stkvar	(x,	1);
	create_dword	(x=0X15590);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X15594);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X15598);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1559C);
	set_name	(0X1559C,	"Iap2_Link_EASession_Recv");
	create_insn	(x=0X155A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X155AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X155B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X155B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X155C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X155D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X155E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X155F0,	"mutex",	0);
	create_insn	(x=0X155F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15608);
	op_stkvar	(x,	1);
	create_insn	(x=0X1560C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15610);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15648);
	op_stkvar	(x,	1);
	create_insn	(x=0X15658);
	op_stkvar	(x,	1);
	create_insn	(x=0X15684);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X15690,	"pQueue",	0);
	create_insn	(x=0X156A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X156A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X156BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X156C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X156D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X156E0,	"mutex",	0);
	create_insn	(x=0X156E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X156EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X156F0);
	op_stkvar	(x,	1);
	create_dword	(x=0X15700);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X15704);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X15708);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1570C);
	set_name	(0X1570C,	"Iap2_Link_EASession_Send");
	create_insn	(x=0X15718);
	op_stkvar	(x,	1);
	create_insn	(x=0X1571C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15720);
	op_stkvar	(x,	1);
	create_insn	(x=0X15730);
	op_stkvar	(x,	1);
	create_insn	(x=0X15738);
	op_stkvar	(x,	1);
	create_insn	(x=0X15750);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X15758,	"mutex",	0);
	create_insn	(x=0X15760);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15770);
	op_stkvar	(x,	1);
	create_insn	(x=0X15774);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15778);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X157B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X157C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X157D0,	"mutex",	0);
	create_insn	(x=0X157DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X157E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X157FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X15804,	"mutex",	0);
	set_cmt	(0X1580C,	"ptPkt",	0);
	create_insn	(x=0X1580C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15818);
	op_stkvar	(x,	1);
	create_insn	(x=0X1581C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15820);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15824);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15860);
	op_hex		(x,	1);
	create_insn	(x=0X15864);
	op_stkvar	(x,	1);
	create_insn	(x=0X1586C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15874);
	op_stkvar	(x,	1);
	create_insn	(x=0X15878);
	op_stkvar	(x,	1);
	create_insn	(x=0X1587C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15880);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X158B0);
	op_hex		(x,	1);
	create_insn	(x=0X158B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X158BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X158D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X158D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X158E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X158FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X15904,	"mutex",	0);
	create_insn	(x=0X1590C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1591C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15920);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15924);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1595C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15974);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1597C,	"mutex",	0);
	create_insn	(x=0X15988);
	op_stkvar	(x,	1);
	create_insn	(x=0X15990);
	op_stkvar	(x,	1);
	create_insn	(x=0X159BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X159C8,	"pQueue",	0);
	set_cmt	(0X159CC,	"pData",	0);
	create_insn	(x=0X159CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X159D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X159EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X159F4,	"mutex",	0);
	create_insn	(x=0X15A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A04);
	op_stkvar	(x,	1);
	create_dword	(x=0X15A14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X15A18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X15A1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X15A20);
	set_name	(0X15A20,	"Iap2_Link_EASession_Recv_Wrap");
	create_insn	(x=0X15A2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A34);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A40);
	op_stkvar	(x,	1);
	set_cmt	(0X15A44,	"ulID",	0);
	create_insn	(x=0X15A44);
	op_stkvar	(x,	1);
	set_cmt	(0X15A48,	"ptPkt",	0);
	create_insn	(x=0X15A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A78);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15A88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15A94);
	op_stkvar	(x,	1);
	set_cmt	(0X15A98,	"ptPkt",	0);
	set_cmt	(0X15AA4,	"dest",	0);
	create_insn	(x=0X15AA4);
	op_stkvar	(x,	1);
	set_cmt	(0X15AA8,	"src",	0);
	set_cmt	(0X15AAC,	"n",	0);
	create_insn	(x=0X15AAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X15AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X15AB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X15ABC);
	op_stkvar	(x,	1);
	set_cmt	(0X15AC0,	"ptPkt",	0);
	create_insn	(x=0X15AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X15ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X15AD0);
	op_stkvar	(x,	1);
	create_dword	(x=0X15AE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X15AE4);
	set_name	(0X15AE4,	"Iap2_Link_EASession_Send_Wrap");
	create_insn	(x=0X15AF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X15AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X15AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X15AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B00);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B18);
	op_stkvar	(x,	1);
	set_cmt	(0X15B1C,	"ptPkt",	0);
	create_insn	(x=0X15B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B54);
	op_stkvar	(x,	1);
	set_cmt	(0X15B58,	"ptPkt",	0);
	set_cmt	(0X15B64,	"dest",	0);
	set_cmt	(0X15B68,	"src",	0);
	create_insn	(x=0X15B68);
	op_stkvar	(x,	1);
	set_cmt	(0X15B6C,	"n",	0);
	create_insn	(x=0X15B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B78);
	op_stkvar	(x,	1);
	create_insn	(x=0X15B88);
	op_stkvar	(x,	1);
	set_cmt	(0X15B8C,	"ulID",	0);
	create_insn	(x=0X15B8C);
	op_stkvar	(x,	1);
	set_cmt	(0X15B90,	"ptPkt",	0);
	create_insn	(x=0X15BA4);
	op_stkvar	(x,	1);
	set_cmt	(0X15BA8,	"ptPkt",	0);
	create_insn	(x=0X15BB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X15BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X15BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X15BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X15BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X15BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X15BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X15BEC);
	op_stkvar	(x,	1);
	set_name	(0X15BEC,	"Iap2_Pkt_GetDataPtr");
	create_insn	(x=0X15BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X15BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X15C18);
	op_stkvar	(x,	1);
	set_name	(0X15C18,	"Iap2_Pkt_GetEAProDataPtr");
	create_insn	(x=0X15C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X15C28);
	op_stkvar	(x,	1);
	create_insn	(0X15C44);
	set_name	(0X15C44,	"Iap2_Pkt_Parse");
	create_insn	(x=0X15C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X15C54);
	op_stkvar	(x,	1);
	create_insn	(x=0X15C58);
	op_stkvar	(x,	1);
	create_insn	(x=0X15C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X15C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X15C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X15C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X15C98);
	op_stkvar	(x,	1);
	create_insn	(x=0X15C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X15CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X15CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X15CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X15CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X15CC8);
	op_stkvar	(x,	1);
	set_cmt	(0X15CD0,	"switch 11 cases ",	0);
	set_cmt	(0X15CD4,	"switch jump",	0);
	set_cmt	(0X15CDC,	"jump table for switch statement",	0);
	create_dword	(x=0X15CDC);
	make_array	(x,	0XB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X15D08,	"jumptable 00015CD4 case 0",	1);
	create_insn	(x=0X15D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D48);
	op_stkvar	(x,	1);
	set_cmt	(0X15D50,	"jumptable 00015CD4 case 1",	1);
	create_insn	(x=0X15D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D94);
	op_stkvar	(x,	1);
	create_insn	(x=0X15D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X15DB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X15DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X15DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X15DCC);
	op_stkvar	(x,	1);
	set_cmt	(0X15DD4,	"jumptable 00015CD4 case 2",	1);
	create_insn	(x=0X15DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X15DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X15DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X15DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X15DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E20);
	op_stkvar	(x,	1);
	set_cmt	(0X15E28,	"jumptable 00015CD4 case 3",	1);
	create_insn	(x=0X15E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E60);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E74);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X15E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X15EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X15EB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X15EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X15ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X15ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X15EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X15EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X15EF4);
	op_stkvar	(x,	1);
	set_cmt	(0X15EFC,	"jumptable 00015CD4 case 4",	1);
	create_insn	(x=0X15EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F04);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F2C);
	op_stkvar	(x,	1);
	set_cmt	(0X15F34,	"jumptable 00015CD4 case 5",	1);
	create_insn	(x=0X15F34);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F44);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F5C);
	op_stkvar	(x,	1);
	set_cmt	(0X15F64,	"s1",	0);
	set_cmt	(0X15F68,	"s2",	0);
	create_insn	(x=0X15F68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X15F6C,	"n",	0);
	create_insn	(x=0X15F80);
	op_stkvar	(x,	1);
	create_insn	(x=0X15F90);
	op_stkvar	(x,	1);
	set_cmt	(0X15FA0,	"jumptable 00015CD4 case 6",	1);
	create_insn	(x=0X15FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X15FA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X15FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X15FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X15FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X15FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X15FC8);
	op_stkvar	(x,	1);
	set_cmt	(0X15FD8,	"jumptable 00015CD4 case 7",	1);
	create_insn	(x=0X15FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X15FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X15FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X15FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X15FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X15FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16000);
	op_stkvar	(x,	1);
	set_cmt	(0X16008,	"s1",	0);
	set_cmt	(0X1600C,	"s2",	0);
	create_insn	(x=0X1600C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X16010,	"n",	0);
	create_insn	(x=0X16024);
	op_stkvar	(x,	1);
	create_insn	(x=0X16034);
	op_stkvar	(x,	1);
	set_cmt	(0X16044,	"jumptable 00015CD4 case 8",	1);
	create_insn	(x=0X16044);
	op_stkvar	(x,	1);
	create_insn	(x=0X1604C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16054);
	op_stkvar	(x,	1);
	create_insn	(x=0X1605C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16060);
	op_stkvar	(x,	1);
	set_cmt	(0X16068,	"pucData",	0);
	set_cmt	(0X1606C,	"ulLen",	0);
	create_insn	(x=0X16078);
	op_stkvar	(x,	1);
	create_insn	(x=0X1607C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16084);
	op_stkvar	(x,	1);
	create_insn	(x=0X16090);
	op_stkvar	(x,	1);
	create_insn	(x=0X160A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X160AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X160BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X160C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X160DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X160E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X160EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X160F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16100);
	op_stkvar	(x,	1);
	create_insn	(x=0X16108);
	op_stkvar	(x,	1);
	set_cmt	(0X16110,	"jumptable 00015CD4 case 9",	1);
	create_insn	(x=0X16110);
	op_stkvar	(x,	1);
	create_insn	(x=0X1611C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16128);
	op_stkvar	(x,	1);
	create_insn	(x=0X16138);
	op_stkvar	(x,	1);
	create_insn	(x=0X1613C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16140);
	op_stkvar	(x,	1);
	create_insn	(x=0X16148);
	op_stkvar	(x,	1);
	create_insn	(x=0X1614C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16150);
	op_stkvar	(x,	1);
	set_cmt	(0X1615C,	"dest",	0);
	create_insn	(x=0X1615C);
	op_stkvar	(x,	1);
	set_cmt	(0X16160,	"src",	0);
	create_insn	(x=0X16160);
	op_stkvar	(x,	1);
	set_cmt	(0X16164,	"n",	0);
	create_insn	(x=0X16164);
	op_stkvar	(x,	1);
	create_insn	(x=0X1616C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16170);
	op_stkvar	(x,	1);
	create_insn	(x=0X16178);
	op_stkvar	(x,	1);
	create_insn	(x=0X1617C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16180);
	op_stkvar	(x,	1);
	create_insn	(x=0X16188);
	op_stkvar	(x,	1);
	set_cmt	(0X16190,	"dest",	0);
	create_insn	(x=0X16190);
	op_stkvar	(x,	1);
	set_cmt	(0X16194,	"src",	0);
	create_insn	(x=0X16194);
	op_stkvar	(x,	1);
	set_cmt	(0X16198,	"n",	0);
	create_insn	(x=0X16198);
	op_stkvar	(x,	1);
	create_insn	(x=0X161A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X161A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X161AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X161B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X161B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X161BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X161C0);
	op_stkvar	(x,	1);
	set_cmt	(0X161D0,	"jumptable 00015CD4 case 10",	1);
	create_insn	(x=0X161D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X161D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X161E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X161E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X161EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X161F8);
	op_stkvar	(x,	1);
	set_cmt	(0X16200,	"pucData",	0);
	set_cmt	(0X16204,	"ulLen",	0);
	create_insn	(x=0X16210);
	op_stkvar	(x,	1);
	create_insn	(x=0X16214);
	op_stkvar	(x,	1);
	create_insn	(x=0X1621C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16228);
	op_stkvar	(x,	1);
	create_insn	(x=0X16234);
	op_stkvar	(x,	1);
	create_insn	(x=0X1623C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16244);
	op_stkvar	(x,	1);
	create_insn	(x=0X16250);
	op_stkvar	(x,	1);
	create_insn	(x=0X16258);
	op_stkvar	(x,	1);
	set_cmt	(0X1625C,	"jumptable 00015CD4 default case",	1);
	create_insn	(x=0X1625C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16260);
	op_stkvar	(x,	1);
	create_insn	(x=0X1626C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1627C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16280);
	op_stkvar	(x,	1);
	create_insn	(x=0X1628C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16294);
	op_stkvar	(x,	1);
	create_insn	(x=0X16298);
	op_stkvar	(x,	1);
	create_insn	(x=0X162A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X162B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X162C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X162CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X162DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X162EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X162FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1630C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1631C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16320);
	op_stkvar	(x,	1);
	create_dword	(x=0X16330);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X16330,	"s2");
	create_dword	(x=0X16334);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X16338);
	set_name	(0X16338,	"Iap2_Ctrl_Session_App_Launch");
	create_insn	(x=0X16344);
	op_stkvar	(x,	1);
	set_cmt	(0X16348,	"ptPkt",	0);
	create_insn	(x=0X1635C);
	op_stkvar	(x,	1);
	set_cmt	(0X16360,	"ptPkt",	0);
	create_insn	(x=0X1636C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16370);
	op_stkvar	(x,	1);
	create_insn	(x=0X16374);
	op_stkvar	(x,	1);
	create_insn	(x=0X1637C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16380);
	op_stkvar	(x,	1);
	create_insn	(x=0X16388);
	op_stkvar	(x,	1);
	create_insn	(x=0X1638C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16398);
	op_stkvar	(x,	1);
	create_insn	(x=0X163A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X163A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X163B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X163B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X163BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X163C4);
	op_hex		(x,	1);
	create_insn	(x=0X163C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X163D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X163D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X163DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X163E0);
	op_hex		(x,	1);
	create_insn	(x=0X163E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X163EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X163F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X163F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X16404);
	op_stkvar	(x,	1);
	create_insn	(x=0X1640C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16410);
	op_stkvar	(x,	1);
	create_insn	(x=0X1641C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16424);
	op_stkvar	(x,	1);
	create_insn	(x=0X16428);
	op_stkvar	(x,	1);
	create_insn	(x=0X16430);
	op_hex		(x,	1);
	create_insn	(x=0X16434);
	op_stkvar	(x,	1);
	create_insn	(x=0X1643C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16444);
	op_stkvar	(x,	1);
	create_insn	(x=0X16448);
	op_stkvar	(x,	1);
	create_insn	(x=0X1644C);
	op_hex		(x,	1);
	create_insn	(x=0X16450);
	op_stkvar	(x,	1);
	create_insn	(x=0X16458);
	op_stkvar	(x,	1);
	create_insn	(x=0X16460);
	op_stkvar	(x,	1);
	create_insn	(x=0X16464);
	op_stkvar	(x,	1);
	create_insn	(x=0X16470);
	op_stkvar	(x,	1);
	create_insn	(x=0X16478);
	op_stkvar	(x,	1);
	create_insn	(x=0X1647C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16488);
	op_stkvar	(x,	1);
	create_insn	(x=0X16490);
	op_stkvar	(x,	1);
	set_cmt	(0X16494,	"dest",	0);
	create_insn	(x=0X16494);
	op_stkvar	(x,	1);
	create_insn	(x=0X16498);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1649C,	"n",	0);
	create_insn	(x=0X164A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X164AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X164B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X164B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X164C4);
	op_stkvar	(x,	1);
	set_cmt	(0X164C8,	"ptPkt",	0);
	create_dword	(x=0X164D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X164DC);
	set_name	(0X164DC,	"Iap2_Ctrl_Session_StartPowerUpdates");
	create_insn	(x=0X164E8);
	op_stkvar	(x,	1);
	set_cmt	(0X164EC,	"ptPkt",	0);
	create_insn	(x=0X16500);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16508);
	op_stkvar	(x,	1);
	set_cmt	(0X1650C,	"ptPkt",	0);
	create_insn	(x=0X16518);
	op_stkvar	(x,	1);
	create_insn	(x=0X1651C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16524);
	op_stkvar	(x,	1);
	create_insn	(x=0X1652C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16530);
	op_stkvar	(x,	1);
	create_insn	(x=0X16538);
	op_hex		(x,	1);
	create_insn	(x=0X1653C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16544);
	op_stkvar	(x,	1);
	create_insn	(x=0X1654C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16550);
	op_stkvar	(x,	1);
	create_insn	(x=0X16554);
	op_hex		(x,	1);
	create_insn	(x=0X16558);
	op_stkvar	(x,	1);
	create_insn	(x=0X16560);
	op_stkvar	(x,	1);
	create_insn	(x=0X16568);
	op_stkvar	(x,	1);
	create_insn	(x=0X1656C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16578);
	op_stkvar	(x,	1);
	create_insn	(x=0X16580);
	op_stkvar	(x,	1);
	create_insn	(x=0X16584);
	op_stkvar	(x,	1);
	create_insn	(x=0X16590);
	op_stkvar	(x,	1);
	create_insn	(x=0X16598);
	op_stkvar	(x,	1);
	create_insn	(x=0X165A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X165A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X165AC);
	op_hex		(x,	1);
	create_insn	(x=0X165B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X165B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X165C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X165C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X165C8);
	op_hex		(x,	1);
	create_insn	(x=0X165CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X165D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X165DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X165E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X165EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X165F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X165F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X16604);
	op_stkvar	(x,	1);
	create_insn	(x=0X1660C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16610);
	op_stkvar	(x,	1);
	create_insn	(x=0X16614);
	op_stkvar	(x,	1);
	create_insn	(x=0X1661C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16620);
	op_stkvar	(x,	1);
	create_insn	(x=0X16624);
	op_stkvar	(x,	1);
	create_insn	(x=0X16628);
	op_stkvar	(x,	1);
	create_insn	(x=0X16634);
	op_stkvar	(x,	1);
	create_insn	(x=0X1663C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16640);
	op_stkvar	(x,	1);
	create_insn	(x=0X1664C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16654);
	op_stkvar	(x,	1);
	create_insn	(x=0X16658);
	op_stkvar	(x,	1);
	create_insn	(x=0X16660);
	op_hex		(x,	1);
	create_insn	(x=0X16664);
	op_stkvar	(x,	1);
	create_insn	(x=0X1666C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16674);
	op_stkvar	(x,	1);
	create_insn	(x=0X16678);
	op_stkvar	(x,	1);
	create_insn	(x=0X1667C);
	op_hex		(x,	1);
	create_insn	(x=0X16680);
	op_stkvar	(x,	1);
	create_insn	(x=0X16688);
	op_stkvar	(x,	1);
	create_insn	(x=0X16690);
	op_stkvar	(x,	1);
	create_insn	(x=0X16694);
	op_stkvar	(x,	1);
	create_insn	(x=0X166A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X166A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X166AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X166B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X166C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X166C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X166C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X166D8);
	op_stkvar	(x,	1);
	set_cmt	(0X166DC,	"ptPkt",	0);
	create_dword	(x=0X166EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X166F0);
	set_name	(0X166F0,	"Iap2_Ctrl_Session_PowerSourceUpdate");
	create_insn	(x=0X166FC);
	op_stkvar	(x,	1);
	set_cmt	(0X16700,	"ptPkt",	0);
	create_insn	(x=0X16714);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1671C);
	op_stkvar	(x,	1);
	set_cmt	(0X16720,	"ptPkt",	0);
	create_insn	(x=0X1672C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16730);
	op_stkvar	(x,	1);
	create_insn	(x=0X16738);
	op_stkvar	(x,	1);
	create_insn	(x=0X16740);
	op_stkvar	(x,	1);
	create_insn	(x=0X16744);
	op_stkvar	(x,	1);
	create_insn	(x=0X1674C);
	op_hex		(x,	1);
	create_insn	(x=0X16750);
	op_stkvar	(x,	1);
	create_insn	(x=0X16758);
	op_stkvar	(x,	1);
	create_insn	(x=0X16760);
	op_stkvar	(x,	1);
	create_insn	(x=0X16764);
	op_stkvar	(x,	1);
	create_insn	(x=0X16768);
	op_hex		(x,	1);
	create_insn	(x=0X1676C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16774);
	op_stkvar	(x,	1);
	create_insn	(x=0X1677C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16780);
	op_stkvar	(x,	1);
	create_insn	(x=0X1678C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16794);
	op_stkvar	(x,	1);
	create_insn	(x=0X16798);
	op_stkvar	(x,	1);
	create_insn	(x=0X167A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X167AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X167B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X167BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X167C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X167C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X167D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X167DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X167E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X167E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X167F0);
	op_hex		(x,	1);
	create_insn	(x=0X167F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X167FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16804);
	op_stkvar	(x,	1);
	create_insn	(x=0X16808);
	op_stkvar	(x,	1);
	create_insn	(x=0X1680C);
	op_hex		(x,	1);
	create_insn	(x=0X16810);
	op_stkvar	(x,	1);
	create_insn	(x=0X16818);
	op_stkvar	(x,	1);
	create_insn	(x=0X16820);
	op_stkvar	(x,	1);
	create_insn	(x=0X16824);
	op_stkvar	(x,	1);
	create_insn	(x=0X16830);
	op_stkvar	(x,	1);
	create_insn	(x=0X16838);
	op_stkvar	(x,	1);
	create_insn	(x=0X1683C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16848);
	op_stkvar	(x,	1);
	create_insn	(x=0X16850);
	op_stkvar	(x,	1);
	create_insn	(x=0X16854);
	op_stkvar	(x,	1);
	create_insn	(x=0X16860);
	op_stkvar	(x,	1);
	create_insn	(x=0X16868);
	op_stkvar	(x,	1);
	create_insn	(x=0X1686C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16870);
	op_stkvar	(x,	1);
	create_insn	(x=0X16878);
	op_stkvar	(x,	1);
	create_insn	(x=0X1687C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16880);
	op_stkvar	(x,	1);
	create_insn	(x=0X16884);
	op_stkvar	(x,	1);
	create_insn	(x=0X16890);
	op_stkvar	(x,	1);
	create_insn	(x=0X16898);
	op_stkvar	(x,	1);
	create_insn	(x=0X1689C);
	op_stkvar	(x,	1);
	create_insn	(x=0X168A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X168B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X168B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X168BC);
	op_hex		(x,	1);
	create_insn	(x=0X168C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X168C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X168D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X168D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X168D8);
	op_hex		(x,	1);
	create_insn	(x=0X168DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X168E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X168EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X168F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X168FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16904);
	op_stkvar	(x,	1);
	create_insn	(x=0X16908);
	op_stkvar	(x,	1);
	create_insn	(x=0X16914);
	op_stkvar	(x,	1);
	create_insn	(x=0X1691C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16920);
	op_stkvar	(x,	1);
	create_insn	(x=0X16924);
	op_stkvar	(x,	1);
	create_insn	(x=0X16934);
	op_stkvar	(x,	1);
	set_cmt	(0X16938,	"ptPkt",	0);
	create_dword	(x=0X16948);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1694C);
	set_name	(0X1694C,	"Iap2_Ctrl_Session_Cmd_ReqAuthCert");
	create_insn	(x=0X16958);
	op_stkvar	(x,	1);
	set_cmt	(0X1695C,	"ptPkt",	0);
	create_insn	(x=0X16970);
	op_stkvar	(x,	1);
	set_cmt	(0X16974,	"ptPkt",	0);
	create_insn	(x=0X16980);
	op_stkvar	(x,	1);
	create_insn	(x=0X16984);
	op_stkvar	(x,	1);
	create_insn	(x=0X16988);
	op_stkvar	(x,	1);
	create_insn	(x=0X1698C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16994);
	op_stkvar	(x,	1);
	set_cmt	(0X16998,	"pucData",	0);
	set_cmt	(0X1699C,	"pulRealLen",	0);
	set_cmt	(0X169A0,	"ulMaxLen",	0);
	create_insn	(x=0X169B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X169BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X169C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X169C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X169D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X169D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X169E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X169E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X169EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X169F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A0C);
	op_hex		(x,	1);
	create_insn	(x=0X16A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A18);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A20);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A28);
	op_hex		(x,	1);
	create_insn	(x=0X16A2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A34);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A40);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A58);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A70);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A78);
	op_hex		(x,	1);
	create_insn	(x=0X16A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A84);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A94);
	op_hex		(x,	1);
	create_insn	(x=0X16A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X16ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16AF0);
	op_stkvar	(x,	1);
	set_cmt	(0X16AF4,	"ptPkt",	0);
	create_dword	(0X16B04);
	set_name	(0X16B04,	"ulMaxLen");
	create_insn	(0X16B08);
	set_name	(0X16B08,	"Iap2_Ctrl_Session_Cmd_ReqAuthChaRes");
	create_insn	(x=0X16B14);
	op_stkvar	(x,	1);
	set_cmt	(0X16B18,	"ptPkt",	0);
	create_insn	(x=0X16B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X16B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X16B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X16B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X16B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X16B58);
	op_stkvar	(x,	1);
	create_insn	(x=0X16B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X16B64);
	op_stkvar	(x,	1);
	set_cmt	(0X16B68,	"ptPkt",	0);
	create_insn	(x=0X16B7C);
	op_stkvar	(x,	1);
	set_cmt	(0X16B80,	"ptPkt",	0);
	create_insn	(x=0X16B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X16B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X16B98);
	op_stkvar	(x,	1);
	create_insn	(x=0X16BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16BA8);
	op_stkvar	(x,	1);
	set_cmt	(0X16BB0,	"ulResponseMaxLen",	0);
	create_insn	(x=0X16BB0);
	op_stkvar	(x,	1);
	set_cmt	(0X16BB4,	"pucChallengeData",	0);
	set_cmt	(0X16BB8,	"ulChallengeLen",	0);
	create_insn	(x=0X16BB8);
	op_stkvar	(x,	1);
	set_cmt	(0X16BBC,	"pucResponseData",	0);
	set_cmt	(0X16BC0,	"pulResponseRealLen",	0);
	create_insn	(x=0X16BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X16BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X16BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C2C);
	op_hex		(x,	1);
	create_insn	(x=0X16C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C40);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C48);
	op_hex		(x,	1);
	create_insn	(x=0X16C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C54);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X16C98);
	op_hex		(x,	1);
	create_insn	(x=0X16C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16CB4);
	op_hex		(x,	1);
	create_insn	(x=0X16CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X16CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X16CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X16CE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16CF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X16CFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D10);
	op_stkvar	(x,	1);
	set_cmt	(0X16D14,	"ptPkt",	0);
	create_dword	(0X16D24);
	set_name	(0X16D24,	"ulResponseMaxLen");
	create_insn	(0X16D28);
	set_name	(0X16D28,	"Iap2_Ctrl_Session_Cmd_StartIdent");
	create_insn	(x=0X16D34);
	op_stkvar	(x,	1);
	set_cmt	(0X16D38,	"ptPkt",	0);
	create_insn	(x=0X16D4C);
	op_stkvar	(x,	1);
	set_cmt	(0X16D50,	"ptPkt",	0);
	create_insn	(x=0X16D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D7C);
	op_hex		(x,	1);
	create_insn	(x=0X16D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D94);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D98);
	op_hex		(x,	1);
	create_insn	(x=0X16D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X16DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16DDC);
	op_stkvar	(x,	1);
	set_cmt	(0X16DE0,	"dest",	0);
	create_insn	(x=0X16DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16DE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X16DE8,	"n",	0);
	create_insn	(x=0X16DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E0C);
	op_hex		(x,	1);
	create_insn	(x=0X16E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E24);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E28);
	op_hex		(x,	1);
	create_insn	(x=0X16E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E64);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E6C);
	op_stkvar	(x,	1);
	set_cmt	(0X16E70,	"dest",	0);
	create_insn	(x=0X16E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X16E78,	"n",	0);
	create_insn	(x=0X16E80);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E90);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E9C);
	op_hex		(x,	1);
	create_insn	(x=0X16EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X16EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16EB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16EB8);
	op_hex		(x,	1);
	create_insn	(x=0X16EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X16EF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16EFC);
	op_stkvar	(x,	1);
	set_cmt	(0X16F00,	"dest",	0);
	create_insn	(x=0X16F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X16F04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X16F08,	"n",	0);
	create_insn	(x=0X16F10);
	op_stkvar	(x,	1);
	create_insn	(x=0X16F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X16F1C);
	op_stkvar	(x,	1);
	set_cmt	(0X16F20,	"pVersion",	0);
	create_insn	(x=0X16F34);
	op_stkvar	(x,	1);
	create_insn	(x=0X16F44);
	op_stkvar	(x,	1);
	set_cmt	(0X16F48,	"s",	0);
	set_cmt	(0X16F4C,	"c",	0);
	set_cmt	(0X16F50,	"n",	0);
	create_insn	(x=0X16F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X16F60);
	op_stkvar	(x,	1);
	set_cmt	(0X16F64,	"s",	0);
	create_insn	(x=0X16F74);
	op_stkvar	(x,	1);
	create_insn	(x=0X16F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X16F80);
	op_stkvar	(x,	1);
	create_insn	(x=0X16F84);
	op_stkvar	(x,	1);
	create_insn	(x=0X16F8C);
	op_hex		(x,	1);
	create_insn	(x=0X16F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X16F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X16FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16FA8);
	op_hex		(x,	1);
	create_insn	(x=0X16FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16FCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X16FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X16FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X16FEC);
	op_stkvar	(x,	1);
	set_cmt	(0X16FF0,	"n",	0);
	create_insn	(x=0X16FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X16FF4);
	op_stkvar	(x,	1);
	set_cmt	(0X16FF8,	"dest",	0);
	create_insn	(x=0X16FF8);
	op_stkvar	(x,	1);
	set_cmt	(0X16FFC,	"src",	0);
	create_insn	(x=0X17004);
	op_stkvar	(x,	1);
	create_insn	(x=0X17008);
	op_stkvar	(x,	1);
	create_insn	(x=0X17010);
	op_stkvar	(x,	1);
	create_insn	(x=0X17014);
	op_stkvar	(x,	1);
	set_cmt	(0X17018,	"pulVersion",	0);
	create_insn	(x=0X17030);
	op_stkvar	(x,	1);
	create_insn	(x=0X17034);
	op_stkvar	(x,	1);
	create_insn	(x=0X17038);
	op_stkvar	(x,	1);
	create_insn	(x=0X1703C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1704C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1705C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1706C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17074);
	op_stkvar	(x,	1);
	create_insn	(x=0X17078);
	op_stkvar	(x,	1);
	create_insn	(x=0X1707C);
	op_stkvar	(x,	1);
	set_cmt	(0X17080,	"s",	0);
	create_insn	(x=0X17084);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17094);
	op_stkvar	(x,	1);
	set_cmt	(0X17098,	"s",	0);
	create_insn	(x=0X170A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X170AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X170B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X170B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X170C0);
	op_hex		(x,	1);
	create_insn	(x=0X170C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X170CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X170D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X170D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X170DC);
	op_hex		(x,	1);
	create_insn	(x=0X170E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X170E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X170F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X170F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17100);
	op_stkvar	(x,	1);
	create_insn	(x=0X17108);
	op_stkvar	(x,	1);
	create_insn	(x=0X1710C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17118);
	op_stkvar	(x,	1);
	create_insn	(x=0X17120);
	op_stkvar	(x,	1);
	set_cmt	(0X17124,	"n",	0);
	create_insn	(x=0X17124);
	op_stkvar	(x,	1);
	create_insn	(x=0X17128);
	op_stkvar	(x,	1);
	set_cmt	(0X1712C,	"dest",	0);
	create_insn	(x=0X1712C);
	op_stkvar	(x,	1);
	set_cmt	(0X17130,	"src",	0);
	create_insn	(x=0X17138);
	op_stkvar	(x,	1);
	create_insn	(x=0X1713C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17144);
	op_stkvar	(x,	1);
	create_insn	(x=0X1714C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17150);
	op_stkvar	(x,	1);
	create_insn	(x=0X17158);
	op_hex		(x,	1);
	create_insn	(x=0X1715C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17164);
	op_stkvar	(x,	1);
	create_insn	(x=0X1716C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17170);
	op_stkvar	(x,	1);
	create_insn	(x=0X17174);
	op_hex		(x,	1);
	create_insn	(x=0X17178);
	op_stkvar	(x,	1);
	create_insn	(x=0X17180);
	op_stkvar	(x,	1);
	create_insn	(x=0X17188);
	op_stkvar	(x,	1);
	create_insn	(x=0X1718C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17198);
	op_stkvar	(x,	1);
	create_insn	(x=0X171A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X171A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X171B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X171B8);
	op_stkvar	(x,	1);
	set_cmt	(0X171BC,	"dest",	0);
	create_insn	(x=0X171BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X171C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X171C4,	"n",	0);
	create_insn	(x=0X171CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X171D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X171DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X171E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X171E8);
	op_hex		(x,	1);
	create_insn	(x=0X171EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X171F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X171FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17200);
	op_stkvar	(x,	1);
	create_insn	(x=0X17204);
	op_hex		(x,	1);
	create_insn	(x=0X17208);
	op_stkvar	(x,	1);
	create_insn	(x=0X17210);
	op_stkvar	(x,	1);
	create_insn	(x=0X17218);
	op_stkvar	(x,	1);
	create_insn	(x=0X1721C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17228);
	op_stkvar	(x,	1);
	create_insn	(x=0X17230);
	op_stkvar	(x,	1);
	create_insn	(x=0X17234);
	op_stkvar	(x,	1);
	create_insn	(x=0X17240);
	op_stkvar	(x,	1);
	create_insn	(x=0X17248);
	op_stkvar	(x,	1);
	create_insn	(x=0X1724C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17258);
	op_stkvar	(x,	1);
	create_insn	(x=0X17260);
	op_stkvar	(x,	1);
	create_insn	(x=0X17264);
	op_stkvar	(x,	1);
	create_insn	(x=0X17270);
	op_stkvar	(x,	1);
	create_insn	(x=0X17278);
	op_stkvar	(x,	1);
	create_insn	(x=0X1727C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17288);
	op_stkvar	(x,	1);
	create_insn	(x=0X17290);
	op_stkvar	(x,	1);
	create_insn	(x=0X17294);
	op_stkvar	(x,	1);
	create_insn	(x=0X172A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X172A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X172AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X172B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X172C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X172C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X172D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X172D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X172DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X172E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X172F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X172F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17300);
	op_stkvar	(x,	1);
	create_insn	(x=0X17308);
	op_stkvar	(x,	1);
	create_insn	(x=0X17310);
	op_stkvar	(x,	1);
	create_insn	(x=0X17314);
	op_stkvar	(x,	1);
	create_insn	(x=0X1731C);
	op_hex		(x,	1);
	create_insn	(x=0X17320);
	op_stkvar	(x,	1);
	create_insn	(x=0X17328);
	op_stkvar	(x,	1);
	create_insn	(x=0X17330);
	op_stkvar	(x,	1);
	create_insn	(x=0X17334);
	op_stkvar	(x,	1);
	create_insn	(x=0X17338);
	op_hex		(x,	1);
	create_insn	(x=0X1733C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17344);
	op_stkvar	(x,	1);
	create_insn	(x=0X1734C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17350);
	op_stkvar	(x,	1);
	create_insn	(x=0X1735C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17364);
	op_stkvar	(x,	1);
	create_insn	(x=0X17368);
	op_stkvar	(x,	1);
	create_insn	(x=0X17374);
	op_stkvar	(x,	1);
	create_insn	(x=0X1737C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17380);
	op_stkvar	(x,	1);
	create_insn	(x=0X1738C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17394);
	op_stkvar	(x,	1);
	create_insn	(x=0X17398);
	op_stkvar	(x,	1);
	create_insn	(x=0X173A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X173AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X173B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X173BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X173C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X173C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X173D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X173DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X173E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X173EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X173F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X173F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17404);
	op_stkvar	(x,	1);
	create_insn	(x=0X1740C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17414);
	op_stkvar	(x,	1);
	create_insn	(x=0X17418);
	op_stkvar	(x,	1);
	create_insn	(x=0X17420);
	op_hex		(x,	1);
	create_insn	(x=0X17424);
	op_stkvar	(x,	1);
	create_insn	(x=0X1742C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17434);
	op_stkvar	(x,	1);
	create_insn	(x=0X17438);
	op_stkvar	(x,	1);
	create_insn	(x=0X1743C);
	op_hex		(x,	1);
	create_insn	(x=0X17440);
	op_stkvar	(x,	1);
	create_insn	(x=0X17448);
	op_stkvar	(x,	1);
	create_insn	(x=0X17450);
	op_stkvar	(x,	1);
	create_insn	(x=0X17454);
	op_stkvar	(x,	1);
	create_insn	(x=0X17460);
	op_stkvar	(x,	1);
	create_insn	(x=0X17468);
	op_stkvar	(x,	1);
	create_insn	(x=0X1746C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17478);
	op_stkvar	(x,	1);
	create_insn	(x=0X17480);
	op_stkvar	(x,	1);
	create_insn	(x=0X17484);
	op_stkvar	(x,	1);
	create_insn	(x=0X17490);
	op_stkvar	(x,	1);
	create_insn	(x=0X17498);
	op_stkvar	(x,	1);
	create_insn	(x=0X174A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X174A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X174AC);
	op_hex		(x,	1);
	create_insn	(x=0X174B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X174B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X174C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X174C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X174C8);
	op_hex		(x,	1);
	create_insn	(x=0X174CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X174D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X174DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X174E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X174EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X174F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X174F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17504);
	op_stkvar	(x,	1);
	create_insn	(x=0X1750C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17510);
	op_stkvar	(x,	1);
	create_insn	(x=0X1751C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17524);
	op_stkvar	(x,	1);
	create_insn	(x=0X17528);
	op_stkvar	(x,	1);
	create_insn	(x=0X17534);
	op_stkvar	(x,	1);
	create_insn	(x=0X1753C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17540);
	op_stkvar	(x,	1);
	create_insn	(x=0X17548);
	op_stkvar	(x,	1);
	create_insn	(x=0X17550);
	op_stkvar	(x,	1);
	create_insn	(x=0X17554);
	op_stkvar	(x,	1);
	create_insn	(x=0X1755C);
	op_hex		(x,	1);
	create_insn	(x=0X17560);
	op_stkvar	(x,	1);
	create_insn	(x=0X17568);
	op_stkvar	(x,	1);
	create_insn	(x=0X17570);
	op_stkvar	(x,	1);
	create_insn	(x=0X17574);
	op_stkvar	(x,	1);
	create_insn	(x=0X17578);
	op_hex		(x,	1);
	create_insn	(x=0X1757C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17584);
	op_stkvar	(x,	1);
	create_insn	(x=0X1758C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17590);
	op_stkvar	(x,	1);
	create_insn	(x=0X1759C);
	op_stkvar	(x,	1);
	create_insn	(x=0X175A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X175A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X175B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X175BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X175C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X175CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X175D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X175DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X175E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X175E8);
	op_hex		(x,	1);
	create_insn	(x=0X175EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X175F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X175FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17600);
	op_stkvar	(x,	1);
	create_insn	(x=0X17604);
	op_hex		(x,	1);
	create_insn	(x=0X17608);
	op_stkvar	(x,	1);
	create_insn	(x=0X17610);
	op_stkvar	(x,	1);
	create_insn	(x=0X17618);
	op_stkvar	(x,	1);
	create_insn	(x=0X1761C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17628);
	op_stkvar	(x,	1);
	create_insn	(x=0X17630);
	op_stkvar	(x,	1);
	create_insn	(x=0X17634);
	op_stkvar	(x,	1);
	create_insn	(x=0X17640);
	op_stkvar	(x,	1);
	create_insn	(x=0X17648);
	op_stkvar	(x,	1);
	set_cmt	(0X1764C,	"dest",	0);
	create_insn	(x=0X1764C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17650);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X17654,	"n",	0);
	create_insn	(x=0X1765C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17664);
	op_stkvar	(x,	1);
	create_insn	(x=0X1766C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17670);
	op_stkvar	(x,	1);
	create_insn	(x=0X17678);
	op_hex		(x,	1);
	create_insn	(x=0X1767C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17684);
	op_stkvar	(x,	1);
	create_insn	(x=0X1768C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17690);
	op_stkvar	(x,	1);
	create_insn	(x=0X17694);
	op_hex		(x,	1);
	create_insn	(x=0X17698);
	op_stkvar	(x,	1);
	create_insn	(x=0X176A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X176A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X176AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X176B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X176C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X176C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X176D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X176D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X176DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X176E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X176F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X176F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X176F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17700);
	op_stkvar	(x,	1);
	create_insn	(x=0X17704);
	op_stkvar	(x,	1);
	create_insn	(x=0X1770C);
	op_hex		(x,	1);
	create_insn	(x=0X17710);
	op_stkvar	(x,	1);
	create_insn	(x=0X17718);
	op_stkvar	(x,	1);
	create_insn	(x=0X17720);
	op_stkvar	(x,	1);
	create_insn	(x=0X17724);
	op_stkvar	(x,	1);
	create_insn	(x=0X17728);
	op_hex		(x,	1);
	create_insn	(x=0X1772C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17734);
	op_stkvar	(x,	1);
	create_insn	(x=0X1773C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17740);
	op_stkvar	(x,	1);
	create_insn	(x=0X1774C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17754);
	op_stkvar	(x,	1);
	create_insn	(x=0X17758);
	op_stkvar	(x,	1);
	create_insn	(x=0X17764);
	op_stkvar	(x,	1);
	create_insn	(x=0X1776C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17770);
	op_stkvar	(x,	1);
	create_insn	(x=0X17778);
	op_stkvar	(x,	1);
	create_insn	(x=0X17780);
	op_stkvar	(x,	1);
	create_insn	(x=0X17784);
	op_stkvar	(x,	1);
	create_insn	(x=0X1778C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17794);
	op_stkvar	(x,	1);
	create_insn	(x=0X17798);
	op_stkvar	(x,	1);
	create_insn	(x=0X177A0);
	op_hex		(x,	1);
	create_insn	(x=0X177A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X177AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X177B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X177B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X177BC);
	op_hex		(x,	1);
	create_insn	(x=0X177C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X177C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X177D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X177D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X177E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X177E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X177EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X177F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17800);
	op_stkvar	(x,	1);
	create_insn	(x=0X17804);
	op_stkvar	(x,	1);
	create_insn	(x=0X17810);
	op_stkvar	(x,	1);
	create_insn	(x=0X17818);
	op_stkvar	(x,	1);
	create_insn	(x=0X17820);
	op_stkvar	(x,	1);
	create_insn	(x=0X17824);
	op_stkvar	(x,	1);
	create_insn	(x=0X1782C);
	op_hex		(x,	1);
	create_insn	(x=0X17830);
	op_stkvar	(x,	1);
	create_insn	(x=0X17838);
	op_stkvar	(x,	1);
	create_insn	(x=0X17840);
	op_stkvar	(x,	1);
	create_insn	(x=0X17844);
	op_stkvar	(x,	1);
	create_insn	(x=0X17848);
	op_hex		(x,	1);
	create_insn	(x=0X1784C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17854);
	op_stkvar	(x,	1);
	create_insn	(x=0X1785C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17860);
	op_stkvar	(x,	1);
	create_insn	(x=0X1786C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17874);
	op_stkvar	(x,	1);
	create_insn	(x=0X17878);
	op_stkvar	(x,	1);
	create_insn	(x=0X17884);
	op_stkvar	(x,	1);
	create_insn	(x=0X1788C);
	op_stkvar	(x,	1);
	set_cmt	(0X17890,	"dest",	0);
	create_insn	(x=0X17890);
	op_stkvar	(x,	1);
	create_insn	(x=0X17894);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X17898,	"n",	0);
	create_insn	(x=0X178A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X178A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X178B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X178B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X178BC);
	op_hex		(x,	1);
	create_insn	(x=0X178C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X178C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X178D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X178D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X178D8);
	op_hex		(x,	1);
	create_insn	(x=0X178DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X178E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X178EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X178F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X178FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17904);
	op_stkvar	(x,	1);
	create_insn	(x=0X17908);
	op_stkvar	(x,	1);
	create_insn	(x=0X17914);
	op_stkvar	(x,	1);
	create_insn	(x=0X1791C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17920);
	op_stkvar	(x,	1);
	create_insn	(x=0X1792C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17934);
	op_stkvar	(x,	1);
	create_insn	(x=0X17938);
	op_stkvar	(x,	1);
	create_insn	(x=0X1793C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17944);
	op_stkvar	(x,	1);
	create_insn	(x=0X17948);
	op_stkvar	(x,	1);
	create_insn	(x=0X17950);
	op_hex		(x,	1);
	create_insn	(x=0X17954);
	op_stkvar	(x,	1);
	create_insn	(x=0X1795C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17964);
	op_stkvar	(x,	1);
	create_insn	(x=0X17968);
	op_stkvar	(x,	1);
	create_insn	(x=0X1796C);
	op_hex		(x,	1);
	create_insn	(x=0X17970);
	op_stkvar	(x,	1);
	create_insn	(x=0X17978);
	op_stkvar	(x,	1);
	create_insn	(x=0X17980);
	op_stkvar	(x,	1);
	create_insn	(x=0X17984);
	op_stkvar	(x,	1);
	create_insn	(x=0X17990);
	op_stkvar	(x,	1);
	create_insn	(x=0X17998);
	op_stkvar	(x,	1);
	create_insn	(x=0X1799C);
	op_stkvar	(x,	1);
	create_insn	(x=0X179A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X179B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X179B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X179BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X179C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X179CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X179D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X179D8);
	op_hex		(x,	1);
	create_insn	(x=0X179DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X179E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X179EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X179F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X179F4);
	op_hex		(x,	1);
	create_insn	(x=0X179F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A18);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A20);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A38);
	op_stkvar	(x,	1);
	set_cmt	(0X17A3C,	"dest",	0);
	create_insn	(x=0X17A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X17A44,	"n",	0);
	create_insn	(x=0X17A4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A68);
	op_hex		(x,	1);
	create_insn	(x=0X17A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A80);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A84);
	op_hex		(x,	1);
	create_insn	(x=0X17A88);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AC8);
	op_stkvar	(x,	1);
	set_cmt	(0X17ACC,	"dest",	0);
	create_insn	(x=0X17ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X17AD4,	"n",	0);
	create_insn	(x=0X17ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AF8);
	op_hex		(x,	1);
	create_insn	(x=0X17AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B14);
	op_hex		(x,	1);
	create_insn	(x=0X17B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B20);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B58);
	op_stkvar	(x,	1);
	set_cmt	(0X17B5C,	"dest",	0);
	create_insn	(x=0X17B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X17B64,	"n",	0);
	create_insn	(x=0X17B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B88);
	op_hex		(x,	1);
	create_insn	(x=0X17B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BA4);
	op_hex		(x,	1);
	create_insn	(x=0X17BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BE8);
	op_stkvar	(x,	1);
	set_cmt	(0X17BEC,	"dest",	0);
	create_insn	(x=0X17BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X17BF4,	"n",	0);
	create_insn	(x=0X17BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C18);
	op_hex		(x,	1);
	create_insn	(x=0X17C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C30);
	op_stkvar	(x,	1);
	create_dword	(x=0X17C38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X17C3C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X17C40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X17C44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X17C48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X17C4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X17C50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X17C54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X17C58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X17C5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X17C60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X17C64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X17C68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X17C6C);
	op_hex		(x,	1);
	create_insn	(x=0X17C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C98);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CB0);
	op_stkvar	(x,	1);
	set_cmt	(0X17CB4,	"dest",	0);
	create_insn	(x=0X17CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X17CBC,	"n",	0);
	create_insn	(x=0X17CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CE0);
	op_hex		(x,	1);
	create_insn	(x=0X17CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17CFC);
	op_hex		(x,	1);
	create_insn	(x=0X17D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D40);
	op_stkvar	(x,	1);
	set_cmt	(0X17D44,	"dest",	0);
	create_insn	(x=0X17D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X17D4C,	"n",	0);
	create_insn	(x=0X17D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D7C);
	op_hex		(x,	1);
	create_insn	(x=0X17D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D94);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D98);
	op_hex		(x,	1);
	create_insn	(x=0X17D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E20);
	op_hex		(x,	1);
	create_insn	(x=0X17E24);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E3C);
	op_hex		(x,	1);
	create_insn	(x=0X17E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E60);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E78);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E80);
	op_stkvar	(x,	1);
	set_cmt	(0X17E84,	"dest",	0);
	create_insn	(x=0X17E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X17E8C,	"n",	0);
	create_insn	(x=0X17E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EB0);
	op_hex		(x,	1);
	create_insn	(x=0X17EB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17ECC);
	op_hex		(x,	1);
	create_insn	(x=0X17ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X17ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F08);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F10);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F2C);
	op_hex		(x,	1);
	create_insn	(x=0X17F30);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F40);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F44);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F48);
	op_hex		(x,	1);
	create_insn	(x=0X17F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F74);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F84);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17FF4);
	op_hex		(x,	1);
	create_insn	(x=0X17FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X18000);
	op_stkvar	(x,	1);
	create_insn	(x=0X18008);
	op_stkvar	(x,	1);
	create_insn	(x=0X1800C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18010);
	op_hex		(x,	1);
	create_insn	(x=0X18014);
	op_stkvar	(x,	1);
	create_insn	(x=0X1801C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18024);
	op_stkvar	(x,	1);
	create_insn	(x=0X18028);
	op_stkvar	(x,	1);
	create_insn	(x=0X18034);
	op_stkvar	(x,	1);
	create_insn	(x=0X1803C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18040);
	op_stkvar	(x,	1);
	create_insn	(x=0X1804C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18054);
	op_stkvar	(x,	1);
	create_insn	(x=0X18058);
	op_stkvar	(x,	1);
	create_insn	(x=0X1805C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1806C);
	op_stkvar	(x,	1);
	set_cmt	(0X18070,	"ptPkt",	0);
	create_insn	(0X18080);
	set_name	(0X18080,	"Iap2_Ctrl_Session_Cmd_StartEAProSession");
	create_insn	(x=0X1808C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18090);
	op_stkvar	(x,	1);
	set_cmt	(0X18094,	"ptPkt",	0);
	create_insn	(x=0X18094);
	op_stkvar	(x,	1);
	create_insn	(x=0X180A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X180A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X180B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X180C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X180C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X180D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X180D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X180E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X180E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X180F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X180F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X18100);
	op_stkvar	(x,	1);
	create_insn	(x=0X18108);
	op_stkvar	(x,	1);
	create_insn	(x=0X1810C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18114);
	op_stkvar	(x,	1);
	create_insn	(x=0X18118);
	op_stkvar	(x,	1);
	create_insn	(x=0X18124);
	op_stkvar	(x,	1);
	create_insn	(x=0X18128);
	op_stkvar	(x,	1);
	create_insn	(x=0X18130);
	op_stkvar	(x,	1);
	create_insn	(x=0X18134);
	op_stkvar	(x,	1);
	create_insn	(x=0X18140);
	op_stkvar	(x,	1);
	create_insn	(x=0X18148);
	op_stkvar	(x,	1);
	create_insn	(x=0X1814C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18154);
	op_stkvar	(x,	1);
	create_insn	(x=0X18158);
	op_stkvar	(x,	1);
	create_insn	(x=0X18164);
	op_stkvar	(x,	1);
	create_insn	(x=0X18170);
	op_stkvar	(x,	1);
	create_insn	(x=0X18174);
	op_stkvar	(x,	1);
	create_insn	(x=0X18184);
	op_stkvar	(x,	1);
	create_insn	(x=0X18188);
	op_stkvar	(x,	1);
	create_insn	(x=0X18190);
	op_stkvar	(x,	1);
	create_insn	(x=0X18194);
	op_stkvar	(x,	1);
	create_insn	(x=0X1819C);
	op_stkvar	(x,	1);
	create_insn	(x=0X181A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X181B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X181BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X181C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X181D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X181D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X181E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X181E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X181F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X181F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X18200);
	op_stkvar	(x,	1);
	create_insn	(x=0X18208);
	op_stkvar	(x,	1);
	create_insn	(x=0X1820C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18214);
	op_stkvar	(x,	1);
	create_insn	(x=0X1821C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18224);
	op_stkvar	(x,	1);
	create_insn	(x=0X1822C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18230);
	op_stkvar	(x,	1);
	create_insn	(x=0X18238);
	op_stkvar	(x,	1);
	create_insn	(x=0X18244);
	op_stkvar	(x,	1);
	create_insn	(x=0X18250);
	op_stkvar	(x,	1);
	create_insn	(x=0X1825C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18268);
	op_stkvar	(x,	1);
	create_insn	(x=0X18274);
	op_stkvar	(x,	1);
	set_cmt	(0X1828C,	"mutex",	0);
	create_insn	(x=0X18294);
	op_stkvar	(x,	1);
	create_insn	(x=0X182A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X182A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X182AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X182D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X182E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X182E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X182E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1831C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18328);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1832C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18334);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18338);
	op_stkvar	(x,	1);
	create_insn	(x=0X1833C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18340);
	op_stkvar	(x,	1);
	create_insn	(x=0X18348);
	op_stkvar	(x,	1);
	create_insn	(x=0X18354);
	op_stkvar	(x,	1);
	set_cmt	(0X1836C,	"mutex",	0);
	create_dword	(x=0X1837C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X18380);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X18384);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X18388);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1838C);
	set_name	(0X1838C,	"Iap2_Ctrl_Session_Cmd_StopEAProSession");
	create_insn	(x=0X18398);
	op_stkvar	(x,	1);
	create_insn	(x=0X1839C);
	op_stkvar	(x,	1);
	set_cmt	(0X183A0,	"ptPkt",	0);
	create_insn	(x=0X183A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X183B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X183B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X183C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X183CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X183D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X183DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X183E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X183EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X183F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X183F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X18404);
	op_stkvar	(x,	1);
	create_insn	(x=0X1840C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18410);
	op_stkvar	(x,	1);
	create_insn	(x=0X18418);
	op_stkvar	(x,	1);
	create_insn	(x=0X1841C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18428);
	op_stkvar	(x,	1);
	create_insn	(x=0X1842C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18434);
	op_stkvar	(x,	1);
	create_insn	(x=0X18438);
	op_stkvar	(x,	1);
	create_insn	(x=0X18444);
	op_stkvar	(x,	1);
	create_insn	(x=0X1844C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18450);
	op_stkvar	(x,	1);
	create_insn	(x=0X18458);
	op_stkvar	(x,	1);
	create_insn	(x=0X1845C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18468);
	op_stkvar	(x,	1);
	create_insn	(x=0X18474);
	op_stkvar	(x,	1);
	create_insn	(x=0X1847C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1848C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18490);
	op_stkvar	(x,	1);
	create_insn	(x=0X1849C);
	op_stkvar	(x,	1);
	create_insn	(x=0X184A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X184A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X184AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X184B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X184C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X184C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X184CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X184D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X184DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X184E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X184E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X184F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X184FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1850C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18514);
	op_stkvar	(x,	1);
	create_insn	(x=0X18520);
	op_stkvar	(x,	1);
	set_cmt	(0X18538,	"mutex",	0);
	create_insn	(x=0X18540);
	op_stkvar	(x,	1);
	create_insn	(x=0X18548);
	op_stkvar	(x,	1);
	create_insn	(x=0X1854C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18558);
	op_stkvar	(x,	1);
	create_insn	(x=0X1856C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18574);
	op_stkvar	(x,	1);
	create_insn	(x=0X18578);
	op_stkvar	(x,	1);
	create_insn	(x=0X1857C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X185AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X185B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X185BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X185C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X185F8);
	op_stkvar	(x,	1);
	set_cmt	(0X18604,	"mutex",	0);
	create_insn	(x=0X1860C);
	op_stkvar	(x,	1);
	set_cmt	(0X18614,	"pQueue",	0);
	set_cmt	(0X18618,	"pData",	0);
	create_insn	(x=0X18618);
	op_stkvar	(x,	1);
	create_insn	(x=0X18620);
	op_stkvar	(x,	1);
	set_cmt	(0X1862C,	"mutex",	0);
	create_insn	(x=0X18634);
	op_stkvar	(x,	1);
	create_insn	(x=0X18660);
	op_stkvar	(x,	1);
	set_cmt	(0X1866C,	"pQueue",	0);
	create_insn	(x=0X18678);
	op_stkvar	(x,	1);
	create_insn	(x=0X1867C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1868C);
	op_stkvar	(x,	1);
	set_cmt	(0X18698,	"mutex",	0);
	create_insn	(x=0X186A0);
	op_stkvar	(x,	1);
	set_cmt	(0X186A8,	"pQueue",	0);
	set_cmt	(0X186AC,	"pData",	0);
	create_insn	(x=0X186AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X186B4);
	op_stkvar	(x,	1);
	set_cmt	(0X186C0,	"mutex",	0);
	create_insn	(x=0X186C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X186F4);
	op_stkvar	(x,	1);
	set_cmt	(0X18700,	"pQueue",	0);
	create_insn	(x=0X1870C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18710);
	op_stkvar	(x,	1);
	create_insn	(x=0X1871C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18728);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1872C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18734);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18738);
	op_stkvar	(x,	1);
	create_insn	(x=0X1873C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18740);
	op_stkvar	(x,	1);
	create_insn	(x=0X1874C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18754);
	op_stkvar	(x,	1);
	create_insn	(x=0X18758);
	op_stkvar	(x,	1);
	create_insn	(x=0X18768);
	op_stkvar	(x,	1);
	create_insn	(x=0X18770);
	op_stkvar	(x,	1);
	create_insn	(x=0X1877C);
	op_stkvar	(x,	1);
	set_cmt	(0X18794,	"mutex",	0);
	create_insn	(x=0X1879C);
	op_stkvar	(x,	1);
	create_insn	(x=0X187A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X187A8);
	op_stkvar	(x,	1);
	create_dword	(x=0X187BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X187C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X187C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X187C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X187CC);
	set_name	(0X187CC,	"Iap2_Ctrl_Session_Run");
	create_insn	(x=0X187D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X187DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X187E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X187E8);
	op_stkvar	(x,	1);
	set_cmt	(0X187EC,	"ptPkt",	0);
	create_insn	(x=0X18800);
	op_stkvar	(x,	1);
	set_cmt	(0X18804,	"ptPkt",	0);
	create_insn	(x=0X18810);
	op_stkvar	(x,	1);
	create_insn	(x=0X18814);
	op_stkvar	(x,	1);
	create_insn	(x=0X18828);
	op_stkvar	(x,	1);
	create_insn	(x=0X1883C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1884C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18860);
	op_stkvar	(x,	1);
	create_insn	(x=0X18874);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1887C);
	op_stkvar	(x,	1);
	set_cmt	(0X18880,	"ptRecvPkt",	0);
	create_insn	(x=0X1888C);
	op_stkvar	(x,	1);
	create_insn	(x=0X188A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X188B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X188C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X188D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X188E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X188F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X18908);
	op_stkvar	(x,	1);
	create_insn	(x=0X1891C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1892C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18940);
	op_stkvar	(x,	1);
	create_insn	(x=0X18954);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18968);
	op_stkvar	(x,	1);
	create_insn	(x=0X1897C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18990);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1899C);
	op_stkvar	(x,	1);
	create_insn	(x=0X189B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X189C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X189CC);
	op_stkvar	(x,	1);
	set_cmt	(0X189D0,	"ptPkt",	0);
	set_cmt	(0X189D8,	"useconds",	0);
	create_insn	(x=0X189D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X189E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X189E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X18A04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X18A08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X18A0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X18A10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X18A14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X18A18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X18A1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X18A20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X18A24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X18A28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X18A2C);
	set_name	(0X18A2C,	"Iap2_Ctrl_Session_FastCmd");
	create_insn	(x=0X18A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A44);
	op_stkvar	(x,	1);
	set_cmt	(0X18A48,	"ptPkt",	0);
	create_insn	(x=0X18A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A58);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X18A88,	"ptRecvPkt",	0);
	create_insn	(x=0X18A88);
	op_stkvar	(x,	1);
	set_cmt	(0X18A8C,	"ptLink",	0);
	create_insn	(x=0X18A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X18AD0,	"ptRecvPkt",	0);
	create_insn	(x=0X18AD0);
	op_stkvar	(x,	1);
	set_cmt	(0X18AD4,	"ptLink",	0);
	create_insn	(x=0X18AD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AE4);
	op_stkvar	(x,	1);
	create_dword	(x=0X18AF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X18AF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X18AFC);
	set_name	(0X18AFC,	"Iap2_UsbDeviceTransport_IsConnect");
	create_insn	(x=0X18B08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18B18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X18B1C,	"oflag",	0);
	create_insn	(x=0X18B28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18B30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18B54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X18B5C,	"fd",	0);
	set_cmt	(0X18B60,	"cmd",	0);
	create_insn	(x=0X18B6C);
	op_hex		(x,	1);
	set_cmt	(0X18B70,	"fd",	0);
	set_cmt	(0X18B74,	"cmd",	0);
	create_insn	(x=0X18B80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18B88);
	op_stkvar	(x,	1);
	set_cmt	(0X18B8C,	"fd",	0);
	set_cmt	(0X18B90,	"request",	0);
	create_insn	(x=0X18B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X18BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X18BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X18BBC);
	op_hex		(x,	1);
	create_insn	(x=0X18BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X18BC4);
	op_stkvar	(x,	1);
	create_dword	(x=0X18BD4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X18BD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X18BDC);
	set_name	(0X18BDC,	"Iap2_UsbDeviceTransport_Recv");
	create_insn	(x=0X18BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X18BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X18BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X18BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X18BF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X18C1C,	"fd",	0);
	set_cmt	(0X18C20,	"buf",	0);
	create_insn	(x=0X18C20);
	op_stkvar	(x,	1);
	set_cmt	(0X18C24,	"nbytes",	0);
	create_insn	(x=0X18C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C34);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C60);
	op_stkvar	(x,	1);
	create_dword	(x=0X18C70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X18C74);
	set_name	(0X18C74,	"Iap2_UsbDeviceTransport_Send");
	create_insn	(x=0X18C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18CA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X18CAC,	"fd",	0);
	set_cmt	(0X18CB0,	"buf",	0);
	create_insn	(x=0X18CB0);
	op_stkvar	(x,	1);
	set_cmt	(0X18CB4,	"n",	0);
	create_insn	(x=0X18CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X18CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X18CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X18CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X18CCC);
	op_stkvar	(x,	1);
	create_dword	(x=0X18CDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X18CE0);
	set_name	(0X18CE0,	"Iap2_Timer_Init");
	create_insn	(x=0X18CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X18CF0);
	op_stkvar	(x,	1);
	set_cmt	(0X18CF4,	"clock_id",	0);
	set_cmt	(0X18CF8,	"tp",	0);
	create_insn	(x=0X18D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X18D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X18D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X18D48);
	op_stkvar	(x,	1);
	create_dword	(0X18D5C);
	create_insn	(x=0X18D60);
	op_stkvar	(x,	1);
	set_name	(0X18D60,	"Iap2_Timer_Del");
	create_insn	(x=0X18D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18D70);
	op_stkvar	(x,	1);
	create_insn	(0X18D88);
	set_name	(0X18D88,	"Iap2_Timer_IsTimeout");
	create_insn	(x=0X18D94);
	op_stkvar	(x,	1);
	create_insn	(x=0X18D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X18D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X18DB8);
	op_stkvar	(x,	1);
	set_cmt	(0X18DBC,	"clock_id",	0);
	set_cmt	(0X18DC0,	"tp",	0);
	create_insn	(x=0X18DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X18DE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E34);
	op_stkvar	(x,	1);
	create_dword	(0X18E44);
	create_insn	(x=0X18E48);
	op_stkvar	(x,	1);
	set_name	(0X18E48,	"Iap2_Timer_IsValid");
	create_insn	(x=0X18E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E70);
	op_stkvar	(x,	1);
	set_name	(0X18E70,	"Iap2_Queue_IsFull");
	create_insn	(x=0X18E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E80);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X18ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EDC);
	op_stkvar	(x,	1);
	create_insn	(0X18EE4);
	create_insn	(x=0X18EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EEC);
	op_stkvar	(x,	1);
	create_dword	(0X18F00);
	create_insn	(x=0X18F04);
	op_stkvar	(x,	1);
	set_name	(0X18F04,	"Iap2_Queue_IsEmpty");
	create_insn	(x=0X18F10);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F30);
	op_stkvar	(x,	1);
	create_insn	(0X18F38);
	create_insn	(x=0X18F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F40);
	op_stkvar	(x,	1);
	create_insn	(0X18F54);
	set_name	(0X18F54,	"Iap2_Queue_Put");
	create_insn	(x=0X18F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F64);
	op_stkvar	(x,	1);
	set_cmt	(0X18F68,	"pQueue",	0);
	create_insn	(x=0X18F68);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F80);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F88);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X18FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X18FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X18FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X18FD8);
	op_stkvar	(x,	1);
	create_insn	(0X18FE8);
	set_name	(0X18FE8,	"Iap2_Queue_Get");
	create_insn	(x=0X18FF4);
	op_stkvar	(x,	1);
	set_cmt	(0X18FF8,	"pQueue",	0);
	create_insn	(x=0X18FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X19010);
	op_stkvar	(x,	1);
	create_insn	(x=0X19018);
	op_stkvar	(x,	1);
	create_insn	(x=0X19020);
	op_stkvar	(x,	1);
	create_insn	(x=0X19028);
	op_stkvar	(x,	1);
	create_insn	(x=0X1902C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1903C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1904C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19058);
	op_stkvar	(x,	1);
	create_insn	(x=0X19060);
	op_stkvar	(x,	1);
	create_insn	(x=0X19064);
	op_stkvar	(x,	1);
	create_insn	(x=0X19068);
	op_stkvar	(x,	1);
	create_insn	(x=0X19078);
	op_stkvar	(x,	1);
	set_name	(0X19078,	"Iap2_CalChecksum");
	create_insn	(x=0X19084);
	op_stkvar	(x,	1);
	create_insn	(x=0X19088);
	op_stkvar	(x,	1);
	create_insn	(x=0X19090);
	op_stkvar	(x,	1);
	create_insn	(x=0X19094);
	op_stkvar	(x,	1);
	create_insn	(x=0X19098);
	op_stkvar	(x,	1);
	create_insn	(x=0X1909C);
	op_stkvar	(x,	1);
	create_insn	(x=0X190A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X190A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X190B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X190B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X190C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X190C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X190CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X190D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X190D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X190E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X190E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X190EC);
	op_stkvar	(x,	1);
	create_insn	(0X19100);
	set_name	(0X19100,	"Usbupdate_SavePara");
	create_insn	(x=0X1910C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19110);
	op_stkvar	(x,	1);
	create_insn	(x=0X1912C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1914C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19150);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X19154);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X19160);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1916C);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1917C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19184);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X19190);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1919C);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X191B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X191B4);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X191B8);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X191C4);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X191D0);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X191E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X191E4);
	op_hex		(x,	1);
	create_insn	(x=0X19200);
	op_hex		(x,	1);
	create_insn	(x=0X19214);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1921C);
	op_hex		(x,	1);
	create_insn	(x=0X19230);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X19248);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1924C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19250);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X19254);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X19260);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1926C);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1927C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19280);
	op_hex		(x,	1);
	create_insn	(x=0X19294);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1929C);
	op_hex		(x,	1);
	create_insn	(x=0X192B0);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X192B8);
	op_hex		(x,	1);
	create_insn	(x=0X192CC);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X192E4);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X192E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X192EC,	"crc",	0);
	set_cmt	(0X192F0,	"pchMessage",	0);
	set_cmt	(0X192F4,	"dwLength",	0);
	create_insn	(x=0X19304);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19308);
	op_hex		(x,	1);
	create_insn	(x=0X1931C);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1933C);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X19344);
	op_stkvar	(x,	1);
	create_insn	(x=0X1934C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19350);
	op_stkvar	(x,	1);
	create_insn	(x=0X1935C);
	op_stkvar	(x,	1);
	set_cmt	(0X1936C,	"pIn",	0);
	set_cmt	(0X19370,	"ulLen",	0);
	set_cmt	(0X19374,	"pcFile",	0);
	create_insn	(x=0X1937C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19384);
	op_stkvar	(x,	1);
	create_insn	(x=0X19388);
	op_stkvar	(x,	1);
	create_dword	(x=0X1939C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X193A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X193A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X193A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X193A8,	"pIn");
	create_dword	(0X193AC);
	create_insn	(0X193B0);
	set_name	(0X193B0,	"Usbupdate_RestorePara");
	create_insn	(x=0X193BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X193C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X193D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X193D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X193DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X193E8);
	op_stkvar	(x,	1);
	set_cmt	(0X193F8,	"pOut",	0);
	set_cmt	(0X193FC,	"ulLen",	0);
	set_cmt	(0X19400,	"pcFile",	0);
	create_insn	(x=0X19414);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X19418,	"crc",	0);
	set_cmt	(0X1941C,	"pchMessage",	0);
	set_cmt	(0X19420,	"dwLength",	0);
	create_insn	(x=0X1942C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19430);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19434);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X19438);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1944C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19458);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19468);
	op_stkvar	(x,	1);
	create_insn	(x=0X19470);
	op_stkvar	(x,	1);
	create_insn	(x=0X19478);
	op_stkvar	(x,	1);
	create_insn	(x=0X1947C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19488);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19498);
	op_stkvar	(x,	1);
	create_insn	(x=0X1949C);
	op_stkvar	(x,	1);
	create_dword	(x=0X194AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X194B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X194B0,	"pchMessage");
	create_dword	(0X194B4);
	create_dword	(x=0X194B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X194BC);
	set_name	(0X194BC,	"Usbupdate_Start_NoWait");
	create_insn	(x=0X194C8);
	op_stkvar	(x,	1);
	set_cmt	(0X194CC,	"pFirmwareAttr",	0);
	create_insn	(x=0X194CC);
	op_stkvar	(x,	1);
	set_cmt	(0X194D8,	"pPro",	0);
	set_cmt	(0X194DC,	"ulTimeOut",	0);
	set_cmt	(0X194E0,	"eType",	0);
	create_insn	(x=0X194F0);
	op_stkvar	(x,	1);
	set_name	(0X194F0,	"Usbupdate_GetFirmwareDesc_ByID");
	create_insn	(x=0X19500);
	op_stkvar	(x,	1);
	create_insn	(x=0X19508);
	op_stkvar	(x,	1);
	create_insn	(x=0X19510);
	op_stkvar	(x,	1);
	create_insn	(x=0X19518);
	op_stkvar	(x,	1);
	create_insn	(x=0X1951C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19548);
	op_stkvar	(x,	1);
	create_insn	(x=0X19554);
	op_stkvar	(x,	1);
	create_insn	(x=0X19574);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1957C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19584);
	op_stkvar	(x,	1);
	create_insn	(x=0X1958C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19590);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19594);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X19598);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X195B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X195BC);
	op_stkvar	(x,	1);
	create_dword	(x=0X195D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X195D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X195D8);
	set_name	(0X195D8,	"Usbupdate_GetFirmwareDesc_ByLoader");
	create_insn	(x=0X195E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X195E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X195F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X195F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X195F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X195FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1961C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19624);
	op_stkvar	(x,	1);
	create_insn	(x=0X1962C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19630);
	op_stkvar	(x,	1);
	create_insn	(x=0X19638);
	op_hex		(x,	1);
	create_insn	(x=0X1963C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19640);
	op_stkvar	(x,	1);
	create_insn	(x=0X19648);
	op_stkvar	(x,	1);
	create_insn	(x=0X1964C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19650);
	op_hex		(x,	1);
	create_insn	(x=0X19654);
	op_stkvar	(x,	1);
	create_insn	(x=0X1965C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19660);
	op_stkvar	(x,	1);
	set_cmt	(0X19664,	"ucID",	0);
	create_insn	(x=0X19670);
	op_stkvar	(x,	1);
	create_insn	(x=0X19674);
	op_stkvar	(x,	1);
	create_insn	(x=0X19684);
	op_stkvar	(x,	1);
	set_name	(0X19684,	"Usbupdate_GetDJIProtocolHandle");
	create_insn	(x=0X19690);
	op_stkvar	(x,	1);
	create_insn	(x=0X19694);
	op_stkvar	(x,	1);
	create_insn	(x=0X196A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X196B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X196B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X196C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X196C4);
	op_stkvar	(x,	1);
	create_dword	(x=0X196D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X196DC);
	set_name	(0X196DC,	"Usbupdate_GetCurrentVersion_Common");
	create_insn	(x=0X196E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X196EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X196F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X196F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X196FC);
	op_stkvar	(x,	1);
	set_cmt	(0X19704,	"pFirmwareAttr",	0);
	create_insn	(x=0X19704);
	op_stkvar	(x,	1);
	create_insn	(x=0X19710);
	op_stkvar	(x,	1);
	set_cmt	(0X19714,	"ucDevID",	0);
	create_insn	(x=0X19718);
	op_stkvar	(x,	1);
	set_cmt	(0X1971C,	"pulFirmwareVersion",	0);
	create_insn	(x=0X1971C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19720);
	op_stkvar	(x,	1);
	set_cmt	(0X19724,	"pbSupportDowngrade",	0);
	create_insn	(x=0X19724);
	op_stkvar	(x,	1);
	set_cmt	(0X19728,	"pPro",	0);
	set_cmt	(0X1972C,	"ulTimeOut",	0);
	set_cmt	(0X19730,	"pulLoaderVersion",	0);
	create_insn	(x=0X19730);
	op_stkvar	(x,	1);
	create_insn	(x=0X19748);
	op_stkvar	(x,	1);
	create_insn	(x=0X19750);
	op_stkvar	(x,	1);
	create_insn	(x=0X19758);
	op_stkvar	(x,	1);
	create_insn	(x=0X1975C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1976C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19770);
	op_stkvar	(x,	1);
	create_insn	(0X19780);
	set_name	(0X19780,	"Usbupdate_GetCurrentVersion_DM368");
	create_insn	(x=0X1978C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19790);
	op_stkvar	(x,	1);
	create_insn	(x=0X19794);
	op_stkvar	(x,	1);
	create_insn	(x=0X19798);
	op_stkvar	(x,	1);
	create_insn	(x=0X1979C);
	op_stkvar	(x,	1);
	set_cmt	(0X197A8,	"pulVersion",	0);
	create_insn	(x=0X197A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X197BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X197C8);
	op_stkvar	(x,	1);
	create_insn	(0X197E4);
	set_name	(0X197E4,	"Usbupdate_SetDM368UpdateFlag");
	create_insn	(x=0X197F0);
	op_stkvar	(x,	1);
	set_cmt	(0X197F8,	"s",	0);
	create_insn	(x=0X197FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19800);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19808);
	op_stkvar	(x,	1);
	set_cmt	(0X19810,	"command",	0);
	create_insn	(x=0X19818);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X19828);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1982C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X19830);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X19834);
	set_name	(0X19834,	"Usbupdate_ClearDM368UpdateFlag");
	create_insn	(x=0X19840);
	op_stkvar	(x,	1);
	set_cmt	(0X19848,	"s",	0);
	create_insn	(x=0X1984C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19850);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19858);
	op_stkvar	(x,	1);
	set_cmt	(0X19860,	"command",	0);
	create_insn	(x=0X19868);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X19878);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1987C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X19880);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X19884);
	set_name	(0X19884,	"Usbupdate_Update_DM368");
	create_insn	(x=0X19890);
	op_stkvar	(x,	1);
	create_insn	(x=0X19894);
	op_stkvar	(x,	1);
	create_insn	(x=0X1989C);
	op_stkvar	(x,	1);
	create_insn	(x=0X198A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X198A4);
	op_stkvar	(x,	1);
	set_cmt	(0X198A8,	"s",	0);
	create_insn	(x=0X198AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X198B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X198B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X198BC);
	op_stkvar	(x,	1);
	set_cmt	(0X198C0,	"command",	0);
	create_insn	(x=0X198D8);
	op_stkvar	(x,	1);
	create_insn	(0X198E0);
	create_insn	(x=0X198E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X198E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X198F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X19900);
	op_stkvar	(x,	1);
	create_dword	(x=0X19910);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X19914);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X19918);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1991C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X19920);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X19924);
	set_name	(0X19924,	"Usbupdate_GetCurrentVersion_68013");
	create_insn	(x=0X19930);
	op_stkvar	(x,	1);
	create_insn	(x=0X19934);
	op_stkvar	(x,	1);
	create_insn	(x=0X19938);
	op_stkvar	(x,	1);
	create_insn	(x=0X1993C);
	op_stkvar	(x,	1);
	set_cmt	(0X19940,	"pulLoaderVersion",	0);
	create_insn	(x=0X19940);
	op_stkvar	(x,	1);
	set_cmt	(0X19944,	"pulAppVersion",	0);
	create_insn	(x=0X19944);
	op_stkvar	(x,	1);
	create_insn	(x=0X19958);
	op_stkvar	(x,	1);
	create_insn	(x=0X19964);
	op_stkvar	(x,	1);
	create_insn	(x=0X19970);
	op_stkvar	(x,	1);
	create_insn	(0X1998C);
	set_name	(0X1998C,	"Usbupdate_Update_68013");
	create_insn	(x=0X19998);
	op_stkvar	(x,	1);
	create_insn	(x=0X1999C);
	op_stkvar	(x,	1);
	create_insn	(x=0X199A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X199A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X199AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X199B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X199B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X199D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X199DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X199E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X199E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X199F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X199F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X19A00);
	op_stkvar	(x,	1);
	set_cmt	(0X19A04,	"s",	0);
	create_insn	(x=0X19A08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19A0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19A10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19A18);
	op_stkvar	(x,	1);
	set_cmt	(0X19A1C,	"command",	0);
	create_insn	(x=0X19A30);
	op_stkvar	(x,	1);
	set_cmt	(0X19A34,	"s",	0);
	create_insn	(x=0X19A38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19A3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19A40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19A48);
	op_stkvar	(x,	1);
	set_cmt	(0X19A4C,	"command",	0);
	create_insn	(x=0X19A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X19A6C);
	op_stkvar	(x,	1);
	set_cmt	(0X19A70,	"s",	0);
	create_insn	(x=0X19A74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19A78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19A7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19A84);
	op_stkvar	(x,	1);
	set_cmt	(0X19A88,	"command",	0);
	create_insn	(x=0X19AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X19AA8);
	op_stkvar	(x,	1);
	set_cmt	(0X19AAC,	"s",	0);
	create_insn	(x=0X19AB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19AB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19AB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19AC0);
	op_stkvar	(x,	1);
	set_cmt	(0X19AC4,	"command",	0);
	create_insn	(x=0X19ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X19AE4);
	op_stkvar	(x,	1);
	set_cmt	(0X19AE8,	"s",	0);
	create_insn	(x=0X19AEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19AF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19AF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19AFC);
	op_stkvar	(x,	1);
	set_cmt	(0X19B00,	"command",	0);
	create_insn	(x=0X19B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B38);
	op_stkvar	(x,	1);
	set_cmt	(0X19B40,	"seconds",	0);
	create_insn	(x=0X19B4C);
	op_stkvar	(x,	1);
	set_cmt	(0X19B54,	"seconds",	0);
	create_insn	(x=0X19B5C);
	op_stkvar	(x,	1);
	create_dword	(x=0X19B6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X19B70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X19B74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X19B78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X19B7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X19B80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X19B84);
	set_name	(0X19B84,	"Usbupdate_Update_Common");
	create_insn	(x=0X19B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X19B98);
	op_stkvar	(x,	1);
	create_insn	(x=0X19BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X19BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X19BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X19BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X19BBC);
	op_stkvar	(x,	1);
	set_cmt	(0X19BC4,	"pFile",	0);
	create_insn	(x=0X19BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X19BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X19BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X19BEC);
	op_stkvar	(x,	1);
	set_cmt	(0X19BF4,	"file",	0);
	set_cmt	(0X19BF8,	"oflag",	0);
	create_insn	(x=0X19C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C18);
	op_stkvar	(x,	1);
	create_insn	(0X19C20);
	create_insn	(x=0X19C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C28);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C40);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C64);
	op_stkvar	(x,	1);
	set_cmt	(0X19C6C,	"pFirmwareAttr",	0);
	create_insn	(x=0X19C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X19C80);
	op_stkvar	(x,	1);
	set_cmt	(0X19C84,	"pPro",	0);
	set_cmt	(0X19C88,	"ucDevID",	0);
	set_cmt	(0X19C8C,	"ulTimeOut",	0);
	create_insn	(x=0X19C8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X19C90,	"pbIsLoader",	0);
	create_insn	(x=0X19CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X19CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X19CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X19CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X19CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X19CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X19CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X19CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X19CF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X19D00,	"pFirmwareAttr",	0);
	create_insn	(x=0X19D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X19D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19D14);
	op_stkvar	(x,	1);
	set_cmt	(0X19D34,	"ulDelayTimeMs",	0);
	create_insn	(x=0X19D34);
	op_stkvar	(x,	1);
	set_cmt	(0X19D38,	"pPro",	0);
	set_cmt	(0X19D3C,	"ucDevID",	0);
	set_cmt	(0X19D40,	"ulTimeOut",	0);
	create_insn	(x=0X19D40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X19D44,	"ucType",	0);
	create_insn	(x=0X19D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X19D60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19D6C);
	op_stkvar	(x,	1);
	set_cmt	(0X19D74,	"seconds",	0);
	create_insn	(x=0X19D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X19D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X19D8C);
	op_stkvar	(x,	1);
	set_cmt	(0X19D98,	"pFirmwareAttr",	0);
	create_insn	(x=0X19D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X19DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X19DA8);
	op_stkvar	(x,	1);
	set_cmt	(0X19DB4,	"switch 5 cases ",	0);
	set_cmt	(0X19DB8,	"switch jump",	0);
	set_cmt	(0X19DC0,	"jump table for switch statement",	0);
	create_dword	(x=0X19DC0);
	make_array	(x,	0X5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X19DD4,	"jumptable 00019DB8 case 0",	1);
	create_insn	(x=0X19DD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X19DDC,	"pFirmwareAttr",	0);
	create_insn	(x=0X19DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X19DE8);
	op_stkvar	(x,	1);
	set_cmt	(0X19DF0,	"pPro",	0);
	set_cmt	(0X19DF4,	"ucDevID",	0);
	set_cmt	(0X19DF8,	"ulTimeOut",	0);
	create_insn	(x=0X19DF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19E0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X19E24);
	op_stkvar	(x,	1);
	set_cmt	(0X19E28,	"seconds",	0);
	create_insn	(x=0X19E34);
	op_stkvar	(x,	1);
	set_cmt	(0X19E40,	"dest",	0);
	create_insn	(x=0X19E44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X19E48,	"n",	0);
	create_insn	(x=0X19E50);
	op_stkvar	(x,	1);
	set_cmt	(0X19E5C,	"pcStr",	0);
	create_insn	(x=0X19E64);
	op_stkvar	(x,	1);
	set_cmt	(0X19E70,	"format",	0);
	set_cmt	(0X19E78,	"c",	0);
	create_insn	(x=0X19E80);
	op_stkvar	(x,	1);
	create_insn	(x=0X19E88);
	op_stkvar	(x,	1);
	set_cmt	(0X19E90,	"jumptable 00019DB8 case 1",	1);
	create_insn	(x=0X19E90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X19E98,	"pFirmwareAttr",	0);
	create_insn	(x=0X19E98);
	op_stkvar	(x,	1);
	create_insn	(x=0X19EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X19EAC);
	op_stkvar	(x,	1);
	set_cmt	(0X19EB0,	"pPro",	0);
	set_cmt	(0X19EB4,	"ucDevID",	0);
	set_cmt	(0X19EB8,	"ulTimeOut",	0);
	create_insn	(x=0X19EB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X19EBC,	"pbIsLoader",	0);
	create_insn	(x=0X19ED0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X19EE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X19EFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19F04);
	op_stkvar	(x,	1);
	create_insn	(x=0X19F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X19F1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19F24);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_5(void) {
        auto x;
#define id x

	create_insn	(x=0X19F2C);
	op_stkvar	(x,	1);
	set_cmt	(0X19F34,	"jumptable 00019DB8 case 2",	1);
	create_insn	(x=0X19F34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X19F3C,	"pFirmwareAttr",	0);
	create_insn	(x=0X19F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X19F50);
	op_stkvar	(x,	1);
	set_cmt	(0X19F70,	"ulTimeOut",	0);
	create_insn	(x=0X19F74);
	op_stkvar	(x,	1);
	create_insn	(x=0X19F78);
	op_stkvar	(x,	1);
	set_cmt	(0X19F80,	"pucAck",	0);
	create_insn	(x=0X19F80);
	op_stkvar	(x,	1);
	create_insn	(x=0X19F84);
	op_stkvar	(x,	1);
	set_cmt	(0X19F88,	"pusPktLen",	0);
	create_insn	(x=0X19F88);
	op_stkvar	(x,	1);
	set_cmt	(0X19F8C,	"pPro",	0);
	set_cmt	(0X19F90,	"ucDevID",	0);
	set_cmt	(0X19F94,	"ulLength",	0);
	create_insn	(x=0X19FA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X19FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X19FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X19FCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19FDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X19FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X19FE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A004);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A00C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A018);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A020);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A02C);
	op_stkvar	(x,	1);
	set_cmt	(0X1A034,	"seconds",	0);
	create_insn	(x=0X1A040);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A044);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A050);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A058);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A060);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A068);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A070);
	op_stkvar	(x,	1);
	set_cmt	(0X1A078,	"jumptable 00019DB8 case 3",	1);
	create_insn	(x=0X1A078);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A07C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A088);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A08C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A094);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A09C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A0A0);
	op_stkvar	(x,	1);
	set_cmt	(0X1A0A4,	"fd",	0);
	create_insn	(x=0X1A0A4);
	op_stkvar	(x,	1);
	set_cmt	(0X1A0A8,	"offset",	0);
	set_cmt	(0X1A0AC,	"whence",	0);
	create_insn	(x=0X1A0B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A0BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A0C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A0CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A0D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A0E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A0E4);
	op_stkvar	(x,	1);
	set_cmt	(0X1A0E8,	"s",	0);
	create_insn	(x=0X1A0EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A0F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A0FC);
	op_stkvar	(x,	1);
	set_cmt	(0X1A108,	"pcStr",	0);
	create_insn	(x=0X1A110);
	op_stkvar	(x,	1);
	set_cmt	(0X1A11C,	"format",	0);
	set_cmt	(0X1A124,	"c",	0);
	create_insn	(x=0X1A130);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A138);
	op_stkvar	(x,	1);
	set_cmt	(0X1A13C,	"nbytes",	0);
	create_insn	(x=0X1A140);
	op_stkvar	(x,	1);
	set_cmt	(0X1A144,	"fd",	0);
	create_insn	(x=0X1A144);
	op_stkvar	(x,	1);
	set_cmt	(0X1A148,	"buf",	0);
	create_insn	(x=0X1A154);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A158);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A164);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A16C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A178);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A17C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A184);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A18C);
	op_stkvar	(x,	1);
	set_cmt	(0X1A194,	"s",	0);
	set_cmt	(0X1A198,	"c",	0);
	set_cmt	(0X1A19C,	"n",	0);
	create_insn	(x=0X1A1A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A1B0);
	op_stkvar	(x,	1);
	set_cmt	(0X1A1B4,	"pFirmwareAttr",	0);
	create_insn	(x=0X1A1B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A1C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A1C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A1D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A1D4);
	op_stkvar	(x,	1);
	set_cmt	(0X1A1D8,	"ulSendSn",	0);
	create_insn	(x=0X1A1D8);
	op_stkvar	(x,	1);
	set_cmt	(0X1A1DC,	"ulSendDataLen",	0);
	create_insn	(x=0X1A1DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A1E0);
	op_stkvar	(x,	1);
	set_cmt	(0X1A1E4,	"pSendData",	0);
	create_insn	(x=0X1A1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A1E8);
	op_stkvar	(x,	1);
	set_cmt	(0X1A1EC,	"pulRecvSn",	0);
	create_insn	(x=0X1A1EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A1F0);
	op_stkvar	(x,	1);
	set_cmt	(0X1A1F8,	"pErrVal",	0);
	create_insn	(x=0X1A1F8);
	op_stkvar	(x,	1);
	set_cmt	(0X1A1FC,	"pPro",	0);
	set_cmt	(0X1A200,	"ucDevID",	0);
	set_cmt	(0X1A204,	"ulTimeOut",	0);
	create_insn	(x=0X1A204);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1A208,	"ucEncryptType",	0);
	create_insn	(x=0X1A21C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A224);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A22C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A234);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A23C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A240);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A244);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A254);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A260);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A268);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A270);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A274);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A27C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A284);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1A28C,	"seconds",	0);
	create_insn	(x=0X1A294);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A2A4);
	op_stkvar	(x,	1);
	set_cmt	(0X1A2AC,	"jumptable 00019DB8 case 4",	1);
	create_insn	(x=0X1A2AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A2B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A2C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A2CC);
	op_stkvar	(x,	1);
	set_cmt	(0X1A2D4,	"dest",	0);
	set_cmt	(0X1A2D8,	"src",	0);
	set_cmt	(0X1A2DC,	"n",	0);
	create_insn	(x=0X1A2E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A2F0);
	op_stkvar	(x,	1);
	set_cmt	(0X1A2F8,	"pcFilePath",	0);
	set_cmt	(0X1A2FC,	"pucMD5",	0);
	create_insn	(x=0X1A304);
	op_stkvar	(x,	1);
	set_cmt	(0X1A30C,	"pucBuff",	0);
	set_cmt	(0X1A310,	"ulLength",	0);
	set_cmt	(0X1A318,	"pFirmwareAttr",	0);
	create_insn	(x=0X1A318);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A324);
	op_stkvar	(x,	1);
	set_cmt	(0X1A328,	"ucDevID",	0);
	create_insn	(x=0X1A32C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A334);
	op_stkvar	(x,	1);
	set_cmt	(0X1A33C,	"pucAck",	0);
	create_insn	(x=0X1A33C);
	op_stkvar	(x,	1);
	set_cmt	(0X1A340,	"pPro",	0);
	set_cmt	(0X1A344,	"ulTimeOut",	0);
	create_insn	(x=0X1A344);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1A348,	"pucMD5",	0);
	create_insn	(x=0X1A35C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A364);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A370);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A378);
	op_stkvar	(x,	1);
	set_cmt	(0X1A384,	"s",	0);
	create_insn	(x=0X1A388);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A390);
	op_stkvar	(x,	1);
	set_cmt	(0X1A39C,	"pcStr",	0);
	create_insn	(x=0X1A3A4);
	op_stkvar	(x,	1);
	set_cmt	(0X1A3B0,	"format",	0);
	set_cmt	(0X1A3B8,	"c",	0);
	create_insn	(x=0X1A3C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A3CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A3D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A3DC);
	op_stkvar	(x,	1);
	set_cmt	(0X1A3E0,	"jumptable 00019DB8 default case",	1);
	create_insn	(x=0X1A3E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A3E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A3F0);
	op_stkvar	(x,	1);
	set_cmt	(0X1A3FC,	"s",	0);
	create_insn	(x=0X1A400);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A404);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A40C);
	op_stkvar	(x,	1);
	set_cmt	(0X1A418,	"pcStr",	0);
	create_insn	(x=0X1A420);
	op_stkvar	(x,	1);
	set_cmt	(0X1A42C,	"format",	0);
	set_cmt	(0X1A434,	"c",	0);
	create_insn	(x=0X1A440);
	op_stkvar	(x,	1);
	create_insn	(0X1A448);
	create_insn	(x=0X1A450);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A454);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A458);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A468);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A46C);
	op_stkvar	(x,	1);
	set_cmt	(0X1A470,	"pFirmwareAttr",	0);
	create_insn	(x=0X1A470);
	op_stkvar	(x,	1);
	set_cmt	(0X1A47C,	"fd",	0);
	create_insn	(x=0X1A47C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A488);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A48C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A4A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A4A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A4B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1A4BC,	"pFirmwareAttr",	0);
	create_insn	(x=0X1A4BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A4C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A4D0);
	op_stkvar	(x,	1);
	set_cmt	(0X1A4F0,	"ulDelayTimeMs",	0);
	create_insn	(x=0X1A4F0);
	op_stkvar	(x,	1);
	set_cmt	(0X1A4F4,	"pPro",	0);
	set_cmt	(0X1A4F8,	"ucDevID",	0);
	set_cmt	(0X1A4FC,	"ulTimeOut",	0);
	create_insn	(x=0X1A4FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1A500,	"ucType",	0);
	create_insn	(x=0X1A514);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A51C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A528);
	op_stkvar	(x,	1);
	set_cmt	(0X1A530,	"seconds",	0);
	create_insn	(x=0X1A53C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A544);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A548);
	op_stkvar	(x,	1);
	set_cmt	(0X1A554,	"pFirmwareAttr",	0);
	create_insn	(x=0X1A554);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A55C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A560);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A564);
	op_stkvar	(x,	1);
	create_dword	(x=0X1A574);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A578);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X1A578,	"ulTimeOut");
	create_dword	(x=0X1A57C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A580);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A584);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A588);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A58C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A590);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A594);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A598);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A59C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A5F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1A5F8);
	set_name	(0X1A5F8,	"Usbupdate_CalFPGACheckSum");
	create_insn	(x=0X1A604);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A608);
	op_stkvar	(x,	1);
	set_cmt	(0X1A60C,	"file",	0);
	create_insn	(x=0X1A60C);
	op_stkvar	(x,	1);
	set_cmt	(0X1A610,	"oflag",	0);
	create_insn	(x=0X1A61C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A620);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A630);
	op_stkvar	(x,	1);
	create_insn	(0X1A638);
	create_insn	(x=0X1A63C);
	op_stkvar	(x,	1);
	create_insn	(0X1A644);
	create_insn	(x=0X1A648);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A650);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A658);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A66C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A674);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A678);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A680);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A684);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A688);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A694);
	op_stkvar	(x,	1);
	set_cmt	(0X1A698,	"fd",	0);
	create_insn	(x=0X1A698);
	op_stkvar	(x,	1);
	set_cmt	(0X1A69C,	"buf",	0);
	set_cmt	(0X1A6A0,	"nbytes",	0);
	create_insn	(x=0X1A6AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A6B0);
	op_stkvar	(x,	1);
	set_cmt	(0X1A6BC,	"fd",	0);
	create_insn	(x=0X1A6BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A6C4);
	op_stkvar	(x,	1);
	set_cmt	(0X1A6C8,	"pOut",	0);
	create_insn	(x=0X1A6C8);
	op_stkvar	(x,	1);
	set_cmt	(0X1A6CC,	"usData",	0);
	create_insn	(x=0X1A6D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A6DC);
	op_stkvar	(x,	1);
	create_dword	(0X1A6EC);
	create_insn	(0X1A6F0);
	set_name	(0X1A6F0,	"Usbupdate_Update_FPGA");
	create_insn	(x=0X1A700);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A704);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A70C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A714);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A71C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A724);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A728);
	op_stkvar	(x,	1);
	set_cmt	(0X1A730,	"pFile",	0);
	create_insn	(x=0X1A73C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A740);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A750);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A758);
	op_stkvar	(x,	1);
	set_cmt	(0X1A760,	"file",	0);
	set_cmt	(0X1A764,	"oflag",	0);
	create_insn	(x=0X1A770);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A774);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A784);
	op_stkvar	(x,	1);
	create_insn	(0X1A78C);
	create_insn	(x=0X1A790);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A798);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A79C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A7B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A7B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A7C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A7D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A7D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1A7E4,	"pFirmwareAttr",	0);
	create_insn	(x=0X1A7E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A7F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A7F8);
	op_stkvar	(x,	1);
	set_cmt	(0X1A818,	"ulDelayTimeMs",	0);
	create_insn	(x=0X1A818);
	op_stkvar	(x,	1);
	set_cmt	(0X1A81C,	"pPro",	0);
	set_cmt	(0X1A820,	"ucDevID",	0);
	set_cmt	(0X1A824,	"ulTimeOut",	0);
	create_insn	(x=0X1A824);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1A828,	"ucType",	0);
	create_insn	(x=0X1A83C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A844);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A850);
	op_stkvar	(x,	1);
	set_cmt	(0X1A858,	"seconds",	0);
	create_insn	(x=0X1A864);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A86C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A870);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A87C);
	op_stkvar	(x,	1);
	set_cmt	(0X1A888,	"switch 5 cases ",	0);
	set_cmt	(0X1A88C,	"switch jump",	0);
	set_cmt	(0X1A894,	"jump table for switch statement",	0);
	create_dword	(x=0X1A894);
	make_array	(x,	0X5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X1A8A8,	"jumptable 0001A88C case 0",	1);
	create_insn	(x=0X1A8A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1A8B0,	"pFirmwareAttr",	0);
	create_insn	(x=0X1A8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A8BC);
	op_stkvar	(x,	1);
	set_cmt	(0X1A8C4,	"pPro",	0);
	set_cmt	(0X1A8C8,	"ucDevID",	0);
	set_cmt	(0X1A8CC,	"ulTimeOut",	0);
	create_insn	(x=0X1A8CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A8E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A8E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A8F8);
	op_stkvar	(x,	1);
	set_cmt	(0X1A8FC,	"seconds",	0);
	create_insn	(x=0X1A908);
	op_stkvar	(x,	1);
	set_cmt	(0X1A914,	"dest",	0);
	create_insn	(x=0X1A918);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1A91C,	"n",	0);
	create_insn	(x=0X1A924);
	op_stkvar	(x,	1);
	set_cmt	(0X1A930,	"pcStr",	0);
	create_insn	(x=0X1A938);
	op_stkvar	(x,	1);
	set_cmt	(0X1A944,	"format",	0);
	set_cmt	(0X1A94C,	"c",	0);
	create_insn	(x=0X1A954);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A95C);
	op_stkvar	(x,	1);
	set_cmt	(0X1A964,	"jumptable 0001A88C case 1",	1);
	create_insn	(x=0X1A964);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1A96C,	"pFirmwareAttr",	0);
	create_insn	(x=0X1A96C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A978);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A980);
	op_stkvar	(x,	1);
	set_cmt	(0X1A984,	"pPro",	0);
	set_cmt	(0X1A988,	"ucDevID",	0);
	set_cmt	(0X1A98C,	"ulTimeOut",	0);
	create_insn	(x=0X1A98C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1A990,	"pbIsLoader",	0);
	create_insn	(x=0X1A9A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A9AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A9B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A9C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A9D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A9D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A9E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A9F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A9F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AA00);
	op_stkvar	(x,	1);
	set_cmt	(0X1AA08,	"jumptable 0001A88C case 2",	1);
	create_insn	(0X1AA08);
	set_cmt	(0X1AA0C,	"seconds",	0);
	set_cmt	(0X1AA14,	"pFirmwareAttr",	0);
	create_insn	(x=0X1AA14);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AA20);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AA28);
	op_stkvar	(x,	1);
	set_cmt	(0X1AA48,	"ulTimeOut",	0);
	create_insn	(x=0X1AA4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AA50);
	op_stkvar	(x,	1);
	set_cmt	(0X1AA58,	"pucAck",	0);
	create_insn	(x=0X1AA58);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AA5C);
	op_stkvar	(x,	1);
	set_cmt	(0X1AA60,	"pusPktLen",	0);
	create_insn	(x=0X1AA60);
	op_stkvar	(x,	1);
	set_cmt	(0X1AA64,	"pPro",	0);
	set_cmt	(0X1AA68,	"ucDevID",	0);
	set_cmt	(0X1AA6C,	"ulLength",	0);
	create_insn	(x=0X1AA80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AA88);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AA98);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AA9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AAA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AAAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AAC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AAC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AAD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AAE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AAF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AAF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AB00);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AB08);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AB10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AB18);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AB20);
	op_stkvar	(x,	1);
	set_cmt	(0X1AB28,	"jumptable 0001A88C case 3",	1);
	create_insn	(x=0X1AB28);
	op_stkvar	(x,	1);
	set_cmt	(0X1AB2C,	"nbytes",	0);
	create_insn	(x=0X1AB30);
	op_stkvar	(x,	1);
	set_cmt	(0X1AB34,	"fd",	0);
	create_insn	(x=0X1AB34);
	op_stkvar	(x,	1);
	set_cmt	(0X1AB38,	"buf",	0);
	create_insn	(x=0X1AB44);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AB48);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AB54);
	op_stkvar	(x,	1);
	set_cmt	(0X1AB58,	"buffer",	0);
	set_cmt	(0X1AB5C,	"bufferSize",	0);
	create_insn	(x=0X1AB5C);
	op_stkvar	(x,	1);
	set_cmt	(0X1AB60,	"timeout",	0);
	create_insn	(x=0X1AB6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AB70);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AB74);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AB80);
	op_stkvar	(x,	1);
	set_cmt	(0X1AB8C,	"s",	0);
	create_insn	(x=0X1AB90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AB9C);
	op_stkvar	(x,	1);
	set_cmt	(0X1ABA8,	"pcStr",	0);
	create_insn	(x=0X1ABB0);
	op_stkvar	(x,	1);
	set_cmt	(0X1ABBC,	"format",	0);
	set_cmt	(0X1ABC4,	"c",	0);
	create_insn	(x=0X1ABD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ABD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ABDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ABE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ABE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ABEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ABF4);
	op_stkvar	(x,	1);
	set_cmt	(0X1AC00,	"seconds",	0);
	create_insn	(x=0X1AC0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AC14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AC18);
	op_stkvar	(x,	1);
	set_cmt	(0X1AC20,	"seconds",	0);
	create_insn	(x=0X1AC28);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AC38);
	op_stkvar	(x,	1);
	set_cmt	(0X1AC40,	"jumptable 0001A88C case 4",	1);
	create_insn	(x=0X1AC40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AC48);
	op_stkvar	(x,	1);
	set_cmt	(0X1AC4C,	"s",	0);
	set_cmt	(0X1AC50,	"c",	0);
	set_cmt	(0X1AC54,	"n",	0);
	create_insn	(x=0X1AC5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AC64);
	op_stkvar	(x,	1);
	set_cmt	(0X1AC68,	"pcFile",	0);
	set_cmt	(0X1AC6C,	"pusChk",	0);
	set_cmt	(0X1AC74,	"pFirmwareAttr",	0);
	create_insn	(x=0X1AC74);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AC80);
	op_stkvar	(x,	1);
	set_cmt	(0X1AC84,	"ucDevID",	0);
	create_insn	(x=0X1AC88);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AC8C);
	op_stkvar	(x,	1);
	set_cmt	(0X1AC94,	"pucAck",	0);
	create_insn	(x=0X1AC94);
	op_stkvar	(x,	1);
	set_cmt	(0X1AC98,	"pPro",	0);
	set_cmt	(0X1AC9C,	"ulTimeOut",	0);
	create_insn	(x=0X1AC9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1ACA0,	"pucMD5",	0);
	create_insn	(x=0X1ACB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ACBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ACC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ACD0);
	op_stkvar	(x,	1);
	set_cmt	(0X1ACDC,	"s",	0);
	create_insn	(x=0X1ACE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ACE8);
	op_stkvar	(x,	1);
	set_cmt	(0X1ACF4,	"pcStr",	0);
	create_insn	(x=0X1ACFC);
	op_stkvar	(x,	1);
	set_cmt	(0X1AD08,	"format",	0);
	set_cmt	(0X1AD10,	"c",	0);
	create_insn	(x=0X1AD1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AD24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AD2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AD34);
	op_stkvar	(x,	1);
	set_cmt	(0X1AD38,	"jumptable 0001A88C default case",	1);
	create_insn	(x=0X1AD38);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AD44);
	op_stkvar	(x,	1);
	set_cmt	(0X1AD50,	"s",	0);
	create_insn	(x=0X1AD54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AD58);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AD60);
	op_stkvar	(x,	1);
	set_cmt	(0X1AD6C,	"pcStr",	0);
	create_insn	(x=0X1AD74);
	op_stkvar	(x,	1);
	set_cmt	(0X1AD80,	"format",	0);
	set_cmt	(0X1AD88,	"c",	0);
	create_insn	(x=0X1AD94);
	op_stkvar	(x,	1);
	create_insn	(0X1AD9C);
	create_insn	(x=0X1ADA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ADA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ADAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ADBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ADC0);
	op_stkvar	(x,	1);
	set_cmt	(0X1ADC4,	"pFirmwareAttr",	0);
	create_insn	(x=0X1ADC4);
	op_stkvar	(x,	1);
	set_cmt	(0X1ADD0,	"fd",	0);
	create_insn	(x=0X1ADD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ADDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ADE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ADF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AE00);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AE08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1AE14,	"pFirmwareAttr",	0);
	create_insn	(x=0X1AE14);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AE20);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AE28);
	op_stkvar	(x,	1);
	set_cmt	(0X1AE48,	"ulDelayTimeMs",	0);
	create_insn	(x=0X1AE48);
	op_stkvar	(x,	1);
	set_cmt	(0X1AE4C,	"pPro",	0);
	set_cmt	(0X1AE50,	"ucDevID",	0);
	set_cmt	(0X1AE54,	"ulTimeOut",	0);
	create_insn	(x=0X1AE54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1AE58,	"ucType",	0);
	create_insn	(x=0X1AE6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AE74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AE80);
	op_stkvar	(x,	1);
	set_cmt	(0X1AE88,	"seconds",	0);
	create_insn	(x=0X1AE94);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AE9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AEA0);
	op_stkvar	(x,	1);
	set_cmt	(0X1AEAC,	"pFirmwareAttr",	0);
	create_insn	(x=0X1AEAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AEB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AEB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AEBC);
	op_stkvar	(x,	1);
	create_dword	(x=0X1AECC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AED0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AED4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AED8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AEDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AEE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AEE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AEE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AEEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AEF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AEF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AEF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AEFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1AF38);
	op_stkvar	(x,	1);
	set_name	(0X1AF38,	"Usbupdate_RegisterChannel");
	create_insn	(x=0X1AF44);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF48);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF64);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AF6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF78);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AF7C);
	op_stkvar	(x,	1);
	create_dword	(x=0X1AF90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1AF94);
	set_name	(0X1AF94,	"UsbInit");
	create_insn	(x=0X1AFA0);
	op_stkvar	(x,	1);
	set_cmt	(0X1AFA4,	"s",	0);
	create_insn	(x=0X1AFA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AFAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AFB4);
	op_stkvar	(x,	1);
	set_cmt	(0X1AFB8,	"command",	0);
	create_insn	(x=0X1AFC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AFC8);
	op_stkvar	(x,	1);
	set_cmt	(0X1AFCC,	"s",	0);
	create_insn	(x=0X1AFD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AFD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AFDC);
	op_stkvar	(x,	1);
	set_cmt	(0X1AFE0,	"command",	0);
	create_insn	(x=0X1AFEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AFF0);
	op_stkvar	(x,	1);
	create_dword	(x=0X1B000);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B004);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B008);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B00C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1B010);
	set_name	(0X1B010,	"UsbDel");
	create_insn	(x=0X1B01C);
	op_stkvar	(x,	1);
	set_cmt	(0X1B020,	"s",	0);
	create_insn	(x=0X1B024);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B028);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B030);
	op_stkvar	(x,	1);
	set_cmt	(0X1B034,	"command",	0);
	create_insn	(x=0X1B03C);
	op_stkvar	(x,	1);
	set_cmt	(0X1B040,	"s",	0);
	create_insn	(x=0X1B044);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B048);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B050);
	op_stkvar	(x,	1);
	set_cmt	(0X1B054,	"command",	0);
	create_dword	(x=0X1B064);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B068);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B06C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1B070);
	set_name	(0X1B070,	"IfUsbStorageExist");
	create_insn	(x=0X1B07C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B094);
	op_stkvar	(x,	1);
	create_insn	(0X1B09C);
	create_insn	(x=0X1B0A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B0A4);
	op_stkvar	(x,	1);
	create_dword	(x=0X1B0B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1B0B8);
	set_name	(0X1B0B8,	"IfUsbPartitionsExist");
	create_insn	(x=0X1B0D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B0E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B0E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B0F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B0F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B104);
	op_stkvar	(x,	1);
	create_insn	(0X1B10C);
	create_insn	(x=0X1B110);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B118);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B124);
	op_stkvar	(x,	1);
	set_cmt	(0X1B128,	"haystack",	0);
	create_insn	(x=0X1B12C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B144);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B14C);
	op_stkvar	(x,	1);
	set_cmt	(0X1B150,	"haystack",	0);
	create_insn	(x=0X1B154);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B16C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B174);
	op_stkvar	(x,	1);
	set_cmt	(0X1B178,	"s",	0);
	set_cmt	(0X1B17C,	"n",	0);
	set_cmt	(0X1B180,	"stream",	0);
	create_insn	(x=0X1B180);
	op_stkvar	(x,	1);
	set_cmt	(0X1B194,	"stream",	0);
	create_insn	(x=0X1B194);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B19C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B1A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B1B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B1B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B1C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B1C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B1D4);
	op_stkvar	(x,	1);
	create_insn	(0X1B1DC);
	create_insn	(x=0X1B1E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B1E4);
	op_stkvar	(x,	1);
	create_dword	(x=0X1B1F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B1F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B1FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B200);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B204);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B208);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B20C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1B210);
	set_name	(0X1B210,	"Usbupdate_InitResultFile");
	create_insn	(x=0X1B21C);
	op_stkvar	(x,	1);
	set_cmt	(0X1B224,	"s",	0);
	create_insn	(x=0X1B228);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B22C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B234);
	op_stkvar	(x,	1);
	set_cmt	(0X1B23C,	"command",	0);
	create_dword	(x=0X1B24C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B250);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1B254);
	set_name	(0X1B254,	"Usbupdate_PrintResultFile");
	create_insn	(x=0X1B264);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B268);
	op_stkvar	(x,	1);
	set_cmt	(0X1B270,	"s",	0);
	create_insn	(x=0X1B274);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B278);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B27C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B284);
	op_stkvar	(x,	1);
	set_cmt	(0X1B28C,	"command",	0);
	create_dword	(x=0X1B29C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B2A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1B2A4);
	set_name	(0X1B2A4,	"Usbupdate_SaveResultFile");
	create_insn	(x=0X1B2B0);
	op_stkvar	(x,	1);
	set_cmt	(0X1B2B8,	"s",	0);
	create_insn	(x=0X1B2BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B2C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B2C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B2CC);
	op_stkvar	(x,	1);
	set_cmt	(0X1B2D4,	"command",	0);
	create_insn	(x=0X1B2DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X1B2EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B2F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B2F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B2F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1B2FC);
	set_name	(0X1B2FC,	"Usbupdate_InitLog");
	create_insn	(x=0X1B30C);
	op_stkvar	(x,	1);
	set_cmt	(0X1B318,	"tv",	0);
	set_cmt	(0X1B31C,	"tz",	0);
	create_insn	(x=0X1B324);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B328);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B32C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B334);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B338);
	op_stkvar	(x,	1);
	set_cmt	(0X1B33C,	"s",	0);
	create_insn	(x=0X1B340);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B350);
	op_stkvar	(x,	1);
	set_cmt	(0X1B358,	"command",	0);
	create_dword	(x=0X1B368);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B36C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1B370);
	set_name	(0X1B370,	"Usbupdate_PrintLog");
	create_insn	(x=0X1B380);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B384);
	op_stkvar	(x,	1);
	set_cmt	(0X1B390,	"tv",	0);
	set_cmt	(0X1B394,	"tz",	0);
	create_insn	(x=0X1B39C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B3A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B3A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B3AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B3B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B3B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B3B8);
	op_stkvar	(x,	1);
	set_cmt	(0X1B3BC,	"s",	0);
	create_insn	(x=0X1B3C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B3D0);
	op_stkvar	(x,	1);
	set_cmt	(0X1B3D8,	"command",	0);
	create_dword	(x=0X1B3E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B3EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1B3F0);
	set_name	(0X1B3F0,	"Usbupdate_SaveLog");
	create_insn	(x=0X1B3FC);
	op_stkvar	(x,	1);
	set_cmt	(0X1B404,	"s",	0);
	create_insn	(x=0X1B408);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B40C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B410);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B418);
	op_stkvar	(x,	1);
	set_cmt	(0X1B420,	"command",	0);
	create_insn	(x=0X1B428);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X1B438);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B43C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B440);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B444);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1B448);
	set_name	(0X1B448,	"Usbupdatecheck_RemoveLocalFile");
	create_insn	(x=0X1B45C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B464);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B468);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B494);
	op_stkvar	(x,	1);
	set_cmt	(0X1B4A0,	"s",	0);
	create_insn	(x=0X1B4A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B4AC);
	op_stkvar	(x,	1);
	set_cmt	(0X1B4B8,	"command",	0);
	create_insn	(x=0X1B4C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B4C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B4CC);
	op_stkvar	(x,	1);
	create_dword	(x=0X1B4E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B4E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1B4E8);
	set_name	(0X1B4E8,	"Usbupdatecheck_IsDebugMode");
	create_insn	(x=0X1B4F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B50C);
	op_stkvar	(x,	1);
	create_insn	(0X1B514);
	create_insn	(x=0X1B518);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B51C);
	op_stkvar	(x,	1);
	create_dword	(x=0X1B52C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1B530);
	set_name	(0X1B530,	"Usbupdate_IsFileExtension");
	create_insn	(x=0X1B53C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B540);
	op_stkvar	(x,	1);
	set_cmt	(0X1B544,	"s",	0);
	create_insn	(x=0X1B544);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B550);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B554);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B558);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B560);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B564);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B578);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B57C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B58C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B594);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B59C);
	op_stkvar	(x,	1);
	set_cmt	(0X1B5A4,	"s1",	0);
	set_cmt	(0X1B5A8,	"s2",	0);
	create_insn	(x=0X1B5A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B5C0);
	op_stkvar	(x,	1);
	create_insn	(0X1B5C8);
	create_insn	(x=0X1B5CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B5D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B5DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B5E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B5F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B5F4);
	op_stkvar	(x,	1);
	create_insn	(0X1B604);
	set_name	(0X1B604,	"Usbupdate_ParseEncFile");
	create_insn	(x=0X1B610);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B614);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B618);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B620);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B628);
	op_stkvar	(x,	1);
	set_cmt	(0X1B62C,	"pFile",	0);
	create_insn	(x=0X1B62C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B638);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B63C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B64C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B654);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B664);
	op_stkvar	(x,	1);
	set_cmt	(0X1B66C,	"file",	0);
	create_insn	(x=0X1B66C);
	op_stkvar	(x,	1);
	set_cmt	(0X1B670,	"oflag",	0);
	create_insn	(x=0X1B67C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B680);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B690);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B698);
	op_stkvar	(x,	1);
	set_cmt	(0X1B69C,	"size",	0);
	create_insn	(x=0X1B6A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B6AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B6BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B6C4);
	op_stkvar	(x,	1);
	set_cmt	(0X1B6C8,	"fd",	0);
	create_insn	(x=0X1B6C8);
	op_stkvar	(x,	1);
	set_cmt	(0X1B6CC,	"buf",	0);
	create_insn	(x=0X1B6CC);
	op_stkvar	(x,	1);
	set_cmt	(0X1B6D0,	"nbytes",	0);
	create_insn	(x=0X1B6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B6E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B6E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B6F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B6FC);
	op_stkvar	(x,	1);
	set_cmt	(0X1B704,	"pucMD5",	0);
	create_insn	(x=0X1B704);
	op_stkvar	(x,	1);
	set_cmt	(0X1B708,	"pucData",	0);
	create_insn	(x=0X1B708);
	op_stkvar	(x,	1);
	set_cmt	(0X1B70C,	"ulLen",	0);
	create_insn	(x=0X1B714);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B71C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B724);
	op_stkvar	(x,	1);
	set_cmt	(0X1B728,	"s1",	0);
	set_cmt	(0X1B72C,	"s2",	0);
	set_cmt	(0X1B730,	"n",	0);
	create_insn	(x=0X1B748);
	op_stkvar	(x,	1);
	set_cmt	(0X1B750,	"dest",	0);
	create_insn	(x=0X1B750);
	op_stkvar	(x,	1);
	set_cmt	(0X1B754,	"src",	0);
	create_insn	(x=0X1B754);
	op_stkvar	(x,	1);
	set_cmt	(0X1B758,	"n",	0);
	create_insn	(x=0X1B760);
	op_stkvar	(x,	1);
	set_cmt	(0X1B764,	"crc",	0);
	set_cmt	(0X1B768,	"pchMessage",	0);
	set_cmt	(0X1B76C,	"dwLength",	0);
	create_insn	(x=0X1B778);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B77C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B798);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B7A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B7B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B7B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B7C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B7D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B7D8);
	op_stkvar	(x,	1);
	set_cmt	(0X1B7E0,	"pcFileName",	0);
	create_insn	(x=0X1B7E0);
	op_stkvar	(x,	1);
	set_cmt	(0X1B7E4,	"pData",	0);
	set_cmt	(0X1B7E8,	"ulLen",	0);
	create_insn	(x=0X1B800);
	op_stkvar	(x,	1);
	set_cmt	(0X1B804,	"ptr",	0);
	create_insn	(x=0X1B804);
	op_stkvar	(x,	1);
	set_cmt	(0X1B80C,	"fd",	0);
	create_insn	(x=0X1B80C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B814);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B818);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B81C);
	op_stkvar	(x,	1);
	create_dword	(0X1B82C);
	create_insn	(0X1B830);
	set_name	(0X1B830,	"Usbupdatecheck_Search_Fw");
	create_insn	(x=0X1B83C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B840);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B844);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B848);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B84C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B85C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B880);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B88C);
	op_stkvar	(x,	1);
	set_cmt	(0X1B890,	"name",	0);
	create_insn	(x=0X1B890);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B89C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B8A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B8B8);
	op_stkvar	(x,	1);
	set_cmt	(0X1B8BC,	"s",	0);
	create_insn	(x=0X1B8C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B8C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B8D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B8D4);
	op_stkvar	(x,	1);
	set_cmt	(0X1B8D8,	"filename",	0);
	set_cmt	(0X1B8DC,	"stat_buf",	0);
	create_insn	(x=0X1B8E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B8E8);
	op_hex		(x,	1);
	create_insn	(x=0X1B8F4);
	op_stkvar	(x,	1);
	set_cmt	(0X1B8F8,	"s",	0);
	create_insn	(x=0X1B8FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B900);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B908);
	op_stkvar	(x,	1);
	set_cmt	(0X1B910,	"format",	0);
	create_insn	(x=0X1B910);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B914);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B91C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B924);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B928);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B92C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B930);
	op_stkvar	(x,	1);
	set_cmt	(0X1B934,	"s",	0);
	create_insn	(x=0X1B948);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B94C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B958);
	op_stkvar	(x,	1);
	set_cmt	(0X1B95C,	"s1",	0);
	create_insn	(x=0X1B960);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B974);
	op_stkvar	(x,	1);
	set_cmt	(0X1B978,	"s",	0);
	create_insn	(x=0X1B97C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B980);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B988);
	op_stkvar	(x,	1);
	set_cmt	(0X1B990,	"format",	0);
	create_insn	(x=0X1B990);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B994);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B99C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B9A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B9A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B9AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B9B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B9B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B9B8);
	op_stkvar	(x,	1);
	set_cmt	(0X1B9BC,	"s",	0);
	create_insn	(x=0X1B9D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B9D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B9E0);
	op_stkvar	(x,	1);
	set_cmt	(0X1B9E4,	"s1",	0);
	create_insn	(x=0X1B9E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B9FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA00);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA04);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA08);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA10);
	op_hex		(x,	1);
	create_insn	(x=0X1BA14);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA24);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA34);
	op_hex		(x,	1);
	create_insn	(x=0X1BA3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA44);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA48);
	op_hex		(x,	1);
	create_insn	(x=0X1BA50);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA58);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA5C);
	op_hex		(x,	1);
	create_insn	(x=0X1BA64);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA74);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA78);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA84);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA90);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BA94);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BAA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BAA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BAA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BAB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BAB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BAE4);
	op_stkvar	(x,	1);
	set_cmt	(0X1BAE8,	"dest",	0);
	set_cmt	(0X1BAEC,	"src",	0);
	create_insn	(x=0X1BAF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BB18);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BB20);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BB28);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BB34);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BB3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BB44);
	op_stkvar	(x,	1);
	set_cmt	(0X1BB50,	"dirp",	0);
	create_insn	(x=0X1BB50);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BB5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BB60);
	op_stkvar	(x,	1);
	set_cmt	(0X1BB6C,	"dirp",	0);
	create_insn	(x=0X1BB6C);
	op_stkvar	(x,	1);
	create_dword	(x=0X1BB7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1BB80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1BB84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1BB88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1BB8C);
	set_name	(0X1BB8C,	"Usbupdatecheck_Create_Single_Fw");
	create_insn	(x=0X1BB98);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BBA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BBA8);
	op_stkvar	(x,	1);
	set_cmt	(0X1BBAC,	"file",	0);
	create_insn	(x=0X1BBAC);
	op_stkvar	(x,	1);
	set_cmt	(0X1BBB0,	"oflag",	0);
	create_insn	(x=0X1BBBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BBC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BBD0);
	op_stkvar	(x,	1);
	set_cmt	(0X1BBD8,	"file",	0);
	create_insn	(x=0X1BBD8);
	op_stkvar	(x,	1);
	set_cmt	(0X1BBDC,	"oflag",	0);
	create_insn	(x=0X1BBEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BBF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BC00);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BC08);
	op_stkvar	(x,	1);
	set_cmt	(0X1BC34,	"fd",	0);
	create_insn	(x=0X1BC34);
	op_stkvar	(x,	1);
	set_cmt	(0X1BC38,	"offset",	0);
	set_cmt	(0X1BC3C,	"whence",	0);
	create_insn	(x=0X1BC48);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BC4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BC50);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BC88);
	op_stkvar	(x,	1);
	create_insn	(0X1BC90);
	create_insn	(x=0X1BC94);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BC9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BCCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BCD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BCD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BCE8);
	op_stkvar	(x,	1);
	set_cmt	(0X1BCEC,	"nbytes",	0);
	create_insn	(x=0X1BCEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BCF0);
	op_stkvar	(x,	1);
	set_cmt	(0X1BCF4,	"fd",	0);
	create_insn	(x=0X1BCF4);
	op_stkvar	(x,	1);
	set_cmt	(0X1BCF8,	"buf",	0);
	create_insn	(x=0X1BD04);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD08);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD1C);
	op_stkvar	(x,	1);
	set_cmt	(0X1BD24,	"n",	0);
	create_insn	(x=0X1BD24);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD28);
	op_stkvar	(x,	1);
	set_cmt	(0X1BD2C,	"fd",	0);
	create_insn	(x=0X1BD2C);
	op_stkvar	(x,	1);
	set_cmt	(0X1BD30,	"buf",	0);
	create_insn	(x=0X1BD3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD40);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD44);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD54);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD60);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD68);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD70);
	op_stkvar	(x,	1);
	set_cmt	(0X1BDA4,	"fd",	0);
	create_insn	(x=0X1BDA4);
	op_stkvar	(x,	1);
	set_cmt	(0X1BDAC,	"fd",	0);
	create_insn	(x=0X1BDAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BDB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1BDBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BDC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BDC4);
	op_stkvar	(x,	1);
	create_dword	(0X1BDD4);
	create_dword	(0X1BDD8);
	create_dword	(x=0X1BDDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1BDE0);
	set_name	(0X1BDE0,	"Usbupdatecheck_CreateAndCheck_Single_Fw");
	create_insn	(x=0X1BDEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BDF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BDF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BDFC);
	op_stkvar	(x,	1);
	set_cmt	(0X1BE04,	"pcFwFile",	0);
	create_insn	(x=0X1BE04);
	op_stkvar	(x,	1);
	set_cmt	(0X1BE08,	"pFirmwareDesc",	0);
	create_insn	(x=0X1BE08);
	op_stkvar	(x,	1);
	set_cmt	(0X1BE0C,	"pcCreateFile",	0);
	create_insn	(x=0X1BE0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BE20);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BE28);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BE2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BE38);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BE44);
	op_stkvar	(x,	1);
	set_cmt	(0X1BE48,	"pcFilePath",	0);
	create_insn	(x=0X1BE48);
	op_stkvar	(x,	1);
	set_cmt	(0X1BE4C,	"pucMD5",	0);
	create_insn	(x=0X1BE54);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BE5C);
	op_stkvar	(x,	1);
	set_cmt	(0X1BE60,	"s1",	0);
	set_cmt	(0X1BE64,	"s2",	0);
	set_cmt	(0X1BE68,	"n",	0);
	create_insn	(x=0X1BE80);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BE88);
	op_stkvar	(x,	1);
	set_cmt	(0X1BE8C,	"s",	0);
	create_insn	(x=0X1BE90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1BE94);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BE9C);
	op_stkvar	(x,	1);
	set_cmt	(0X1BEA0,	"command",	0);
	create_insn	(x=0X1BEAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BEB0);
	op_stkvar	(x,	1);
	create_dword	(x=0X1BEC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1BEC4);
	set_name	(0X1BEC4,	"Usbupdatecheck_Parse_FwFileHead");
	create_insn	(x=0X1BED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BEDC);
	op_stkvar	(x,	1);
	set_cmt	(0X1BEE0,	"s",	0);
	create_insn	(x=0X1BEE0);
	op_stkvar	(x,	1);
	set_cmt	(0X1BEE4,	"c",	0);
	set_cmt	(0X1BEE8,	"n",	0);
	create_insn	(x=0X1BEE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1BEF0);
	op_stkvar	(x,	1);
	set_cmt	(0X1BEF4,	"pFile",	0);
	create_insn	(x=0X1BF00);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BF04);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BF14);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BF1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BF2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BF34);
	op_stkvar	(x,	1);
	set_cmt	(0X1BF38,	"file",	0);
	set_cmt	(0X1BF3C,	"oflag",	0);
	create_insn	(x=0X1BF48);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BF4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BF5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BF64);
	op_stkvar	(x,	1);
	set_cmt	(0X1BF68,	"fd",	0);
	create_insn	(x=0X1BF68);
	op_stkvar	(x,	1);
	set_cmt	(0X1BF6C,	"buf",	0);
	set_cmt	(0X1BF70,	"nbytes",	0);
	create_insn	(x=0X1BF7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BF80);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BF90);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BF98);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BFD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BFF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C018);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C024);
	op_stkvar	(x,	1);
	set_cmt	(0X1C02C,	"s1",	0);
	create_insn	(x=0X1C030);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C044);
	op_stkvar	(x,	1);
	set_cmt	(0X1C04C,	"s1",	0);
	create_insn	(x=0X1C050);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C068);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C070);
	op_stkvar	(x,	1);
	set_cmt	(0X1C08C,	"size",	0);
	create_insn	(x=0X1C098);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C09C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C0AC);
	op_stkvar	(x,	1);
	set_cmt	(0X1C0B4,	"fd",	0);
	create_insn	(x=0X1C0B4);
	op_stkvar	(x,	1);
	set_cmt	(0X1C0B8,	"offset",	0);
	set_cmt	(0X1C0BC,	"whence",	0);
	create_insn	(x=0X1C0C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C0CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C0DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C0E4);
	op_stkvar	(x,	1);
	set_cmt	(0X1C100,	"fd",	0);
	create_insn	(x=0X1C100);
	op_stkvar	(x,	1);
	set_cmt	(0X1C104,	"buf",	0);
	create_insn	(x=0X1C104);
	op_stkvar	(x,	1);
	set_cmt	(0X1C108,	"nbytes",	0);
	create_insn	(x=0X1C114);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C118);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C138);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C148);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C150);
	op_stkvar	(x,	1);
	set_cmt	(0X1C170,	"crc",	0);
	set_cmt	(0X1C174,	"pchMessage",	0);
	create_insn	(x=0X1C174);
	op_stkvar	(x,	1);
	set_cmt	(0X1C178,	"dwLength",	0);
	create_insn	(x=0X1C184);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C188);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C1A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C1B0);
	op_stkvar	(x,	1);
	set_cmt	(0X1C1B4,	"pOut",	0);
	set_cmt	(0X1C1B8,	"pIn",	0);
	create_insn	(x=0X1C1C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C1C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C1D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C1DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C204);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C20C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C248);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C270);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C278);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C2A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C2A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C2D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C2E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C2E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C2F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C310);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C328);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C340);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C358);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C384);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C388);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C3B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C3C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C3C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C3D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C3D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C3D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C3F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C408);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C420);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C438);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C468);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C478);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C4A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C4B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C4B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C4C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C4C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C4D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C4DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C4E4);
	op_stkvar	(x,	1);
	set_cmt	(0X1C504,	"dest",	0);
	set_cmt	(0X1C508,	"src",	0);
	create_insn	(x=0X1C508);
	op_stkvar	(x,	1);
	set_cmt	(0X1C50C,	"n",	0);
	create_insn	(x=0X1C514);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C51C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C520);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C528);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C52C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C54C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C55C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C564);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C568);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C5BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C5C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C5CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C620);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C62C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C630);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C684);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C688);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C6EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C6F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C700);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C708);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C75C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C764);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C7B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C7BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C818);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C820);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C828);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C82C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C84C);
	op_stkvar	(x,	1);
	set_cmt	(0X1C858,	"ptr",	0);
	create_insn	(x=0X1C858);
	op_stkvar	(x,	1);
	set_cmt	(0X1C860,	"fd",	0);
	create_insn	(x=0X1C860);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C868);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C86C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C870);
	op_stkvar	(x,	1);
	create_dword	(x=0X1C880);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1C884);
	create_dword	(x=0X1C888);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C88C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1C890);
	create_dword	(0X1C894);
	create_dword	(x=0X1C898);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C89C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1C8A0);
	set_name	(0X1C8A0,	"Usbupdatecheck_PrintResult_FwPacket");
	create_insn	(x=0X1C8AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C8C0);
	op_stkvar	(x,	1);
	set_cmt	(0X1C8CC,	"dest",	0);
	create_insn	(x=0X1C8D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1C8D4,	"n",	0);
	create_insn	(x=0X1C8E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C8E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C908);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C914);
	op_stkvar	(x,	1);
	set_cmt	(0X1C920,	"dest",	0);
	set_cmt	(0X1C924,	"src",	0);
	create_insn	(x=0X1C92C);
	op_stkvar	(x,	1);
	set_cmt	(0X1C938,	"dest",	0);
	create_insn	(x=0X1C93C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C944);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C94C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C950);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C954);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C960);
	op_stkvar	(x,	1);
	set_cmt	(0X1C96C,	"pcStr",	0);
	create_dword	(x=0X1C97C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C980);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1C984);
	set_name	(0X1C984,	"Usbupdatecheck_PrintResult_Forbid");
	create_insn	(x=0X1C98C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C994);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X1C9A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X1C9A0,	"pcStr");
	create_dword	(x=0X1C9A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1C9A8);
	set_name	(0X1C9A8,	"Usbupdatecheck_PrintResult_Corrupted");
	create_insn	(x=0X1C9B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C9B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X1C9C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C9C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1C9CC);
	set_name	(0X1C9CC,	"Usbupdatecheck_PrintResult_Abort");
	create_insn	(x=0X1C9D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C9DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X1C9E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C9EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1C9F0);
	set_name	(0X1C9F0,	"Usbupdatecheck_PrintResult_Error");
	create_insn	(x=0X1C9F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CA00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X1CA0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1CA10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1CA14);
	set_name	(0X1CA14,	"Usbupdatecheck_PrintResult_Prohibited");
	create_insn	(x=0X1CA1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CA24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X1CA30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1CA34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1CA38);
	set_name	(0X1CA38,	"Usbupdatecheck_PrintResult_Downgrade_Abort");
	create_insn	(x=0X1CA40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CA48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X1CA54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1CA58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1CA5C);
	set_name	(0X1CA5C,	"Usbupdatecheck_PrintResult_Success");
	create_insn	(x=0X1CA64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CA6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X1CA78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1CA7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1CA80);
	set_name	(0X1CA80,	"Usbupdatecheck_PrintResult_Failed");
	create_insn	(x=0X1CA88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CA90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CA98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X1CAA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1CAA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1CAAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1CAB0);
	op_stkvar	(x,	1);
	set_name	(0X1CAB0,	"Usbupdate_ResetFirmwareAttr");
	create_insn	(x=0X1CAC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CAC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CACC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CAFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CB00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CB30);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CB34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CB64);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CB68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CB98);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CB9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CBCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CBD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CBD8);
	op_stkvar	(x,	1);
	create_dword	(x=0X1CBF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1CBF4);
	set_name	(0X1CBF4,	"Usbupdatecheck_FwFile_ByIndex");
	create_insn	(x=0X1CC00);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CC04);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CC10);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CC14);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CC18);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CC1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CC48);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CC68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CC70);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CC74);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CC78);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CC9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CCA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CCD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CCD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CCDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CD08);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CD28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CD3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CD68);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CD6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CDA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CDA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CDCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CDD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CDD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CDDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CDE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CE34);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CE38);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CE3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CE60);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CE64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CE98);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CE9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CEDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CEE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CEE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CEE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CF1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF40);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CF44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CF9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CFA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CFAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CFE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1CFE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1D018);
	create_insn	(x=0X1D028);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D02C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D084);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D090);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D094);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D0C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D0CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1D100);
	create_insn	(x=0X1D110);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D114);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D16C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D178);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D17C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D1B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D1B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D20C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D218);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D21C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D250);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D25C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D260);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D294);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D298);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X1D2D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D2D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1D2D8);
	set_name	(0X1D2D8,	"Usbupdatecheck_FwFile");
	create_insn	(x=0X1D2E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D2F0);
	op_stkvar	(x,	1);
	set_cmt	(0X1D2F4,	"ulIndex",	0);
	create_insn	(x=0X1D2FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D304);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D308);
	op_stkvar	(x,	1);
	create_insn	(0X1D324);
	set_name	(0X1D324,	"Usbupdatecheck_SingleFile");
	create_insn	(x=0X1D334);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D33C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D340);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1D36C,	"pFile",	0);
	create_insn	(x=0X1D380);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D384);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D3B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D3D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D3D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D3DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D3E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D404);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D408);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D43C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D440);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D470);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D478);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D47C);
	op_stkvar	(x,	1);
	create_dword	(x=0X1D498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1D49C);
	set_name	(0X1D49C,	"Usbupdate_CheckType");
	create_insn	(x=0X1D4A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D4B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D4BC);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D4C0);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D4CC);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D4D8);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D4E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D4F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D500);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D508);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D514);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D520);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D530);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D534);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D538);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D544);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D550);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D55C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D57C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D588);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D594);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D5A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D5B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D5B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D5C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D5C8);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D5CC);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D5D8);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D5E4);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D5F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D5FC);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D608);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D614);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D628);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D634);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D640);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D644);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D648);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D654);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D660);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D670);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D678);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D684);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D690);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D6B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D6B8);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D6C4);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D6D0);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D6E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D6E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D6F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D6FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D704);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D714);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D718);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D724);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D730);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D73C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D74C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D754);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D758);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D75C);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D768);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D774);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D784);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D788);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D78C);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D798);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D7A4);
	op_plain_offset	(x,	1,	0X85988);
	op_plain_offset	(x,	129,	0X85988);
	create_insn	(x=0X1D7B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D7C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D7D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D7D4);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D7D8);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D7E4);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D7F0);
	op_plain_offset	(x,	1,	0X844F0);
	op_plain_offset	(x,	129,	0X844F0);
	create_insn	(x=0X1D804);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D808);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D818);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D81C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D824);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D834);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D838);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D844);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D854);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D85C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D868);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D874);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D878);
	op_stkvar	(x,	1);
	create_dword	(x=0X1D888);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D88C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D890);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D894);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D898);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D89C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D8A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D8A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D8A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1D8AC);
	create_dword	(x=0X1D8B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D8B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D8B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1D8BC);
	op_stkvar	(x,	1);
	set_name	(0X1D8BC,	"Usbupdate_GetType");
	create_insn	(x=0X1D8C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X1D8DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1D8E0);
	set_name	(0X1D8E0,	"Usbupdate_InitFile");
	create_insn	(x=0X1D900);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D90C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1D910,	"pulFwNums",	0);
	create_insn	(x=0X1D910);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D914);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1D918,	"pulMaxVersionIndex",	0);
	create_insn	(x=0X1D918);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D91C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D920);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1D924,	"pcFwFile",	0);
	create_insn	(x=0X1D924);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1D928,	"ulFwFileMax",	0);
	create_insn	(x=0X1D940);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1D948,	"pcFwFile",	0);
	create_insn	(x=0X1D948);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1D94C,	"ulFwFileNums",	0);
	create_insn	(x=0X1D954);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D964);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D974);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D998);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1D9A0,	"pcFile",	0);
	set_cmt	(0X1D9A4,	"ptHead",	0);
	create_insn	(x=0X1D9A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D9B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1D9C8);
	create_insn	(x=0X1D9D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1D9E4);
	create_insn	(x=0X1D9E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D9EC);
	op_stkvar	(x,	1);
	set_cmt	(0X1D9F8,	"dest",	0);
	create_insn	(x=0X1D9FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1DA00,	"n",	0);
	create_insn	(x=0X1DA0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DA14);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DA18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1DA44,	"pFile",	0);
	create_insn	(x=0X1DA58);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DA5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DA88);
	op_stkvar	(x,	1);
	set_cmt	(0X1DA94,	"dest",	0);
	set_cmt	(0X1DA98,	"src",	0);
	create_insn	(x=0X1DAA0);
	op_stkvar	(x,	1);
	set_cmt	(0X1DAAC,	"dest",	0);
	create_insn	(x=0X1DAB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DAC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DAC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DAD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DAE4);
	op_stkvar	(x,	1);
	set_cmt	(0X1DAF0,	"pcStr",	0);
	create_insn	(x=0X1DAFC);
	op_stkvar	(x,	1);
	create_insn	(0X1DB04);
	create_insn	(x=0X1DB10);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DB14);
	op_stkvar	(x,	1);
	create_dword	(x=0X1DB24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X1DB24,	"pulFwNums");
	create_dword	(x=0X1DB28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X1DB28,	"pulMaxVersionIndex");
	create_dword	(x=0X1DB2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X1DB2C,	"pcDir");
	create_dword	(x=0X1DB30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X1DB30,	"pPrefix");
	create_dword	(x=0X1DB34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X1DB34,	"pcFwFile");
	create_dword	(x=0X1DB38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1DB3C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X1DB3C,	"ptHead");
	create_dword	(x=0X1DB40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1DB44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1DB48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1DB4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1DB50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1DB54);
	set_name	(0X1DB54,	"Usbupdatecheck_CheckFile");
	create_insn	(x=0X1DB74);
	op_stkvar	(x,	1);
	create_insn	(0X1DB7C);
	create_insn	(x=0X1DB8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DB9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DBAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DBB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DBBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DBC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DBCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DBD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DC04);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DC08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DC2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DC3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DC44);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DC48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DC7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DC80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DCA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DCB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DCBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DCC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DCF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DCF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DD1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DD2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DD34);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DD38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DD5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DD68);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DD70);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DD74);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DD80);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DD90);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DD98);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DDA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DDB0);
	op_stkvar	(x,	1);
	create_insn	(0X1DDC4);
	create_insn	(x=0X1DDD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DDDC);
	op_stkvar	(x,	1);
	create_dword	(x=0X1DDEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1DDF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1DDF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1DDF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1DDFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1DE00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1DE04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1DE08);
	op_stkvar	(x,	1);
	set_name	(0X1DE08,	"Usbupdate_Is_FwPacket");
	create_insn	(x=0X1DE10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X1DE34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1DE38);
	set_name	(0X1DE38,	"Usbupdate_Deal_All");
	create_insn	(x=0X1DE5C);
	op_stkvar	(x,	1);
	create_insn	(0X1DE64);
	create_insn	(x=0X1DE68);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DE70);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DE78);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DE7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DEB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DEB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DEE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DEEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DF18);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DF1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DF50);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DF54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DF84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DFB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DFC8);
	op_stkvar	(x,	1);
	set_cmt	(0X1DFCC,	"ulIndex",	0);
	create_insn	(x=0X1DFD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1DFD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E00C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E02C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E034);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E038);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E064);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E068);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1E094,	"pcFwFile",	0);
	set_cmt	(0X1E098,	"pFirmwareDesc",	0);
	set_cmt	(0X1E09C,	"pcCreateFile",	0);
	create_insn	(x=0X1E0B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E0B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E0E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E0EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E11C);
	op_hex		(x,	1);
	create_insn	(x=0X1E128);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E12C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E130);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E164);
	op_hex		(x,	1);
	create_insn	(x=0X1E16C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E19C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E1BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E1C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E1CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1E1FC,	"dest",	0);
	set_cmt	(0X1E200,	"src",	0);
	set_cmt	(0X1E204,	"n",	0);
	create_insn	(x=0X1E210);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E214);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1E240,	"pFile",	0);
	create_insn	(x=0X1E254);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E258);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E288);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E28C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1E2B8,	"pcFile",	0);
	create_insn	(x=0X1E2BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E2D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E2D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E300);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E304);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E328);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E32C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1E354,	"pcFileOut",	0);
	create_insn	(x=0X1E358);
	op_stkvar	(x,	1);
	set_cmt	(0X1E360,	"ptHeader",	0);
	set_cmt	(0X1E364,	"pcFileIn",	0);
	set_cmt	(0X1E368,	"ucID",	0);
	create_insn	(x=0X1E37C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E380);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E3B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E3B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E3BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E3EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E40C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E418);
	op_stkvar	(x,	1);
	set_cmt	(0X1E428,	"dest",	0);
	set_cmt	(0X1E42C,	"src",	0);
	set_cmt	(0X1E430,	"n",	0);
	create_insn	(x=0X1E43C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E440);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E46C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E470);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E49C);
	op_stkvar	(x,	1);
	set_cmt	(0X1E4A8,	"s",	0);
	create_insn	(x=0X1E4AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E4BC);
	op_stkvar	(x,	1);
	set_cmt	(0X1E4C8,	"command",	0);
	create_insn	(x=0X1E4DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E4E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E514);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E518);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E54C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E550);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E578);
	op_stkvar	(x,	1);
	set_cmt	(0X1E584,	"s",	0);
	create_insn	(x=0X1E588);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E590);
	op_stkvar	(x,	1);
	set_cmt	(0X1E59C,	"pcStr",	0);
	create_insn	(x=0X1E5A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E5C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1E5D0,	"pFirmwareAttr",	0);
	create_insn	(x=0X1E5D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E5DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E5E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E60C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E62C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E634);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E654);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E66C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E698);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E6B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1E6C0,	"pFirmwareAttr",	0);
	create_insn	(x=0X1E6C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E6CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1E6F8,	"seconds",	0);
	create_insn	(x=0X1E704);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E708);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E734);
	op_stkvar	(x,	1);
	set_cmt	(0X1E740,	"s",	0);
	create_insn	(x=0X1E744);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E74C);
	op_stkvar	(x,	1);
	set_cmt	(0X1E758,	"command",	0);
	create_insn	(x=0X1E760);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E764);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E798);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E79C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E7C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E7D4);
	op_stkvar	(x,	1);
	set_cmt	(0X1E7E0,	"dest",	0);
	create_insn	(x=0X1E7E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1E7E8,	"n",	0);
	create_insn	(x=0X1E7F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E7F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E824);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E830);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E834);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E860);
	op_stkvar	(x,	1);
	set_cmt	(0X1E86C,	"s",	0);
	create_insn	(x=0X1E870);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E878);
	op_stkvar	(x,	1);
	set_cmt	(0X1E884,	"pcStr",	0);
	create_insn	(x=0X1E88C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E894);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E898);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E8A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E8B8);
	op_stkvar	(x,	1);
	create_dword	(x=0X1E8C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E8CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E8D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E8D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X1E8D4,	"pcExtension");
	create_dword	(x=0X1E8D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E8DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E8E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E8E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E8E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E8EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E8F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1E8F4);
	op_stkvar	(x,	1);
	set_name	(0X1E8F4,	"Usbupdate_Check_Result");
	create_insn	(x=0X1E904);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E90C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E910);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E948);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E950);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E954);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E988);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E98C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E9C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E9CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E9D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E9D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E9E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E9EC);
	op_stkvar	(x,	1);
	create_dword	(x=0X1EA00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1EA04);
	set_name	(0X1EA04,	"Para_Get");
	create_insn	(x=0X1EA10);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EA14);
	op_stkvar	(x,	1);
	set_cmt	(0X1EA18,	"mutex",	0);
	create_insn	(x=0X1EA18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EA20);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EA24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EA2C);
	op_stkvar	(x,	1);
	set_cmt	(0X1EA34,	"mutex",	0);
	create_insn	(x=0X1EA34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X1EA4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1EA50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1EA54);
	set_name	(0X1EA54,	"Para_Set");
	create_insn	(x=0X1EA60);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EA64);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EA68);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EA70);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EA74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EAA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EAA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EAAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EAD4);
	op_stkvar	(x,	1);
	set_cmt	(0X1EADC,	"mutex",	0);
	create_insn	(x=0X1EADC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EAE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EAE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EAF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB00);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB04);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EB18);
	op_stkvar	(x,	1);
	create_insn	(0X1EB20);
	create_insn	(x=0X1EB24);
	op_stkvar	(x,	1);
	set_cmt	(0X1EB28,	"mutex",	0);
	create_insn	(x=0X1EB28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EB30);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB44);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB48);
	op_stkvar	(x,	1);
	create_dword	(x=0X1EB58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1EB5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1EB60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1EB64);
	set_name	(0X1EB64,	"Para_Init");
	create_insn	(x=0X1EB70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EB74);
	op_stkvar	(x,	1);
	set_cmt	(0X1EB80,	"pMutex",	0);
	create_insn	(x=0X1EB80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EB8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EBA0);
	op_stkvar	(x,	1);
	set_cmt	(0X1EBB0,	"pcFileName",	0);
	set_cmt	(0X1EBB4,	"pData",	0);
	create_insn	(x=0X1EBB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1EBB8,	"ulLen",	0);
	create_insn	(x=0X1EBDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EBE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EBE8);
	op_stkvar	(x,	1);
	create_dword	(x=0X1EC00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1EC04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1EC08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X1EC08,	"pData");
	create_insn	(0X1EC0C);
	set_name	(0X1EC0C,	"Para_Load_Default");
	create_insn	(x=0X1EC1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC24);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC28);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EC50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EC58);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC60);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EC64);
	op_stkvar	(x,	1);
	create_dword	(x=0X1EC7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1EC80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1EC84);
	set_name	(0X1EC84,	"Para_Save");
	create_insn	(x=0X1EC8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1EC90,	"pData",	0);
	create_insn	(x=0X1EC90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1EC94,	"ulLen",	0);
	create_insn	(x=0X1EC9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1ECA0,	"pData",	0);
	create_insn	(x=0X1ECA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1ECA4,	"ulLen",	0);
	create_insn	(x=0X1ECAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X1ECB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1ECBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1ECC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1ECC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1ECC8);
	op_stkvar	(x,	1);
	set_name	(0X1ECC8,	"Para_Check_All");
	create_insn	(x=0X1ECD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ECE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ECE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ECEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ECF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ED1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ED28);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ED54);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED64);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED68);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED78);
	op_stkvar	(x,	1);
	create_insn	(x=0X1ED7C);
	op_stkvar	(x,	1);
	create_dword	(x=0X1ED90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1ED94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1ED98);
	set_name	(0X1ED98,	"MD5_Update");
	create_insn	(x=0X1EDA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EDA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EDAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EDB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EDB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EDB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EDC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EDD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EDD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EDE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EDE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EDF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EDFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE08);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE10);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE18);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE24);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE30);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE38);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE48);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE50);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE54);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE60);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE64);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE6C);
	op_hex		(x,	1);
	create_insn	(x=0X1EE70);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE74);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EE94);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EEA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EEA4);
	op_stkvar	(x,	1);
	set_cmt	(0X1EEA8,	"switch 4 cases ",	0);
	set_cmt	(0X1EEAC,	"switch jump",	0);
	set_cmt	(0X1EEB4,	"jump table for switch statement",	0);
	create_dword	(x=0X1EEB4);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X1EEC4,	"jumptable 0001EEAC case 0",	1);
	create_insn	(x=0X1EEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EED8);
	op_stkvar	(x,	1);
	set_cmt	(0X1EEDC,	"jumptable 0001EEAC case 1",	1);
	create_insn	(x=0X1EEDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EEE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EEF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EEFC);
	op_stkvar	(x,	1);
	set_cmt	(0X1EF00,	"jumptable 0001EEAC case 2",	1);
	create_insn	(x=0X1EF00);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF14);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF18);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF20);
	op_stkvar	(x,	1);
	set_cmt	(0X1EF24,	"jumptable 0001EEAC case 3",	1);
	create_insn	(x=0X1EF24);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF30);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF38);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF44);
	op_stkvar	(x,	1);
	set_cmt	(0X1EF48,	"jumptable 0001EEAC default case",	1);
	create_insn	(x=0X1EF48);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF50);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF58);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF60);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF68);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF70);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF78);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF84);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF88);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF94);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EF9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EFA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EFA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EFAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EFB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EFC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EFC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EFCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EFD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EFDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EFE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EFE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EFF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EFF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1EFFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F004);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F00C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F014);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F018);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F024);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F028);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F034);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F03C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F048);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F04C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F05C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F064);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F06C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F074);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F078);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F088);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F090);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F09C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F0A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F0A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F0A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F0B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F0C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F0D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F0D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F0DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F0E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F0E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F0F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F0F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F100);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F10C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F114);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F118);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F120);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F124);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F12C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F130);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F13C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F148);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F150);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F154);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F15C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F160);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F168);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F170);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F17C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F188);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F18C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F194);
	op_hex		(x,	1);
	create_insn	(x=0X1F198);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F19C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F1A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F1B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F1BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F1C0);
	op_stkvar	(x,	1);
	set_cmt	(0X1F1C4,	"switch 4 cases ",	0);
	set_cmt	(0X1F1C8,	"switch jump",	0);
	set_cmt	(0X1F1D0,	"jump table for switch statement",	0);
	create_dword	(x=0X1F1D0);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X1F1E0,	"jumptable 0001F1C8 case 0",	1);
	create_insn	(x=0X1F1E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F1E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F1EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F1F4);
	op_stkvar	(x,	1);
	set_cmt	(0X1F1F8,	"jumptable 0001F1C8 case 1",	1);
	create_insn	(x=0X1F1F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F204);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F20C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F210);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F218);
	op_stkvar	(x,	1);
	set_cmt	(0X1F21C,	"jumptable 0001F1C8 case 2",	1);
	create_insn	(x=0X1F21C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F228);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F230);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F234);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F23C);
	op_stkvar	(x,	1);
	set_cmt	(0X1F240,	"jumptable 0001F1C8 case 3",	1);
	create_insn	(x=0X1F240);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F24C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F254);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F258);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F260);
	op_stkvar	(x,	1);
	set_cmt	(0X1F264,	"jumptable 0001F1C8 default case",	1);
	create_insn	(x=0X1F264);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F26C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F274);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F27C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F284);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F28C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F294);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F298);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F300);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F304);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F30C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F310);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F318);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F320);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F328);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F330);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F334);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F338);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F344);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F354);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F358);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F35C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F364);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F368);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F36C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F370);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F37C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F388);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F398);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F3A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F3A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F3B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F3B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F3BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F3C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F3CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F3D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F3D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F3E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F3E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F3EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F3F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F3F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F400);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F408);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F414);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F41C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F424);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F428);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F434);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F438);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F43C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F444);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F44C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F450);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F454);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F45C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F460);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F464);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F46C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F470);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F47C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F484);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F488);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F48C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F494);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F49C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F4A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F4A4);
	op_hex		(x,	1);
	create_insn	(x=0X1F4A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F4B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F4B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F4BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F4C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F4C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F4D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F4DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F4E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F4E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F4EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F4F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F500);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F504);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F50C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F510);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F51C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F524);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F528);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F530);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F534);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F538);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F540);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F548);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F54C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F554);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F558);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F568);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F56C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F570);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F578);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F57C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F580);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F584);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F590);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F59C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F5AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F5B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F5B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F5C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F5C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F5D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F5D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F5E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F5E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F5EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F5F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F5F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F600);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F608);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F60C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F610);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F61C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F620);
	op_stkvar	(x,	1);
	create_insn	(0X1F630);
	set_name	(0X1F630,	"MD5_Transform");
	create_insn	(x=0X1F63C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F640);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F644);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F648);
	op_stkvar	(x,	1);
	create_insn	(0X1F65C);
	set_name	(0X1F65C,	"MD5_Final");
	create_insn	(x=0X1F668);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F66C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F670);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F674);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F678);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F680);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F684);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F690);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F694);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F69C);
	op_hex		(x,	1);
	create_insn	(x=0X1F6A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F6A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F6B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F6B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F6C4);
	op_stkvar	(x,	1);
	create_insn	(0X1F6CC);
	create_insn	(x=0X1F6D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F6D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F6D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F6DC);
	op_stkvar	(x,	1);
	set_cmt	(0X1F6E0,	"switch 4 cases ",	0);
	set_cmt	(0X1F6E4,	"switch jump",	0);
	set_cmt	(0X1F6EC,	"jump table for switch statement",	0);
	create_dword	(x=0X1F6EC);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X1F6FC,	"jumptable 0001F6E4 case 0",	1);
	create_insn	(x=0X1F6FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F704);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F708);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F710);
	op_stkvar	(x,	1);
	set_cmt	(0X1F714,	"jumptable 0001F6E4 case 1",	1);
	create_insn	(x=0X1F714);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F720);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F728);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F72C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F734);
	op_stkvar	(x,	1);
	set_cmt	(0X1F738,	"jumptable 0001F6E4 case 2",	1);
	create_insn	(x=0X1F738);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F744);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F74C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F750);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F758);
	op_stkvar	(x,	1);
	set_cmt	(0X1F75C,	"jumptable 0001F6E4 case 3",	1);
	create_insn	(x=0X1F75C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F768);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F770);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F774);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F77C);
	op_stkvar	(x,	1);
	set_cmt	(0X1F780,	"jumptable 0001F6E4 default case",	1);
	create_insn	(x=0X1F780);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F788);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F790);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F798);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F7A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F7A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F7B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F7BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F7C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F7D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F7D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F7E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F7F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F7F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F808);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F810);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F814);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F820);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F828);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F834);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F83C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F848);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F84C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F858);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F860);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F864);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F868);
	op_hex		(x,	1);
	create_insn	(x=0X1F86C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F874);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F87C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F880);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F888);
	op_hex		(x,	1);
	create_insn	(x=0X1F88C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F894);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F89C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F8A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F8A8);
	op_hex		(x,	1);
	create_insn	(x=0X1F8AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F8BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F8C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F8C8);
	op_hex		(x,	1);
	create_insn	(x=0X1F8CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F8D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F8DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F8E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F8E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F8EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F8F0);
	op_hex		(x,	1);
	create_insn	(x=0X1F8F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F8FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F904);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F908);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F910);
	op_hex		(x,	1);
	create_insn	(x=0X1F914);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F91C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F924);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F928);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F930);
	op_hex		(x,	1);
	create_insn	(x=0X1F934);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F93C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F944);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F948);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F950);
	op_hex		(x,	1);
	create_insn	(x=0X1F954);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F95C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F964);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F968);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F970);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F974);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F978);
	op_hex		(x,	1);
	create_insn	(x=0X1F97C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F984);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F98C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F990);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F998);
	op_hex		(x,	1);
	create_insn	(x=0X1F99C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F9A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F9AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F9B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F9B8);
	op_hex		(x,	1);
	create_insn	(x=0X1F9BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F9C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F9CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F9D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F9D8);
	op_hex		(x,	1);
	create_insn	(x=0X1F9DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F9E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F9EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F9F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F9F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1F9FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FA00);
	op_hex		(x,	1);
	create_insn	(x=0X1FA04);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FA0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FA14);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FA18);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FA20);
	op_hex		(x,	1);
	create_insn	(x=0X1FA24);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FA2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FA34);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FA38);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FA40);
	op_hex		(x,	1);
	create_insn	(x=0X1FA44);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FA4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FA54);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FA58);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FA60);
	op_hex		(x,	1);
	create_insn	(x=0X1FA64);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FA6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FA74);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FA78);
	op_stkvar	(x,	1);
	create_dword	(x=0X1FA94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1FA98);
	op_stkvar	(x,	1);
	set_name	(0X1FA98,	"MD5_Init");
	create_insn	(x=0X1FAA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FAA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FAB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FAC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FAD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FAE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FAF0);
	op_stkvar	(x,	1);
	create_dword	(0X1FB10);
	create_dword	(0X1FB14);
	create_dword	(0X1FB18);
	create_dword	(0X1FB1C);
	create_insn	(x=0X1FB20);
	op_stkvar	(x,	1);
	set_name	(0X1FB20,	"md5_block_host_order");
	create_insn	(x=0X1FB2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB30);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB34);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB38);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB40);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB48);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB54);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB58);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB60);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB64);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB74);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB80);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB88);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB90);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FBA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FBAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FBB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FBB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FBC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FBC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FBC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FBD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FBD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FBE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FBE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FBEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FBF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC00);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC10);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC18);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC24);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC28);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC34);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC38);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC44);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC48);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC50);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC58);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC64);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC70);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC74);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC80);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC88);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC90);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC98);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FC9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FCA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FCAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FCB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FCBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FCC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FCD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FCD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FCE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FCE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FCEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FCF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FCF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FCFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD00);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD10);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD18);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD20);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD38);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD44);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD48);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD50);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD54);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD58);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD60);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD64);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD70);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD74);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD84);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD90);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FDF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE00);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE04);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE10);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE18);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE20);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE28);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE38);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE44);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE58);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE64);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE68);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE70);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE74);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE80);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE84);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE90);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FE9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FEA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FEA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FEB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FEBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FEC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FEE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FEE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FEE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FEF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF00);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF04);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF14);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF20);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF30);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF38);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF44);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF48);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF54);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF58);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF64);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF68);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF70);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF78);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF84);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF90);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF94);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FFA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FFA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FFAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FFB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FFB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FFBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FFC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FFCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FFD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FFDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FFE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FFF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FFF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20000);
	op_stkvar	(x,	1);
	create_insn	(x=0X20004);
	op_stkvar	(x,	1);
	create_insn	(x=0X2000C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20010);
	op_stkvar	(x,	1);
	create_insn	(x=0X20014);
	op_stkvar	(x,	1);
	create_insn	(x=0X2001C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20020);
	op_stkvar	(x,	1);
	create_insn	(x=0X2002C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20030);
	op_stkvar	(x,	1);
	create_insn	(x=0X20038);
	op_stkvar	(x,	1);
	create_insn	(x=0X20040);
	op_stkvar	(x,	1);
	create_insn	(x=0X2004C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20058);
	op_stkvar	(x,	1);
	create_insn	(x=0X2005C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20064);
	op_stkvar	(x,	1);
	create_insn	(x=0X20068);
	op_stkvar	(x,	1);
	create_insn	(x=0X20070);
	op_stkvar	(x,	1);
	create_insn	(x=0X20074);
	op_stkvar	(x,	1);
	create_insn	(x=0X20078);
	op_stkvar	(x,	1);
	create_insn	(x=0X20080);
	op_stkvar	(x,	1);
	create_insn	(x=0X20084);
	op_stkvar	(x,	1);
	create_insn	(x=0X20090);
	op_stkvar	(x,	1);
	create_insn	(x=0X20094);
	op_stkvar	(x,	1);
	create_insn	(x=0X2009C);
	op_stkvar	(x,	1);
	create_insn	(x=0X200A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X200B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X200BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X200C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X200C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X200CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X200D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X200D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X200DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X200E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X200E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X200F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X200F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20100);
	op_stkvar	(x,	1);
	create_insn	(x=0X20108);
	op_stkvar	(x,	1);
	create_insn	(x=0X20114);
	op_stkvar	(x,	1);
	create_insn	(x=0X20120);
	op_stkvar	(x,	1);
	create_insn	(x=0X20124);
	op_stkvar	(x,	1);
	create_insn	(x=0X2012C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20130);
	op_stkvar	(x,	1);
	create_insn	(x=0X20138);
	op_stkvar	(x,	1);
	create_insn	(x=0X2013C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20140);
	op_stkvar	(x,	1);
	create_insn	(x=0X20148);
	op_stkvar	(x,	1);
	create_insn	(x=0X2014C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20158);
	op_stkvar	(x,	1);
	create_insn	(x=0X2015C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20164);
	op_stkvar	(x,	1);
	create_insn	(x=0X2016C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20178);
	op_stkvar	(x,	1);
	create_insn	(x=0X20184);
	op_stkvar	(x,	1);
	create_insn	(x=0X20188);
	op_stkvar	(x,	1);
	create_insn	(x=0X20190);
	op_stkvar	(x,	1);
	create_insn	(x=0X20194);
	op_stkvar	(x,	1);
	create_insn	(x=0X2019C);
	op_stkvar	(x,	1);
	create_insn	(x=0X201A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X201A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X201AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X201B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X201BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X201C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X201C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X201D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X201DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X201E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X201EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X201F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X201F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20200);
	op_stkvar	(x,	1);
	create_insn	(x=0X20204);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_6(void) {
        auto x;
#define id x

	create_insn	(x=0X20208);
	op_stkvar	(x,	1);
	create_insn	(x=0X20210);
	op_stkvar	(x,	1);
	create_insn	(x=0X20214);
	op_stkvar	(x,	1);
	create_insn	(x=0X20220);
	op_stkvar	(x,	1);
	create_insn	(x=0X20224);
	op_stkvar	(x,	1);
	create_insn	(x=0X2022C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20234);
	op_stkvar	(x,	1);
	create_insn	(x=0X20240);
	op_stkvar	(x,	1);
	create_insn	(x=0X2024C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20250);
	op_stkvar	(x,	1);
	create_insn	(x=0X20258);
	op_stkvar	(x,	1);
	create_insn	(x=0X2025C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20264);
	op_stkvar	(x,	1);
	create_insn	(x=0X20268);
	op_stkvar	(x,	1);
	create_insn	(x=0X2026C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20274);
	op_stkvar	(x,	1);
	create_insn	(x=0X20278);
	op_stkvar	(x,	1);
	create_insn	(x=0X20284);
	op_stkvar	(x,	1);
	create_insn	(x=0X20288);
	op_stkvar	(x,	1);
	create_insn	(x=0X20290);
	op_stkvar	(x,	1);
	create_insn	(x=0X20298);
	op_stkvar	(x,	1);
	create_insn	(x=0X202A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X202B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X202B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X202BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X202C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X202C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X202CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X202D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X202D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X202DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X202E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X202E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X202F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X202F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20304);
	op_stkvar	(x,	1);
	create_insn	(x=0X20310);
	op_stkvar	(x,	1);
	create_insn	(x=0X20314);
	op_stkvar	(x,	1);
	create_insn	(x=0X2031C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20320);
	op_stkvar	(x,	1);
	create_insn	(x=0X20328);
	op_stkvar	(x,	1);
	create_insn	(x=0X2032C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20330);
	op_stkvar	(x,	1);
	create_insn	(x=0X20338);
	op_stkvar	(x,	1);
	create_insn	(x=0X2033C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20348);
	op_stkvar	(x,	1);
	create_insn	(x=0X2034C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20354);
	op_stkvar	(x,	1);
	create_insn	(x=0X2035C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20368);
	op_stkvar	(x,	1);
	create_insn	(x=0X20374);
	op_stkvar	(x,	1);
	create_insn	(x=0X20378);
	op_stkvar	(x,	1);
	create_insn	(x=0X20380);
	op_stkvar	(x,	1);
	create_insn	(x=0X20384);
	op_stkvar	(x,	1);
	create_insn	(x=0X2038C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20390);
	op_stkvar	(x,	1);
	create_insn	(x=0X20394);
	op_stkvar	(x,	1);
	create_insn	(x=0X2039C);
	op_stkvar	(x,	1);
	create_insn	(x=0X203A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X203AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X203B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X203B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X203C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X203CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X203D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X203DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X203E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X203E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X203F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X203F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X203F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20400);
	op_stkvar	(x,	1);
	create_insn	(x=0X20404);
	op_stkvar	(x,	1);
	create_insn	(x=0X20410);
	op_stkvar	(x,	1);
	create_insn	(x=0X20414);
	op_stkvar	(x,	1);
	create_insn	(x=0X2041C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20424);
	op_stkvar	(x,	1);
	create_insn	(x=0X20430);
	op_stkvar	(x,	1);
	create_insn	(x=0X2043C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20440);
	op_stkvar	(x,	1);
	create_insn	(x=0X20448);
	op_stkvar	(x,	1);
	create_insn	(x=0X2044C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20454);
	op_stkvar	(x,	1);
	create_insn	(x=0X20458);
	op_stkvar	(x,	1);
	create_insn	(x=0X2045C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20464);
	op_stkvar	(x,	1);
	create_insn	(x=0X20468);
	op_stkvar	(x,	1);
	create_insn	(x=0X20474);
	op_stkvar	(x,	1);
	create_insn	(x=0X20478);
	op_stkvar	(x,	1);
	create_insn	(x=0X20480);
	op_stkvar	(x,	1);
	create_insn	(x=0X20488);
	op_stkvar	(x,	1);
	create_insn	(x=0X20494);
	op_stkvar	(x,	1);
	create_insn	(x=0X204A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X204A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X204AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X204B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X204B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X204BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X204C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X204C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X204CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X204D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X204DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X204E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X204EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X204F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20504);
	op_stkvar	(x,	1);
	create_insn	(x=0X20508);
	op_stkvar	(x,	1);
	create_insn	(x=0X20510);
	op_stkvar	(x,	1);
	create_insn	(x=0X20514);
	op_stkvar	(x,	1);
	create_insn	(x=0X2051C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20520);
	op_stkvar	(x,	1);
	create_insn	(x=0X20524);
	op_stkvar	(x,	1);
	create_insn	(x=0X2052C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20530);
	op_stkvar	(x,	1);
	create_insn	(x=0X2053C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20540);
	op_stkvar	(x,	1);
	create_insn	(x=0X20548);
	op_stkvar	(x,	1);
	create_insn	(x=0X20550);
	op_stkvar	(x,	1);
	create_insn	(x=0X2055C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20568);
	op_stkvar	(x,	1);
	create_insn	(x=0X2056C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20574);
	op_stkvar	(x,	1);
	create_insn	(x=0X20578);
	op_stkvar	(x,	1);
	create_insn	(x=0X20580);
	op_stkvar	(x,	1);
	create_insn	(x=0X20584);
	op_stkvar	(x,	1);
	create_insn	(x=0X20588);
	op_stkvar	(x,	1);
	create_insn	(x=0X20590);
	op_stkvar	(x,	1);
	create_insn	(x=0X20594);
	op_stkvar	(x,	1);
	create_insn	(x=0X205A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X205A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X205AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X205B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X205C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X205CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X205D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X205D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X205DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X205E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X205E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X205EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X205F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X205F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20604);
	op_stkvar	(x,	1);
	create_insn	(x=0X20608);
	op_stkvar	(x,	1);
	create_insn	(x=0X20610);
	op_stkvar	(x,	1);
	create_insn	(x=0X20618);
	op_stkvar	(x,	1);
	create_insn	(x=0X20624);
	op_stkvar	(x,	1);
	create_insn	(x=0X20630);
	op_stkvar	(x,	1);
	create_insn	(x=0X20634);
	op_stkvar	(x,	1);
	create_insn	(x=0X2063C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20640);
	op_stkvar	(x,	1);
	create_insn	(x=0X20648);
	op_stkvar	(x,	1);
	create_insn	(x=0X2064C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20650);
	op_stkvar	(x,	1);
	create_insn	(x=0X20658);
	op_stkvar	(x,	1);
	create_insn	(x=0X2065C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20668);
	op_stkvar	(x,	1);
	create_insn	(x=0X2066C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20674);
	op_stkvar	(x,	1);
	create_insn	(x=0X2067C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20688);
	op_stkvar	(x,	1);
	create_insn	(x=0X20694);
	op_stkvar	(x,	1);
	create_insn	(x=0X20698);
	op_stkvar	(x,	1);
	create_insn	(x=0X206A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X206A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X206AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X206B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X206B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X206BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X206C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X206CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X206D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X206D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X206E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X206EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X206F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X206FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20704);
	op_stkvar	(x,	1);
	create_insn	(x=0X20708);
	op_stkvar	(x,	1);
	create_insn	(x=0X20710);
	op_stkvar	(x,	1);
	create_insn	(x=0X20714);
	op_stkvar	(x,	1);
	create_insn	(x=0X20718);
	op_stkvar	(x,	1);
	create_insn	(x=0X20720);
	op_stkvar	(x,	1);
	create_insn	(x=0X20724);
	op_stkvar	(x,	1);
	create_insn	(x=0X20730);
	op_stkvar	(x,	1);
	create_insn	(x=0X20734);
	op_stkvar	(x,	1);
	create_insn	(x=0X2073C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20744);
	op_stkvar	(x,	1);
	create_insn	(x=0X20750);
	op_stkvar	(x,	1);
	create_insn	(x=0X2075C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20760);
	op_stkvar	(x,	1);
	create_insn	(x=0X20768);
	op_stkvar	(x,	1);
	create_insn	(x=0X2076C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20774);
	op_stkvar	(x,	1);
	create_insn	(x=0X20778);
	op_stkvar	(x,	1);
	create_insn	(x=0X2077C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20784);
	op_stkvar	(x,	1);
	create_insn	(x=0X20788);
	op_stkvar	(x,	1);
	create_insn	(x=0X20794);
	op_stkvar	(x,	1);
	create_insn	(x=0X20798);
	op_stkvar	(x,	1);
	create_insn	(x=0X207A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X207A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X207B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X207C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X207C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X207CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X207D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X207D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X207DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X207E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X207E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X207EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X207F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X207FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20804);
	op_stkvar	(x,	1);
	create_insn	(x=0X20810);
	op_stkvar	(x,	1);
	create_insn	(x=0X2081C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20820);
	op_stkvar	(x,	1);
	create_insn	(x=0X20828);
	op_stkvar	(x,	1);
	create_insn	(x=0X2082C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20834);
	op_stkvar	(x,	1);
	create_insn	(x=0X20838);
	op_stkvar	(x,	1);
	create_insn	(x=0X2083C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20844);
	op_stkvar	(x,	1);
	create_insn	(x=0X20848);
	op_stkvar	(x,	1);
	create_insn	(x=0X20854);
	op_stkvar	(x,	1);
	create_insn	(x=0X20858);
	op_stkvar	(x,	1);
	create_insn	(x=0X20860);
	op_stkvar	(x,	1);
	create_insn	(x=0X2086C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20878);
	op_stkvar	(x,	1);
	create_insn	(x=0X2087C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20884);
	op_stkvar	(x,	1);
	create_insn	(x=0X20888);
	op_stkvar	(x,	1);
	create_insn	(x=0X20890);
	op_stkvar	(x,	1);
	create_insn	(x=0X20894);
	op_stkvar	(x,	1);
	create_insn	(x=0X20898);
	op_stkvar	(x,	1);
	create_insn	(x=0X208A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X208A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X208B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X208B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X208BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X208C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X208D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X208D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X208E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X208E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X208EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X208F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X208F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X208FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20900);
	op_stkvar	(x,	1);
	create_insn	(x=0X2090C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20910);
	op_stkvar	(x,	1);
	create_insn	(x=0X20918);
	op_stkvar	(x,	1);
	create_insn	(x=0X20924);
	op_stkvar	(x,	1);
	create_insn	(x=0X20930);
	op_stkvar	(x,	1);
	create_insn	(x=0X20934);
	op_stkvar	(x,	1);
	create_insn	(x=0X2093C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20940);
	op_stkvar	(x,	1);
	create_insn	(x=0X20948);
	op_stkvar	(x,	1);
	create_insn	(x=0X2094C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20950);
	op_stkvar	(x,	1);
	create_insn	(x=0X20958);
	op_stkvar	(x,	1);
	create_insn	(x=0X2095C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20968);
	op_stkvar	(x,	1);
	create_insn	(x=0X2096C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20974);
	op_stkvar	(x,	1);
	create_insn	(x=0X20980);
	op_stkvar	(x,	1);
	create_insn	(x=0X2098C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20990);
	op_stkvar	(x,	1);
	create_insn	(x=0X20998);
	op_stkvar	(x,	1);
	create_insn	(x=0X2099C);
	op_stkvar	(x,	1);
	create_insn	(x=0X209A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X209A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X209AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X209B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X209B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X209C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X209C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X209D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X209DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X209E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X209EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X209F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X209F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A20);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A70);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A80);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A88);
	op_stkvar	(x,	1);
	create_insn	(x=0X20A94);
	op_stkvar	(x,	1);
	create_insn	(x=0X20AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20AA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X20AAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20AB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20ABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X20AF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B00);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B58);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B64);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B70);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B98);
	op_stkvar	(x,	1);
	create_dword	(0X20BA4);
	create_dword	(0X20BA8);
	create_dword	(0X20BAC);
	create_dword	(0X20BB0);
	create_dword	(0X20BB4);
	create_dword	(0X20BB8);
	create_dword	(0X20BBC);
	create_dword	(0X20BC0);
	create_dword	(0X20BC4);
	create_dword	(0X20BC8);
	create_dword	(0X20BCC);
	create_dword	(0X20BD0);
	create_dword	(0X20BD4);
	create_dword	(0X20BD8);
	create_dword	(0X20BDC);
	create_dword	(0X20BE0);
	create_dword	(0X20BE4);
	create_dword	(0X20BE8);
	create_dword	(0X20BEC);
	create_dword	(0X20BF0);
	create_dword	(0X20BF4);
	create_dword	(0X20BF8);
	create_dword	(0X20BFC);
	create_dword	(0X20C00);
	create_dword	(0X20C04);
	create_dword	(0X20C08);
	create_dword	(0X20C0C);
	create_dword	(0X20C10);
	create_dword	(0X20C14);
	create_dword	(0X20C18);
	create_dword	(0X20C1C);
	create_dword	(0X20C20);
	create_dword	(0X20C24);
	create_dword	(0X20C28);
	create_dword	(0X20C2C);
	create_dword	(0X20C30);
	create_dword	(0X20C34);
	create_dword	(0X20C38);
	create_dword	(0X20C3C);
	create_dword	(0X20C40);
	create_dword	(0X20C44);
	create_dword	(0X20C48);
	create_dword	(0X20C4C);
	create_dword	(0X20C50);
	create_dword	(0X20C54);
	create_dword	(0X20C58);
	create_dword	(0X20C5C);
	create_dword	(0X20C60);
	create_dword	(0X20C64);
	create_dword	(0X20C68);
	create_dword	(0X20C6C);
	create_dword	(0X20C70);
	create_dword	(0X20C74);
	create_dword	(0X20C78);
	create_dword	(0X20C7C);
	create_dword	(0X20C80);
	create_dword	(0X20C84);
	create_dword	(0X20C88);
	create_dword	(0X20C8C);
	create_dword	(0X20C90);
	create_dword	(0X20C94);
	create_dword	(0X20C98);
	create_dword	(0X20C9C);
	create_insn	(0X20CA0);
	create_insn	(x=0X20CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D48);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D94);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E24);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E64);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E80);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E98);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F04);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F10);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F44);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F70);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F80);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X20F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X20FA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X20FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X20FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21004);
	op_stkvar	(x,	1);
	create_insn	(x=0X21008);
	op_stkvar	(x,	1);
	create_insn	(x=0X21010);
	op_stkvar	(x,	1);
	create_insn	(x=0X21014);
	op_stkvar	(x,	1);
	create_insn	(x=0X21018);
	op_stkvar	(x,	1);
	create_insn	(x=0X21020);
	op_stkvar	(x,	1);
	create_insn	(x=0X21024);
	op_stkvar	(x,	1);
	create_insn	(x=0X21030);
	op_stkvar	(x,	1);
	create_insn	(x=0X21038);
	op_stkvar	(x,	1);
	create_insn	(x=0X21040);
	op_stkvar	(x,	1);
	create_insn	(x=0X2104C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21058);
	op_stkvar	(x,	1);
	create_insn	(x=0X2105C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21064);
	op_stkvar	(x,	1);
	create_insn	(x=0X21068);
	op_stkvar	(x,	1);
	create_insn	(x=0X21070);
	op_stkvar	(x,	1);
	create_insn	(x=0X21074);
	op_stkvar	(x,	1);
	create_insn	(x=0X21078);
	op_stkvar	(x,	1);
	create_insn	(x=0X21080);
	op_stkvar	(x,	1);
	create_insn	(x=0X21084);
	op_stkvar	(x,	1);
	create_insn	(x=0X21090);
	op_stkvar	(x,	1);
	create_insn	(x=0X21098);
	op_stkvar	(x,	1);
	create_insn	(x=0X210A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X210AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X210B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X210BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X210C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X210C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X210D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X210D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X210D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X210E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X210E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X210F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X210F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21100);
	op_stkvar	(x,	1);
	create_insn	(x=0X2110C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21118);
	op_stkvar	(x,	1);
	create_insn	(x=0X2111C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21124);
	op_stkvar	(x,	1);
	create_insn	(x=0X21128);
	op_stkvar	(x,	1);
	create_insn	(x=0X21130);
	op_stkvar	(x,	1);
	create_insn	(x=0X21134);
	op_stkvar	(x,	1);
	create_insn	(x=0X21138);
	op_stkvar	(x,	1);
	create_insn	(x=0X21140);
	op_stkvar	(x,	1);
	create_insn	(x=0X21144);
	op_stkvar	(x,	1);
	create_insn	(x=0X21150);
	op_stkvar	(x,	1);
	create_insn	(x=0X21158);
	op_stkvar	(x,	1);
	create_insn	(x=0X21160);
	op_stkvar	(x,	1);
	create_insn	(x=0X2116C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21178);
	op_stkvar	(x,	1);
	create_insn	(x=0X2117C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21184);
	op_stkvar	(x,	1);
	create_insn	(x=0X21188);
	op_stkvar	(x,	1);
	create_insn	(x=0X21190);
	op_stkvar	(x,	1);
	create_insn	(x=0X21194);
	op_stkvar	(x,	1);
	create_insn	(x=0X21198);
	op_stkvar	(x,	1);
	create_insn	(x=0X211A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X211A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X211B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X211B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X211C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X211CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X211D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X211DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X211E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X211E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X211F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X211F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X211F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21200);
	op_stkvar	(x,	1);
	create_insn	(x=0X21204);
	op_stkvar	(x,	1);
	create_insn	(x=0X21210);
	op_stkvar	(x,	1);
	create_insn	(x=0X21218);
	op_stkvar	(x,	1);
	create_insn	(x=0X21220);
	op_stkvar	(x,	1);
	create_insn	(x=0X2122C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21238);
	op_stkvar	(x,	1);
	create_insn	(x=0X2123C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21244);
	op_stkvar	(x,	1);
	create_insn	(x=0X21248);
	op_stkvar	(x,	1);
	create_insn	(x=0X21250);
	op_stkvar	(x,	1);
	create_insn	(x=0X21254);
	op_stkvar	(x,	1);
	create_insn	(x=0X21258);
	op_stkvar	(x,	1);
	create_insn	(x=0X21260);
	op_stkvar	(x,	1);
	create_insn	(x=0X21264);
	op_stkvar	(x,	1);
	create_insn	(x=0X21270);
	op_stkvar	(x,	1);
	create_insn	(x=0X21278);
	op_stkvar	(x,	1);
	create_insn	(x=0X21280);
	op_stkvar	(x,	1);
	create_insn	(x=0X2128C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21298);
	op_stkvar	(x,	1);
	create_insn	(x=0X2129C);
	op_stkvar	(x,	1);
	create_insn	(x=0X212A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X212A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X212B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X212B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X212B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X212C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X212C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X212D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X212D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X212E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X212EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X212F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X212FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21304);
	op_stkvar	(x,	1);
	create_insn	(x=0X21308);
	op_stkvar	(x,	1);
	create_insn	(x=0X21310);
	op_stkvar	(x,	1);
	create_insn	(x=0X21314);
	op_stkvar	(x,	1);
	create_insn	(x=0X21318);
	op_stkvar	(x,	1);
	create_insn	(x=0X21320);
	op_stkvar	(x,	1);
	create_insn	(x=0X21324);
	op_stkvar	(x,	1);
	create_insn	(x=0X21330);
	op_stkvar	(x,	1);
	create_insn	(x=0X21338);
	op_stkvar	(x,	1);
	create_insn	(x=0X21340);
	op_stkvar	(x,	1);
	create_insn	(x=0X2134C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21358);
	op_stkvar	(x,	1);
	create_insn	(x=0X2135C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21364);
	op_stkvar	(x,	1);
	create_insn	(x=0X21368);
	op_stkvar	(x,	1);
	create_insn	(x=0X21370);
	op_stkvar	(x,	1);
	create_insn	(x=0X21374);
	op_stkvar	(x,	1);
	create_insn	(x=0X21378);
	op_stkvar	(x,	1);
	create_insn	(x=0X21380);
	op_stkvar	(x,	1);
	create_insn	(x=0X21384);
	op_stkvar	(x,	1);
	create_insn	(x=0X21390);
	op_stkvar	(x,	1);
	create_insn	(x=0X21398);
	op_stkvar	(x,	1);
	create_insn	(x=0X213A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X213AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X213B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X213BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X213C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X213C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X213D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X213D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X213D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X213E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X213E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X213F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X213F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21400);
	op_stkvar	(x,	1);
	create_insn	(x=0X2140C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21418);
	op_stkvar	(x,	1);
	create_insn	(x=0X2141C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21424);
	op_stkvar	(x,	1);
	create_insn	(x=0X21428);
	op_stkvar	(x,	1);
	create_insn	(x=0X21430);
	op_stkvar	(x,	1);
	create_insn	(x=0X21434);
	op_stkvar	(x,	1);
	create_insn	(x=0X21438);
	op_stkvar	(x,	1);
	create_insn	(x=0X21440);
	op_stkvar	(x,	1);
	create_insn	(x=0X21444);
	op_stkvar	(x,	1);
	create_insn	(x=0X21450);
	op_stkvar	(x,	1);
	create_insn	(x=0X21458);
	op_stkvar	(x,	1);
	create_insn	(x=0X21460);
	op_stkvar	(x,	1);
	create_insn	(x=0X2146C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21478);
	op_stkvar	(x,	1);
	create_insn	(x=0X2147C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21484);
	op_stkvar	(x,	1);
	create_insn	(x=0X21488);
	op_stkvar	(x,	1);
	create_insn	(x=0X21490);
	op_stkvar	(x,	1);
	create_insn	(x=0X21494);
	op_stkvar	(x,	1);
	create_insn	(x=0X21498);
	op_stkvar	(x,	1);
	create_insn	(x=0X214A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X214A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X214AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X214B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X214BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X214C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X214C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X214D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X214D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X214E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X214E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X214EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X214F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X214FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21504);
	op_stkvar	(x,	1);
	create_insn	(x=0X2150C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21510);
	op_stkvar	(x,	1);
	create_insn	(x=0X21518);
	op_stkvar	(x,	1);
	create_insn	(x=0X21520);
	op_stkvar	(x,	1);
	create_insn	(x=0X21528);
	op_stkvar	(x,	1);
	create_insn	(x=0X21530);
	op_stkvar	(x,	1);
	create_insn	(x=0X21534);
	op_stkvar	(x,	1);
	create_insn	(x=0X2153C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21540);
	op_stkvar	(x,	1);
	create_insn	(x=0X21550);
	op_hex		(x,	1);
	create_insn	(x=0X21554);
	op_stkvar	(x,	1);
	create_insn	(x=0X2155C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21574);
	op_stkvar	(x,	1);
	set_name	(0X21574,	"md5_block_data_order");
	create_insn	(x=0X21580);
	op_stkvar	(x,	1);
	create_insn	(x=0X21584);
	op_stkvar	(x,	1);
	create_insn	(x=0X21588);
	op_stkvar	(x,	1);
	create_insn	(x=0X2158C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21590);
	op_stkvar	(x,	1);
	create_insn	(x=0X21594);
	op_stkvar	(x,	1);
	create_insn	(x=0X2159C);
	op_stkvar	(x,	1);
	create_insn	(x=0X215A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X215A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X215AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X215B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X215B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X215C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X215C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X215D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X215D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X215DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X215E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X215EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X215F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X215F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21600);
	op_stkvar	(x,	1);
	create_insn	(x=0X21604);
	op_stkvar	(x,	1);
	create_insn	(x=0X21610);
	op_stkvar	(x,	1);
	create_insn	(x=0X21618);
	op_stkvar	(x,	1);
	create_insn	(x=0X2161C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21624);
	op_stkvar	(x,	1);
	create_insn	(x=0X21628);
	op_stkvar	(x,	1);
	create_insn	(x=0X21634);
	op_stkvar	(x,	1);
	create_insn	(x=0X2163C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21640);
	op_stkvar	(x,	1);
	create_insn	(x=0X21648);
	op_stkvar	(x,	1);
	create_insn	(x=0X2164C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21650);
	op_stkvar	(x,	1);
	create_insn	(x=0X21654);
	op_stkvar	(x,	1);
	create_insn	(x=0X2165C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21660);
	op_stkvar	(x,	1);
	create_insn	(x=0X21668);
	op_stkvar	(x,	1);
	create_insn	(x=0X2166C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21678);
	op_stkvar	(x,	1);
	create_insn	(x=0X21680);
	op_stkvar	(x,	1);
	create_insn	(x=0X21684);
	op_stkvar	(x,	1);
	create_insn	(x=0X2168C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21690);
	op_stkvar	(x,	1);
	create_insn	(x=0X2169C);
	op_stkvar	(x,	1);
	create_insn	(x=0X216A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X216A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X216B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X216B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X216C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X216C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X216CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X216D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X216D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X216DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X216E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X216E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X216EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X216F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X216FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21704);
	op_stkvar	(x,	1);
	create_insn	(x=0X21710);
	op_stkvar	(x,	1);
	create_insn	(x=0X21714);
	op_stkvar	(x,	1);
	create_insn	(x=0X2171C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21720);
	op_stkvar	(x,	1);
	create_insn	(x=0X21728);
	op_stkvar	(x,	1);
	create_insn	(x=0X2172C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21730);
	op_stkvar	(x,	1);
	create_insn	(x=0X21738);
	op_stkvar	(x,	1);
	create_insn	(x=0X2173C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21744);
	op_stkvar	(x,	1);
	create_insn	(x=0X21748);
	op_stkvar	(x,	1);
	create_insn	(x=0X21750);
	op_stkvar	(x,	1);
	create_insn	(x=0X21754);
	op_stkvar	(x,	1);
	create_insn	(x=0X21760);
	op_stkvar	(x,	1);
	create_insn	(x=0X21768);
	op_stkvar	(x,	1);
	create_insn	(x=0X2176C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21774);
	op_stkvar	(x,	1);
	create_insn	(x=0X21778);
	op_stkvar	(x,	1);
	create_insn	(x=0X21784);
	op_stkvar	(x,	1);
	create_insn	(x=0X2178C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21790);
	op_stkvar	(x,	1);
	create_insn	(x=0X21798);
	op_stkvar	(x,	1);
	create_insn	(x=0X2179C);
	op_stkvar	(x,	1);
	create_insn	(x=0X217A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X217B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X217B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X217BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X217C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X217C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X217C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X217CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X217D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X217DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X217E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X217EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X217F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X217FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21804);
	op_stkvar	(x,	1);
	create_insn	(x=0X21808);
	op_stkvar	(x,	1);
	create_insn	(x=0X21810);
	op_stkvar	(x,	1);
	create_insn	(x=0X21814);
	op_stkvar	(x,	1);
	create_insn	(x=0X21818);
	op_stkvar	(x,	1);
	create_insn	(x=0X21820);
	op_stkvar	(x,	1);
	create_insn	(x=0X21824);
	op_stkvar	(x,	1);
	create_insn	(x=0X2182C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21830);
	op_stkvar	(x,	1);
	create_insn	(x=0X21838);
	op_stkvar	(x,	1);
	create_insn	(x=0X2183C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21848);
	op_stkvar	(x,	1);
	create_insn	(x=0X21850);
	op_stkvar	(x,	1);
	create_insn	(x=0X21854);
	op_stkvar	(x,	1);
	create_insn	(x=0X2185C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21860);
	op_stkvar	(x,	1);
	create_insn	(x=0X2186C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21874);
	op_stkvar	(x,	1);
	create_insn	(x=0X21878);
	op_stkvar	(x,	1);
	create_insn	(x=0X21880);
	op_stkvar	(x,	1);
	create_insn	(x=0X21884);
	op_stkvar	(x,	1);
	create_insn	(x=0X21890);
	op_stkvar	(x,	1);
	create_insn	(x=0X21898);
	op_stkvar	(x,	1);
	create_insn	(x=0X2189C);
	op_stkvar	(x,	1);
	create_insn	(x=0X218A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X218A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X218AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X218B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X218B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X218BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X218C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X218CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X218D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X218E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X218E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X218EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X218F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X218F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X218FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21900);
	op_stkvar	(x,	1);
	create_insn	(x=0X21908);
	op_stkvar	(x,	1);
	create_insn	(x=0X2190C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21914);
	op_stkvar	(x,	1);
	create_insn	(x=0X21918);
	op_stkvar	(x,	1);
	create_insn	(x=0X21920);
	op_stkvar	(x,	1);
	create_insn	(x=0X21924);
	op_stkvar	(x,	1);
	create_insn	(x=0X21930);
	op_stkvar	(x,	1);
	create_insn	(x=0X21938);
	op_stkvar	(x,	1);
	create_insn	(x=0X2193C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21944);
	op_stkvar	(x,	1);
	create_insn	(x=0X21948);
	op_stkvar	(x,	1);
	create_insn	(x=0X21954);
	op_stkvar	(x,	1);
	create_insn	(x=0X2195C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21960);
	op_stkvar	(x,	1);
	create_insn	(x=0X21968);
	op_stkvar	(x,	1);
	create_insn	(x=0X2196C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21978);
	op_stkvar	(x,	1);
	create_insn	(x=0X21980);
	op_stkvar	(x,	1);
	create_insn	(x=0X21984);
	op_stkvar	(x,	1);
	create_insn	(x=0X2198C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21990);
	op_stkvar	(x,	1);
	create_insn	(x=0X21994);
	op_stkvar	(x,	1);
	create_insn	(x=0X21998);
	op_stkvar	(x,	1);
	create_insn	(x=0X2199C);
	op_stkvar	(x,	1);
	create_insn	(x=0X219A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X219AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X219B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X219BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X219C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X219CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X219D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X219D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X219E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X219E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X219E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X219F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X219F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X219FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A18);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A20);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A78);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A80);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A84);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A94);
	op_stkvar	(x,	1);
	create_insn	(x=0X21A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21AA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21ABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21AE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21AF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B00);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B64);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B68);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B98);
	op_stkvar	(x,	1);
	create_insn	(x=0X21B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21BA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21BB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21BCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C54);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C64);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C98);
	op_stkvar	(x,	1);
	create_insn	(x=0X21C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21CFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D94);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21DA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21DB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21DE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E24);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E60);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E78);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E90);
	op_stkvar	(x,	1);
	create_insn	(x=0X21E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X21EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21EB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21EF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21EF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F04);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F08);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F44);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F70);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F88);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X21F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21FDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X21FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X21FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X21FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X21FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22004);
	op_stkvar	(x,	1);
	create_insn	(x=0X2200C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22014);
	op_stkvar	(x,	1);
	create_insn	(x=0X22020);
	op_stkvar	(x,	1);
	create_insn	(x=0X22024);
	op_stkvar	(x,	1);
	create_insn	(x=0X2202C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22030);
	op_stkvar	(x,	1);
	create_insn	(x=0X22038);
	op_stkvar	(x,	1);
	create_insn	(x=0X2203C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22040);
	op_stkvar	(x,	1);
	create_insn	(x=0X22048);
	op_stkvar	(x,	1);
	create_insn	(x=0X2204C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22054);
	op_stkvar	(x,	1);
	create_insn	(x=0X22058);
	op_stkvar	(x,	1);
	create_insn	(x=0X22060);
	op_stkvar	(x,	1);
	create_insn	(x=0X22064);
	op_stkvar	(x,	1);
	create_insn	(x=0X22070);
	op_stkvar	(x,	1);
	create_insn	(x=0X22078);
	op_stkvar	(x,	1);
	create_insn	(x=0X2207C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22084);
	op_stkvar	(x,	1);
	create_insn	(x=0X22088);
	op_stkvar	(x,	1);
	create_insn	(x=0X22094);
	op_stkvar	(x,	1);
	create_insn	(x=0X2209C);
	op_stkvar	(x,	1);
	create_insn	(x=0X220A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X220A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X220AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X220B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X220C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X220C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X220CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X220D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X220D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X220D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X220DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X220E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X220EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X220F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X220FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22108);
	op_stkvar	(x,	1);
	create_insn	(x=0X2210C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22114);
	op_stkvar	(x,	1);
	create_insn	(x=0X22118);
	op_stkvar	(x,	1);
	create_insn	(x=0X22120);
	op_stkvar	(x,	1);
	create_insn	(x=0X22124);
	op_stkvar	(x,	1);
	create_insn	(x=0X22128);
	op_stkvar	(x,	1);
	create_insn	(x=0X22130);
	op_stkvar	(x,	1);
	create_insn	(x=0X22134);
	op_stkvar	(x,	1);
	create_insn	(x=0X2213C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22140);
	op_stkvar	(x,	1);
	create_insn	(x=0X22148);
	op_stkvar	(x,	1);
	create_insn	(x=0X2214C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22158);
	op_stkvar	(x,	1);
	create_insn	(x=0X22160);
	op_stkvar	(x,	1);
	create_insn	(x=0X22164);
	op_stkvar	(x,	1);
	create_insn	(x=0X2216C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22170);
	op_stkvar	(x,	1);
	create_insn	(x=0X2217C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22184);
	op_stkvar	(x,	1);
	create_insn	(x=0X22188);
	op_stkvar	(x,	1);
	create_insn	(x=0X22190);
	op_stkvar	(x,	1);
	create_insn	(x=0X22194);
	op_stkvar	(x,	1);
	create_insn	(x=0X221A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X221A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X221AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X221B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X221B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X221BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X221C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X221C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X221CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X221D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X221DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X221E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X221F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X221F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X221FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22200);
	op_stkvar	(x,	1);
	create_insn	(x=0X22208);
	op_stkvar	(x,	1);
	create_insn	(x=0X2220C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22210);
	op_stkvar	(x,	1);
	create_insn	(x=0X22218);
	op_stkvar	(x,	1);
	create_insn	(x=0X2221C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22224);
	op_stkvar	(x,	1);
	create_insn	(x=0X22228);
	op_stkvar	(x,	1);
	create_insn	(x=0X22230);
	op_stkvar	(x,	1);
	create_insn	(x=0X22234);
	op_stkvar	(x,	1);
	create_insn	(x=0X22240);
	op_stkvar	(x,	1);
	create_insn	(x=0X22248);
	op_stkvar	(x,	1);
	create_insn	(x=0X2224C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22254);
	op_stkvar	(x,	1);
	create_insn	(x=0X22258);
	op_stkvar	(x,	1);
	create_insn	(x=0X22264);
	op_stkvar	(x,	1);
	create_insn	(x=0X2226C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22270);
	op_stkvar	(x,	1);
	create_insn	(x=0X22278);
	op_stkvar	(x,	1);
	create_insn	(x=0X2227C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22288);
	op_stkvar	(x,	1);
	create_insn	(x=0X22290);
	op_stkvar	(x,	1);
	create_insn	(x=0X22294);
	op_stkvar	(x,	1);
	create_insn	(x=0X2229C);
	op_stkvar	(x,	1);
	create_insn	(x=0X222A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X222A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X222A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X222AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X222B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X222BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X222C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X222CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X222D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X222DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X222E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X222E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X222F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X222F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X222F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22300);
	op_stkvar	(x,	1);
	create_insn	(x=0X22304);
	op_stkvar	(x,	1);
	create_insn	(x=0X2230C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22310);
	op_stkvar	(x,	1);
	create_insn	(x=0X22318);
	op_stkvar	(x,	1);
	create_insn	(x=0X2231C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22328);
	op_stkvar	(x,	1);
	create_insn	(x=0X22330);
	op_stkvar	(x,	1);
	create_insn	(x=0X22334);
	op_stkvar	(x,	1);
	create_insn	(x=0X2233C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22340);
	op_stkvar	(x,	1);
	create_insn	(x=0X2234C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22354);
	op_stkvar	(x,	1);
	create_insn	(x=0X22358);
	op_stkvar	(x,	1);
	create_insn	(x=0X22360);
	op_stkvar	(x,	1);
	create_insn	(x=0X22364);
	op_stkvar	(x,	1);
	create_insn	(x=0X22370);
	op_stkvar	(x,	1);
	create_insn	(x=0X22378);
	op_stkvar	(x,	1);
	create_insn	(x=0X2237C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22384);
	op_stkvar	(x,	1);
	create_insn	(x=0X22388);
	op_stkvar	(x,	1);
	create_insn	(x=0X2238C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22390);
	op_stkvar	(x,	1);
	create_insn	(x=0X22394);
	op_stkvar	(x,	1);
	create_insn	(x=0X2239C);
	op_stkvar	(x,	1);
	create_insn	(x=0X223A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X223AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X223B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X223C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X223C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X223CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X223D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X223D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X223DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X223E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X223E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X223EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X223F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X223F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22400);
	op_stkvar	(x,	1);
	create_insn	(x=0X22408);
	op_stkvar	(x,	1);
	create_insn	(x=0X22410);
	op_stkvar	(x,	1);
	create_insn	(x=0X2241C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22420);
	op_stkvar	(x,	1);
	create_insn	(x=0X22428);
	op_stkvar	(x,	1);
	create_insn	(x=0X2242C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22434);
	op_stkvar	(x,	1);
	create_insn	(x=0X22438);
	op_stkvar	(x,	1);
	create_insn	(x=0X2243C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22444);
	op_stkvar	(x,	1);
	create_insn	(x=0X22448);
	op_stkvar	(x,	1);
	create_insn	(x=0X2244C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22454);
	op_stkvar	(x,	1);
	create_insn	(x=0X2245C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22464);
	op_stkvar	(x,	1);
	create_insn	(x=0X2246C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22478);
	op_stkvar	(x,	1);
	create_insn	(x=0X2247C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22484);
	op_stkvar	(x,	1);
	create_insn	(x=0X22488);
	op_stkvar	(x,	1);
	create_insn	(x=0X22490);
	op_stkvar	(x,	1);
	create_insn	(x=0X22494);
	op_stkvar	(x,	1);
	create_insn	(x=0X22498);
	op_stkvar	(x,	1);
	create_insn	(x=0X224A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X224A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X224A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X224B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X224B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X224C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X224C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X224D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X224D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X224E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X224E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X224EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X224F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X224F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X224FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22500);
	op_stkvar	(x,	1);
	create_insn	(x=0X22504);
	op_stkvar	(x,	1);
	create_insn	(x=0X2250C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22514);
	op_stkvar	(x,	1);
	create_insn	(x=0X2251C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22524);
	op_stkvar	(x,	1);
	create_insn	(x=0X22530);
	op_stkvar	(x,	1);
	create_insn	(x=0X22534);
	op_stkvar	(x,	1);
	create_insn	(x=0X2253C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22540);
	op_stkvar	(x,	1);
	create_insn	(x=0X22548);
	op_stkvar	(x,	1);
	create_insn	(x=0X2254C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22550);
	op_stkvar	(x,	1);
	create_insn	(x=0X22558);
	op_stkvar	(x,	1);
	create_insn	(x=0X2255C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22560);
	op_stkvar	(x,	1);
	create_insn	(x=0X22568);
	op_stkvar	(x,	1);
	create_insn	(x=0X22570);
	op_stkvar	(x,	1);
	create_insn	(x=0X22578);
	op_stkvar	(x,	1);
	create_insn	(x=0X22580);
	op_stkvar	(x,	1);
	create_insn	(x=0X2258C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22590);
	op_stkvar	(x,	1);
	create_insn	(x=0X22598);
	op_stkvar	(x,	1);
	create_insn	(x=0X2259C);
	op_stkvar	(x,	1);
	create_insn	(x=0X225A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X225A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X225AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X225B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X225B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X225BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X225C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X225CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X225D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X225DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X225E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X225EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X225F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X225F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22600);
	op_stkvar	(x,	1);
	create_insn	(x=0X22604);
	op_stkvar	(x,	1);
	create_insn	(x=0X22608);
	op_stkvar	(x,	1);
	create_insn	(x=0X22610);
	op_stkvar	(x,	1);
	create_insn	(x=0X22614);
	op_stkvar	(x,	1);
	create_insn	(x=0X22618);
	op_stkvar	(x,	1);
	create_insn	(x=0X22620);
	op_stkvar	(x,	1);
	create_insn	(x=0X22628);
	op_stkvar	(x,	1);
	create_insn	(x=0X22630);
	op_stkvar	(x,	1);
	create_insn	(x=0X22638);
	op_stkvar	(x,	1);
	create_insn	(x=0X22644);
	op_stkvar	(x,	1);
	create_insn	(x=0X22648);
	op_stkvar	(x,	1);
	create_insn	(x=0X22650);
	op_stkvar	(x,	1);
	create_insn	(x=0X22654);
	op_stkvar	(x,	1);
	create_insn	(x=0X2265C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22660);
	op_stkvar	(x,	1);
	create_insn	(x=0X22664);
	op_stkvar	(x,	1);
	create_insn	(x=0X2266C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22670);
	op_stkvar	(x,	1);
	create_insn	(x=0X22674);
	op_stkvar	(x,	1);
	create_insn	(x=0X2267C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22684);
	op_stkvar	(x,	1);
	create_insn	(x=0X2268C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22694);
	op_stkvar	(x,	1);
	create_insn	(x=0X226A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X226A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X226AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X226B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X226B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X226BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X226C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X226C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X226CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X226D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X226D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X226E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X226E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X226F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X226FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22700);
	op_stkvar	(x,	1);
	create_dword	(0X2270C);
	create_dword	(0X22710);
	create_dword	(0X22714);
	create_dword	(0X22718);
	create_dword	(0X2271C);
	create_dword	(0X22720);
	create_dword	(0X22724);
	create_dword	(0X22728);
	create_dword	(0X2272C);
	create_dword	(0X22730);
	create_dword	(0X22734);
	create_dword	(0X22738);
	create_dword	(0X2273C);
	create_dword	(0X22740);
	create_dword	(0X22744);
	create_dword	(0X22748);
	create_dword	(0X2274C);
	create_dword	(0X22750);
	create_dword	(0X22754);
	create_dword	(0X22758);
	create_dword	(0X2275C);
	create_dword	(0X22760);
	create_dword	(0X22764);
	create_dword	(0X22768);
	create_dword	(0X2276C);
	create_dword	(0X22770);
	create_dword	(0X22774);
	create_dword	(0X22778);
	create_dword	(0X2277C);
	create_dword	(0X22780);
	create_dword	(0X22784);
	create_dword	(0X22788);
	create_dword	(0X2278C);
	create_dword	(0X22790);
	create_dword	(0X22794);
	create_dword	(0X22798);
	create_dword	(0X2279C);
	create_dword	(0X227A0);
	create_dword	(0X227A4);
	create_dword	(0X227A8);
	create_dword	(0X227AC);
	create_dword	(0X227B0);
	create_dword	(0X227B4);
	create_dword	(0X227B8);
	create_dword	(0X227BC);
	create_dword	(0X227C0);
	create_dword	(0X227C4);
	create_dword	(0X227C8);
	create_dword	(0X227CC);
	create_dword	(0X227D0);
	create_dword	(0X227D4);
	create_dword	(0X227D8);
	create_dword	(0X227DC);
	create_dword	(0X227E0);
	create_dword	(0X227E4);
	create_dword	(0X227E8);
	create_dword	(0X227EC);
	create_dword	(0X227F0);
	create_dword	(0X227F4);
	create_dword	(0X227F8);
	create_dword	(0X227FC);
	create_dword	(0X22800);
	create_dword	(0X22804);
	create_insn	(x=0X22808);
	op_stkvar	(x,	1);
	create_insn	(x=0X2280C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22814);
	op_stkvar	(x,	1);
	create_insn	(x=0X22818);
	op_stkvar	(x,	1);
	create_insn	(x=0X2281C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22824);
	op_stkvar	(x,	1);
	create_insn	(x=0X22828);
	op_stkvar	(x,	1);
	create_insn	(x=0X2282C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22834);
	op_stkvar	(x,	1);
	create_insn	(x=0X2283C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22844);
	op_stkvar	(x,	1);
	create_insn	(x=0X2284C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22858);
	op_stkvar	(x,	1);
	create_insn	(x=0X2285C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22864);
	op_stkvar	(x,	1);
	create_insn	(x=0X22868);
	op_stkvar	(x,	1);
	create_insn	(x=0X22870);
	op_stkvar	(x,	1);
	create_insn	(x=0X22874);
	op_stkvar	(x,	1);
	create_insn	(x=0X22878);
	op_stkvar	(x,	1);
	create_insn	(x=0X22880);
	op_stkvar	(x,	1);
	create_insn	(x=0X22884);
	op_stkvar	(x,	1);
	create_insn	(x=0X22888);
	op_stkvar	(x,	1);
	create_insn	(x=0X22890);
	op_stkvar	(x,	1);
	create_insn	(x=0X22898);
	op_stkvar	(x,	1);
	create_insn	(x=0X228A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X228A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X228B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X228B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X228C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X228C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X228CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X228D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X228D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X228DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X228E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X228E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X228EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X228F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X228FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22904);
	op_stkvar	(x,	1);
	create_insn	(x=0X22910);
	op_stkvar	(x,	1);
	create_insn	(x=0X22914);
	op_stkvar	(x,	1);
	create_insn	(x=0X2291C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22920);
	op_stkvar	(x,	1);
	create_insn	(x=0X22928);
	op_stkvar	(x,	1);
	create_insn	(x=0X2292C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22930);
	op_stkvar	(x,	1);
	create_insn	(x=0X22938);
	op_stkvar	(x,	1);
	create_insn	(x=0X2293C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22940);
	op_stkvar	(x,	1);
	create_insn	(x=0X22948);
	op_stkvar	(x,	1);
	create_insn	(x=0X22950);
	op_stkvar	(x,	1);
	create_insn	(x=0X22958);
	op_stkvar	(x,	1);
	create_insn	(x=0X22960);
	op_stkvar	(x,	1);
	create_insn	(x=0X2296C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22970);
	op_stkvar	(x,	1);
	create_insn	(x=0X22978);
	op_stkvar	(x,	1);
	create_insn	(x=0X2297C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22984);
	op_stkvar	(x,	1);
	create_insn	(x=0X22988);
	op_stkvar	(x,	1);
	create_insn	(x=0X2298C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22994);
	op_stkvar	(x,	1);
	create_insn	(x=0X22998);
	op_stkvar	(x,	1);
	create_insn	(x=0X2299C);
	op_stkvar	(x,	1);
	create_insn	(x=0X229A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X229AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X229B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X229BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X229C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X229CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X229D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X229D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X229E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X229E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X229E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X229F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X229F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X229F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A18);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A28);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A34);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A40);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A80);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A84);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X22A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22AA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22AAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22AB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22AE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22AE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B58);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B68);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B70);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B78);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B88);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X22B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C54);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C58);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C64);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C98);
	op_stkvar	(x,	1);
	create_insn	(x=0X22C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22CE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22CFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D48);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D94);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E24);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E64);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E78);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E90);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E98);
	op_stkvar	(x,	1);
	create_insn	(x=0X22EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22EF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F04);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F30);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F40);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F68);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F74);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F80);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F84);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X23000);
	op_stkvar	(x,	1);
	create_insn	(x=0X23008);
	op_stkvar	(x,	1);
	create_insn	(x=0X23010);
	op_stkvar	(x,	1);
	create_insn	(x=0X2301C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23020);
	op_stkvar	(x,	1);
	create_insn	(x=0X23028);
	op_stkvar	(x,	1);
	create_insn	(x=0X2302C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23034);
	op_stkvar	(x,	1);
	create_insn	(x=0X23038);
	op_stkvar	(x,	1);
	create_insn	(x=0X2303C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23044);
	op_stkvar	(x,	1);
	create_insn	(x=0X23048);
	op_stkvar	(x,	1);
	create_insn	(x=0X23050);
	op_stkvar	(x,	1);
	create_insn	(x=0X23058);
	op_stkvar	(x,	1);
	create_insn	(x=0X23060);
	op_stkvar	(x,	1);
	create_insn	(x=0X23068);
	op_stkvar	(x,	1);
	create_insn	(x=0X23074);
	op_stkvar	(x,	1);
	create_insn	(x=0X23078);
	op_stkvar	(x,	1);
	create_insn	(x=0X23080);
	op_stkvar	(x,	1);
	create_insn	(x=0X23084);
	op_stkvar	(x,	1);
	create_insn	(x=0X2308C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23090);
	op_stkvar	(x,	1);
	create_insn	(x=0X23094);
	op_stkvar	(x,	1);
	create_insn	(x=0X2309C);
	op_stkvar	(x,	1);
	create_insn	(x=0X230A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X230A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X230B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X230B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X230C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X230CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X230D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X230D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X230DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X230E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X230E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X230EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X230F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X230F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X23100);
	op_stkvar	(x,	1);
	create_insn	(x=0X23108);
	op_stkvar	(x,	1);
	create_insn	(x=0X23110);
	op_stkvar	(x,	1);
	create_insn	(x=0X23118);
	op_stkvar	(x,	1);
	create_insn	(x=0X23124);
	op_stkvar	(x,	1);
	create_insn	(x=0X23128);
	op_stkvar	(x,	1);
	create_insn	(x=0X23130);
	op_stkvar	(x,	1);
	create_insn	(x=0X23134);
	op_stkvar	(x,	1);
	create_insn	(x=0X2313C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23140);
	op_stkvar	(x,	1);
	create_insn	(x=0X23144);
	op_stkvar	(x,	1);
	create_insn	(x=0X2314C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23150);
	op_stkvar	(x,	1);
	create_insn	(x=0X23158);
	op_stkvar	(x,	1);
	create_insn	(x=0X23160);
	op_stkvar	(x,	1);
	create_insn	(x=0X23168);
	op_stkvar	(x,	1);
	create_insn	(x=0X23170);
	op_stkvar	(x,	1);
	create_insn	(x=0X2317C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23180);
	op_stkvar	(x,	1);
	create_insn	(x=0X23188);
	op_stkvar	(x,	1);
	create_insn	(x=0X2318C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23194);
	op_stkvar	(x,	1);
	create_insn	(x=0X23198);
	op_stkvar	(x,	1);
	create_insn	(x=0X2319C);
	op_stkvar	(x,	1);
	create_insn	(x=0X231A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X231A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X231B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X231B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X231C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X231C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X231D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X231D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X231E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X231E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X231EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X231F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X231F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X231FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23200);
	op_stkvar	(x,	1);
	create_insn	(x=0X23208);
	op_stkvar	(x,	1);
	create_insn	(x=0X23210);
	op_stkvar	(x,	1);
	create_insn	(x=0X23218);
	op_stkvar	(x,	1);
	create_insn	(x=0X23220);
	op_stkvar	(x,	1);
	create_insn	(x=0X2322C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23230);
	op_stkvar	(x,	1);
	create_insn	(x=0X23238);
	op_stkvar	(x,	1);
	create_insn	(x=0X2323C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23244);
	op_stkvar	(x,	1);
	create_insn	(x=0X23248);
	op_stkvar	(x,	1);
	create_insn	(x=0X2324C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23254);
	op_stkvar	(x,	1);
	create_insn	(x=0X23258);
	op_stkvar	(x,	1);
	create_insn	(x=0X23260);
	op_stkvar	(x,	1);
	create_insn	(x=0X23268);
	op_stkvar	(x,	1);
	create_insn	(x=0X23270);
	op_stkvar	(x,	1);
	create_insn	(x=0X23278);
	op_stkvar	(x,	1);
	create_insn	(x=0X23284);
	op_stkvar	(x,	1);
	create_insn	(x=0X23288);
	op_stkvar	(x,	1);
	create_insn	(x=0X23290);
	op_stkvar	(x,	1);
	create_insn	(x=0X23294);
	op_stkvar	(x,	1);
	create_insn	(x=0X2329C);
	op_stkvar	(x,	1);
	create_insn	(x=0X232A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X232A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X232AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X232B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X232B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X232C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X232C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X232D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X232DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X232E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X232E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X232EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X232F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X232F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X232FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23304);
	op_stkvar	(x,	1);
	create_insn	(x=0X23308);
	op_stkvar	(x,	1);
	create_insn	(x=0X23310);
	op_stkvar	(x,	1);
	create_insn	(x=0X23318);
	op_stkvar	(x,	1);
	create_insn	(x=0X23320);
	op_stkvar	(x,	1);
	create_insn	(x=0X23328);
	op_stkvar	(x,	1);
	create_insn	(x=0X23334);
	op_stkvar	(x,	1);
	create_insn	(x=0X23338);
	op_stkvar	(x,	1);
	create_insn	(x=0X23340);
	op_stkvar	(x,	1);
	create_insn	(x=0X23344);
	op_stkvar	(x,	1);
	create_insn	(x=0X2334C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23350);
	op_stkvar	(x,	1);
	create_insn	(x=0X23354);
	op_stkvar	(x,	1);
	create_insn	(x=0X2335C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23360);
	op_stkvar	(x,	1);
	create_insn	(x=0X23368);
	op_stkvar	(x,	1);
	create_insn	(x=0X23370);
	op_stkvar	(x,	1);
	create_insn	(x=0X23378);
	op_stkvar	(x,	1);
	create_insn	(x=0X23380);
	op_stkvar	(x,	1);
	create_insn	(x=0X2338C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23390);
	op_stkvar	(x,	1);
	create_insn	(x=0X23398);
	op_stkvar	(x,	1);
	create_insn	(x=0X2339C);
	op_stkvar	(x,	1);
	create_insn	(x=0X233A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X233A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X233AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X233B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X233B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X233C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X233C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X233D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X233D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X233E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X233E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X233F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X233F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X233FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23400);
	op_stkvar	(x,	1);
	create_insn	(x=0X23404);
	op_stkvar	(x,	1);
	create_insn	(x=0X2340C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23410);
	op_stkvar	(x,	1);
	create_insn	(x=0X23418);
	op_stkvar	(x,	1);
	create_insn	(x=0X23420);
	op_stkvar	(x,	1);
	create_insn	(x=0X23428);
	op_stkvar	(x,	1);
	create_insn	(x=0X23430);
	op_stkvar	(x,	1);
	create_insn	(x=0X2343C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23440);
	op_stkvar	(x,	1);
	create_insn	(x=0X23448);
	op_stkvar	(x,	1);
	create_insn	(x=0X2344C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23454);
	op_stkvar	(x,	1);
	create_insn	(x=0X23458);
	op_stkvar	(x,	1);
	create_insn	(x=0X2345C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23464);
	op_stkvar	(x,	1);
	create_insn	(x=0X23468);
	op_stkvar	(x,	1);
	create_insn	(x=0X23470);
	op_stkvar	(x,	1);
	create_insn	(x=0X23478);
	op_stkvar	(x,	1);
	create_insn	(x=0X23480);
	op_stkvar	(x,	1);
	create_insn	(x=0X23488);
	op_stkvar	(x,	1);
	create_insn	(x=0X23494);
	op_stkvar	(x,	1);
	create_insn	(x=0X23498);
	op_stkvar	(x,	1);
	create_insn	(x=0X234A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X234A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X234AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X234B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X234B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X234BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X234C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X234C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X234D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X234D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X234E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X234EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X234F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X234F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X234FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23504);
	op_stkvar	(x,	1);
	create_insn	(x=0X23508);
	op_stkvar	(x,	1);
	create_insn	(x=0X2350C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23514);
	op_stkvar	(x,	1);
	create_insn	(x=0X23518);
	op_stkvar	(x,	1);
	create_insn	(x=0X23520);
	op_stkvar	(x,	1);
	create_insn	(x=0X23528);
	op_stkvar	(x,	1);
	create_insn	(x=0X23530);
	op_stkvar	(x,	1);
	create_insn	(x=0X23538);
	op_stkvar	(x,	1);
	create_insn	(x=0X23544);
	op_stkvar	(x,	1);
	create_insn	(x=0X23548);
	op_stkvar	(x,	1);
	create_insn	(x=0X23550);
	op_stkvar	(x,	1);
	create_insn	(x=0X23554);
	op_stkvar	(x,	1);
	create_insn	(x=0X2355C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23560);
	op_stkvar	(x,	1);
	create_insn	(x=0X23564);
	op_stkvar	(x,	1);
	create_insn	(x=0X2356C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23570);
	op_stkvar	(x,	1);
	create_insn	(x=0X23578);
	op_stkvar	(x,	1);
	create_insn	(x=0X23580);
	op_stkvar	(x,	1);
	create_insn	(x=0X23588);
	op_stkvar	(x,	1);
	create_insn	(x=0X23590);
	op_stkvar	(x,	1);
	create_insn	(x=0X2359C);
	op_stkvar	(x,	1);
	create_insn	(x=0X235A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X235A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X235AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X235B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X235B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X235BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X235C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X235C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X235D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X235D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X235E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X235E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X235EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X235F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X235FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23604);
	op_stkvar	(x,	1);
	create_insn	(x=0X2360C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23610);
	op_stkvar	(x,	1);
	create_insn	(x=0X23618);
	op_stkvar	(x,	1);
	create_insn	(x=0X23620);
	op_stkvar	(x,	1);
	create_insn	(x=0X23628);
	op_stkvar	(x,	1);
	create_insn	(x=0X23630);
	op_stkvar	(x,	1);
	create_insn	(x=0X23634);
	op_stkvar	(x,	1);
	create_insn	(x=0X2363C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23644);
	op_stkvar	(x,	1);
	create_insn	(x=0X2364C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23654);
	op_stkvar	(x,	1);
	create_insn	(x=0X23658);
	op_stkvar	(x,	1);
	create_insn	(x=0X23668);
	op_hex		(x,	1);
	create_insn	(x=0X2366C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23674);
	op_stkvar	(x,	1);
	create_insn	(x=0X2368C);
	op_stkvar	(x,	1);
	set_name	(0X2368C,	"AES_set_encrypt_key");
	create_insn	(x=0X23698);
	op_stkvar	(x,	1);
	create_insn	(x=0X2369C);
	op_stkvar	(x,	1);
	create_insn	(x=0X236A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X236A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X236AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X236B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X236C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X236D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X236DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X236E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X236F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X23700);
	op_stkvar	(x,	1);
	create_insn	(x=0X23704);
	op_stkvar	(x,	1);
	create_insn	(x=0X23708);
	op_stkvar	(x,	1);
	create_insn	(x=0X23714);
	op_stkvar	(x,	1);
	create_insn	(x=0X23724);
	op_stkvar	(x,	1);
	create_insn	(x=0X23730);
	op_stkvar	(x,	1);
	create_insn	(x=0X23740);
	op_stkvar	(x,	1);
	create_insn	(x=0X2374C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23758);
	op_stkvar	(x,	1);
	create_insn	(x=0X2376C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23780);
	op_stkvar	(x,	1);
	create_insn	(x=0X23790);
	op_stkvar	(x,	1);
	create_insn	(x=0X23798);
	op_stkvar	(x,	1);
	create_insn	(x=0X237A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X237B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X237C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X237D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X237EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X237F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X23804);
	op_stkvar	(x,	1);
	create_insn	(x=0X23818);
	op_stkvar	(x,	1);
	create_insn	(x=0X2382C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23840);
	op_stkvar	(x,	1);
	create_insn	(x=0X23848);
	op_stkvar	(x,	1);
	create_insn	(x=0X23858);
	op_stkvar	(x,	1);
	create_insn	(x=0X2386C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23880);
	op_stkvar	(x,	1);
	create_insn	(x=0X23894);
	op_stkvar	(x,	1);
	create_insn	(x=0X238A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X238AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X238B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X238B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X238C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X238C8);
	op_hex		(x,	1);
	create_insn	(x=0X238CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X238D4);
	op_hex		(x,	1);
	create_insn	(x=0X238DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X238E4);
	op_hex		(x,	1);
	create_insn	(x=0X238E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X238F0);
	op_hex		(x,	1);
	create_insn	(x=0X238F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X238FC);
	op_hex		(x,	1);
	create_insn	(x=0X23900);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X23908);
	op_hex		(x,	1);
	create_insn	(x=0X23910);
	op_stkvar	(x,	1);
	create_insn	(x=0X23918);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X23920);
	op_hex		(x,	1);
	create_insn	(x=0X23928);
	op_stkvar	(x,	1);
	create_insn	(x=0X2392C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2393C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23944);
	op_stkvar	(x,	1);
	create_insn	(x=0X23950);
	op_stkvar	(x,	1);
	create_insn	(x=0X23964);
	op_stkvar	(x,	1);
	create_insn	(x=0X2396C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23978);
	op_stkvar	(x,	1);
	create_insn	(x=0X2398C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23994);
	op_stkvar	(x,	1);
	create_insn	(x=0X239A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X239B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X239BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X239C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X239D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X239D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X239E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X239E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X239F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X23A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X23A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X23A28);
	op_stkvar	(x,	1);
	create_insn	(x=0X23A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X23A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X23A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X23A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X23A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23AA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X23AAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X23ABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23AC4);
	op_hex		(x,	1);
	create_insn	(x=0X23AC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X23AD0);
	op_hex		(x,	1);
	create_insn	(x=0X23AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X23AE0);
	op_hex		(x,	1);
	create_insn	(x=0X23AE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X23AEC);
	op_hex		(x,	1);
	create_insn	(x=0X23AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X23AF8);
	op_hex		(x,	1);
	create_insn	(x=0X23AFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X23B04);
	op_hex		(x,	1);
	create_insn	(x=0X23B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23B14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X23B1C);
	op_hex		(x,	1);
	create_insn	(x=0X23B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X23B28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X23B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X23B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X23B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X23B68);
	op_stkvar	(x,	1);
	create_insn	(x=0X23B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X23B88);
	op_stkvar	(x,	1);
	create_insn	(x=0X23B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X23B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X23BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X23BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23BCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X23BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X23BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X23C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X23C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X23C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23C34);
	op_stkvar	(x,	1);
	create_insn	(x=0X23C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X23C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X23C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X23C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X23CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X23CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X23CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X23CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X23CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X23CF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X23D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X23D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X23D10);
	op_hex		(x,	1);
	create_insn	(x=0X23D14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X23D1C);
	op_hex		(x,	1);
	create_insn	(x=0X23D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X23D2C);
	op_hex		(x,	1);
	create_insn	(x=0X23D30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X23D38);
	op_hex		(x,	1);
	create_insn	(x=0X23D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X23D44);
	op_hex		(x,	1);
	create_insn	(x=0X23D48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X23D50);
	op_hex		(x,	1);
	create_insn	(x=0X23D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X23D60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X23D68);
	op_hex		(x,	1);
	create_insn	(x=0X23D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X23D74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X23D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X23D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X23DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X23DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X23DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X23DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23DE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X23DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X23E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X23E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X23E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X23E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X23E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X23E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X23E4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X23E54);
	op_hex		(x,	1);
	create_insn	(x=0X23E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23E64);
	op_hex		(x,	1);
	create_insn	(x=0X23E68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X23E70);
	op_hex		(x,	1);
	create_insn	(x=0X23E78);
	op_stkvar	(x,	1);
	create_insn	(x=0X23E80);
	op_hex		(x,	1);
	create_insn	(x=0X23E84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X23E8C);
	op_hex		(x,	1);
	create_insn	(x=0X23E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X23E98);
	op_hex		(x,	1);
	create_insn	(x=0X23E9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X23EA4);
	op_hex		(x,	1);
	create_insn	(x=0X23EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X23EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X23EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X23ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X23EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X23EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F08);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F28);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F30);
	op_stkvar	(x,	1);
	create_insn	(0X23F38);
	create_insn	(x=0X23F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F40);
	op_stkvar	(x,	1);
	create_dword	(x=0X23F54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X23F58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X23F5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X23F60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X23F64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X23F68);
	set_name	(0X23F68,	"AES_set_decrypt_key");
	create_insn	(x=0X23F74);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F80);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F84);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F88);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X24004);
	op_stkvar	(x,	1);
	create_insn	(x=0X24014);
	op_stkvar	(x,	1);
	create_insn	(x=0X2401C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24024);
	op_stkvar	(x,	1);
	create_insn	(x=0X2402C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24038);
	op_stkvar	(x,	1);
	create_insn	(x=0X24044);
	op_stkvar	(x,	1);
	create_insn	(x=0X24048);
	op_stkvar	(x,	1);
	create_insn	(x=0X24054);
	op_stkvar	(x,	1);
	create_insn	(x=0X2405C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24068);
	op_stkvar	(x,	1);
	create_insn	(x=0X24078);
	op_stkvar	(x,	1);
	create_insn	(x=0X24084);
	op_stkvar	(x,	1);
	create_insn	(x=0X2408C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24094);
	op_stkvar	(x,	1);
	create_insn	(x=0X240A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X240AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X240B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X240BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X240C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X240D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X240E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X240EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X240F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X240FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X24108);
	op_stkvar	(x,	1);
	create_insn	(x=0X24114);
	op_stkvar	(x,	1);
	create_insn	(x=0X24118);
	op_stkvar	(x,	1);
	create_insn	(x=0X24124);
	op_stkvar	(x,	1);
	create_insn	(x=0X2412C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24138);
	op_stkvar	(x,	1);
	create_insn	(x=0X24148);
	op_stkvar	(x,	1);
	create_insn	(x=0X24154);
	op_stkvar	(x,	1);
	create_insn	(x=0X2415C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24164);
	op_stkvar	(x,	1);
	create_insn	(x=0X2416C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24170);
	op_stkvar	(x,	1);
	create_insn	(x=0X24178);
	op_stkvar	(x,	1);
	create_insn	(x=0X2417C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24180);
	op_stkvar	(x,	1);
	create_insn	(x=0X24190);
	op_stkvar	(x,	1);
	create_insn	(x=0X24198);
	op_stkvar	(x,	1);
	create_insn	(x=0X241A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X241A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X241B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X241B8);
	op_hex		(x,	1);
	create_insn	(x=0X241BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X241C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X241D0);
	op_hex		(x,	1);
	create_insn	(x=0X241D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X241DC);
	op_hex		(x,	1);
	create_insn	(x=0X241E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X241EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X241F8);
	op_hex		(x,	1);
	create_insn	(x=0X241FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24204);
	op_hex		(x,	1);
	create_insn	(x=0X24208);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24214);
	op_stkvar	(x,	1);
	create_insn	(x=0X2421C);
	op_hex		(x,	1);
	create_insn	(x=0X24220);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24228);
	op_hex		(x,	1);
	create_insn	(x=0X2422C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24238);
	op_stkvar	(x,	1);
	create_insn	(x=0X24240);
	op_stkvar	(x,	1);
	create_insn	(x=0X24248);
	op_stkvar	(x,	1);
	create_insn	(x=0X24258);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24260);
	op_hex		(x,	1);
	create_insn	(x=0X24264);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2426C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2427C);
	op_hex		(x,	1);
	create_insn	(x=0X24280);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24288);
	op_hex		(x,	1);
	create_insn	(x=0X2428C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24298);
	op_stkvar	(x,	1);
	create_insn	(x=0X242A8);
	op_hex		(x,	1);
	create_insn	(x=0X242AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X242B4);
	op_hex		(x,	1);
	create_insn	(x=0X242B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X242C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X242D0);
	op_hex		(x,	1);
	create_insn	(x=0X242D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X242DC);
	op_hex		(x,	1);
	create_insn	(x=0X242E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X242F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X242F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X24308);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24310);
	op_hex		(x,	1);
	create_insn	(x=0X24314);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2431C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2432C);
	op_hex		(x,	1);
	create_insn	(x=0X24330);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24338);
	op_hex		(x,	1);
	create_insn	(x=0X2433C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24348);
	op_stkvar	(x,	1);
	create_insn	(x=0X24358);
	op_hex		(x,	1);
	create_insn	(x=0X2435C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24364);
	op_hex		(x,	1);
	create_insn	(x=0X24368);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24374);
	op_stkvar	(x,	1);
	create_insn	(x=0X24380);
	op_hex		(x,	1);
	create_insn	(x=0X24384);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2438C);
	op_hex		(x,	1);
	create_insn	(x=0X24390);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X243A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X243A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X243B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X243C0);
	op_hex		(x,	1);
	create_insn	(x=0X243C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X243CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X243DC);
	op_hex		(x,	1);
	create_insn	(x=0X243E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X243E8);
	op_hex		(x,	1);
	create_insn	(x=0X243EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X243F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X24408);
	op_hex		(x,	1);
	create_insn	(x=0X2440C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24414);
	op_hex		(x,	1);
	create_insn	(x=0X24418);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24424);
	op_stkvar	(x,	1);
	create_insn	(x=0X24430);
	op_hex		(x,	1);
	create_insn	(x=0X24434);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2443C);
	op_hex		(x,	1);
	create_insn	(x=0X24440);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24450);
	op_stkvar	(x,	1);
	create_insn	(x=0X24458);
	op_stkvar	(x,	1);
	create_insn	(x=0X2445C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24464);
	op_stkvar	(x,	1);
	create_insn	(x=0X24474);
	op_stkvar	(x,	1);
	create_insn	(x=0X24478);
	op_stkvar	(x,	1);
	create_dword	(x=0X24488);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X2448C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X24490);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X24494);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X24498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2449C);
	op_stkvar	(x,	1);
	set_name	(0X2449C,	"AES_encrypt");
	create_insn	(x=0X244A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X244AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X244B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X244B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X244B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X244BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X244C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X244DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X244F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X24500);
	op_stkvar	(x,	1);
	create_insn	(x=0X2450C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24510);
	op_stkvar	(x,	1);
	create_insn	(x=0X24520);
	op_stkvar	(x,	1);
	create_insn	(x=0X24534);
	op_stkvar	(x,	1);
	create_insn	(x=0X24548);
	op_stkvar	(x,	1);
	create_insn	(x=0X24558);
	op_stkvar	(x,	1);
	create_insn	(x=0X24568);
	op_stkvar	(x,	1);
	create_insn	(x=0X2456C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2457C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24590);
	op_stkvar	(x,	1);
	create_insn	(x=0X245A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X245B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X245C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X245C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X245D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X245EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X24600);
	op_stkvar	(x,	1);
	create_insn	(x=0X24610);
	op_stkvar	(x,	1);
	create_insn	(x=0X24620);
	op_stkvar	(x,	1);
	create_insn	(x=0X24624);
	op_stkvar	(x,	1);
	create_insn	(x=0X24630);
	op_stkvar	(x,	1);
	create_insn	(x=0X24634);
	op_stkvar	(x,	1);
	create_insn	(x=0X2463C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24644);
	op_stkvar	(x,	1);
	create_insn	(x=0X2464C);
	op_hex		(x,	1);
	create_insn	(x=0X24650);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2465C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24664);
	op_hex		(x,	1);
	create_insn	(x=0X24668);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24674);
	op_stkvar	(x,	1);
	create_insn	(x=0X24678);
	op_hex		(x,	1);
	create_insn	(x=0X2467C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24688);
	op_stkvar	(x,	1);
	create_insn	(x=0X24698);
	op_stkvar	(x,	1);
	create_insn	(x=0X2469C);
	op_stkvar	(x,	1);
	create_insn	(x=0X246A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X246AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X246B4);
	op_hex		(x,	1);
	create_insn	(x=0X246B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X246C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X246CC);
	op_hex		(x,	1);
	create_insn	(x=0X246D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X246DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X246E0);
	op_hex		(x,	1);
	create_insn	(x=0X246E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X246F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X24700);
	op_stkvar	(x,	1);
	create_insn	(x=0X24704);
	op_stkvar	(x,	1);
	create_insn	(x=0X2470C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24714);
	op_stkvar	(x,	1);
	create_insn	(x=0X2471C);
	op_hex		(x,	1);
	create_insn	(x=0X24720);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2472C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24734);
	op_hex		(x,	1);
	create_insn	(x=0X24738);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24744);
	op_stkvar	(x,	1);
	create_insn	(x=0X24748);
	op_hex		(x,	1);
	create_insn	(x=0X2474C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24758);
	op_stkvar	(x,	1);
	create_insn	(x=0X24768);
	op_stkvar	(x,	1);
	create_insn	(x=0X2476C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24774);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2477C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24784);
	op_hex		(x,	1);
	create_insn	(x=0X24788);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24794);
	op_stkvar	(x,	1);
	create_insn	(x=0X2479C);
	op_hex		(x,	1);
	create_insn	(x=0X247A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X247AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X247B0);
	op_hex		(x,	1);
	create_insn	(x=0X247B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X247C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X247D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X247D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X247DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X247E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X247E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X247EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X247F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X24800);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24808);
	op_stkvar	(x,	1);
	create_insn	(x=0X24810);
	op_hex		(x,	1);
	create_insn	(x=0X24814);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24820);
	op_stkvar	(x,	1);
	create_insn	(x=0X24828);
	op_hex		(x,	1);
	create_insn	(x=0X2482C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24838);
	op_stkvar	(x,	1);
	create_insn	(x=0X2483C);
	op_hex		(x,	1);
	create_insn	(x=0X24840);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2484C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24858);
	op_stkvar	(x,	1);
	create_insn	(x=0X2485C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24864);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2486C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24874);
	op_hex		(x,	1);
	create_insn	(x=0X24878);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24884);
	op_stkvar	(x,	1);
	create_insn	(x=0X2488C);
	op_hex		(x,	1);
	create_insn	(x=0X24890);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2489C);
	op_stkvar	(x,	1);
	create_insn	(x=0X248A0);
	op_hex		(x,	1);
	create_insn	(x=0X248A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X248B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X248C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X248C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X248CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X248D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X248DC);
	op_hex		(x,	1);
	create_insn	(x=0X248E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X248EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X248F4);
	op_hex		(x,	1);
	create_insn	(x=0X248F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24904);
	op_stkvar	(x,	1);
	create_insn	(x=0X24908);
	op_hex		(x,	1);
	create_insn	(x=0X2490C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24918);
	op_stkvar	(x,	1);
	create_insn	(x=0X24928);
	op_stkvar	(x,	1);
	create_insn	(x=0X2492C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24934);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2493C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24944);
	op_hex		(x,	1);
	create_insn	(x=0X24948);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24954);
	op_stkvar	(x,	1);
	create_insn	(x=0X2495C);
	op_hex		(x,	1);
	create_insn	(x=0X24960);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2496C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24970);
	op_hex		(x,	1);
	create_insn	(x=0X24974);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24980);
	op_stkvar	(x,	1);
	create_insn	(x=0X24990);
	op_stkvar	(x,	1);
	create_insn	(x=0X24998);
	op_stkvar	(x,	1);
	create_insn	(x=0X249A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X249A8);
	op_hex		(x,	1);
	create_insn	(x=0X249AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X249B4);
	op_hex		(x,	1);
	create_insn	(x=0X249B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X249C0);
	op_hex		(x,	1);
	create_insn	(x=0X249C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X249D0);
	op_hex		(x,	1);
	create_insn	(x=0X249D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X249DC);
	op_hex		(x,	1);
	create_insn	(x=0X249E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X249E8);
	op_hex		(x,	1);
	create_insn	(x=0X249EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X249F4);
	op_hex		(x,	1);
	create_insn	(x=0X249FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X24A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X24A0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24A14);
	op_hex		(x,	1);
	create_insn	(x=0X24A18);
	op_stkvar	(x,	1);
	create_insn	(x=0X24A20);
	op_stkvar	(x,	1);
	create_insn	(x=0X24A28);
	op_stkvar	(x,	1);
	create_insn	(x=0X24A30);
	op_hex		(x,	1);
	create_insn	(x=0X24A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X24A40);
	op_stkvar	(x,	1);
	create_insn	(x=0X24A48);
	op_hex		(x,	1);
	create_insn	(x=0X24A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X24A58);
	op_stkvar	(x,	1);
	create_insn	(x=0X24A5C);
	op_hex		(x,	1);
	create_insn	(x=0X24A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X24A6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24A74);
	op_hex		(x,	1);
	create_insn	(x=0X24A78);
	op_stkvar	(x,	1);
	create_insn	(x=0X24A80);
	op_hex		(x,	1);
	create_insn	(x=0X24A84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24A8C);
	op_hex		(x,	1);
	create_insn	(x=0X24A94);
	op_stkvar	(x,	1);
	create_insn	(x=0X24A9C);
	op_hex		(x,	1);
	create_insn	(x=0X24AA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24AA8);
	op_hex		(x,	1);
	create_insn	(x=0X24AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X24AB4);
	op_hex		(x,	1);
	create_insn	(x=0X24AB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24AC0);
	op_hex		(x,	1);
	create_insn	(x=0X24AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X24AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X24ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X24AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X24AEC);
	op_hex		(x,	1);
	create_insn	(x=0X24AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X24AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X24B04);
	op_hex		(x,	1);
	create_insn	(x=0X24B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X24B1C);
	op_hex		(x,	1);
	create_insn	(x=0X24B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X24B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24B30);
	op_hex		(x,	1);
	create_insn	(x=0X24B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X24B40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24B48);
	op_hex		(x,	1);
	create_insn	(x=0X24B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24B54);
	op_hex		(x,	1);
	create_insn	(x=0X24B58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24B60);
	op_hex		(x,	1);
	create_insn	(x=0X24B68);
	op_stkvar	(x,	1);
	create_insn	(x=0X24B70);
	op_hex		(x,	1);
	create_insn	(x=0X24B74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24B7C);
	op_hex		(x,	1);
	create_insn	(x=0X24B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X24B88);
	op_hex		(x,	1);
	create_insn	(x=0X24B8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24B94);
	op_hex		(x,	1);
	create_insn	(x=0X24B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24BAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X24BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X24BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X24BC0);
	op_hex		(x,	1);
	create_insn	(x=0X24BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X24BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X24BD8);
	op_hex		(x,	1);
	create_insn	(x=0X24BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X24BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X24BF0);
	op_hex		(x,	1);
	create_insn	(x=0X24BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X24C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X24C04);
	op_hex		(x,	1);
	create_insn	(x=0X24C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24C14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24C1C);
	op_hex		(x,	1);
	create_insn	(x=0X24C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X24C28);
	op_hex		(x,	1);
	create_insn	(x=0X24C2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24C34);
	op_hex		(x,	1);
	create_insn	(x=0X24C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24C44);
	op_hex		(x,	1);
	create_insn	(x=0X24C48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24C50);
	op_hex		(x,	1);
	create_insn	(x=0X24C58);
	op_stkvar	(x,	1);
	create_insn	(x=0X24C5C);
	op_hex		(x,	1);
	create_insn	(x=0X24C60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24C68);
	op_hex		(x,	1);
	create_insn	(x=0X24C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X24C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X24C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X24C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24C94);
	op_hex		(x,	1);
	create_insn	(x=0X24C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X24CAC);
	op_hex		(x,	1);
	create_insn	(x=0X24CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X24CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X24CC4);
	op_hex		(x,	1);
	create_insn	(x=0X24CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X24CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X24CD8);
	op_hex		(x,	1);
	create_dword	(x=0X24CEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X24CF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X24CF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X24CF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X24CFC);
	op_stkvar	(x,	1);
	set_name	(0X24CFC,	"AES_decrypt");
	create_insn	(x=0X24D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X24D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X24D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X24D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X24D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X24D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X24D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X24D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X24D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X24D94);
	op_stkvar	(x,	1);
	create_insn	(x=0X24DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X24DB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X24DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X24DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X24DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X24DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E24);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E60);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E80);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E90);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X24E9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X24EAC);
	op_hex		(x,	1);
	create_insn	(x=0X24EB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X24EC4);
	op_hex		(x,	1);
	create_insn	(x=0X24EC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24ED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X24ED8);
	op_hex		(x,	1);
	create_insn	(x=0X24EDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X24EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X24EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X24F04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24F0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24F14);
	op_hex		(x,	1);
	create_insn	(x=0X24F18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X24F2C);
	op_hex		(x,	1);
	create_insn	(x=0X24F30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24F40);
	op_hex		(x,	1);
	create_insn	(x=0X24F44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X24F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X24F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X24F6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24F74);
	op_stkvar	(x,	1);
	create_insn	(x=0X24F7C);
	op_hex		(x,	1);
	create_insn	(x=0X24F80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24F8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24F94);
	op_hex		(x,	1);
	create_insn	(x=0X24F98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X24FA8);
	op_hex		(x,	1);
	create_insn	(x=0X24FAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X24FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X24FCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X24FD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24FDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X24FE4);
	op_hex		(x,	1);
	create_insn	(x=0X24FE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X24FFC);
	op_hex		(x,	1);
	create_insn	(x=0X25000);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2500C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25010);
	op_hex		(x,	1);
	create_insn	(x=0X25014);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X25020);
	op_stkvar	(x,	1);
	create_insn	(x=0X25030);
	op_stkvar	(x,	1);
	create_insn	(x=0X25034);
	op_stkvar	(x,	1);
	create_insn	(x=0X2503C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25040);
	op_stkvar	(x,	1);
	create_insn	(x=0X25048);
	op_stkvar	(x,	1);
	create_insn	(x=0X2504C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25058);
	op_stkvar	(x,	1);
	create_insn	(x=0X25060);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X25068);
	op_stkvar	(x,	1);
	create_insn	(x=0X25070);
	op_hex		(x,	1);
	create_insn	(x=0X25074);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X25080);
	op_stkvar	(x,	1);
	create_insn	(x=0X25088);
	op_hex		(x,	1);
	create_insn	(x=0X2508C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X25098);
	op_stkvar	(x,	1);
	create_insn	(x=0X2509C);
	op_hex		(x,	1);
	create_insn	(x=0X250A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X250AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X250B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X250BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X250C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X250CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X250D4);
	op_hex		(x,	1);
	create_insn	(x=0X250D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X250E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X250EC);
	op_hex		(x,	1);
	create_insn	(x=0X250F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X250FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X25100);
	op_hex		(x,	1);
	create_insn	(x=0X25104);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X25110);
	op_stkvar	(x,	1);
	create_insn	(x=0X25120);
	op_stkvar	(x,	1);
	create_insn	(x=0X25124);
	op_stkvar	(x,	1);
	create_insn	(x=0X2512C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X25134);
	op_stkvar	(x,	1);
	create_insn	(x=0X2513C);
	op_hex		(x,	1);
	create_insn	(x=0X25140);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2514C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25154);
	op_hex		(x,	1);
	create_insn	(x=0X25158);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X25164);
	op_stkvar	(x,	1);
	create_insn	(x=0X25168);
	op_hex		(x,	1);
	create_insn	(x=0X2516C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X25178);
	op_stkvar	(x,	1);
	create_insn	(x=0X25188);
	op_stkvar	(x,	1);
	create_insn	(x=0X2518C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25194);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2519C);
	op_stkvar	(x,	1);
	create_insn	(x=0X251A4);
	op_hex		(x,	1);
	create_insn	(x=0X251A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X251B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X251BC);
	op_hex		(x,	1);
	create_insn	(x=0X251C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X251CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X251D0);
	op_hex		(x,	1);
	create_insn	(x=0X251D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X251E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X251F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X251F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X25200);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2520C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25214);
	op_hex		(x,	1);
	create_insn	(x=0X25218);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X25228);
	op_stkvar	(x,	1);
	create_insn	(x=0X25230);
	op_hex		(x,	1);
	create_insn	(x=0X25234);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X25244);
	op_stkvar	(x,	1);
	create_insn	(x=0X25248);
	op_hex		(x,	1);
	create_insn	(x=0X2524C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2525C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25268);
	op_stkvar	(x,	1);
	create_insn	(x=0X2526C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25274);
	op_hex		(x,	1);
	create_insn	(x=0X25278);
	op_stkvar	(x,	1);
	create_insn	(x=0X25280);
	op_stkvar	(x,	1);
	create_insn	(x=0X25288);
	op_stkvar	(x,	1);
	create_insn	(x=0X25290);
	op_hex		(x,	1);
	create_insn	(x=0X25298);
	op_stkvar	(x,	1);
	create_insn	(x=0X252A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X252A8);
	op_hex		(x,	1);
	create_insn	(x=0X252B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X252B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X252BC);
	op_hex		(x,	1);
	create_insn	(x=0X252C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X252CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X252D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X252E0);
	op_hex		(x,	1);
	create_insn	(x=0X252E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X252F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X252FC);
	op_hex		(x,	1);
	create_insn	(x=0X25300);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X25310);
	op_stkvar	(x,	1);
	create_insn	(x=0X25314);
	op_hex		(x,	1);
	create_insn	(x=0X25318);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X25328);
	op_stkvar	(x,	1);
	create_insn	(x=0X25338);
	op_stkvar	(x,	1);
	create_insn	(x=0X2533C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25344);
	op_stkvar	(x,	1);
	create_insn	(x=0X2534C);
	op_hex		(x,	1);
	create_insn	(x=0X25354);
	op_stkvar	(x,	1);
	create_insn	(x=0X2535C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25364);
	op_hex		(x,	1);
	create_insn	(x=0X2536C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25374);
	op_stkvar	(x,	1);
	create_insn	(x=0X2537C);
	op_hex		(x,	1);
	create_insn	(x=0X25384);
	op_stkvar	(x,	1);
	create_insn	(x=0X2538C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25390);
	op_hex		(x,	1);
	create_insn	(x=0X25398);
	op_stkvar	(x,	1);
	create_insn	(x=0X253A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X253AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X253B4);
	op_hex		(x,	1);
	create_insn	(x=0X253B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X253C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X253D0);
	op_hex		(x,	1);
	create_insn	(x=0X253D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X253E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X253E8);
	op_hex		(x,	1);
	create_insn	(x=0X253EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X253FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X2540C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25410);
	op_stkvar	(x,	1);
	create_insn	(x=0X25418);
	op_stkvar	(x,	1);
	create_insn	(x=0X25420);
	op_hex		(x,	1);
	create_insn	(x=0X25428);
	op_stkvar	(x,	1);
	create_insn	(x=0X25430);
	op_stkvar	(x,	1);
	create_insn	(x=0X25438);
	op_hex		(x,	1);
	create_insn	(x=0X25440);
	op_stkvar	(x,	1);
	create_insn	(x=0X25448);
	op_stkvar	(x,	1);
	create_insn	(x=0X25450);
	op_hex		(x,	1);
	create_insn	(x=0X25458);
	op_stkvar	(x,	1);
	create_insn	(x=0X25460);
	op_stkvar	(x,	1);
	create_insn	(x=0X25464);
	op_hex		(x,	1);
	create_insn	(x=0X2546C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25474);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X25480);
	op_stkvar	(x,	1);
	create_insn	(x=0X25488);
	op_hex		(x,	1);
	create_insn	(x=0X2548C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2549C);
	op_stkvar	(x,	1);
	create_insn	(x=0X254A4);
	op_hex		(x,	1);
	create_insn	(x=0X254A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X254B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X254BC);
	op_hex		(x,	1);
	create_insn	(x=0X254C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X254D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X254E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X254E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X254EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X254F4);
	op_hex		(x,	1);
	create_insn	(x=0X254FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X25504);
	op_stkvar	(x,	1);
	create_insn	(x=0X2550C);
	op_hex		(x,	1);
	create_insn	(x=0X25514);
	op_stkvar	(x,	1);
	create_insn	(x=0X2551C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25524);
	op_hex		(x,	1);
	create_insn	(x=0X2552C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25534);
	op_stkvar	(x,	1);
	create_insn	(x=0X25538);
	op_hex		(x,	1);
	create_dword	(x=0X2554C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X25550);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X25554);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X25558);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X2555C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X25560);
	set_name	(0X25560,	"AES_cbc_encrypt");
	create_insn	(x=0X2556C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25570);
	op_stkvar	(x,	1);
	create_insn	(x=0X25574);
	op_stkvar	(x,	1);
	create_insn	(x=0X25578);
	op_stkvar	(x,	1);
	create_insn	(x=0X2557C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25580);
	op_stkvar	(x,	1);
	create_insn	(x=0X25584);
	op_stkvar	(x,	1);
	create_insn	(x=0X25588);
	op_stkvar	(x,	1);
	create_insn	(x=0X2558C);
	op_stkvar	(x,	1);
	create_insn	(0X2559C);
	create_insn	(x=0X255A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X255A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X255AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X255B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X255B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X255C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X255C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X255D8);
	op_hex		(x,	1);
	create_insn	(x=0X255E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X255E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X255EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X255F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X255FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X25600);
	op_stkvar	(x,	1);
	create_insn	(x=0X25608);
	op_stkvar	(x,	1);
	create_insn	(x=0X2560C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25610);
	op_stkvar	(x,	1);
	create_insn	(x=0X25618);
	op_stkvar	(x,	1);
	create_insn	(x=0X2561C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25624);
	op_stkvar	(x,	1);
	create_insn	(x=0X25628);
	op_stkvar	(x,	1);
	create_insn	(x=0X25630);
	op_stkvar	(x,	1);
	create_insn	(x=0X25634);
	op_stkvar	(x,	1);
	create_insn	(x=0X25640);
	op_stkvar	(x,	1);
	create_insn	(x=0X25650);
	op_stkvar	(x,	1);
	create_insn	(x=0X25658);
	op_stkvar	(x,	1);
	create_insn	(x=0X2565C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25664);
	op_stkvar	(x,	1);
	create_insn	(x=0X25668);
	op_stkvar	(x,	1);
	create_insn	(x=0X25674);
	op_stkvar	(x,	1);
	create_insn	(x=0X25678);
	op_stkvar	(x,	1);
	create_insn	(x=0X25688);
	op_hex		(x,	1);
	create_insn	(x=0X25690);
	op_stkvar	(x,	1);
	create_insn	(x=0X25698);
	op_stkvar	(x,	1);
	create_insn	(x=0X2569C);
	op_stkvar	(x,	1);
	create_insn	(x=0X256A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X256AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X256B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X256B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X256BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X256C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X256C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X256D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X256E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X256E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X256F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X256F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X256F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X25700);
	op_stkvar	(x,	1);
	create_insn	(x=0X25704);
	op_stkvar	(x,	1);
	set_cmt	(0X25708,	"dest",	0);
	create_insn	(x=0X25708);
	op_stkvar	(x,	1);
	set_cmt	(0X2570C,	"src",	0);
	create_insn	(x=0X2570C);
	op_stkvar	(x,	1);
	set_cmt	(0X25710,	"n",	0);
	create_insn	(x=0X2571C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25720);
	op_stkvar	(x,	1);
	create_insn	(x=0X25730);
	op_stkvar	(x,	1);
	create_insn	(x=0X25734);
	op_stkvar	(x,	1);
	create_insn	(x=0X25738);
	op_stkvar	(x,	1);
	create_insn	(x=0X25744);
	op_stkvar	(x,	1);
	create_insn	(x=0X2574C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25750);
	op_stkvar	(x,	1);
	create_insn	(x=0X25758);
	op_stkvar	(x,	1);
	create_insn	(x=0X2575C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25768);
	op_stkvar	(x,	1);
	create_insn	(x=0X2576C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2577C);
	op_hex		(x,	1);
	create_insn	(x=0X25784);
	op_stkvar	(x,	1);
	create_insn	(x=0X2578C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25790);
	op_stkvar	(x,	1);
	create_insn	(x=0X2579C);
	op_stkvar	(x,	1);
	create_insn	(x=0X257A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X257A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X257AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X257B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X257B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X257BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X257C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X257C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X257D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X257E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X257E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X257EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X257F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X25800);
	op_stkvar	(x,	1);
	create_insn	(x=0X25804);
	op_stkvar	(x,	1);
	create_insn	(x=0X2580C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25814);
	op_stkvar	(x,	1);
	create_insn	(x=0X25824);
	op_stkvar	(x,	1);
	create_insn	(x=0X25828);
	op_stkvar	(x,	1);
	create_insn	(x=0X25838);
	op_hex		(x,	1);
	create_insn	(x=0X25840);
	op_stkvar	(x,	1);
	create_insn	(x=0X25848);
	op_stkvar	(x,	1);
	create_insn	(x=0X2584C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25850);
	op_stkvar	(x,	1);
	create_insn	(x=0X2585C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25860);
	op_stkvar	(x,	1);
	set_cmt	(0X25864,	"dest",	0);
	create_insn	(x=0X25864);
	op_stkvar	(x,	1);
	set_cmt	(0X25868,	"src",	0);
	create_insn	(x=0X25868);
	op_stkvar	(x,	1);
	set_cmt	(0X2586C,	"n",	0);
	create_insn	(x=0X25878);
	op_stkvar	(x,	1);
	set_cmt	(0X2587C,	"dest",	0);
	set_cmt	(0X25880,	"src",	0);
	create_insn	(x=0X25880);
	op_stkvar	(x,	1);
	set_cmt	(0X25884,	"n",	0);
	create_insn	(x=0X2588C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25890);
	op_stkvar	(x,	1);
	create_insn	(x=0X25894);
	op_stkvar	(x,	1);
	create_insn	(x=0X258A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X258A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X258AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X258B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X258B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X258C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X258C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X258D8);
	op_hex		(x,	1);
	create_insn	(x=0X258E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X258E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X258EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X258F8);
	op_stkvar	(x,	1);
	set_cmt	(0X258FC,	"dest",	0);
	create_insn	(x=0X258FC);
	op_stkvar	(x,	1);
	set_cmt	(0X25900,	"src",	0);
	set_cmt	(0X25904,	"n",	0);
	create_insn	(x=0X2590C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25914);
	op_stkvar	(x,	1);
	create_insn	(x=0X25918);
	op_stkvar	(x,	1);
	create_insn	(x=0X25920);
	op_stkvar	(x,	1);
	create_insn	(x=0X25924);
	op_stkvar	(x,	1);
	create_insn	(x=0X2592C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25930);
	op_stkvar	(x,	1);
	create_insn	(x=0X2593C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25948);
	op_stkvar	(x,	1);
	set_cmt	(0X2594C,	"dest",	0);
	set_cmt	(0X25950,	"src",	0);
	create_insn	(x=0X25950);
	op_stkvar	(x,	1);
	set_cmt	(0X25954,	"n",	0);
	create_insn	(x=0X2595C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25964);
	op_stkvar	(x,	1);
	create_insn	(x=0X25968);
	op_stkvar	(x,	1);
	create_insn	(x=0X25974);
	op_stkvar	(x,	1);
	create_insn	(x=0X2597C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25980);
	op_stkvar	(x,	1);
	create_insn	(x=0X25988);
	op_stkvar	(x,	1);
	create_insn	(x=0X2598C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25998);
	op_stkvar	(x,	1);
	create_insn	(x=0X2599C);
	op_stkvar	(x,	1);
	create_insn	(x=0X259AC);
	op_hex		(x,	1);
	create_insn	(x=0X259B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X259BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X259C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X259C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X259D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X259D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X259DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X259E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X259E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X259F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X25A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X25A0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X25A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X25A1C);
	op_stkvar	(x,	1);
	set_cmt	(0X25A20,	"dest",	0);
	create_insn	(x=0X25A20);
	op_stkvar	(x,	1);
	set_cmt	(0X25A24,	"src",	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_7(void) {
        auto x;
#define id x

	set_cmt	(0X25A28,	"n",	0);
	set_cmt	(0X25A38,	"Alternative name is '.udivsi3_nodiv0'",	0);
	create_insn	(0X25A38);
	set_name	(0X25A38,	"__udivsi3");
	create_insn	(0X25BFC);
	create_insn	(0X25C08);
	create_insn	(0X25C18);
	create_insn	(0X25C24);
	set_name	(0X25C24,	"__aeabi_uidivmod");
	create_insn	(0X25C44);
	set_name	(0X25C44,	"__aeabi_ldivmod");
	create_insn	(0X25C6C);
	create_insn	(x=0X25C78);
	op_stkvar	(x,	1);
	create_insn	(0X25C88);
	set_name	(0X25C88,	"__aeabi_ldiv0");
	set_cmt	(0X25C8C,	"sig",	0);
	create_insn	(0X25C98);
	set_name	(0X25C98,	"__gnu_uldivmod_helper");
	create_insn	(x=0X25CC0);
	op_stkvar	(x,	1);
	create_insn	(0X25CD4);
	set_name	(0X25CD4,	"__gnu_ldivmod_helper");
	create_insn	(x=0X25CFC);
	op_stkvar	(x,	1);
	create_insn	(0X25D10);
	set_name	(0X25D10,	"__divdi3");
	create_insn	(x=0X25D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X25D80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X25E50);
	create_insn	(x=0X25E60);
	op_stkvar	(x,	1);
	create_insn	(0X25E8C);
	create_insn	(0X25F8C);
	create_insn	(x=0X25FBC);
	op_stkvar	(x,	1);
	create_insn	(0X25FDC);
	create_insn	(x=0X25FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X25FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X26004);
	op_stkvar	(x,	1);
	create_insn	(0X2600C);
	create_insn	(x=0X26058);
	op_stkvar	(x,	1);
	create_insn	(x=0X2607C);
	op_stkvar	(x,	1);
	create_insn	(x=0X260BC);
	op_stkvar	(x,	1);
	create_insn	(0X26100);
	create_insn	(x=0X26128);
	op_stkvar	(x,	1);
	create_insn	(x=0X26130);
	op_stkvar	(x,	1);
	create_insn	(x=0X26148);
	op_stkvar	(x,	1);
	create_insn	(x=0X2615C);
	op_stkvar	(x,	1);
	create_insn	(x=0X26180);
	op_stkvar	(x,	1);
	create_insn	(x=0X26184);
	op_stkvar	(x,	1);
	create_insn	(x=0X261C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X26230);
	op_stkvar	(x,	1);
	create_insn	(x=0X26244);
	op_hex		(x,	1);
	create_insn	(0X26260);
	create_insn	(0X26278);
	create_insn	(0X26288);
	create_insn	(0X26298);
	create_dword	(x=0X262A8);
	op_plain_offset	(x,	0,	0X25D2C);
	op_plain_offset	(x,	128,	0X25D2C);
	create_dword	(x=0X262AC);
	op_plain_offset	(x,	0,	0X34134);
	op_plain_offset	(x,	128,	0X34134);
	create_insn	(0X262B0);
	set_name	(0X262B0,	"__udivdi3");
	create_insn	(x=0X26308);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X263D8);
	create_insn	(0X26440);
	create_insn	(0X2653C);
	create_insn	(x=0X2658C);
	op_stkvar	(x,	1);
	create_insn	(x=0X265B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X265B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X265F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X26628);
	op_stkvar	(x,	1);
	create_insn	(x=0X26674);
	op_hex		(x,	1);
	create_insn	(0X26694);
	create_insn	(x=0X266E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X26704);
	op_stkvar	(x,	1);
	create_insn	(x=0X26744);
	op_stkvar	(x,	1);
	create_insn	(0X26788);
	create_insn	(0X267A0);
	create_insn	(0X267B0);
	create_insn	(0X267C0);
	create_dword	(x=0X267D0);
	op_plain_offset	(x,	0,	0X262C8);
	op_plain_offset	(x,	128,	0X262C8);
	create_dword	(x=0X267D4);
	op_plain_offset	(x,	0,	0X34134);
	op_plain_offset	(x,	128,	0X34134);
	set_cmt	(0X267D8,	"stat_buf",	0);
	create_insn	(0X267D8);
	set_name	(0X267D8,	"stat_0");
	set_cmt	(0X267DC,	"filename",	0);
	set_cmt	(0X267E0,	"ver",	0);
	set_cmt	(0X267E8,	"_fini",	0);
	create_insn	(0X267E8);
	set_name	(0X267E8,	".term_proc");
	create_byte	(0X267F0);
	make_array	(0X267F0,	0X100);
	set_name	(0X267F0,	"DjiCrc8Table");
	create_word	(0X268F0);
	make_array	(0X268F0,	0X100);
	set_name	(0X268F0,	"wCRC_Table");
	update_extra_cmt		(0X26AF0,	E_PREV + 0,	"; Function-local static variable");
	create_strlit	(0X26AF0,	0X26B06);
	set_name	(0X26AF0,	"__PRETTY_FUNCTION__.5734");
	make_array	(0X26B06,	0X2);
	create_strlit	(0X26B08,	0X26B0A);
	set_name	(0X26B08,	"a0");
	make_array	(0X26B0A,	0X2);
	create_strlit	(0X26B0C,	0X26B15);
	set_name	(0X26B0C,	"aCommonC");
	make_array	(0X26B15,	0X3);
	create_strlit	(0X26B18,	0X26B1E);
	set_name	(0X26B18,	"a02x");
	make_array	(0X26B1E,	0X2);
	create_strlit	(0X26B20,	0X26B23);
	set_name	(0X26B20,	"aRb");
	create_strlit	(0X26B24,	0X26B27);
	set_name	(0X26B24,	"aWb");
	create_strlit	(0X26B28,	0X26B2D);
	set_name	(0X26B28,	"aSync");
	make_array	(0X26B2D,	0X3);
	create_strlit	(0X26B30,	0X26B68);
	set_name	(0X26B30,	"aReceiveSigintP");
	create_strlit	(0X26B68,	0X26B76);
	set_name	(0X26B68,	"aDevWatchdog");
	make_array	(0X26B76,	0X2);
	create_strlit	(0X26B78,	0X26B8D);
	set_name	(0X26B78,	"aWatchdogTimeou");
	make_array	(0X26B8D,	0X3);
	create_strlit	(0X26B90,	0X26BA5);
	set_name	(0X26B90,	"aOptDjiEtcVersi");
	make_array	(0X26BA5,	0X3);
	create_strlit	(0X26BA8,	0X26BAA);
	set_name	(0X26BA8,	"aR");
	make_array	(0X26BAA,	0X2);
	create_strlit	(0X26BAC,	0X26BB8);
	set_name	(0X26BAC,	"aDDDD");
	create_strlit	(0X26BB8,	0X26BD2);
	set_name	(0X26BB8,	"aCatProcBusUsbD");
	make_array	(0X26BD2,	0X2);
	create_strlit	(0X26BD4,	0X26BDC);
	set_name	(0X26BD4,	"aVendor");
	create_strlit	(0X26BDC,	0X26BDF);
	set_name	(0X26BDC,	"aX");
	create_strlit	(0X26BE0,	0X26BE5);
	set_name	(0X26BE0,	"a2014");
	make_array	(0X26BE5,	0X3);
	create_strlit	(0X26BE8,	0X26BF6);
	set_name	(0X26BE8,	"aManufacturer");
	make_array	(0X26BF6,	0X2);
	create_strlit	(0X26BF8,	0X26C0D);
	set_name	(0X26BF8,	"aEtcHardwarever");
	make_array	(0X26C0D,	0X3);
	create_strlit	(0X26C10,	0X26C2A);
	set_name	(0X26C10,	"aEtc68013hardwa");
	make_array	(0X26C2A,	0X2);
	create_strlit	(0X26C2C,	0X26C30);
	set_name	(0X26C2C,	"aLd");
	create_strlit	(0X26C30,	0X26C44);
	set_name	(0X26C30,	"aBlockSigpipeEr");
	create_strlit	(0X26C44,	0X26C50);
	set_name	(0X26C44,	"aReset68013_0");
	create_strlit	(0X26C50,	0X26C63);
	set_name	(0X26C50,	"aDevgpioN60W0");
	create_strlit	(0X26C64,	0X26C77);
	set_name	(0X26C64,	"aDevgpioN60W1");
	create_strlit	(0X26C78,	0X26C84);
	set_name	(0X26C78,	"aEcho1S");
	create_strlit	(0X26C84,	0X26C91);
	set_name	(0X26C84,	"aVarDisTmp");
	make_array	(0X26C91,	0X3);
	create_strlit	(0X26C94,	0X26C9F);
	set_name	(0X26C94,	"aRmRfS");
	create_strlit	(0X26CA0,	0X26CB6);
	set_name	(0X26CA0,	"aXo32LdViaqIxfe");
	make_array	(0X26CB6,	0X2);
	create_strlit	(0X26CB8,	0X26CDB);
	set_name	(0X26CB8,	"aProPackandsend_1");
	create_strlit	(0X26CDC,	0X26CF6);
	set_name	(0X26CDC,	"aProCmdLoadData_0");
	make_array	(0X26CF6,	0X2);
	create_strlit	(0X26CF8,	0X26D04);
	set_name	(0X26CF8,	"aDevEvent0");
	create_strlit	(0X26D04,	0X26D11);
	set_name	(0X26D04,	"aDevConsole");
	make_array	(0X26D11,	0X3);
	create_strlit	(0X26D14,	0X26D1E);
	set_name	(0X26D14,	"aDevTty1");
	make_array	(0X26D1E,	0X2);
	create_strlit	(0X26D20,	0X26D2A);
	set_name	(0X26D20,	"aDevAt88");
	make_array	(0X26D2A,	0X2);
	create_strlit	(0X26D2C,	0X26D3F);
	set_name	(0X26D2C,	"aEtcChipInfoBin");
	create_strlit	(0X26D40,	0X26D4D);
	set_name	(0X26D40,	"aEtcKeyBin");
	make_array	(0X26D4D,	0X3);
	create_strlit	(0X26D50,	0X26D6B);
	set_name	(0X26D50,	"aHomeRootAndroi");
	create_strlit	(0X26D6C,	0X26D8B);
	set_name	(0X26D6C,	"aHomeRootAndroi_0");
	create_strlit	(0X26D8C,	0X26D95);
	set_name	(0X26D8C,	"aRmRS");
	make_array	(0X26D95,	0X3);
	create_strlit	(0X26D98,	0X26DA8);
	set_name	(0X26D98,	"aAdbKillServer");
	create_strlit	(0X26DA8,	0X26DB9);
	set_name	(0X26DA8,	"aAdbStartServer");
	make_array	(0X26DB9,	0X3);
	create_strlit	(0X26DBC,	0X26DD6);
	set_name	(0X26DBC,	"aAdbForwardTcpD");
	make_array	(0X26DD6,	0X2);
	create_strlit	(0X26DD8,	0X26DE2);
	set_name	(0X26DD8,	"a127001");
	make_array	(0X26DE2,	0X2);
	create_strlit	(0X26DE4,	0X26DE8);
	set_name	(0X26DE4,	"aDji");
	create_strlit	(0X26DE8,	0X26E0B);
	set_name	(0X26DE8,	"aAoaIoctlAoaIoc");
	create_strlit	(0X26E0C,	0X26E11);
	set_name	(0X26E0C,	"aT600");
	make_array	(0X26E11,	0X3);
	create_strlit	(0X26E14,	0X26E22);
	set_name	(0X26E14,	"aDjiInspire1");
	make_array	(0X26E22,	0X2);
	create_strlit	(0X26E24,	0X26E31);
	set_name	(0X26E24,	"aVDDDD");
	make_array	(0X26E31,	0X3);
	create_strlit	(0X26E34,	0X26E40);
	set_name	(0X26E34,	"aWwwDjiCom");
	create_strlit	(0X26E40,	0X26E5E);
	set_name	(0X26E40,	"aAoaIoctlAoaIoc_0");
	make_array	(0X26E5E,	0X2);
	create_strlit	(0X26E60,	0X26E69);
	set_name	(0X26E60,	"aDevAoa");
	make_array	(0X26E69,	0X3);
	create_strlit	(0X26E6C,	0X26E79);
	set_name	(0X26E6C,	"aOpenSErr");
	make_array	(0X26E79,	0X3);
	create_strlit	(0X26E7C,	0X26E8A);
	set_name	(0X26E7C,	"aAoaStartErr");
	make_array	(0X26E8A,	0X2);
	create_strlit	(0X26E8C,	0X26E99);
	set_name	(0X26E8C,	"aSocketError");
	make_array	(0X26E99,	0X3);
	create_strlit	(0X26E9C,	0X26EA7);
	set_name	(0X26E9C,	"aBindError");
	create_strlit	(0X26EA8,	0X26EB9);
	set_name	(0X26EA8,	"aSocketErrnoD");
	make_array	(0X26EB9,	0X3);
	create_strlit	(0X26EBC,	0X26ECF);
	set_name	(0X26EBC,	"aConnErrorTimeo");
	create_strlit	(0X26ED0,	0X26F04);
	set_name	(0X26ED0,	"aThreadConnecti");
	create_strlit	(0X26F04,	0X26F23);
	set_name	(0X26F04,	"aConnFailedType");
	create_strlit	(0X26F24,	0X26F43);
	set_name	(0X26F24,	"aConnecteOkType");
	create_strlit	(0X26F44,	0X26F6D);
	set_name	(0X26F44,	"aIosDeviceFirst");
	make_array	(0X26F6D,	0X3);
	create_strlit	(0X26F70,	0X26F92);
	set_name	(0X26F70,	"aThreadConnecti_0");
	make_array	(0X26F92,	0X2);
	create_strlit	(0X26F94,	0X26FB7);
	set_name	(0X26F94,	"aIosDeviceAdd");
	create_strlit	(0X26FB8,	0X26FDE);
	set_name	(0X26FB8,	"aIosDeviceRemov");
	make_array	(0X26FDE,	0X2);
	create_strlit	(0X26FE0,	0X27013);
	set_name	(0X26FE0,	"aAndroidDeviceA");
	create_strlit	(0X27014,	0X2703E);
	set_name	(0X27014,	"aAndroidDeviceR");
	make_array	(0X2703E,	0X2);
	create_strlit	(0X27040,	0X27056);
	set_name	(0X27040,	"aUsbsocketInitF");
	make_array	(0X27056,	0X2);
	create_strlit	(0X27058,	0X2706A);
	set_name	(0X27058,	"aUsbsocketInitO");
	make_array	(0X2706A,	0X2);
	create_strlit	(0X2706C,	0X2707D);
	set_name	(0X2706C,	"aUsbmuxdDisable");
	make_array	(0X2707D,	0X3);
	create_strlit	(0X27080,	0X270B2);
	set_name	(0X27080,	"aUsbsocketCreat_1");
	make_array	(0X270B2,	0X2);
	create_strlit	(0X270B4,	0X270E4);
	set_name	(0X270B4,	"aUsbsocketCreat_2");
	create_strlit	(0X270E4,	0X27116);
	set_name	(0X270E4,	"aUsbsocketCreat_0");
	make_array	(0X27116,	0X2);
	create_strlit	(0X27118,	0X27147);
	set_name	(0X27118,	"aFailedToInitia");
	create_strlit	(0X27148,	0X27163);
	set_name	(0X27148,	"aInitLibusbSucc");
	create_strlit	(0X27164,	0X27185);
	set_name	(0X27164,	"aFailedToGetDev");
	make_array	(0X27185,	0X3);
	create_strlit	(0X27188,	0X27193);
	set_name	(0X27188,	"aDev68013");
	create_strlit	(0X27194,	0X271A1);
	set_name	(0X27194,	"aOpenSErr_0");
	make_array	(0X271A1,	0X3);
	create_strlit	(0X271A4,	0X271AB);
	set_name	(0X271A4,	"aReboot");
	set_name	(0X271AC,	"C.0.5227");
	create_strlit	(0X271B0,	0X271BD);
	set_name	(0X271B0,	"aDevApplecp");
	make_array	(0X271BD,	0X3);
	create_strlit	(0X271C0,	0X271D8);
	set_name	(0X271C0,	"aIap2LinkResend");
	create_strlit	(0X271D8,	0X271E2);
	set_name	(0X271D8,	"aOverFlow");
	make_array	(0X271E2,	0X2);
	create_strlit	(0X271E4,	0X271F9);
	set_name	(0X271E4,	"aRecvBuffNotEno");
	make_array	(0X271F9,	0X3);
	create_strlit	(0X271FC,	0X2720A);
	set_name	(0X271FC,	"aComDjiPilot");
	make_array	(0X2720A,	0X2);
	create_strlit	(0X2720C,	0X27220);
	set_name	(0X2720C,	"aStartPowerUpda");
	create_strlit	(0X27220,	0X27234);
	set_name	(0X27220,	"aPowerSourceUpd");
	create_strlit	(0X27234,	0X27237);
	set_name	(0X27234,	"aC1");
	create_strlit	(0X27238,	0X2723E);
	set_name	(0X27238,	"aGlxxx");
	make_array	(0X2723E,	0X2);
	create_strlit	(0X27240,	0X27244);
	set_name	(0X27240,	"aDji_0");
	create_strlit	(0X27244,	0X27251);
	set_name	(0X27244,	"aVDDDD_0");
	make_array	(0X27251,	0X3);
	create_strlit	(0X27254,	0X2725D);
	set_name	(0X27254,	"aV1000");
	make_array	(0X2725D,	0X3);
	create_strlit	(0X27260,	0X2726E);
	set_name	(0X27260,	"aComDjiVideo");
	make_array	(0X2726E,	0X2);
	create_strlit	(0X27270,	0X27281);
	set_name	(0X27270,	"aComDjiProtocol");
	make_array	(0X27281,	0X3);
	create_strlit	(0X27284,	0X27287);
	set_name	(0X27284,	"aEn");
	create_strlit	(0X27288,	0X2728B);
	set_name	(0X27288,	"aZh");
	create_strlit	(0X2728C,	0X2728F);
	set_name	(0X2728C,	"aJa");
	create_strlit	(0X27290,	0X27293);
	set_name	(0X27290,	"aFr");
	create_strlit	(0X27294,	0X27297);
	set_name	(0X27294,	"aDe");
	create_strlit	(0X27298,	0X2729B);
	set_name	(0X27298,	"aRc");
	create_strlit	(0X2729C,	0X272A5);
	set_name	(0X2729C,	"aSOpen");
	make_array	(0X272A5,	0X3);
	create_strlit	(0X272A8,	0X272B2);
	set_name	(0X272A8,	"aSClose");
	make_array	(0X272B2,	0X2);
	create_strlit	(0X272B4,	0X272DC);
	set_name	(0X272B4,	"aIap2RequestAut");
	create_strlit	(0X272DC,	0X2730B);
	set_name	(0X272DC,	"aIap2RequestAut_0");
	create_strlit	(0X2730C,	0X27327);
	set_name	(0X2730C,	"aIap2Authentica");
	create_strlit	(0X27328,	0X27346);
	set_name	(0X27328,	"aIap2Authentica_0");
	make_array	(0X27346,	0X2);
	create_strlit	(0X27348,	0X27362);
	set_name	(0X27348,	"aIap2StartIdent");
	make_array	(0X27362,	0X2);
	create_strlit	(0X27364,	0X27381);
	set_name	(0X27364,	"aIap2Identifica");
	make_array	(0X27381,	0X3);
	create_strlit	(0X27384,	0X273A1);
	set_name	(0X27384,	"aIap2Identifica_0");
	make_array	(0X273A1,	0X3);
	create_strlit	(0X273A4,	0X273B1);
	set_name	(0X273A4,	"aPowerUpdate");
	make_array	(0X273B1,	0X3);
	create_strlit	(0X273B4,	0X273E3);
	set_name	(0X273B4,	"aIap2StartExter");
	create_strlit	(0X273E4,	0X27412);
	set_name	(0X273E4,	"aIap2StopExtern");
	make_array	(0X27412,	0X2);
	create_strlit	(0X27414,	0X27422);
	set_name	(0X27414,	"aDevApplehid");
	make_array	(0X27422,	0X2);
	create_strlit	(0X27424,	0X2743E);
	set_name	(0X27424,	"aMntUsbUsbupdat");
	make_array	(0X2743E,	0X2);
	create_strlit	(0X27440,	0X2745A);
	set_name	(0X27440,	"aOptTmpUsbupdat");
	make_array	(0X2745A,	0X2);
	create_strlit	(0X2745C,	0X27472);
	set_name	(0X2745C,	"aMntUsbGs68013B");
	make_array	(0X27472,	0X2);
	create_strlit	(0X27474,	0X2748A);
	set_name	(0X27474,	"aOptTmpGs68013B");
	make_array	(0X2748A,	0X2);
	create_strlit	(0X2748C,	0X274A1);
	set_name	(0X2748C,	"aMntUsbGsFpgaBi");
	make_array	(0X274A1,	0X3);
	create_strlit	(0X274A4,	0X274B9);
	set_name	(0X274A4,	"aOptTmpGsFpgaBi");
	make_array	(0X274B9,	0X3);
	create_strlit	(0X274BC,	0X274D1);
	set_name	(0X274BC,	"aMntUsbGs1765Bi");
	make_array	(0X274D1,	0X3);
	create_strlit	(0X274D4,	0X274E9);
	set_name	(0X274D4,	"aOptTmpGs1765Bi");
	make_array	(0X274E9,	0X3);
	create_strlit	(0X274EC,	0X27500);
	set_name	(0X274EC,	"aOptTmpUpdateBi");
	create_strlit	(0X27500,	0X27517);
	set_name	(0X27500,	"aOptTmpUpdateba");
	create_dword	(x=0X27518);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X27518,	"C.0.5556");
	create_dword	(x=0X2751C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X27520);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X27520,	"C.5.5584");
	create_dword	(x=0X27524);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X27528,	0X2753C);
	set_name	(0X27528,	"aEchoUpgradingS");
	create_strlit	(0X2753C,	0X27554);
	set_name	(0X2753C,	"aOptTmpUpdatefl");
	create_strlit	(0X27554,	0X27559);
	set_name	(0X27554,	"aSync_0");
	make_array	(0X27559,	0X3);
	create_strlit	(0X2755C,	0X27566);
	set_name	(0X2755C,	"aRmRfS_0");
	make_array	(0X27566,	0X2);
	create_strlit	(0X27568,	0X2759C);
	set_name	(0X27568,	"aDdIfSOpensslDe");
	create_strlit	(0X2759C,	0X275A6);
	set_name	(0X2759C,	"aDji123456");
	make_array	(0X275A6,	0X2);
	create_strlit	(0X275A8,	0X275AD);
	set_name	(0X275A8,	"aOpt");
	make_array	(0X275AD,	0X3);
	create_strlit	(0X275B0,	0X275CA);
	set_name	(0X275B0,	"aOptDjiEtcUpdat");
	make_array	(0X275CA,	0X2);
	create_strlit	(0X275CC,	0X275E6);
	set_name	(0X275CC,	"aFxloadISTFx2DS");
	make_array	(0X275E6,	0X2);
	create_strlit	(0X275E8,	0X27601);
	set_name	(0X275E8,	"aOptDjiBinVendA");
	make_array	(0X27601,	0X3);
	create_strlit	(0X27604,	0X2760E);
	set_name	(0X27604,	"a05471002");
	make_array	(0X2760E,	0X2);
	create_strlit	(0X27610,	0X2761A);
	set_name	(0X27610,	"a04b48613");
	make_array	(0X2761A,	0X2);
	create_strlit	(0X2761C,	0X27636);
	set_name	(0X2761C,	"aFxloadISTFx3DS");
	make_array	(0X27636,	0X2);
	create_strlit	(0X27638,	0X27653);
	set_name	(0X27638,	"aNeedRebootBefo");
	create_strlit	(0X27654,	0X27675);
	set_name	(0X27654,	"aTryToRebootBef");
	make_array	(0X27675,	0X3);
	create_strlit	(0X27678,	0X27686);
	set_name	(0X27678,	"aRebootXOk");
	make_array	(0X27686,	0X2);
	create_strlit	(0X27688,	0X2769B);
	set_name	(0X27688,	"aEnterLoaderBeg");
	create_strlit	(0X2769C,	0X276AC);
	set_name	(0X2769C,	"aEnterLoaderOk");
	create_strlit	(0X276AC,	0X276C2);
	set_name	(0X276AC,	"aEnterLoaderErr");
	make_array	(0X276C2,	0X2);
	create_strlit	(0X276C4,	0X276D4);
	set_name	(0X276C4,	"aGetStateBegin");
	create_strlit	(0X276D4,	0X276E1);
	set_name	(0X276D4,	"aGetStateOk");
	make_array	(0X276E1,	0X3);
	create_strlit	(0X276E4,	0X276F2);
	set_name	(0X276E4,	"aGetStateYes");
	make_array	(0X276F2,	0X2);
	create_strlit	(0X276F4,	0X27706);
	set_name	(0X276F4,	"aGetStateNo");
	make_array	(0X27706,	0X2);
	create_strlit	(0X27708,	0X2771B);
	set_name	(0X27708,	"aGetStateErr");
	create_strlit	(0X2771C,	0X2772D);
	set_name	(0X2771C,	"aLoadStartBegin");
	make_array	(0X2772D,	0X3);
	create_strlit	(0X27730,	0X2773E);
	set_name	(0X27730,	"aLoadStartOk");
	make_array	(0X2773E,	0X2);
	create_strlit	(0X27740,	0X2775F);
	set_name	(0X27740,	"aLoadStartLengt");
	create_strlit	(0X27760,	0X27779);
	set_name	(0X27760,	"aLoadStartLengt_0");
	make_array	(0X27779,	0X3);
	create_strlit	(0X2777C,	0X277A2);
	set_name	(0X2777C,	"aLoadStartFlash");
	make_array	(0X277A2,	0X2);
	create_strlit	(0X277A4,	0X277C0);
	set_name	(0X277A4,	"aLoadStartAckEr");
	create_strlit	(0X277C0,	0X277D4);
	set_name	(0X277C0,	"aLoadStartErr");
	create_strlit	(0X277D4,	0X277E8);
	set_name	(0X277D4,	"aLoadDataBeginD");
	create_strlit	(0X277E8,	0X2781A);
	set_name	(0X277E8,	"aLoadDataSeekEr");
	make_array	(0X2781A,	0X2);
	create_strlit	(0X2781C,	0X2782E);
	set_name	(0X2781C,	"aLoadDataSendOk");
	make_array	(0X2782E,	0X2);
	create_strlit	(0X27830,	0X27857);
	set_name	(0X27830,	"aLoadDataSendEr");
	create_strlit	(0X27858,	0X27873);
	set_name	(0X27858,	"aLoadDataSendSn");
	create_strlit	(0X27874,	0X27885);
	set_name	(0X27874,	"aLoadDataFinish");
	make_array	(0X27885,	0X3);
	create_strlit	(0X27888,	0X2789A);
	set_name	(0X27888,	"aLoadFinishBegi");
	make_array	(0X2789A,	0X2);
	create_strlit	(0X2789C,	0X278AB);
	set_name	(0X2789C,	"aLoadFinishOk");
	create_strlit	(0X278AC,	0X278BA);
	set_name	(0X278AC,	"aFinishAckX");
	make_array	(0X278BA,	0X2);
	create_strlit	(0X278BC,	0X278D1);
	set_name	(0X278BC,	"aLoadFinishErr");
	make_array	(0X278D1,	0X3);
	create_strlit	(0X278D4,	0X278F7);
	set_name	(0X278D4,	"aRetryExceedMax");
	create_strlit	(0X278F8,	0X2790A);
	set_name	(0X278F8,	"aTryToRebootX");
	make_array	(0X2790A,	0X2);
	create_strlit	(0X2790C,	0X27927);
	set_name	(0X2790C,	"aSendDataErrOff");
	create_strlit	(0X27928,	0X2793F);
	set_name	(0X27928,	"aCurrentSendTot");
	create_strlit	(0X27940,	0X27968);
	set_name	(0X27940,	"aSendDataSucces");
	create_strlit	(0X27968,	0X27974);
	set_name	(0X27968,	"aMkdirSP");
	create_strlit	(0X27974,	0X2797D);
	set_name	(0X27974,	"aMntUsb");
	make_array	(0X2797D,	0X3);
	create_strlit	(0X27980,	0X2798C);
	set_name	(0X27980,	"aMountSS");
	create_strlit	(0X2798C,	0X27996);
	set_name	(0X2798C,	"aUmountS");
	make_array	(0X27996,	0X2);
	create_strlit	(0X27998,	0X279A1);
	set_name	(0X27998,	"aRmdirS");
	make_array	(0X279A1,	0X3);
	create_strlit	(0X279A4,	0X279C3);
	set_name	(0X279A4,	"aTestDProcScsiU");
	create_strlit	(0X279C4,	0X279D9);
	set_name	(0X279C4,	"aCatProcPartiti");
	make_array	(0X279D9,	0X3);
	create_strlit	(0X279DC,	0X279DE);
	set_name	(0X279DC,	"aR_0");
	make_array	(0X279DE,	0X2);
	create_strlit	(0X279E0,	0X279E4);
	set_name	(0X279E0,	"aSda");
	create_strlit	(0X279E4,	0X279E9);
	set_name	(0X279E4,	"aSda1");
	make_array	(0X279E9,	0X3);
	create_strlit	(0X279EC,	0X279F5);
	set_name	(0X279EC,	"aDevSda");
	make_array	(0X279F5,	0X3);
	create_strlit	(0X279F8,	0X27A02);
	set_name	(0X279F8,	"aDevSda1");
	make_array	(0X27A02,	0X2);
	create_strlit	(0X27A04,	0X27A23);
	set_name	(0X27A04,	"aEchoS");
	create_strlit	(0X27A24,	0X27A3E);
	set_name	(0X27A24,	"aOptTmpC1FwResu");
	make_array	(0X27A3E,	0X2);
	create_strlit	(0X27A40,	0X27A4E);
	set_name	(0X27A40,	"aEchoSS");
	make_array	(0X27A4E,	0X2);
	create_strlit	(0X27A50,	0X27A59);
	set_name	(0X27A50,	"aMvSS");
	make_array	(0X27A59,	0X3);
	create_strlit	(0X27A5C,	0X27A76);
	set_name	(0X27A5C,	"aMntUsbC1FwResu");
	make_array	(0X27A76,	0X2);
	create_strlit	(0X27A78,	0X27A9D);
	set_name	(0X27A78,	"aEcho10ld6ldUpg");
	make_array	(0X27A9D,	0X3);
	create_strlit	(0X27AA0,	0X27AB7);
	set_name	(0X27AA0,	"aOptTmpC1FwLogT");
	create_strlit	(0X27AB8,	0X27AD4);
	set_name	(0X27AB8,	"aEcho10ld6ldSS");
	create_strlit	(0X27AD4,	0X27AEB);
	set_name	(0X27AD4,	"aMntUsbC1FwLogT");
	create_strlit	(0X27AEC,	0X27AF5);
	set_name	(0X27AEC,	"aRmSF");
	make_array	(0X27AF5,	0X3);
	create_strlit	(0X27AF8,	0X27B0D);
	set_name	(0X27AF8,	"aMntUsbC1FwDebu");
	make_array	(0X27B0D,	0X3);
	create_strlit	(0X27B10,	0X27B16);
	set_name	(0X27B10,	"aSS");
	make_array	(0X27B16,	0X2);
	create_strlit	(0X27B18,	0X27B2A);
	set_name	(0X27B18,	"aSDDDS");
	make_array	(0X27B2A,	0X2);
	create_strlit	(0X27B2C,	0X27B30);
	set_name	(0X27B2C,	"aBin");
	create_strlit	(0X27B30,	0X27B46);
	set_name	(0X27B30,	"aSDDDSS");
	make_array	(0X27B46,	0X2);
	create_strlit	(0X27B48,	0X27B4C);
	set_name	(0X27B48,	"aDji_1");
	create_strlit	(0X27B4C,	0X27B4F);
	set_name	(0X27B4C,	"aC1_0");
	create_strlit	(0X27B50,	0X27B68);
	set_name	(0X27B50,	"aNewFormatVersi");
	create_strlit	(0X27B68,	0X27B73);
	set_name	(0X27B68,	"aOldFormat");
	create_strlit	(0X27B74,	0X27B7D);
	set_name	(0X27B74,	"aPacket");
	make_array	(0X27B7D,	0X3);
	create_strlit	(0X27B80,	0X27B83);
	create_strlit	(0X27B84,	0X27B93);
	set_name	(0X27B84,	"aResultForbid");
	create_strlit	(0X27B94,	0X27BF0);
	set_name	(0X27B94,	"aMultipleVersio");
	create_strlit	(0X27BF0,	0X27C02);
	set_name	(0X27BF0,	"aResultCorrupte");
	make_array	(0X27C02,	0X2);
	create_strlit	(0X27C04,	0X27C54);
	set_name	(0X27C04,	"aFirmwareBinFil");
	create_strlit	(0X27C54,	0X27C64);
	set_name	(0X27C54,	"aResultAborted");
	create_strlit	(0X27C64,	0X27CCD);
	set_name	(0X27C64,	"aTheFirmwareOnT");
	make_array	(0X27CCD,	0X3);
	create_strlit	(0X27CD0,	0X27CDE);
	set_name	(0X27CD0,	"aResultError");
	make_array	(0X27CDE,	0X2);
	create_strlit	(0X27CE0,	0X27D44);
	set_name	(0X27CE0,	"aFailedToObatin");
	create_strlit	(0X27D44,	0X27D57);
	set_name	(0X27D44,	"aResultProhibit");
	create_strlit	(0X27D58,	0X27DBC);
	set_name	(0X27D58,	"aUpgradeIsProhi");
	create_strlit	(0X27DBC,	0X27E32);
	set_name	(0X27DBC,	"aTheCurrentFirm");
	make_array	(0X27E32,	0X2);
	create_strlit	(0X27E34,	0X27E42);
	set_name	(0X27E34,	"aUpgrading");
	make_array	(0X27E42,	0X2);
	create_strlit	(0X27E44,	0X27E54);
	set_name	(0X27E44,	"aResultSuccess");
	create_strlit	(0X27E54,	0X27E63);
	set_name	(0X27E54,	"aResultFailed");
	create_strlit	(0X27E64,	0X27EA5);
	set_name	(0X27E64,	"aRebootTheRemot");
	make_array	(0X27EA5,	0X3);
	create_strlit	(0X27EA8,	0X27EDC);
	set_name	(0X27EA8,	"aIdXLoaderXAppX");
	create_strlit	(0X27EDC,	0X27EE8);
	set_name	(0X27EDC,	"aCurrentX");
	create_strlit	(0X27EE8,	0X27EFC);
	set_name	(0X27EE8,	"aSaveXAcceptX");
	create_strlit	(0X27EFC,	0X27F0F);
	set_name	(0X27EFC,	"aUpdateModeDebu");
	create_strlit	(0X27F10,	0X27F1D);
	set_name	(0X27F10,	"aParaInvalid");
	make_array	(0X27F1D,	0X3);
	create_strlit	(0X27F20,	0X27F34);
	set_name	(0X27F20,	"aUpdateModeNorm");
	create_strlit	(0X27F34,	0X27F43);
	set_name	(0X27F34,	"aUpdateModeB");
	create_strlit	(0X27F44,	0X27F58);
	set_name	(0X27F44,	"aUnsupportDowng");
	create_strlit	(0X27F58,	0X27F67);
	set_name	(0X27F58,	"aUpdateModeR");
	create_strlit	(0X27F68,	0X27F70);
	set_name	(0X27F68,	"aC1FwV");
	create_strlit	(0X27F70,	0X27F8C);
	set_name	(0X27F70,	"aMoreThan1FwPac");
	create_strlit	(0X27F8C,	0X27FA5);
	set_name	(0X27F8C,	"aFwPacketHeadCo");
	make_array	(0X27FA5,	0X3);
	create_strlit	(0X27FA8,	0X27FBC);
	set_name	(0X27FA8,	"aFwCheckTypeErr");
	create_strlit	(0X27FBC,	0X27FD6);
	set_name	(0X27FBC,	"aTryToParseFwPa");
	make_array	(0X27FD6,	0X2);
	create_strlit	(0X27FD8,	0X27FF4);
	set_name	(0X27FD8,	"aTryToParseSing");
	create_strlit	(0X27FF4,	0X28008);
	set_name	(0X27FF4,	"aCheckErrorIdX");
	create_strlit	(0X28008,	0X2801F);
	set_name	(0X28008,	"aNoNeedUpdateId");
	create_strlit	(0X28020,	0X28034);
	set_name	(0X28020,	"aNeedUpdateIdX");
	create_strlit	(0X28034,	0X28046);
	set_name	(0X28034,	"aNotFoundIdX");
	make_array	(0X28046,	0X2);
	create_strlit	(0X28048,	0X2804C);
	set_name	(0X28048,	"aEnc");
	create_strlit	(0X2804C,	0X28055);
	set_name	(0X2804C,	"aCpSS");
	make_array	(0X28055,	0X3);
	create_strlit	(0X28058,	0X28069);
	set_name	(0X28058,	"aStartUpgradeX");
	make_array	(0X28069,	0X3);
	create_strlit	(0X2806C,	0X2809C);
	set_name	(0X2806C,	"aUsbAutoUpdateS");
	create_strlit	(0X2809C,	0X280A4);
	set_name	(0X2809C,	"aSuccess");
	create_strlit	(0X280A4,	0X280D1);
	set_name	(0X280A4,	"aUsbAutoUpdateS_0");
	make_array	(0X280D1,	0X3);
	create_strlit	(0X280D4,	0X280E2);
	set_name	(0X280D4,	"aFailStepD");
	make_array	(0X280E2,	0X2);
	create_strlit	(0X280E4,	0X280F6);
	set_name	(0X280E4,	"aOptTmpParaBin");
	make_array	(0X280F6,	0X2);
	create_strlit	(0X280F8,	0X2810D);
	set_name	(0X280F8,	"aOptTmpParabakB");
	make_array	(0X2810D,	0X3);
	create_dword	(x=0X28110);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X28110,	"C.5.5300");
	create_dword	(x=0X28114);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X28118,	0X2811F);
	set_name	(0X28118,	"aSync_1");
	create_dword	(x=0X28120);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X28120,	"end.2441");
	create_strlit	(0X28124,	0X2814B);
	set_name	(0X28124,	"MD5_version");
	set_name	(0X2814C,	"Te0");
	set_name	(0X2854C,	"Te1");
	set_name	(0X2894C,	"Te2");
	set_name	(0X28D4C,	"Te3");
	set_name	(0X2914C,	"Td0");
	set_name	(0X2954C,	"Td1");
	set_name	(0X2994C,	"Td2");
	set_name	(0X29D4C,	"Td3");
	set_name	(0X2A14C,	"Td4");
	set_name	(0X2A24C,	"rcon");
	set_name	(0X2A274,	"__clz_tab");
	set_name	(0X2BBDC,	"__FRAME_END__");
	update_extra_cmt		(0X34000,	E_PREV + 0,	"; ELF Initialization Function Table");
	create_dword	(x=0X34000);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34000,	"__frame_dummy_init_array_entry");
	update_extra_cmt		(0X34004,	E_PREV + 0,	"; ELF Termination Function Table");
	create_dword	(x=0X34004);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34004,	"__do_global_dtors_aux_fini_array_entry");
	create_dword	(0X34008);
	set_name	(0X34008,	"__JCR_LIST__");
	set_cmt	(0X3400C,	"DT_NEEDED librt.so.1",	0);
	update_extra_cmt		(0X3400C,	E_PREV + 0,	"; ELF Dynamic Information");
	MakeStruct	(0X3400C,	"Elf32_Dyn");
	set_cmt	(0X34014,	"DT_NEEDED libpthread.so.0",	0);
	MakeStruct	(0X34014,	"Elf32_Dyn");
	set_cmt	(0X3401C,	"DT_NEEDED libusb-1.0.so.0",	0);
	MakeStruct	(0X3401C,	"Elf32_Dyn");
	set_cmt	(0X34024,	"DT_NEEDED libusbmuxd.so.2",	0);
	MakeStruct	(0X34024,	"Elf32_Dyn");
	set_cmt	(0X3402C,	"DT_NEEDED libplist.so.1",	0);
	MakeStruct	(0X3402C,	"Elf32_Dyn");
	set_cmt	(0X34034,	"DT_NEEDED libxml2.so.2",	0);
	MakeStruct	(0X34034,	"Elf32_Dyn");
	set_cmt	(0X3403C,	"DT_NEEDED libz.so.1",	0);
	MakeStruct	(0X3403C,	"Elf32_Dyn");
	set_cmt	(0X34044,	"DT_NEEDED libgcc_s.so.1",	0);
	MakeStruct	(0X34044,	"Elf32_Dyn");
	set_cmt	(0X3404C,	"DT_NEEDED libc.so.6",	0);
	MakeStruct	(0X3404C,	"Elf32_Dyn");
	set_cmt	(0X34054,	"DT_INIT ",	0);
	MakeStruct	(0X34054,	"Elf32_Dyn");
	set_cmt	(0X3405C,	"DT_FINI ",	0);
	MakeStruct	(0X3405C,	"Elf32_Dyn");
	set_cmt	(0X34064,	"DT_INIT_ARRAY ",	0);
	MakeStruct	(0X34064,	"Elf32_Dyn");
	set_cmt	(0X3406C,	"DT_INIT_ARRAYSZ ",	0);
	MakeStruct	(0X3406C,	"Elf32_Dyn");
	set_cmt	(0X34074,	"DT_FINI_ARRAY ",	0);
	MakeStruct	(0X34074,	"Elf32_Dyn");
	set_cmt	(0X3407C,	"DT_FINI_ARRAYSZ ",	0);
	MakeStruct	(0X3407C,	"Elf32_Dyn");
	set_cmt	(0X34084,	"DT_HASH ",	0);
	MakeStruct	(0X34084,	"Elf32_Dyn");
	set_cmt	(0X3408C,	"DT_STRTAB ",	0);
	MakeStruct	(0X3408C,	"Elf32_Dyn");
	set_cmt	(0X34094,	"DT_SYMTAB ",	0);
	MakeStruct	(0X34094,	"Elf32_Dyn");
	set_cmt	(0X3409C,	"DT_STRSZ ",	0);
	MakeStruct	(0X3409C,	"Elf32_Dyn");
	set_cmt	(0X340A4,	"DT_SYMENT ",	0);
	MakeStruct	(0X340A4,	"Elf32_Dyn");
	set_cmt	(0X340AC,	"DT_PLTGOT ",	0);
	MakeStruct	(0X340AC,	"Elf32_Dyn");
	set_cmt	(0X340B4,	"DT_PLTRELSZ ",	0);
	MakeStruct	(0X340B4,	"Elf32_Dyn");
	set_cmt	(0X340BC,	"DT_PLTREL ",	0);
	MakeStruct	(0X340BC,	"Elf32_Dyn");
	set_cmt	(0X340C4,	"DT_JMPREL ",	0);
	MakeStruct	(0X340C4,	"Elf32_Dyn");
	set_cmt	(0X340CC,	"DT_REL ",	0);
	MakeStruct	(0X340CC,	"Elf32_Dyn");
	set_cmt	(0X340D4,	"DT_RELSZ ",	0);
	MakeStruct	(0X340D4,	"Elf32_Dyn");
	set_cmt	(0X340DC,	"DT_RELENT ",	0);
	MakeStruct	(0X340DC,	"Elf32_Dyn");
	set_cmt	(0X340E4,	"DT_TEXTREL ",	0);
	MakeStruct	(0X340E4,	"Elf32_Dyn");
	set_cmt	(0X340EC,	"DT_VERNEED ",	0);
	MakeStruct	(0X340EC,	"Elf32_Dyn");
	set_cmt	(0X340F4,	"DT_VERNEEDNUM ",	0);
	MakeStruct	(0X340F4,	"Elf32_Dyn");
	set_cmt	(0X340FC,	"DT_VERSYM ",	0);
	MakeStruct	(0X340FC,	"Elf32_Dyn");
	set_cmt	(0X34104,	"DT_RELCOUNT ",	0);
	MakeStruct	(0X34104,	"Elf32_Dyn");
	set_cmt	(0X3410C,	"DT_NULL ",	0);
	MakeStruct	(0X3410C,	"Elf32_Dyn");
	make_array	(0X34114,	0X4);
	create_dword	(x=0X34134);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34134,	"$_GLOBAL_OFFSET_TABLE_");
	create_dword	(0X34138);
	create_dword	(x=0X3413C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X34140);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34140,	"Usbupdate_ClearDM368UpdateFlag_ptr");
	create_dword	(x=0X34144);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34144,	"open_ptr");
	create_dword	(x=0X34148);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34148,	"At88_Set_Chip_Info_File_ptr");
	create_dword	(x=0X3414C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3414C,	"usbmuxd_connect_ptr");
	create_dword	(x=0X34150);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34150,	"AppleCP_Req_Challenge_Response_ptr");
	create_dword	(x=0X34154);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34154,	"sigemptyset_ptr");
	create_dword	(x=0X34158);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34158,	"Usbupdate_PrintLog_ptr");
	create_dword	(x=0X3415C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3415C,	"CalCrc16_ptr");
	create_dword	(x=0X34160);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34160,	"At88_Read_Config_ptr");
	create_dword	(x=0X34164);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34164,	"connect_ptr");
	create_dword	(x=0X34168);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34168,	"sha256_transf_ptr");
	create_dword	(x=0X3416C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3416C,	"srand_ptr");
	create_dword	(x=0X34170);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34170,	"usbmuxd_send_ptr");
	create_dword	(x=0X34174);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34174,	"open68013_ptr");
	create_dword	(x=0X34178);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34178,	"localtime_ptr");
	create_dword	(x=0X3417C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3417C,	"opendir_ptr");
	create_dword	(x=0X34180);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34180,	"At88_Check_Chip_Info_ptr");
	create_dword	(x=0X34184);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34184,	"At88_Check_Factory_Info_ptr");
	create_dword	(x=0X34188);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34188,	"memcmp_ptr");
	create_dword	(x=0X3418C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3418C,	"getTickCount_ptr");
	create_dword	(x=0X34190);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34190,	"pthread_attr_setdetachstate_ptr");
	create_dword	(x=0X34194);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34194,	"clock_gettime_ptr");
	create_dword	(x=0X34198);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34198,	"__xstat_ptr");
	create_dword	(x=0X3419C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3419C,	"Iap2_Queue_Put_ptr");
	create_dword	(x=0X341A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341A0,	"AES_set_decrypt_key_ptr");
	create_dword	(x=0X341A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341A4,	"tcp_close_ptr");
	create_dword	(x=0X341A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341A8,	"AES_encrypt_ptr");
	create_dword	(x=0X341AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341AC,	"signal_ptr");
	create_dword	(x=0X341B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341B0,	"msgget_ptr");
	create_dword	(x=0X341B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341B4,	"pthread_attr_setschedpolicy_ptr");
	create_dword	(x=0X341B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341B8,	"__gmon_start___ptr");
	create_dword	(x=0X341BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341BC,	"GetFileSize_ptr");
	create_dword	(x=0X341C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341C0,	"GetCurrentTime_ptr");
	create_dword	(x=0X341C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341C4,	"Usbupdatecheck_PrintResult_Error_ptr");
	create_dword	(x=0X341C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341C8,	"pthread_mutexattr_settype_ptr");
	create_dword	(x=0X341CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341CC,	"Pro_Cmd_Get_Version_ptr");
	create_dword	(x=0X341D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341D0,	"libusb_free_device_list_ptr");
	create_dword	(x=0X341D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341D4,	"inet_addr_ptr");
	create_dword	(x=0X341D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341D8,	"At88_Check_Key_ptr");
	create_dword	(x=0X341DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341DC,	"Queue_Create_ptr");
	create_dword	(x=0X341E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341E0,	"fclose_ptr");
	create_dword	(x=0X341E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341E4,	"fgets_ptr");
	create_dword	(x=0X341E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341E8,	"recv_ptr");
	create_dword	(x=0X341EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341EC,	"Iap2_Queue_IsEmpty_ptr");
	create_dword	(x=0X341F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341F0,	"libusb_get_device_list_ptr");
	create_dword	(x=0X341F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341F4,	"IfFileExist_ptr");
	create_dword	(x=0X341F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341F8,	"MD5_Init_ptr");
	create_dword	(x=0X341FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X341FC,	"system_ptr");
	create_dword	(x=0X34200);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34200,	"strchr_ptr");
	create_dword	(x=0X34204);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34204,	"UnInit_libusb_ptr");
	create_dword	(x=0X34208);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34208,	"putchar_ptr");
	create_dword	(x=0X3420C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3420C,	"Pro_Cmd_Load_Finish_ptr");
	create_dword	(x=0X34210);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34210,	"CalCrc8_ptr");
	create_dword	(x=0X34214);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34214,	"pclose_ptr");
	create_dword	(x=0X34218);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34218,	"MD5_Final_ptr");
	create_dword	(x=0X3421C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3421C,	"Simple_EncryptAndDecrypt_ptr");
	create_dword	(x=0X34220);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34220,	"At88_Is_Passed_ptr");
	create_dword	(x=0X34224);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34224,	"sendto_ptr");
	create_dword	(x=0X34228);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34228,	"htons_ptr");
	create_dword	(x=0X3422C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3422C,	"Iap2_Link_EASession_Send_ptr");
	create_dword	(x=0X34230);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34230,	"fopen_ptr");
	create_dword	(x=0X34234);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34234,	"Watchdog_Init_ptr");
	create_dword	(x=0X34238);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34238,	"sched_get_priority_max_ptr");
	create_dword	(x=0X3423C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3423C,	"At88_Read_Factory_Info_ptr");
	create_dword	(x=0X34240);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34240,	"mktime_ptr");
	create_dword	(x=0X34244);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34244,	"Usbupdate_InitResultFile_ptr");
	create_dword	(x=0X34248);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34248,	"memset_ptr");
	create_dword	(x=0X3424C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3424C,	"PrintHex_ptr");
	create_dword	(x=0X34250);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34250,	"pthread_cond_timedwait_ptr");
	create_dword	(x=0X34254);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34254,	"Queue_GetData_ptr");
	create_dword	(x=0X34258);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34258,	"AesEncrypt_ptr");
	create_dword	(x=0X3425C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3425C,	"At88_Write_Key_File_ptr");
	create_dword	(x=0X34260);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34260,	"Usbupdate_SetDM368UpdateFlag_ptr");
	create_dword	(x=0X34264);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34264,	"ThreadSignal_MaskPipe_ptr");
	create_dword	(x=0X34268);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34268,	"GetHardwareVersion_ptr");
	create_dword	(x=0X3426C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3426C,	"pthread_attr_setschedparam_ptr");
	create_dword	(x=0X34270);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34270,	"GetINT32LittleEnd_ptr");
	create_dword	(x=0X34274);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34274,	"DJI_Frame_Cap_ptr");
	create_dword	(x=0X34278);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34278,	"Iap2_CalChecksum_ptr");
	create_dword	(x=0X3427C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3427C,	"At88_Delete_ptr");
	create_dword	(x=0X34280);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34280,	"ReadFile_ptr");
	create_dword	(x=0X34284);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34284,	"Pro_SendWaitAck_ptr");
	create_dword	(x=0X34288);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34288,	"Usbupdate_SavePara_ptr");
	create_dword	(x=0X3428C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3428C,	"Iap2_Pkt_Parse_ptr");
	create_dword	(x=0X34290);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34290,	"__assert_fail_ptr");
	create_dword	(x=0X34294);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34294,	"Pro_Deal_CallBack_ptr");
	create_dword	(x=0X34298);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34298,	"AppleCP_Read_AuthCertData_ptr");
	create_dword	(x=0X3429C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3429C,	"ntohl_ptr");
	create_dword	(x=0X342A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342A0,	"usleep_ptr");
	create_dword	(x=0X342A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342A4,	"msgsnd_ptr");
	create_dword	(x=0X342A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342A8,	"tcp_recv_ptr");
	create_dword	(x=0X342AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342AC,	"Iap2_Link_CtrlSession_Recv_ptr");
	create_dword	(x=0X342B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342B0,	"tcdrain_ptr");
	create_dword	(x=0X342B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342B4,	"Pro_Cmd_Reboot_ptr");
	create_dword	(x=0X342B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342B8,	"At88_Is_Config_Set_ptr");
	create_dword	(x=0X342BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342BC,	"free_ptr");
	create_dword	(x=0X342C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342C0,	"read_ptr");
	create_dword	(x=0X342C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342C4,	"write_ptr");
	create_dword	(x=0X342C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342C8,	"DataBuff_Delete_ptr");
	create_dword	(x=0X342CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342CC,	"PutINT32LittleEnd_ptr");
	create_dword	(x=0X342D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342D0,	"Pro_PackAndSend_ThreadSafe_ptr");
	create_dword	(x=0X342D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342D4,	"gettimeofday_ptr");
	create_dword	(x=0X342D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342D8,	"At88_Read_Chip_Info_File_ptr");
	create_dword	(x=0X342DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342DC,	"At88_Is_Config_Lock_ptr");
	create_dword	(x=0X342E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342E0,	"sha256_final_ptr");
	create_dword	(x=0X342E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342E4,	"tcgetattr_ptr");
	create_dword	(x=0X342E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342E8,	"Usbupdate_SaveLog_ptr");
	create_dword	(x=0X342EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342EC,	"pthread_mutex_unlock_ptr");
	create_dword	(x=0X342F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342F0,	"Iap2_Link_Session_ReleaseRecvPkt_ptr");
	create_dword	(x=0X342F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342F4,	"tcflush_ptr");
	create_dword	(x=0X342F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342F8,	"socket_ptr");
	create_dword	(x=0X342FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X342FC,	"md5_block_data_order_ptr");
	create_dword	(x=0X34300);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34300,	"UsbDel_ptr");
	create_dword	(x=0X34304);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34304,	"ioctl_ptr");
	create_dword	(x=0X34308);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34308,	"ntohs_ptr");
	create_dword	(x=0X3430C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3430C,	"Usbupdatecheck_PrintResult_Forbid_ptr");
	create_dword	(x=0X34310);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34310,	"LockFile_ptr");
	create_dword	(x=0X34314);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34314,	"pthread_mutexattr_destroy_ptr");
	create_dword	(x=0X34318);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34318,	"libusb_exit_ptr");
	create_dword	(x=0X3431C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3431C,	"pthread_mutex_lock_ptr");
	create_dword	(x=0X34320);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34320,	"Iap2_Queue_IsFull_ptr");
	create_dword	(x=0X34324);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34324,	"AES_cbc_encrypt_ptr");
	create_dword	(x=0X34328);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34328,	"strlen_ptr");
	create_dword	(x=0X3432C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3432C,	"sscanf_ptr");
	create_dword	(x=0X34330);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34330,	"Iap2_Link_CtrlSession_Send_ptr");
	create_dword	(x=0X34334);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34334,	"Usbupdate_SaveResultFile_ptr");
	create_dword	(x=0X34338);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34338,	"DataBuff_Create_ptr");
	create_dword	(x=0X3433C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3433C,	"At88_Read_Key_File_ptr");
	create_dword	(x=0X34340);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34340,	"libusb_init_ptr");
	create_dword	(x=0X34344);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34344,	"pthread_create_ptr");
	create_dword	(x=0X34348);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34348,	"memcpy_ptr");
	create_dword	(x=0X3434C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3434C,	"GetINT16LittleEnd_ptr");
	create_dword	(x=0X34350);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34350,	"pthread_cond_signal_ptr");
	create_dword	(x=0X34354);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34354,	"PutINT16LittleEnd_ptr");
	create_dword	(x=0X34358);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34358,	"Iap2_Timer_Init_ptr");
	create_dword	(x=0X3435C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3435C,	"WriteFile_No_Sync_ptr");
	create_dword	(x=0X34360);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34360,	"pthread_attr_setinheritsched_ptr");
	create_dword	(x=0X34364);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34364,	"sigaddset_ptr");
	create_dword	(x=0X34368);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34368,	"strcpy_ptr");
	create_dword	(x=0X3436C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3436C,	"close68013_ptr");
	create_dword	(x=0X34370);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34370,	"pthread_cond_destroy_ptr");
	create_dword	(x=0X34374);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34374,	"pthread_sigmask_ptr");
	create_dword	(x=0X34378);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34378,	"settimeofday_ptr");
	create_dword	(x=0X3437C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3437C,	"pthread_mutex_destroy_ptr");
	create_dword	(x=0X34380);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34380,	"printf_ptr");
	create_dword	(x=0X34384);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34384,	"raise_ptr");
	create_dword	(x=0X34388);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34388,	"MFI_Ctrl_Get_ptr");
	create_dword	(x=0X3438C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3438C,	"At88_Write_Chip_Info_File_ptr");
	create_dword	(x=0X34390);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34390,	"tcp_connect_ptr");
	create_dword	(x=0X34394);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34394,	"Pro_IsPacketNeedEncrypt_ptr");
	create_dword	(x=0X34398);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34398,	"pthread_mutex_init_ptr");
	create_dword	(x=0X3439C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3439C,	"usbmuxd_subscribe_ptr");
	create_dword	(x=0X343A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343A0,	"bind_ptr");
	create_dword	(x=0X343A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343A4,	"Usbupdate_InitLog_ptr");
	create_dword	(x=0X343A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343A8,	"strstr_ptr");
	create_dword	(x=0X343AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343AC,	"select_ptr");
	create_dword	(x=0X343B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343B0,	"Usbupdatecheck_PrintResult_Corrupted_ptr");
	create_dword	(x=0X343B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343B4,	"close_ptr");
	create_dword	(x=0X343B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343B8,	"fwrite_ptr");
	create_dword	(x=0X343BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343BC,	"usbmuxd_disconnect_ptr");
	create_dword	(x=0X343C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343C0,	"closedir_ptr");
	create_dword	(x=0X343C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343C4,	"CalFileMD5_ptr");
	create_dword	(x=0X343C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343C8,	"AES_decrypt_ptr");
	create_dword	(x=0X343CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343CC,	"Iap2_Ctrl_Session_FastCmd_ptr");
	create_dword	(x=0X343D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343D0,	"Iap2_Link_Session_GetSendPkt_ptr");
	create_dword	(x=0X343D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343D4,	"sha256_update_ptr");
	create_dword	(x=0X343D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343D8,	"time_ptr");
	create_dword	(x=0X343DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343DC,	"MD5_Update_ptr");
	create_dword	(x=0X343E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343E0,	"UsbInit_ptr");
	create_dword	(x=0X343E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343E4,	"IsAndroidPlugIn_ptr");
	create_dword	(x=0X343E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343E8,	"malloc_ptr");
	create_dword	(x=0X343EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343EC,	"Iap2_Pkt_GetEAProDataPtr_ptr");
	create_dword	(x=0X343F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343F0,	"cfsetospeed_ptr");
	create_dword	(x=0X343F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343F4,	"Update_Parse_App_Version_ptr");
	create_dword	(x=0X343F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343F8,	"tcp_send_ptr");
	create_dword	(x=0X343FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X343FC,	"Usbupdatecheck_PrintResult_Downgrade_Abort_ptr");
	create_dword	(x=0X34400);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34400,	"pthread_attr_init_ptr");
	create_dword	(x=0X34404);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34404,	"IsTimeOut_ptr");
	create_dword	(x=0X34408);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34408,	"Set_Mutex_Attr_Recu_ptr");
	create_dword	(x=0X3440C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3440C,	"Usbupdate_PrintResultFile_ptr");
	create_dword	(x=0X34410);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34410,	"AES_set_encrypt_key_ptr");
	create_dword	(x=0X34414);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34414,	"sha256_ptr");
	create_dword	(x=0X34418);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34418,	"At88_Write_Key_ptr");
	create_dword	(x=0X3441C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3441C,	"Iap2_Link_EASession_Recv_ptr");
	create_dword	(x=0X34420);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34420,	"AesDecryptFromFile_ptr");
	create_dword	(x=0X34424);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34424,	"ftruncate_ptr");
	create_dword	(x=0X34428);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34428,	"CalMD5_ptr");
	create_dword	(x=0X3442C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3442C,	"AesDecrypt_ptr");
	create_dword	(x=0X34430);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34430,	"sleep_ptr");
	create_dword	(x=0X34434);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34434,	"Usbupdatecheck_PrintResult_Abort_ptr");
	create_dword	(x=0X34438);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34438,	"Pro_Cmd_Load_Start_ptr");
	create_dword	(x=0X3443C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3443C,	"Usbupdatecheck_CreateAndCheck_Single_Fw_ptr");
	create_dword	(x=0X34440);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34440,	"send_ptr");
	create_dword	(x=0X34444);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34444,	"strcat_ptr");
	create_dword	(x=0X34448);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34448,	"init_libusb_ptr");
	create_dword	(x=0X3444C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3444C,	"libusb_get_device_descriptor_ptr");
	create_dword	(x=0X34450);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34450,	"Queue_Delete_ptr");
	create_dword	(x=0X34454);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34454,	"popen_ptr");
	create_dword	(x=0X34458);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34458,	"usbmuxd_recv_timeout_ptr");
	create_dword	(x=0X3445C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3445C,	"puts_ptr");
	create_dword	(x=0X34460);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34460,	"tcsetattr_ptr");
	create_dword	(x=0X34464);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34464,	"getpid_ptr");
	create_dword	(x=0X34468);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34468,	"Iap2_Timer_IsValid_ptr");
	create_dword	(x=0X3446C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3446C,	"At88_Lock_Config_ptr");
	create_dword	(x=0X34470);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34470,	"md5_block_host_order_ptr");
	create_dword	(x=0X34474);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34474,	"sha256_init_ptr");
	create_dword	(x=0X34478);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34478,	"fcntl_ptr");
	create_dword	(x=0X3447C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3447C,	"tcp_is_conn_ptr");
	create_dword	(x=0X34480);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34480,	"WriteFile_ptr");
	create_dword	(x=0X34484);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34484,	"bzero_ptr");
	create_dword	(x=0X34488);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34488,	"Iap2_Timer_Del_ptr");
	create_dword	(x=0X3448C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3448C,	"Iap2_Timer_IsTimeout_ptr");
	create_dword	(x=0X34490);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34490,	"Iap2_Pkt_GetDataPtr_ptr");
	create_dword	(x=0X34494);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34494,	"At88_Write_Factory_Info_ptr");
	create_dword	(x=0X34498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34498,	"htonl_ptr");
	create_dword	(x=0X3449C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3449C,	"Update_Parse_68013_Version_ptr");
	create_dword	(x=0X344A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344A0,	"pthread_attr_destroy_ptr");
	create_dword	(x=0X344A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344A4,	"At88_Check_All_ptr");
	create_dword	(x=0X344A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344A8,	"Get68013HardwareVersion_ptr");
	create_dword	(x=0X344AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344AC,	"lseek_ptr");
	create_dword	(x=0X344B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344B0,	"rand_ptr");
	create_dword	(x=0X344B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344B4,	"At88_Set_Config_ptr");
	create_dword	(x=0X344B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344B8,	"Iap2_Link_Session_ReleaseSendPkt_ptr");
	create_dword	(x=0X344BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344BC,	"Pro_Cmd_Load_Data_ptr");
	create_dword	(x=0X344C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344C0,	"fread_ptr");
	create_dword	(x=0X344C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344C4,	"usbmuxd_get_device_by_udid_ptr");
	create_dword	(x=0X344C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344C8,	"pthread_cond_init_ptr");
	create_dword	(x=0X344CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344CC,	"Pro_PackAndSend_ptr");
	create_dword	(x=0X344D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344D0,	"msgrcv_ptr");
	create_dword	(x=0X344D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344D4,	"At88_Init_ptr");
	create_dword	(x=0X344D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344D8,	"Pro_Cmd_Enter_Loader_ptr");
	create_dword	(x=0X344DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344DC,	"recvfrom_ptr");
	create_dword	(x=0X344E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344E0,	"Iap2_Queue_Get_ptr");
	create_dword	(x=0X344E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344E4,	"At88_Write_Factory_Info_File_ptr");
	create_dword	(x=0X344E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344E8,	"AesEncryptToFile_ptr");
	create_dword	(x=0X344EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344EC,	"DJI_ProStruct_Init_ptr");
	create_dword	(x=0X344F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344F0,	"setsockopt_ptr");
	create_dword	(x=0X344F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344F4,	"pthread_mutexattr_init_ptr");
	create_dword	(x=0X344F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344F8,	"readdir_ptr");
	create_dword	(x=0X344FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X344FC,	"Watchdog_Feed_ptr");
	create_dword	(x=0X34500);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34500,	"syncSendBuffer_ptr");
	create_dword	(x=0X34504);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34504,	"At88_Write_Kernel_Encrypt_ptr");
	create_dword	(x=0X34508);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34508,	"strcmp_ptr");
	create_dword	(x=0X3450C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3450C,	"Pro_Cmd_Get_State_ptr");
	create_dword	(x=0X34510);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34510,	"exit_ptr");
	create_dword	(x=0X34514);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34514,	"cfsetispeed_ptr");
	create_dword	(x=0X34518);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34518,	"Reset_68013_ptr");
	create_dword	(x=0X3451C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3451C,	"At88_Mac_Check_ptr");
	create_dword	(x=0X34520);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34520,	"__errno_location_ptr");
	create_dword	(x=0X34524);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34524,	"Pro_Get_CurSeq_ptr");
	create_dword	(x=0X34528);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34528,	"Queue_PutData_ptr");
	create_dword	(x=0X3452C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3452C,	"At88_Read_Chip_Info_ptr");
	create_dword	(x=0X34530);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34530,	"__cxa_finalize_ptr");
	create_dword	(x=0X34534);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34534,	"sprintf_ptr");
	create_dword	(x=0X34538);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34538,	"pthread_join_ptr");
	create_dword	(x=0X3453C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3453C,	"aoa_subscribe_ptr");
	create_dword	(x=0X34540);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34540,	"At88_Check_Auth_ptr");
	create_dword	(x=0X34544);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34544,	"Pro_Cmd_Update_Ctrl_ptr");
	create_dword	(x=0X34548);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34548,	"__gmon_start___ptr_0");
	create_dword	(x=0X3454C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X3454C,	"_Jv_RegisterClasses_ptr");
	create_dword	(x=0X34550);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34550,	"__clz_tab_ptr");
	create_dword	(x=0X34554);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34554,	"__cxa_finalize_ptr_0");
	set_cmt	(0X34558,	"Alternative name is '__data_start'\n__dso_handle",	0);
	create_dword	(x=0X34558);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34558,	"__data_start");
	create_dword	(0X3455C);
	set_name	(0X3455C,	"s_slWatchdogFd");
	create_byte	(0X34560);
	make_array	(0X34560,	0X10);
	set_name	(0X34560,	"s_aucAesUserKey");
	update_extra_cmt		(0X34570,	E_PREV + 0,	"; Function-local static variable");
	create_dword	(0X34570);
	set_name	(0X34570,	"s_ulsimple_key_len.6654");
	update_extra_cmt		(0X34574,	E_PREV + 0,	"; Function-local static variable");
	create_dword	(x=0X34574);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X34574,	"s_pcsimple_key.6653");
	update_extra_cmt		(0X34578,	E_PREV + 0,	"; Function-local static variable");
	create_dword	(0X34578);
	make_array	(0X34578,	0X3);
	set_name	(0X34578,	"s_aulKeyCode.5249");
	update_extra_cmt		(0X34584,	E_PREV + 0,	"; Function-local static variable");
	create_dword	(0X34584);
	make_array	(0X34584,	0XA);
	set_name	(0X34584,	"s_aslBandRate.5287");
	create_dword	(0X345AC);
	make_array	(0X345AC,	0X8);
	set_name	(0X345AC,	"sha256_h0");
	create_dword	(0X345CC);
	make_array	(0X345CC,	0X40);
	set_name	(0X345CC,	"sha256_k");
	create_dword	(0X346CC);
	set_name	(0X346CC,	"s_slAt88Fd");
	create_dword	(0X346D0);
	set_name	(0X346D0,	"s_slFd");
	create_dword	(0X346D4);
	set_name	(0X346D4,	"s_slFd_0");
	create_dword	(0X346D8);
	set_name	(0X346D8,	"s_slAppleCPFd");
	create_byte	(0X346DC);
	make_array	(0X346DC,	0X6);
	set_name	(0X346DC,	"s_aucIap2InitSeq");
	create_byte	(0X346E2);
	make_array	(0X346E2,	0X12);
	set_name	(0X346E2,	"s_aucIap1NoSupportSeq");
	create_byte	(0X346F4);
	make_array	(0X346F4,	0X6);
	set_name	(0X346F4,	"s_aucIap2InitSeq_0");
	create_byte	(0X346FA);
	make_array	(0X346FA,	0X8);
	set_name	(0X346FA,	"s_aucIap1InitAckSeq");
	make_array	(0X34702,	0X2);
	create_dword	(0X34704);
	set_name	(0X34704,	"s_slFd_1");
	MakeStruct	(0X34708,	"T_FirmwareAttrSruct");
	make_array	(0X34708,	0X4);
	set_name	(0X34708,	"s_atFirmwareAttr");
	MakeStruct	(0X348B8,	"T_ParaAttrStruct");
	make_array	(0X348B8,	0XE);
	set_name	(0X348B8,	"s_atParaAttr");
	create_byte	(0X34960);
	set_name	(0X34960,	"completed.5904");
	make_array	(0X34961,	0X3);
	create_dword	(0X34964);
	set_name	(0X34964,	"s_slMsgID");
	update_extra_cmt		(0X34968,	E_PREV + 0,	"; Function-local static variable");
	create_dword	(0X34968);
	make_array	(0X34968,	0X3);
	set_name	(0X34968,	"s_aulKeyStatus.5248");
	create_dword	(0X34974);
	set_name	(0X34974,	"s_ptKeyQueue");
	create_dword	(0X34978);
	set_name	(0X34978,	"s_slKeyFd");
	MakeStruct	(0X3497C,	"termios");
	set_name	(0X3497C,	"s_tConsoleAttrBak");
	create_byte	(0X349B8);
	set_name	(0X349B8,	"s_bConsoleAttrBakValid");
	make_array	(0X349B9,	0X3);
	MakeStruct	(0X349BC,	"pthread_mutex_t");
	set_name	(0X349BC,	"s_At88FdMutex");
	create_dword	(0X349D4);
	set_name	(0X349D4,	"s_slDevType");
	create_byte	(0X349D8);
	set_name	(0X349D8,	"s_bPassed");
	make_array	(0X349D9,	0X3);
	update_extra_cmt		(0X349DC,	E_PREV + 0,	"; Function-local static variable");
	create_dword	(0X349DC);
	set_name	(0X349DC,	"s_flag.5302");
	create_dword	(0X349E0);
	set_name	(0X349E0,	"adb_fcb");
	create_dword	(0X349E4);
	set_name	(0X349E4,	"adb_fcb_0");
	create_dword	(x=0X349E8);
	op_enum		(x,	0,	GetEnum("conn_device_type"),0);
	set_name	(0X349E8,	"s_device_type");
	update_extra_cmt		(0X349EC,	E_PREV + 0,	"; Function-local static variable");
	create_dword	(0X349EC);
	set_name	(0X349EC,	"running.5403");
	create_byte	(0X349F0);
	set_name	(0X349F0,	"mDevicePlugin");
	make_array	(0X349F1,	0X3);
	MakeStruct	(0X349F4,	"usb_connection");
	make_array	(0X349F4,	0X2);
	set_name	(0X349F4,	"s_arr_conn");
	update_extra_cmt		(0X34A7C,	E_PREV + 0,	"; Function-local static variable");
	create_dword	(0X34A7C);
	set_name	(0X34A7C,	"last_count.6255");
	create_byte	(0X34A80);
	set_name	(0X34A80,	"s_SyncInit");
	make_array	(0X34A81,	0X3);
	MakeStruct	(0X34A84,	"timeval");
	set_name	(0X34A84,	"s_tHubErrorCheckTime");
	MakeStruct	(0X34A8C,	"pthread_mutex_t");
	set_name	(0X34A8C,	"s_AppleCPMutex");
	create_byte	(0X34AA4);
	set_name	(0X34AA4,	"s_bAppleCPExist");
	make_array	(0X34AA5,	0X3);
	create_byte	(0X34AA8);
	make_array	(0X34AA8,	0X324B0);
	set_name	(0X34AA8,	"s_aucSendBuff");
	create_byte	(0X66F58);
	make_array	(0X66F58,	0X19000);
	set_name	(0X66F58,	"s_aucRecvBuff");
	MakeStruct	(0X7FF58,	"T_Iap2PacketStruct");
	make_array	(0X7FF58,	0X64);
	set_name	(0X7FF58,	"s_atSendPkt");
	MakeStruct	(0X80EF8,	"T_Iap2PacketStruct");
	make_array	(0X80EF8,	0X64);
	set_name	(0X80EF8,	"s_atRecvPkt");
	MakeStruct	(0X81E98,	"T_Iap2LinkStruct");
	set_name	(0X81E98,	"s_tIap2Link");
	create_dword	(0X83CEC);
	set_name	(0X83CEC,	"s_pcDev");
	MakeStruct	(0X83CF0,	"T_FwPacketNameStruct");
	make_array	(0X83CF0,	0XA);
	set_name	(0X83CF0,	"s_tFwPacketName");
	create_dword	(0X844E8);
	set_name	(0X844E8,	"s_ulFwNums");
	create_dword	(0X844EC);
	set_name	(0X844EC,	"s_ulMaxVersionIndex");
	MakeStruct	(0X844F0,	"T_HeaderStruct");
	set_name	(0X844F0,	"s_tHeader");
	create_dword	(0X85980);
	make_array	(0X85980,	0X2);
	set_name	(0X85980,	"s_ptDJIProtocolHandle");
	MakeStruct	(0X85988,	"T_UpdateSaveStruct");
	set_name	(0X85988,	"s_tUpdatePara");
	create_byte	(0X85992);
	set_name	(0X85992,	"s_bUpdateParaValid");
	create_dword	(0X85994);
	set_name	(0X85994,	"s_ulUpdateType");
	MakeStruct	(0X85998,	"pthread_mutex_t");
	set_name	(0X85998,	"s_ParaMutex");
	create_dword	(0X859B0);
	make_array	(0X859B0,	0XE);
	set_name	(0X859B0,	"s_aslPara");
	MakeStruct	(0X859E8,	"usbmuxd_device_info_t");
	set_name	(0X859E8,	"muxdev");
	set_name	(0X85A1C,	"_end_0");
	create_dword	(0X85A20);
	set_name	(0X85A20,	"_GLOBAL_OFFSET_TABLE_");
	create_dword	(0X85A24);
	set_name	(0X85A24,	"_DYNAMIC");
	create_dword	(0X85A28);
	set_name	(0X85A28,	"shift");
	create_dword	(0X85A2C);
	set_name	(0X85A2C,	"__bss_start__");
	create_dword	(0X85A30);
	set_name	(0X85A30,	"__exidx_end");
	create_dword	(0X85A34);
	set_name	(0X85A34,	"__end__");
	create_dword	(0X85A38);
	set_name	(0X85A38,	"__bss_end__");
	create_dword	(0X85A3C);
	set_name	(0X85A3C,	"__bss_start");
	create_dword	(0X85A40);
	set_name	(0X85A40,	"_bss_end__");
	create_dword	(0X85A44);
	set_name	(0X85A44,	"_end");
	create_dword	(0X85A48);
	set_name	(0X85A48,	"_edata");
	create_dword	(0X85A4C);
	set_name	(0X85A4C,	"__exidx_start");
	create_insn	(0X85AF0);
	set_name	(0X85AF0,	"__imp_open");
	create_insn	(0X85AF4);
	set_name	(0X85AF4,	"__imp_usbmuxd_connect");
	create_insn	(0X85AF8);
	set_name	(0X85AF8,	"__imp_sigemptyset");
	create_insn	(0X85AFC);
	set_name	(0X85AFC,	"__imp_connect");
	create_insn	(0X85B00);
	set_name	(0X85B00,	"__imp_srand");
	create_insn	(0X85B04);
	set_name	(0X85B04,	"__imp_usbmuxd_send");
	create_insn	(0X85B08);
	set_name	(0X85B08,	"__imp_localtime");
	create_insn	(0X85B0C);
	set_name	(0X85B0C,	"__imp_opendir");
	create_insn	(0X85B10);
	set_name	(0X85B10,	"__imp_memcmp");
	create_insn	(0X85B14);
	set_name	(0X85B14,	"__imp_pthread_attr_setdetachstate");
	create_insn	(0X85B18);
	set_name	(0X85B18,	"__imp_clock_gettime");
	create_insn	(0X85B1C);
	set_name	(0X85B1C,	"__imp___xstat");
	create_insn	(0X85B20);
	set_name	(0X85B20,	"__aeabi_unwind_cpp_pr0");
	create_insn	(0X85B24);
	set_name	(0X85B24,	"__imp_signal");
	create_insn	(0X85B28);
	set_name	(0X85B28,	"__imp_msgget");
	create_insn	(0X85B2C);
	set_name	(0X85B2C,	"__imp_pthread_attr_setschedpolicy");
	create_insn	(0X85B30);
	set_name	(0X85B30,	"__imp_pthread_mutexattr_settype");
	create_insn	(0X85B34);
	set_name	(0X85B34,	"__imp_libusb_free_device_list");
	create_insn	(0X85B38);
	set_name	(0X85B38,	"__imp_inet_addr");
	create_insn	(0X85B3C);
	set_name	(0X85B3C,	"__imp_fclose");
	create_insn	(0X85B40);
	set_name	(0X85B40,	"__imp_fgets");
	create_insn	(0X85B44);
	set_name	(0X85B44,	"__imp_recv");
	create_insn	(0X85B48);
	set_name	(0X85B48,	"__imp_libusb_get_device_list");
	create_insn	(0X85B4C);
	set_name	(0X85B4C,	"__imp_system");
	create_insn	(0X85B50);
	set_name	(0X85B50,	"__imp_strchr");
	create_insn	(0X85B54);
	set_name	(0X85B54,	"__imp_putchar");
	create_insn	(0X85B58);
	set_name	(0X85B58,	"__imp_pclose");
	create_insn	(0X85B5C);
	set_name	(0X85B5C,	"__imp_sendto");
	create_insn	(0X85B60);
	set_name	(0X85B60,	"__imp_htons");
	create_insn	(0X85B64);
	set_name	(0X85B64,	"__imp_fopen");
	create_insn	(0X85B68);
	set_name	(0X85B68,	"__imp_sched_get_priority_max");
	create_insn	(0X85B6C);
	set_name	(0X85B6C,	"__imp_mktime");
	create_insn	(0X85B70);
	set_name	(0X85B70,	"__imp_memset");
	create_insn	(0X85B74);
	set_name	(0X85B74,	"__imp_pthread_cond_timedwait");
	create_insn	(0X85B78);
	set_name	(0X85B78,	"__imp_pthread_attr_setschedparam");
	create_insn	(0X85B7C);
	set_name	(0X85B7C,	"__imp___assert_fail");
	create_insn	(0X85B80);
	set_name	(0X85B80,	"__imp_ntohl");
	create_insn	(0X85B84);
	set_name	(0X85B84,	"__imp_usleep");
	create_insn	(0X85B88);
	set_name	(0X85B88,	"__imp_msgsnd");
	create_insn	(0X85B8C);
	set_name	(0X85B8C,	"__imp_tcdrain");
	create_insn	(0X85B90);
	set_name	(0X85B90,	"__imp_free");
	create_insn	(0X85B94);
	set_name	(0X85B94,	"__imp_read");
	create_insn	(0X85B98);
	set_name	(0X85B98,	"__imp_write");
	create_insn	(0X85B9C);
	set_name	(0X85B9C,	"__imp_gettimeofday");
	create_insn	(0X85BA0);
	set_name	(0X85BA0,	"__imp_tcgetattr");
	create_insn	(0X85BA4);
	set_name	(0X85BA4,	"__imp_pthread_mutex_unlock");
	create_insn	(0X85BA8);
	set_name	(0X85BA8,	"__imp_tcflush");
	create_insn	(0X85BAC);
	set_name	(0X85BAC,	"__imp_socket");
	create_insn	(0X85BB0);
	set_name	(0X85BB0,	"__imp_ioctl");
	create_insn	(0X85BB4);
	set_name	(0X85BB4,	"__imp_ntohs");
	create_insn	(0X85BB8);
	set_name	(0X85BB8,	"__imp_pthread_mutexattr_destroy");
	create_insn	(0X85BBC);
	set_name	(0X85BBC,	"__imp_libusb_exit");
	create_insn	(0X85BC0);
	set_name	(0X85BC0,	"__imp_pthread_mutex_lock");
	create_insn	(0X85BC4);
	set_name	(0X85BC4,	"__imp_strlen");
	create_insn	(0X85BC8);
	set_name	(0X85BC8,	"__imp_sscanf");
	create_insn	(0X85BCC);
	set_name	(0X85BCC,	"__imp_libusb_init");
	create_insn	(0X85BD0);
	set_name	(0X85BD0,	"__imp_pthread_create");
	create_insn	(0X85BD4);
	set_name	(0X85BD4,	"__imp_memcpy");
	create_insn	(0X85BD8);
	set_name	(0X85BD8,	"__imp_pthread_cond_signal");
	create_insn	(0X85BDC);
	set_name	(0X85BDC,	"__imp_pthread_attr_setinheritsched");
	create_insn	(0X85BE0);
	set_name	(0X85BE0,	"__imp_sigaddset");
	create_insn	(0X85BE4);
	set_name	(0X85BE4,	"__imp_strcpy");
	create_insn	(0X85BE8);
	set_name	(0X85BE8,	"__imp_pthread_cond_destroy");
	create_insn	(0X85BEC);
	set_name	(0X85BEC,	"__imp_pthread_sigmask");
	create_insn	(0X85BF0);
	set_name	(0X85BF0,	"__imp_settimeofday");
	create_insn	(0X85BF4);
	set_name	(0X85BF4,	"__imp_pthread_mutex_destroy");
	create_insn	(0X85BF8);
	set_name	(0X85BF8,	"__imp_printf");
	create_insn	(0X85BFC);
	set_name	(0X85BFC,	"__imp_raise");
	create_insn	(0X85C00);
	set_name	(0X85C00,	"__imp_pthread_mutex_init");
	create_insn	(0X85C04);
	set_name	(0X85C04,	"__imp_usbmuxd_subscribe");
	create_insn	(0X85C08);
	set_name	(0X85C08,	"__imp_bind");
	create_insn	(0X85C0C);
	set_name	(0X85C0C,	"__imp_strstr");
	create_insn	(0X85C10);
	set_name	(0X85C10,	"__imp_select");
	create_insn	(0X85C14);
	set_name	(0X85C14,	"__imp_close");
	create_insn	(0X85C18);
	set_name	(0X85C18,	"__imp_fwrite");
	create_insn	(0X85C1C);
	set_name	(0X85C1C,	"__imp_usbmuxd_disconnect");
	create_insn	(0X85C20);
	set_name	(0X85C20,	"__imp_closedir");
	create_insn	(0X85C24);
	set_name	(0X85C24,	"__imp_time");
	create_insn	(0X85C28);
	set_name	(0X85C28,	"__imp_malloc");
	create_insn	(0X85C2C);
	set_name	(0X85C2C,	"__imp_cfsetospeed");
	create_insn	(0X85C30);
	set_name	(0X85C30,	"__imp_pthread_attr_init");
	create_insn	(0X85C34);
	set_name	(0X85C34,	"__imp_ftruncate");
	create_insn	(0X85C38);
	set_name	(0X85C38,	"__imp_sleep");
	create_insn	(0X85C3C);
	set_name	(0X85C3C,	"__imp_send");
	create_insn	(0X85C40);
	set_name	(0X85C40,	"__imp_strcat");
	create_insn	(0X85C44);
	set_name	(0X85C44,	"__imp_libusb_get_device_descriptor");
	create_insn	(0X85C48);
	set_name	(0X85C48,	"__imp_popen");
	create_insn	(0X85C4C);
	set_name	(0X85C4C,	"__imp_usbmuxd_recv_timeout");
	create_insn	(0X85C50);
	set_name	(0X85C50,	"__imp_puts");
	create_insn	(0X85C54);
	set_name	(0X85C54,	"__imp_tcsetattr");
	create_insn	(0X85C58);
	set_name	(0X85C58,	"__imp_getpid");
	create_insn	(0X85C5C);
	set_name	(0X85C5C,	"__imp_fcntl");
	create_insn	(0X85C60);
	set_name	(0X85C60,	"__imp_bzero");
	create_insn	(0X85C64);
	set_name	(0X85C64,	"__imp_htonl");
	create_insn	(0X85C68);
	set_name	(0X85C68,	"__imp_pthread_attr_destroy");
	create_insn	(0X85C6C);
	set_name	(0X85C6C,	"__imp_lseek");
	create_insn	(0X85C70);
	set_name	(0X85C70,	"__imp_rand");
	create_insn	(0X85C74);
	set_name	(0X85C74,	"__imp_fread");
	create_insn	(0X85C78);
	set_name	(0X85C78,	"__imp_usbmuxd_get_device_by_udid");
	create_insn	(0X85C7C);
	set_name	(0X85C7C,	"__imp_pthread_cond_init");
	create_insn	(0X85C80);
	set_name	(0X85C80,	"__imp_msgrcv");
	create_insn	(0X85C84);
	set_name	(0X85C84,	"__imp_recvfrom");
	create_insn	(0X85C88);
	set_name	(0X85C88,	"__imp_setsockopt");
	create_insn	(0X85C8C);
	set_name	(0X85C8C,	"__imp_pthread_mutexattr_init");
	create_insn	(0X85C90);
	set_name	(0X85C90,	"__imp_readdir");
	create_insn	(0X85C94);
	set_name	(0X85C94,	"__aeabi_unwind_cpp_pr1");
	create_insn	(0X85C98);
	set_name	(0X85C98,	"__imp_strcmp");
	create_insn	(0X85C9C);
	set_name	(0X85C9C,	"__imp_exit");
	create_insn	(0X85CA0);
	set_name	(0X85CA0,	"__imp_cfsetispeed");
	create_insn	(0X85CA4);
	set_name	(0X85CA4,	"__imp___errno_location");
	create_insn	(0X85CA8);
	set_name	(0X85CA8,	"__imp___cxa_finalize");
	create_insn	(0X85CAC);
	set_name	(0X85CAC,	"__imp_sprintf");
	create_insn	(0X85CB0);
	set_name	(0X85CB0,	"__imp_pthread_join");
	create_insn	(0X85CB4);
	set_name	(0X85CB4,	"__imp___gmon_start__");
	create_insn	(0X85CB8);
	set_name	(0X85CB8,	"_Jv_RegisterClasses");
}

static Functions_0(void) {

	add_func    (0X5754,0X5760);
	set_func_flags(0X5754,0x400);
	set_frame_size(0X5754, 0X8, 0, 0);
	add_func    (0X5774,0X5780);
	set_func_flags(0X5774,0x4c0);
	SetType(0X5774, "void j_Usbupdate_ClearDM368UpdateFlag();");
	add_func    (0X5780,0X578C);
	set_func_flags(0X5780,0x4c0);
	SetType(0X5780, "int open(const char *file, int oflag, ...);");
	add_func    (0X578C,0X5798);
	set_func_flags(0X578C,0x4c0);
	SetType(0X578C, "INT32S j_At88_Set_Chip_Info_File();");
	add_func    (0X5798,0X57A4);
	set_func_flags(0X5798,0x4c0);
	add_func    (0X57A4,0X57B0);
	set_func_flags(0X57A4,0x4c0);
	SetType(0X57A4, "INT32S __cdecl j_AppleCP_Req_Challenge_Response(INT8U *pucChallengeData, INT32U ulChallengeLen, INT8U *pucResponseData, INT32U *pulResponseRealLen, INT32U ulResponseMaxLen);");
	add_func    (0X57B0,0X57BC);
	set_func_flags(0X57B0,0x4c0);
	SetType(0X57B0, "int sigemptyset(sigset_t *set);");
	add_func    (0X57BC,0X57C8);
	set_func_flags(0X57BC,0x4c0);
	SetType(0X57BC, "void __cdecl j_Usbupdate_PrintLog(CHAR *pcStr);");
	add_func    (0X57C8,0X57D4);
	set_func_flags(0X57C8,0x4c0);
	SetType(0X57C8, "unsigned __int16 __cdecl j_CalCrc16(unsigned __int16 crc, unsigned __int8 *pchMessage, unsigned int dwLength);");
	add_func    (0X57D4,0X57E0);
	set_func_flags(0X57D4,0x4c0);
	SetType(0X57D4, "INT32S __cdecl j_At88_Read_Config(INT8U *pData);");
	add_func    (0X57E0,0X57EC);
	set_func_flags(0X57E0,0x4c0);
	SetType(0X57E0, "int connect(int fd, const struct sockaddr *addr, socklen_t len);");
	add_func    (0X57EC,0X57F8);
	set_func_flags(0X57EC,0x4c0);
	SetType(0X57EC, "void __cdecl j_sha256_transf(sha256_ctx *ctx, const uint8 *message, uint32 block_nb);");
	add_func    (0X57F8,0X5804);
	set_func_flags(0X57F8,0x4c0);
	SetType(0X57F8, "void srand(unsigned int seed);");
	add_func    (0X5804,0X5810);
	set_func_flags(0X5804,0x4c0);
	add_func    (0X5810,0X581C);
	set_func_flags(0X5810,0x4c0);
	SetType(0X5810, "int j_open68013();");
	add_func    (0X581C,0X5828);
	set_func_flags(0X581C,0x4c0);
	SetType(0X581C, "struct tm *localtime(const time_t *timer);");
	add_func    (0X5828,0X5834);
	set_func_flags(0X5828,0x4c0);
	SetType(0X5828, "DIR *opendir(const char *name);");
	add_func    (0X5834,0X5840);
	set_func_flags(0X5834,0x4c0);
	SetType(0X5834, "INT32S j_At88_Check_Chip_Info();");
	add_func    (0X5840,0X584C);
	set_func_flags(0X5840,0x4c0);
	SetType(0X5840, "INT32S j_At88_Check_Factory_Info();");
	add_func    (0X584C,0X5858);
	set_func_flags(0X584C,0x4c0);
	SetType(0X584C, "int memcmp(const void *s1, const void *s2, size_t n);");
	add_func    (0X5858,0X5864);
	set_func_flags(0X5858,0x4c0);
	SetType(0X5858, "int32_t j_getTickCount();");
	add_func    (0X5864,0X5870);
	set_func_flags(0X5864,0x4c0);
	SetType(0X5864, "int pthread_attr_setdetachstate(pthread_attr_t *attr, int detachstate);");
	add_func    (0X5870,0X587C);
	set_func_flags(0X5870,0x4c0);
	SetType(0X5870, "int clock_gettime(clockid_t clock_id, struct timespec *tp);");
	add_func    (0X587C,0X5888);
	set_func_flags(0X587C,0x4c0);
	SetType(0X587C, "int _xstat(int ver, const char *filename, struct stat *stat_buf);");
	add_func    (0X5888,0X5894);
	set_func_flags(0X5888,0x4c0);
	SetType(0X5888, "INT32S __cdecl j_Iap2_Queue_Put(T_Iap2QueueStruct *pQueue, VOID *pData);");
	add_func    (0X5894,0X58A0);
	set_func_flags(0X5894,0x4c0);
	add_func    (0X58A0,0X58AC);
	set_func_flags(0X58A0,0x4c0);
	SetType(0X58A0, "int __cdecl j_tcp_close(int *sfd);");
	add_func    (0X58AC,0X58B8);
	set_func_flags(0X58AC,0x4c0);
	add_func    (0X58B8,0X58C4);
	set_func_flags(0X58B8,0x4c0);
	SetType(0X58B8, "__sighandler_t signal(int sig, __sighandler_t handler);");
	add_func    (0X58C4,0X58D0);
	set_func_flags(0X58C4,0x4c0);
	SetType(0X58C4, "int msgget(key_t key, int msgflg);");
	add_func    (0X58D0,0X58DC);
	set_func_flags(0X58D0,0x4c0);
	SetType(0X58D0, "int pthread_attr_setschedpolicy(pthread_attr_t *attr, int policy);");
	add_func    (0X58DC,0X58E8);
	set_func_flags(0X58DC,0x4c0);
	add_func    (0X58E8,0X58F4);
	set_func_flags(0X58E8,0x4c0);
	SetType(0X58E8, "INT32S __cdecl j_GetFileSize(CHAR *pFile);");
	add_func    (0X58F4,0X5900);
	set_func_flags(0X58F4,0x4c0);
	SetType(0X58F4, "INT32S __cdecl j_GetCurrentTime(timeval *ptTime);");
	add_func    (0X5900,0X590C);
	set_func_flags(0X5900,0x4c0);
	SetType(0X5900, "void j_Usbupdatecheck_PrintResult_Error();");
	add_func    (0X590C,0X5918);
	set_func_flags(0X590C,0x4c0);
	add_func    (0X5918,0X5924);
	set_func_flags(0X5918,0x4c0);
	SetType(0X5918, "INT32S __cdecl j_Pro_Cmd_Get_Version(T_DJIProtocolDataStruct *pPro, INT8U ucDevID, INT32U ulTimeOut, INT32U *pulLoaderVersion, INT32U *pulFirmwareVersion, BOOLEAN *pbSupportDowngrade);");
	add_func    (0X5924,0X5930);
	set_func_flags(0X5924,0x4c0);
	add_func    (0X5930,0X593C);
	set_func_flags(0X5930,0x4c0);
	SetType(0X5930, "in_addr_t inet_addr(const char *cp);");
	add_func    (0X593C,0X5948);
	set_func_flags(0X593C,0x4c0);
	SetType(0X593C, "INT32S __cdecl j_At88_Check_Key(INT8U *pData);");
	add_func    (0X5948,0X5954);
	set_func_flags(0X5948,0x4c0);
	SetType(0X5948, "T_QueueHandleStruct *__cdecl j_Queue_Create(INT32U ulElementNum, INT32U ulElementSize);");
	add_func    (0X5954,0X5960);
	set_func_flags(0X5954,0x4c0);
	SetType(0X5954, "int fclose(FILE *stream);");
	add_func    (0X5960,0X596C);
	set_func_flags(0X5960,0x4c0);
	SetType(0X5960, "char *fgets(char *s, int n, FILE *stream);");
	add_func    (0X596C,0X5978);
	set_func_flags(0X596C,0x4c0);
	SetType(0X596C, "ssize_t recv(int fd, void *buf, size_t n, int flags);");
	add_func    (0X5978,0X5984);
	set_func_flags(0X5978,0x4c0);
	SetType(0X5978, "BOOLEAN __cdecl j_Iap2_Queue_IsEmpty(T_Iap2QueueStruct *pQueue);");
	add_func    (0X5984,0X5990);
	set_func_flags(0X5984,0x4c0);
	add_func    (0X5990,0X599C);
	set_func_flags(0X5990,0x4c0);
	SetType(0X5990, "BOOLEAN __cdecl j_IfFileExist(CHAR *pFile);");
	add_func    (0X599C,0X59A8);
	set_func_flags(0X599C,0x4c0);
	add_func    (0X59A8,0X59B4);
	set_func_flags(0X59A8,0x4c0);
	SetType(0X59A8, "int system(const char *command);");
	add_func    (0X59B4,0X59C0);
	set_func_flags(0X59B4,0x4c0);
	SetType(0X59B4, "char *strchr(const char *s, int c);");
	add_func    (0X59C0,0X59CC);
	set_func_flags(0X59C0,0x4c0);
	SetType(0X59C0, "void j_UnInit_libusb();");
	add_func    (0X59CC,0X59D8);
	set_func_flags(0X59CC,0x4c0);
	SetType(0X59CC, "int putchar(int c);");
	add_func    (0X59D8,0X59E4);
	set_func_flags(0X59D8,0x4c0);
	SetType(0X59D8, "INT32S __cdecl j_Pro_Cmd_Load_Finish(T_DJIProtocolDataStruct *pPro, INT8U ucDevID, INT32U ulTimeOut, INT8U *pucMD5, INT8U *pucAck);");
	add_func    (0X59E4,0X59F0);
	set_func_flags(0X59E4,0x4c0);
	SetType(0X59E4, "unsigned __int8 __cdecl j_CalCrc8(unsigned __int8 crc, unsigned __int8 *pchMessage, unsigned int dwLength);");
	add_func    (0X59F0,0X59FC);
	set_func_flags(0X59F0,0x4c0);
	SetType(0X59F0, "int pclose(FILE *stream);");
	add_func    (0X59FC,0X5A08);
	set_func_flags(0X59FC,0x4c0);
	add_func    (0X5A08,0X5A14);
	set_func_flags(0X5A08,0x4c0);
	SetType(0X5A08, "void __cdecl j_Simple_EncryptAndDecrypt(INT8U *pucData, INT32U ulLen, INT16U usSeq);");
	add_func    (0X5A14,0X5A20);
	set_func_flags(0X5A14,0x4c0);
	SetType(0X5A14, "BOOLEAN j_At88_Is_Passed();");
	add_func    (0X5A20,0X5A2C);
	set_func_flags(0X5A20,0x4c0);
	SetType(0X5A20, "ssize_t sendto(int fd, const void *buf, size_t n, int flags, const struct sockaddr *addr, socklen_t addr_len);");
	add_func    (0X5A2C,0X5A38);
	set_func_flags(0X5A2C,0x4c0);
	SetType(0X5A2C, "uint16_t htons(uint16_t hostshort);");
	add_func    (0X5A38,0X5A44);
	set_func_flags(0X5A38,0x4c0);
	SetType(0X5A38, "INT32S __cdecl j_Iap2_Link_EASession_Send(INT32U ulID, T_Iap2PacketStruct *ptPkt);");
	add_func    (0X5A44,0X5A50);
	set_func_flags(0X5A44,0x4c0);
	SetType(0X5A44, "FILE *fopen(const char *filename, const char *modes);");
	add_func    (0X5A50,0X5A5C);
	set_func_flags(0X5A50,0x4c0);
	SetType(0X5A50, "INT32S __cdecl j_Watchdog_Init(INT32S slTimeout);");
	add_func    (0X5A5C,0X5A68);
	set_func_flags(0X5A5C,0x4c0);
	SetType(0X5A5C, "int sched_get_priority_max(int algorithm);");
	add_func    (0X5A68,0X5A74);
	set_func_flags(0X5A68,0x4c0);
	SetType(0X5A68, "INT32S __cdecl j_At88_Read_Factory_Info(T_FactoryInfoStruct *pData);");
	add_func    (0X5A74,0X5A80);
	set_func_flags(0X5A74,0x4c0);
	SetType(0X5A74, "time_t mktime(struct tm *tp);");
	add_func    (0X5A80,0X5A8C);
	set_func_flags(0X5A80,0x4c0);
	SetType(0X5A80, "void j_Usbupdate_InitResultFile();");
	add_func    (0X5A8C,0X5A98);
	set_func_flags(0X5A8C,0x4c0);
	SetType(0X5A8C, "void *memset(void *s, int c, size_t n);");
	add_func    (0X5A98,0X5AA4);
	set_func_flags(0X5A98,0x4c0);
	SetType(0X5A98, "void __cdecl j_PrintHex(INT8U *pucBuff, INT32U ulLength);");
	add_func    (0X5AA4,0X5AB0);
	set_func_flags(0X5AA4,0x4c0);
	SetType(0X5AA4, "int pthread_cond_timedwait(pthread_cond_t *cond, pthread_mutex_t *mutex, const struct timespec *abstime);");
	add_func    (0X5AB0,0X5ABC);
	set_func_flags(0X5AB0,0x4c0);
	SetType(0X5AB0, "INT32S __cdecl j_Queue_GetData(T_QueueHandleStruct *pQueueHandle, VOID *pData, INT32U ulDataLen);");
	add_func    (0X5ABC,0X5AC8);
	set_func_flags(0X5ABC,0x4c0);
	SetType(0X5ABC, "INT32S __cdecl j_AesEncrypt(INT8U *pOut, INT8U *pIn, INT32U ulLen, INT8U *pKey);");
	add_func    (0X5AC8,0X5AD4);
	set_func_flags(0X5AC8,0x4c0);
	SetType(0X5AC8, "INT32S __cdecl j_At88_Write_Key_File(INT8U *pData);");
	add_func    (0X5AD4,0X5AE0);
	set_func_flags(0X5AD4,0x4c0);
	SetType(0X5AD4, "void j_Usbupdate_SetDM368UpdateFlag();");
	add_func    (0X5AE0,0X5AEC);
	set_func_flags(0X5AE0,0x4c0);
	SetType(0X5AE0, "INT32S j_ThreadSignal_MaskPipe();");
	add_func    (0X5AEC,0X5AF8);
	set_func_flags(0X5AEC,0x4c0);
	SetType(0X5AEC, "INT32S __cdecl j_GetHardwareVersion(CHAR *pVersion);");
	add_func    (0X5AF8,0X5B04);
	set_func_flags(0X5AF8,0x4c0);
	SetType(0X5AF8, "int pthread_attr_setschedparam(pthread_attr_t *attr, const struct sched_param *param);");
	add_func    (0X5B04,0X5B10);
	set_func_flags(0X5B04,0x4c0);
	SetType(0X5B04, "void __cdecl j_GetINT32LittleEnd(VOID *pOut, VOID *pIn);");
	add_func    (0X5B10,0X5B1C);
	set_func_flags(0X5B10,0x4c0);
	SetType(0X5B10, "INT32S __cdecl j_DJI_Frame_Cap(T_DJIFrameCapStruct *pFrameCapture);");
	add_func    (0X5B1C,0X5B28);
	set_func_flags(0X5B1C,0x4c0);
	SetType(0X5B1C, "INT8U __cdecl j_Iap2_CalChecksum(INT8U *pucData, INT32U ulLen);");
	add_func    (0X5B28,0X5B34);
	set_func_flags(0X5B28,0x4c0);
	SetType(0X5B28, "INT32S j_At88_Delete();");
	add_func    (0X5B34,0X5B40);
	set_func_flags(0X5B34,0x4c0);
	SetType(0X5B34, "INT32S __cdecl j_ReadFile(CHAR *pcFileName, VOID *pData, INT32U ulLen);");
	add_func    (0X5B40,0X5B4C);
	set_func_flags(0X5B40,0x4c0);
	SetType(0X5B40, "INT32S __cdecl j_Pro_SendWaitAck(T_DJIProtocolDataStruct *pPro, T_DJIProCmdAttrStruct *pCmd, INT8U *pSendData, INT32U ulSendLen, INT32U ulSendTimeout, INT8U *pRecvData, INT32U *pulRecvLen, INT32U ulRecvMaxLen);");
	add_func    (0X5B4C,0X5B58);
	set_func_flags(0X5B4C,0x4c0);
	SetType(0X5B4C, "void j_Usbupdate_SavePara();");
	add_func    (0X5B58,0X5B64);
	set_func_flags(0X5B58,0x4c0);
	SetType(0X5B58, "INT32S __cdecl j_Iap2_Pkt_Parse(INT8U *pucInBuff, INT32U ulInlen, INT32U *pInOff, T_Iap2PacketStruct *ptPkt);");
	add_func    (0X5B64,0X5B70);
	set_func_flags(0X5B64,0x4c1);
	SetType(0X5B64, "void _assert_fail(const char *assertion, const char *file, unsigned int line, const char *function);");
	add_func    (0X5B70,0X5B7C);
	set_func_flags(0X5B70,0x4c0);
	SetType(0X5B70, "void __cdecl j_Pro_Deal_CallBack(T_DJIProtocolDataStruct *pPro);");
	add_func    (0X5B7C,0X5B88);
	set_func_flags(0X5B7C,0x4c0);
	SetType(0X5B7C, "INT32S __cdecl j_AppleCP_Read_AuthCertData(INT8U *pucData, INT32U *pulRealLen, INT32U ulMaxLen);");
	add_func    (0X5B88,0X5B94);
	set_func_flags(0X5B88,0x4c0);
	SetType(0X5B88, "uint32_t ntohl(uint32_t netlong);");
	add_func    (0X5B94,0X5BA0);
	set_func_flags(0X5B94,0x4c0);
	SetType(0X5B94, "int usleep(__useconds_t useconds);");
	add_func    (0X5BA0,0X5BAC);
	set_func_flags(0X5BA0,0x4c0);
	SetType(0X5BA0, "int msgsnd(int msqid, const void *msgp, size_t msgsz, int msgflg);");
	add_func    (0X5BAC,0X5BB8);
	set_func_flags(0X5BAC,0x4c0);
	SetType(0X5BAC, "int __cdecl j_tcp_recv(int sfd, unsigned __int8 *buff, int iSize);");
	add_func    (0X5BB8,0X5BC4);
	set_func_flags(0X5BB8,0x4c0);
	SetType(0X5BB8, "INT32S __cdecl j_Iap2_Link_CtrlSession_Recv(T_Iap2PacketStruct **ptPkt);");
	add_func    (0X5BC4,0X5BD0);
	set_func_flags(0X5BC4,0x4c0);
	SetType(0X5BC4, "int tcdrain(int fd);");
	add_func    (0X5BD0,0X5BDC);
	set_func_flags(0X5BD0,0x4c0);
	SetType(0X5BD0, "INT32S __cdecl j_Pro_Cmd_Reboot(T_DJIProtocolDataStruct *pPro, INT8U ucDevID, INT32U ulTimeOut, INT8U ucType, INT32U ulDelayTimeMs);");
	add_func    (0X5BDC,0X5BE8);
	set_func_flags(0X5BDC,0x4c0);
	SetType(0X5BDC, "INT32S __cdecl j_At88_Is_Config_Set(BOOLEAN *pData);");
	add_func    (0X5BE8,0X5BF4);
	set_func_flags(0X5BE8,0x4c0);
	SetType(0X5BE8, "void free(void *ptr);");
	add_func    (0X5BF4,0X5C00);
	set_func_flags(0X5BF4,0x4c0);
	SetType(0X5BF4, "ssize_t read(int fd, void *buf, size_t nbytes);");
	add_func    (0X5C00,0X5C0C);
	set_func_flags(0X5C00,0x4c0);
	SetType(0X5C00, "ssize_t write(int fd, const void *buf, size_t n);");
	add_func    (0X5C0C,0X5C18);
	set_func_flags(0X5C0C,0x4c0);
	SetType(0X5C0C, "INT32S __cdecl j_DataBuff_Delete(T_DataBuffHandleStruct *pDataBuffHandle);");
	add_func    (0X5C18,0X5C24);
	set_func_flags(0X5C18,0x4c0);
	SetType(0X5C18, "void __cdecl j_PutINT32LittleEnd(VOID *pOut, INT32U ulData);");
	add_func    (0X5C24,0X5C30);
	set_func_flags(0X5C24,0x4c0);
	SetType(0X5C24, "INT32S __cdecl j_Pro_PackAndSend_ThreadSafe(T_DJIProtocolDataStruct *pPro, T_DJIProCmdAttrStruct *pCmd, INT8U *pData, INT32U ulLen);");
	add_func    (0X5C30,0X5C3C);
	set_func_flags(0X5C30,0x4c0);
	SetType(0X5C30, "int gettimeofday(struct timeval *tv, __timezone_ptr_t tz);");
	add_func    (0X5C3C,0X5C48);
	set_func_flags(0X5C3C,0x4c0);
	SetType(0X5C3C, "INT32S __cdecl j_At88_Read_Chip_Info_File(INT8U *pData);");
	add_func    (0X5C48,0X5C54);
	set_func_flags(0X5C48,0x4c0);
	SetType(0X5C48, "INT32S __cdecl j_At88_Is_Config_Lock(BOOLEAN *pData);");
	add_func    (0X5C54,0X5C60);
	set_func_flags(0X5C54,0x4c0);
	SetType(0X5C54, "void __cdecl j_sha256_final(sha256_ctx *ctx, uint8 *digest);");
	add_func    (0X5C60,0X5C6C);
	set_func_flags(0X5C60,0x4c0);
	SetType(0X5C60, "int tcgetattr(int fd, struct termios *termios_p);");
	add_func    (0X5C6C,0X5C78);
	set_func_flags(0X5C6C,0x4c0);
	SetType(0X5C6C, "void j_Usbupdate_SaveLog();");
	add_func    (0X5C78,0X5C84);
	set_func_flags(0X5C78,0x4c0);
	SetType(0X5C78, "int pthread_mutex_unlock(pthread_mutex_t *mutex);");
	add_func    (0X5C84,0X5C90);
	set_func_flags(0X5C84,0x4c0);
	SetType(0X5C84, "void __cdecl j_Iap2_Link_Session_ReleaseRecvPkt(T_Iap2PacketStruct *ptPkt);");
	add_func    (0X5C90,0X5C9C);
	set_func_flags(0X5C90,0x4c0);
	SetType(0X5C90, "int tcflush(int fd, int queue_selector);");
	add_func    (0X5C9C,0X5CA8);
	set_func_flags(0X5C9C,0x4c0);
	SetType(0X5C9C, "int socket(int domain, int type, int protocol);");
	add_func    (0X5CA8,0X5CB4);
	set_func_flags(0X5CA8,0x4c0);
	add_func    (0X5CB4,0X5CC0);
	set_func_flags(0X5CB4,0x4c0);
	SetType(0X5CB4, "void j_UsbDel();");
	add_func    (0X5CC0,0X5CCC);
	set_func_flags(0X5CC0,0x4c0);
	SetType(0X5CC0, "int ioctl(int fd, unsigned int request, ...);");
	add_func    (0X5CCC,0X5CD8);
	set_func_flags(0X5CCC,0x4c0);
	SetType(0X5CCC, "uint16_t ntohs(uint16_t netshort);");
	add_func    (0X5CD8,0X5CE4);
	set_func_flags(0X5CD8,0x4c0);
	SetType(0X5CD8, "void j_Usbupdatecheck_PrintResult_Forbid();");
	add_func    (0X5CE4,0X5CF0);
	set_func_flags(0X5CE4,0x4c0);
	SetType(0X5CE4, "int __cdecl j_LockFile(int fd);");
	add_func    (0X5CF0,0X5CFC);
	set_func_flags(0X5CF0,0x4c0);
	SetType(0X5CF0, "int pthread_mutexattr_destroy(pthread_mutexattr_t *attr);");
	add_func    (0X5CFC,0X5D08);
	set_func_flags(0X5CFC,0x4c0);
	add_func    (0X5D08,0X5D14);
	set_func_flags(0X5D08,0x4c0);
	SetType(0X5D08, "int pthread_mutex_lock(pthread_mutex_t *mutex);");
	add_func    (0X5D14,0X5D20);
	set_func_flags(0X5D14,0x4c0);
	SetType(0X5D14, "BOOLEAN __cdecl j_Iap2_Queue_IsFull(T_Iap2QueueStruct *pQueue);");
	add_func    (0X5D20,0X5D2C);
	set_func_flags(0X5D20,0x4c0);
	SetType(0X5D20, "int j_AES_cbc_encrypt(void *dest, int);");
	add_func    (0X5D2C,0X5D38);
	set_func_flags(0X5D2C,0x4c0);
	SetType(0X5D2C, "size_t strlen(const char *s);");
	add_func    (0X5D38,0X5D44);
	set_func_flags(0X5D38,0x4c0);
	SetType(0X5D38, "int sscanf(const char *s, const char *format, ...);");
	add_func    (0X5D44,0X5D50);
	set_func_flags(0X5D44,0x4c0);
	SetType(0X5D44, "INT32S __cdecl j_Iap2_Link_CtrlSession_Send(T_Iap2PacketStruct *ptPkt);");
	add_func    (0X5D50,0X5D5C);
	set_func_flags(0X5D50,0x4c0);
	SetType(0X5D50, "void j_Usbupdate_SaveResultFile();");
	add_func    (0X5D5C,0X5D68);
	set_func_flags(0X5D5C,0x4c0);
	SetType(0X5D5C, "T_DataBuffHandleStruct *__cdecl j_DataBuff_Create(INT32U slLen);");
	add_func    (0X5D68,0X5D74);
	set_func_flags(0X5D68,0x4c0);
	SetType(0X5D68, "INT32S __cdecl j_At88_Read_Key_File(INT8U *pData);");
	add_func    (0X5D74,0X5D80);
	set_func_flags(0X5D74,0x4c0);
	add_func    (0X5D80,0X5D8C);
	set_func_flags(0X5D80,0x4c0);
	SetType(0X5D80, "int pthread_create(pthread_t *newthread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);");
	add_func    (0X5D8C,0X5D98);
	set_func_flags(0X5D8C,0x4c0);
	SetType(0X5D8C, "void *memcpy(void *dest, const void *src, size_t n);");
	add_func    (0X5D98,0X5DA4);
	set_func_flags(0X5D98,0x4c0);
	SetType(0X5D98, "void __cdecl j_GetINT16LittleEnd(VOID *pOut, VOID *pIn);");
	add_func    (0X5DA4,0X5DB0);
	set_func_flags(0X5DA4,0x4c0);
	SetType(0X5DA4, "int pthread_cond_signal(pthread_cond_t *cond);");
	add_func    (0X5DB0,0X5DBC);
	set_func_flags(0X5DB0,0x4c0);
	SetType(0X5DB0, "void __cdecl j_PutINT16LittleEnd(VOID *pOut, INT16U usData);");
	add_func    (0X5DBC,0X5DC8);
	set_func_flags(0X5DBC,0x4c0);
	SetType(0X5DBC, "void __cdecl j_Iap2_Timer_Init(T_Iap2TimerStruct *pTimer);");
	add_func    (0X5DC8,0X5DD4);
	set_func_flags(0X5DC8,0x4c0);
	SetType(0X5DC8, "INT32S __cdecl j_WriteFile_No_Sync(CHAR *pcFileName, VOID *pData, INT32U ulLen);");
	add_func    (0X5DD4,0X5DE0);
	set_func_flags(0X5DD4,0x4c0);
	SetType(0X5DD4, "int pthread_attr_setinheritsched(pthread_attr_t *attr, int inherit);");
	add_func    (0X5DE0,0X5DEC);
	set_func_flags(0X5DE0,0x4c0);
	SetType(0X5DE0, "int sigaddset(sigset_t *set, int signo);");
	add_func    (0X5DEC,0X5DF8);
	set_func_flags(0X5DEC,0x4c0);
	SetType(0X5DEC, "char *strcpy(char *dest, const char *src);");
	add_func    (0X5DF8,0X5E04);
	set_func_flags(0X5DF8,0x4c0);
	SetType(0X5DF8, "void j_close68013();");
	add_func    (0X5E04,0X5E10);
	set_func_flags(0X5E04,0x4c0);
	SetType(0X5E04, "int pthread_cond_destroy(pthread_cond_t *cond);");
	add_func    (0X5E10,0X5E1C);
	set_func_flags(0X5E10,0x4c0);
	SetType(0X5E10, "int pthread_sigmask(int how, const __sigset_t *newmask, __sigset_t *oldmask);");
	add_func    (0X5E1C,0X5E28);
	set_func_flags(0X5E1C,0x4c0);
	SetType(0X5E1C, "int settimeofday(const struct timeval *tv, const struct timezone *tz);");
	add_func    (0X5E28,0X5E34);
	set_func_flags(0X5E28,0x4c0);
	SetType(0X5E28, "int pthread_mutex_destroy(pthread_mutex_t *mutex);");
	add_func    (0X5E34,0X5E40);
	set_func_flags(0X5E34,0x4c0);
	SetType(0X5E34, "int printf(const char *format, ...);");
	add_func    (0X5E40,0X5E4C);
	set_func_flags(0X5E40,0x4c0);
	SetType(0X5E40, "int raise(int sig);");
	add_func    (0X5E4C,0X5E58);
	set_func_flags(0X5E4C,0x4c0);
	SetType(0X5E4C, "BOOLEAN j_MFI_Ctrl_Get();");
	add_func    (0X5E58,0X5E64);
	set_func_flags(0X5E58,0x4c0);
	SetType(0X5E58, "INT32S __cdecl j_At88_Write_Chip_Info_File(INT8U *pData);");
	add_func    (0X5E64,0X5E70);
	set_func_flags(0X5E64,0x4c0);
	SetType(0X5E64, "int __cdecl j_tcp_connect(int *sfd, unsigned __int8 *m_remoteIP, int port);");
	add_func    (0X5E70,0X5E7C);
	set_func_flags(0X5E70,0x4c0);
	SetType(0X5E70, "BOOLEAN __cdecl j_Pro_IsPacketNeedEncrypt(T_DJIProtocolStruct *pProData);");
	add_func    (0X5E7C,0X5E88);
	set_func_flags(0X5E7C,0x4c0);
	SetType(0X5E7C, "int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr);");
	add_func    (0X5E88,0X5E94);
	set_func_flags(0X5E88,0x4c0);
	add_func    (0X5E94,0X5EA0);
	set_func_flags(0X5E94,0x4c0);
	SetType(0X5E94, "int bind(int fd, const struct sockaddr *addr, socklen_t len);");
	add_func    (0X5EA0,0X5EAC);
	set_func_flags(0X5EA0,0x4c0);
	SetType(0X5EA0, "void j_Usbupdate_InitLog();");
	add_func    (0X5EAC,0X5EB8);
	set_func_flags(0X5EAC,0x4c0);
	SetType(0X5EAC, "char *strstr(const char *haystack, const char *needle);");
	add_func    (0X5EB8,0X5EC4);
	set_func_flags(0X5EB8,0x4c0);
	SetType(0X5EB8, "int select(int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds, struct timeval *timeout);");
	add_func    (0X5EC4,0X5ED0);
	set_func_flags(0X5EC4,0x4c0);
	SetType(0X5EC4, "void j_Usbupdatecheck_PrintResult_Corrupted();");
	add_func    (0X5ED0,0X5EDC);
	set_func_flags(0X5ED0,0x4c0);
	SetType(0X5ED0, "int close(int fd);");
	add_func    (0X5EDC,0X5EE8);
	set_func_flags(0X5EDC,0x4c0);
	SetType(0X5EDC, "size_t fwrite(const void *ptr, size_t size, size_t n, FILE *s);");
	add_func    (0X5EE8,0X5EF4);
	set_func_flags(0X5EE8,0x4c0);
	add_func    (0X5EF4,0X5F00);
	set_func_flags(0X5EF4,0x4c0);
	SetType(0X5EF4, "int closedir(DIR *dirp);");
	add_func    (0X5F00,0X5F0C);
	set_func_flags(0X5F00,0x4c0);
	SetType(0X5F00, "INT32S __cdecl j_CalFileMD5(CHAR *pcFilePath, INT8U *pucMD5);");
	add_func    (0X5F0C,0X5F18);
	set_func_flags(0X5F0C,0x4c0);
	add_func    (0X5F18,0X5F24);
	set_func_flags(0X5F18,0x4c0);
	SetType(0X5F18, "INT32S __cdecl j_Iap2_Ctrl_Session_FastCmd(T_Iap2PacketStruct *ptRecvPkt, T_Iap2LinkStruct *ptLink);");
	add_func    (0X5F24,0X5F30);
	set_func_flags(0X5F24,0x4c0);
	SetType(0X5F24, "INT32S __cdecl j_Iap2_Link_Session_GetSendPkt(T_Iap2PacketStruct **ptPkt);");
	add_func    (0X5F30,0X5F3C);
	set_func_flags(0X5F30,0x4c0);
	SetType(0X5F30, "void __cdecl j_sha256_update(sha256_ctx *ctx, const uint8 *message, uint32 len);");
	add_func    (0X5F3C,0X5F48);
	set_func_flags(0X5F3C,0x4c0);
	SetType(0X5F3C, "time_t time(time_t *timer);");
	add_func    (0X5F48,0X5F54);
	set_func_flags(0X5F48,0x4c0);
	add_func    (0X5F54,0X5F60);
	set_func_flags(0X5F54,0x4c0);
	SetType(0X5F54, "int j_UsbInit();");
	add_func    (0X5F60,0X5F6C);
	set_func_flags(0X5F60,0x4c0);
	SetType(0X5F60, "int __cdecl j_IsAndroidPlugIn(int *state);");
	add_func    (0X5F6C,0X5F78);
	set_func_flags(0X5F6C,0x4c0);
	SetType(0X5F6C, "void *malloc(size_t size);");
	add_func    (0X5F78,0X5F84);
	set_func_flags(0X5F78,0x4c0);
	SetType(0X5F78, "INT8U *__cdecl j_Iap2_Pkt_GetEAProDataPtr(T_Iap2PacketStruct *ptPkt);");
	add_func    (0X5F84,0X5F90);
	set_func_flags(0X5F84,0x4c0);
	SetType(0X5F84, "int cfsetospeed(struct termios *termios_p, speed_t speed);");
	add_func    (0X5F90,0X5F9C);
	set_func_flags(0X5F90,0x4c0);
	SetType(0X5F90, "INT32S __cdecl j_Update_Parse_App_Version(INT32U *pulVersion);");
	add_func    (0X5F9C,0X5FA8);
	set_func_flags(0X5F9C,0x4c0);
	SetType(0X5F9C, "int __cdecl j_tcp_send(int sfd, unsigned __int8 *data, int iSize);");
	add_func    (0X5FA8,0X5FB4);
	set_func_flags(0X5FA8,0x4c0);
	SetType(0X5FA8, "void j_Usbupdatecheck_PrintResult_Downgrade_Abort();");
	add_func    (0X5FB4,0X5FC0);
	set_func_flags(0X5FB4,0x4c0);
	SetType(0X5FB4, "int pthread_attr_init(pthread_attr_t *attr);");
	add_func    (0X5FC0,0X5FCC);
	set_func_flags(0X5FC0,0x4c0);
	SetType(0X5FC0, "BOOLEAN __cdecl j_IsTimeOut(timeval *ptTime, INT32U ulTimeOutms);");
	add_func    (0X5FCC,0X5FD8);
	set_func_flags(0X5FCC,0x4c0);
	SetType(0X5FCC, "void __cdecl j_Set_Mutex_Attr_Recu(pthread_mutex_t *pMutex);");
	add_func    (0X5FD8,0X5FE4);
	set_func_flags(0X5FD8,0x4c0);
	SetType(0X5FD8, "void __cdecl j_Usbupdate_PrintResultFile(CHAR *pcStr);");
	add_func    (0X5FE4,0X5FF0);
	set_func_flags(0X5FE4,0x4c0);
	add_func    (0X5FF0,0X5FFC);
	set_func_flags(0X5FF0,0x4c0);
	SetType(0X5FF0, "void __cdecl j_sha256(const uint8 *message, uint32 len, uint8 *digest);");
	add_func    (0X5FFC,0X6008);
	set_func_flags(0X5FFC,0x4c0);
	SetType(0X5FFC, "INT32S __cdecl j_At88_Write_Key(INT8U *pData);");
	add_func    (0X6008,0X6014);
	set_func_flags(0X6008,0x4c0);
	SetType(0X6008, "INT32S __cdecl j_Iap2_Link_EASession_Recv(INT32U ulID, T_Iap2PacketStruct **ptPkt);");
	add_func    (0X6014,0X6020);
	set_func_flags(0X6014,0x4c0);
	SetType(0X6014, "INT32S __cdecl j_AesDecryptFromFile(INT8U *pOut, INT32U ulLen, CHAR *pcFile);");
	add_func    (0X6020,0X602C);
	set_func_flags(0X6020,0x4c0);
	SetType(0X6020, "int ftruncate(int fd, __off_t length);");
	add_func    (0X602C,0X6038);
	set_func_flags(0X602C,0x4c0);
	SetType(0X602C, "INT32S __cdecl j_CalMD5(INT8U *pucData, INT32U ulLen, INT8U *pucMD5);");
	add_func    (0X6038,0X6044);
	set_func_flags(0X6038,0x4c0);
	SetType(0X6038, "INT32S __cdecl j_AesDecrypt(INT8U *pOut, INT32U ulLen, INT8U *pIn, INT8U *pKey);");
	add_func    (0X6044,0X6050);
	set_func_flags(0X6044,0x4c0);
	SetType(0X6044, "unsigned int sleep(unsigned int seconds);");
	add_func    (0X6050,0X605C);
	set_func_flags(0X6050,0x4c0);
	SetType(0X6050, "void j_Usbupdatecheck_PrintResult_Abort();");
	add_func    (0X605C,0X6068);
	set_func_flags(0X605C,0x4c0);
	SetType(0X605C, "INT32S __cdecl j_Pro_Cmd_Load_Start(T_DJIProtocolDataStruct *pPro, INT8U ucDevID, INT32U ulTimeOut, INT32U ulLength, INT8U *pucAck, INT16U *pusPktLen);");
	add_func    (0X6068,0X6074);
	set_func_flags(0X6068,0x4c0);
	SetType(0X6068, "INT32S __cdecl j_Usbupdatecheck_CreateAndCheck_Single_Fw(CHAR *pcFwFile, T_FirmwareDescStruct *pFirmwareDesc, CHAR *pcCreateFile);");
	add_func    (0X6074,0X6080);
	set_func_flags(0X6074,0x4c0);
	SetType(0X6074, "ssize_t send(int fd, const void *buf, size_t n, int flags);");
	add_func    (0X6080,0X608C);
	set_func_flags(0X6080,0x4c0);
	SetType(0X6080, "char *strcat(char *dest, const char *src);");
	add_func    (0X608C,0X6098);
	set_func_flags(0X608C,0x4c0);
	SetType(0X608C, "void j_init_libusb();");
	add_func    (0X6098,0X60A4);
	set_func_flags(0X6098,0x4c0);
	add_func    (0X60A4,0X60B0);
	set_func_flags(0X60A4,0x4c0);
	SetType(0X60A4, "INT32S __cdecl j_Queue_Delete(T_QueueHandleStruct *pQueueHandle);");
	add_func    (0X60B0,0X60BC);
	set_func_flags(0X60B0,0x4c0);
	SetType(0X60B0, "FILE *popen(const char *command, const char *modes);");
	add_func    (0X60BC,0X60C8);
	set_func_flags(0X60BC,0x4c0);
	add_func    (0X60C8,0X60D4);
	set_func_flags(0X60C8,0x4c0);
	SetType(0X60C8, "int puts(const char *s);");
	add_func    (0X60D4,0X60E0);
	set_func_flags(0X60D4,0x4c0);
	SetType(0X60D4, "int tcsetattr(int fd, int optional_actions, const struct termios *termios_p);");
	add_func    (0X60E0,0X60EC);
	set_func_flags(0X60E0,0x4c0);
	SetType(0X60E0, "__pid_t getpid(void);");
	add_func    (0X60EC,0X60F8);
	set_func_flags(0X60EC,0x4c0);
	SetType(0X60EC, "BOOLEAN __cdecl j_Iap2_Timer_IsValid(T_Iap2TimerStruct *pTimer);");
	add_func    (0X60F8,0X6104);
	set_func_flags(0X60F8,0x4c0);
	SetType(0X60F8, "INT32S j_At88_Lock_Config();");
	add_func    (0X6104,0X6110);
	set_func_flags(0X6104,0x4c0);
	add_func    (0X6110,0X611C);
	set_func_flags(0X6110,0x4c0);
	SetType(0X6110, "void __cdecl j_sha256_init(sha256_ctx *ctx);");
	add_func    (0X611C,0X6128);
	set_func_flags(0X611C,0x4c0);
	SetType(0X611C, "int fcntl(int fd, int cmd, ...);");
	add_func    (0X6128,0X6134);
	set_func_flags(0X6128,0x4c0);
	SetType(0X6128, "BOOLEAN __cdecl j_tcp_is_conn(int sfd);");
	add_func    (0X6134,0X6140);
	set_func_flags(0X6134,0x4c0);
	SetType(0X6134, "INT32S __cdecl j_WriteFile(CHAR *pcFileName, VOID *pData, INT32U ulLen);");
	add_func    (0X6140,0X614C);
	set_func_flags(0X6140,0x4c0);
	SetType(0X6140, "void bzero(void *s, size_t n);");
	add_func    (0X614C,0X6158);
	set_func_flags(0X614C,0x4c0);
	SetType(0X614C, "void __cdecl j_Iap2_Timer_Del(T_Iap2TimerStruct *pTimer);");
	add_func    (0X6158,0X6164);
	set_func_flags(0X6158,0x4c0);
	SetType(0X6158, "BOOLEAN __cdecl j_Iap2_Timer_IsTimeout(T_Iap2TimerStruct *pTimer, INT32U ulTimeout);");
	add_func    (0X6164,0X6170);
	set_func_flags(0X6164,0x4c0);
	SetType(0X6164, "INT8U *__cdecl j_Iap2_Pkt_GetDataPtr(T_Iap2PacketStruct *ptPkt);");
	add_func    (0X6170,0X617C);
	set_func_flags(0X6170,0x4c0);
	SetType(0X6170, "INT32S __cdecl j_At88_Write_Factory_Info(T_FactoryInfoStruct *pData);");
	add_func    (0X617C,0X6188);
	set_func_flags(0X617C,0x4c0);
	SetType(0X617C, "uint32_t htonl(uint32_t hostlong);");
	add_func    (0X6188,0X6194);
	set_func_flags(0X6188,0x4c0);
	SetType(0X6188, "INT32S __cdecl j_Update_Parse_68013_Version(INT32U *pulLoaderVersion, INT32U *pulAppVersion);");
	add_func    (0X6194,0X61A0);
	set_func_flags(0X6194,0x4c0);
	SetType(0X6194, "int pthread_attr_destroy(pthread_attr_t *attr);");
	add_func    (0X61A0,0X61AC);
	set_func_flags(0X61A0,0x4c0);
	SetType(0X61A0, "INT32S j_At88_Check_All();");
	add_func    (0X61AC,0X61B8);
	set_func_flags(0X61AC,0x4c0);
	SetType(0X61AC, "INT32S __cdecl j_Get68013HardwareVersion(CHAR *pVersion);");
	add_func    (0X61B8,0X61C4);
	set_func_flags(0X61B8,0x4c0);
	SetType(0X61B8, "__off_t lseek(int fd, __off_t offset, int whence);");
	add_func    (0X61C4,0X61D0);
	set_func_flags(0X61C4,0x4c0);
	SetType(0X61C4, "int rand(void);");
	add_func    (0X61D0,0X61DC);
	set_func_flags(0X61D0,0x4c0);
	SetType(0X61D0, "INT32S j_At88_Set_Config();");
	add_func    (0X61DC,0X61E8);
	set_func_flags(0X61DC,0x4c0);
	SetType(0X61DC, "void __cdecl j_Iap2_Link_Session_ReleaseSendPkt(T_Iap2PacketStruct *ptPkt);");
	add_func    (0X61E8,0X61F4);
	set_func_flags(0X61E8,0x4c0);
	SetType(0X61E8, "INT32S __cdecl j_Pro_Cmd_Load_Data(T_DJIProtocolDataStruct *pPro, INT8U ucDevID, INT32U ulTimeOut, INT8U ucEncryptType, INT32U ulSendSn, INT16U ulSendDataLen, INT8U *pSendData, INT32U *pulRecvSn, INT8U *pErrVal);");
	add_func    (0X61F4,0X6200);
	set_func_flags(0X61F4,0x4c0);
	SetType(0X61F4, "size_t fread(void *ptr, size_t size, size_t n, FILE *stream);");
	add_func    (0X6200,0X620C);
	set_func_flags(0X6200,0x4c0);
	add_func    (0X620C,0X6218);
	set_func_flags(0X620C,0x4c0);
	SetType(0X620C, "int pthread_cond_init(pthread_cond_t *cond, const pthread_condattr_t *cond_attr);");
	add_func    (0X6218,0X6224);
	set_func_flags(0X6218,0x4c0);
	SetType(0X6218, "INT32S __cdecl j_Pro_PackAndSend(T_DJIProtocolDataStruct *pPro);");
	add_func    (0X6224,0X6230);
	set_func_flags(0X6224,0x4c0);
	SetType(0X6224, "ssize_t msgrcv(int msqid, void *msgp, size_t msgsz, int msgtyp, int msgflg);");
	add_func    (0X6230,0X623C);
	set_func_flags(0X6230,0x4c0);
	SetType(0X6230, "INT32S j_At88_Init();");
	add_func    (0X623C,0X6248);
	set_func_flags(0X623C,0x4c0);
	SetType(0X623C, "INT32S __cdecl j_Pro_Cmd_Enter_Loader(T_DJIProtocolDataStruct *pPro, INT8U ucDevID, INT32U ulTimeOut);");
	add_func    (0X6248,0X6254);
	set_func_flags(0X6248,0x4c0);
	SetType(0X6248, "ssize_t recvfrom(int fd, void *buf, size_t n, int flags, struct sockaddr *addr, socklen_t *addr_len);");
	add_func    (0X6254,0X6260);
	set_func_flags(0X6254,0x4c0);
	SetType(0X6254, "VOID *__cdecl j_Iap2_Queue_Get(T_Iap2QueueStruct *pQueue);");
	add_func    (0X6260,0X626C);
	set_func_flags(0X6260,0x4c0);
	SetType(0X6260, "INT32S __cdecl j_At88_Write_Factory_Info_File(T_FactoryInfoStruct *pData);");
	add_func    (0X626C,0X6278);
	set_func_flags(0X626C,0x4c0);
	SetType(0X626C, "INT32S __cdecl j_AesEncryptToFile(INT8U *pIn, INT32U ulLen, CHAR *pcFile);");
	add_func    (0X6278,0X6284);
	set_func_flags(0X6278,0x4c0);
	SetType(0X6278, "INT32S __cdecl j_DJI_ProStruct_Init(INT8U *pcBuff, T_DJIProtocolStruct *pPro);");
	add_func    (0X6284,0X6290);
	set_func_flags(0X6284,0x4c0);
	SetType(0X6284, "int setsockopt(int fd, int level, int optname, const void *optval, socklen_t optlen);");
	add_func    (0X6290,0X629C);
	set_func_flags(0X6290,0x4c0);
	SetType(0X6290, "int pthread_mutexattr_init(pthread_mutexattr_t *attr);");
	add_func    (0X629C,0X62A8);
	set_func_flags(0X629C,0x4c0);
	SetType(0X629C, "struct dirent *readdir(DIR *dirp);");
	add_func    (0X62A8,0X62B4);
	set_func_flags(0X62A8,0x4c0);
	SetType(0X62A8, "INT32S j_Watchdog_Feed();");
	add_func    (0X62B4,0X62C0);
	set_func_flags(0X62B4,0x4c0);
	SetType(0X62B4, "int __cdecl j_syncSendBuffer(uint8_t *buffer, int bufferSize, unsigned int timeout);");
	add_func    (0X62C0,0X62CC);
	set_func_flags(0X62C0,0x4c0);
	SetType(0X62C0, "INT32S __cdecl j_At88_Write_Kernel_Encrypt(INT8U *pData);");
	add_func    (0X62CC,0X62D8);
	set_func_flags(0X62CC,0x4c0);
	SetType(0X62CC, "int strcmp(const char *s1, const char *s2);");
	add_func    (0X62D8,0X62E4);
	set_func_flags(0X62D8,0x4c0);
	SetType(0X62D8, "INT32S __cdecl j_Pro_Cmd_Get_State(T_DJIProtocolDataStruct *pPro, INT8U ucDevID, INT32U ulTimeOut, BOOLEAN *pbIsLoader);");
	add_func    (0X62E4,0X62F0);
	set_func_flags(0X62E4,0x4c1);
	SetType(0X62E4, "void exit(int status);");
	add_func    (0X62F0,0X62FC);
	set_func_flags(0X62F0,0x4c0);
	SetType(0X62F0, "int cfsetispeed(struct termios *termios_p, speed_t speed);");
	add_func    (0X62FC,0X6308);
	set_func_flags(0X62FC,0x4c0);
	SetType(0X62FC, "void j_Reset_68013();");
	add_func    (0X6308,0X6314);
	set_func_flags(0X6308,0x4c0);
	SetType(0X6308, "INT32S __cdecl j_At88_Mac_Check(INT8U ucKey, INT8U *pData, INT32U ulLen);");
	add_func    (0X6314,0X6320);
	set_func_flags(0X6314,0x4c0);
	SetType(0X6314, "int *_errno_location(void);");
	add_func    (0X6320,0X632C);
	set_func_flags(0X6320,0x4c0);
	SetType(0X6320, "INT16U __cdecl j_Pro_Get_CurSeq(T_DJIProtocolDataStruct *pPro);");
	add_func    (0X632C,0X6338);
	set_func_flags(0X632C,0x4c0);
	SetType(0X632C, "INT32S __cdecl j_Queue_PutData(T_QueueHandleStruct *pQueueHandle, VOID *pData, INT32U ulDataLen);");
	add_func    (0X6338,0X6344);
	set_func_flags(0X6338,0x4c0);
	SetType(0X6338, "INT32S __cdecl j_At88_Read_Chip_Info(INT8U *pData);");
	add_func    (0X6344,0X6350);
	set_func_flags(0X6344,0x4c0);
	add_func    (0X6350,0X635C);
	set_func_flags(0X6350,0x4c0);
	SetType(0X6350, "int sprintf(char *s, const char *format, ...);");
	add_func    (0X635C,0X6368);
	set_func_flags(0X635C,0x4c0);
	SetType(0X635C, "int pthread_join(pthread_t th, void **thread_return);");
	add_func    (0X6368,0X6374);
	set_func_flags(0X6368,0x4c0);
	SetType(0X6368, "int __cdecl j_aoa_subscribe(adb_event_cb_t *event_cb, void *pUser);");
	add_func    (0X6374,0X6380);
	set_func_flags(0X6374,0x4c0);
	SetType(0X6374, "INT32S j_At88_Check_Auth();");
	add_func    (0X6380,0X638C);
	set_func_flags(0X6380,0x4c0);
	SetType(0X6380, "INT32S __cdecl j_Pro_Cmd_Update_Ctrl(T_DJIProtocolDataStruct *pPro, INT32U ulTimeOut, E_UpdateCtrlTypeEnum eType);");
	add_func    (0X638C,0X63A8);
	set_func_flags(0X638C,0x400);
	add_func    (0X63B0,0X63F4);
	set_func_flags(0X63B0,0x400);
	set_frame_size(0X63B0, 0X10, 0, 0);
	add_func    (0X6404,0X643C);
	set_func_flags(0X6404,0x400);
	set_frame_size(0X6404, 0X8, 0, 0);
	add_func    (0X6448,0X64DC);
	set_func_flags(0X6448,0x410);
	SetType(0X6448, "unsigned __int8 __cdecl CalCrc8(unsigned __int8 crc, unsigned __int8 *pchMessage, unsigned int dwLength);");
	set_frame_size(0X6448, 0X1C, 4, 0);
	define_local_var(0X6448, 0X64DC, "[bp-0X18]", "dwLength");
	define_local_var(0X6448, 0X64DC, "[bp-0X14]", "pchMessage");
	define_local_var(0X6448, 0X64DC, "[bp-0XD]", "crc");
	define_local_var(0X6448, 0X64DC, "[bp-0X5]", "Byte");
	add_func    (0X64E0,0X65A8);
	set_func_flags(0X64E0,0x410);
	SetType(0X64E0, "unsigned __int16 __cdecl CalCrc16(unsigned __int16 crc, unsigned __int8 *pchMessage, unsigned int dwLength);");
	set_frame_size(0X64E0, 0X1C, 4, 0);
	define_local_var(0X64E0, 0X65A8, "[bp-0X18]", "dwLength");
	define_local_var(0X64E0, 0X65A8, "[bp-0X14]", "pchMessage");
	define_local_var(0X64E0, 0X65A8, "[bp-0XE]", "crc");
	define_local_var(0X64E0, 0X65A8, "[bp-0X5]", "chData");
	add_func    (0X65B0,0X6660);
	set_func_flags(0X65B0,0x410);
	SetType(0X65B0, "T_DataBuffHandleStruct *__cdecl DataBuff_Create(INT32U slLen);");
	set_frame_size(0X65B0, 0X14, 4, 0);
	define_local_var(0X65B0, 0X6660, "[bp-0X10]", "slLen");
	define_local_var(0X65B0, 0X6660, "[bp-0X8]", "p");
	set_name(0X6640, "exit1", SN_LOCAL);
	add_func    (0X6660,0X66C0);
	set_func_flags(0X6660,0x410);
	SetType(0X6660, "INT32S __cdecl DataBuff_Clear(T_DataBuffHandleStruct *pDataBuffHandle);");
	set_frame_size(0X6660, 0XC, 4, 0);
	define_local_var(0X6660, 0X66C0, "[bp-0X8]", "pDataBuffHandle");
	add_func    (0X66C0,0X6728);
	set_func_flags(0X66C0,0x410);
	SetType(0X66C0, "INT32S __cdecl DataBuff_Delete(T_DataBuffHandleStruct *pDataBuffHandle);");
	set_frame_size(0X66C0, 0XC, 4, 0);
	define_local_var(0X66C0, 0X6728, "[bp-0X8]", "pDataBuffHandle");
	add_func    (0X6728,0X6998);
	set_func_flags(0X6728,0x410);
	SetType(0X6728, "INT32S __cdecl Code_Hex(T_CodecStruct *pCodec);");
	set_frame_size(0X6728, 0X1C, 4, 0);
	define_local_var(0X6728, 0X6998, "[bp-0X18]", "pCodec");
	define_local_var(0X6728, 0X6998, "[bp-0X10]", "i");
	define_local_var(0X6728, 0X6998, "[bp-0XC]", "p");
	define_local_var(0X6728, 0X6998, "[bp-0X8]", "pMax");
	add_func    (0X6998,0X6B98);
	set_func_flags(0X6998,0x410);
	SetType(0X6998, "INT32S __cdecl Decode_Hex(T_CodecStruct *pCodec);");
	set_frame_size(0X6998, 0X1C, 4, 0);
	define_local_var(0X6998, 0X6B98, "[bp-0X18]", "pCodec");
	define_local_var(0X6998, 0X6B98, "[bp-0X14]", "i");
	define_local_var(0X6998, 0X6B98, "[bp-0X10]", "ulTemp");
	define_local_var(0X6998, 0X6B98, "[bp-0XC]", "p");
	define_local_var(0X6998, 0X6B98, "[bp-0X8]", "pMax");
	add_func    (0X6B98,0X6FD4);
	set_func_flags(0X6B98,0x410);
	SetType(0X6B98, "INT32S __cdecl DJI_Frame_Cap(T_DJIFrameCapStruct *pFrameCapture);");
	set_frame_size(0X6B98, 0X34, 4, 0);
	define_local_var(0X6B98, 0X6FD4, "[bp-0X30]", "pFrameCapture");
	define_local_var(0X6B98, 0X6FD4, "[bp-0X26]", "usCrc16");
	define_local_var(0X6B98, 0X6FD4, "[bp-0X24]", "i");
	define_local_var(0X6B98, 0X6FD4, "[bp-0X20]", "slTemp");
	define_local_var(0X6B98, 0X6FD4, "[bp-0X1C]", "slCopyLen");
	define_local_var(0X6B98, 0X6FD4, "[bp-0X15]", "bNeedCopy");
	define_local_var(0X6B98, 0X6FD4, "[bp-0X14]", "slRtn");
	define_local_var(0X6B98, 0X6FD4, "[bp-0X10]", "p");
	define_local_var(0X6B98, 0X6FD4, "[bp-0XC]", "pMax");
	define_local_var(0X6B98, 0X6FD4, "[bp-0X7]", "ucCrc8");
	define_local_var(0X6B98, 0X6FD4, "[bp-0X6]", "usCrc16Cal");
	add_func    (0X6FD8,0X7210);
	set_func_flags(0X6FD8,0x410);
	SetType(0X6FD8, "INT32S __cdecl Frame_Capture(T_FrameCaptureStruct *pFrameCapture);");
	set_frame_size(0X6FD8, 0X1C, 4, 0);
	define_local_var(0X6FD8, 0X7210, "[bp-0X18]", "pFrameCapture");
	define_local_var(0X6FD8, 0X7210, "[bp-0X10]", "i");
	define_local_var(0X6FD8, 0X7210, "[bp-0XC]", "p");
	define_local_var(0X6FD8, 0X7210, "[bp-0X8]", "pMax");
	add_func    (0X7210,0X7718);
	set_func_flags(0X7210,0x410);
	SetType(0X7210, "INT32S __cdecl Frame_CapByHeadAndLen(T_FrameCapByHeadAndLenStruct *pFrameCapture);");
	set_frame_size(0X7210, 0X2C, 4, 0);
	define_local_var(0X7210, 0X7718, "[bp-0X28]", "pFrameCapture");
	define_local_var(0X7210, 0X7718, "[bp-0X20]", "i");
	define_local_var(0X7210, 0X7718, "[bp-0X1C]", "slTemp");
	define_local_var(0X7210, 0X7718, "[bp-0X18]", "slCopyLen");
	define_local_var(0X7210, 0X7718, "[bp-0X11]", "bNeedCopy");
	define_local_var(0X7210, 0X7718, "[bp-0X10]", "slRtn");
	define_local_var(0X7210, 0X7718, "[bp-0XC]", "p");
	define_local_var(0X7210, 0X7718, "[bp-0X8]", "pMax");
	add_func    (0X7728,0X776C);
	set_func_flags(0X7728,0x410);
	SetType(0X7728, "void __cdecl GetFP32(VOID *pOut, VOID *pIn);");
	set_frame_size(0X7728, 0XC, 4, 0);
	define_local_var(0X7728, 0X776C, "[bp-0XC]", "pIn");
	define_local_var(0X7728, 0X776C, "[bp-0X8]", "pOut");
	add_func    (0X776C,0X77B0);
	set_func_flags(0X776C,0x410);
	SetType(0X776C, "void __cdecl GetINT16LittleEnd(VOID *pOut, VOID *pIn);");
	set_frame_size(0X776C, 0XC, 4, 0);
	define_local_var(0X776C, 0X77B0, "[bp-0XC]", "pIn");
	define_local_var(0X776C, 0X77B0, "[bp-0X8]", "pOut");
	add_func    (0X77B0,0X77F0);
	set_func_flags(0X77B0,0x410);
	SetType(0X77B0, "void __cdecl PutINT16LittleEnd(VOID *pOut, INT16U usData);");
	set_frame_size(0X77B0, 0XC, 4, 0);
	define_local_var(0X77B0, 0X77F0, "[bp-0XA]", "usData");
	define_local_var(0X77B0, 0X77F0, "[bp-0X8]", "pOut");
	add_func    (0X77F0,0X7834);
	set_func_flags(0X77F0,0x410);
	SetType(0X77F0, "void __cdecl GetINT32LittleEnd(VOID *pOut, VOID *pIn);");
	set_frame_size(0X77F0, 0XC, 4, 0);
	define_local_var(0X77F0, 0X7834, "[bp-0XC]", "pIn");
	define_local_var(0X77F0, 0X7834, "[bp-0X8]", "pOut");
	add_func    (0X7834,0X7870);
	set_func_flags(0X7834,0x410);
	SetType(0X7834, "void __cdecl PutINT32LittleEnd(VOID *pOut, INT32U ulData);");
	set_frame_size(0X7834, 0XC, 4, 0);
	define_local_var(0X7834, 0X7870, "[bp-0XC]", "ulData");
	define_local_var(0X7834, 0X7870, "[bp-0X8]", "pOut");
	add_func    (0X7870,0X78B8);
	set_func_flags(0X7870,0x410);
	SetType(0X7870, "INT8U __cdecl ExchgINT8UHLBit(INT8U ucData);");
	set_frame_size(0X7870, 0X14, 4, 0);
	define_local_var(0X7870, 0X78B8, "[bp-0XD]", "ucData");
	define_local_var(0X7870, 0X78B8, "[bp-0X5]", "ucTemp");
	add_func    (0X78B8,0X7920);
	set_func_flags(0X78B8,0x410);
	SetType(0X78B8, "void __cdecl PrintHex(INT8U *pucBuff, INT32U ulLength);");
	set_frame_size(0X78B8, 0X14, 4, 0);
	define_local_var(0X78B8, 0X7920, "[bp-0X14]", "ulLength");
	define_local_var(0X78B8, 0X7920, "[bp-0X10]", "pucBuff");
	define_local_var(0X78B8, 0X7920, "[bp-0X8]", "i");
	add_func    (0X7924,0X7970);
	set_func_flags(0X7924,0x410);
	SetType(0X7924, "INT32S __cdecl GetCurrentTime(timeval *ptTime);");
	set_frame_size(0X7924, 0XC, 4, 0);
	define_local_var(0X7924, 0X7970, "[bp-0X8]", "ptTime");
	add_func    (0X7970,0X7A44);
	set_func_flags(0X7970,0x410);
	SetType(0X7970, "BOOLEAN __cdecl IsTimeOut(timeval *ptTime, INT32U ulTimeOutms);");
	set_frame_size(0X7970, 0X24, 4, 0);
	define_local_var(0X7970, 0X7A44, "[bp-0X1C]", "ulTimeOutms");
	define_local_var(0X7970, 0X7A44, "[bp-0X18]", "ptTime");
	define_local_var(0X7970, 0X7A44, "[bp-0X10]", "tNow");
	define_local_var(0X7970, 0X7A44, "[bp-0X8]", "slBias");
	add_func    (0X7A48,0X7AA0);
	set_func_flags(0X7A48,0x410);
	SetType(0X7A48, "INT32S InitProcMsg();");
	set_frame_size(0X7A48, 0XC, 4, 0);
	add_func    (0X7AAC,0X7B30);
	set_func_flags(0X7AAC,0x410);
	SetType(0X7AAC, "INT32S __cdecl ProcMsgSend(T_ProcMsgStruct *ptMsg);");
	set_frame_size(0X7AAC, 0XC, 4, 0);
	define_local_var(0X7AAC, 0X7B30, "[bp-0X8]", "ptMsg");
	add_func    (0X7B34,0X7BC8);
	set_func_flags(0X7B34,0x410);
	SetType(0X7B34, "INT32S __cdecl ProcMsgRecv(T_ProcMsgStruct *ptMsg);");
	set_frame_size(0X7B34, 0X14, 4, 0);
	define_local_var(0X7B34, 0X7BC8, "[bp-0X14]", "msgflg");
	define_local_var(0X7B34, 0X7BC8, "[bp-0X8]", "ptMsg");
	add_func    (0X7BCC,0X7C34);
	set_func_flags(0X7BCC,0x410);
	SetType(0X7BCC, "INT32S __cdecl GetFileSize(CHAR *pFile);");
	set_frame_size(0X7BCC, 0X64, 4, 0);
	define_local_var(0X7BCC, 0X7C34, "[bp-0X60]", "pFile");
	define_local_var(0X7BCC, 0X7C34, "[bp-0X5C]", "statbuff");
	add_func    (0X7C34,0X7C7C);
	set_func_flags(0X7C34,0x410);
	SetType(0X7C34, "BOOLEAN __cdecl IfFileExist(CHAR *pFile);");
	set_frame_size(0X7C34, 0XC, 4, 0);
	define_local_var(0X7C34, 0X7C7C, "[bp-0X8]", "pFile");
	add_func    (0X7C7C,0X7D30);
	set_func_flags(0X7C7C,0x410);
	SetType(0X7C7C, "CHAR *__cdecl GetBaseName(CHAR *pFile);");
	set_frame_size(0X7C7C, 0X14, 4, 0);
	define_local_var(0X7C7C, 0X7D30, "[bp-0X10]", "pFile");
	define_local_var(0X7C7C, 0X7D30, "[bp-0XC]", "i");
	define_local_var(0X7C7C, 0X7D30, "[bp-0X8]", "slLen");
	add_func    (0X7D30,0X7DE8);
	set_func_flags(0X7D30,0x410);
	SetType(0X7D30, "INT32S __cdecl ReadFile(CHAR *pcFileName, VOID *pData, INT32U ulLen);");
	set_frame_size(0X7D30, 0X1C, 4, 0);
	define_local_var(0X7D30, 0X7DE8, "[bp-0X18]", "ulLen");
	define_local_var(0X7D30, 0X7DE8, "[bp-0X14]", "pData");
	define_local_var(0X7D30, 0X7DE8, "[bp-0X10]", "pcFileName");
	define_local_var(0X7D30, 0X7DE8, "[bp-0XC]", "pFile");
	define_local_var(0X7D30, 0X7DE8, "[bp-0X8]", "slRtn");
	add_func    (0X7DEC,0X7EA4);
	set_func_flags(0X7DEC,0x410);
	SetType(0X7DEC, "INT32S __cdecl WriteFile_No_Sync(CHAR *pcFileName, VOID *pData, INT32U ulLen);");
	set_frame_size(0X7DEC, 0X1C, 4, 0);
	define_local_var(0X7DEC, 0X7EA4, "[bp-0X18]", "ulLen");
	define_local_var(0X7DEC, 0X7EA4, "[bp-0X14]", "pData");
	define_local_var(0X7DEC, 0X7EA4, "[bp-0X10]", "pcFileName");
	define_local_var(0X7DEC, 0X7EA4, "[bp-0XC]", "pFile");
	define_local_var(0X7DEC, 0X7EA4, "[bp-0X8]", "slRtn");
	add_func    (0X7EA8,0X7F68);
	set_func_flags(0X7EA8,0x410);
	SetType(0X7EA8, "INT32S __cdecl WriteFile(CHAR *pcFileName, VOID *pData, INT32U ulLen);");
	set_frame_size(0X7EA8, 0X1C, 4, 0);
	define_local_var(0X7EA8, 0X7F68, "[bp-0X18]", "ulLen");
	define_local_var(0X7EA8, 0X7F68, "[bp-0X14]", "pData");
	define_local_var(0X7EA8, 0X7F68, "[bp-0X10]", "pcFileName");
	define_local_var(0X7EA8, 0X7F68, "[bp-0XC]", "pFile");
	define_local_var(0X7EA8, 0X7F68, "[bp-0X8]", "slRtn");
	add_func    (0X7F70,0X80E4);
	set_func_flags(0X7F70,0x410);
	SetType(0X7F70, "T_P2PSocketHandleStruct *__cdecl P2PSocket_Create(INT16U usPort);");
	set_frame_size(0X7F70, 0X24, 4, 0);
	define_local_var(0X7F70, 0X80E4, "[bp-0X1E]", "usPort");
	define_local_var(0X7F70, 0X80E4, "[bp-0X1C]", "addr");
	define_local_var(0X7F70, 0X80E4, "[bp-0XC]", "p");
	define_local_var(0X7F70, 0X80E4, "[bp-0X8]", "slFlag");
	set_name(0X80B4, "exit2", SN_LOCAL);
	set_name(0X80C4, "exit1", SN_LOCAL);
	add_func    (0X80E4,0X814C);
	set_func_flags(0X80E4,0x410);
	SetType(0X80E4, "INT32S __cdecl P2PSocket_Delete(T_P2PSocketHandleStruct *p);");
	set_frame_size(0X80E4, 0XC, 4, 0);
	define_local_var(0X80E4, 0X814C, "[bp-0X8]", "p");
	add_func    (0X814C,0X8248);
	set_func_flags(0X814C,0x410);
	SetType(0X814C, "INT32S __cdecl P2PSocket_Rec(T_P2PSocketHandleStruct *pHandle, INT8U *pucBuff, INT32U ulLen, INT32U *pulIP, INT16U *pusPort);");
	set_frame_size(0X814C, 0X3C, 4, 0);
	define_local_var(0X814C, 0X8248, "[bp-0X38]", "addr_len");
	define_local_var(0X814C, 0X8248, "[bp-0X2C]", "pulIP");
	define_local_var(0X814C, 0X8248, "[bp-0X28]", "ulLen");
	define_local_var(0X814C, 0X8248, "[bp-0X24]", "pucBuff");
	define_local_var(0X814C, 0X8248, "[bp-0X20]", "pHandle");
	define_local_var(0X814C, 0X8248, "[bp-0X1C]", "slAddrLen");
	define_local_var(0X814C, 0X8248, "[bp-0X18]", "addr");
	define_local_var(0X814C, 0X8248, "[bp-0X8]", "slRtn");
	define_local_var(0X814C, 0X8248, "[bp+0X4]", "pusPort");
	add_func    (0X8248,0X82DC);
	set_func_flags(0X8248,0x410);
	SetType(0X8248, "INT32S __cdecl P2PSocket_Send(T_P2PSocketHandleStruct *pHandle, INT8U *pucBuff, INT32U ulLen, INT32U ulIP, INT16U usPort);");
	set_frame_size(0X8248, 0X2C, 4, 0);
	define_local_var(0X8248, 0X82DC, "[bp-0X28]", "addr_len");
	define_local_var(0X8248, 0X82DC, "[bp-0X24]", "ulIP");
	define_local_var(0X8248, 0X82DC, "[bp-0X20]", "ulLen");
	define_local_var(0X8248, 0X82DC, "[bp-0X1C]", "pucBuff");
	define_local_var(0X8248, 0X82DC, "[bp-0X18]", "pHandle");
	define_local_var(0X8248, 0X82DC, "[bp-0X14]", "addr");
	define_local_var(0X8248, 0X82DC, "[bp+0X4]", "usPort");
	add_func    (0X82DC,0X8324);
	set_func_flags(0X82DC,0x419);
	SetType(0X82DC, "void __cdecl Kernel_Feed(int slSigNo);");
	set_frame_size(0X82DC, 0XC, 4, 0);
	define_local_var(0X82DC, 0X8324, "[bp-0X8]", "slSigNo");
	add_func    (0X8330,0X8438);
	set_func_flags(0X8330,0x410);
	SetType(0X8330, "INT32S __cdecl Watchdog_Init(INT32S slTimeout);");
	set_frame_size(0X8330, 0X14, 4, 0);
	define_local_var(0X8330, 0X8438, "[bp-0X10]", "slTimeout");
	set_name(0X8410, "exit2", SN_LOCAL);
	set_name(0X8420, "exit1", SN_LOCAL);
	add_func    (0X8450,0X84C0);
	set_func_flags(0X8450,0x410);
	SetType(0X8450, "INT32S Watchdog_Feed();");
	set_frame_size(0X8450, 0XC, 4, 0);
	add_func    (0X84C8,0X8520);
	set_func_flags(0X84C8,0x410);
	SetType(0X84C8, "INT32S Watchdog_Delete();");
	set_frame_size(0X84C8, 0X4, 4, 0);
	add_func    (0X8528,0X867C);
	set_func_flags(0X8528,0x410);
	SetType(0X8528, "INT32S __cdecl Update_Parse_App_Version(INT32U *pulVersion);");
	set_frame_size(0X8528, 0X9C, 4, 0);
	define_local_var(0X8528, 0X867C, "[bp-0X90]", "pulVersion");
	define_local_var(0X8528, 0X867C, "[bp-0X88]", "aulData");
	define_local_var(0X8528, 0X867C, "[bp-0X78]", "aucBuff");
	define_local_var(0X8528, 0X867C, "[bp-0X14]", "pFile");
	define_local_var(0X8528, 0X867C, "[bp-0X10]", "p");
	define_local_var(0X8528, 0X867C, "[bp-0XC]", "slRtn");
	define_local_var(0X8528, 0X867C, "[bp-0X8]", "i");
	set_name(0X865C, "exit", SN_LOCAL);
	add_func    (0X8688,0X88DC);
	set_func_flags(0X8688,0x410);
	SetType(0X8688, "INT32S __cdecl Update_Parse_68013_Version(INT32U *pulLoaderVersion, INT32U *pulAppVersion);");
	set_frame_size(0X8688, 0X10C, 4, 0);
	define_local_var(0X8688, 0X88DC, "[bp-0XFC]", "pulAppVersion");
	define_local_var(0X8688, 0X88DC, "[bp-0XF8]", "pulLoaderVersion");
	define_local_var(0X8688, 0X88DC, "[bp-0XF4]", "aulData");
	define_local_var(0X8688, 0X88DC, "[bp-0XE4]", "aucBuff");
	define_local_var(0X8688, 0X88DC, "[bp-0X1C]", "pFile");
	define_local_var(0X8688, 0X88DC, "[bp-0X18]", "p");
	define_local_var(0X8688, 0X88DC, "[bp-0X14]", "p1");
	define_local_var(0X8688, 0X88DC, "[bp-0XD]", "bFind68013");
	define_local_var(0X8688, 0X88DC, "[bp-0XC]", "i");
	define_local_var(0X8688, 0X88DC, "[bp-0X8]", "slRtn");
	add_func    (0X8900,0X89F0);
	set_func_flags(0X8900,0x410);
	SetType(0X8900, "INT32S __cdecl CalFileMD5(CHAR *pcFilePath, INT8U *pucMD5);");
	set_frame_size(0X8900, 0X47C, 4, 0);
	define_local_var(0X8900, 0X89F0, "[bp-0X474]", "pucMD5");
	define_local_var(0X8900, 0X89F0, "[bp-0X470]", "pcFilePath");
	define_local_var(0X8900, 0X89F0, "[bp-0X468]", "c");
	define_local_var(0X8900, 0X89F0, "[bp-0X40C]", "aucBuff");
	define_local_var(0X8900, 0X89F0, "[bp-0XC]", "fd");
	define_local_var(0X8900, 0X89F0, "[bp-0X8]", "ret");
	add_func    (0X89F0,0X8A48);
	set_func_flags(0X89F0,0x410);
	SetType(0X89F0, "INT32S __cdecl CalMD5(INT8U *pucData, INT32U ulLen, INT8U *pucMD5);");
	set_frame_size(0X89F0, 0X74, 4, 0);
	define_local_var(0X89F0, 0X8A48, "[bp-0X70]", "pucMD5");
	define_local_var(0X89F0, 0X8A48, "[bp-0X6C]", "ulLen");
	define_local_var(0X89F0, 0X8A48, "[bp-0X68]", "pucData");
	define_local_var(0X89F0, 0X8A48, "[bp-0X60]", "c");
	add_func    (0X8A48,0X8AB8);
	set_func_flags(0X8A48,0x410);
	SetType(0X8A48, "INT32S __cdecl DJI_ProStruct_Init(INT8U *pcBuff, T_DJIProtocolStruct *pPro);");
	set_frame_size(0X8A48, 0X14, 4, 0);
	define_local_var(0X8A48, 0X8AB8, "[bp-0XC]", "pPro");
	define_local_var(0X8A48, 0X8AB8, "[bp-0X8]", "pcBuff");
	add_func    (0X8AB8,0X8AE8);
	set_func_flags(0X8AB8,0x410);
	SetType(0X8AB8, "INT32S __cdecl SetHardwareVersion(CHAR *pVersion);");
	set_frame_size(0X8AB8, 0XC, 4, 0);
	define_local_var(0X8AB8, 0X8AE8, "[bp-0X8]", "pVersion");
	add_func    (0X8AEC,0X8B34);
	set_func_flags(0X8AEC,0x410);
	SetType(0X8AEC, "INT32S __cdecl GetHardwareVersion(CHAR *pVersion);");
	set_frame_size(0X8AEC, 0X14, 4, 0);
	define_local_var(0X8AEC, 0X8B34, "[bp-0X10]", "pVersion");
	define_local_var(0X8AEC, 0X8B34, "[bp-0X8]", "slRtn");
	add_func    (0X8B38,0X8B68);
	set_func_flags(0X8B38,0x410);
	SetType(0X8B38, "INT32S __cdecl Set68013HardwareVersion(CHAR *pVersion);");
	set_frame_size(0X8B38, 0XC, 4, 0);
	define_local_var(0X8B38, 0X8B68, "[bp-0X8]", "pVersion");
	add_func    (0X8B6C,0X8BB4);
	set_func_flags(0X8B6C,0x410);
	SetType(0X8B6C, "INT32S __cdecl Get68013HardwareVersion(CHAR *pVersion);");
	set_frame_size(0X8B6C, 0X14, 4, 0);
	define_local_var(0X8B6C, 0X8BB4, "[bp-0X10]", "pVersion");
	define_local_var(0X8B6C, 0X8BB4, "[bp-0X8]", "slRtn");
	add_func    (0X8BB8,0X8CB4);
	set_func_flags(0X8BB8,0x410);
	SetType(0X8BB8, "INT32S __cdecl Update_Fill_Version(INT8U *pIn);");
	set_frame_size(0X8BB8, 0X14, 4, 0);
	define_local_var(0X8BB8, 0X8CB4, "[bp-0X10]", "pIn");
	define_local_var(0X8BB8, 0X8CB4, "[bp-0XC]", "ulVersion");
	define_local_var(0X8BB8, 0X8CB4, "[bp-0X8]", "p");
	add_func    (0X8CB8,0X8DC8);
	set_func_flags(0X8CB8,0x410);
	SetType(0X8CB8, "INT32S __cdecl Update_Fill_68013_Version(INT8U *pIn);");
	set_frame_size(0X8CB8, 0X1C, 4, 0);
	define_local_var(0X8CB8, 0X8DC8, "[bp-0X18]", "pIn");
	define_local_var(0X8CB8, 0X8DC8, "[bp-0X10]", "ulAppVersion");
	define_local_var(0X8CB8, 0X8DC8, "[bp-0XC]", "ulLoaderVersion");
	define_local_var(0X8CB8, 0X8DC8, "[bp-0X8]", "p");
	add_func    (0X8DCC,0X8E20);
	set_func_flags(0X8DCC,0x410);
	SetType(0X8DCC, "int __cdecl LockFile(int fd);");
	set_frame_size(0X8DCC, 0X1C, 4, 0);
	define_local_var(0X8DCC, 0X8E20, "[bp-0X18]", "fd");
	define_local_var(0X8DCC, 0X8E20, "[bp-0X14]", "fl");
	add_func    (0X8E20,0X8F0C);
	set_func_flags(0X8E20,0x410);
	SetType(0X8E20, "BOOLEAN __cdecl already_running(const unsigned __int8 *filename);");
	set_frame_size(0X8E20, 0X24, 4, 0);
	define_local_var(0X8E20, 0X8F0C, "[bp-0X20]", "filename");
	define_local_var(0X8E20, 0X8F0C, "[bp-0X18]", "buf");
	define_local_var(0X8E20, 0X8F0C, "[bp-0X8]", "fd");
	add_func    (0X8F10,0X8F74);
	set_func_flags(0X8F10,0x410);
	SetType(0X8F10, "int32_t getTickCount();");
	set_frame_size(0X8F10, 0XC, 4, 0);
	define_local_var(0X8F10, 0X8F74, "[bp-0XC]", "ts");
	add_func    (0X8F78,0X8FF4);
	set_func_flags(0X8F78,0x410);
	SetType(0X8F78, "INT32S ThreadSignal_MaskPipe();");
	set_frame_size(0X8F78, 0X94, 4, 0);
	define_local_var(0X8F78, 0X8FF4, "[bp-0X88]", "signal_mask");
	define_local_var(0X8F78, 0X8FF4, "[bp-0X8]", "rc");
	add_func    (0X8FF8,0X90B0);
	set_func_flags(0X8FF8,0x410);
	SetType(0X8FF8, "INT32S __cdecl GetRandomData(INT8U *pucData, INT32U ulLen);");
	set_frame_size(0X8FF8, 0X1C, 4, 0);
	define_local_var(0X8FF8, 0X90B0, "[bp-0X1C]", "ulLen");
	define_local_var(0X8FF8, 0X90B0, "[bp-0X18]", "pucData");
	define_local_var(0X8FF8, 0X90B0, "[bp-0X14]", "ulRandData");
	define_local_var(0X8FF8, 0X90B0, "[bp-0X10]", "p");
	define_local_var(0X8FF8, 0X90B0, "[bp-0XC]", "ulCopyLen");
	define_local_var(0X8FF8, 0X90B0, "[bp-0X8]", "ulTemp");
	add_func    (0X90B0,0X9234);
	set_func_flags(0X90B0,0x410);
	SetType(0X90B0, "INT32S __cdecl CalMac(INT8U *pucDataOut, INT16U usKeySlot, INT8U *pucKey, INT8U *pucRandom);");
	set_frame_size(0X90B0, 0X74, 4, 0);
	define_local_var(0X90B0, 0X9234, "[bp-0X74]", "pucRandom");
	define_local_var(0X90B0, 0X9234, "[bp-0X70]", "pucKey");
	define_local_var(0X90B0, 0X9234, "[bp-0X6A]", "usKeySlot");
	define_local_var(0X90B0, 0X9234, "[bp-0X68]", "pucDataOut");
	define_local_var(0X90B0, 0X9234, "[bp-0X60]", "aucBuffIn");
	define_local_var(0X90B0, 0X9234, "[bp-0X8]", "p");
	add_func    (0X9234,0X92E8);
	set_func_flags(0X9234,0x410);
	SetType(0X9234, "INT32S __cdecl AesEncrypt(INT8U *pOut, INT8U *pIn, INT32U ulLen, INT8U *pKey);");
	set_frame_size(0X9234, 0X12C, 4, 0);
	define_local_var(0X9234, 0X92E8, "[bp-0X11C]", "pKey");
	define_local_var(0X9234, 0X92E8, "[bp-0X118]", "ulLen");
	define_local_var(0X9234, 0X92E8, "[bp-0X114]", "pIn");
	define_local_var(0X9234, 0X92E8, "[bp-0X110]", "pOut");
	define_local_var(0X9234, 0X92E8, "[bp-0X108]", "avi");
	define_local_var(0X9234, 0X92E8, "[bp-0XF8]", "s_AseKey");
	add_func    (0X92E8,0X939C);
	set_func_flags(0X92E8,0x410);
	SetType(0X92E8, "INT32S __cdecl AesDecrypt(INT8U *pOut, INT32U ulLen, INT8U *pIn, INT8U *pKey);");
	set_frame_size(0X92E8, 0X12C, 4, 0);
	define_local_var(0X92E8, 0X939C, "[bp-0X11C]", "pKey");
	define_local_var(0X92E8, 0X939C, "[bp-0X118]", "pIn");
	define_local_var(0X92E8, 0X939C, "[bp-0X114]", "ulLen");
	define_local_var(0X92E8, 0X939C, "[bp-0X110]", "pOut");
	define_local_var(0X92E8, 0X939C, "[bp-0X108]", "avi");
	define_local_var(0X92E8, 0X939C, "[bp-0XF8]", "s_AseKey");
	add_func    (0X939C,0X943C);
	set_func_flags(0X939C,0x410);
	SetType(0X939C, "INT32S __cdecl AesEncryptToFile(INT8U *pIn, INT32U ulLen, CHAR *pcFile);");
	set_frame_size(0X939C, 0X24, 4, 0);
	define_local_var(0X939C, 0X943C, "[bp-0X20]", "pcFile");
	define_local_var(0X939C, 0X943C, "[bp-0X1C]", "ulLen");
	define_local_var(0X939C, 0X943C, "[bp-0X18]", "pIn");
	define_local_var(0X939C, 0X943C, "[bp-0X10]", "ulEncryptLen");
	define_local_var(0X939C, 0X943C, "[bp-0XC]", "pucEncryptData");
	define_local_var(0X939C, 0X943C, "[bp-0X8]", "slRtn");
	add_func    (0X9440,0X94EC);
	set_func_flags(0X9440,0x410);
	SetType(0X9440, "INT32S __cdecl AesDecryptFromFile(INT8U *pOut, INT32U ulLen, CHAR *pcFile);");
	set_frame_size(0X9440, 0X24, 4, 0);
	define_local_var(0X9440, 0X94EC, "[bp-0X20]", "pcFile");
	define_local_var(0X9440, 0X94EC, "[bp-0X1C]", "ulLen");
	define_local_var(0X9440, 0X94EC, "[bp-0X18]", "pOut");
	define_local_var(0X9440, 0X94EC, "[bp-0X10]", "ulEncryptLen");
	define_local_var(0X9440, 0X94EC, "[bp-0XC]", "pucEncryptData");
	define_local_var(0X9440, 0X94EC, "[bp-0X8]", "slRtn");
	set_name(0X94CC, "exit", SN_LOCAL);
	add_func    (0X94F0,0X95BC);
	set_func_flags(0X94F0,0x410);
	SetType(0X94F0, "void __cdecl Get_Time(T_TimeStruct *ptTime);");
	set_frame_size(0X94F0, 0X14, 4, 0);
	define_local_var(0X94F0, 0X95BC, "[bp-0X10]", "ptTime");
	define_local_var(0X94F0, 0X95BC, "[bp-0XC]", "timer");
	define_local_var(0X94F0, 0X95BC, "[bp-0X8]", "t_tm");
	add_func    (0X95BC,0X965C);
	set_func_flags(0X95BC,0x410);
	SetType(0X95BC, "void __cdecl Set_Time(T_TimeStruct *ptTime);");
	set_frame_size(0X95BC, 0X44, 4, 0);
	define_local_var(0X95BC, 0X965C, "[bp-0X40]", "ptTime");
	define_local_var(0X95BC, 0X965C, "[bp-0X3C]", "tv");
	define_local_var(0X95BC, 0X965C, "[bp-0X34]", "_tm");
	define_local_var(0X95BC, 0X965C, "[bp-0X8]", "timep");
	add_func    (0X965C,0X96AC);
	set_func_flags(0X965C,0x410);
	SetType(0X965C, "void __cdecl Set_Mutex_Attr_Recu(pthread_mutex_t *pMutex);");
	set_frame_size(0X965C, 0X14, 4, 0);
	define_local_var(0X965C, 0X96AC, "[bp-0X10]", "pMutex");
	define_local_var(0X965C, 0X96AC, "[bp-0X8]", "attr");
	add_func    (0X96AC,0X96D4);
	set_func_flags(0X96AC,0x419);
	SetType(0X96AC, "VOID *__cdecl Loop_FeedWatchDog(VOID *arg);");
	set_frame_size(0X96AC, 0XC, 4, 0);
	define_local_var(0X96AC, 0X96D4, "[bp-0X8]", "arg");
	add_func    (0X96D8,0X9764);
	set_func_flags(0X96D8,0x410);
	SetType(0X96D8, "void Create_FeedWatchDog_Thread();");
	set_frame_size(0X96D8, 0X34, 4, 0);
	define_local_var(0X96D8, 0X9764, "[bp-0X30]", "schedParam");
	define_local_var(0X96D8, 0X9764, "[bp-0X2C]", "attr");
	define_local_var(0X96D8, 0X9764, "[bp-0X8]", "tid");
	add_func    (0X9768,0X9794);
	set_func_flags(0X9768,0x410);
	SetType(0X9768, "void Reset_68013();");
	set_frame_size(0X9768, 0X4, 4, 0);
	add_func    (0X97A0,0X9818);
	set_func_flags(0X97A0,0x410);
	SetType(0X97A0, "void __cdecl MFI_Ctrl_Set(BOOLEAN bDis);");
	set_frame_size(0X97A0, 0XD4, 4, 0);
	define_local_var(0X97A0, 0X9818, "[bp-0XCD]", "bDis");
	define_local_var(0X97A0, 0X9818, "[bp-0XCC]", "acBuff");
	add_func    (0X9824,0X984C);
	set_func_flags(0X9824,0x410);
	SetType(0X9824, "BOOLEAN MFI_Ctrl_Get();");
	set_frame_size(0X9824, 0X4, 4, 0);
	add_func    (0X9850,0X99A4);
	set_func_flags(0X9850,0x410);
	SetType(0X9850, "void __cdecl Simple_EncryptAndDecrypt(INT8U *pucData, INT32U ulLen, INT16U usSeq);");
	set_frame_size(0X9850, 0X24, 4, 0);
	define_local_var(0X9850, 0X99A4, "[bp-0X1E]", "usSeq");
	define_local_var(0X9850, 0X99A4, "[bp-0X1C]", "ulLen");
	define_local_var(0X9850, 0X99A4, "[bp-0X18]", "pucData");
	define_local_var(0X9850, 0X99A4, "[bp-0X10]", "i");
	define_local_var(0X9850, 0X99A4, "[bp-0XC]", "j");
	define_local_var(0X9850, 0X99A4, "[bp-0X8]", "pucIn");
	add_func    (0X99AC,0X9A08);
	set_func_flags(0X99AC,0x410);
	SetType(0X99AC, "void __cdecl Pro_Deal_CallBack(T_DJIProtocolDataStruct *pPro);");
	set_frame_size(0X99AC, 0XC, 4, 0);
	define_local_var(0X99AC, 0X9A08, "[bp-0X8]", "pPro");
	add_func    (0X9A08,0X9ADC);
	set_func_flags(0X9A08,0x410);
	SetType(0X9A08, "BOOLEAN __cdecl Pro_IsPacketNeedEncrypt(T_DJIProtocolStruct *pProData);");
	set_frame_size(0X9A08, 0XC, 4, 0);
	define_local_var(0X9A08, 0X9ADC, "[bp-0X8]", "pProData");
	add_func    (0X9ADC,0X9E98);
	set_func_flags(0X9ADC,0x410);
	SetType(0X9ADC, "INT32S __cdecl Pro_PackAndSend(T_DJIProtocolDataStruct *pPro);");
	set_frame_size(0X9ADC, 0X3C, 4, 0);
	define_local_var(0X9ADC, 0X9E98, "[bp-0X18]", "pPro");
	define_local_var(0X9ADC, 0X9E98, "[bp-0XE]", "usCrc");
	add_func    (0X9E9C,0X9F84);
	set_func_flags(0X9E9C,0x418);
	SetType(0X9E9C, "INT32S __cdecl Pro_DealProtocol(T_DJIProtocolDataStruct *pPro);");
	set_frame_size(0X9E9C, 0X14, 4, 0);
	define_local_var(0X9E9C, 0X9F84, "[bp-0X10]", "pPro");
	define_local_var(0X9E9C, 0X9F84, "[bp-0X8]", "slRtn");
	add_func    (0X9F84,0XA32C);
	set_func_flags(0X9F84,0x418);
	SetType(0X9F84, "INT32S __cdecl Pro_ParseProtocol(T_DJIProtocolDataStruct *pPro);");
	set_frame_size(0X9F84, 0X1C, 4, 0);
	define_local_var(0X9F84, 0XA32C, "[bp-0X18]", "pPro");
	define_local_var(0X9F84, 0XA32C, "[bp-0X14]", "tDJIProCmdAttr");
	add_func    (0XA32C,0XA394);
	set_func_flags(0XA32C,0x418);
	SetType(0XA32C, "INT32S __cdecl Pro_DealRec(T_DJIProtocolDataStruct *pPro);");
	set_frame_size(0XA32C, 0XC, 4, 0);
	define_local_var(0XA32C, 0XA394, "[bp-0X8]", "pPro");
	add_func    (0XA394,0XA540);
	set_func_flags(0XA394,0x410);
	SetType(0XA394, "INT32S __cdecl Pro_Init(T_DJIProtocolDataStruct *pPro, INT32S slEncryptType, INT32S (*pRecv)(INT8U *, INT32U), INT32S (*pSend)(INT8U *, INT32U), T_DJIProtocolDataStruct *(*pForwardPro)(void), INT32U ulRecvBuffLen, INT32U ulSendBuffLen, INT32S (*pPreDealProtocolCmd)(DJIProtocolData *), INT32S (*pDealProtocolCmd)(DJIProtocolData *));");
	set_frame_size(0XA394, 0X1C, 4, 0);
	define_local_var(0XA394, 0XA540, "[bp-0X14]", "pSend");
	define_local_var(0XA394, 0XA540, "[bp-0X10]", "pRecv");
	define_local_var(0XA394, 0XA540, "[bp-0XC]", "slEncryptType");
	define_local_var(0XA394, 0XA540, "[bp-0X8]", "pPro");
	define_local_var(0XA394, 0XA540, "[bp+0X4]", "pForwardPro");
	define_local_var(0XA394, 0XA540, "[bp+0X8]", "ulRecvBuffLen");
	define_local_var(0XA394, 0XA540, "[bp+0XC]", "ulSendBuffLen");
	define_local_var(0XA394, 0XA540, "[bp+0X10]", "pPreDealProtocolCmd");
	define_local_var(0XA394, 0XA540, "[bp+0X14]", "pDealProtocolCmd");
	set_name(0XA518, "exit2", SN_LOCAL);
	set_name(0XA528, "exit1", SN_LOCAL);
	add_func    (0XA540,0XA674);
	set_func_flags(0XA540,0x410);
	SetType(0XA540, "INT32S __cdecl Pro_CheckRec(T_DJIProtocolDataStruct *pPro);");
	set_frame_size(0XA540, 0X41C, 4, 0);
	define_local_var(0XA540, 0XA674, "[bp-0X418]", "pPro");
	define_local_var(0XA540, 0XA674, "[bp-0X410]", "ulOffset");
	define_local_var(0XA540, 0XA674, "[bp-0X40C]", "ucBuff");
	define_local_var(0XA540, 0XA674, "[bp-0XC]", "slTemp");
	define_local_var(0XA540, 0XA674, "[bp-0X8]", "slRtn");
	set_name(0XA65C, "exit", SN_LOCAL);
	add_func    (0XA674,0XAA70);
	set_func_flags(0XA674,0x410);
	SetType(0XA674, "INT32S __cdecl Pro_PackAndSend_ThreadSafe(T_DJIProtocolDataStruct *pPro, T_DJIProCmdAttrStruct *pCmd, INT8U *pData, INT32U ulLen);");
	set_frame_size(0XA674, 0X18C, 4, 0);
	define_local_var(0XA674, 0XAA70, "[bp-0X15C]", "ulLen");
	define_local_var(0XA674, 0XAA70, "[bp-0X158]", "pData");
	define_local_var(0XA674, 0XAA70, "[bp-0X154]", "pCmd");
	define_local_var(0XA674, 0XAA70, "[bp-0X150]", "pPro");
	define_local_var(0XA674, 0XAA70, "[bp-0X148]", "tPro");
	define_local_var(0XA674, 0XAA70, "[bp-0X13A]", "aucBuff");
	define_local_var(0XA674, 0XAA70, "[bp-0XE]", "usCrc");
	add_func    (0XAA78,0XAAD4);
	set_func_flags(0XAA78,0x410);
	SetType(0XAA78, "INT16U __cdecl Pro_Get_CurSeq(T_DJIProtocolDataStruct *pPro);");
	set_frame_size(0XAA78, 0XC, 4, 0);
	define_local_var(0XAA78, 0XAAD4, "[bp-0X8]", "pPro");
	add_func    (0XAAD4,0XABE0);
	set_func_flags(0XAAD4,0x418);
	SetType(0XAAD4, "INT32S __cdecl Pro_Register_CmdSend(T_DJIProtocolDataStruct *pPro, T_CmdSendStruct *pData);");
	set_frame_size(0XAAD4, 0X1C, 4, 0);
	define_local_var(0XAAD4, 0XABE0, "[bp-0X14]", "pData");
	define_local_var(0XAAD4, 0XABE0, "[bp-0X10]", "pPro");
	define_local_var(0XAAD4, 0XABE0, "[bp-0XC]", "slRtn");
	define_local_var(0XAAD4, 0XABE0, "[bp-0X8]", "i");
	add_func    (0XABE0,0XAD18);
	set_func_flags(0XABE0,0x418);
	SetType(0XABE0, "INT32S __cdecl Pro_Cancel_CmdSend(T_DJIProtocolDataStruct *pPro, T_CmdSendStruct *pData);");
	set_frame_size(0XABE0, 0X1C, 4, 0);
	define_local_var(0XABE0, 0XAD18, "[bp-0X14]", "pData");
	define_local_var(0XABE0, 0XAD18, "[bp-0X10]", "pPro");
	define_local_var(0XABE0, 0XAD18, "[bp-0XC]", "slRtn");
	define_local_var(0XABE0, 0XAD18, "[bp-0X8]", "i");
	add_func    (0XAD18,0XAE4C);
	set_func_flags(0XAD18,0x418);
	SetType(0XAD18, "void __cdecl Pro_Check_CmdSend_Timeout(T_DJIProtocolDataStruct *pPro);");
	set_frame_size(0XAD18, 0X14, 4, 0);
	define_local_var(0XAD18, 0XAE4C, "[bp-0X10]", "pPro");
	define_local_var(0XAD18, 0XAE4C, "[bp-0X8]", "i");
	add_func    (0XAE4C,0XB204);
	set_func_flags(0XAE4C,0x418);
	SetType(0XAE4C, "INT32S __cdecl Pro_Deal_CmdSend_Ack(T_DJIProtocolDataStruct *pPro);");
	set_frame_size(0XAE4C, 0X1C, 4, 0);
	define_local_var(0XAE4C, 0XB204, "[bp-0X18]", "pPro");
	define_local_var(0XAE4C, 0XB204, "[bp-0X10]", "i");
	define_local_var(0XAE4C, 0XB204, "[bp-0XC]", "ulCopyLen");
	define_local_var(0XAE4C, 0XB204, "[bp-0X8]", "slRtn");
	add_func    (0XB204,0XB4D8);
	set_func_flags(0XB204,0x410);
	SetType(0XB204, "INT32S __cdecl Pro_SendWaitAck(T_DJIProtocolDataStruct *pPro, T_DJIProCmdAttrStruct *pCmd, INT8U *pSendData, INT32U ulSendLen, INT32U ulSendTimeout, INT8U *pRecvData, INT32U *pulRecvLen, INT32U ulRecvMaxLen);");
	set_frame_size(0XB204, 0XBC, 4, 0);
	define_local_var(0XB204, 0XB4D8, "[bp-0XB4]", "ulSendLen");
	define_local_var(0XB204, 0XB4D8, "[bp-0XB0]", "pSendData");
	define_local_var(0XB204, 0XB4D8, "[bp-0XAC]", "pCmd");
	define_local_var(0XB204, 0XB4D8, "[bp-0XA8]", "pPro");
	define_local_var(0XB204, 0XB4D8, "[bp-0XA4]", "timer");
	define_local_var(0XB204, 0XB4D8, "[bp-0X9C]", "tTime");
	define_local_var(0XB204, 0XB4D8, "[bp-0X94]", "tCmdSend");
	define_local_var(0XB204, 0XB4D8, "[bp-0X24]", "dura");
	define_local_var(0XB204, 0XB4D8, "[bp-0X18]", "ret");
	define_local_var(0XB204, 0XB4D8, "[bp+0X4]", "ulSendTimeout");
	define_local_var(0XB204, 0XB4D8, "[bp+0X8]", "pRecvData");
	define_local_var(0XB204, 0XB4D8, "[bp+0XC]", "pulRecvLen");
	define_local_var(0XB204, 0XB4D8, "[bp+0X10]", "ulRecvMaxLen");
	add_func    (0XB4DC,0XB644);
	set_func_flags(0XB4DC,0x410);
	SetType(0XB4DC, "INT32S __cdecl Pro_Cmd_Get_Version(T_DJIProtocolDataStruct *pPro, INT8U ucDevID, INT32U ulTimeOut, INT32U *pulLoaderVersion, INT32U *pulFirmwareVersion, BOOLEAN *pbSupportDowngrade);");
	set_frame_size(0XB4DC, 0X164, 4, 0);
	define_local_var(0XB4DC, 0XB644, "[bp-0X164]", "ulSendTimeout");
	define_local_var(0XB4DC, 0XB644, "[bp-0X160]", "pRecvData");
	define_local_var(0XB4DC, 0XB644, "[bp-0X15C]", "pulRecvLen");
	define_local_var(0XB4DC, 0XB644, "[bp-0X158]", "ulRecvMaxLen");
	define_local_var(0XB4DC, 0XB644, "[bp-0X14C]", "pulLoaderVersion");
	define_local_var(0XB4DC, 0XB644, "[bp-0X148]", "ulTimeOut");
	define_local_var(0XB4DC, 0XB644, "[bp-0X141]", "ucDevID");
	define_local_var(0XB4DC, 0XB644, "[bp-0X140]", "pPro");
	define_local_var(0XB4DC, 0XB644, "[bp-0X13C]", "tDJIProCmdAttr");
	define_local_var(0XB4DC, 0XB644, "[bp-0X134]", "ulRecvLen");
	define_local_var(0XB4DC, 0XB644, "[bp-0X130]", "aucBuffRecv");
	define_local_var(0XB4DC, 0XB644, "[bp+0X4]", "pulFirmwareVersion");
	define_local_var(0XB4DC, 0XB644, "[bp+0X8]", "pbSupportDowngrade");
	add_func    (0XB648,0XB77C);
	set_func_flags(0XB648,0x410);
	SetType(0XB648, "INT32S __cdecl Pro_Cmd_Enter_Loader(T_DJIProtocolDataStruct *pPro, INT8U ucDevID, INT32U ulTimeOut);");
	set_frame_size(0XB648, 0X28C, 4, 0);
	define_local_var(0XB648, 0XB77C, "[bp-0X28C]", "ulSendTimeout");
	define_local_var(0XB648, 0XB77C, "[bp-0X288]", "pRecvData");
	define_local_var(0XB648, 0XB77C, "[bp-0X284]", "pulRecvLen");
	define_local_var(0XB648, 0XB77C, "[bp-0X280]", "ulRecvMaxLen");
	define_local_var(0XB648, 0XB77C, "[bp-0X278]", "ulTimeOut");
	define_local_var(0XB648, 0XB77C, "[bp-0X271]", "ucDevID");
	define_local_var(0XB648, 0XB77C, "[bp-0X270]", "pPro");
	define_local_var(0XB648, 0XB77C, "[bp-0X26C]", "tDJIProCmdAttr");
	define_local_var(0XB648, 0XB77C, "[bp-0X264]", "ulRecvLen");
	define_local_var(0XB648, 0XB77C, "[bp-0X260]", "aucBuffRecv");
	define_local_var(0XB648, 0XB77C, "[bp-0X134]", "aucBuffSend");
	define_local_var(0XB648, 0XB77C, "[bp-0X8]", "ulSendLen");
	add_func    (0XB780,0XB8E8);
	set_func_flags(0XB780,0x410);
	SetType(0XB780, "INT32S __cdecl Pro_Cmd_Get_State(T_DJIProtocolDataStruct *pPro, INT8U ucDevID, INT32U ulTimeOut, BOOLEAN *pbIsLoader);");
	set_frame_size(0XB780, 0X294, 4, 0);
	define_local_var(0XB780, 0XB8E8, "[bp-0X294]", "ulSendTimeout");
	define_local_var(0XB780, 0XB8E8, "[bp-0X290]", "pRecvData");
	define_local_var(0XB780, 0XB8E8, "[bp-0X28C]", "pulRecvLen");
	define_local_var(0XB780, 0XB8E8, "[bp-0X288]", "ulRecvMaxLen");
	define_local_var(0XB780, 0XB8E8, "[bp-0X27C]", "pbIsLoader");
	define_local_var(0XB780, 0XB8E8, "[bp-0X278]", "ulTimeOut");
	define_local_var(0XB780, 0XB8E8, "[bp-0X271]", "ucDevID");
	define_local_var(0XB780, 0XB8E8, "[bp-0X270]", "pPro");
	define_local_var(0XB780, 0XB8E8, "[bp-0X26C]", "tDJIProCmdAttr");
	define_local_var(0XB780, 0XB8E8, "[bp-0X264]", "ulRecvLen");
	define_local_var(0XB780, 0XB8E8, "[bp-0X260]", "aucBuffRecv");
	define_local_var(0XB780, 0XB8E8, "[bp-0X134]", "aucBuffSend");
	define_local_var(0XB780, 0XB8E8, "[bp-0X8]", "ulSendLen");
	add_func    (0XB8EC,0XBA74);
	set_func_flags(0XB8EC,0x410);
	SetType(0XB8EC, "INT32S __cdecl Pro_Cmd_Load_Start(T_DJIProtocolDataStruct *pPro, INT8U ucDevID, INT32U ulTimeOut, INT32U ulLength, INT8U *pucAck, INT16U *pusPktLen);");
	set_frame_size(0XB8EC, 0X29C, 4, 0);
	define_local_var(0XB8EC, 0XBA74, "[bp-0X29C]", "ulSendTimeout");
	define_local_var(0XB8EC, 0XBA74, "[bp-0X298]", "pRecvData");
	define_local_var(0XB8EC, 0XBA74, "[bp-0X294]", "pulRecvLen");
	define_local_var(0XB8EC, 0XBA74, "[bp-0X290]", "ulRecvMaxLen");
	define_local_var(0XB8EC, 0XBA74, "[bp-0X284]", "ulLength");
	define_local_var(0XB8EC, 0XBA74, "[bp-0X280]", "ulTimeOut");
	define_local_var(0XB8EC, 0XBA74, "[bp-0X279]", "ucDevID");
	define_local_var(0XB8EC, 0XBA74, "[bp-0X278]", "pPro");
	define_local_var(0XB8EC, 0XBA74, "[bp-0X270]", "tDJIProCmdAttr");
	define_local_var(0XB8EC, 0XBA74, "[bp-0X268]", "ulRecvLen");
	define_local_var(0XB8EC, 0XBA74, "[bp-0X264]", "aucBuffRecv");
	define_local_var(0XB8EC, 0XBA74, "[bp-0X138]", "aucBuffSend");
	define_local_var(0XB8EC, 0XBA74, "[bp-0XC]", "p");
	define_local_var(0XB8EC, 0XBA74, "[bp-0X8]", "ulSendLen");
	define_local_var(0XB8EC, 0XBA74, "[bp+0X4]", "pucAck");
	define_local_var(0XB8EC, 0XBA74, "[bp+0X8]", "pusPktLen");
	add_func    (0XBA78,0XBC74);
	set_func_flags(0XBA78,0x410);
	SetType(0XBA78, "INT32S __cdecl Pro_Cmd_Load_Data(T_DJIProtocolDataStruct *pPro, INT8U ucDevID, INT32U ulTimeOut, INT8U ucEncryptType, INT32U ulSendSn, INT16U ulSendDataLen, INT8U *pSendData, INT32U *pulRecvSn, INT8U *pErrVal);");
	set_frame_size(0XBA78, 0X29C, 4, 0);
	define_local_var(0XBA78, 0XBC74, "[bp-0X29C]", "ulSendTimeout");
	define_local_var(0XBA78, 0XBC74, "[bp-0X298]", "pRecvData");
	define_local_var(0XBA78, 0XBC74, "[bp-0X294]", "pulRecvLen");
	define_local_var(0XBA78, 0XBC74, "[bp-0X290]", "ulRecvMaxLen");
	define_local_var(0XBA78, 0XBC74, "[bp-0X281]", "ucEncryptType");
	define_local_var(0XBA78, 0XBC74, "[bp-0X280]", "ulTimeOut");
	define_local_var(0XBA78, 0XBC74, "[bp-0X279]", "ucDevID");
	define_local_var(0XBA78, 0XBC74, "[bp-0X278]", "pPro");
	define_local_var(0XBA78, 0XBC74, "[bp-0X270]", "tDJIProCmdAttr");
	define_local_var(0XBA78, 0XBC74, "[bp-0X268]", "ulRecvLen");
	define_local_var(0XBA78, 0XBC74, "[bp-0X264]", "aucBuffRecv");
	define_local_var(0XBA78, 0XBC74, "[bp-0X138]", "aucBuffSend");
	define_local_var(0XBA78, 0XBC74, "[bp-0XC]", "p");
	define_local_var(0XBA78, 0XBC74, "[bp-0X8]", "ulSendLen");
	define_local_var(0XBA78, 0XBC74, "[bp+0X4]", "ulSendSn");
	define_local_var(0XBA78, 0XBC74, "[bp+0X8]", "ulSendDataLen");
	define_local_var(0XBA78, 0XBC74, "[bp+0XC]", "pSendData");
	define_local_var(0XBA78, 0XBC74, "[bp+0X10]", "pulRecvSn");
	define_local_var(0XBA78, 0XBC74, "[bp+0X14]", "pErrVal");
	add_func    (0XBC7C,0XBDD8);
	set_func_flags(0XBC7C,0x410);
	SetType(0XBC7C, "INT32S __cdecl Pro_Cmd_Load_Finish(T_DJIProtocolDataStruct *pPro, INT8U ucDevID, INT32U ulTimeOut, INT8U *pucMD5, INT8U *pucAck);");
	set_frame_size(0XBC7C, 0X29C, 4, 0);
	define_local_var(0XBC7C, 0XBDD8, "[bp-0X29C]", "ulSendTimeout");
	define_local_var(0XBC7C, 0XBDD8, "[bp-0X298]", "pRecvData");
	define_local_var(0XBC7C, 0XBDD8, "[bp-0X294]", "pulRecvLen");
	define_local_var(0XBC7C, 0XBDD8, "[bp-0X290]", "ulRecvMaxLen");
	define_local_var(0XBC7C, 0XBDD8, "[bp-0X284]", "pucMD5");
	define_local_var(0XBC7C, 0XBDD8, "[bp-0X280]", "ulTimeOut");
	define_local_var(0XBC7C, 0XBDD8, "[bp-0X279]", "ucDevID");
	define_local_var(0XBC7C, 0XBDD8, "[bp-0X278]", "pPro");
	define_local_var(0XBC7C, 0XBDD8, "[bp-0X270]", "tDJIProCmdAttr");
	define_local_var(0XBC7C, 0XBDD8, "[bp-0X268]", "ulRecvLen");
	define_local_var(0XBC7C, 0XBDD8, "[bp-0X264]", "aucBuffRecv");
	define_local_var(0XBC7C, 0XBDD8, "[bp-0X138]", "aucBuffSend");
	define_local_var(0XBC7C, 0XBDD8, "[bp-0XC]", "p");
	define_local_var(0XBC7C, 0XBDD8, "[bp-0X8]", "ulSendLen");
	define_local_var(0XBC7C, 0XBDD8, "[bp+0X4]", "pucAck");
	add_func    (0XBDDC,0XBF7C);
	set_func_flags(0XBDDC,0x410);
	SetType(0XBDDC, "INT32S __cdecl Pro_Cmd_Reboot(T_DJIProtocolDataStruct *pPro, INT8U ucDevID, INT32U ulTimeOut, INT8U ucType, INT32U ulDelayTimeMs);");
	set_frame_size(0XBDDC, 0X29C, 4, 0);
	define_local_var(0XBDDC, 0XBF7C, "[bp-0X29C]", "ulSendTimeout");
	define_local_var(0XBDDC, 0XBF7C, "[bp-0X298]", "pRecvData");
	define_local_var(0XBDDC, 0XBF7C, "[bp-0X294]", "pulRecvLen");
	define_local_var(0XBDDC, 0XBF7C, "[bp-0X290]", "ulRecvMaxLen");
	define_local_var(0XBDDC, 0XBF7C, "[bp-0X281]", "ucType");
	define_local_var(0XBDDC, 0XBF7C, "[bp-0X280]", "ulTimeOut");
	define_local_var(0XBDDC, 0XBF7C, "[bp-0X279]", "ucDevID");
	define_local_var(0XBDDC, 0XBF7C, "[bp-0X278]", "pPro");
	define_local_var(0XBDDC, 0XBF7C, "[bp-0X270]", "tDJIProCmdAttr");
	define_local_var(0XBDDC, 0XBF7C, "[bp-0X268]", "ulRecvLen");
	define_local_var(0XBDDC, 0XBF7C, "[bp-0X264]", "aucBuffRecv");
	define_local_var(0XBDDC, 0XBF7C, "[bp-0X138]", "aucBuffSend");
	define_local_var(0XBDDC, 0XBF7C, "[bp-0XC]", "p");
	define_local_var(0XBDDC, 0XBF7C, "[bp-0X8]", "ulSendLen");
	define_local_var(0XBDDC, 0XBF7C, "[bp+0X4]", "ulDelayTimeMs");
	add_func    (0XBF80,0XC0C4);
	set_func_flags(0XBF80,0x410);
	SetType(0XBF80, "INT32S __cdecl Pro_Cmd_Update_Ctrl(T_DJIProtocolDataStruct *pPro, INT32U ulTimeOut, E_UpdateCtrlTypeEnum eType);");
	set_frame_size(0XBF80, 0X28C, 4, 0);
	define_local_var(0XBF80, 0XC0C4, "[bp-0X28C]", "ulSendTimeout");
	define_local_var(0XBF80, 0XC0C4, "[bp-0X288]", "pRecvData");
	define_local_var(0XBF80, 0XC0C4, "[bp-0X284]", "pulRecvLen");
	define_local_var(0XBF80, 0XC0C4, "[bp-0X280]", "ulRecvMaxLen");
	define_local_var(0XBF80, 0XC0C4, "[bp-0X278]", "eType");
	define_local_var(0XBF80, 0XC0C4, "[bp-0X274]", "ulTimeOut");
	define_local_var(0XBF80, 0XC0C4, "[bp-0X270]", "pPro");
	define_local_var(0XBF80, 0XC0C4, "[bp-0X26C]", "tDJIProCmdAttr");
	define_local_var(0XBF80, 0XC0C4, "[bp-0X264]", "ulRecvLen");
	define_local_var(0XBF80, 0XC0C4, "[bp-0X260]", "aucBuffRecv");
	define_local_var(0XBF80, 0XC0C4, "[bp-0X134]", "aucBuffSend");
	define_local_var(0XBF80, 0XC0C4, "[bp-0X8]", "ulSendLen");
	add_func    (0XC0C8,0XC198);
	set_func_flags(0XC0C8,0x418);
	SetType(0XC0C8, "INT32S Key_Init();");
	set_frame_size(0XC0C8, 0X14, 4, 0);
	set_name(0XC170, "exit1", SN_LOCAL);
	add_func    (0XC1A4,0XC27C);
	set_func_flags(0XC1A4,0x410);
	SetType(0XC1A4, "VOID *__cdecl KeyScan(VOID *arg);");
	set_frame_size(0XC1A4, 0X1C, 4, 0);
	define_local_var(0XC1A4, 0XC27C, "[bp-0X18]", "arg");
	define_local_var(0XC1A4, 0XC27C, "[bp-0X14]", "tTemp");
	add_func    (0XC290,0XC2C8);
	set_func_flags(0XC290,0x410);
	SetType(0XC290, "INT32S __cdecl GetKey(INT32U *pulKey);");
	set_frame_size(0XC290, 0XC, 4, 0);
	define_local_var(0XC290, 0XC2C8, "[bp-0X8]", "pulKey");
	add_func    (0XC2CC,0XC3BC);
	set_func_flags(0XC2CC,0x410);
	SetType(0XC2CC, "T_QueueHandleStruct *__cdecl Queue_Create(INT32U ulElementNum, INT32U ulElementSize);");
	set_frame_size(0XC2CC, 0X1C, 4, 0);
	define_local_var(0XC2CC, 0XC3BC, "[bp-0X14]", "ulElementSize");
	define_local_var(0XC2CC, 0XC3BC, "[bp-0X10]", "ulElementNum");
	define_local_var(0XC2CC, 0XC3BC, "[bp-0X8]", "p");
	set_name(0XC39C, "exit1", SN_LOCAL);
	add_func    (0XC3BC,0XC424);
	set_func_flags(0XC3BC,0x410);
	SetType(0XC3BC, "INT32S __cdecl Queue_Delete(T_QueueHandleStruct *pQueueHandle);");
	set_frame_size(0XC3BC, 0XC, 4, 0);
	define_local_var(0XC3BC, 0XC424, "[bp-0X8]", "pQueueHandle");
	add_func    (0XC424,0XC518);
	set_func_flags(0XC424,0x410);
	SetType(0XC424, "INT32S __cdecl Queue_GetData(T_QueueHandleStruct *pQueueHandle, VOID *pData, INT32U ulDataLen);");
	set_frame_size(0XC424, 0X14, 4, 0);
	define_local_var(0XC424, 0XC518, "[bp-0X10]", "ulDataLen");
	define_local_var(0XC424, 0XC518, "[bp-0XC]", "pData");
	define_local_var(0XC424, 0XC518, "[bp-0X8]", "pQueueHandle");
	add_func    (0XC518,0XC60C);
	set_func_flags(0XC518,0x410);
	SetType(0XC518, "INT32S __cdecl Queue_PutData(T_QueueHandleStruct *pQueueHandle, VOID *pData, INT32U ulDataLen);");
	set_frame_size(0XC518, 0X14, 4, 0);
	define_local_var(0XC518, 0XC60C, "[bp-0X10]", "ulDataLen");
	define_local_var(0XC518, 0XC60C, "[bp-0XC]", "pData");
	define_local_var(0XC518, 0XC60C, "[bp-0X8]", "pQueueHandle");
	add_func    (0XC60C,0XC640);
	set_func_flags(0XC60C,0x410);
	SetType(0XC60C, "void __cdecl Queue_ClearData(T_QueueHandleStruct *pQueueHandle);");
	set_frame_size(0XC60C, 0XC, 4, 0);
	define_local_var(0XC60C, 0XC640, "[bp-0X8]", "pQueueHandle");
	add_func    (0XC640,0XC690);
	set_func_flags(0XC640,0x418);
	SetType(0XC640, "BOOLEAN __cdecl Queue_Empty(T_QueueHandleStruct *pQueueHandle);");
	set_frame_size(0XC640, 0XC, 4, 0);
	define_local_var(0XC640, 0XC690, "[bp-0X8]", "pQueueHandle");
	add_func    (0XC690,0XC714);
	set_func_flags(0XC690,0x418);
	SetType(0XC690, "BOOLEAN __cdecl Queue_Full(T_QueueHandleStruct *pQueueHandle);");
	set_frame_size(0XC690, 0XC, 4, 0);
	define_local_var(0XC690, 0XC714, "[bp-0X8]", "pQueueHandle");
	add_func    (0XC714,0XC830);
	set_func_flags(0XC714,0x410);
	SetType(0XC714, "T_SerialHandleStruct *__cdecl Serial_Create(CHAR *pName, E_BandRateEnum eBandRate, E_DataBitEnum eDatabit, E_StopBitEnum eStopBit, E_ParityEnum eParity);");
	set_frame_size(0XC714, 0X34, 4, 0);
	define_local_var(0XC714, 0XC830, "[bp-0X24]", "eStopBit");
	define_local_var(0XC714, 0XC830, "[bp-0X20]", "eDatabit");
	define_local_var(0XC714, 0XC830, "[bp-0X1C]", "eBandRate");
	define_local_var(0XC714, 0XC830, "[bp-0X18]", "pName");
	define_local_var(0XC714, 0XC830, "[bp-0X10]", "p");
	define_local_var(0XC714, 0XC830, "[bp+0X4]", "eParity");
	set_name(0XC800, "exit2", SN_LOCAL);
	set_name(0XC810, "exit1", SN_LOCAL);
	add_func    (0XC834,0XCAEC);
	set_func_flags(0XC834,0x418);
	SetType(0XC834, "INT32S __cdecl SetAttr(INT32S slFd, E_BandRateEnum eBandRate, E_DataBitEnum eDatabit, E_StopBitEnum eStopBit, E_ParityEnum eParity);");
	set_frame_size(0XC834, 0X6C, 4, 0);
	define_local_var(0XC834, 0XCAEC, "[bp-0X5C]", "eStopBit");
	define_local_var(0XC834, 0XCAEC, "[bp-0X58]", "eDatabit");
	define_local_var(0XC834, 0XCAEC, "[bp-0X54]", "eBandRate");
	define_local_var(0XC834, 0XCAEC, "[bp-0X50]", "slFd");
	define_local_var(0XC834, 0XCAEC, "[bp-0X48]", "Opt");
	define_local_var(0XC834, 0XCAEC, "[bp-0XC]", "i");
	define_local_var(0XC834, 0XCAEC, "[bp-0X8]", "slTemp");
	define_local_var(0XC834, 0XCAEC, "[bp+0X4]", "eParity");
	add_func    (0XCAF0,0XCC28);
	set_func_flags(0XCAF0,0x418);
	SetType(0XCAF0, "BOOLEAN __cdecl IsSerialHaveRecData(T_SerialHandleStruct *pSerialHandle);");
	set_frame_size(0XCAF0, 0XAC, 4, 0);
	define_local_var(0XCAF0, 0XCC28, "[bp-0XAC]", "timeout");
	define_local_var(0XCAF0, 0XCC28, "[bp-0XA0]", "pSerialHandle");
	define_local_var(0XCAF0, 0XCC28, "[bp-0X98]", "tv");
	define_local_var(0XCAF0, 0XCC28, "[bp-0X90]", "RdFds");
	define_local_var(0XCAF0, 0XCC28, "[bp-0X10]", "slRet");
	define_local_var(0XCAF0, 0XCC28, "[bp-0XC]", "__i");
	define_local_var(0XCAF0, 0XCC28, "[bp-0X8]", "__arr");
	add_func    (0XCC28,0XCC90);
	set_func_flags(0XCC28,0x410);
	SetType(0XCC28, "INT32S __cdecl Serial_Delete(T_SerialHandleStruct *pSerialHandle);");
	set_frame_size(0XCC28, 0XC, 4, 0);
	define_local_var(0XCC28, 0XCC90, "[bp-0X8]", "pSerialHandle");
	add_func    (0XCC90,0XCD2C);
	set_func_flags(0XCC90,0x410);
	SetType(0XCC90, "INT32S __cdecl Serial_ReadData(T_SerialHandleStruct *pSerialHandle, INT8U *pucData, INT32U ulDatalen);");
	set_frame_size(0XCC90, 0X14, 4, 0);
	define_local_var(0XCC90, 0XCD2C, "[bp-0X10]", "ulDatalen");
	define_local_var(0XCC90, 0XCD2C, "[bp-0XC]", "pucData");
	define_local_var(0XCC90, 0XCD2C, "[bp-0X8]", "pSerialHandle");
	add_func    (0XCD2C,0XCDA8);
	set_func_flags(0XCD2C,0x410);
	SetType(0XCD2C, "INT32S __cdecl Serial_WriteData(T_SerialHandleStruct *pSerialHandle, INT8U *pucData, INT32U ulDatalen);");
	set_frame_size(0XCD2C, 0X14, 4, 0);
	define_local_var(0XCD2C, 0XCDA8, "[bp-0X10]", "ulDatalen");
	define_local_var(0XCD2C, 0XCDA8, "[bp-0XC]", "pucData");
	define_local_var(0XCD2C, 0XCDA8, "[bp-0X8]", "pSerialHandle");
	add_func    (0XCDA8,0XCED8);
	set_func_flags(0XCDA8,0x410);
	SetType(0XCDA8, "INT32S Serial_DisableConsole();");
	set_frame_size(0XCDA8, 0X14, 4, 0);
	define_local_var(0XCDA8, 0XCED8, "[bp-0XC]", "slFd");
	define_local_var(0XCDA8, 0XCED8, "[bp-0X8]", "slRtn");
	add_func    (0XCEEC,0XCFB4);
	set_func_flags(0XCEEC,0x410);
	SetType(0XCEEC, "INT32S Serial_EnableConsole();");
	set_frame_size(0XCEEC, 0X14, 4, 0);
	define_local_var(0XCEEC, 0XCFB4, "[bp-0X8]", "slFd");
	add_func    (0XCFC4,0XD44C);
	set_func_flags(0XCFC4,0x410);
	SetType(0XCFC4, "void __cdecl sha256_transf(sha256_ctx *ctx, const uint8 *message, uint32 block_nb);");
	set_frame_size(0XCFC4, 0X14C, 4, 0);
	define_local_var(0XCFC4, 0XD44C, "[bp-0X148]", "block_nb");
	define_local_var(0XCFC4, 0XD44C, "[bp-0X144]", "message");
	define_local_var(0XCFC4, 0XD44C, "[bp-0X140]", "ctx");
	define_local_var(0XCFC4, 0XD44C, "[bp-0X138]", "wv");
	define_local_var(0XCFC4, 0XD44C, "[bp-0X118]", "w");
	define_local_var(0XCFC4, 0XD44C, "[bp-0X18]", "t1");
	define_local_var(0XCFC4, 0XD44C, "[bp-0X14]", "t2");
	define_local_var(0XCFC4, 0XD44C, "[bp-0X10]", "sub_block");
	define_local_var(0XCFC4, 0XD44C, "[bp-0XC]", "i");
	define_local_var(0XCFC4, 0XD44C, "[bp-0X8]", "j");
	add_func    (0XD458,0XD4A8);
	set_func_flags(0XD458,0x410);
	SetType(0XD458, "void __cdecl sha256(const uint8 *message, uint32 len, uint8 *digest);");
	set_frame_size(0XD458, 0XBC, 4, 0);
	define_local_var(0XD458, 0XD4A8, "[bp-0XB8]", "digest");
	define_local_var(0XD458, 0XD4A8, "[bp-0XB4]", "len");
	define_local_var(0XD458, 0XD4A8, "[bp-0XB0]", "message");
	define_local_var(0XD458, 0XD4A8, "[bp-0XAC]", "ctx");
	add_func    (0XD4A8,0XD51C);
	set_func_flags(0XD4A8,0x410);
	SetType(0XD4A8, "void __cdecl sha256_init(sha256_ctx *ctx);");
	set_frame_size(0XD4A8, 0X14, 4, 0);
	define_local_var(0XD4A8, 0XD51C, "[bp-0X10]", "ctx");
	define_local_var(0XD4A8, 0XD51C, "[bp-0X8]", "i");
	add_func    (0XD520,0XD670);
	set_func_flags(0XD520,0x410);
	SetType(0XD520, "void __cdecl sha256_update(sha256_ctx *ctx, const uint8 *message, uint32 len);");
	set_frame_size(0XD520, 0X2C, 4, 0);
	define_local_var(0XD520, 0XD670, "[bp-0X28]", "len");
	define_local_var(0XD520, 0XD670, "[bp-0X24]", "message");
	define_local_var(0XD520, 0XD670, "[bp-0X20]", "ctx");
	define_local_var(0XD520, 0XD670, "[bp-0X18]", "block_nb");
	define_local_var(0XD520, 0XD670, "[bp-0X14]", "new_len");
	define_local_var(0XD520, 0XD670, "[bp-0X10]", "rem_len");
	define_local_var(0XD520, 0XD670, "[bp-0XC]", "tmp_len");
	define_local_var(0XD520, 0XD670, "[bp-0X8]", "shifted_message");
	add_func    (0XD670,0XD8BC);
	set_func_flags(0XD670,0x410);
	SetType(0XD670, "void __cdecl sha256_final(sha256_ctx *ctx, uint8 *digest);");
	set_frame_size(0XD670, 0X24, 4, 0);
	define_local_var(0XD670, 0XD8BC, "[bp-0X1C]", "digest");
	define_local_var(0XD670, 0XD8BC, "[bp-0X18]", "ctx");
	define_local_var(0XD670, 0XD8BC, "[bp-0X14]", "block_nb");
	define_local_var(0XD670, 0XD8BC, "[bp-0X10]", "pm_len");
	define_local_var(0XD670, 0XD8BC, "[bp-0XC]", "len_b");
	define_local_var(0XD670, 0XD8BC, "[bp-0X8]", "i");
	add_func    (0XD8BC,0XD9BC);
	set_func_flags(0XD8BC,0x410);
	SetType(0XD8BC, "void __cdecl sha256_noPad(sha256_ctx *ctx, uint8 *digest);");
	set_frame_size(0XD8BC, 0X14, 4, 0);
	define_local_var(0XD8BC, 0XD9BC, "[bp-0X14]", "digest");
	define_local_var(0XD8BC, 0XD9BC, "[bp-0X10]", "ctx");
	define_local_var(0XD8BC, 0XD9BC, "[bp-0X8]", "i");
	add_func    (0XD9BC,0XDA10);
	set_func_flags(0XD9BC,0x418);
	SetType(0XD9BC, "INT32S __cdecl At88_Ioctl_ThreadSafe(INT32S slFd, INT32S slOpt, VOID *pData);");
	set_frame_size(0XD9BC, 0X1C, 4, 0);
	define_local_var(0XD9BC, 0XDA10, "[bp-0X18]", "pData");
	define_local_var(0XD9BC, 0XDA10, "[bp-0X14]", "slOpt");
	define_local_var(0XD9BC, 0XDA10, "[bp-0X10]", "slFd");
	define_local_var(0XD9BC, 0XDA10, "[bp-0X8]", "ret");
	add_func    (0XDA14,0XDB28);
	set_func_flags(0XDA14,0x410);
	SetType(0XDA14, "INT32S At88_Init();");
	set_frame_size(0XDA14, 0X11C, 4, 0);
	define_local_var(0XDA14, 0XDB28, "[bp-0X112]", "uAt88Ioctl");
	define_local_var(0XDA14, 0XDB28, "[bp-0X10]", "ret");
	set_name(0XDAF4, "err", SN_LOCAL);
	add_func    (0XDB3C,0XDB7C);
	set_func_flags(0XDB3C,0x410);
	SetType(0XDB3C, "INT32S At88_Delete();");
	set_frame_size(0XDB3C, 0X4, 4, 0);
	add_func    (0XDB80,0XDC74);
	set_func_flags(0XDB80,0x410);
	SetType(0XDB80, "INT32S __cdecl At88_Is_Config_Lock(BOOLEAN *pData);");
	set_frame_size(0XDB80, 0X114, 4, 0);
	define_local_var(0XDB80, 0XDC74, "[bp-0X110]", "pData");
	define_local_var(0XDB80, 0XDC74, "[bp-0X10A]", "uAt88Ioctl");
	define_local_var(0XDB80, 0XDC74, "[bp-0X8]", "ret");
	add_func    (0XDC80,0XDD74);
	set_func_flags(0XDC80,0x410);
	SetType(0XDC80, "INT32S __cdecl At88_Is_DataOTP_Lock(BOOLEAN *pData);");
	set_frame_size(0XDC80, 0X114, 4, 0);
	define_local_var(0XDC80, 0XDD74, "[bp-0X110]", "pData");
	define_local_var(0XDC80, 0XDD74, "[bp-0X10A]", "uAt88Ioctl");
	define_local_var(0XDC80, 0XDD74, "[bp-0X8]", "ret");
	add_func    (0XDD80,0XDE8C);
	set_func_flags(0XDD80,0x410);
	SetType(0XDD80, "INT32S __cdecl At88_Read_Config(INT8U *pData);");
	set_frame_size(0XDD80, 0X11C, 4, 0);
	define_local_var(0XDD80, 0XDE8C, "[bp-0X118]", "pData");
	define_local_var(0XDD80, 0XDE8C, "[bp-0X112]", "uAt88Ioctl");
	define_local_var(0XDD80, 0XDE8C, "[bp-0X10]", "p");
	define_local_var(0XDD80, 0XDE8C, "[bp-0XC]", "ret");
	define_local_var(0XDD80, 0XDE8C, "[bp-0X8]", "i");
	add_func    (0XDE98,0XDF9C);
	set_func_flags(0XDE98,0x410);
	SetType(0XDE98, "INT32S __cdecl At88_Is_Config_Set(BOOLEAN *pData);");
	set_frame_size(0XDE98, 0X214, 4, 0);
	define_local_var(0XDE98, 0XDF9C, "[bp-0X210]", "pData");
	define_local_var(0XDE98, 0XDF9C, "[bp-0X208]", "aucBuff");
	define_local_var(0XDE98, 0XDF9C, "[bp-0X108]", "aucChip");
	define_local_var(0XDE98, 0XDF9C, "[bp-0X8]", "p");
	add_func    (0XDF9C,0XE024);
	set_func_flags(0XDF9C,0x410);
	SetType(0XDF9C, "INT32S At88_Lock_Config();");
	set_frame_size(0XDF9C, 0X114, 4, 0);
	define_local_var(0XDF9C, 0XE024, "[bp-0X10A]", "uAt88Ioctl");
	define_local_var(0XDF9C, 0XE024, "[bp-0X8]", "ret");
	add_func    (0XE02C,0XE0B4);
	set_func_flags(0XE02C,0x410);
	SetType(0XE02C, "INT32S At88_Lock_DataOTP();");
	set_frame_size(0XE02C, 0X114, 4, 0);
	define_local_var(0XE02C, 0XE0B4, "[bp-0X10A]", "uAt88Ioctl");
	define_local_var(0XE02C, 0XE0B4, "[bp-0X8]", "ret");
	add_func    (0XE0BC,0XE214);
	set_func_flags(0XE0BC,0x410);
	SetType(0XE0BC, "INT32S At88_Set_Config();");
	set_frame_size(0XE0BC, 0X11C, 4, 0);
	define_local_var(0XE0BC, 0XE214, "[bp-0X10E]", "uAt88Ioctl");
	define_local_var(0XE0BC, 0XE214, "[bp-0XC]", "i");
	define_local_var(0XE0BC, 0XE214, "[bp-0X8]", "ret");
	add_func    (0XE220,0XE2E8);
	set_func_flags(0XE220,0x410);
	SetType(0XE220, "INT32S At88_Check_And_Set_Config();");
	set_frame_size(0XE220, 0X14, 4, 0);
	define_local_var(0XE220, 0XE2E8, "[bp-0X6]", "bSet");
	define_local_var(0XE220, 0XE2E8, "[bp-0X5]", "bLocked");
	add_func    (0XE2E8,0XE3E4);
	set_func_flags(0XE2E8,0x410);
	SetType(0XE2E8, "INT32S __cdecl At88_Read_Chip_Info(INT8U *pData);");
	set_frame_size(0XE2E8, 0X11C, 4, 0);
	define_local_var(0XE2E8, 0XE3E4, "[bp-0X118]", "pData");
	define_local_var(0XE2E8, 0XE3E4, "[bp-0X10E]", "uAt88Ioctl");
	define_local_var(0XE2E8, 0XE3E4, "[bp-0XC]", "p");
	define_local_var(0XE2E8, 0XE3E4, "[bp-0X8]", "ret");
	add_func    (0XE3F0,0XE420);
	set_func_flags(0XE3F0,0x410);
	SetType(0XE3F0, "INT32S __cdecl At88_Write_Chip_Info_File(INT8U *pData);");
	set_frame_size(0XE3F0, 0XC, 4, 0);
	define_local_var(0XE3F0, 0XE420, "[bp-0X8]", "pData");
	add_func    (0XE424,0XE454);
	set_func_flags(0XE424,0x410);
	SetType(0XE424, "INT32S __cdecl At88_Read_Chip_Info_File(INT8U *pData);");
	set_frame_size(0XE424, 0XC, 4, 0);
	define_local_var(0XE424, 0XE454, "[bp-0X8]", "pData");
	add_func    (0XE458,0XE4F4);
	set_func_flags(0XE458,0x410);
	SetType(0XE458, "INT32S At88_Check_Chip_Info();");
	set_frame_size(0XE458, 0X24, 4, 0);
	define_local_var(0XE458, 0XE4F4, "[bp-0X16]", "aucFile");
	define_local_var(0XE458, 0XE4F4, "[bp-0XD]", "aucChip");
	add_func    (0XE4F4,0XE590);
	set_func_flags(0XE4F4,0x410);
	SetType(0XE4F4, "INT32S At88_Set_Chip_Info_File();");
	set_frame_size(0XE4F4, 0X24, 4, 0);
	define_local_var(0XE4F4, 0XE590, "[bp-0X16]", "aucFile");
	define_local_var(0XE4F4, 0XE590, "[bp-0XD]", "aucChip");
	add_func    (0XE590,0XE5D4);
	set_func_flags(0XE590,0x410);
	SetType(0XE590, "INT32S At88_Check_And_Set_Chip_Info();");
	set_frame_size(0XE590, 0XC, 4, 0);
	add_func    (0XE5D4,0XE7D0);
	set_func_flags(0XE5D4,0x410);
	SetType(0XE5D4, "INT32S __cdecl At88_Write_Factory_Info(T_FactoryInfoStruct *pData);");
	set_frame_size(0XE5D4, 0X124, 4, 0);
	define_local_var(0XE5D4, 0XE7D0, "[bp-0X120]", "pData");
	define_local_var(0XE5D4, 0XE7D0, "[bp-0X11A]", "uAt88Ioctl");
	define_local_var(0XE5D4, 0XE7D0, "[bp-0X18]", "p");
	define_local_var(0XE5D4, 0XE7D0, "[bp-0X14]", "ret");
	define_local_var(0XE5D4, 0XE7D0, "[bp-0X10]", "ulTemp");
	define_local_var(0XE5D4, 0XE7D0, "[bp-0XC]", "ulCopyLen");
	define_local_var(0XE5D4, 0XE7D0, "[bp-0X8]", "ulOff");
	add_func    (0XE7DC,0XE92C);
	set_func_flags(0XE7DC,0x410);
	SetType(0XE7DC, "INT32S __cdecl At88_Read_Factory_Info(T_FactoryInfoStruct *pData);");
	set_frame_size(0XE7DC, 0X124, 4, 0);
	define_local_var(0XE7DC, 0XE92C, "[bp-0X120]", "pData");
	define_local_var(0XE7DC, 0XE92C, "[bp-0X11A]", "uAt88Ioctl");
	define_local_var(0XE7DC, 0XE92C, "[bp-0X18]", "p");
	define_local_var(0XE7DC, 0XE92C, "[bp-0X14]", "ret");
	define_local_var(0XE7DC, 0XE92C, "[bp-0X10]", "ulTemp");
	define_local_var(0XE7DC, 0XE92C, "[bp-0XC]", "ulCopyLen");
	define_local_var(0XE7DC, 0XE92C, "[bp-0X8]", "ulOff");
	add_func    (0XE938,0XE964);
	set_func_flags(0XE938,0x410);
	SetType(0XE938, "INT32S __cdecl At88_Write_Factory_Info_File(T_FactoryInfoStruct *pData);");
	set_frame_size(0XE938, 0XC, 4, 0);
	define_local_var(0XE938, 0XE964, "[bp-0X8]", "pData");
	add_func    (0XE964,0XEA18);
	set_func_flags(0XE964,0x410);
	SetType(0XE964, "INT32S __cdecl At88_Write_Kernel_Encrypt(INT8U *pData);");
	set_frame_size(0XE964, 0X114, 4, 0);
	define_local_var(0XE964, 0XEA18, "[bp-0X110]", "pData");
	define_local_var(0XE964, 0XEA18, "[bp-0X10A]", "uAt88Ioctl");
	define_local_var(0XE964, 0XEA18, "[bp-0X8]", "p");
	add_func    (0XEA20,0XEA88);
	set_func_flags(0XEA20,0x410);
	SetType(0XEA20, "INT32S __cdecl At88_Write_Factory_Info_All(T_FactoryInfoStruct *pData);");
	set_frame_size(0XEA20, 0XC, 4, 0);
	define_local_var(0XEA20, 0XEA88, "[bp-0X8]", "pData");
	add_func    (0XEA88,0XEBCC);
	set_func_flags(0XEA88,0x410);
	SetType(0XEA88, "INT32S At88_Check_Factory_Info();");
	set_frame_size(0XEA88, 0X15C, 4, 0);
	define_local_var(0XEA88, 0XEBCC, "[bp-0X152]", "tFactoryInfo");
	define_local_var(0XEA88, 0XEBCC, "[bp-0X138]", "aucMD5");
	define_local_var(0XEA88, 0XEBCC, "[bp-0X128]", "aucBuff");
	define_local_var(0XEA88, 0XEBCC, "[bp-0X28]", "aucKey");
	define_local_var(0XEA88, 0XEBCC, "[bp-0X8]", "p");
	add_func    (0XEBCC,0XEBFC);
	set_func_flags(0XEBCC,0x410);
	SetType(0XEBCC, "INT32S __cdecl At88_Write_Key_File(INT8U *pData);");
	set_frame_size(0XEBCC, 0XC, 4, 0);
	define_local_var(0XEBCC, 0XEBFC, "[bp-0X8]", "pData");
	add_func    (0XEC00,0XEC30);
	set_func_flags(0XEC00,0x410);
	SetType(0XEC00, "INT32S __cdecl At88_Read_Key_File(INT8U *pData);");
	set_frame_size(0XEC00, 0XC, 4, 0);
	define_local_var(0XEC00, 0XEC30, "[bp-0X8]", "pData");
	add_func    (0XEC34,0XED24);
	set_func_flags(0XEC34,0x410);
	SetType(0XEC34, "INT32S __cdecl At88_Write_Key(INT8U *pData);");
	set_frame_size(0XEC34, 0X11C, 4, 0);
	define_local_var(0XEC34, 0XED24, "[bp-0X118]", "pData");
	define_local_var(0XEC34, 0XED24, "[bp-0X10E]", "uAt88Ioctl");
	define_local_var(0XEC34, 0XED24, "[bp-0XC]", "p");
	define_local_var(0XEC34, 0XED24, "[bp-0X8]", "ret");
	add_func    (0XED30,0XED98);
	set_func_flags(0XED30,0x410);
	SetType(0XED30, "INT32S __cdecl At88_Write_Key_All(INT8U *pData);");
	set_frame_size(0XED30, 0XC, 4, 0);
	define_local_var(0XED30, 0XED98, "[bp-0X8]", "pData");
	add_func    (0XED98,0XF078);
	set_func_flags(0XED98,0x410);
	SetType(0XED98, "INT32S __cdecl At88_Mac_Check(INT8U ucKey, INT8U *pData, INT32U ulLen);");
	set_frame_size(0XED98, 0X1E4, 4, 0);
	define_local_var(0XED98, 0XF078, "[bp-0X1E0]", "ulLen");
	define_local_var(0XED98, 0XF078, "[bp-0X1DC]", "pData");
	define_local_var(0XED98, 0XF078, "[bp-0X1D5]", "ucKey");
	define_local_var(0XED98, 0XF078, "[bp-0X1D2]", "aucBuffOut");
	define_local_var(0XED98, 0XF078, "[bp-0X1B2]", "aucBuffIn");
	define_local_var(0XED98, 0XF078, "[bp-0X15A]", "aucPW");
	define_local_var(0XED98, 0XF078, "[bp-0X13A]", "aucRandom");
	define_local_var(0XED98, 0XF078, "[bp-0X11A]", "uAt88Ioctl");
	define_local_var(0XED98, 0XF078, "[bp-0X18]", "ret");
	define_local_var(0XED98, 0XF078, "[bp-0X14]", "i");
	define_local_var(0XED98, 0XF078, "[bp-0X10]", "p");
	add_func    (0XF080,0XF0B0);
	set_func_flags(0XF080,0x410);
	SetType(0XF080, "INT32S __cdecl At88_Check_Key(INT8U *pData);");
	set_frame_size(0XF080, 0XC, 4, 0);
	define_local_var(0XF080, 0XF0B0, "[bp-0X8]", "pData");
	add_func    (0XF0B0,0XF11C);
	set_func_flags(0XF0B0,0x410);
	SetType(0XF0B0, "INT32S At88_Check_Auth();");
	set_frame_size(0XF0B0, 0X2C, 4, 0);
	define_local_var(0XF0B0, 0XF11C, "[bp-0X24]", "aucKey");
	add_func    (0XF11C,0XF1A0);
	set_func_flags(0XF11C,0x410);
	SetType(0XF11C, "INT32S At88_Check_All();");
	set_frame_size(0XF11C, 0XC, 4, 0);
	add_func    (0XF1A4,0XF1E8);
	set_func_flags(0XF1A4,0x410);
	SetType(0XF1A4, "BOOLEAN At88_Is_Encrypt();");
	set_frame_size(0XF1A4, 0XC, 4, 0);
	add_func    (0XF1EC,0XF20C);
	set_func_flags(0XF1EC,0x410);
	SetType(0XF1EC, "BOOLEAN At88_Is_Passed();");
	set_frame_size(0XF1EC, 0, 4, 0);
	add_func    (0XF210,0XF260);
	set_func_flags(0XF210,0x410);
	SetType(0XF210, "BOOLEAN At88_Check_Once();");
	set_frame_size(0XF210, 0X14, 4, 0);
	define_local_var(0XF210, 0XF260, "[bp-0X5]", "bRtn");
	add_func    (0XF260,0XF2A4);
	set_func_flags(0XF260,0x410);
	SetType(0XF260, "BOOLEAN At88_Is_Exist();");
	set_frame_size(0XF260, 0XC, 4, 0);
	add_func    (0XF2A8,0XF31C);
	set_func_flags(0XF2A8,0x418);
	SetType(0XF2A8, "void *__cdecl thread_recv_event(void *arg);");
	set_frame_size(0XF2A8, 0X1C, 4, 0);
	define_local_var(0XF2A8, 0XF31C, "[bp-0X18]", "arg");
	define_local_var(0XF2A8, 0XF31C, "[bp-0X10]", "state");
	define_local_var(0XF2A8, 0XF31C, "[bp-0XC]", "lastVid");
	define_local_var(0XF2A8, 0XF31C, "[bp-0X8]", "ret");
	add_func    (0XF324,0XF3F4);
	set_func_flags(0XF324,0x410);
	SetType(0XF324, "int __cdecl adb_subscribe(adb_event_cb_t *event_cb, void *pUser);");
	set_frame_size(0XF324, 0X9C, 4, 0);
	define_local_var(0XF324, 0XF3F4, "[bp-0X9C]", "pUser");
	define_local_var(0XF324, 0XF3F4, "[bp-0X98]", "event_cb");
	define_local_var(0XF324, 0XF3F4, "[bp-0X90]", "cc");
	define_local_var(0XF324, 0XF3F4, "[bp-0X10]", "tid");
	define_local_var(0XF324, 0XF3F4, "[bp-0XC]", "key1");
	define_local_var(0XF324, 0XF3F4, "[bp-0X8]", "key2");
	add_func    (0XF410,0XF490);
	set_func_flags(0XF410,0x410);
	SetType(0XF410, "int __cdecl adb_connect(int *pSfd, int port);");
	set_frame_size(0XF410, 0X8C, 4, 0);
	define_local_var(0XF410, 0XF490, "[bp-0X8C]", "port");
	define_local_var(0XF410, 0XF490, "[bp-0X88]", "pSfd");
	define_local_var(0XF410, 0XF490, "[bp-0X84]", "adb_str");
	add_func    (0XF49C,0XF4C4);
	set_func_flags(0XF49C,0x410);
	SetType(0XF49C, "int __cdecl adb_close(int *sfd);");
	set_frame_size(0XF49C, 0XC, 4, 0);
	define_local_var(0XF49C, 0XF4C4, "[bp-0X8]", "sfd");
	add_func    (0XF4C4,0XF4FC);
	set_func_flags(0XF4C4,0x410);
	SetType(0XF4C4, "int __cdecl adb_send(int sfd, unsigned __int8 *data, int iSize);");
	set_frame_size(0XF4C4, 0X14, 4, 0);
	define_local_var(0XF4C4, 0XF4FC, "[bp-0X10]", "iSize");
	define_local_var(0XF4C4, 0XF4FC, "[bp-0XC]", "data");
	define_local_var(0XF4C4, 0XF4FC, "[bp-0X8]", "sfd");
	add_func    (0XF4FC,0XF524);
	set_func_flags(0XF4FC,0x410);
	SetType(0XF4FC, "BOOLEAN __cdecl adb_is_conn(int sfd);");
	set_frame_size(0XF4FC, 0XC, 4, 0);
	define_local_var(0XF4FC, 0XF524, "[bp-0X8]", "sfd");
	add_func    (0XF524,0XF55C);
	set_func_flags(0XF524,0x410);
	SetType(0XF524, "int __cdecl adb_recv(int sfd, unsigned __int8 *buff, int size);");
	set_frame_size(0XF524, 0X14, 4, 0);
	define_local_var(0XF524, 0XF55C, "[bp-0X10]", "size");
	define_local_var(0XF524, 0XF55C, "[bp-0XC]", "buff");
	define_local_var(0XF524, 0XF55C, "[bp-0X8]", "sfd");
	add_func    (0XF55C,0XF8D8);
	set_func_flags(0XF55C,0x418);
	SetType(0XF55C, "INT32S aoa_start();");
	set_frame_size(0XF55C, 0X124, 4, 0);
	define_local_var(0XF55C, 0XF8D8, "[bp-0X114]", "ulVersion");
	define_local_var(0XF55C, 0XF8D8, "[bp-0X110]", "tAOAIoctlSetStr");
	define_local_var(0XF55C, 0XF8D8, "[bp-0XC]", "ret");
	define_local_var(0XF55C, 0XF8D8, "[bp-0X8]", "p");
	add_func    (0XF900,0XFA40);
	set_func_flags(0XF900,0x418);
	SetType(0XF900, "void *__cdecl aoa_thread_event(void *arg);");
	set_frame_size(0XF900, 0X24, 4, 0);
	define_local_var(0XF900, 0XFA40, "[bp-0X20]", "arg");
	define_local_var(0XF900, 0XFA40, "[bp-0X18]", "bconnected");
	define_local_var(0XF900, 0XFA40, "[bp-0X14]", "ret");
	define_local_var(0XF900, 0XFA40, "[bp-0X10]", "blaststate");
	add_func    (0XFA58,0XFAA0);
	set_func_flags(0XFA58,0x410);
	SetType(0XFA58, "int __cdecl aoa_subscribe(adb_event_cb_t *event_cb, void *pUser);");
	set_frame_size(0XFA58, 0X14, 4, 0);
	define_local_var(0XFA58, 0XFAA0, "[bp-0X14]", "pUser");
	define_local_var(0XFA58, 0XFAA0, "[bp-0X10]", "event_cb");
	define_local_var(0XFA58, 0XFAA0, "[bp-0X8]", "tid");
	add_func    (0XFAA8,0XFB00);
	set_func_flags(0XFAA8,0x410);
	SetType(0XFAA8, "int __cdecl aoa_connect(int *pSfd, int port);");
	set_frame_size(0XFAA8, 0X14, 4, 0);
	define_local_var(0XFAA8, 0XFB00, "[bp-0XC]", "port");
	define_local_var(0XFAA8, 0XFB00, "[bp-0X8]", "pSfd");
	add_func    (0XFB04,0XFB34);
	set_func_flags(0XFB04,0x410);
	SetType(0XFB04, "int __cdecl aoa_close(int *sfd);");
	set_frame_size(0XFB04, 0XC, 4, 0);
	define_local_var(0XFB04, 0XFB34, "[bp-0X8]", "sfd");
	add_func    (0XFB34,0XFC00);
	set_func_flags(0XFB34,0x410);
	SetType(0XFB34, "int __cdecl aoa_send(int sfd, unsigned __int8 *data, int iSize);");
	set_frame_size(0XFB34, 0X34, 4, 0);
	define_local_var(0XFB34, 0XFC00, "[bp-0X30]", "iSize");
	define_local_var(0XFB34, 0XFC00, "[bp-0X2C]", "data");
	define_local_var(0XFB34, 0XFC00, "[bp-0X28]", "sfd");
	define_local_var(0XFB34, 0XFC00, "[bp-0X20]", "tAOAIoctlSend");
	define_local_var(0XFB34, 0XFC00, "[bp-0X14]", "ret");
	define_local_var(0XFB34, 0XFC00, "[bp-0X10]", "pCur");
	define_local_var(0XFB34, 0XFC00, "[bp-0XC]", "pEnd");
	define_local_var(0XFB34, 0XFC00, "[bp-0X8]", "ulSend");
	add_func    (0XFC08,0XFC68);
	set_func_flags(0XFC08,0x410);
	SetType(0XFC08, "BOOLEAN __cdecl aoa_is_conn(int sfd);");
	set_frame_size(0XFC08, 0XC, 4, 0);
	define_local_var(0XFC08, 0XFC68, "[bp-0X8]", "sfd");
	add_func    (0XFC6C,0XFCD0);
	set_func_flags(0XFC6C,0x410);
	SetType(0XFC6C, "int __cdecl aoa_recv(int sfd, unsigned __int8 *buff, int size);");
	set_frame_size(0XFC6C, 0X14, 4, 0);
	define_local_var(0XFC6C, 0XFCD0, "[bp-0X10]", "size");
	define_local_var(0XFC6C, 0XFCD0, "[bp-0XC]", "buff");
	define_local_var(0XFC6C, 0XFCD0, "[bp-0X8]", "sfd");
	add_func    (0XFCD4,0XFCFC);
	set_func_flags(0XFCD4,0x410);
	SetType(0XFCD4, "BOOLEAN __cdecl muxd_is_conn(int m_sock_fd);");
	set_frame_size(0XFCD4, 0XC, 4, 0);
	define_local_var(0XFCD4, 0XFCFC, "[bp-0X8]", "m_sock_fd");
	add_func    (0XFCFC,0XFD50);
	set_func_flags(0XFCFC,0x410);
	SetType(0XFCFC, "int __cdecl muxd_conn(int *m_sock_fd, int port);");
	set_frame_size(0XFCFC, 0XC, 4, 0);
	define_local_var(0XFCFC, 0XFD50, "[bp-0XC]", "port");
	define_local_var(0XFCFC, 0XFD50, "[bp-0X8]", "m_sock_fd");
	add_func    (0XFD54,0XFD90);
	set_func_flags(0XFD54,0x410);
	SetType(0XFD54, "int __cdecl muxd_close(int *sock_fd);");
	set_frame_size(0XFD54, 0XC, 4, 0);
	define_local_var(0XFD54, 0XFD90, "[bp-0X8]", "sock_fd");
	add_func    (0XFD90,0XFE00);
	set_func_flags(0XFD90,0x410);
	SetType(0XFD90, "int __cdecl muxd_recv(int sock_fd, unsigned __int8 *buff, int size);");
	set_frame_size(0XFD90, 0X24, 4, 0);
	define_local_var(0XFD90, 0XFE00, "[bp-0X18]", "size");
	define_local_var(0XFD90, 0XFE00, "[bp-0X14]", "buff");
	define_local_var(0XFD90, 0XFE00, "[bp-0X10]", "sock_fd");
	define_local_var(0XFD90, 0XFE00, "[bp-0XC]", "readSize");
	define_local_var(0XFD90, 0XFE00, "[bp-0X8]", "ret");
	add_func    (0XFE00,0XFE6C);
	set_func_flags(0XFE00,0x410);
	SetType(0XFE00, "int __cdecl muxd_send(int sock_fd, unsigned __int8 *buff, int size);");
	set_frame_size(0XFE00, 0X1C, 4, 0);
	define_local_var(0XFE00, 0XFE6C, "[bp-0X18]", "size");
	define_local_var(0XFE00, 0XFE6C, "[bp-0X14]", "buff");
	define_local_var(0XFE00, 0XFE6C, "[bp-0X10]", "sock_fd");
	define_local_var(0XFE00, 0XFE6C, "[bp-0XC]", "sendLen");
	define_local_var(0XFE00, 0XFE6C, "[bp-0X8]", "ret");
	add_func    (0XFE6C,0XFF3C);
	set_func_flags(0XFE6C,0x410);
	SetType(0XFE6C, "BOOLEAN __cdecl tcp_is_conn(int sfd);");
	set_frame_size(0XFE6C, 0X14, 4, 0);
	define_local_var(0XFE6C, 0XFF3C, "[bp-0X10]", "sfd");
	define_local_var(0XFE6C, 0XFF3C, "[bp-0X9]", "a");
	define_local_var(0XFE6C, 0XFF3C, "[bp-0X8]", "ret");
	add_func    (0XFF3C,0X104B4);
	set_func_flags(0XFF3C,0x410);
	SetType(0XFF3C, "int __cdecl tcp_connect(int *sfd, unsigned __int8 *m_remoteIP, int port);");
	set_frame_size(0XFF3C, 0X1F4, 4, 0);
	define_local_var(0XFF3C, 0X104B4, "[bp-0X1F4]", "optlen");
	define_local_var(0XFF3C, 0X104B4, "[bp-0X1E8]", "port");
	define_local_var(0XFF3C, 0X104B4, "[bp-0X1E4]", "m_remoteIP");
	define_local_var(0XFF3C, 0X104B4, "[bp-0X1E0]", "sfd");
	define_local_var(0XFF3C, 0X104B4, "[bp-0X1D8]", "eset");
	define_local_var(0XFF3C, 0X104B4, "[bp-0X158]", "wset");
	define_local_var(0XFF3C, 0X104B4, "[bp-0XD8]", "rset");
	define_local_var(0XFF3C, 0X104B4, "[bp-0X58]", "tm");
	define_local_var(0XFF3C, 0X104B4, "[bp-0X50]", "server_addr");
	define_local_var(0XFF3C, 0X104B4, "[bp-0X40]", "sendBuff");
	define_local_var(0XFF3C, 0X104B4, "[bp-0X3C]", "intval");
	define_local_var(0XFF3C, 0X104B4, "[bp-0X38]", "l");
	define_local_var(0XFF3C, 0X104B4, "[bp-0X30]", "client_addr");
	define_local_var(0XFF3C, 0X104B4, "[bp-0X20]", "maxfd");
	define_local_var(0XFF3C, 0X104B4, "[bp-0X1C]", "__i");
	define_local_var(0XFF3C, 0X104B4, "[bp-0X18]", "__arr");
	define_local_var(0XFF3C, 0X104B4, "[bp-0X14]", "__i_0");
	define_local_var(0XFF3C, 0X104B4, "[bp-0X10]", "__arr_0");
	define_local_var(0XFF3C, 0X104B4, "[bp-0XC]", "__i_1");
	define_local_var(0XFF3C, 0X104B4, "[bp-0X8]", "__arr_1");
	add_func    (0X104D0,0X105D8);
	set_func_flags(0X104D0,0x410);
	SetType(0X104D0, "int __cdecl tcp_send(int sfd, unsigned __int8 *data, int iSize);");
	set_frame_size(0X104D0, 0X24, 4, 0);
	define_local_var(0X104D0, 0X105D8, "[bp-0X20]", "iSize");
	define_local_var(0X104D0, 0X105D8, "[bp-0X1C]", "data");
	define_local_var(0X104D0, 0X105D8, "[bp-0X18]", "sfd");
	define_local_var(0X104D0, 0X105D8, "[bp-0X10]", "m_sock_fd");
	define_local_var(0X104D0, 0X105D8, "[bp-0XC]", "iHadSend");
	define_local_var(0X104D0, 0X105D8, "[bp-0X8]", "ret");
	add_func    (0X105D8,0X106CC);
	set_func_flags(0X105D8,0x410);
	SetType(0X105D8, "int __cdecl tcp_recv(int sfd, unsigned __int8 *buff, int iSize);");
	set_frame_size(0X105D8, 0X24, 4, 0);
	define_local_var(0X105D8, 0X106CC, "[bp-0X20]", "iSize");
	define_local_var(0X105D8, 0X106CC, "[bp-0X1C]", "buff");
	define_local_var(0X105D8, 0X106CC, "[bp-0X18]", "sfd");
	define_local_var(0X105D8, 0X106CC, "[bp-0X10]", "m_sock_fd");
	define_local_var(0X105D8, 0X106CC, "[bp-0XC]", "iHadRecv");
	define_local_var(0X105D8, 0X106CC, "[bp-0X8]", "ret");
	add_func    (0X106CC,0X1072C);
	set_func_flags(0X106CC,0x410);
	SetType(0X106CC, "int __cdecl tcp_close(int *sfd);");
	set_frame_size(0X106CC, 0XC, 4, 0);
	define_local_var(0X106CC, 0X1072C, "[bp-0X8]", "sfd");
	add_func    (0X1072C,0X10948);
	set_func_flags(0X1072C,0x418);
	SetType(0X1072C, "int __cdecl usbmuxd_send_first(usb_connection *pConn);");
	set_frame_size(0X1072C, 0X94, 4, 0);
	define_local_var(0X1072C, 0X10948, "[bp-0X90]", "pConn");
	define_local_var(0X1072C, 0X10948, "[bp-0X88]", "sendBuff");
	define_local_var(0X1072C, 0X10948, "[bp-0X8]", "header");
	add_func    (0X10948,0X109FC);
	set_func_flags(0X10948,0x418);
	SetType(0X10948, "void __cdecl init_connection(usb_connection *pConn, conn_device_type device_type);");
	set_frame_size(0X10948, 0XC, 4, 0);
	define_local_var(0X10948, 0X109FC, "[bp-0XC]", "device_type");
	define_local_var(0X10948, 0X109FC, "[bp-0X8]", "pConn");
	add_func    (0X10A24,0X10DD4);
	set_func_flags(0X10A24,0x418);
	SetType(0X10A24, "void *__cdecl thread_connection_fun(void *arg);");
	set_frame_size(0X10A24, 0X424, 4, 0);
	define_local_var(0X10A24, 0X10DD4, "[bp-0X420]", "arg");
	define_local_var(0X10A24, 0X10DD4, "[bp-0X418]", "aucBuff");
	define_local_var(0X10A24, 0X10DD4, "[bp-0X18]", "slRet");
	define_local_var(0X10A24, 0X10DD4, "[bp-0X14]", "i");
	define_local_var(0X10A24, 0X10DD4, "[bp-0X10]", "pConn");
	define_local_var(0X10A24, 0X10DD4, "[bp-0XC]", "pConn_0");
	define_local_var(0X10A24, 0X10DD4, "[bp-0X8]", "pConn_1");
	add_func    (0X10DFC,0X10EB0);
	set_func_flags(0X10DFC,0x418);
	SetType(0X10DFC, "void __cdecl usbmux_event_cb(const usbmuxd_event_t *event, void *user_data);");
	set_frame_size(0X10DFC, 0X34, 4, 0);
	define_local_var(0X10DFC, 0X10EB0, "[bp-0X34]", "user_data");
	define_local_var(0X10DFC, 0X10EB0, "[bp-0X30]", "event");
	define_local_var(0X10DFC, 0X10EB0, "[bp-0X2C]", "attr");
	define_local_var(0X10DFC, 0X10EB0, "[bp-0X8]", "tid");
	add_func    (0X10EC8,0X10F6C);
	set_func_flags(0X10EC8,0x418);
	SetType(0X10EC8, "void __cdecl adb_event_cb(int vid);");
	set_frame_size(0X10EC8, 0X34, 4, 0);
	define_local_var(0X10EC8, 0X10F6C, "[bp-0X30]", "vid");
	define_local_var(0X10EC8, 0X10F6C, "[bp-0X2C]", "attr");
	define_local_var(0X10EC8, 0X10F6C, "[bp-0X8]", "tid");
	add_func    (0X10F80,0X11080);
	set_func_flags(0X10F80,0x410);
	SetType(0X10F80, "INT32S __cdecl usbsocket_init(BOOLEAN bEnUsbmuxd);");
	set_frame_size(0X10F80, 0X1C, 4, 0);
	define_local_var(0X10F80, 0X11080, "[bp-0X15]", "bEnUsbmuxd");
	define_local_var(0X10F80, 0X11080, "[bp-0X10]", "ret");
	define_local_var(0X10F80, 0X11080, "[bp-0XC]", "i");
	define_local_var(0X10F80, 0X11080, "[bp-0X8]", "pConn");
	add_func    (0X11098,0X111BC);
	set_func_flags(0X11098,0x410);
	SetType(0X11098, "INT32S __cdecl usbsocket_create_handle(INT32S port, BOOLEAN bCanRecv);");
	set_frame_size(0X11098, 0X1C, 4, 0);
	define_local_var(0X11098, 0X111BC, "[bp-0X11]", "bCanRecv");
	define_local_var(0X11098, 0X111BC, "[bp-0X10]", "port");
	define_local_var(0X11098, 0X111BC, "[bp-0XC]", "pConn");
	define_local_var(0X11098, 0X111BC, "[bp-0X8]", "i");
	add_func    (0X111D4,0X11268);
	set_func_flags(0X111D4,0x410);
	SetType(0X111D4, "BOOLEAN __cdecl usbsocket_is_conn(INT32S handle);");
	set_frame_size(0X111D4, 0X14, 4, 0);
	define_local_var(0X111D4, 0X11268, "[bp-0X10]", "handle");
	define_local_var(0X111D4, 0X11268, "[bp-0X8]", "pConn");
	add_func    (0X11270,0X11340);
	set_func_flags(0X11270,0x410);
	SetType(0X11270, "INT32S __cdecl usbsocket_recv(INT32S handle, INT8U *pBuff, INT32U size);");
	set_frame_size(0X11270, 0X1C, 4, 0);
	define_local_var(0X11270, 0X11340, "[bp-0X18]", "size");
	define_local_var(0X11270, 0X11340, "[bp-0X14]", "pBuff");
	define_local_var(0X11270, 0X11340, "[bp-0X10]", "handle");
	define_local_var(0X11270, 0X11340, "[bp-0X8]", "pConn");
	add_func    (0X11348,0X11440);
	set_func_flags(0X11348,0x410);
	SetType(0X11348, "INT32S __cdecl usbsocket_send(INT32S handle, INT8U *pBuff, INT32U size);");
	set_frame_size(0X11348, 0X1C, 4, 0);
	define_local_var(0X11348, 0X11440, "[bp-0X18]", "size");
	define_local_var(0X11348, 0X11440, "[bp-0X14]", "pBuff");
	define_local_var(0X11348, 0X11440, "[bp-0X10]", "handle");
	define_local_var(0X11348, 0X11440, "[bp-0XC]", "pConn");
	define_local_var(0X11348, 0X11440, "[bp-0X8]", "ret");
	add_func    (0X11448,0X114A0);
	set_func_flags(0X11448,0x410);
	SetType(0X11448, "void init_libusb();");
	set_frame_size(0X11448, 0XC, 4, 0);
	define_local_var(0X11448, 0X114A0, "[bp-0X8]", "result");
	add_func    (0X114AC,0X114E0);
	set_func_flags(0X114AC,0x410);
	SetType(0X114AC, "void UnInit_libusb();");
	set_frame_size(0X114AC, 0X4, 4, 0);
	add_func    (0X114E4,0X11680);
	set_func_flags(0X114E4,0x410);
	SetType(0X114E4, "int __cdecl IsAndroidPlugIn(int *state);");
	set_frame_size(0X114E4, 0X3C, 4, 0);
	define_local_var(0X114E4, 0X11680, "[bp-0X38]", "state");
	define_local_var(0X114E4, 0X11680, "[bp-0X2E]", "desc");
	define_local_var(0X114E4, 0X11680, "[bp-0X1C]", "devs");
	define_local_var(0X114E4, 0X11680, "[bp-0X18]", "cnt");
	define_local_var(0X114E4, 0X11680, "[bp-0X14]", "bPlugIN");
	define_local_var(0X114E4, 0X11680, "[bp-0X10]", "dev");
	define_local_var(0X114E4, 0X11680, "[bp-0XC]", "i");
	define_local_var(0X114E4, 0X11680, "[bp-0X8]", "r");
	add_func    (0X1169C,0X11754);
	set_func_flags(0X1169C,0x410);
	SetType(0X1169C, "int open68013();");
	set_frame_size(0X1169C, 0X1C, 4, 0);
	define_local_var(0X1169C, 0X11754, "[bp-0X10]", "ulTemp");
	add_func    (0X11768,0X11790);
	set_func_flags(0X11768,0x410);
	SetType(0X11768, "void close68013();");
	set_frame_size(0X11768, 0X4, 4, 0);
	add_func    (0X11794,0X1186C);
	set_func_flags(0X11794,0x410);
	SetType(0X11794, "int __cdecl RecvBuffer(uint8_t *buffer, int bufferSize, int *readedSize, int timeOut);");
	set_frame_size(0X11794, 0X34, 4, 0);
	define_local_var(0X11794, 0X1186C, "[bp-0X2C]", "timeOut");
	define_local_var(0X11794, 0X1186C, "[bp-0X28]", "readedSize");
	define_local_var(0X11794, 0X1186C, "[bp-0X24]", "bufferSize");
	define_local_var(0X11794, 0X1186C, "[bp-0X20]", "buffer");
	define_local_var(0X11794, 0X1186C, "[bp-0X1C]", "t68013RW");
	define_local_var(0X11794, 0X1186C, "[bp-0X8]", "ret");
	add_func    (0X11874,0X11944);
	set_func_flags(0X11874,0x410);
	SetType(0X11874, "int __cdecl syncSendBuffer(uint8_t *buffer, int bufferSize, unsigned int timeout);");
	set_frame_size(0X11874, 0X2C, 4, 0);
	define_local_var(0X11874, 0X11944, "[bp-0X28]", "timeout");
	define_local_var(0X11874, 0X11944, "[bp-0X24]", "bufferSize");
	define_local_var(0X11874, 0X11944, "[bp-0X20]", "buffer");
	define_local_var(0X11874, 0X11944, "[bp-0X1C]", "t68013RW");
	define_local_var(0X11874, 0X11944, "[bp-0X8]", "ret");
	add_func    (0X1194C,0X119E0);
	set_func_flags(0X1194C,0x410);
	SetType(0X1194C, "BOOLEAN Is_68013_Connected();");
	set_frame_size(0X1194C, 0X14, 4, 0);
	define_local_var(0X1194C, 0X119E0, "[bp-0XC]", "bconnected");
	define_local_var(0X1194C, 0X119E0, "[bp-0X8]", "ret");
	add_func    (0X119E4,0X11A78);
	set_func_flags(0X119E4,0x410);
	SetType(0X119E4, "void Hub_Error_Check();");
	set_frame_size(0X119E4, 0XC, 4, 0);
	define_local_var(0X119E4, 0X11A78, "[bp-0X8]", "ulTemp");
	add_func    (0X11A8C,0X11B80);
	set_func_flags(0X11A8C,0x418);
	SetType(0X11A8C, "BOOLEAN _AppleCP_IsExist();");
	set_frame_size(0X11A8C, 0X81C, 4, 0);
	define_local_var(0X11A8C, 0X11B80, "[bp-0X814]", "aucData");
	define_local_var(0X11A8C, 0X11B80, "[bp-0X810]", "tAppleCPCtrl");
	define_local_var(0X11A8C, 0X11B80, "[bp-0X8]", "slRtn");
	add_func    (0X11B88,0X11C08);
	set_func_flags(0X11B88,0x410);
	SetType(0X11B88, "void AppleCP_Check();");
	set_frame_size(0X11B88, 0XC, 4, 0);
	add_func    (0X11C18,0X11C38);
	set_func_flags(0X11C18,0x410);
	SetType(0X11C18, "BOOLEAN AppleCP_IsExist();");
	set_frame_size(0X11C18, 0, 4, 0);
	add_func    (0X11C3C,0X11D90);
	set_func_flags(0X11C3C,0x418);
	SetType(0X11C3C, "INT32S __cdecl AppleCP_Read_AuthCertData_Nolock(INT8U *pucData, INT32U *pulRealLen, INT32U ulMaxLen);");
	set_frame_size(0X11C3C, 0X824, 4, 0);
	define_local_var(0X11C3C, 0X11D90, "[bp-0X820]", "ulMaxLen");
	define_local_var(0X11C3C, 0X11D90, "[bp-0X81C]", "pulRealLen");
	define_local_var(0X11C3C, 0X11D90, "[bp-0X818]", "pucData");
	define_local_var(0X11C3C, 0X11D90, "[bp-0X814]", "tAppleCPCtrl");
	define_local_var(0X11C3C, 0X11D90, "[bp-0XC]", "ulLen");
	define_local_var(0X11C3C, 0X11D90, "[bp-0X8]", "slRtn");
	set_name(0X11D78, "exit", SN_LOCAL);
	add_func    (0X11D94,0X11DE4);
	set_func_flags(0X11D94,0x410);
	SetType(0X11D94, "INT32S __cdecl AppleCP_Read_AuthCertData(INT8U *pucData, INT32U *pulRealLen, INT32U ulMaxLen);");
	set_frame_size(0X11D94, 0X1C, 4, 0);
	define_local_var(0X11D94, 0X11DE4, "[bp-0X18]", "ulMaxLen");
	define_local_var(0X11D94, 0X11DE4, "[bp-0X14]", "pulRealLen");
	define_local_var(0X11D94, 0X11DE4, "[bp-0X10]", "pucData");
	define_local_var(0X11D94, 0X11DE4, "[bp-0X8]", "slRtn");
	add_func    (0X11DE8,0X121CC);
	set_func_flags(0X11DE8,0x418);
	SetType(0X11DE8, "INT32S __cdecl AppleCP_Req_Challenge_Response_Nolock(INT8U *pucChallengeData, INT32U ulChallengeLen, INT8U *pucResponseData, INT32U *pulResponseRealLen, INT32U ulResponseMaxLen);");
	set_frame_size(0X11DE8, 0X834, 4, 0);
	define_local_var(0X11DE8, 0X121CC, "[bp-0X82C]", "pulResponseRealLen");
	define_local_var(0X11DE8, 0X121CC, "[bp-0X828]", "pucResponseData");
	define_local_var(0X11DE8, 0X121CC, "[bp-0X824]", "ulChallengeLen");
	define_local_var(0X11DE8, 0X121CC, "[bp-0X820]", "pucChallengeData");
	define_local_var(0X11DE8, 0X121CC, "[bp-0X81C]", "tAppleCPCtrl");
	define_local_var(0X11DE8, 0X121CC, "[bp-0X14]", "ulLen");
	define_local_var(0X11DE8, 0X121CC, "[bp-0X10]", "slRtn");
	define_local_var(0X11DE8, 0X121CC, "[bp-0XC]", "ulWaitCnt");
	define_local_var(0X11DE8, 0X121CC, "[bp-0X5]", "ucProcResult");
	define_local_var(0X11DE8, 0X121CC, "[bp+0X4]", "ulResponseMaxLen");
	set_name(0X121B4, "exit", SN_LOCAL);
	add_func    (0X121D4,0X12234);
	set_func_flags(0X121D4,0x410);
	SetType(0X121D4, "INT32S __cdecl AppleCP_Req_Challenge_Response(INT8U *pucChallengeData, INT32U ulChallengeLen, INT8U *pucResponseData, INT32U *pulResponseRealLen, INT32U ulResponseMaxLen);");
	set_frame_size(0X121D4, 0X24, 4, 0);
	define_local_var(0X121D4, 0X12234, "[bp-0X1C]", "pulResponseRealLen");
	define_local_var(0X121D4, 0X12234, "[bp-0X18]", "pucResponseData");
	define_local_var(0X121D4, 0X12234, "[bp-0X14]", "ulChallengeLen");
	define_local_var(0X121D4, 0X12234, "[bp-0X10]", "pucChallengeData");
	define_local_var(0X121D4, 0X12234, "[bp-0X8]", "slRtn");
	define_local_var(0X121D4, 0X12234, "[bp+0X4]", "ulResponseMaxLen");
	add_func    (0X12238,0X127D0);
	set_func_flags(0X12238,0x418);
	SetType(0X12238, "void __cdecl Iap2_Link_Init(T_Iap2LinkStruct *ptLink, BOOLEAN bFirst);");
	set_frame_size(0X12238, 0X14, 4, 0);
	define_local_var(0X12238, 0X127D0, "[bp-0X11]", "bFirst");
	define_local_var(0X12238, 0X127D0, "[bp-0X10]", "ptLink");
	define_local_var(0X12238, 0X127D0, "[bp-0X8]", "i");
	add_func    (0X12814,0X12848);
	set_func_flags(0X12814,0x418);
	SetType(0X12814, "void __cdecl INIT_LIST_HEAD(list_head_0 *list);");
	set_frame_size(0X12814, 0XC, 4, 0);
	define_local_var(0X12814, 0X12848, "[bp-0X8]", "list");
	add_func    (0X12848,0X128C0);
	set_func_flags(0X12848,0x418);
	SetType(0X12848, "void Iap2_Link_lockall();");
	set_frame_size(0X12848, 0XC, 4, 0);
	define_local_var(0X12848, 0X128C0, "[bp-0X8]", "i");
	add_func    (0X128D0,0X12948);
	set_func_flags(0X128D0,0x418);
	SetType(0X128D0, "void Iap2_Link_unlockall();");
	set_frame_size(0X128D0, 0XC, 4, 0);
	define_local_var(0X128D0, 0X12948, "[bp-0X8]", "i");
	add_func    (0X12958,0X129C4);
	set_func_flags(0X12958,0x418);
	SetType(0X12958, "void __cdecl Iap2_Link_Start(T_Iap2LinkStruct *ptLink);");
	set_frame_size(0X12958, 0XC, 4, 0);
	define_local_var(0X12958, 0X129C4, "[bp-0X8]", "ptLink");
	add_func    (0X129D0,0X12A40);
	set_func_flags(0X129D0,0x418);
	SetType(0X129D0, "void __cdecl Iap2_Link_Stop(T_Iap2LinkStruct *ptLink);");
	set_frame_size(0X129D0, 0XC, 4, 0);
	define_local_var(0X129D0, 0X12A40, "[bp-0X8]", "ptLink");
	add_func    (0X12A4C,0X12A88);
	set_func_flags(0X12A4C,0x418);
	SetType(0X12A4C, "void __cdecl Iap2_Link_SendInitSeq(T_Iap2LinkStruct *ptLink);");
	set_frame_size(0X12A4C, 0XC, 4, 0);
	define_local_var(0X12A4C, 0X12A88, "[bp-0X8]", "ptLink");
	add_func    (0X12A8C,0X12AC4);
	set_func_flags(0X12A8C,0x418);
	SetType(0X12A8C, "void __cdecl Iap2_Link_SendNoSupportSeq(T_Iap2LinkStruct *ptLink);");
	set_frame_size(0X12A8C, 0XC, 4, 0);
	define_local_var(0X12A8C, 0X12AC4, "[bp-0X8]", "ptLink");
	add_func    (0X12AC8,0X12BA8);
	set_func_flags(0X12AC8,0x418);
	SetType(0X12AC8, "void __cdecl Iap2_Link_SendLostAck(T_Iap2LinkStruct *ptLink, INT8U ucAckSeq);");
	set_frame_size(0X12AC8, 0X824, 4, 0);
	define_local_var(0X12AC8, 0X12BA8, "[bp-0X821]", "ucAckSeq");
	define_local_var(0X12AC8, 0X12BA8, "[bp-0X820]", "ptLink");
	define_local_var(0X12AC8, 0X12BA8, "[bp-0X818]", "aucBuff");
	define_local_var(0X12AC8, 0X12BA8, "[bp-0XC]", "ulLen");
	define_local_var(0X12AC8, 0X12BA8, "[bp-0X8]", "ptHeader");
	add_func    (0X12BA8,0X12DB8);
	set_func_flags(0X12BA8,0x418);
	SetType(0X12BA8, "void __cdecl Iap2_Link_SendCommonAck(T_Iap2LinkStruct *ptLink);");
	set_frame_size(0X12BA8, 0X83C, 4, 0);
	define_local_var(0X12BA8, 0X12DB8, "[bp-0X838]", "ptLink");
	define_local_var(0X12BA8, 0X12DB8, "[bp-0X830]", "aucBuff");
	define_local_var(0X12BA8, 0X12DB8, "[bp-0X24]", "ptHeader");
	define_local_var(0X12BA8, 0X12DB8, "[bp-0X20]", "pucData");
	define_local_var(0X12BA8, 0X12DB8, "[bp-0X1C]", "pucCur");
	define_local_var(0X12BA8, 0X12DB8, "[bp-0X18]", "ulDataLen");
	define_local_var(0X12BA8, 0X12DB8, "[bp-0X14]", "ulPktLen");
	define_local_var(0X12BA8, 0X12DB8, "[bp-0X10]", "ptPkt");
	define_local_var(0X12BA8, 0X12DB8, "[bp-0XC]", "ptTempPkt");
	define_local_var(0X12BA8, 0X12DB8, "[bp-0X8]", "ptPktHeader");
	add_func    (0X12DB8,0X12F38);
	set_func_flags(0X12DB8,0x418);
	SetType(0X12DB8, "void __cdecl Iap2_Link_SendEak(T_Iap2LinkStruct *ptLink, INT8U ucSeq);");
	set_frame_size(0X12DB8, 0X82C, 4, 0);
	define_local_var(0X12DB8, 0X12F38, "[bp-0X829]", "ucSeq");
	define_local_var(0X12DB8, 0X12F38, "[bp-0X828]", "ptLink");
	define_local_var(0X12DB8, 0X12F38, "[bp-0X824]", "aucBuff");
	define_local_var(0X12DB8, 0X12F38, "[bp-0X18]", "ptHeader");
	define_local_var(0X12DB8, 0X12F38, "[bp-0X14]", "pucData");
	define_local_var(0X12DB8, 0X12F38, "[bp-0X10]", "pucCur");
	define_local_var(0X12DB8, 0X12F38, "[bp-0XC]", "ulDataLen");
	define_local_var(0X12DB8, 0X12F38, "[bp-0X8]", "ulPktLen");
	add_func    (0X12F38,0X133B0);
	set_func_flags(0X12F38,0x418);
	SetType(0X12F38, "void __cdecl Iap2_Link_SendSync(T_Iap2LinkStruct *ptLink);");
	set_frame_size(0X12F38, 0X24, 4, 0);
	define_local_var(0X12F38, 0X133B0, "[bp-0X20]", "ptLink");
	define_local_var(0X12F38, 0X133B0, "[bp-0X18]", "ptHeader");
	define_local_var(0X12F38, 0X133B0, "[bp-0X14]", "pucData");
	define_local_var(0X12F38, 0X133B0, "[bp-0X10]", "pucCur");
	define_local_var(0X12F38, 0X133B0, "[bp-0XC]", "i");
	define_local_var(0X12F38, 0X133B0, "[bp-0X8]", "ptPkt");
	add_func    (0X133B8,0X133EC);
	set_func_flags(0X133B8,0x418);
	SetType(0X133B8, "void __cdecl list_add_tail(list_head_0 *new, list_head_0 *head);");
	set_frame_size(0X133B8, 0XC, 4, 0);
	define_local_var(0X133B8, 0X133EC, "[bp-0XC]", "head");
	define_local_var(0X133B8, 0X133EC, "[bp-0X8]", "new");
	add_func    (0X133EC,0X13440);
	set_func_flags(0X133EC,0x418);
	SetType(0X133EC, "void __cdecl _list_add(list_head_0 *new, list_head_0 *prev, list_head_0 *next);");
	set_frame_size(0X133EC, 0X14, 4, 0);
	define_local_var(0X133EC, 0X13440, "[bp-0X10]", "next");
	define_local_var(0X133EC, 0X13440, "[bp-0XC]", "prev");
	define_local_var(0X133EC, 0X13440, "[bp-0X8]", "new");
	add_func    (0X13440,0X13500);
	set_func_flags(0X13440,0x418);
	SetType(0X13440, "INT8U __cdecl Iap2_Link_GetSendSessionIDByType(T_Iap2LinkStruct *ptLink, INT8U ucType);");
	set_frame_size(0X13440, 0X1C, 4, 0);
	define_local_var(0X13440, 0X13500, "[bp-0X11]", "ucType");
	define_local_var(0X13440, 0X13500, "[bp-0X10]", "ptLink");
	define_local_var(0X13440, 0X13500, "[bp-0X8]", "i");
	add_func    (0X13504,0X136E8);
	set_func_flags(0X13504,0x418);
	SetType(0X13504, "void __cdecl Iap2_Link_SendDataPkt(T_Iap2LinkStruct *ptLink, T_Iap2PacketStruct *ptPkt);");
	set_frame_size(0X13504, 0X1C, 4, 0);
	define_local_var(0X13504, 0X136E8, "[bp-0X1C]", "ptPkt");
	define_local_var(0X13504, 0X136E8, "[bp-0X18]", "ptLink");
	define_local_var(0X13504, 0X136E8, "[bp-0X10]", "ptHeader");
	define_local_var(0X13504, 0X136E8, "[bp-0XC]", "pucData");
	define_local_var(0X13504, 0X136E8, "[bp-0X8]", "pucCur");
	add_func    (0X136E8,0X137C4);
	set_func_flags(0X136E8,0x418);
	SetType(0X136E8, "void __cdecl Iap2_Link_ResendPkt(T_Iap2LinkStruct *ptLink, T_Iap2PacketStruct *ptPkt);");
	set_frame_size(0X136E8, 0X14, 4, 0);
	define_local_var(0X136E8, 0X137C4, "[bp-0X14]", "ptPkt");
	define_local_var(0X136E8, 0X137C4, "[bp-0X10]", "ptLink");
	define_local_var(0X136E8, 0X137C4, "[bp-0X8]", "ptHeader");
	add_func    (0X137C8,0X13A90);
	set_func_flags(0X137C8,0x418);
	SetType(0X137C8, "INT32S __cdecl Iap2_Link_Sync_Parse(INT8U *pucData, INT32U ulLen, T_Iap2LinkSyncInfoStruct *ptSync);");
	set_frame_size(0X137C8, 0X24, 4, 0);
	define_local_var(0X137C8, 0X13A90, "[bp-0X18]", "ptSync");
	define_local_var(0X137C8, 0X13A90, "[bp-0X14]", "ulLen");
	define_local_var(0X137C8, 0X13A90, "[bp-0X10]", "pucData");
	define_local_var(0X137C8, 0X13A90, "[bp-0XC]", "pucCur");
	define_local_var(0X137C8, 0X13A90, "[bp-0X8]", "i");
	add_func    (0X13A94,0X13DC0);
	set_func_flags(0X13A94,0x418);
	SetType(0X13A94, "BOOLEAN __cdecl Iap2_Link_Sync_IsValid(T_Iap2LinkSyncInfoStruct *ptSync);");
	set_frame_size(0X13A94, 0X24, 4, 0);
	define_local_var(0X13A94, 0X13DC0, "[bp-0X18]", "ptSync");
	define_local_var(0X13A94, 0X13DC0, "[bp-0X10]", "i");
	define_local_var(0X13A94, 0X13DC0, "[bp-0XC]", "j");
	define_local_var(0X13A94, 0X13DC0, "[bp-0X6]", "bFindCtrlSession");
	define_local_var(0X13A94, 0X13DC0, "[bp-0X5]", "bFindEASession");
	add_func    (0X13DC0,0X13F04);
	set_func_flags(0X13DC0,0x418);
	SetType(0X13DC0, "void __cdecl Iap2_Link_CheckRecv(T_Iap2LinkStruct *ptLink);");
	set_frame_size(0X13DC0, 0X14, 4, 0);
	define_local_var(0X13DC0, 0X13F04, "[bp-0X10]", "ptLink");
	define_local_var(0X13DC0, 0X13F04, "[bp-0X8]", "ulOffset");
	add_func    (0X13F04,0X13FA0);
	set_func_flags(0X13F04,0x418);
	SetType(0X13F04, "void __cdecl Iap2_Link_DealRecv(T_Iap2LinkStruct *ptLink);");
	set_frame_size(0X13F04, 0XC, 4, 0);
	define_local_var(0X13F04, 0X13FA0, "[bp-0X8]", "ptLink");
	add_func    (0X13FA0,0X14010);
	set_func_flags(0X13FA0,0x418);
	SetType(0X13FA0, "BOOLEAN __cdecl Iap2_Link_IsSyncAckPkt(T_Iap2PacketStruct *ptPkt);");
	set_frame_size(0X13FA0, 0X14, 4, 0);
	define_local_var(0X13FA0, 0X14010, "[bp-0X10]", "ptPkt");
	define_local_var(0X13FA0, 0X14010, "[bp-0X8]", "pHeader");
	add_func    (0X14010,0X14068);
	set_func_flags(0X14010,0x418);
	SetType(0X14010, "BOOLEAN __cdecl Iap2_Link_IsAckPkt(T_Iap2PacketStruct *ptPkt);");
	set_frame_size(0X14010, 0X14, 4, 0);
	define_local_var(0X14010, 0X14068, "[bp-0X10]", "ptPkt");
	define_local_var(0X14010, 0X14068, "[bp-0X8]", "pHeader");
	add_func    (0X14068,0X140CC);
	set_func_flags(0X14068,0x418);
	SetType(0X14068, "BOOLEAN __cdecl Iap2_Link_IsOnlyAckPkt(T_Iap2PacketStruct *ptPkt);");
	set_frame_size(0X14068, 0X14, 4, 0);
	define_local_var(0X14068, 0X140CC, "[bp-0X10]", "ptPkt");
	define_local_var(0X14068, 0X140CC, "[bp-0X8]", "pHeader");
	add_func    (0X140CC,0X14124);
	set_func_flags(0X140CC,0x418);
	SetType(0X140CC, "BOOLEAN __cdecl Iap2_Link_IsEakPkt(T_Iap2PacketStruct *ptPkt);");
	set_frame_size(0X140CC, 0X14, 4, 0);
	define_local_var(0X140CC, 0X14124, "[bp-0X10]", "ptPkt");
	define_local_var(0X140CC, 0X14124, "[bp-0X8]", "pHeader");
	add_func    (0X14124,0X1417C);
	set_func_flags(0X14124,0x418);
	SetType(0X14124, "BOOLEAN __cdecl Iap2_Link_IsRstPkt(T_Iap2PacketStruct *ptPkt);");
	set_frame_size(0X14124, 0X14, 4, 0);
	define_local_var(0X14124, 0X1417C, "[bp-0X10]", "ptPkt");
	define_local_var(0X14124, 0X1417C, "[bp-0X8]", "pHeader");
	add_func    (0X1417C,0X141D4);
	set_func_flags(0X1417C,0x418);
	SetType(0X1417C, "BOOLEAN __cdecl Iap2_Link_IsSusPkt(T_Iap2PacketStruct *ptPkt);");
	set_frame_size(0X1417C, 0X14, 4, 0);
	define_local_var(0X1417C, 0X141D4, "[bp-0X10]", "ptPkt");
	define_local_var(0X1417C, 0X141D4, "[bp-0X8]", "pHeader");
	add_func    (0X141D4,0X14214);
	set_func_flags(0X141D4,0x418);
	SetType(0X141D4, "INT8U __cdecl Iap2_Link_LeftGap(INT8U ucCur, INT8U ucLeft);");
	set_frame_size(0X141D4, 0XC, 4, 0);
	define_local_var(0X141D4, 0X14214, "[bp-0X6]", "ucLeft");
	define_local_var(0X141D4, 0X14214, "[bp-0X5]", "ucCur");
	add_func    (0X14214,0X14254);
	set_func_flags(0X14214,0x418);
	SetType(0X14214, "INT8U __cdecl Iap2_Link_RightGap(INT8U ucCur, INT8U ucRight);");
	set_frame_size(0X14214, 0XC, 4, 0);
	define_local_var(0X14214, 0X14254, "[bp-0X6]", "ucRight");
	define_local_var(0X14214, 0X14254, "[bp-0X5]", "ucCur");
	add_func    (0X14254,0X142B0);
	set_func_flags(0X14254,0x418);
	SetType(0X14254, "BOOLEAN __cdecl Iap2_Link_IsInLeftGap(INT8U ucCur, INT8U ucLeft, INT8U ucGap);");
	set_frame_size(0X14254, 0XC, 4, 0);
	define_local_var(0X14254, 0X142B0, "[bp-0X7]", "ucGap");
	define_local_var(0X14254, 0X142B0, "[bp-0X6]", "ucLeft");
	define_local_var(0X14254, 0X142B0, "[bp-0X5]", "ucCur");
	add_func    (0X142B0,0X1430C);
	set_func_flags(0X142B0,0x418);
	SetType(0X142B0, "BOOLEAN __cdecl Iap2_Link_IsInRightGap(INT8U ucCur, INT8U ucRight, INT8U ucGap);");
	set_frame_size(0X142B0, 0XC, 4, 0);
	define_local_var(0X142B0, 0X1430C, "[bp-0X7]", "ucGap");
	define_local_var(0X142B0, 0X1430C, "[bp-0X6]", "ucRight");
	define_local_var(0X142B0, 0X1430C, "[bp-0X5]", "ucCur");
	add_func    (0X1430C,0X14768);
	set_func_flags(0X1430C,0x418);
	SetType(0X1430C, "void __cdecl Iap2_Link_DealLink(T_Iap2LinkStruct *ptLink);");
	set_frame_size(0X1430C, 0X2C, 4, 0);
	define_local_var(0X1430C, 0X14768, "[bp-0X28]", "ptLink");
	define_local_var(0X1430C, 0X14768, "[bp-0X20]", "pHeader");
	define_local_var(0X1430C, 0X14768, "[bp-0X1C]", "pSendHeader");
	define_local_var(0X1430C, 0X14768, "[bp-0X18]", "ptSendPkt");
	define_local_var(0X1430C, 0X14768, "[bp-0X14]", "ptNextPkt");
	define_local_var(0X1430C, 0X14768, "[bp-0X10]", "ptTempPkt");
	define_local_var(0X1430C, 0X14768, "[bp-0XC]", "j");
	define_local_var(0X1430C, 0X14768, "[bp-0X8]", "pucData");
	add_func    (0X14768,0X1479C);
	set_func_flags(0X14768,0x418);
	SetType(0X14768, "void __cdecl list_del(list_head_0 *entry);");
	set_frame_size(0X14768, 0XC, 4, 0);
	define_local_var(0X14768, 0X1479C, "[bp-0X8]", "entry");
	add_func    (0X1479C,0X147D4);
	set_func_flags(0X1479C,0x418);
	SetType(0X1479C, "void __cdecl _list_del(list_head_0 *prev, list_head_0 *next);");
	set_frame_size(0X1479C, 0XC, 4, 0);
	define_local_var(0X1479C, 0X147D4, "[bp-0XC]", "next");
	define_local_var(0X1479C, 0X147D4, "[bp-0X8]", "prev");
	add_func    (0X147D4,0X14928);
	set_func_flags(0X147D4,0x418);
	SetType(0X147D4, "void __cdecl Iap2_Link_DealLinkInSeqPkt(T_Iap2LinkStruct *ptLink);");
	set_frame_size(0X147D4, 0X1C, 4, 0);
	define_local_var(0X147D4, 0X14928, "[bp-0X18]", "ptLink");
	define_local_var(0X147D4, 0X14928, "[bp-0X10]", "pRecvHeader");
	define_local_var(0X147D4, 0X14928, "[bp-0XC]", "ptRecvPkt");
	define_local_var(0X147D4, 0X14928, "[bp-0X6]", "bFind");
	define_local_var(0X147D4, 0X14928, "[bp-0X5]", "bNeedAck");
	add_func    (0X14928,0X14BE8);
	set_func_flags(0X14928,0x418);
	SetType(0X14928, "T_Iap2PacketStruct *__cdecl Iap2_Link_DealLinkInSeqPkt_Parse(T_Iap2LinkStruct *ptLink, T_Iap2PacketStruct *ptPkt);");
	set_frame_size(0X14928, 0X34, 4, 0);
	define_local_var(0X14928, 0X14BE8, "[bp-0X34]", "ptPkt");
	define_local_var(0X14928, 0X14BE8, "[bp-0X30]", "ptLink");
	define_local_var(0X14928, 0X14BE8, "[bp-0X2C]", "tLinkSyncInfo");
	define_local_var(0X14928, 0X14BE8, "[bp-0X18]", "pHeader");
	define_local_var(0X14928, 0X14BE8, "[bp-0X14]", "ptRtn");
	define_local_var(0X14928, 0X14BE8, "[bp-0X10]", "pucData");
	define_local_var(0X14928, 0X14BE8, "[bp-0XA]", "usEASessionID");
	define_local_var(0X14928, 0X14BE8, "[bp-0X8]", "i");
	add_func    (0X14BF0,0X14D30);
	set_func_flags(0X14BF0,0x418);
	SetType(0X14BF0, "void __cdecl Iap2_Link_DealLinkOutSeqPkt(T_Iap2LinkStruct *ptLink);");
	set_frame_size(0X14BF0, 0X24, 4, 0);
	define_local_var(0X14BF0, 0X14D30, "[bp-0X20]", "ptLink");
	define_local_var(0X14BF0, 0X14D30, "[bp-0X18]", "pHeader");
	define_local_var(0X14BF0, 0X14D30, "[bp-0X14]", "pRecvHeader");
	define_local_var(0X14BF0, 0X14D30, "[bp-0X10]", "ptRecvPkt");
	define_local_var(0X14BF0, 0X14D30, "[bp-0XC]", "ptTempPkt");
	define_local_var(0X14BF0, 0X14D30, "[bp-0X5]", "bFind");
	add_func    (0X14D30,0X14EE0);
	set_func_flags(0X14D30,0x418);
	SetType(0X14D30, "BOOLEAN __cdecl Iap2_Link_IsRecvPktValid(T_Iap2PacketStruct *ptPkt);");
	set_frame_size(0X14D30, 0X14, 4, 0);
	define_local_var(0X14D30, 0X14EE0, "[bp-0X10]", "ptPkt");
	define_local_var(0X14D30, 0X14EE0, "[bp-0XC]", "pHeader");
	define_local_var(0X14D30, 0X14EE0, "[bp-0X5]", "ucTemp");
	add_func    (0X14EE0,0X14F5C);
	set_func_flags(0X14EE0,0x418);
	SetType(0X14EE0, "void __cdecl Iap2_Link_CheckState(T_Iap2LinkStruct *ptLink);");
	set_frame_size(0X14EE0, 0XC, 4, 0);
	define_local_var(0X14EE0, 0X14F5C, "[bp-0X8]", "ptLink");
	add_func    (0X14F5C,0X150DC);
	set_func_flags(0X14F5C,0x418);
	SetType(0X14F5C, "void __cdecl Iap2_Link_CheckSendRecv(T_Iap2LinkStruct *ptLink);");
	set_frame_size(0X14F5C, 0X1C, 4, 0);
	define_local_var(0X14F5C, 0X150DC, "[bp-0X18]", "ptLink");
	define_local_var(0X14F5C, 0X150DC, "[bp-0X10]", "ptPkt");
	define_local_var(0X14F5C, 0X150DC, "[bp-0XC]", "ptTempPkt");
	define_local_var(0X14F5C, 0X150DC, "[bp-0X5]", "ucCumAckMin");
	add_func    (0X150E4,0X15200);
	set_func_flags(0X150E4,0x418);
	SetType(0X150E4, "void __cdecl Iap2_Link_CheckSend(T_Iap2LinkStruct *ptLink);");
	set_frame_size(0X150E4, 0X14, 4, 0);
	define_local_var(0X150E4, 0X15200, "[bp-0X10]", "ptLink");
	define_local_var(0X150E4, 0X15200, "[bp-0XC]", "ptPkt");
	define_local_var(0X150E4, 0X15200, "[bp-0X8]", "i");
	add_func    (0X15204,0X15234);
	set_func_flags(0X15204,0x418);
	SetType(0X15204, "void __cdecl Iap2_Link_Runloop(T_Iap2LinkStruct *ptLink);");
	set_frame_size(0X15204, 0XC, 4, 0);
	define_local_var(0X15204, 0X15234, "[bp-0X8]", "ptLink");
	add_func    (0X15234,0X1524C);
	set_func_flags(0X15234,0x410);
	SetType(0X15234, "void Iap2_Link_PreInit();");
	set_frame_size(0X15234, 0X4, 4, 0);
	add_func    (0X15250,0X152A0);
	set_func_flags(0X15250,0x411);
	SetType(0X15250, "VOID *__cdecl Iap2_Link_Run(VOID *pargs);");
	set_frame_size(0X15250, 0XC, 4, 0);
	define_local_var(0X15250, 0X152A0, "[bp-0X8]", "pargs");
	add_func    (0X152A8,0X15304);
	set_func_flags(0X152A8,0x410);
	SetType(0X152A8, "INT32S __cdecl Iap2_Link_CtrlSession_Recv(T_Iap2PacketStruct **ptPkt);");
	set_frame_size(0X152A8, 0XC, 4, 0);
	define_local_var(0X152A8, 0X15304, "[bp-0X8]", "ptPkt");
	add_func    (0X15308,0X15360);
	set_func_flags(0X15308,0x410);
	SetType(0X15308, "INT32S __cdecl Iap2_Link_CtrlSession_Send(T_Iap2PacketStruct *ptPkt);");
	set_frame_size(0X15308, 0XC, 4, 0);
	define_local_var(0X15308, 0X15360, "[bp-0X8]", "ptPkt");
	add_func    (0X1536C,0X153B0);
	set_func_flags(0X1536C,0x410);
	SetType(0X1536C, "void __cdecl Iap2_Link_Session_ReleaseRecvPkt(T_Iap2PacketStruct *ptPkt);");
	set_frame_size(0X1536C, 0XC, 4, 0);
	define_local_var(0X1536C, 0X153B0, "[bp-0X8]", "ptPkt");
	add_func    (0X153BC,0X15444);
	set_func_flags(0X153BC,0x410);
	SetType(0X153BC, "INT32S __cdecl Iap2_Link_Session_GetSendPkt(T_Iap2PacketStruct **ptPkt);");
	set_frame_size(0X153BC, 0X14, 4, 0);
	define_local_var(0X153BC, 0X15444, "[bp-0X10]", "ptPkt");
	define_local_var(0X153BC, 0X15444, "[bp-0X8]", "slRtn");
	add_func    (0X15450,0X15494);
	set_func_flags(0X15450,0x410);
	SetType(0X15450, "void __cdecl Iap2_Link_Session_ReleaseSendPkt(T_Iap2PacketStruct *ptPkt);");
	set_frame_size(0X15450, 0XC, 4, 0);
	define_local_var(0X15450, 0X15494, "[bp-0X8]", "ptPkt");
	add_func    (0X154A0,0X15590);
	set_func_flags(0X154A0,0x410);
	SetType(0X154A0, "BOOLEAN __cdecl Iap2_Link_EASession_IsConn(INT32U ulID);");
	set_frame_size(0X154A0, 0X14, 4, 0);
	define_local_var(0X154A0, 0X15590, "[bp-0X10]", "ulID");
	define_local_var(0X154A0, 0X15590, "[bp-0X5]", "bRtn");
	add_func    (0X1559C,0X15700);
	set_func_flags(0X1559C,0x410);
	SetType(0X1559C, "INT32S __cdecl Iap2_Link_EASession_Recv(INT32U ulID, T_Iap2PacketStruct **ptPkt);");
	set_frame_size(0X1559C, 0X1C, 4, 0);
	define_local_var(0X1559C, 0X15700, "[bp-0X14]", "ptPkt");
	define_local_var(0X1559C, 0X15700, "[bp-0X10]", "ulID");
	define_local_var(0X1559C, 0X15700, "[bp-0X8]", "slRtn");
	add_func    (0X1570C,0X15A14);
	set_func_flags(0X1570C,0x410);
	SetType(0X1570C, "INT32S __cdecl Iap2_Link_EASession_Send(INT32U ulID, T_Iap2PacketStruct *ptPkt);");
	set_frame_size(0X1570C, 0X1C, 4, 0);
	define_local_var(0X1570C, 0X15A14, "[bp-0X14]", "ptPkt");
	define_local_var(0X1570C, 0X15A14, "[bp-0X10]", "ulID");
	define_local_var(0X1570C, 0X15A14, "[bp-0X8]", "pucData");
	add_func    (0X15A20,0X15AE0);
	set_func_flags(0X15A20,0x410);
	SetType(0X15A20, "INT32S __cdecl Iap2_Link_EASession_Recv_Wrap(INT32U ulID, INT8U *pucData, INT32U ulLen);");
	set_frame_size(0X15A20, 0X24, 4, 0);
	define_local_var(0X15A20, 0X15AE0, "[bp-0X20]", "ulLen");
	define_local_var(0X15A20, 0X15AE0, "[bp-0X1C]", "pucData");
	define_local_var(0X15A20, 0X15AE0, "[bp-0X18]", "ulID");
	define_local_var(0X15A20, 0X15AE0, "[bp-0X10]", "ptPkt");
	define_local_var(0X15A20, 0X15AE0, "[bp-0XC]", "slRtn");
	define_local_var(0X15A20, 0X15AE0, "[bp-0X8]", "ulDataLen");
	set_name(0X15ABC, "exit", SN_LOCAL);
	add_func    (0X15AE4,0X15BEC);
	set_func_flags(0X15AE4,0x410);
	SetType(0X15AE4, "INT32S __cdecl Iap2_Link_EASession_Send_Wrap(INT32U ulID, INT8U *pucData, INT32U ulLen);");
	set_frame_size(0X15AE4, 0X24, 4, 0);
	define_local_var(0X15AE4, 0X15BEC, "[bp-0X20]", "ulLen");
	define_local_var(0X15AE4, 0X15BEC, "[bp-0X1C]", "pucData");
	define_local_var(0X15AE4, 0X15BEC, "[bp-0X18]", "ulID");
	define_local_var(0X15AE4, 0X15BEC, "[bp-0X14]", "ptPkt");
	define_local_var(0X15AE4, 0X15BEC, "[bp-0X10]", "pCur");
	define_local_var(0X15AE4, 0X15BEC, "[bp-0XC]", "pEnd");
	define_local_var(0X15AE4, 0X15BEC, "[bp-0X8]", "ulSend");
	add_func    (0X15BEC,0X15C18);
	set_func_flags(0X15BEC,0x410);
	SetType(0X15BEC, "INT8U *__cdecl Iap2_Pkt_GetDataPtr(T_Iap2PacketStruct *ptPkt);");
	set_frame_size(0X15BEC, 0XC, 4, 0);
	define_local_var(0X15BEC, 0X15C18, "[bp-0X8]", "ptPkt");
	add_func    (0X15C18,0X15C44);
	set_func_flags(0X15C18,0x410);
	SetType(0X15C18, "INT8U *__cdecl Iap2_Pkt_GetEAProDataPtr(T_Iap2PacketStruct *ptPkt);");
	set_frame_size(0X15C18, 0XC, 4, 0);
	define_local_var(0X15C18, 0X15C44, "[bp-0X8]", "ptPkt");
	add_func    (0X15C44,0X16330);
	set_func_flags(0X15C44,0x410);
	SetType(0X15C44, "INT32S __cdecl Iap2_Pkt_Parse(INT8U *pucInBuff, INT32U ulInlen, INT32U *pInOff, T_Iap2PacketStruct *ptPkt);");
	set_frame_size(0X15C44, 0X34, 4, 0);
	define_local_var(0X15C44, 0X16330, "[bp-0X2C]", "ptPkt");
	define_local_var(0X15C44, 0X16330, "[bp-0X28]", "pInOff");
	define_local_var(0X15C44, 0X16330, "[bp-0X24]", "ulInlen");
	define_local_var(0X15C44, 0X16330, "[bp-0X20]", "pucInBuff");
	define_local_var(0X15C44, 0X16330, "[bp-0X1C]", "p");
	define_local_var(0X15C44, 0X16330, "[bp-0X18]", "pInCur");
	define_local_var(0X15C44, 0X16330, "[bp-0X14]", "pInMax");
	define_local_var(0X15C44, 0X16330, "[bp-0XD]", "ucChkSum");
	define_local_var(0X15C44, 0X16330, "[bp-0XC]", "ulNeedCopy");
	define_local_var(0X15C44, 0X16330, "[bp-0X8]", "ulRemaining");
	add_func    (0X16338,0X164D8);
	set_func_flags(0X16338,0x410);
	SetType(0X16338, "void Iap2_Ctrl_Session_App_Launch();");
	set_frame_size(0X16338, 0X1C, 4, 0);
	define_local_var(0X16338, 0X164D8, "[bp-0X18]", "ptSendPkt");
	define_local_var(0X16338, 0X164D8, "[bp-0X14]", "pucSendData");
	define_local_var(0X16338, 0X164D8, "[bp-0X10]", "pucSendCur");
	define_local_var(0X16338, 0X164D8, "[bp-0XC]", "ulParaLen");
	define_local_var(0X16338, 0X164D8, "[bp-0X8]", "ulMsgLen");
	add_func    (0X164DC,0X166EC);
	set_func_flags(0X164DC,0x418);
	SetType(0X164DC, "void Iap2_Ctrl_Session_StartPowerUpdates();");
	set_frame_size(0X164DC, 0X1C, 4, 0);
	define_local_var(0X164DC, 0X166EC, "[bp-0X18]", "ptSendPkt");
	define_local_var(0X164DC, 0X166EC, "[bp-0X14]", "pucSendData");
	define_local_var(0X164DC, 0X166EC, "[bp-0X10]", "pucSendCur");
	define_local_var(0X164DC, 0X166EC, "[bp-0XC]", "ulParaLen");
	define_local_var(0X164DC, 0X166EC, "[bp-0X8]", "ulMsgLen");
	add_func    (0X166F0,0X16948);
	set_func_flags(0X166F0,0x418);
	SetType(0X166F0, "void Iap2_Ctrl_Session_PowerSourceUpdate();");
	set_frame_size(0X166F0, 0X1C, 4, 0);
	define_local_var(0X166F0, 0X16948, "[bp-0X18]", "ptSendPkt");
	define_local_var(0X166F0, 0X16948, "[bp-0X14]", "pucSendData");
	define_local_var(0X166F0, 0X16948, "[bp-0X10]", "pucSendCur");
	define_local_var(0X166F0, 0X16948, "[bp-0XC]", "ulParaLen");
	define_local_var(0X166F0, 0X16948, "[bp-0X8]", "ulMsgLen");
	add_func    (0X1694C,0X16B04);
	set_func_flags(0X1694C,0x418);
	SetType(0X1694C, "void Iap2_Ctrl_Session_Cmd_ReqAuthCert();");
	set_frame_size(0X1694C, 0X1C, 4, 0);
	define_local_var(0X1694C, 0X16B04, "[bp-0X18]", "ulParaLen");
	define_local_var(0X1694C, 0X16B04, "[bp-0X14]", "ptSendPkt");
	define_local_var(0X1694C, 0X16B04, "[bp-0X10]", "pucSendData");
	define_local_var(0X1694C, 0X16B04, "[bp-0XC]", "pucSendCur");
	define_local_var(0X1694C, 0X16B04, "[bp-0X8]", "ulMsgLen");
	add_func    (0X16B08,0X16D24);
	set_func_flags(0X16B08,0x418);
	SetType(0X16B08, "void __cdecl Iap2_Ctrl_Session_Cmd_ReqAuthChaRes(T_Iap2PacketStruct *ptRecvPkt);");
	set_frame_size(0X16B08, 0X3C, 4, 0);
	define_local_var(0X16B08, 0X16D24, "[bp-0X3C]", "ulResponseMaxLen");
	define_local_var(0X16B08, 0X16D24, "[bp-0X30]", "ptRecvPkt");
	define_local_var(0X16B08, 0X16D24, "[bp-0X28]", "ulParaLen");
	define_local_var(0X16B08, 0X16D24, "[bp-0X24]", "ptSendPkt");
	define_local_var(0X16B08, 0X16D24, "[bp-0X20]", "pucRecvData");
	define_local_var(0X16B08, 0X16D24, "[bp-0X1C]", "ulRecvParaLen");
	define_local_var(0X16B08, 0X16D24, "[bp-0X18]", "pucSendData");
	define_local_var(0X16B08, 0X16D24, "[bp-0X14]", "pucSendCur");
	define_local_var(0X16B08, 0X16D24, "[bp-0X10]", "ulMsgLen");
	add_func    (0X16D28,0X18080);
	set_func_flags(0X16D28,0x418);
	SetType(0X16D28, "void Iap2_Ctrl_Session_Cmd_StartIdent();");
	set_frame_size(0X16D28, 0XFC, 4, 0);
	define_local_var(0X16D28, 0X18080, "[bp-0XF4]", "ulVersion");
	define_local_var(0X16D28, 0X18080, "[bp-0XF0]", "acBuff");
	define_local_var(0X16D28, 0X18080, "[bp-0X28]", "ptSendPkt");
	define_local_var(0X16D28, 0X18080, "[bp-0X24]", "pucSendData");
	define_local_var(0X16D28, 0X18080, "[bp-0X20]", "pucSendCur");
	define_local_var(0X16D28, 0X18080, "[bp-0X1C]", "pucSendGroup");
	define_local_var(0X16D28, 0X18080, "[bp-0X18]", "ulParaLen");
	define_local_var(0X16D28, 0X18080, "[bp-0X14]", "ulMsgLen");
	define_local_var(0X16D28, 0X18080, "[bp-0X10]", "ulGroupLen");
	define_local_var(0X16D28, 0X18080, "[bp-0XC]", "slTemp");
	define_local_var(0X16D28, 0X18080, "[bp-0X8]", "p");
	add_func    (0X18080,0X1837C);
	set_func_flags(0X18080,0x418);
	SetType(0X18080, "void __cdecl Iap2_Ctrl_Session_Cmd_StartEAProSession(T_Iap2PacketStruct *ptRecvPkt, T_Iap2LinkStruct *ptLink);");
	set_frame_size(0X18080, 0X2C, 4, 0);
	define_local_var(0X18080, 0X1837C, "[bp-0X24]", "ptLink");
	define_local_var(0X18080, 0X1837C, "[bp-0X20]", "ptRecvPkt");
	define_local_var(0X18080, 0X1837C, "[bp-0X18]", "pucRecvData");
	define_local_var(0X18080, 0X1837C, "[bp-0X14]", "pucRecvDataEnd");
	define_local_var(0X18080, 0X1837C, "[bp-0XE]", "usParaLen");
	define_local_var(0X18080, 0X1837C, "[bp-0XC]", "usParaID");
	define_local_var(0X18080, 0X1837C, "[bp-0X9]", "ucEAProID");
	define_local_var(0X18080, 0X1837C, "[bp-0X8]", "usEAProSessionID");
	define_local_var(0X18080, 0X1837C, "[bp-0X6]", "bFindEAProID");
	define_local_var(0X18080, 0X1837C, "[bp-0X5]", "bFindEAProSessionID");
	add_func    (0X1838C,0X187BC);
	set_func_flags(0X1838C,0x418);
	SetType(0X1838C, "void __cdecl Iap2_Ctrl_Session_Cmd_StopEAProSession(T_Iap2PacketStruct *ptRecvPkt, T_Iap2LinkStruct *ptLink);");
	set_frame_size(0X1838C, 0X34, 4, 0);
	define_local_var(0X1838C, 0X187BC, "[bp-0X2C]", "ptLink");
	define_local_var(0X1838C, 0X187BC, "[bp-0X28]", "ptRecvPkt");
	define_local_var(0X1838C, 0X187BC, "[bp-0X20]", "pucRecvData");
	define_local_var(0X1838C, 0X187BC, "[bp-0X1C]", "pucRecvDataEnd");
	define_local_var(0X1838C, 0X187BC, "[bp-0X16]", "usParaLen");
	define_local_var(0X1838C, 0X187BC, "[bp-0X14]", "usParaID");
	define_local_var(0X1838C, 0X187BC, "[bp-0X12]", "usEAProSessionID");
	define_local_var(0X1838C, 0X187BC, "[bp-0X10]", "i");
	define_local_var(0X1838C, 0X187BC, "[bp-0X9]", "bFindEAProSessionID");
	define_local_var(0X1838C, 0X187BC, "[bp-0X8]", "ptPkt");
	add_func    (0X187CC,0X18A04);
	set_func_flags(0X187CC,0x410);
	SetType(0X187CC, "VOID *__cdecl Iap2_Ctrl_Session_Run(VOID *pargs);");
	set_frame_size(0X187CC, 0X1C, 4, 0);
	define_local_var(0X187CC, 0X18A04, "[bp-0X18]", "pargs");
	define_local_var(0X187CC, 0X18A04, "[bp-0X10]", "ptRecvPkt");
	define_local_var(0X187CC, 0X18A04, "[bp-0XC]", "ptLink");
	define_local_var(0X187CC, 0X18A04, "[bp-0X8]", "pucRecvData");
}

static Functions_1(void) {

	add_func    (0X18A2C,0X18AF4);
	set_func_flags(0X18A2C,0x410);
	SetType(0X18A2C, "INT32S __cdecl Iap2_Ctrl_Session_FastCmd(T_Iap2PacketStruct *ptRecvPkt, T_Iap2LinkStruct *ptLink);");
	set_frame_size(0X18A2C, 0X14, 4, 0);
	define_local_var(0X18A2C, 0X18AF4, "[bp-0X14]", "ptLink");
	define_local_var(0X18A2C, 0X18AF4, "[bp-0X10]", "ptRecvPkt");
	define_local_var(0X18A2C, 0X18AF4, "[bp-0XC]", "pucRecvData");
	define_local_var(0X18A2C, 0X18AF4, "[bp-0X8]", "slRtn");
	add_func    (0X18AFC,0X18BD4);
	set_func_flags(0X18AFC,0x410);
	SetType(0X18AFC, "BOOLEAN Iap2_UsbDeviceTransport_IsConnect();");
	set_frame_size(0X18AFC, 0X1C, 4, 0);
	define_local_var(0X18AFC, 0X18BD4, "[bp-0X14]", "bConnect");
	define_local_var(0X18AFC, 0X18BD4, "[bp-0X10]", "slRtn");
	add_func    (0X18BDC,0X18C70);
	set_func_flags(0X18BDC,0x410);
	SetType(0X18BDC, "INT32S __cdecl Iap2_UsbDeviceTransport_Recv(INT8U *pucData, INT32U *pulRealLen, INT32U ulMaxLen, INT32U *pulState);");
	set_frame_size(0X18BDC, 0X24, 4, 0);
	define_local_var(0X18BDC, 0X18C70, "[bp-0X1C]", "pulState");
	define_local_var(0X18BDC, 0X18C70, "[bp-0X18]", "ulMaxLen");
	define_local_var(0X18BDC, 0X18C70, "[bp-0X14]", "pulRealLen");
	define_local_var(0X18BDC, 0X18C70, "[bp-0X10]", "pucData");
	define_local_var(0X18BDC, 0X18C70, "[bp-0X8]", "slRtn");
	add_func    (0X18C74,0X18CDC);
	set_func_flags(0X18C74,0x410);
	SetType(0X18C74, "INT32S __cdecl Iap2_UsbDeviceTransport_Send(INT8U *pucData, INT32U ulLength);");
	set_frame_size(0X18C74, 0X1C, 4, 0);
	define_local_var(0X18C74, 0X18CDC, "[bp-0X14]", "ulLength");
	define_local_var(0X18C74, 0X18CDC, "[bp-0X10]", "pucData");
	define_local_var(0X18C74, 0X18CDC, "[bp-0X8]", "slRtn");
	add_func    (0X18CE0,0X18D5C);
	set_func_flags(0X18CE0,0x410);
	SetType(0X18CE0, "void __cdecl Iap2_Timer_Init(T_Iap2TimerStruct *pTimer);");
	set_frame_size(0X18CE0, 0X14, 4, 0);
	define_local_var(0X18CE0, 0X18D5C, "[bp-0X10]", "pTimer");
	define_local_var(0X18CE0, 0X18D5C, "[bp-0XC]", "ts");
	add_func    (0X18D60,0X18D88);
	set_func_flags(0X18D60,0x410);
	SetType(0X18D60, "void __cdecl Iap2_Timer_Del(T_Iap2TimerStruct *pTimer);");
	set_frame_size(0X18D60, 0XC, 4, 0);
	define_local_var(0X18D60, 0X18D88, "[bp-0X8]", "pTimer");
	add_func    (0X18D88,0X18E44);
	set_func_flags(0X18D88,0x410);
	SetType(0X18D88, "BOOLEAN __cdecl Iap2_Timer_IsTimeout(T_Iap2TimerStruct *pTimer, INT32U ulTimeout);");
	set_frame_size(0X18D88, 0X24, 4, 0);
	define_local_var(0X18D88, 0X18E44, "[bp-0X1C]", "ulTimeout");
	define_local_var(0X18D88, 0X18E44, "[bp-0X18]", "pTimer");
	define_local_var(0X18D88, 0X18E44, "[bp-0X14]", "ts");
	define_local_var(0X18D88, 0X18E44, "[bp-0XC]", "ulNow");
	define_local_var(0X18D88, 0X18E44, "[bp-0X8]", "slBias");
	add_func    (0X18E48,0X18E70);
	set_func_flags(0X18E48,0x410);
	SetType(0X18E48, "BOOLEAN __cdecl Iap2_Timer_IsValid(T_Iap2TimerStruct *pTimer);");
	set_frame_size(0X18E48, 0XC, 4, 0);
	define_local_var(0X18E48, 0X18E70, "[bp-0X8]", "pTimer");
	add_func    (0X18E70,0X18F00);
	set_func_flags(0X18E70,0x410);
	SetType(0X18E70, "BOOLEAN __cdecl Iap2_Queue_IsFull(T_Iap2QueueStruct *pQueue);");
	set_frame_size(0X18E70, 0X14, 4, 0);
	define_local_var(0X18E70, 0X18F00, "[bp-0X8]", "pQueue");
	add_func    (0X18F04,0X18F54);
	set_func_flags(0X18F04,0x410);
	SetType(0X18F04, "BOOLEAN __cdecl Iap2_Queue_IsEmpty(T_Iap2QueueStruct *pQueue);");
	set_frame_size(0X18F04, 0XC, 4, 0);
	define_local_var(0X18F04, 0X18F54, "[bp-0X8]", "pQueue");
	add_func    (0X18F54,0X18FE8);
	set_func_flags(0X18F54,0x410);
	SetType(0X18F54, "INT32S __cdecl Iap2_Queue_Put(T_Iap2QueueStruct *pQueue, VOID *pData);");
	set_frame_size(0X18F54, 0X14, 4, 0);
	define_local_var(0X18F54, 0X18FE8, "[bp-0XC]", "pData");
	define_local_var(0X18F54, 0X18FE8, "[bp-0X8]", "pQueue");
	add_func    (0X18FE8,0X19078);
	set_func_flags(0X18FE8,0x410);
	SetType(0X18FE8, "VOID *__cdecl Iap2_Queue_Get(T_Iap2QueueStruct *pQueue);");
	set_frame_size(0X18FE8, 0X14, 4, 0);
	define_local_var(0X18FE8, 0X19078, "[bp-0X10]", "pQueue");
	define_local_var(0X18FE8, 0X19078, "[bp-0X8]", "pret");
	add_func    (0X19078,0X19100);
	set_func_flags(0X19078,0x410);
	SetType(0X19078, "INT8U __cdecl Iap2_CalChecksum(INT8U *pucData, INT32U ulLen);");
	set_frame_size(0X19078, 0X1C, 4, 0);
	define_local_var(0X19078, 0X19100, "[bp-0X1C]", "ulLen");
	define_local_var(0X19078, 0X19100, "[bp-0X18]", "pucData");
	define_local_var(0X19078, 0X19100, "[bp-0XD]", "ucChecksum");
	define_local_var(0X19078, 0X19100, "[bp-0XC]", "pucStart");
	define_local_var(0X19078, 0X19100, "[bp-0X8]", "pucEnd");
	add_func    (0X19100,0X1939C);
	set_func_flags(0X19100,0x410);
	SetType(0X19100, "void Usbupdate_SavePara();");
	set_frame_size(0X19100, 0X14, 4, 0);
	define_local_var(0X19100, 0X1939C, "[bp-0X10]", "pacParaFile");
	define_local_var(0X19100, 0X1939C, "[bp-0X8]", "i");
	add_func    (0X193B0,0X194AC);
	set_func_flags(0X193B0,0x418);
	SetType(0X193B0, "INT32S Usbupdate_RestorePara();");
	set_frame_size(0X193B0, 0X1C, 4, 0);
	define_local_var(0X193B0, 0X194AC, "[bp-0X14]", "pacParaFile");
	define_local_var(0X193B0, 0X194AC, "[bp-0XC]", "i");
	define_local_var(0X193B0, 0X194AC, "[bp-0X6]", "usCrc16Cal");
	add_func    (0X194BC,0X194F0);
	set_func_flags(0X194BC,0x418);
	SetType(0X194BC, "void __cdecl Usbupdate_Start_NoWait(T_FirmwareAttrSruct *pFirmwareAttr);");
	set_frame_size(0X194BC, 0XC, 4, 0);
	define_local_var(0X194BC, 0X194F0, "[bp-0X8]", "pFirmwareAttr");
	add_func    (0X194F0,0X195D0);
	set_func_flags(0X194F0,0x418);
	SetType(0X194F0, "T_FirmwareDescStruct *__cdecl Usbupdate_GetFirmwareDesc_ByID(INT8U ucID);");
	set_frame_size(0X194F0, 0X14, 4, 0);
	define_local_var(0X194F0, 0X195D0, "[bp-0XD]", "ucID");
	define_local_var(0X194F0, 0X195D0, "[bp-0XC]", "pFirmwareDesc");
	define_local_var(0X194F0, 0X195D0, "[bp-0X8]", "i");
	add_func    (0X195D8,0X19684);
	set_func_flags(0X195D8,0x418);
	SetType(0X195D8, "T_FirmwareDescStruct *__cdecl Usbupdate_GetFirmwareDesc_ByLoader(T_FirmwareAttrSruct *pFirmwareAttr);");
	set_frame_size(0X195D8, 0X24, 4, 0);
	define_local_var(0X195D8, 0X19684, "[bp-0X20]", "pFirmwareAttr");
	define_local_var(0X195D8, 0X19684, "[bp-0X19]", "bSupportDowngrade");
	define_local_var(0X195D8, 0X19684, "[bp-0X18]", "ulFirmwareVersion");
	define_local_var(0X195D8, 0X19684, "[bp-0X14]", "ulLoaderVersion");
	define_local_var(0X195D8, 0X19684, "[bp-0XD]", "ucID");
	add_func    (0X19684,0X196D8);
	set_func_flags(0X19684,0x418);
	SetType(0X19684, "T_DJIProtocolDataStruct *__cdecl Usbupdate_GetDJIProtocolHandle(T_FirmwareAttrSruct *pFirmwareAttr);");
	set_frame_size(0X19684, 0XC, 4, 0);
	define_local_var(0X19684, 0X196D8, "[bp-0X8]", "pFirmwareAttr");
	add_func    (0X196DC,0X19780);
	set_func_flags(0X196DC,0x418);
	SetType(0X196DC, "INT32S __cdecl Usbupdate_GetCurrentVersion_Common(T_FirmwareAttrSruct *pFirmwareAttr, INT32U *pulLoaderVersion, INT32U *pulFirmwareVersion, BOOLEAN *pbSupportDowngrade);");
	set_frame_size(0X196DC, 0X2C, 4, 0);
	define_local_var(0X196DC, 0X19780, "[bp-0X1C]", "pbSupportDowngrade");
	define_local_var(0X196DC, 0X19780, "[bp-0X18]", "pulFirmwareVersion");
	define_local_var(0X196DC, 0X19780, "[bp-0X14]", "pulLoaderVersion");
	define_local_var(0X196DC, 0X19780, "[bp-0X10]", "pFirmwareAttr");
	define_local_var(0X196DC, 0X19780, "[bp-0X8]", "i");
	add_func    (0X19780,0X197E4);
	set_func_flags(0X19780,0x418);
	SetType(0X19780, "INT32S __cdecl Usbupdate_GetCurrentVersion_DM368(T_FirmwareAttrSruct *pFirmwareAttr, INT32U *pulLoaderVersion, INT32U *pulFirmwareVersion, BOOLEAN *pbSupportDowngrade);");
	set_frame_size(0X19780, 0X14, 4, 0);
	define_local_var(0X19780, 0X197E4, "[bp-0X14]", "pbSupportDowngrade");
	define_local_var(0X19780, 0X197E4, "[bp-0X10]", "pulFirmwareVersion");
	define_local_var(0X19780, 0X197E4, "[bp-0XC]", "pulLoaderVersion");
	define_local_var(0X19780, 0X197E4, "[bp-0X8]", "pFirmwareAttr");
	add_func    (0X197E4,0X19828);
	set_func_flags(0X197E4,0x410);
	SetType(0X197E4, "void Usbupdate_SetDM368UpdateFlag();");
	set_frame_size(0X197E4, 0X804, 4, 0);
	define_local_var(0X197E4, 0X19828, "[bp-0X804]", "aucBuff");
	add_func    (0X19834,0X19878);
	set_func_flags(0X19834,0x410);
	SetType(0X19834, "void Usbupdate_ClearDM368UpdateFlag();");
	set_frame_size(0X19834, 0X804, 4, 0);
	define_local_var(0X19834, 0X19878, "[bp-0X804]", "aucBuff");
	add_func    (0X19884,0X19910);
	set_func_flags(0X19884,0x418);
	SetType(0X19884, "INT32S __cdecl Usbupdate_Update_DM368(T_FirmwareAttrSruct *pFirmwareAttr, T_UpdateAttrStruct *pUpdateAttr);");
	set_frame_size(0X19884, 0XE4, 4, 0);
	define_local_var(0X19884, 0X19910, "[bp-0XDC]", "pUpdateAttr");
	define_local_var(0X19884, 0X19910, "[bp-0XD8]", "pFirmwareAttr");
	define_local_var(0X19884, 0X19910, "[bp-0XD0]", "aucBuff");
	define_local_var(0X19884, 0X19910, "[bp-0X8]", "slRtn");
	add_func    (0X19924,0X1998C);
	set_func_flags(0X19924,0x418);
	SetType(0X19924, "INT32S __cdecl Usbupdate_GetCurrentVersion_68013(T_FirmwareAttrSruct *pFirmwareAttr, INT32U *pulLoaderVersion, INT32U *pulFirmwareVersion, BOOLEAN *pbSupportDowngrade);");
	set_frame_size(0X19924, 0X14, 4, 0);
	define_local_var(0X19924, 0X1998C, "[bp-0X14]", "pbSupportDowngrade");
	define_local_var(0X19924, 0X1998C, "[bp-0X10]", "pulFirmwareVersion");
	define_local_var(0X19924, 0X1998C, "[bp-0XC]", "pulLoaderVersion");
	define_local_var(0X19924, 0X1998C, "[bp-0X8]", "pFirmwareAttr");
	add_func    (0X1998C,0X19B6C);
	set_func_flags(0X1998C,0x418);
	SetType(0X1998C, "INT32S __cdecl Usbupdate_Update_68013(T_FirmwareAttrSruct *pFirmwareAttr, T_UpdateAttrStruct *pUpdateAttr);");
	set_frame_size(0X1998C, 0XF4, 4, 0);
	define_local_var(0X1998C, 0X19B6C, "[bp-0XF4]", "pUpdateAttr");
	define_local_var(0X1998C, 0X19B6C, "[bp-0XF0]", "pFirmwareAttr");
	define_local_var(0X1998C, 0X19B6C, "[bp-0XE5]", "bSupportDowngrade");
	define_local_var(0X1998C, 0X19B6C, "[bp-0XE4]", "ulFirmwareVersion");
	define_local_var(0X1998C, 0X19B6C, "[bp-0XE0]", "ulLoaderVersion");
	define_local_var(0X1998C, 0X19B6C, "[bp-0XDC]", "aucBuff");
	define_local_var(0X1998C, 0X19B6C, "[bp-0X14]", "slRtn");
	define_local_var(0X1998C, 0X19B6C, "[bp-0XD]", "ucID");
	add_func    (0X19B84,0X1A574);
	set_func_flags(0X19B84,0x418);
	SetType(0X19B84, "INT32S __cdecl Usbupdate_Update_Common(T_FirmwareAttrSruct *pFirmwareAttr, T_UpdateAttrStruct *pUpdateAttr);");
	set_frame_size(0X19B84, 0X684, 4, 0);
	define_local_var(0X19B84, 0X1A574, "[bp-0X684]", "ulDelayTimeMs");
	define_local_var(0X19B84, 0X1A574, "[bp-0X680]", "pusPktLen");
	define_local_var(0X19B84, 0X1A574, "[bp-0X67C]", "pSendData");
	define_local_var(0X19B84, 0X1A574, "[bp-0X678]", "pulRecvSn");
	define_local_var(0X19B84, 0X1A574, "[bp-0X674]", "pErrVal");
	define_local_var(0X19B84, 0X1A574, "[bp-0X664]", "pUpdateAttr");
	define_local_var(0X19B84, 0X1A574, "[bp-0X660]", "pFirmwareAttr");
	define_local_var(0X19B84, 0X1A574, "[bp-0X656]", "acStr");
	define_local_var(0X19B84, 0X1A574, "[bp-0X256]", "ucAck");
	define_local_var(0X19B84, 0X1A574, "[bp-0X255]", "aucMD5");
	define_local_var(0X19B84, 0X1A574, "[bp-0X245]", "ucErr");
	define_local_var(0X19B84, 0X1A574, "[bp-0X244]", "aucBuff");
	define_local_var(0X19B84, 0X1A574, "[bp-0X44]", "ulRecvSn");
	define_local_var(0X19B84, 0X1A574, "[bp-0X40]", "usPktLen");
	define_local_var(0X19B84, 0X1A574, "[bp-0X3D]", "bIsLoader");
	define_local_var(0X19B84, 0X1A574, "[bp-0X3C]", "slFd");
	define_local_var(0X19B84, 0X1A574, "[bp-0X38]", "i");
	define_local_var(0X19B84, 0X1A574, "[bp-0X34]", "slRetryTimes");
	define_local_var(0X19B84, 0X1A574, "[bp-0X30]", "slRetryMax");
	define_local_var(0X19B84, 0X1A574, "[bp-0X2C]", "slRtn");
	define_local_var(0X19B84, 0X1A574, "[bp-0X28]", "slFileLen");
	define_local_var(0X19B84, 0X1A574, "[bp-0X24]", "ulPktSn");
	define_local_var(0X19B84, 0X1A574, "[bp-0X20]", "ulOffset");
	define_local_var(0X19B84, 0X1A574, "[bp-0X1C]", "slReadLen");
	define_local_var(0X19B84, 0X1A574, "[bp-0X18]", "slTemp");
	define_local_var(0X19B84, 0X1A574, "[bp-0X14]", "iLast");
	define_local_var(0X19B84, 0X1A574, "[bp-0X10]", "iCur");
	set_name(0X1A47C, "exit", SN_LOCAL);
	add_func    (0X1A5F8,0X1A6EC);
	set_func_flags(0X1A5F8,0x418);
	SetType(0X1A5F8, "INT32S __cdecl Usbupdate_CalFPGACheckSum(CHAR *pcFile, INT16U *pusChk);");
	set_frame_size(0X1A5F8, 0X224, 4, 0);
	define_local_var(0X1A5F8, 0X1A6EC, "[bp-0X21C]", "pusChk");
	define_local_var(0X1A5F8, 0X1A6EC, "[bp-0X218]", "pcFile");
	define_local_var(0X1A5F8, 0X1A6EC, "[bp-0X214]", "aucBuff");
	define_local_var(0X1A5F8, 0X1A6EC, "[bp-0X14]", "fd");
	define_local_var(0X1A5F8, 0X1A6EC, "[bp-0X10]", "ret");
	define_local_var(0X1A5F8, 0X1A6EC, "[bp-0XC]", "i");
	define_local_var(0X1A5F8, 0X1A6EC, "[bp-0X6]", "uscrc");
	add_func    (0X1A6F0,0X1AECC);
	set_func_flags(0X1A6F0,0x418);
	SetType(0X1A6F0, "INT32S __cdecl Usbupdate_Update_FPGA(T_FirmwareAttrSruct *pFirmwareAttr, T_UpdateAttrStruct *pUpdateAttr);");
	set_frame_size(0X1A6F0, 0X66C, 4, 0);
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X66C]", "ulDelayTimeMs");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X668]", "pusPktLen");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X65C]", "pUpdateAttr");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X658]", "pFirmwareAttr");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X64D]", "acStr");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X24D]", "ucAck");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X24C]", "aucMD5");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X23C]", "aucBuff");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X3C]", "usPktLen");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X39]", "bIsLoader");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X38]", "slFd");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X34]", "i");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X30]", "slRetryTimes");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X2C]", "slRtn");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X28]", "slFileLen");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X24]", "slReadLen");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X20]", "slTemp");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X19]", "bSendFirst");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X18]", "ulTotal");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X14]", "iLast");
	define_local_var(0X1A6F0, 0X1AECC, "[bp-0X10]", "iCur");
	set_name(0X1ADD0, "exit", SN_LOCAL);
	add_func    (0X1AF38,0X1AF90);
	set_func_flags(0X1AF38,0x410);
	SetType(0X1AF38, "INT32S __cdecl Usbupdate_RegisterChannel(INT32U ulChannel, T_DJIProtocolDataStruct *ptChannel);");
	set_frame_size(0X1AF38, 0X14, 4, 0);
	define_local_var(0X1AF38, 0X1AF90, "[bp-0XC]", "ptChannel");
	define_local_var(0X1AF38, 0X1AF90, "[bp-0X8]", "ulChannel");
	add_func    (0X1AF94,0X1B000);
	set_func_flags(0X1AF94,0x410);
	SetType(0X1AF94, "int UsbInit();");
	set_frame_size(0X1AF94, 0XD4, 4, 0);
	define_local_var(0X1AF94, 0X1B000, "[bp-0XD0]", "aucBuff");
	define_local_var(0X1AF94, 0X1B000, "[bp-0X8]", "ret");
	add_func    (0X1B010,0X1B064);
	set_func_flags(0X1B010,0x410);
	SetType(0X1B010, "void UsbDel();");
	set_frame_size(0X1B010, 0XCC, 4, 0);
	define_local_var(0X1B010, 0X1B064, "[bp-0XCC]", "aucBuff");
	add_func    (0X1B070,0X1B0B4);
	set_func_flags(0X1B070,0x418);
	SetType(0X1B070, "int IfUsbStorageExist();");
	set_frame_size(0X1B070, 0XC, 4, 0);
	add_func    (0X1B0B8,0X1B1F4);
	set_func_flags(0X1B0B8,0x410);
	SetType(0X1B0B8, "int IfUsbPartitionsExist();");
	set_frame_size(0X1B0B8, 0XDC, 4, 0);
	define_local_var(0X1B0B8, 0X1B1F4, "[bp-0XD4]", "aucBuff");
	define_local_var(0X1B0B8, 0X1B1F4, "[bp-0XC]", "pFile");
	define_local_var(0X1B0B8, 0X1B1F4, "[bp-0X8]", "findsda");
	add_func    (0X1B210,0X1B24C);
	set_func_flags(0X1B210,0x410);
	SetType(0X1B210, "void Usbupdate_InitResultFile();");
	set_frame_size(0X1B210, 0X804, 4, 0);
	define_local_var(0X1B210, 0X1B24C, "[bp-0X804]", "aucBuff");
	add_func    (0X1B254,0X1B29C);
	set_func_flags(0X1B254,0x410);
	SetType(0X1B254, "void __cdecl Usbupdate_PrintResultFile(CHAR *pcStr);");
	set_frame_size(0X1B254, 0X80C, 4, 0);
	define_local_var(0X1B254, 0X1B29C, "[bp-0X808]", "pcStr");
	define_local_var(0X1B254, 0X1B29C, "[bp-0X804]", "aucBuff");
	add_func    (0X1B2A4,0X1B2EC);
	set_func_flags(0X1B2A4,0x410);
	SetType(0X1B2A4, "void Usbupdate_SaveResultFile();");
	set_frame_size(0X1B2A4, 0X804, 4, 0);
	define_local_var(0X1B2A4, 0X1B2EC, "[bp-0X804]", "aucBuff");
	add_func    (0X1B2FC,0X1B368);
	set_func_flags(0X1B2FC,0x410);
	SetType(0X1B2FC, "void Usbupdate_InitLog();");
	set_frame_size(0X1B2FC, 0X81C, 4, 0);
	define_local_var(0X1B2FC, 0X1B368, "[bp-0X814]", "tTime");
	define_local_var(0X1B2FC, 0X1B368, "[bp-0X80C]", "aucBuff");
	add_func    (0X1B370,0X1B3E8);
	set_func_flags(0X1B370,0x410);
	SetType(0X1B370, "void __cdecl Usbupdate_PrintLog(CHAR *pcStr);");
	set_frame_size(0X1B370, 0X824, 4, 0);
	define_local_var(0X1B370, 0X1B3E8, "[bp-0X818]", "pcStr");
	define_local_var(0X1B370, 0X1B3E8, "[bp-0X814]", "tTime");
	define_local_var(0X1B370, 0X1B3E8, "[bp-0X80C]", "aucBuff");
	add_func    (0X1B3F0,0X1B438);
	set_func_flags(0X1B3F0,0x410);
	SetType(0X1B3F0, "void Usbupdate_SaveLog();");
	set_frame_size(0X1B3F0, 0X804, 4, 0);
	define_local_var(0X1B3F0, 0X1B438, "[bp-0X804]", "aucBuff");
	add_func    (0X1B448,0X1B4E0);
	set_func_flags(0X1B448,0x418);
	SetType(0X1B448, "void Usbupdatecheck_RemoveLocalFile();");
	set_frame_size(0X1B448, 0X80C, 4, 0);
	define_local_var(0X1B448, 0X1B4E0, "[bp-0X808]", "aucBuff");
	define_local_var(0X1B448, 0X1B4E0, "[bp-0X8]", "i");
	add_func    (0X1B4E8,0X1B52C);
	set_func_flags(0X1B4E8,0x418);
	SetType(0X1B4E8, "BOOLEAN Usbupdatecheck_IsDebugMode();");
	set_frame_size(0X1B4E8, 0XC, 4, 0);
	add_func    (0X1B530,0X1B604);
	set_func_flags(0X1B530,0x418);
	SetType(0X1B530, "BOOLEAN __cdecl Usbupdate_IsFileExtension(CHAR *pcFile, CHAR *pcExtension);");
	set_frame_size(0X1B530, 0X1C, 4, 0);
	define_local_var(0X1B530, 0X1B604, "[bp-0X14]", "pcExtension");
	define_local_var(0X1B530, 0X1B604, "[bp-0X10]", "pcFile");
	define_local_var(0X1B530, 0X1B604, "[bp-0XC]", "i");
	define_local_var(0X1B530, 0X1B604, "[bp-0X8]", "slLength");
	add_func    (0X1B604,0X1B82C);
	set_func_flags(0X1B604,0x418);
	SetType(0X1B604, "INT32S __cdecl Usbupdate_ParseEncFile(CHAR *pcFileIn, INT8U ucID, CHAR *pcFileOut, T_EncHeaderStruct *ptHeader);");
	set_frame_size(0X1B604, 0X44, 4, 0);
	define_local_var(0X1B604, 0X1B82C, "[bp-0X3C]", "ptHeader");
	define_local_var(0X1B604, 0X1B82C, "[bp-0X38]", "pcFileOut");
	define_local_var(0X1B604, 0X1B82C, "[bp-0X31]", "ucID");
	define_local_var(0X1B604, 0X1B82C, "[bp-0X30]", "pcFileIn");
	define_local_var(0X1B604, 0X1B82C, "[bp-0X2C]", "aucMD5");
	define_local_var(0X1B604, 0X1B82C, "[bp-0X1C]", "slFd");
	define_local_var(0X1B604, 0X1B82C, "[bp-0X18]", "slFileLen");
	define_local_var(0X1B604, 0X1B82C, "[bp-0X14]", "slTemp");
	define_local_var(0X1B604, 0X1B82C, "[bp-0X10]", "slRtn");
	define_local_var(0X1B604, 0X1B82C, "[bp-0XC]", "pucData");
	define_local_var(0X1B604, 0X1B82C, "[bp-0X6]", "usCalCrc");
	set_name(0X1B804, "exit2", SN_LOCAL);
	set_name(0X1B80C, "exit1", SN_LOCAL);
	add_func    (0X1B830,0X1BB7C);
	set_func_flags(0X1B830,0x418);
	SetType(0X1B830, "void __cdecl Usbupdatecheck_Search_Fw(CHAR *pcDir, CHAR *pPrefix, T_FwPacketNameStruct *pcFwFile, INT32U ulFwFileMax, INT32U *pulFwNums, INT32U *pulMaxVersionIndex);");
	set_frame_size(0X1B830, 0X30C, 4, 0);
	define_local_var(0X1B830, 0X1BB7C, "[bp-0X2FC]", "ulFwFileMax");
	define_local_var(0X1B830, 0X1BB7C, "[bp-0X2F8]", "pcFwFile");
	define_local_var(0X1B830, 0X1BB7C, "[bp-0X2F4]", "pPrefix");
	define_local_var(0X1B830, 0X1BB7C, "[bp-0X2F0]", "pcDir");
	define_local_var(0X1B830, 0X1BB7C, "[bp-0X2E8]", "acSscanf");
	define_local_var(0X1B830, 0X1BB7C, "[bp-0X220]", "acFullName");
	define_local_var(0X1B830, 0X1BB7C, "[bp-0X158]", "ulCurVersion");
	define_local_var(0X1B830, 0X1BB7C, "[bp-0X154]", "aucSuffix");
	define_local_var(0X1B830, 0X1BB7C, "[bp-0XF0]", "aucAttr");
	define_local_var(0X1B830, 0X1BB7C, "[bp-0X8C]", "aulData");
	define_local_var(0X1B830, 0X1BB7C, "[bp-0X7C]", "statbuf");
	define_local_var(0X1B830, 0X1BB7C, "[bp-0X24]", "pDir");
	define_local_var(0X1B830, 0X1BB7C, "[bp-0X20]", "pEntry");
	define_local_var(0X1B830, 0X1BB7C, "[bp-0X1C]", "slTemp");
	define_local_var(0X1B830, 0X1BB7C, "[bp-0X18]", "ulMaxVersion");
	define_local_var(0X1B830, 0X1BB7C, "[bp-0X14]", "p");
	define_local_var(0X1B830, 0X1BB7C, "[bp-0XE]", "usEditVersion");
	define_local_var(0X1B830, 0X1BB7C, "[bp+0X4]", "pulFwNums");
	define_local_var(0X1B830, 0X1BB7C, "[bp+0X8]", "pulMaxVersionIndex");
	add_func    (0X1BB8C,0X1BDD4);
	set_func_flags(0X1BB8C,0x418);
	SetType(0X1BB8C, "INT32S __cdecl Usbupdatecheck_Create_Single_Fw(CHAR *pcFwFile, T_FirmwareDescStruct *pFirmwareDesc, CHAR *pcCreateFile);");
	set_frame_size(0X1BB8C, 0X22C, 4, 0);
	define_local_var(0X1BB8C, 0X1BDD4, "[bp-0X228]", "pcCreateFile");
	define_local_var(0X1BB8C, 0X1BDD4, "[bp-0X224]", "pFirmwareDesc");
	define_local_var(0X1BB8C, 0X1BDD4, "[bp-0X220]", "pcFwFile");
	define_local_var(0X1BB8C, 0X1BDD4, "[bp-0X21C]", "aucBuff");
	define_local_var(0X1BB8C, 0X1BDD4, "[bp-0X1C]", "slFd");
	define_local_var(0X1BB8C, 0X1BDD4, "[bp-0X18]", "slFdCreate");
	define_local_var(0X1BB8C, 0X1BDD4, "[bp-0X14]", "slTemp");
	define_local_var(0X1BB8C, 0X1BDD4, "[bp-0X10]", "slReadLen");
	define_local_var(0X1BB8C, 0X1BDD4, "[bp-0XC]", "slWriteLen");
	define_local_var(0X1BB8C, 0X1BDD4, "[bp-0X8]", "slRtn");
	set_name(0X1BDA4, "exit2", SN_LOCAL);
	set_name(0X1BDAC, "exit1", SN_LOCAL);
	add_func    (0X1BDE0,0X1BEC0);
	set_func_flags(0X1BDE0,0x410);
	SetType(0X1BDE0, "INT32S __cdecl Usbupdatecheck_CreateAndCheck_Single_Fw(CHAR *pcFwFile, T_FirmwareDescStruct *pFirmwareDesc, CHAR *pcCreateFile);");
	set_frame_size(0X1BDE0, 0XF4, 4, 0);
	define_local_var(0X1BDE0, 0X1BEC0, "[bp-0XF0]", "pcCreateFile");
	define_local_var(0X1BDE0, 0X1BEC0, "[bp-0XEC]", "pFirmwareDesc");
	define_local_var(0X1BDE0, 0X1BEC0, "[bp-0XE8]", "pcFwFile");
	define_local_var(0X1BDE0, 0X1BEC0, "[bp-0XE0]", "aucMD5");
	define_local_var(0X1BDE0, 0X1BEC0, "[bp-0XD0]", "aucBuff");
	define_local_var(0X1BDE0, 0X1BEC0, "[bp-0X8]", "i");
	set_name(0X1BE88, "err", SN_LOCAL);
	add_func    (0X1BEC4,0X1C880);
	set_func_flags(0X1BEC4,0x418);
	SetType(0X1BEC4, "INT32S __cdecl Usbupdatecheck_Parse_FwFileHead(T_FwPacketNameStruct *pcFile, T_HeaderStruct *ptHead);");
	set_frame_size(0X1BEC4, 0X3C, 4, 0);
	define_local_var(0X1BEC4, 0X1C880, "[bp-0X34]", "ptHead");
	define_local_var(0X1BEC4, 0X1C880, "[bp-0X30]", "pcFile");
	define_local_var(0X1BEC4, 0X1C880, "[bp-0X2A]", "usCrc");
	define_local_var(0X1BEC4, 0X1C880, "[bp-0X28]", "slFd");
	define_local_var(0X1BEC4, 0X1C880, "[bp-0X24]", "slFileLen");
	define_local_var(0X1BEC4, 0X1C880, "[bp-0X20]", "slTemp");
	define_local_var(0X1BEC4, 0X1C880, "[bp-0X1C]", "slRtn");
	define_local_var(0X1BEC4, 0X1C880, "[bp-0X18]", "pucData");
	define_local_var(0X1BEC4, 0X1C880, "[bp-0X14]", "pucCur");
	define_local_var(0X1BEC4, 0X1C880, "[bp-0XE]", "usCalCrc");
	define_local_var(0X1BEC4, 0X1C880, "[bp-0XC]", "i");
	define_local_var(0X1BEC4, 0X1C880, "[bp-0X8]", "ulTemp");
	set_name(0X1C858, "exit2", SN_LOCAL);
	set_name(0X1C860, "exit1", SN_LOCAL);
	add_func    (0X1C8A0,0X1C97C);
	set_func_flags(0X1C8A0,0x418);
	SetType(0X1C8A0, "void __cdecl Usbupdatecheck_PrintResult_FwPacket(T_FwPacketNameStruct *pcFwFile, INT32U ulFwFileNums);");
	set_frame_size(0X1C8A0, 0X814, 4, 0);
	define_local_var(0X1C8A0, 0X1C97C, "[bp-0X814]", "ulFwFileNums");
	define_local_var(0X1C8A0, 0X1C97C, "[bp-0X810]", "pcFwFile");
	define_local_var(0X1C8A0, 0X1C97C, "[bp-0X808]", "aucBuff");
	define_local_var(0X1C8A0, 0X1C97C, "[bp-0X8]", "i");
	add_func    (0X1C984,0X1C9A0);
	set_func_flags(0X1C984,0x410);
	SetType(0X1C984, "void Usbupdatecheck_PrintResult_Forbid();");
	set_frame_size(0X1C984, 0X4, 4, 0);
	add_func    (0X1C9A8,0X1C9C4);
	set_func_flags(0X1C9A8,0x410);
	SetType(0X1C9A8, "void Usbupdatecheck_PrintResult_Corrupted();");
	set_frame_size(0X1C9A8, 0X4, 4, 0);
	add_func    (0X1C9CC,0X1C9E8);
	set_func_flags(0X1C9CC,0x410);
	SetType(0X1C9CC, "void Usbupdatecheck_PrintResult_Abort();");
	set_frame_size(0X1C9CC, 0X4, 4, 0);
	add_func    (0X1C9F0,0X1CA0C);
	set_func_flags(0X1C9F0,0x410);
	SetType(0X1C9F0, "void Usbupdatecheck_PrintResult_Error();");
	set_frame_size(0X1C9F0, 0X4, 4, 0);
	add_func    (0X1CA14,0X1CA30);
	set_func_flags(0X1CA14,0x410);
	SetType(0X1CA14, "void Usbupdatecheck_PrintResult_Prohibited();");
	set_frame_size(0X1CA14, 0X4, 4, 0);
	add_func    (0X1CA38,0X1CA54);
	set_func_flags(0X1CA38,0x410);
	SetType(0X1CA38, "void Usbupdatecheck_PrintResult_Downgrade_Abort();");
	set_frame_size(0X1CA38, 0X4, 4, 0);
	add_func    (0X1CA5C,0X1CA78);
	set_func_flags(0X1CA5C,0x410);
	SetType(0X1CA5C, "void Usbupdatecheck_PrintResult_Success();");
	set_frame_size(0X1CA5C, 0X4, 4, 0);
	add_func    (0X1CA80,0X1CAA4);
	set_func_flags(0X1CA80,0x410);
	SetType(0X1CA80, "void Usbupdatecheck_PrintResult_Failed();");
	set_frame_size(0X1CA80, 0X4, 4, 0);
	add_func    (0X1CAB0,0X1CBF0);
	set_func_flags(0X1CAB0,0x418);
	SetType(0X1CAB0, "void Usbupdate_ResetFirmwareAttr();");
	set_frame_size(0X1CAB0, 0XC, 4, 0);
	define_local_var(0X1CAB0, 0X1CBF0, "[bp-0X8]", "i");
	add_func    (0X1CBF4,0X1D2D0);
	set_func_flags(0X1CBF4,0x418);
	SetType(0X1CBF4, "void __cdecl Usbupdatecheck_FwFile_ByIndex(INT32U ulIndex);");
	set_frame_size(0X1CBF4, 0X34, 4, 0);
	define_local_var(0X1CBF4, 0X1D2D0, "[bp-0X28]", "ulIndex");
	define_local_var(0X1CBF4, 0X1D2D0, "[bp-0X1D]", "bSupportDowngrade");
	define_local_var(0X1CBF4, 0X1D2D0, "[bp-0X1C]", "ulAppVersion");
	define_local_var(0X1CBF4, 0X1D2D0, "[bp-0X18]", "ulLoaderVersion");
	define_local_var(0X1CBF4, 0X1D2D0, "[bp-0X14]", "ulVersion");
	define_local_var(0X1CBF4, 0X1D2D0, "[bp-0X10]", "i");
	add_func    (0X1D2D8,0X1D324);
	set_func_flags(0X1D2D8,0x418);
	SetType(0X1D2D8, "INT32S Usbupdatecheck_FwFile();");
	set_frame_size(0X1D2D8, 0XC, 4, 0);
	define_local_var(0X1D2D8, 0X1D324, "[bp-0X8]", "i");
	add_func    (0X1D324,0X1D498);
	set_func_flags(0X1D324,0x418);
	SetType(0X1D324, "INT32S Usbupdatecheck_SingleFile();");
	set_frame_size(0X1D324, 0X1C, 4, 0);
	define_local_var(0X1D324, 0X1D498, "[bp-0X19]", "bSupportDowngrade");
	define_local_var(0X1D324, 0X1D498, "[bp-0X18]", "ulAppVersion");
	define_local_var(0X1D324, 0X1D498, "[bp-0X14]", "ulLoaderVersion");
	define_local_var(0X1D324, 0X1D498, "[bp-0X10]", "i");
	add_func    (0X1D49C,0X1D888);
	set_func_flags(0X1D49C,0x418);
	SetType(0X1D49C, "INT32S Usbupdate_CheckType();");
	set_frame_size(0X1D49C, 0X1C, 4, 0);
	define_local_var(0X1D49C, 0X1D888, "[bp-0X8]", "ulEditVersion");
	add_func    (0X1D8BC,0X1D8DC);
	set_func_flags(0X1D8BC,0x418);
	SetType(0X1D8BC, "INT32U Usbupdate_GetType();");
	set_frame_size(0X1D8BC, 0, 4, 0);
	add_func    (0X1D8E0,0X1DB24);
	set_func_flags(0X1D8E0,0x418);
	SetType(0X1D8E0, "INT32S Usbupdate_InitFile();");
	set_frame_size(0X1D8E0, 0X81C, 4, 0);
	define_local_var(0X1D8E0, 0X1DB24, "[bp-0X81C]", "pulFwNums");
	define_local_var(0X1D8E0, 0X1DB24, "[bp-0X818]", "pulMaxVersionIndex");
	define_local_var(0X1D8E0, 0X1DB24, "[bp-0X809]", "aucBuff");
	define_local_var(0X1D8E0, 0X1DB24, "[bp-0X9]", "bFind");
	define_local_var(0X1D8E0, 0X1DB24, "[bp-0X8]", "i");
	set_name(0X1DB04, "exit", SN_LOCAL);
	add_func    (0X1DB54,0X1DDEC);
	set_func_flags(0X1DB54,0x410);
	SetType(0X1DB54, "INT32S Usbupdatecheck_CheckFile();");
	set_frame_size(0X1DB54, 0X14, 4, 0);
	define_local_var(0X1DB54, 0X1DDEC, "[bp-0XB]", "bError");
	define_local_var(0X1DB54, 0X1DDEC, "[bp-0XA]", "bNoNeedUpdate");
	define_local_var(0X1DB54, 0X1DDEC, "[bp-0X9]", "bNeedUpdate");
	define_local_var(0X1DB54, 0X1DDEC, "[bp-0X8]", "i");
	add_func    (0X1DE08,0X1DE34);
	set_func_flags(0X1DE08,0x418);
	SetType(0X1DE08, "BOOLEAN Usbupdate_Is_FwPacket();");
	set_frame_size(0X1DE08, 0, 4, 0);
	add_func    (0X1DE38,0X1E8C8);
	set_func_flags(0X1DE38,0x410);
	SetType(0X1DE38, "INT32S Usbupdate_Deal_All();");
	set_frame_size(0X1DE38, 0X84C, 4, 0);
	define_local_var(0X1DE38, 0X1E8C8, "[bp-0X83D]", "tEncHeader");
	define_local_var(0X1DE38, 0X1E8C8, "[bp-0X814]", "aucBuff");
	define_local_var(0X1DE38, 0X1E8C8, "[bp-0X14]", "i");
	define_local_var(0X1DE38, 0X1E8C8, "[bp-0XD]", "bFinish");
	add_func    (0X1E8F4,0X1EA00);
	set_func_flags(0X1E8F4,0x410);
	SetType(0X1E8F4, "INT32S Usbupdate_Check_Result();");
	set_frame_size(0X1E8F4, 0X14, 4, 0);
	define_local_var(0X1E8F4, 0X1EA00, "[bp-0X8]", "i");
	add_func    (0X1EA04,0X1EA4C);
	set_func_flags(0X1EA04,0x410);
	SetType(0X1EA04, "INT32S __cdecl Para_Get(E_ParaTypeEnum eType, INT32S *pPara);");
	set_frame_size(0X1EA04, 0XC, 4, 0);
	define_local_var(0X1EA04, 0X1EA4C, "[bp-0XC]", "pPara");
	define_local_var(0X1EA04, 0X1EA4C, "[bp-0X8]", "eType");
	add_func    (0X1EA54,0X1EB58);
	set_func_flags(0X1EA54,0x410);
	SetType(0X1EA54, "INT32S __cdecl Para_Set(E_ParaTypeEnum eType, INT32S *pPara);");
	set_frame_size(0X1EA54, 0X1C, 4, 0);
	define_local_var(0X1EA54, 0X1EB58, "[bp-0X14]", "pPara");
	define_local_var(0X1EA54, 0X1EB58, "[bp-0X10]", "eType");
	define_local_var(0X1EA54, 0X1EB58, "[bp-0X5]", "bNeedSave");
	add_func    (0X1EB64,0X1EC00);
	set_func_flags(0X1EB64,0x410);
	SetType(0X1EB64, "void Para_Init();");
	set_frame_size(0X1EB64, 0X14, 4, 0);
	define_local_var(0X1EB64, 0X1EC00, "[bp-0X10]", "pacParaFile");
	define_local_var(0X1EB64, 0X1EC00, "[bp-0X8]", "i");
	add_func    (0X1EC0C,0X1EC7C);
	set_func_flags(0X1EC0C,0x418);
	SetType(0X1EC0C, "void Para_Load_Default();");
	set_frame_size(0X1EC0C, 0XC, 4, 0);
	define_local_var(0X1EC0C, 0X1EC7C, "[bp-0X8]", "i");
	add_func    (0X1EC84,0X1ECB8);
	set_func_flags(0X1EC84,0x418);
	SetType(0X1EC84, "void Para_Save();");
	set_frame_size(0X1EC84, 0X4, 4, 0);
	add_func    (0X1ECC8,0X1ED90);
	set_func_flags(0X1ECC8,0x418);
	SetType(0X1ECC8, "INT32S Para_Check_All();");
	set_frame_size(0X1ECC8, 0X14, 4, 0);
	define_local_var(0X1ECC8, 0X1ED90, "[bp-0X8]", "i");
	add_func    (0X1ED98,0X1F630);
	set_func_flags(0X1ED98,0x410);
	set_frame_size(0X1ED98, 0X44, 4, 0);
	add_func    (0X1F630,0X1F65C);
	set_func_flags(0X1F630,0x410);
	set_frame_size(0X1F630, 0XC, 4, 0);
	add_func    (0X1F65C,0X1FA94);
	set_func_flags(0X1F65C,0x410);
	set_frame_size(0X1F65C, 0X2C, 4, 0);
	add_func    (0X1FA98,0X1FB10);
	set_func_flags(0X1FA98,0x410);
	set_frame_size(0X1FA98, 0XC, 4, 0);
	add_func    (0X1FB20,0X21574);
	set_func_flags(0X1FB20,0x410);
	set_frame_size(0X1FB20, 0X2C, 4, 0);
	add_func    (0X21574,0X2368C);
	set_func_flags(0X21574,0x410);
	set_frame_size(0X21574, 0X6C, 4, 0);
	add_func    (0X2368C,0X23F54);
	set_func_flags(0X2368C,0x410);
	set_frame_size(0X2368C, 0X24, 4, 0);
	add_func    (0X23F68,0X24488);
	set_func_flags(0X23F68,0x410);
	set_frame_size(0X23F68, 0X2C, 4, 0);
	add_func    (0X2449C,0X24CEC);
	set_func_flags(0X2449C,0x410);
	set_frame_size(0X2449C, 0X3C, 4, 0);
	add_func    (0X24CFC,0X2554C);
	set_func_flags(0X24CFC,0x410);
	set_frame_size(0X24CFC, 0X3C, 4, 0);
	add_func    (0X25560,0X25A38);
	set_func_flags(0X25560,0x410);
	SetType(0X25560, "int AES_cbc_encrypt(void *dest, int);");
	set_frame_size(0X25560, 0X34, 4, 0);
	define_local_var(0X25560, 0X25A38, "[bp-0X8]", "src");
	define_local_var(0X25560, 0X25A38, "[bp+0X4]", "dest");
	add_func    (0X25A38,0X25C24);
	set_func_flags(0X25A38,0x400);
	add_func    (0X25C24,0X25C44);
	set_func_flags(0X25C24,0x400);
	add_func    (0X25C44,0X25C88);
	set_func_flags(0X25C44,0x400);
	set_frame_size(0X25C44, 0X10, 0, 0);
	add_func    (0X25C88,0X25C98);
	set_func_flags(0X25C88,0x400);
	set_frame_size(0X25C88, 0X8, 0, 0);
	add_func    (0X25C98,0X25CD4);
	set_func_flags(0X25C98,0x400);
	set_frame_size(0X25C98, 0X20, 0, 0);
	add_func    (0X25CD4,0X25D10);
	set_func_flags(0X25CD4,0x400);
	set_frame_size(0X25CD4, 0X20, 0, 0);
	add_func    (0X25D10,0X262A8);
	set_func_flags(0X25D10,0x400);
	set_frame_size(0X25D10, 0X38, 0, 0);
	add_func    (0X262B0,0X267D0);
	set_func_flags(0X262B0,0x400);
	set_frame_size(0X262B0, 0X38, 0, 0);
	add_func    (0X267D8,0X267E8);
	set_func_flags(0X267D8,0x400);
	SetType(0X267D8, "int __fastcall stat_0(char *filename, struct stat *stat_buf);");
	add_func    (0X267E8,0X267F0);
	set_func_flags(0X267E8,0x400);
	set_frame_size(0X267E8, 0X8, 0, 0);
	add_func    (0X85AF0,0X85AF4);
	set_func_flags(0X85AF0,0x400);
	SetType(0X85AF0, "int open(const char *file, int oflag, ...);");
	add_func    (0X85AF4,0X85AF8);
	set_func_flags(0X85AF4,0x400);
	add_func    (0X85AF8,0X85AFC);
	set_func_flags(0X85AF8,0x400);
	SetType(0X85AF8, "int sigemptyset(sigset_t *set);");
	add_func    (0X85AFC,0X85B00);
	set_func_flags(0X85AFC,0x400);
	SetType(0X85AFC, "int connect(int fd, const struct sockaddr *addr, socklen_t len);");
	add_func    (0X85B00,0X85B04);
	set_func_flags(0X85B00,0x400);
	SetType(0X85B00, "void srand(unsigned int seed);");
	add_func    (0X85B04,0X85B08);
	set_func_flags(0X85B04,0x400);
	add_func    (0X85B08,0X85B0C);
	set_func_flags(0X85B08,0x400);
	SetType(0X85B08, "struct tm *localtime(const time_t *timer);");
	add_func    (0X85B0C,0X85B10);
	set_func_flags(0X85B0C,0x400);
	SetType(0X85B0C, "DIR *opendir(const char *name);");
	add_func    (0X85B10,0X85B14);
	set_func_flags(0X85B10,0x400);
	SetType(0X85B10, "int memcmp(const void *s1, const void *s2, size_t n);");
	add_func    (0X85B14,0X85B18);
	set_func_flags(0X85B14,0x400);
	SetType(0X85B14, "int pthread_attr_setdetachstate(pthread_attr_t *attr, int detachstate);");
	add_func    (0X85B18,0X85B1C);
	set_func_flags(0X85B18,0x400);
	SetType(0X85B18, "int clock_gettime(clockid_t clock_id, struct timespec *tp);");
	add_func    (0X85B1C,0X85B20);
	set_func_flags(0X85B1C,0x400);
	SetType(0X85B1C, "int __xstat(int ver, const char *filename, struct stat *stat_buf);");
	add_func    (0X85B20,0X85B24);
	set_func_flags(0X85B20,0x400);
	add_func    (0X85B24,0X85B28);
	set_func_flags(0X85B24,0x400);
	SetType(0X85B24, "__sighandler_t signal(int sig, __sighandler_t handler);");
	add_func    (0X85B28,0X85B2C);
	set_func_flags(0X85B28,0x400);
	SetType(0X85B28, "int msgget(key_t key, int msgflg);");
	add_func    (0X85B2C,0X85B30);
	set_func_flags(0X85B2C,0x400);
	SetType(0X85B2C, "int pthread_attr_setschedpolicy(pthread_attr_t *attr, int policy);");
	add_func    (0X85B30,0X85B34);
	set_func_flags(0X85B30,0x400);
	add_func    (0X85B34,0X85B38);
	set_func_flags(0X85B34,0x400);
	add_func    (0X85B38,0X85B3C);
	set_func_flags(0X85B38,0x400);
	SetType(0X85B38, "in_addr_t inet_addr(const char *cp);");
	add_func    (0X85B3C,0X85B40);
	set_func_flags(0X85B3C,0x400);
	SetType(0X85B3C, "int fclose(FILE *stream);");
	add_func    (0X85B40,0X85B44);
	set_func_flags(0X85B40,0x400);
	SetType(0X85B40, "char *fgets(char *s, int n, FILE *stream);");
	add_func    (0X85B44,0X85B48);
	set_func_flags(0X85B44,0x400);
	SetType(0X85B44, "ssize_t recv(int fd, void *buf, size_t n, int flags);");
	add_func    (0X85B48,0X85B4C);
	set_func_flags(0X85B48,0x400);
	add_func    (0X85B4C,0X85B50);
	set_func_flags(0X85B4C,0x400);
	SetType(0X85B4C, "int system(const char *command);");
	add_func    (0X85B50,0X85B54);
	set_func_flags(0X85B50,0x400);
	SetType(0X85B50, "char *strchr(const char *s, int c);");
	add_func    (0X85B54,0X85B58);
	set_func_flags(0X85B54,0x400);
	SetType(0X85B54, "int putchar(int c);");
	add_func    (0X85B58,0X85B5C);
	set_func_flags(0X85B58,0x400);
	SetType(0X85B58, "int pclose(FILE *stream);");
	add_func    (0X85B5C,0X85B60);
	set_func_flags(0X85B5C,0x400);
	SetType(0X85B5C, "ssize_t sendto(int fd, const void *buf, size_t n, int flags, const struct sockaddr *addr, socklen_t addr_len);");
	add_func    (0X85B60,0X85B64);
	set_func_flags(0X85B60,0x400);
	SetType(0X85B60, "uint16_t htons(uint16_t hostshort);");
	add_func    (0X85B64,0X85B68);
	set_func_flags(0X85B64,0x400);
	SetType(0X85B64, "FILE *fopen(const char *filename, const char *modes);");
	add_func    (0X85B68,0X85B6C);
	set_func_flags(0X85B68,0x400);
	SetType(0X85B68, "int sched_get_priority_max(int algorithm);");
	add_func    (0X85B6C,0X85B70);
	set_func_flags(0X85B6C,0x400);
	SetType(0X85B6C, "time_t mktime(struct tm *tp);");
	add_func    (0X85B70,0X85B74);
	set_func_flags(0X85B70,0x400);
	SetType(0X85B70, "void *memset(void *s, int c, size_t n);");
	add_func    (0X85B74,0X85B78);
	set_func_flags(0X85B74,0x400);
	SetType(0X85B74, "int pthread_cond_timedwait(pthread_cond_t *cond, pthread_mutex_t *mutex, const struct timespec *abstime);");
	add_func    (0X85B78,0X85B7C);
	set_func_flags(0X85B78,0x400);
	SetType(0X85B78, "int pthread_attr_setschedparam(pthread_attr_t *attr, const struct sched_param *param);");
	add_func    (0X85B7C,0X85B80);
	set_func_flags(0X85B7C,0x401);
	SetType(0X85B7C, "void __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function);");
	add_func    (0X85B80,0X85B84);
	set_func_flags(0X85B80,0x400);
	SetType(0X85B80, "uint32_t ntohl(uint32_t netlong);");
	add_func    (0X85B84,0X85B88);
	set_func_flags(0X85B84,0x400);
	SetType(0X85B84, "int usleep(__useconds_t useconds);");
	add_func    (0X85B88,0X85B8C);
	set_func_flags(0X85B88,0x400);
	SetType(0X85B88, "int msgsnd(int msqid, const void *msgp, size_t msgsz, int msgflg);");
	add_func    (0X85B8C,0X85B90);
	set_func_flags(0X85B8C,0x400);
	SetType(0X85B8C, "int tcdrain(int fd);");
	add_func    (0X85B90,0X85B94);
	set_func_flags(0X85B90,0x400);
	SetType(0X85B90, "void free(void *ptr);");
	add_func    (0X85B94,0X85B98);
	set_func_flags(0X85B94,0x400);
	SetType(0X85B94, "ssize_t read(int fd, void *buf, size_t nbytes);");
	add_func    (0X85B98,0X85B9C);
	set_func_flags(0X85B98,0x400);
	SetType(0X85B98, "ssize_t write(int fd, const void *buf, size_t n);");
	add_func    (0X85B9C,0X85BA0);
	set_func_flags(0X85B9C,0x400);
	SetType(0X85B9C, "int gettimeofday(struct timeval *tv, __timezone_ptr_t tz);");
	add_func    (0X85BA0,0X85BA4);
	set_func_flags(0X85BA0,0x400);
	SetType(0X85BA0, "int tcgetattr(int fd, struct termios *termios_p);");
	add_func    (0X85BA4,0X85BA8);
	set_func_flags(0X85BA4,0x400);
	SetType(0X85BA4, "int pthread_mutex_unlock(pthread_mutex_t *mutex);");
	add_func    (0X85BA8,0X85BAC);
	set_func_flags(0X85BA8,0x400);
	SetType(0X85BA8, "int tcflush(int fd, int queue_selector);");
	add_func    (0X85BAC,0X85BB0);
	set_func_flags(0X85BAC,0x400);
	SetType(0X85BAC, "int socket(int domain, int type, int protocol);");
	add_func    (0X85BB0,0X85BB4);
	set_func_flags(0X85BB0,0x400);
	SetType(0X85BB0, "int ioctl(int fd, unsigned int request, ...);");
	add_func    (0X85BB4,0X85BB8);
	set_func_flags(0X85BB4,0x400);
	SetType(0X85BB4, "uint16_t ntohs(uint16_t netshort);");
	add_func    (0X85BB8,0X85BBC);
	set_func_flags(0X85BB8,0x400);
	SetType(0X85BB8, "int pthread_mutexattr_destroy(pthread_mutexattr_t *attr);");
	add_func    (0X85BBC,0X85BC0);
	set_func_flags(0X85BBC,0x400);
	add_func    (0X85BC0,0X85BC4);
	set_func_flags(0X85BC0,0x400);
	SetType(0X85BC0, "int pthread_mutex_lock(pthread_mutex_t *mutex);");
	add_func    (0X85BC4,0X85BC8);
	set_func_flags(0X85BC4,0x400);
	SetType(0X85BC4, "size_t strlen(const char *s);");
	add_func    (0X85BC8,0X85BCC);
	set_func_flags(0X85BC8,0x400);
	SetType(0X85BC8, "int sscanf(const char *s, const char *format, ...);");
	add_func    (0X85BCC,0X85BD0);
	set_func_flags(0X85BCC,0x400);
	add_func    (0X85BD0,0X85BD4);
	set_func_flags(0X85BD0,0x400);
	SetType(0X85BD0, "int pthread_create(pthread_t *newthread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);");
	add_func    (0X85BD4,0X85BD8);
	set_func_flags(0X85BD4,0x400);
	SetType(0X85BD4, "void *memcpy(void *dest, const void *src, size_t n);");
	add_func    (0X85BD8,0X85BDC);
	set_func_flags(0X85BD8,0x400);
	SetType(0X85BD8, "int pthread_cond_signal(pthread_cond_t *cond);");
	add_func    (0X85BDC,0X85BE0);
	set_func_flags(0X85BDC,0x400);
	SetType(0X85BDC, "int pthread_attr_setinheritsched(pthread_attr_t *attr, int inherit);");
	add_func    (0X85BE0,0X85BE4);
	set_func_flags(0X85BE0,0x400);
	SetType(0X85BE0, "int sigaddset(sigset_t *set, int signo);");
	add_func    (0X85BE4,0X85BE8);
	set_func_flags(0X85BE4,0x400);
	SetType(0X85BE4, "char *strcpy(char *dest, const char *src);");
	add_func    (0X85BE8,0X85BEC);
	set_func_flags(0X85BE8,0x400);
	SetType(0X85BE8, "int pthread_cond_destroy(pthread_cond_t *cond);");
	add_func    (0X85BEC,0X85BF0);
	set_func_flags(0X85BEC,0x400);
	SetType(0X85BEC, "int pthread_sigmask(int how, const __sigset_t *newmask, __sigset_t *oldmask);");
	add_func    (0X85BF0,0X85BF4);
	set_func_flags(0X85BF0,0x400);
	SetType(0X85BF0, "int settimeofday(const struct timeval *tv, const struct timezone *tz);");
	add_func    (0X85BF4,0X85BF8);
	set_func_flags(0X85BF4,0x400);
	SetType(0X85BF4, "int pthread_mutex_destroy(pthread_mutex_t *mutex);");
	add_func    (0X85BF8,0X85BFC);
	set_func_flags(0X85BF8,0x400);
	SetType(0X85BF8, "int printf(const char *format, ...);");
	add_func    (0X85BFC,0X85C00);
	set_func_flags(0X85BFC,0x400);
	SetType(0X85BFC, "int raise(int sig);");
	add_func    (0X85C00,0X85C04);
	set_func_flags(0X85C00,0x400);
	SetType(0X85C00, "int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr);");
	add_func    (0X85C04,0X85C08);
	set_func_flags(0X85C04,0x400);
	add_func    (0X85C08,0X85C0C);
	set_func_flags(0X85C08,0x400);
	SetType(0X85C08, "int bind(int fd, const struct sockaddr *addr, socklen_t len);");
	add_func    (0X85C0C,0X85C10);
	set_func_flags(0X85C0C,0x400);
	SetType(0X85C0C, "char *strstr(const char *haystack, const char *needle);");
	add_func    (0X85C10,0X85C14);
	set_func_flags(0X85C10,0x400);
	SetType(0X85C10, "int select(int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds, struct timeval *timeout);");
	add_func    (0X85C14,0X85C18);
	set_func_flags(0X85C14,0x400);
	SetType(0X85C14, "int close(int fd);");
	add_func    (0X85C18,0X85C1C);
	set_func_flags(0X85C18,0x400);
	SetType(0X85C18, "size_t fwrite(const void *ptr, size_t size, size_t n, FILE *s);");
	add_func    (0X85C1C,0X85C20);
	set_func_flags(0X85C1C,0x400);
	add_func    (0X85C20,0X85C24);
	set_func_flags(0X85C20,0x400);
	SetType(0X85C20, "int closedir(DIR *dirp);");
	add_func    (0X85C24,0X85C28);
	set_func_flags(0X85C24,0x400);
	SetType(0X85C24, "time_t time(time_t *timer);");
	add_func    (0X85C28,0X85C2C);
	set_func_flags(0X85C28,0x400);
	SetType(0X85C28, "void *malloc(size_t size);");
	add_func    (0X85C2C,0X85C30);
	set_func_flags(0X85C2C,0x400);
	SetType(0X85C2C, "int cfsetospeed(struct termios *termios_p, speed_t speed);");
	add_func    (0X85C30,0X85C34);
	set_func_flags(0X85C30,0x400);
	SetType(0X85C30, "int pthread_attr_init(pthread_attr_t *attr);");
	add_func    (0X85C34,0X85C38);
	set_func_flags(0X85C34,0x400);
	SetType(0X85C34, "int ftruncate(int fd, __off_t length);");
	add_func    (0X85C38,0X85C3C);
	set_func_flags(0X85C38,0x400);
	SetType(0X85C38, "unsigned int sleep(unsigned int seconds);");
	add_func    (0X85C3C,0X85C40);
	set_func_flags(0X85C3C,0x400);
	SetType(0X85C3C, "ssize_t send(int fd, const void *buf, size_t n, int flags);");
	add_func    (0X85C40,0X85C44);
	set_func_flags(0X85C40,0x400);
	SetType(0X85C40, "char *strcat(char *dest, const char *src);");
	add_func    (0X85C44,0X85C48);
	set_func_flags(0X85C44,0x400);
	add_func    (0X85C48,0X85C4C);
	set_func_flags(0X85C48,0x400);
	SetType(0X85C48, "FILE *popen(const char *command, const char *modes);");
	add_func    (0X85C4C,0X85C50);
	set_func_flags(0X85C4C,0x400);
	add_func    (0X85C50,0X85C54);
	set_func_flags(0X85C50,0x400);
	SetType(0X85C50, "int puts(const char *s);");
	add_func    (0X85C54,0X85C58);
	set_func_flags(0X85C54,0x400);
	SetType(0X85C54, "int tcsetattr(int fd, int optional_actions, const struct termios *termios_p);");
	add_func    (0X85C58,0X85C5C);
	set_func_flags(0X85C58,0x400);
	SetType(0X85C58, "__pid_t getpid(void);");
	add_func    (0X85C5C,0X85C60);
	set_func_flags(0X85C5C,0x400);
	SetType(0X85C5C, "int fcntl(int fd, int cmd, ...);");
	add_func    (0X85C60,0X85C64);
	set_func_flags(0X85C60,0x400);
	SetType(0X85C60, "void bzero(void *s, size_t n);");
	add_func    (0X85C64,0X85C68);
	set_func_flags(0X85C64,0x400);
	SetType(0X85C64, "uint32_t htonl(uint32_t hostlong);");
	add_func    (0X85C68,0X85C6C);
	set_func_flags(0X85C68,0x400);
	SetType(0X85C68, "int pthread_attr_destroy(pthread_attr_t *attr);");
	add_func    (0X85C6C,0X85C70);
	set_func_flags(0X85C6C,0x400);
	SetType(0X85C6C, "__off_t lseek(int fd, __off_t offset, int whence);");
	add_func    (0X85C70,0X85C74);
	set_func_flags(0X85C70,0x400);
	SetType(0X85C70, "int rand(void);");
	add_func    (0X85C74,0X85C78);
	set_func_flags(0X85C74,0x400);
	SetType(0X85C74, "size_t fread(void *ptr, size_t size, size_t n, FILE *stream);");
	add_func    (0X85C78,0X85C7C);
	set_func_flags(0X85C78,0x400);
	add_func    (0X85C7C,0X85C80);
	set_func_flags(0X85C7C,0x400);
	SetType(0X85C7C, "int pthread_cond_init(pthread_cond_t *cond, const pthread_condattr_t *cond_attr);");
	add_func    (0X85C80,0X85C84);
	set_func_flags(0X85C80,0x400);
	SetType(0X85C80, "ssize_t msgrcv(int msqid, void *msgp, size_t msgsz, int msgtyp, int msgflg);");
	add_func    (0X85C84,0X85C88);
	set_func_flags(0X85C84,0x400);
	SetType(0X85C84, "ssize_t recvfrom(int fd, void *buf, size_t n, int flags, struct sockaddr *addr, socklen_t *addr_len);");
	add_func    (0X85C88,0X85C8C);
	set_func_flags(0X85C88,0x400);
	SetType(0X85C88, "int setsockopt(int fd, int level, int optname, const void *optval, socklen_t optlen);");
	add_func    (0X85C8C,0X85C90);
	set_func_flags(0X85C8C,0x400);
	SetType(0X85C8C, "int pthread_mutexattr_init(pthread_mutexattr_t *attr);");
	add_func    (0X85C90,0X85C94);
	set_func_flags(0X85C90,0x400);
	SetType(0X85C90, "struct dirent *readdir(DIR *dirp);");
	add_func    (0X85C94,0X85C98);
	set_func_flags(0X85C94,0x400);
	add_func    (0X85C98,0X85C9C);
	set_func_flags(0X85C98,0x400);
	SetType(0X85C98, "int strcmp(const char *s1, const char *s2);");
	add_func    (0X85C9C,0X85CA0);
	set_func_flags(0X85C9C,0x401);
	SetType(0X85C9C, "void exit(int status);");
	add_func    (0X85CA0,0X85CA4);
	set_func_flags(0X85CA0,0x400);
	SetType(0X85CA0, "int cfsetispeed(struct termios *termios_p, speed_t speed);");
	add_func    (0X85CA4,0X85CA8);
	set_func_flags(0X85CA4,0x400);
	SetType(0X85CA4, "int *__errno_location(void);");
	add_func    (0X85CA8,0X85CAC);
	set_func_flags(0X85CA8,0x400);
	add_func    (0X85CAC,0X85CB0);
	set_func_flags(0X85CAC,0x400);
	SetType(0X85CAC, "int sprintf(char *s, const char *format, ...);");
	add_func    (0X85CB0,0X85CB4);
	set_func_flags(0X85CB0,0x400);
	SetType(0X85CB0, "int pthread_join(pthread_t th, void **thread_return);");
	add_func    (0X85CB4,0X85CB8);
	set_func_flags(0X85CB4,0x400);
	add_func    (0X85CB8,0X85CBC);
	set_func_flags(0X85CB8,0x400);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
	Functions_1();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	split_sreg_range(0,"T",0,3);
	split_sreg_range(0X5754,"T",0,3);
	split_sreg_range(0X575C,"T",0,3);
	split_sreg_range(0X5760,"T",0,3);
	split_sreg_range(0X5774,"T",0,3);
	split_sreg_range(0X5780,"T",0,3);
	split_sreg_range(0X578C,"T",0,3);
	split_sreg_range(0X5798,"T",0,3);
	split_sreg_range(0X57A4,"T",0,3);
	split_sreg_range(0X57B0,"T",0,3);
	split_sreg_range(0X57BC,"T",0,3);
	split_sreg_range(0X57C8,"T",0,3);
	split_sreg_range(0X57D4,"T",0,3);
	split_sreg_range(0X57E0,"T",0,3);
	split_sreg_range(0X57EC,"T",0,3);
	split_sreg_range(0X57F8,"T",0,3);
	split_sreg_range(0X5804,"T",0,3);
	split_sreg_range(0X5810,"T",0,3);
	split_sreg_range(0X581C,"T",0,3);
	split_sreg_range(0X5828,"T",0,3);
	split_sreg_range(0X5834,"T",0,3);
	split_sreg_range(0X5840,"T",0,3);
	split_sreg_range(0X584C,"T",0,3);
	split_sreg_range(0X5858,"T",0,3);
	split_sreg_range(0X5864,"T",0,3);
	split_sreg_range(0X5870,"T",0,3);
	split_sreg_range(0X587C,"T",0,3);
	split_sreg_range(0X5888,"T",0,3);
	split_sreg_range(0X5894,"T",0,3);
	split_sreg_range(0X58A0,"T",0,3);
	split_sreg_range(0X58AC,"T",0,3);
	split_sreg_range(0X58B8,"T",0,3);
	split_sreg_range(0X58C4,"T",0,3);
	split_sreg_range(0X58D0,"T",0,3);
	split_sreg_range(0X58DC,"T",0,3);
	split_sreg_range(0X58E8,"T",0,3);
	split_sreg_range(0X58F4,"T",0,3);
	split_sreg_range(0X5900,"T",0,3);
	split_sreg_range(0X590C,"T",0,3);
	split_sreg_range(0X5918,"T",0,3);
	split_sreg_range(0X5924,"T",0,3);
	split_sreg_range(0X5930,"T",0,3);
	split_sreg_range(0X593C,"T",0,3);
	split_sreg_range(0X5948,"T",0,3);
	split_sreg_range(0X5954,"T",0,3);
	split_sreg_range(0X5960,"T",0,3);
	split_sreg_range(0X596C,"T",0,3);
	split_sreg_range(0X5978,"T",0,3);
	split_sreg_range(0X5984,"T",0,3);
	split_sreg_range(0X5990,"T",0,3);
	split_sreg_range(0X599C,"T",0,3);
	split_sreg_range(0X59A8,"T",0,3);
	split_sreg_range(0X59B4,"T",0,3);
	split_sreg_range(0X59C0,"T",0,3);
	split_sreg_range(0X59CC,"T",0,3);
	split_sreg_range(0X59D8,"T",0,3);
	split_sreg_range(0X59E4,"T",0,3);
	split_sreg_range(0X59F0,"T",0,3);
	split_sreg_range(0X59FC,"T",0,3);
	split_sreg_range(0X5A08,"T",0,3);
	split_sreg_range(0X5A14,"T",0,3);
	split_sreg_range(0X5A20,"T",0,3);
	split_sreg_range(0X5A2C,"T",0,3);
	split_sreg_range(0X5A38,"T",0,3);
	split_sreg_range(0X5A44,"T",0,3);
	split_sreg_range(0X5A50,"T",0,3);
	split_sreg_range(0X5A5C,"T",0,3);
	split_sreg_range(0X5A68,"T",0,3);
	split_sreg_range(0X5A74,"T",0,3);
	split_sreg_range(0X5A80,"T",0,3);
	split_sreg_range(0X5A8C,"T",0,3);
	split_sreg_range(0X5A98,"T",0,3);
	split_sreg_range(0X5AA4,"T",0,3);
	split_sreg_range(0X5AB0,"T",0,3);
	split_sreg_range(0X5ABC,"T",0,3);
	split_sreg_range(0X5AC8,"T",0,3);
	split_sreg_range(0X5AD4,"T",0,3);
	split_sreg_range(0X5AE0,"T",0,3);
	split_sreg_range(0X5AEC,"T",0,3);
	split_sreg_range(0X5AF8,"T",0,3);
	split_sreg_range(0X5B04,"T",0,3);
	split_sreg_range(0X5B10,"T",0,3);
	split_sreg_range(0X5B1C,"T",0,3);
	split_sreg_range(0X5B28,"T",0,3);
	split_sreg_range(0X5B34,"T",0,3);
	split_sreg_range(0X5B40,"T",0,3);
	split_sreg_range(0X5B4C,"T",0,3);
	split_sreg_range(0X5B58,"T",0,3);
	split_sreg_range(0X5B64,"T",0,3);
	split_sreg_range(0X5B70,"T",0,3);
	split_sreg_range(0X5B7C,"T",0,3);
	split_sreg_range(0X5B88,"T",0,3);
	split_sreg_range(0X5B94,"T",0,3);
	split_sreg_range(0X5BA0,"T",0,3);
	split_sreg_range(0X5BAC,"T",0,3);
	split_sreg_range(0X5BB8,"T",0,3);
	split_sreg_range(0X5BC4,"T",0,3);
	split_sreg_range(0X5BD0,"T",0,3);
	split_sreg_range(0X5BDC,"T",0,3);
	split_sreg_range(0X5BE8,"T",0,3);
	split_sreg_range(0X5BF4,"T",0,3);
	split_sreg_range(0X5C00,"T",0,3);
	split_sreg_range(0X5C0C,"T",0,3);
	split_sreg_range(0X5C18,"T",0,3);
	split_sreg_range(0X5C24,"T",0,3);
	split_sreg_range(0X5C30,"T",0,3);
	split_sreg_range(0X5C3C,"T",0,3);
	split_sreg_range(0X5C48,"T",0,3);
	split_sreg_range(0X5C54,"T",0,3);
	split_sreg_range(0X5C60,"T",0,3);
	split_sreg_range(0X5C6C,"T",0,3);
	split_sreg_range(0X5C78,"T",0,3);
	split_sreg_range(0X5C84,"T",0,3);
	split_sreg_range(0X5C90,"T",0,3);
	split_sreg_range(0X5C9C,"T",0,3);
	split_sreg_range(0X5CA8,"T",0,3);
	split_sreg_range(0X5CB4,"T",0,3);
	split_sreg_range(0X5CC0,"T",0,3);
	split_sreg_range(0X5CCC,"T",0,3);
	split_sreg_range(0X5CD8,"T",0,3);
	split_sreg_range(0X5CE4,"T",0,3);
	split_sreg_range(0X5CF0,"T",0,3);
	split_sreg_range(0X5CFC,"T",0,3);
	split_sreg_range(0X5D08,"T",0,3);
	split_sreg_range(0X5D14,"T",0,3);
	split_sreg_range(0X5D20,"T",0,3);
	split_sreg_range(0X5D2C,"T",0,3);
	split_sreg_range(0X5D38,"T",0,3);
	split_sreg_range(0X5D44,"T",0,3);
	split_sreg_range(0X5D50,"T",0,3);
	split_sreg_range(0X5D5C,"T",0,3);
	split_sreg_range(0X5D68,"T",0,3);
	split_sreg_range(0X5D74,"T",0,3);
	split_sreg_range(0X5D80,"T",0,3);
	split_sreg_range(0X5D8C,"T",0,3);
	split_sreg_range(0X5D98,"T",0,3);
	split_sreg_range(0X5DA4,"T",0,3);
	split_sreg_range(0X5DB0,"T",0,3);
	split_sreg_range(0X5DBC,"T",0,3);
	split_sreg_range(0X5DC8,"T",0,3);
	split_sreg_range(0X5DD4,"T",0,3);
	split_sreg_range(0X5DE0,"T",0,3);
	split_sreg_range(0X5DEC,"T",0,3);
	split_sreg_range(0X5DF8,"T",0,3);
	split_sreg_range(0X5E04,"T",0,3);
	split_sreg_range(0X5E10,"T",0,3);
	split_sreg_range(0X5E1C,"T",0,3);
	split_sreg_range(0X5E28,"T",0,3);
	split_sreg_range(0X5E34,"T",0,3);
	split_sreg_range(0X5E40,"T",0,3);
	split_sreg_range(0X5E4C,"T",0,3);
	split_sreg_range(0X5E58,"T",0,3);
	split_sreg_range(0X5E64,"T",0,3);
	split_sreg_range(0X5E70,"T",0,3);
	split_sreg_range(0X5E7C,"T",0,3);
	split_sreg_range(0X5E88,"T",0,3);
	split_sreg_range(0X5E94,"T",0,3);
	split_sreg_range(0X5EA0,"T",0,3);
	split_sreg_range(0X5EAC,"T",0,3);
	split_sreg_range(0X5EB8,"T",0,3);
	split_sreg_range(0X5EC4,"T",0,3);
	split_sreg_range(0X5ED0,"T",0,3);
	split_sreg_range(0X5EDC,"T",0,3);
	split_sreg_range(0X5EE8,"T",0,3);
	split_sreg_range(0X5EF4,"T",0,3);
	split_sreg_range(0X5F00,"T",0,3);
	split_sreg_range(0X5F0C,"T",0,3);
	split_sreg_range(0X5F18,"T",0,3);
	split_sreg_range(0X5F24,"T",0,3);
	split_sreg_range(0X5F30,"T",0,3);
	split_sreg_range(0X5F3C,"T",0,3);
	split_sreg_range(0X5F48,"T",0,3);
	split_sreg_range(0X5F54,"T",0,3);
	split_sreg_range(0X5F60,"T",0,3);
	split_sreg_range(0X5F6C,"T",0,3);
	split_sreg_range(0X5F78,"T",0,3);
	split_sreg_range(0X5F84,"T",0,3);
	split_sreg_range(0X5F90,"T",0,3);
	split_sreg_range(0X5F9C,"T",0,3);
	split_sreg_range(0X5FA8,"T",0,3);
	split_sreg_range(0X5FB4,"T",0,3);
	split_sreg_range(0X5FC0,"T",0,3);
	split_sreg_range(0X5FCC,"T",0,3);
	split_sreg_range(0X5FD8,"T",0,3);
	split_sreg_range(0X5FE4,"T",0,3);
	split_sreg_range(0X5FF0,"T",0,3);
	split_sreg_range(0X5FFC,"T",0,3);
	split_sreg_range(0X6008,"T",0,3);
	split_sreg_range(0X6014,"T",0,3);
	split_sreg_range(0X6020,"T",0,3);
	split_sreg_range(0X602C,"T",0,3);
	split_sreg_range(0X6038,"T",0,3);
	split_sreg_range(0X6044,"T",0,3);
	split_sreg_range(0X6050,"T",0,3);
	split_sreg_range(0X605C,"T",0,3);
	split_sreg_range(0X6068,"T",0,3);
	split_sreg_range(0X6074,"T",0,3);
	split_sreg_range(0X6080,"T",0,3);
	split_sreg_range(0X608C,"T",0,3);
	split_sreg_range(0X6098,"T",0,3);
	split_sreg_range(0X60A4,"T",0,3);
	split_sreg_range(0X60B0,"T",0,3);
	split_sreg_range(0X60BC,"T",0,3);
	split_sreg_range(0X60C8,"T",0,3);
	split_sreg_range(0X60D4,"T",0,3);
	split_sreg_range(0X60E0,"T",0,3);
	split_sreg_range(0X60EC,"T",0,3);
	split_sreg_range(0X60F8,"T",0,3);
	split_sreg_range(0X6104,"T",0,3);
	split_sreg_range(0X6110,"T",0,3);
	split_sreg_range(0X611C,"T",0,3);
	split_sreg_range(0X6128,"T",0,3);
	split_sreg_range(0X6134,"T",0,3);
	split_sreg_range(0X6140,"T",0,3);
	split_sreg_range(0X614C,"T",0,3);
	split_sreg_range(0X6158,"T",0,3);
	split_sreg_range(0X6164,"T",0,3);
	split_sreg_range(0X6170,"T",0,3);
	split_sreg_range(0X617C,"T",0,3);
	split_sreg_range(0X6188,"T",0,3);
	split_sreg_range(0X6194,"T",0,3);
	split_sreg_range(0X61A0,"T",0,3);
	split_sreg_range(0X61AC,"T",0,3);
	split_sreg_range(0X61B8,"T",0,3);
	split_sreg_range(0X61C4,"T",0,3);
	split_sreg_range(0X61D0,"T",0,3);
	split_sreg_range(0X61DC,"T",0,3);
	split_sreg_range(0X61E8,"T",0,3);
	split_sreg_range(0X61F4,"T",0,3);
	split_sreg_range(0X6200,"T",0,3);
	split_sreg_range(0X620C,"T",0,3);
	split_sreg_range(0X6218,"T",0,3);
	split_sreg_range(0X6224,"T",0,3);
	split_sreg_range(0X6230,"T",0,3);
	split_sreg_range(0X623C,"T",0,3);
	split_sreg_range(0X6248,"T",0,3);
	split_sreg_range(0X6254,"T",0,3);
	split_sreg_range(0X6260,"T",0,3);
	split_sreg_range(0X626C,"T",0,3);
	split_sreg_range(0X6278,"T",0,3);
	split_sreg_range(0X6284,"T",0,3);
	split_sreg_range(0X6290,"T",0,3);
	split_sreg_range(0X629C,"T",0,3);
	split_sreg_range(0X62A8,"T",0,3);
	split_sreg_range(0X62B4,"T",0,3);
	split_sreg_range(0X62C0,"T",0,3);
	split_sreg_range(0X62CC,"T",0,3);
	split_sreg_range(0X62D8,"T",0,3);
	split_sreg_range(0X62E4,"T",0,3);
	split_sreg_range(0X62F0,"T",0,3);
	split_sreg_range(0X62FC,"T",0,3);
	split_sreg_range(0X6308,"T",0,3);
	split_sreg_range(0X6314,"T",0,3);
	split_sreg_range(0X6320,"T",0,3);
	split_sreg_range(0X632C,"T",0,3);
	split_sreg_range(0X6338,"T",0,3);
	split_sreg_range(0X6344,"T",0,3);
	split_sreg_range(0X6350,"T",0,3);
	split_sreg_range(0X635C,"T",0,3);
	split_sreg_range(0X6368,"T",0,3);
	split_sreg_range(0X6374,"T",0,3);
	split_sreg_range(0X6380,"T",0,3);
	split_sreg_range(0X638C,"T",0,3);
	split_sreg_range(0X63B0,"T",0,3);
	split_sreg_range(0X63E8,"T",0,3);
	split_sreg_range(0X6404,"T",0,3);
	split_sreg_range(0X6448,"T",0,3);
	split_sreg_range(0X6470,"T",0,3);
	split_sreg_range(0X64A0,"T",0,3);
	split_sreg_range(0X64E0,"T",0,3);
	split_sreg_range(0X6514,"T",0,3);
	split_sreg_range(0X6564,"T",0,3);
	split_sreg_range(0X6594,"T",0,3);
	split_sreg_range(0X65B0,"T",0,3);
	split_sreg_range(0X65E8,"T",0,3);
	split_sreg_range(0X6640,"T",0,3);
	split_sreg_range(0X6650,"T",0,3);
	split_sreg_range(0X6660,"T",0,3);
	split_sreg_range(0X668C,"T",0,3);
	split_sreg_range(0X6698,"T",0,3);
	split_sreg_range(0X66AC,"T",0,3);
	split_sreg_range(0X66C0,"T",0,3);
	split_sreg_range(0X66EC,"T",0,3);
	split_sreg_range(0X66F8,"T",0,3);
	split_sreg_range(0X6718,"T",0,3);
	split_sreg_range(0X6728,"T",0,3);
	split_sreg_range(0X6774,"T",0,3);
	split_sreg_range(0X6780,"T",0,3);
	split_sreg_range(0X679C,"T",0,3);
	split_sreg_range(0X67E8,"T",0,3);
	split_sreg_range(0X6854,"T",0,3);
	split_sreg_range(0X6874,"T",0,3);
	split_sreg_range(0X68C4,"T",0,3);
	split_sreg_range(0X68E0,"T",0,3);
	split_sreg_range(0X6908,"T",0,3);
	split_sreg_range(0X6914,"T",0,3);
	split_sreg_range(0X6944,"T",0,3);
	split_sreg_range(0X6984,"T",0,3);
	split_sreg_range(0X6998,"T",0,3);
	split_sreg_range(0X69E4,"T",0,3);
	split_sreg_range(0X69F0,"T",0,3);
	split_sreg_range(0X6A50,"T",0,3);
	split_sreg_range(0X6A5C,"T",0,3);
	split_sreg_range(0X6A8C,"T",0,3);
	split_sreg_range(0X6AA8,"T",0,3);
	split_sreg_range(0X6AF4,"T",0,3);
	split_sreg_range(0X6B1C,"T",0,3);
	split_sreg_range(0X6B38,"T",0,3);
	split_sreg_range(0X6B50,"T",0,3);
	split_sreg_range(0X6B84,"T",0,3);
	split_sreg_range(0X6B98,"T",0,3);
	split_sreg_range(0X6BFC,"T",0,3);
	split_sreg_range(0X6C08,"T",0,3);
	split_sreg_range(0X6C8C,"T",0,3);
	split_sreg_range(0X6CF4,"T",0,3);
	split_sreg_range(0X6D00,"T",0,3);
	split_sreg_range(0X6D28,"T",0,3);
	split_sreg_range(0X6D90,"T",0,3);
	split_sreg_range(0X6DF4,"T",0,3);
	split_sreg_range(0X6E04,"T",0,3);
	split_sreg_range(0X6E58,"T",0,3);
	split_sreg_range(0X6E6C,"T",0,3);
	split_sreg_range(0X6EA8,"T",0,3);
	split_sreg_range(0X6ED8,"T",0,3);
	split_sreg_range(0X6F68,"T",0,3);
	split_sreg_range(0X6F7C,"T",0,3);
	split_sreg_range(0X6F90,"T",0,3);
	split_sreg_range(0X6FC4,"T",0,3);
	split_sreg_range(0X6FD8,"T",0,3);
	split_sreg_range(0X7044,"T",0,3);
	split_sreg_range(0X7050,"T",0,3);
	split_sreg_range(0X7098,"T",0,3);
	split_sreg_range(0X70D8,"T",0,3);
	split_sreg_range(0X711C,"T",0,3);
	split_sreg_range(0X71A4,"T",0,3);
	split_sreg_range(0X71B0,"T",0,3);
	split_sreg_range(0X71FC,"T",0,3);
	split_sreg_range(0X7210,"T",0,3);
	split_sreg_range(0X72B4,"T",0,3);
	split_sreg_range(0X72C0,"T",0,3);
	split_sreg_range(0X7308,"T",0,3);
	split_sreg_range(0X7368,"T",0,3);
	split_sreg_range(0X7374,"T",0,3);
	split_sreg_range(0X7410,"T",0,3);
	split_sreg_range(0X7438,"T",0,3);
	split_sreg_range(0X74B8,"T",0,3);
	split_sreg_range(0X74F4,"T",0,3);
	split_sreg_range(0X7548,"T",0,3);
	split_sreg_range(0X7598,"T",0,3);
	split_sreg_range(0X75FC,"T",0,3);
	split_sreg_range(0X7614,"T",0,3);
	split_sreg_range(0X7628,"T",0,3);
	split_sreg_range(0X7674,"T",0,3);
	split_sreg_range(0X76A4,"T",0,3);
	split_sreg_range(0X76C0,"T",0,3);
	split_sreg_range(0X76D4,"T",0,3);
	split_sreg_range(0X7708,"T",0,3);
	split_sreg_range(0X7728,"T",0,3);
	split_sreg_range(0X7764,"T",0,3);
	split_sreg_range(0X776C,"T",0,3);
	split_sreg_range(0X77A8,"T",0,3);
	split_sreg_range(0X77B0,"T",0,3);
	split_sreg_range(0X77E8,"T",0,3);
	split_sreg_range(0X77F0,"T",0,3);
	split_sreg_range(0X782C,"T",0,3);
	split_sreg_range(0X7834,"T",0,3);
	split_sreg_range(0X7868,"T",0,3);
	split_sreg_range(0X7870,"T",0,3);
	split_sreg_range(0X78B8,"T",0,3);
	split_sreg_range(0X78D8,"T",0,3);
	split_sreg_range(0X7900,"T",0,3);
	split_sreg_range(0X7924,"T",0,3);
	split_sreg_range(0X794C,"T",0,3);
	split_sreg_range(0X7960,"T",0,3);
	split_sreg_range(0X7970,"T",0,3);
	split_sreg_range(0X799C,"T",0,3);
	split_sreg_range(0X79C4,"T",0,3);
	split_sreg_range(0X7A34,"T",0,3);
	split_sreg_range(0X7A48,"T",0,3);
	split_sreg_range(0X7A88,"T",0,3);
	split_sreg_range(0X7A90,"T",0,3);
	split_sreg_range(0X7AAC,"T",0,3);
	split_sreg_range(0X7AD8,"T",0,3);
	split_sreg_range(0X7AE4,"T",0,3);
	split_sreg_range(0X7B18,"T",0,3);
	split_sreg_range(0X7B20,"T",0,3);
	split_sreg_range(0X7B34,"T",0,3);
	split_sreg_range(0X7B60,"T",0,3);
	split_sreg_range(0X7B6C,"T",0,3);
	split_sreg_range(0X7BB0,"T",0,3);
	split_sreg_range(0X7BB8,"T",0,3);
	split_sreg_range(0X7BCC,"T",0,3);
	split_sreg_range(0X7BF4,"T",0,3);
	split_sreg_range(0X7C1C,"T",0,3);
	split_sreg_range(0X7C24,"T",0,3);
	split_sreg_range(0X7C34,"T",0,3);
	split_sreg_range(0X7C64,"T",0,3);
	split_sreg_range(0X7C6C,"T",0,3);
	split_sreg_range(0X7C7C,"T",0,3);
	split_sreg_range(0X7CA4,"T",0,3);
	split_sreg_range(0X7CC4,"T",0,3);
	split_sreg_range(0X7CE8,"T",0,3);
	split_sreg_range(0X7CF4,"T",0,3);
	split_sreg_range(0X7D0C,"T",0,3);
	split_sreg_range(0X7D20,"T",0,3);
	split_sreg_range(0X7D30,"T",0,3);
	split_sreg_range(0X7D68,"T",0,3);
	split_sreg_range(0X7D74,"T",0,3);
	split_sreg_range(0X7DA0,"T",0,3);
	split_sreg_range(0X7DC8,"T",0,3);
	split_sreg_range(0X7DD8,"T",0,3);
	split_sreg_range(0X7DEC,"T",0,3);
	split_sreg_range(0X7E24,"T",0,3);
	split_sreg_range(0X7E30,"T",0,3);
	split_sreg_range(0X7E5C,"T",0,3);
	split_sreg_range(0X7E84,"T",0,3);
	split_sreg_range(0X7E94,"T",0,3);
	split_sreg_range(0X7EA8,"T",0,3);
	split_sreg_range(0X7EE0,"T",0,3);
	split_sreg_range(0X7EEC,"T",0,3);
	split_sreg_range(0X7F18,"T",0,3);
	split_sreg_range(0X7F40,"T",0,3);
	split_sreg_range(0X7F58,"T",0,3);
	split_sreg_range(0X7F70,"T",0,3);
	split_sreg_range(0X7FAC,"T",0,3);
	split_sreg_range(0X80B4,"T",0,3);
	split_sreg_range(0X80C4,"T",0,3);
	split_sreg_range(0X80D4,"T",0,3);
	split_sreg_range(0X80E4,"T",0,3);
	split_sreg_range(0X810C,"T",0,3);
	split_sreg_range(0X812C,"T",0,3);
	split_sreg_range(0X813C,"T",0,3);
	split_sreg_range(0X814C,"T",0,3);
	split_sreg_range(0X8180,"T",0,3);
	split_sreg_range(0X81E4,"T",0,3);
	split_sreg_range(0X8208,"T",0,3);
	split_sreg_range(0X8230,"T",0,3);
	split_sreg_range(0X8238,"T",0,3);
	split_sreg_range(0X8248,"T",0,3);
	split_sreg_range(0X8314,"T",0,3);
	split_sreg_range(0X8330,"T",0,3);
	split_sreg_range(0X8410,"T",0,3);
	split_sreg_range(0X8420,"T",0,3);
	split_sreg_range(0X8428,"T",0,3);
	split_sreg_range(0X8450,"T",0,3);
	split_sreg_range(0X8478,"T",0,3);
	split_sreg_range(0X84A8,"T",0,3);
	split_sreg_range(0X84B0,"T",0,3);
	split_sreg_range(0X84C8,"T",0,3);
	split_sreg_range(0X8514,"T",0,3);
	split_sreg_range(0X8528,"T",0,3);
	split_sreg_range(0X8558,"T",0,3);
	split_sreg_range(0X8584,"T",0,3);
	split_sreg_range(0X85B0,"T",0,3);
	split_sreg_range(0X8608,"T",0,3);
	split_sreg_range(0X8614,"T",0,3);
	split_sreg_range(0X8650,"T",0,3);
	split_sreg_range(0X865C,"T",0,3);
	split_sreg_range(0X866C,"T",0,3);
	split_sreg_range(0X8688,"T",0,3);
	split_sreg_range(0X86C8,"T",0,3);
	split_sreg_range(0X86D4,"T",0,3);
	split_sreg_range(0X8740,"T",0,3);
	split_sreg_range(0X8748,"T",0,3);
	split_sreg_range(0X8780,"T",0,3);
	split_sreg_range(0X878C,"T",0,3);
	split_sreg_range(0X8834,"T",0,3);
	split_sreg_range(0X8854,"T",0,3);
	split_sreg_range(0X8874,"T",0,3);
	split_sreg_range(0X88B0,"T",0,3);
	split_sreg_range(0X88BC,"T",0,3);
	split_sreg_range(0X88CC,"T",0,3);
	split_sreg_range(0X8900,"T",0,3);
	split_sreg_range(0X8944,"T",0,3);
	split_sreg_range(0X895C,"T",0,3);
	split_sreg_range(0X8988,"T",0,3);
	split_sreg_range(0X89E0,"T",0,3);
	split_sreg_range(0X89F0,"T",0,3);
	split_sreg_range(0X8A48,"T",0,3);
	split_sreg_range(0X8A74,"T",0,3);
	split_sreg_range(0X8A80,"T",0,3);
	split_sreg_range(0X8AA4,"T",0,3);
	split_sreg_range(0X8AB8,"T",0,3);
	split_sreg_range(0X8AEC,"T",0,3);
	split_sreg_range(0X8B38,"T",0,3);
	split_sreg_range(0X8B6C,"T",0,3);
	split_sreg_range(0X8BB8,"T",0,3);
	split_sreg_range(0X8C0C,"T",0,3);
	split_sreg_range(0X8C50,"T",0,3);
	split_sreg_range(0X8CB8,"T",0,3);
	split_sreg_range(0X8D0C,"T",0,3);
	split_sreg_range(0X8D48,"T",0,3);
	split_sreg_range(0X8DCC,"T",0,3);
	split_sreg_range(0X8E20,"T",0,3);
	split_sreg_range(0X8E60,"T",0,3);
	split_sreg_range(0X8EAC,"T",0,3);
	split_sreg_range(0X8EFC,"T",0,3);
	split_sreg_range(0X8F10,"T",0,3);
	split_sreg_range(0X8F78,"T",0,3);
	split_sreg_range(0X8FDC,"T",0,3);
	split_sreg_range(0X8FE4,"T",0,3);
	split_sreg_range(0X8FF8,"T",0,3);
	split_sreg_range(0X9034,"T",0,3);
	split_sreg_range(0X9058,"T",0,3);
	split_sreg_range(0X9060,"T",0,3);
	split_sreg_range(0X9094,"T",0,3);
	split_sreg_range(0X90B0,"T",0,3);
	split_sreg_range(0X9234,"T",0,3);
	split_sreg_range(0X9274,"T",0,3);
	split_sreg_range(0X9280,"T",0,3);
	split_sreg_range(0X92D8,"T",0,3);
	split_sreg_range(0X92E8,"T",0,3);
	split_sreg_range(0X9328,"T",0,3);
	split_sreg_range(0X9334,"T",0,3);
	split_sreg_range(0X938C,"T",0,3);
	split_sreg_range(0X939C,"T",0,3);
	split_sreg_range(0X93F0,"T",0,3);
	split_sreg_range(0X942C,"T",0,3);
	split_sreg_range(0X9440,"T",0,3);
	split_sreg_range(0X9494,"T",0,3);
	split_sreg_range(0X94CC,"T",0,3);
	split_sreg_range(0X94DC,"T",0,3);
	split_sreg_range(0X94F0,"T",0,3);
	split_sreg_range(0X95BC,"T",0,3);
	split_sreg_range(0X965C,"T",0,3);
	split_sreg_range(0X96AC,"T",0,3);
	split_sreg_range(0X96C4,"T",0,3);
	split_sreg_range(0X96D8,"T",0,3);
	split_sreg_range(0X9768,"T",0,3);
	split_sreg_range(0X97A0,"T",0,3);
	split_sreg_range(0X97F0,"T",0,3);
	split_sreg_range(0X9804,"T",0,3);
	split_sreg_range(0X9810,"T",0,3);
	split_sreg_range(0X9824,"T",0,3);
	split_sreg_range(0X9850,"T",0,3);
	split_sreg_range(0X9888,"T",0,3);
	split_sreg_range(0X98BC,"T",0,3);
	split_sreg_range(0X994C,"T",0,3);
	split_sreg_range(0X997C,"T",0,3);
	split_sreg_range(0X9988,"T",0,3);
	split_sreg_range(0X99AC,"T",0,3);
	split_sreg_range(0X9A00,"T",0,3);
	split_sreg_range(0X9A08,"T",0,3);
	split_sreg_range(0X9A30,"T",0,3);
	split_sreg_range(0X9A50,"T",0,3);
	split_sreg_range(0X9AB4,"T",0,3);
	split_sreg_range(0X9AC0,"T",0,3);
	split_sreg_range(0X9AC8,"T",0,3);
	split_sreg_range(0X9ADC,"T",0,3);
	split_sreg_range(0X9B04,"T",0,3);
	split_sreg_range(0X9D8C,"T",0,3);
	split_sreg_range(0X9DB0,"T",0,3);
	split_sreg_range(0X9E88,"T",0,3);
	split_sreg_range(0X9E9C,"T",0,3);
	split_sreg_range(0X9EC4,"T",0,3);
	split_sreg_range(0X9EF0,"T",0,3);
	split_sreg_range(0X9F0C,"T",0,3);
	split_sreg_range(0X9F3C,"T",0,3);
	split_sreg_range(0X9F64,"T",0,3);
	split_sreg_range(0X9F74,"T",0,3);
	split_sreg_range(0X9F84,"T",0,3);
	split_sreg_range(0X9FAC,"T",0,3);
	split_sreg_range(0X9FD0,"T",0,3);
	split_sreg_range(0XA00C,"T",0,3);
	split_sreg_range(0XA100,"T",0,3);
	split_sreg_range(0XA154,"T",0,3);
	split_sreg_range(0XA1AC,"T",0,3);
	split_sreg_range(0XA200,"T",0,3);
	split_sreg_range(0XA2F4,"T",0,3);
	split_sreg_range(0XA314,"T",0,3);
	split_sreg_range(0XA31C,"T",0,3);
	split_sreg_range(0XA32C,"T",0,3);
	split_sreg_range(0XA354,"T",0,3);
	split_sreg_range(0XA374,"T",0,3);
	split_sreg_range(0XA384,"T",0,3);
	split_sreg_range(0XA394,"T",0,3);
	split_sreg_range(0XA3C8,"T",0,3);
	split_sreg_range(0XA518,"T",0,3);
	split_sreg_range(0XA528,"T",0,3);
	split_sreg_range(0XA530,"T",0,3);
	split_sreg_range(0XA540,"T",0,3);
	split_sreg_range(0XA574,"T",0,3);
	split_sreg_range(0XA5B4,"T",0,3);
	split_sreg_range(0XA5DC,"T",0,3);
	split_sreg_range(0XA5F4,"T",0,3);
	split_sreg_range(0XA618,"T",0,3);
	split_sreg_range(0XA65C,"T",0,3);
	split_sreg_range(0XA664,"T",0,3);
	split_sreg_range(0XA674,"T",0,3);
	split_sreg_range(0XA6A8,"T",0,3);
	split_sreg_range(0XA6D8,"T",0,3);
	split_sreg_range(0XA6FC,"T",0,3);
	split_sreg_range(0XA718,"T",0,3);
	split_sreg_range(0XA8B8,"T",0,3);
	split_sreg_range(0XA97C,"T",0,3);
	split_sreg_range(0XA99C,"T",0,3);
	split_sreg_range(0XAA60,"T",0,3);
	split_sreg_range(0XAA78,"T",0,3);
	split_sreg_range(0XAAA0,"T",0,3);
	split_sreg_range(0XAAC0,"T",0,3);
	split_sreg_range(0XAAD4,"T",0,3);
	split_sreg_range(0XAB00,"T",0,3);
	split_sreg_range(0XAB24,"T",0,3);
	split_sreg_range(0XABA0,"T",0,3);
	split_sreg_range(0XABAC,"T",0,3);
	split_sreg_range(0XABB8,"T",0,3);
	split_sreg_range(0XABD0,"T",0,3);
	split_sreg_range(0XABE0,"T",0,3);
	split_sreg_range(0XAC0C,"T",0,3);
	split_sreg_range(0XAC30,"T",0,3);
	split_sreg_range(0XACD8,"T",0,3);
	split_sreg_range(0XACE4,"T",0,3);
	split_sreg_range(0XACF0,"T",0,3);
	split_sreg_range(0XAD08,"T",0,3);
	split_sreg_range(0XAD18,"T",0,3);
	split_sreg_range(0XAD50,"T",0,3);
	split_sreg_range(0XAE1C,"T",0,3);
	split_sreg_range(0XAE28,"T",0,3);
	split_sreg_range(0XAE44,"T",0,3);
	split_sreg_range(0XAE4C,"T",0,3);
	split_sreg_range(0XAE74,"T",0,3);
	split_sreg_range(0XAE98,"T",0,3);
	split_sreg_range(0XB078,"T",0,3);
	split_sreg_range(0XB084,"T",0,3);
	split_sreg_range(0XB0EC,"T",0,3);
	split_sreg_range(0XB1C4,"T",0,3);
	split_sreg_range(0XB1D0,"T",0,3);
	split_sreg_range(0XB1DC,"T",0,3);
	split_sreg_range(0XB1F4,"T",0,3);
	split_sreg_range(0XB204,"T",0,3);
	split_sreg_range(0XB238,"T",0,3);
	split_sreg_range(0XB4A0,"T",0,3);
	split_sreg_range(0XB4C8,"T",0,3);
	split_sreg_range(0XB4DC,"T",0,3);
	split_sreg_range(0XB5AC,"T",0,3);
	split_sreg_range(0XB5C4,"T",0,3);
	split_sreg_range(0XB5DC,"T",0,3);
	split_sreg_range(0XB620,"T",0,3);
	split_sreg_range(0XB62C,"T",0,3);
	split_sreg_range(0XB634,"T",0,3);
	split_sreg_range(0XB648,"T",0,3);
	split_sreg_range(0XB734,"T",0,3);
	split_sreg_range(0XB74C,"T",0,3);
	split_sreg_range(0XB764,"T",0,3);
	split_sreg_range(0XB76C,"T",0,3);
	split_sreg_range(0XB780,"T",0,3);
	split_sreg_range(0XB870,"T",0,3);
	split_sreg_range(0XB888,"T",0,3);
	split_sreg_range(0XB8A0,"T",0,3);
	split_sreg_range(0XB8C4,"T",0,3);
	split_sreg_range(0XB8D0,"T",0,3);
	split_sreg_range(0XB8D8,"T",0,3);
	split_sreg_range(0XB8EC,"T",0,3);
	split_sreg_range(0XBA24,"T",0,3);
	split_sreg_range(0XBA3C,"T",0,3);
	split_sreg_range(0XBA64,"T",0,3);
	split_sreg_range(0XBA78,"T",0,3);
	split_sreg_range(0XBB84,"T",0,3);
	split_sreg_range(0XBC0C,"T",0,3);
	split_sreg_range(0XBC24,"T",0,3);
	split_sreg_range(0XBC5C,"T",0,3);
	split_sreg_range(0XBC64,"T",0,3);
	split_sreg_range(0XBC7C,"T",0,3);
	split_sreg_range(0XBD9C,"T",0,3);
	split_sreg_range(0XBDB4,"T",0,3);
	split_sreg_range(0XBDC8,"T",0,3);
	split_sreg_range(0XBDDC,"T",0,3);
	split_sreg_range(0XBF34,"T",0,3);
	split_sreg_range(0XBF4C,"T",0,3);
	split_sreg_range(0XBF64,"T",0,3);
	split_sreg_range(0XBF6C,"T",0,3);
	split_sreg_range(0XBF80,"T",0,3);
	split_sreg_range(0XC058,"T",0,3);
	split_sreg_range(0XC070,"T",0,3);
	split_sreg_range(0XC088,"T",0,3);
	split_sreg_range(0XC094,"T",0,3);
	split_sreg_range(0XC0B4,"T",0,3);
	split_sreg_range(0XC0C8,"T",0,3);
	split_sreg_range(0XC108,"T",0,3);
	split_sreg_range(0XC170,"T",0,3);
	split_sreg_range(0XC188,"T",0,3);
	split_sreg_range(0XC1A4,"T",0,3);
	split_sreg_range(0XC1D4,"T",0,3);
	split_sreg_range(0XC248,"T",0,3);
	split_sreg_range(0XC290,"T",0,3);
	split_sreg_range(0XC2CC,"T",0,3);
	split_sreg_range(0XC2F8,"T",0,3);
	split_sreg_range(0XC304,"T",0,3);
	split_sreg_range(0XC32C,"T",0,3);
	split_sreg_range(0XC39C,"T",0,3);
	split_sreg_range(0XC3AC,"T",0,3);
	split_sreg_range(0XC3BC,"T",0,3);
	split_sreg_range(0XC3E4,"T",0,3);
	split_sreg_range(0XC404,"T",0,3);
	split_sreg_range(0XC414,"T",0,3);
	split_sreg_range(0XC424,"T",0,3);
	split_sreg_range(0XC47C,"T",0,3);
	split_sreg_range(0XC488,"T",0,3);
	split_sreg_range(0XC4EC,"T",0,3);
	split_sreg_range(0XC500,"T",0,3);
	split_sreg_range(0XC508,"T",0,3);
	split_sreg_range(0XC518,"T",0,3);
	split_sreg_range(0XC570,"T",0,3);
	split_sreg_range(0XC57C,"T",0,3);
	split_sreg_range(0XC5E0,"T",0,3);
	split_sreg_range(0XC5F4,"T",0,3);
	split_sreg_range(0XC5FC,"T",0,3);
	split_sreg_range(0XC60C,"T",0,3);
	split_sreg_range(0XC640,"T",0,3);
	split_sreg_range(0XC674,"T",0,3);
	split_sreg_range(0XC67C,"T",0,3);
	split_sreg_range(0XC690,"T",0,3);
	split_sreg_range(0XC6FC,"T",0,3);
	split_sreg_range(0XC704,"T",0,3);
	split_sreg_range(0XC714,"T",0,3);
	split_sreg_range(0XC758,"T",0,3);
	split_sreg_range(0XC800,"T",0,3);
	split_sreg_range(0XC810,"T",0,3);
	split_sreg_range(0XC820,"T",0,3);
	split_sreg_range(0XC834,"T",0,3);
	split_sreg_range(0XC878,"T",0,3);
	split_sreg_range(0XC884,"T",0,3);
	split_sreg_range(0XC8F4,"T",0,3);
	split_sreg_range(0XC900,"T",0,3);
	split_sreg_range(0XC90C,"T",0,3);
	split_sreg_range(0XC93C,"T",0,3);
	split_sreg_range(0XC94C,"T",0,3);
	split_sreg_range(0XC958,"T",0,3);
	split_sreg_range(0XC97C,"T",0,3);
	split_sreg_range(0XC98C,"T",0,3);
	split_sreg_range(0XC998,"T",0,3);
	split_sreg_range(0XC9C8,"T",0,3);
	split_sreg_range(0XC9E4,"T",0,3);
	split_sreg_range(0XCA0C,"T",0,3);
	split_sreg_range(0XCA30,"T",0,3);
	split_sreg_range(0XCAC8,"T",0,3);
	split_sreg_range(0XCADC,"T",0,3);
	split_sreg_range(0XCAF0,"T",0,3);
	split_sreg_range(0XCB1C,"T",0,3);
	split_sreg_range(0XCB28,"T",0,3);
	split_sreg_range(0XCB3C,"T",0,3);
	split_sreg_range(0XCB58,"T",0,3);
	split_sreg_range(0XCC18,"T",0,3);
	split_sreg_range(0XCC28,"T",0,3);
	split_sreg_range(0XCC50,"T",0,3);
	split_sreg_range(0XCC70,"T",0,3);
	split_sreg_range(0XCC80,"T",0,3);
	split_sreg_range(0XCC90,"T",0,3);
	split_sreg_range(0XCCD0,"T",0,3);
	split_sreg_range(0XCCDC,"T",0,3);
	split_sreg_range(0XCCFC,"T",0,3);
	split_sreg_range(0XCD1C,"T",0,3);
	split_sreg_range(0XCD2C,"T",0,3);
	split_sreg_range(0XCD6C,"T",0,3);
	split_sreg_range(0XCD78,"T",0,3);
	split_sreg_range(0XCD98,"T",0,3);
	split_sreg_range(0XCDA8,"T",0,3);
	split_sreg_range(0XCDF0,"T",0,3);
	split_sreg_range(0XCE48,"T",0,3);
	split_sreg_range(0XCE54,"T",0,3);
	split_sreg_range(0XCE80,"T",0,3);
	split_sreg_range(0XCEC8,"T",0,3);
	split_sreg_range(0XCEEC,"T",0,3);
	split_sreg_range(0XCF14,"T",0,3);
	split_sreg_range(0XCF40,"T",0,3);
	split_sreg_range(0XCFA4,"T",0,3);
	split_sreg_range(0XCFC4,"T",0,3);
	split_sreg_range(0XCFE8,"T",0,3);
	split_sreg_range(0XD00C,"T",0,3);
	split_sreg_range(0XD0A8,"T",0,3);
	split_sreg_range(0XD0C0,"T",0,3);
	split_sreg_range(0XD21C,"T",0,3);
	split_sreg_range(0XD234,"T",0,3);
	split_sreg_range(0XD26C,"T",0,3);
	split_sreg_range(0XD284,"T",0,3);
	split_sreg_range(0XD3B4,"T",0,3);
	split_sreg_range(0XD3CC,"T",0,3);
	split_sreg_range(0XD418,"T",0,3);
	split_sreg_range(0XD430,"T",0,3);
	split_sreg_range(0XD458,"T",0,3);
	split_sreg_range(0XD4A8,"T",0,3);
	split_sreg_range(0XD4C4,"T",0,3);
	split_sreg_range(0XD4EC,"T",0,3);
	split_sreg_range(0XD520,"T",0,3);
	split_sreg_range(0XD5B4,"T",0,3);
	split_sreg_range(0XD668,"T",0,3);
	split_sreg_range(0XD670,"T",0,3);
	split_sreg_range(0XD6A4,"T",0,3);
	split_sreg_range(0XD6AC,"T",0,3);
	split_sreg_range(0XD7E0,"T",0,3);
	split_sreg_range(0XD8A8,"T",0,3);
	split_sreg_range(0XD8BC,"T",0,3);
	split_sreg_range(0XD8DC,"T",0,3);
	split_sreg_range(0XD9A4,"T",0,3);
	split_sreg_range(0XD9BC,"T",0,3);
	split_sreg_range(0XDA14,"T",0,3);
	split_sreg_range(0XDA5C,"T",0,3);
	split_sreg_range(0XDAF4,"T",0,3);
	split_sreg_range(0XDB18,"T",0,3);
	split_sreg_range(0XDB3C,"T",0,3);
	split_sreg_range(0XDB70,"T",0,3);
	split_sreg_range(0XDB80,"T",0,3);
	split_sreg_range(0XDBAC,"T",0,3);
	split_sreg_range(0XDBB8,"T",0,3);
	split_sreg_range(0XDC18,"T",0,3);
	split_sreg_range(0XDC34,"T",0,3);
	split_sreg_range(0XDC50,"T",0,3);
	split_sreg_range(0XDC5C,"T",0,3);
	split_sreg_range(0XDC64,"T",0,3);
	split_sreg_range(0XDC80,"T",0,3);
	split_sreg_range(0XDCAC,"T",0,3);
	split_sreg_range(0XDCB8,"T",0,3);
	split_sreg_range(0XDD18,"T",0,3);
	split_sreg_range(0XDD34,"T",0,3);
	split_sreg_range(0XDD50,"T",0,3);
	split_sreg_range(0XDD5C,"T",0,3);
	split_sreg_range(0XDD64,"T",0,3);
	split_sreg_range(0XDD80,"T",0,3);
	split_sreg_range(0XDDB4,"T",0,3);
	split_sreg_range(0XDDC0,"T",0,3);
	split_sreg_range(0XDDDC,"T",0,3);
	split_sreg_range(0XDE34,"T",0,3);
	split_sreg_range(0XDE68,"T",0,3);
	split_sreg_range(0XDE7C,"T",0,3);
	split_sreg_range(0XDE98,"T",0,3);
	split_sreg_range(0XDECC,"T",0,3);
	split_sreg_range(0XDF78,"T",0,3);
	split_sreg_range(0XDF84,"T",0,3);
	split_sreg_range(0XDF8C,"T",0,3);
	split_sreg_range(0XDF9C,"T",0,3);
	split_sreg_range(0XDFC4,"T",0,3);
	split_sreg_range(0XE00C,"T",0,3);
	split_sreg_range(0XE014,"T",0,3);
	split_sreg_range(0XE02C,"T",0,3);
	split_sreg_range(0XE054,"T",0,3);
	split_sreg_range(0XE09C,"T",0,3);
	split_sreg_range(0XE0A4,"T",0,3);
	split_sreg_range(0XE0BC,"T",0,3);
	split_sreg_range(0XE0E4,"T",0,3);
	split_sreg_range(0XE164,"T",0,3);
	split_sreg_range(0XE18C,"T",0,3);
	split_sreg_range(0XE1E4,"T",0,3);
	split_sreg_range(0XE1F0,"T",0,3);
	split_sreg_range(0XE204,"T",0,3);
	split_sreg_range(0XE220,"T",0,3);
	split_sreg_range(0XE250,"T",0,3);
	split_sreg_range(0XE274,"T",0,3);
	split_sreg_range(0XE298,"T",0,3);
	split_sreg_range(0XE2A4,"T",0,3);
	split_sreg_range(0XE2CC,"T",0,3);
	split_sreg_range(0XE2D8,"T",0,3);
	split_sreg_range(0XE2E8,"T",0,3);
	split_sreg_range(0XE31C,"T",0,3);
	split_sreg_range(0XE328,"T",0,3);
	split_sreg_range(0XE388,"T",0,3);
	split_sreg_range(0XE3D4,"T",0,3);
	split_sreg_range(0XE3F0,"T",0,3);
	split_sreg_range(0XE424,"T",0,3);
	split_sreg_range(0XE458,"T",0,3);
	split_sreg_range(0XE488,"T",0,3);
	split_sreg_range(0XE4AC,"T",0,3);
	split_sreg_range(0XE4DC,"T",0,3);
	split_sreg_range(0XE4E4,"T",0,3);
	split_sreg_range(0XE4F4,"T",0,3);
	split_sreg_range(0XE524,"T",0,3);
	split_sreg_range(0XE560,"T",0,3);
	split_sreg_range(0XE578,"T",0,3);
	split_sreg_range(0XE580,"T",0,3);
	split_sreg_range(0XE590,"T",0,3);
	split_sreg_range(0XE5BC,"T",0,3);
	split_sreg_range(0XE5C4,"T",0,3);
	split_sreg_range(0XE5D4,"T",0,3);
	split_sreg_range(0XE608,"T",0,3);
	split_sreg_range(0XE614,"T",0,3);
	split_sreg_range(0XE628,"T",0,3);
	split_sreg_range(0XE640,"T",0,3);
	split_sreg_range(0XE648,"T",0,3);
	split_sreg_range(0XE6E8,"T",0,3);
	split_sreg_range(0XE714,"T",0,3);
	split_sreg_range(0XE7B8,"T",0,3);
	split_sreg_range(0XE7C0,"T",0,3);
	split_sreg_range(0XE7DC,"T",0,3);
	split_sreg_range(0XE810,"T",0,3);
	split_sreg_range(0XE81C,"T",0,3);
	split_sreg_range(0XE830,"T",0,3);
	split_sreg_range(0XE848,"T",0,3);
	split_sreg_range(0XE850,"T",0,3);
	split_sreg_range(0XE8C0,"T",0,3);
	split_sreg_range(0XE8DC,"T",0,3);
	split_sreg_range(0XE908,"T",0,3);
	split_sreg_range(0XE91C,"T",0,3);
	split_sreg_range(0XE938,"T",0,3);
	split_sreg_range(0XE964,"T",0,3);
	split_sreg_range(0XE998,"T",0,3);
	split_sreg_range(0XE9A4,"T",0,3);
	split_sreg_range(0XEA00,"T",0,3);
	split_sreg_range(0XEA08,"T",0,3);
	split_sreg_range(0XEA20,"T",0,3);
	split_sreg_range(0XEA50,"T",0,3);
	split_sreg_range(0XEA70,"T",0,3);
	split_sreg_range(0XEA78,"T",0,3);
	split_sreg_range(0XEA88,"T",0,3);
	split_sreg_range(0XEABC,"T",0,3);
	split_sreg_range(0XEAE0,"T",0,3);
	split_sreg_range(0XEB84,"T",0,3);
	split_sreg_range(0XEBB4,"T",0,3);
	split_sreg_range(0XEBBC,"T",0,3);
	split_sreg_range(0XEBCC,"T",0,3);
	split_sreg_range(0XEC00,"T",0,3);
	split_sreg_range(0XEC34,"T",0,3);
	split_sreg_range(0XEC68,"T",0,3);
	split_sreg_range(0XEC74,"T",0,3);
	split_sreg_range(0XED0C,"T",0,3);
	split_sreg_range(0XED14,"T",0,3);
	split_sreg_range(0XED30,"T",0,3);
	split_sreg_range(0XED60,"T",0,3);
	split_sreg_range(0XED80,"T",0,3);
	split_sreg_range(0XED88,"T",0,3);
	split_sreg_range(0XED98,"T",0,3);
	split_sreg_range(0XEDE0,"T",0,3);
	split_sreg_range(0XEE08,"T",0,3);
	split_sreg_range(0XEEB0,"T",0,3);
	split_sreg_range(0XF060,"T",0,3);
	split_sreg_range(0XF068,"T",0,3);
	split_sreg_range(0XF080,"T",0,3);
	split_sreg_range(0XF0B0,"T",0,3);
	split_sreg_range(0XF0E0,"T",0,3);
	split_sreg_range(0XF104,"T",0,3);
	split_sreg_range(0XF10C,"T",0,3);
	split_sreg_range(0XF11C,"T",0,3);
	split_sreg_range(0XF144,"T",0,3);
	split_sreg_range(0XF160,"T",0,3);
	split_sreg_range(0XF17C,"T",0,3);
	split_sreg_range(0XF190,"T",0,3);
	split_sreg_range(0XF1A4,"T",0,3);
	split_sreg_range(0XF1D0,"T",0,3);
	split_sreg_range(0XF1D8,"T",0,3);
	split_sreg_range(0XF1EC,"T",0,3);
	split_sreg_range(0XF210,"T",0,3);
	split_sreg_range(0XF238,"T",0,3);
	split_sreg_range(0XF250,"T",0,3);
	split_sreg_range(0XF260,"T",0,3);
	split_sreg_range(0XF288,"T",0,3);
	split_sreg_range(0XF290,"T",0,3);
	split_sreg_range(0XF2A8,"T",0,3);
	split_sreg_range(0XF2C8,"T",0,3);
	split_sreg_range(0XF310,"T",0,3);
	split_sreg_range(0XF324,"T",0,3);
	split_sreg_range(0XF370,"T",0,3);
	split_sreg_range(0XF3C0,"T",0,3);
	split_sreg_range(0XF410,"T",0,3);
	split_sreg_range(0XF45C,"T",0,3);
	split_sreg_range(0XF49C,"T",0,3);
	split_sreg_range(0XF4C4,"T",0,3);
	split_sreg_range(0XF4FC,"T",0,3);
	split_sreg_range(0XF524,"T",0,3);
	split_sreg_range(0XF55C,"T",0,3);
	split_sreg_range(0XF5D0,"T",0,3);
	split_sreg_range(0XF638,"T",0,3);
	split_sreg_range(0XF6A0,"T",0,3);
	split_sreg_range(0XF6C8,"T",0,3);
	split_sreg_range(0XF778,"T",0,3);
	split_sreg_range(0XF7E0,"T",0,3);
	split_sreg_range(0XF818,"T",0,3);
	split_sreg_range(0XF838,"T",0,3);
	split_sreg_range(0XF880,"T",0,3);
	split_sreg_range(0XF8C0,"T",0,3);
	split_sreg_range(0XF8C8,"T",0,3);
	split_sreg_range(0XF900,"T",0,3);
	split_sreg_range(0XF950,"T",0,3);
	split_sreg_range(0XF9C4,"T",0,3);
	split_sreg_range(0XF9CC,"T",0,3);
	split_sreg_range(0XFA24,"T",0,3);
	split_sreg_range(0XFA30,"T",0,3);
	split_sreg_range(0XFA58,"T",0,3);
	split_sreg_range(0XFAA8,"T",0,3);
	split_sreg_range(0XFAD8,"T",0,3);
	split_sreg_range(0XFAEC,"T",0,3);
	split_sreg_range(0XFB04,"T",0,3);
	split_sreg_range(0XFB34,"T",0,3);
	split_sreg_range(0XFB68,"T",0,3);
	split_sreg_range(0XFB8C,"T",0,3);
	split_sreg_range(0XFBE0,"T",0,3);
	split_sreg_range(0XFBF0,"T",0,3);
	split_sreg_range(0XFC08,"T",0,3);
	split_sreg_range(0XFC34,"T",0,3);
	split_sreg_range(0XFC4C,"T",0,3);
	split_sreg_range(0XFC54,"T",0,3);
	split_sreg_range(0XFC6C,"T",0,3);
	split_sreg_range(0XFCA0,"T",0,3);
	split_sreg_range(0XFCC0,"T",0,3);
	split_sreg_range(0XFCD4,"T",0,3);
	split_sreg_range(0XFCFC,"T",0,3);
	split_sreg_range(0XFD54,"T",0,3);
	split_sreg_range(0XFD90,"T",0,3);
	split_sreg_range(0XFDE8,"T",0,3);
	split_sreg_range(0XFDF0,"T",0,3);
	split_sreg_range(0XFE00,"T",0,3);
	split_sreg_range(0XFE54,"T",0,3);
	split_sreg_range(0XFE5C,"T",0,3);
	split_sreg_range(0XFE6C,"T",0,3);
	split_sreg_range(0XFE94,"T",0,3);
	split_sreg_range(0XFECC,"T",0,3);
	split_sreg_range(0XFEF8,"T",0,3);
	split_sreg_range(0XFF18,"T",0,3);
	split_sreg_range(0XFF24,"T",0,3);
	split_sreg_range(0XFF2C,"T",0,3);
	split_sreg_range(0XFF3C,"T",0,3);
	split_sreg_range(0XFF80,"T",0,3);
	split_sreg_range(0XFFF8,"T",0,3);
	split_sreg_range(0X10110,"T",0,3);
	split_sreg_range(0X101CC,"T",0,3);
	split_sreg_range(0X101E8,"T",0,3);
	split_sreg_range(0X10268,"T",0,3);
	split_sreg_range(0X10284,"T",0,3);
	split_sreg_range(0X10304,"T",0,3);
	split_sreg_range(0X10320,"T",0,3);
	split_sreg_range(0X1044C,"T",0,3);
	split_sreg_range(0X1047C,"T",0,3);
	split_sreg_range(0X104A4,"T",0,3);
	split_sreg_range(0X104D0,"T",0,3);
	split_sreg_range(0X10508,"T",0,3);
	split_sreg_range(0X10518,"T",0,3);
	split_sreg_range(0X10568,"T",0,3);
	split_sreg_range(0X10594,"T",0,3);
	split_sreg_range(0X105B0,"T",0,3);
	split_sreg_range(0X105C0,"T",0,3);
	split_sreg_range(0X105C8,"T",0,3);
	split_sreg_range(0X105D8,"T",0,3);
	split_sreg_range(0X10618,"T",0,3);
	split_sreg_range(0X10668,"T",0,3);
	split_sreg_range(0X106A4,"T",0,3);
	split_sreg_range(0X106B4,"T",0,3);
	split_sreg_range(0X106BC,"T",0,3);
	split_sreg_range(0X106CC,"T",0,3);
	split_sreg_range(0X106F8,"T",0,3);
	split_sreg_range(0X1071C,"T",0,3);
	split_sreg_range(0X1072C,"T",0,3);
	split_sreg_range(0X10948,"T",0,3);
	split_sreg_range(0X109A8,"T",0,3);
	split_sreg_range(0X109E4,"T",0,3);
	split_sreg_range(0X10A24,"T",0,3);
	split_sreg_range(0X10A50,"T",0,3);
	split_sreg_range(0X10A74,"T",0,3);
	split_sreg_range(0X10AF8,"T",0,3);
	split_sreg_range(0X10B04,"T",0,3);
	split_sreg_range(0X10B14,"T",0,3);
	split_sreg_range(0X10B20,"T",0,3);
	split_sreg_range(0X10BF0,"T",0,3);
	split_sreg_range(0X10C18,"T",0,3);
	split_sreg_range(0X10C54,"T",0,3);
	split_sreg_range(0X10CF0,"T",0,3);
	split_sreg_range(0X10CFC,"T",0,3);
	split_sreg_range(0X10D10,"T",0,3);
	split_sreg_range(0X10D2C,"T",0,3);
	split_sreg_range(0X10D90,"T",0,3);
	split_sreg_range(0X10D9C,"T",0,3);
	split_sreg_range(0X10DC4,"T",0,3);
	split_sreg_range(0X10DFC,"T",0,3);
	split_sreg_range(0X10E94,"T",0,3);
	split_sreg_range(0X10EA8,"T",0,3);
	split_sreg_range(0X10EC8,"T",0,3);
	split_sreg_range(0X10F50,"T",0,3);
	split_sreg_range(0X10F64,"T",0,3);
	split_sreg_range(0X10F80,"T",0,3);
	split_sreg_range(0X10FA0,"T",0,3);
	split_sreg_range(0X10FEC,"T",0,3);
	split_sreg_range(0X11044,"T",0,3);
	split_sreg_range(0X11058,"T",0,3);
	split_sreg_range(0X11070,"T",0,3);
	split_sreg_range(0X11098,"T",0,3);
	split_sreg_range(0X110BC,"T",0,3);
	split_sreg_range(0X1112C,"T",0,3);
	split_sreg_range(0X11158,"T",0,3);
	split_sreg_range(0X11184,"T",0,3);
	split_sreg_range(0X11190,"T",0,3);
	split_sreg_range(0X111AC,"T",0,3);
	split_sreg_range(0X111D4,"T",0,3);
	split_sreg_range(0X11200,"T",0,3);
	split_sreg_range(0X11218,"T",0,3);
	split_sreg_range(0X11224,"T",0,3);
	split_sreg_range(0X11254,"T",0,3);
	split_sreg_range(0X11270,"T",0,3);
	split_sreg_range(0X112A4,"T",0,3);
	split_sreg_range(0X112BC,"T",0,3);
	split_sreg_range(0X112C8,"T",0,3);
	split_sreg_range(0X11308,"T",0,3);
	split_sreg_range(0X11330,"T",0,3);
	split_sreg_range(0X11348,"T",0,3);
	split_sreg_range(0X1137C,"T",0,3);
	split_sreg_range(0X11394,"T",0,3);
	split_sreg_range(0X113A0,"T",0,3);
	split_sreg_range(0X113E0,"T",0,3);
	split_sreg_range(0X11430,"T",0,3);
	split_sreg_range(0X11448,"T",0,3);
	split_sreg_range(0X11480,"T",0,3);
	split_sreg_range(0X11498,"T",0,3);
	split_sreg_range(0X114AC,"T",0,3);
	split_sreg_range(0X114DC,"T",0,3);
	split_sreg_range(0X114E4,"T",0,3);
	split_sreg_range(0X11524,"T",0,3);
	split_sreg_range(0X11568,"T",0,3);
	split_sreg_range(0X1158C,"T",0,3);
	split_sreg_range(0X115BC,"T",0,3);
	split_sreg_range(0X11618,"T",0,3);
	split_sreg_range(0X11658,"T",0,3);
	split_sreg_range(0X11670,"T",0,3);
	split_sreg_range(0X1169C,"T",0,3);
	split_sreg_range(0X116E8,"T",0,3);
	split_sreg_range(0X11744,"T",0,3);
	split_sreg_range(0X11768,"T",0,3);
	split_sreg_range(0X11794,"T",0,3);
	split_sreg_range(0X117DC,"T",0,3);
	split_sreg_range(0X11854,"T",0,3);
	split_sreg_range(0X1185C,"T",0,3);
	split_sreg_range(0X11874,"T",0,3);
	split_sreg_range(0X118B8,"T",0,3);
	split_sreg_range(0X1192C,"T",0,3);
	split_sreg_range(0X11934,"T",0,3);
	split_sreg_range(0X1194C,"T",0,3);
	split_sreg_range(0X11984,"T",0,3);
	split_sreg_range(0X119C8,"T",0,3);
	split_sreg_range(0X119D0,"T",0,3);
	split_sreg_range(0X119E4,"T",0,3);
	split_sreg_range(0X11A10,"T",0,3);
	split_sreg_range(0X11A70,"T",0,3);
	split_sreg_range(0X11A8C,"T",0,3);
	split_sreg_range(0X11AD8,"T",0,3);
	split_sreg_range(0X11B5C,"T",0,3);
	split_sreg_range(0X11B68,"T",0,3);
	split_sreg_range(0X11B70,"T",0,3);
	split_sreg_range(0X11B88,"T",0,3);
	split_sreg_range(0X11C04,"T",0,3);
	split_sreg_range(0X11C18,"T",0,3);
	split_sreg_range(0X11C3C,"T",0,3);
	split_sreg_range(0X11C78,"T",0,3);
	split_sreg_range(0X11CF4,"T",0,3);
	split_sreg_range(0X11D38,"T",0,3);
	split_sreg_range(0X11D44,"T",0,3);
	split_sreg_range(0X11D70,"T",0,3);
	split_sreg_range(0X11D78,"T",0,3);
	split_sreg_range(0X11D80,"T",0,3);
	split_sreg_range(0X11D94,"T",0,3);
	split_sreg_range(0X11DE8,"T",0,3);
	split_sreg_range(0X11E28,"T",0,3);
	split_sreg_range(0X11E98,"T",0,3);
	split_sreg_range(0X11EC8,"T",0,3);
	split_sreg_range(0X11F24,"T",0,3);
	split_sreg_range(0X11F78,"T",0,3);
	split_sreg_range(0X11FD4,"T",0,3);
	split_sreg_range(0X11FF8,"T",0,3);
	split_sreg_range(0X12048,"T",0,3);
	split_sreg_range(0X12068,"T",0,3);
	split_sreg_range(0X1207C,"T",0,3);
	split_sreg_range(0X12088,"T",0,3);
	split_sreg_range(0X120A0,"T",0,3);
	split_sreg_range(0X12124,"T",0,3);
	split_sreg_range(0X12170,"T",0,3);
	split_sreg_range(0X1217C,"T",0,3);
	split_sreg_range(0X121AC,"T",0,3);
	split_sreg_range(0X121B4,"T",0,3);
	split_sreg_range(0X121BC,"T",0,3);
	split_sreg_range(0X121D4,"T",0,3);
	split_sreg_range(0X12238,"T",0,3);
	split_sreg_range(0X122D8,"T",0,3);
	split_sreg_range(0X12310,"T",0,3);
	split_sreg_range(0X12320,"T",0,3);
	split_sreg_range(0X12450,"T",0,3);
	split_sreg_range(0X1249C,"T",0,3);
	split_sreg_range(0X12554,"T",0,3);
	split_sreg_range(0X1256C,"T",0,3);
	split_sreg_range(0X12610,"T",0,3);
	split_sreg_range(0X12814,"T",0,3);
	split_sreg_range(0X12848,"T",0,3);
	split_sreg_range(0X12860,"T",0,3);
	split_sreg_range(0X12894,"T",0,3);
	split_sreg_range(0X128D0,"T",0,3);
	split_sreg_range(0X12900,"T",0,3);
	split_sreg_range(0X12934,"T",0,3);
	split_sreg_range(0X12958,"T",0,3);
	split_sreg_range(0X129BC,"T",0,3);
	split_sreg_range(0X129D0,"T",0,3);
	split_sreg_range(0X12A38,"T",0,3);
	split_sreg_range(0X12A4C,"T",0,3);
	split_sreg_range(0X12A8C,"T",0,3);
	split_sreg_range(0X12AC8,"T",0,3);
	split_sreg_range(0X12BA8,"T",0,3);
	split_sreg_range(0X12C40,"T",0,3);
	split_sreg_range(0X12C80,"T",0,3);
	split_sreg_range(0X12CDC,"T",0,3);
	split_sreg_range(0X12CF0,"T",0,3);
	split_sreg_range(0X12DB8,"T",0,3);
	split_sreg_range(0X12F38,"T",0,3);
	split_sreg_range(0X13008,"T",0,3);
	split_sreg_range(0X13020,"T",0,3);
	split_sreg_range(0X131E0,"T",0,3);
	split_sreg_range(0X13228,"T",0,3);
	split_sreg_range(0X1334C,"T",0,3);
	split_sreg_range(0X133A8,"T",0,3);
	split_sreg_range(0X133B8,"T",0,3);
	split_sreg_range(0X133EC,"T",0,3);
	split_sreg_range(0X13440,"T",0,3);
	split_sreg_range(0X13464,"T",0,3);
	split_sreg_range(0X134C0,"T",0,3);
	split_sreg_range(0X134CC,"T",0,3);
	split_sreg_range(0X134EC,"T",0,3);
	split_sreg_range(0X13504,"T",0,3);
	split_sreg_range(0X136E8,"T",0,3);
	split_sreg_range(0X137C8,"T",0,3);
	split_sreg_range(0X13828,"T",0,3);
	split_sreg_range(0X13834,"T",0,3);
	split_sreg_range(0X13870,"T",0,3);
	split_sreg_range(0X139FC,"T",0,3);
	split_sreg_range(0X13A40,"T",0,3);
	split_sreg_range(0X13A78,"T",0,3);
	split_sreg_range(0X13A80,"T",0,3);
	split_sreg_range(0X13A94,"T",0,3);
	split_sreg_range(0X13B7C,"T",0,3);
	split_sreg_range(0X13B88,"T",0,3);
	split_sreg_range(0X13B94,"T",0,3);
	split_sreg_range(0X13BEC,"T",0,3);
	split_sreg_range(0X13BF8,"T",0,3);
	split_sreg_range(0X13C04,"T",0,3);
	split_sreg_range(0X13CB4,"T",0,3);
	split_sreg_range(0X13CC0,"T",0,3);
	split_sreg_range(0X13CCC,"T",0,3);
	split_sreg_range(0X13D1C,"T",0,3);
	split_sreg_range(0X13D50,"T",0,3);
	split_sreg_range(0X13D5C,"T",0,3);
	split_sreg_range(0X13D98,"T",0,3);
	split_sreg_range(0X13DA0,"T",0,3);
	split_sreg_range(0X13DAC,"T",0,3);
	split_sreg_range(0X13DC0,"T",0,3);
	split_sreg_range(0X13DD0,"T",0,3);
	split_sreg_range(0X13E10,"T",0,3);
	split_sreg_range(0X13E60,"T",0,3);
	split_sreg_range(0X13EE4,"T",0,3);
	split_sreg_range(0X13EFC,"T",0,3);
	split_sreg_range(0X13F04,"T",0,3);
	split_sreg_range(0X13F4C,"T",0,3);
	split_sreg_range(0X13F70,"T",0,3);
	split_sreg_range(0X13F90,"T",0,3);
	split_sreg_range(0X13F98,"T",0,3);
	split_sreg_range(0X13FA0,"T",0,3);
	split_sreg_range(0X13FF4,"T",0,3);
	split_sreg_range(0X13FFC,"T",0,3);
	split_sreg_range(0X14010,"T",0,3);
	split_sreg_range(0X1404C,"T",0,3);
	split_sreg_range(0X14054,"T",0,3);
	split_sreg_range(0X14068,"T",0,3);
	split_sreg_range(0X140B0,"T",0,3);
	split_sreg_range(0X140B8,"T",0,3);
	split_sreg_range(0X140CC,"T",0,3);
	split_sreg_range(0X14108,"T",0,3);
	split_sreg_range(0X14110,"T",0,3);
	split_sreg_range(0X14124,"T",0,3);
	split_sreg_range(0X14160,"T",0,3);
	split_sreg_range(0X14168,"T",0,3);
	split_sreg_range(0X1417C,"T",0,3);
	split_sreg_range(0X141B8,"T",0,3);
	split_sreg_range(0X141C0,"T",0,3);
	split_sreg_range(0X141D4,"T",0,3);
	split_sreg_range(0X14214,"T",0,3);
	split_sreg_range(0X14254,"T",0,3);
	split_sreg_range(0X142B0,"T",0,3);
	split_sreg_range(0X1430C,"T",0,3);
	split_sreg_range(0X14374,"T",0,3);
	split_sreg_range(0X14408,"T",0,3);
	split_sreg_range(0X1442C,"T",0,3);
	split_sreg_range(0X1447C,"T",0,3);
	split_sreg_range(0X144F4,"T",0,3);
	split_sreg_range(0X14508,"T",0,3);
	split_sreg_range(0X14520,"T",0,3);
	split_sreg_range(0X1453C,"T",0,3);
	split_sreg_range(0X14590,"T",0,3);
	split_sreg_range(0X145E8,"T",0,3);
	split_sreg_range(0X14600,"T",0,3);
	split_sreg_range(0X14634,"T",0,3);
	split_sreg_range(0X14640,"T",0,3);
	split_sreg_range(0X1465C,"T",0,3);
	split_sreg_range(0X14684,"T",0,3);
	split_sreg_range(0X1469C,"T",0,3);
	split_sreg_range(0X146B8,"T",0,3);
	split_sreg_range(0X146DC,"T",0,3);
	split_sreg_range(0X14720,"T",0,3);
	split_sreg_range(0X14760,"T",0,3);
	split_sreg_range(0X14768,"T",0,3);
	split_sreg_range(0X1479C,"T",0,3);
	split_sreg_range(0X147D4,"T",0,3);
	split_sreg_range(0X14824,"T",0,3);
	split_sreg_range(0X148C8,"T",0,3);
	split_sreg_range(0X148EC,"T",0,3);
	split_sreg_range(0X14920,"T",0,3);
	split_sreg_range(0X14928,"T",0,3);
	split_sreg_range(0X149FC,"T",0,3);
	split_sreg_range(0X14A10,"T",0,3);
	split_sreg_range(0X14A5C,"T",0,3);
	split_sreg_range(0X14ABC,"T",0,3);
	split_sreg_range(0X14B90,"T",0,3);
	split_sreg_range(0X14B9C,"T",0,3);
	split_sreg_range(0X14BA8,"T",0,3);
	split_sreg_range(0X14BC8,"T",0,3);
	split_sreg_range(0X14BD8,"T",0,3);
	split_sreg_range(0X14BF0,"T",0,3);
	split_sreg_range(0X14C3C,"T",0,3);
	split_sreg_range(0X14C6C,"T",0,3);
	split_sreg_range(0X14CBC,"T",0,3);
	split_sreg_range(0X14CD4,"T",0,3);
	split_sreg_range(0X14D20,"T",0,3);
	split_sreg_range(0X14D30,"T",0,3);
	split_sreg_range(0X14D5C,"T",0,3);
	split_sreg_range(0X14DB4,"T",0,3);
	split_sreg_range(0X14DE8,"T",0,3);
	split_sreg_range(0X14E18,"T",0,3);
	split_sreg_range(0X14E48,"T",0,3);
	split_sreg_range(0X14E84,"T",0,3);
	split_sreg_range(0X14EB8,"T",0,3);
	split_sreg_range(0X14EC4,"T",0,3);
	split_sreg_range(0X14ECC,"T",0,3);
	split_sreg_range(0X14EE0,"T",0,3);
	split_sreg_range(0X14F14,"T",0,3);
	split_sreg_range(0X14F54,"T",0,3);
	split_sreg_range(0X14F5C,"T",0,3);
	split_sreg_range(0X14F90,"T",0,3);
	split_sreg_range(0X14FB8,"T",0,3);
	split_sreg_range(0X14FF0,"T",0,3);
	split_sreg_range(0X15008,"T",0,3);
	split_sreg_range(0X1504C,"T",0,3);
	split_sreg_range(0X15058,"T",0,3);
	split_sreg_range(0X1506C,"T",0,3);
	split_sreg_range(0X150CC,"T",0,3);
	split_sreg_range(0X150D4,"T",0,3);
	split_sreg_range(0X150E4,"T",0,3);
	split_sreg_range(0X15118,"T",0,3);
	split_sreg_range(0X15150,"T",0,3);
	split_sreg_range(0X1515C,"T",0,3);
	split_sreg_range(0X151BC,"T",0,3);
	split_sreg_range(0X151C8,"T",0,3);
	split_sreg_range(0X151E0,"T",0,3);
	split_sreg_range(0X151F8,"T",0,3);
	split_sreg_range(0X15204,"T",0,3);
	split_sreg_range(0X15234,"T",0,3);
	split_sreg_range(0X15250,"T",0,3);
	split_sreg_range(0X15260,"T",0,3);
	split_sreg_range(0X1528C,"T",0,3);
	split_sreg_range(0X152A8,"T",0,3);
	split_sreg_range(0X152EC,"T",0,3);
	split_sreg_range(0X152F4,"T",0,3);
	split_sreg_range(0X15308,"T",0,3);
	split_sreg_range(0X15348,"T",0,3);
	split_sreg_range(0X1536C,"T",0,3);
	split_sreg_range(0X153A0,"T",0,3);
	split_sreg_range(0X153BC,"T",0,3);
	split_sreg_range(0X15420,"T",0,3);
	split_sreg_range(0X1542C,"T",0,3);
	split_sreg_range(0X15450,"T",0,3);
	split_sreg_range(0X15484,"T",0,3);
	split_sreg_range(0X154A0,"T",0,3);
	split_sreg_range(0X154D0,"T",0,3);
	split_sreg_range(0X15550,"T",0,3);
	split_sreg_range(0X15580,"T",0,3);
	split_sreg_range(0X1559C,"T",0,3);
	split_sreg_range(0X155D0,"T",0,3);
	split_sreg_range(0X15648,"T",0,3);
	split_sreg_range(0X15658,"T",0,3);
	split_sreg_range(0X156C0,"T",0,3);
	split_sreg_range(0X156F0,"T",0,3);
	split_sreg_range(0X1570C,"T",0,3);
	split_sreg_range(0X15738,"T",0,3);
	split_sreg_range(0X157B0,"T",0,3);
	split_sreg_range(0X157E4,"T",0,3);
	split_sreg_range(0X1595C,"T",0,3);
	split_sreg_range(0X15990,"T",0,3);
	split_sreg_range(0X15A04,"T",0,3);
	split_sreg_range(0X15A20,"T",0,3);
	split_sreg_range(0X15A68,"T",0,3);
	split_sreg_range(0X15A94,"T",0,3);
	split_sreg_range(0X15ABC,"T",0,3);
	split_sreg_range(0X15AD0,"T",0,3);
	split_sreg_range(0X15AE4,"T",0,3);
	split_sreg_range(0X15B18,"T",0,3);
	split_sreg_range(0X15B54,"T",0,3);
	split_sreg_range(0X15BB4,"T",0,3);
	split_sreg_range(0X15BC4,"T",0,3);
	split_sreg_range(0X15BD4,"T",0,3);
	split_sreg_range(0X15BEC,"T",0,3);
	split_sreg_range(0X15C18,"T",0,3);
	split_sreg_range(0X15C44,"T",0,3);
	split_sreg_range(0X15C88,"T",0,3);
	split_sreg_range(0X15CC8,"T",0,3);
	split_sreg_range(0X15D08,"T",0,3);
	split_sreg_range(0X15D40,"T",0,3);
	split_sreg_range(0X15D70,"T",0,3);
	split_sreg_range(0X15D9C,"T",0,3);
	split_sreg_range(0X15DC4,"T",0,3);
	split_sreg_range(0X15EA4,"T",0,3);
	split_sreg_range(0X15EC4,"T",0,3);
	split_sreg_range(0X15EE0,"T",0,3);
	split_sreg_range(0X15F90,"T",0,3);
	split_sreg_range(0X16034,"T",0,3);
	split_sreg_range(0X160BC,"T",0,3);
	split_sreg_range(0X160E4,"T",0,3);
	split_sreg_range(0X160F4,"T",0,3);
	split_sreg_range(0X16190,"T",0,3);
	split_sreg_range(0X16244,"T",0,3);
	split_sreg_range(0X1625C,"T",0,3);
	split_sreg_range(0X1627C,"T",0,3);
	split_sreg_range(0X162CC,"T",0,3);
	split_sreg_range(0X162EC,"T",0,3);
	split_sreg_range(0X1630C,"T",0,3);
	split_sreg_range(0X16318,"T",0,3);
	split_sreg_range(0X16320,"T",0,3);
	split_sreg_range(0X16338,"T",0,3);
	split_sreg_range(0X164D0,"T",0,3);
	split_sreg_range(0X164DC,"T",0,3);
	split_sreg_range(0X166E4,"T",0,3);
	split_sreg_range(0X166F0,"T",0,3);
	split_sreg_range(0X16940,"T",0,3);
	split_sreg_range(0X1694C,"T",0,3);
	split_sreg_range(0X169BC,"T",0,3);
	split_sreg_range(0X16AFC,"T",0,3);
	split_sreg_range(0X16B08,"T",0,3);
	split_sreg_range(0X16BDC,"T",0,3);
	split_sreg_range(0X16D1C,"T",0,3);
	split_sreg_range(0X16D28,"T",0,3);
	split_sreg_range(0X16F44,"T",0,3);
	split_sreg_range(0X16F60,"T",0,3);
	split_sreg_range(0X17034,"T",0,3);
	split_sreg_range(0X17C6C,"T",0,3);
	split_sreg_range(0X18078,"T",0,3);
	split_sreg_range(0X18080,"T",0,3);
	split_sreg_range(0X180D8,"T",0,3);
	split_sreg_range(0X181A4,"T",0,3);
	split_sreg_range(0X1821C,"T",0,3);
	split_sreg_range(0X18230,"T",0,3);
	split_sreg_range(0X18334,"T",0,3);
	split_sreg_range(0X1833C,"T",0,3);
	split_sreg_range(0X18348,"T",0,3);
	split_sreg_range(0X18374,"T",0,3);
	split_sreg_range(0X1838C,"T",0,3);
	split_sreg_range(0X183DC,"T",0,3);
	split_sreg_range(0X184D4,"T",0,3);
	split_sreg_range(0X184E8,"T",0,3);
	split_sreg_range(0X18514,"T",0,3);
	split_sreg_range(0X1854C,"T",0,3);
	split_sreg_range(0X18574,"T",0,3);
	split_sreg_range(0X185F8,"T",0,3);
	split_sreg_range(0X18634,"T",0,3);
	split_sreg_range(0X1868C,"T",0,3);
	split_sreg_range(0X186C8,"T",0,3);
	split_sreg_range(0X18734,"T",0,3);
	split_sreg_range(0X1873C,"T",0,3);
	split_sreg_range(0X1874C,"T",0,3);
	split_sreg_range(0X18758,"T",0,3);
	split_sreg_range(0X18764,"T",0,3);
	split_sreg_range(0X18770,"T",0,3);
	split_sreg_range(0X187A8,"T",0,3);
	split_sreg_range(0X187B4,"T",0,3);
	split_sreg_range(0X187CC,"T",0,3);
	split_sreg_range(0X187E8,"T",0,3);
	split_sreg_range(0X1884C,"T",0,3);
	split_sreg_range(0X1888C,"T",0,3);
	split_sreg_range(0X188C0,"T",0,3);
	split_sreg_range(0X188F4,"T",0,3);
	split_sreg_range(0X1892C,"T",0,3);
	split_sreg_range(0X18968,"T",0,3);
	split_sreg_range(0X1899C,"T",0,3);
	split_sreg_range(0X189CC,"T",0,3);
	split_sreg_range(0X189D8,"T",0,3);
	split_sreg_range(0X189E0,"T",0,3);
	split_sreg_range(0X18A2C,"T",0,3);
	split_sreg_range(0X18AA0,"T",0,3);
	split_sreg_range(0X18AE4,"T",0,3);
	split_sreg_range(0X18AFC,"T",0,3);
	split_sreg_range(0X18B4C,"T",0,3);
	split_sreg_range(0X18B80,"T",0,3);
	split_sreg_range(0X18BB8,"T",0,3);
	split_sreg_range(0X18BC4,"T",0,3);
	split_sreg_range(0X18BDC,"T",0,3);
	split_sreg_range(0X18C14,"T",0,3);
	split_sreg_range(0X18C4C,"T",0,3);
	split_sreg_range(0X18C60,"T",0,3);
	split_sreg_range(0X18C74,"T",0,3);
	split_sreg_range(0X18CA4,"T",0,3);
	split_sreg_range(0X18CCC,"T",0,3);
	split_sreg_range(0X18CE0,"T",0,3);
	split_sreg_range(0X18D60,"T",0,3);
	split_sreg_range(0X18D88,"T",0,3);
	split_sreg_range(0X18DB8,"T",0,3);
	split_sreg_range(0X18E34,"T",0,3);
	split_sreg_range(0X18E48,"T",0,3);
	split_sreg_range(0X18E70,"T",0,3);
	split_sreg_range(0X18EE4,"T",0,3);
	split_sreg_range(0X18EEC,"T",0,3);
	split_sreg_range(0X18F04,"T",0,3);
	split_sreg_range(0X18F38,"T",0,3);
	split_sreg_range(0X18F40,"T",0,3);
	split_sreg_range(0X18F54,"T",0,3);
	split_sreg_range(0X18F88,"T",0,3);
	split_sreg_range(0X18FBC,"T",0,3);
	split_sreg_range(0X18FD0,"T",0,3);
	split_sreg_range(0X18FD8,"T",0,3);
	split_sreg_range(0X18FE8,"T",0,3);
	split_sreg_range(0X19018,"T",0,3);
	split_sreg_range(0X1904C,"T",0,3);
	split_sreg_range(0X19060,"T",0,3);
	split_sreg_range(0X19068,"T",0,3);
	split_sreg_range(0X19078,"T",0,3);
	split_sreg_range(0X190B0,"T",0,3);
	split_sreg_range(0X190D0,"T",0,3);
	split_sreg_range(0X19100,"T",0,3);
	split_sreg_range(0X191B0,"T",0,3);
	split_sreg_range(0X192E8,"T",0,3);
	split_sreg_range(0X1934C,"T",0,3);
	split_sreg_range(0X19388,"T",0,3);
	split_sreg_range(0X19394,"T",0,3);
	split_sreg_range(0X193B0,"T",0,3);
	split_sreg_range(0X193D8,"T",0,3);
	split_sreg_range(0X19470,"T",0,3);
	split_sreg_range(0X1947C,"T",0,3);
	split_sreg_range(0X1949C,"T",0,3);
	split_sreg_range(0X194BC,"T",0,3);
	split_sreg_range(0X194F0,"T",0,3);
	split_sreg_range(0X19518,"T",0,3);
	split_sreg_range(0X19584,"T",0,3);
	split_sreg_range(0X19590,"T",0,3);
	split_sreg_range(0X195BC,"T",0,3);
	split_sreg_range(0X195D8,"T",0,3);
	split_sreg_range(0X19624,"T",0,3);
	split_sreg_range(0X19674,"T",0,3);
	split_sreg_range(0X19684,"T",0,3);
	split_sreg_range(0X196B0,"T",0,3);
	split_sreg_range(0X196C4,"T",0,3);
	split_sreg_range(0X196DC,"T",0,3);
	split_sreg_range(0X19704,"T",0,3);
	split_sreg_range(0X19750,"T",0,3);
	split_sreg_range(0X1975C,"T",0,3);
	split_sreg_range(0X19770,"T",0,3);
	split_sreg_range(0X19780,"T",0,3);
	split_sreg_range(0X197C8,"T",0,3);
	split_sreg_range(0X197E4,"T",0,3);
	split_sreg_range(0X19834,"T",0,3);
	split_sreg_range(0X19884,"T",0,3);
	split_sreg_range(0X198E0,"T",0,3);
	split_sreg_range(0X198F0,"T",0,3);
	split_sreg_range(0X19924,"T",0,3);
	split_sreg_range(0X19970,"T",0,3);
	split_sreg_range(0X199E0,"T",0,3);
	split_sreg_range(0X19A6C,"T",0,3);
	split_sreg_range(0X19AA8,"T",0,3);
	split_sreg_range(0X19AE4,"T",0,3);
	split_sreg_range(0X19B1C,"T",0,3);
	split_sreg_range(0X19B5C,"T",0,3);
	split_sreg_range(0X19B84,"T",0,3);
	split_sreg_range(0X19BEC,"T",0,3);
	split_sreg_range(0X19C20,"T",0,3);
	split_sreg_range(0X19C6C,"T",0,3);
	split_sreg_range(0X19CB0,"T",0,3);
	split_sreg_range(0X19CBC,"T",0,3);
	split_sreg_range(0X19CD4,"T",0,3);
	split_sreg_range(0X19CEC,"T",0,3);
	split_sreg_range(0X19D80,"T",0,3);
	split_sreg_range(0X19D8C,"T",0,3);
	split_sreg_range(0X19D98,"T",0,3);
	split_sreg_range(0X19DA0,"T",0,3);
	split_sreg_range(0X19DD4,"T",0,3);
	split_sreg_range(0X19E34,"T",0,3);
	split_sreg_range(0X19EFC,"T",0,3);
	split_sreg_range(0X19F10,"T",0,3);
	split_sreg_range(0X19F1C,"T",0,3);
	split_sreg_range(0X19FE4,"T",0,3);
	split_sreg_range(0X1A00C,"T",0,3);
	split_sreg_range(0X1A040,"T",0,3);
	split_sreg_range(0X1A050,"T",0,3);
	split_sreg_range(0X1A060,"T",0,3);
	split_sreg_range(0X1A138,"T",0,3);
	split_sreg_range(0X1A1A4,"T",0,3);
	split_sreg_range(0X1A23C,"T",0,3);
	split_sreg_range(0X1A274,"T",0,3);
	split_sreg_range(0X1A284,"T",0,3);
	split_sreg_range(0X1A2E8,"T",0,3);
	split_sreg_range(0X1A304,"T",0,3);
	split_sreg_range(0X1A3CC,"T",0,3);
	split_sreg_range(0X1A3E0,"T",0,3);
	split_sreg_range(0X1A448,"T",0,3);
	split_sreg_range(0X1A47C,"T",0,3);
	split_sreg_range(0X1A4A8,"T",0,3);
	split_sreg_range(0X1A53C,"T",0,3);
	split_sreg_range(0X1A548,"T",0,3);
	split_sreg_range(0X1A554,"T",0,3);
	split_sreg_range(0X1A564,"T",0,3);
	split_sreg_range(0X1A5F8,"T",0,3);
	split_sreg_range(0X1A638,"T",0,3);
	split_sreg_range(0X1A644,"T",0,3);
	split_sreg_range(0X1A650,"T",0,3);
	split_sreg_range(0X1A684,"T",0,3);
	split_sreg_range(0X1A694,"T",0,3);
	split_sreg_range(0X1A6DC,"T",0,3);
	split_sreg_range(0X1A6F0,"T",0,3);
	split_sreg_range(0X1A758,"T",0,3);
	split_sreg_range(0X1A78C,"T",0,3);
	split_sreg_range(0X1A7D0,"T",0,3);
	split_sreg_range(0X1A864,"T",0,3);
	split_sreg_range(0X1A870,"T",0,3);
	split_sreg_range(0X1A87C,"T",0,3);
	split_sreg_range(0X1A8A8,"T",0,3);
	split_sreg_range(0X1A908,"T",0,3);
	split_sreg_range(0X1A9D0,"T",0,3);
	split_sreg_range(0X1A9E4,"T",0,3);
	split_sreg_range(0X1A9F0,"T",0,3);
	split_sreg_range(0X1AAC4,"T",0,3);
	split_sreg_range(0X1AAF0,"T",0,3);
	split_sreg_range(0X1AB10,"T",0,3);
	split_sreg_range(0X1ABD8,"T",0,3);
	split_sreg_range(0X1AC14,"T",0,3);
	split_sreg_range(0X1AD24,"T",0,3);
	split_sreg_range(0X1AD38,"T",0,3);
	split_sreg_range(0X1AD9C,"T",0,3);
	split_sreg_range(0X1ADD0,"T",0,3);
	split_sreg_range(0X1AE00,"T",0,3);
	split_sreg_range(0X1AE94,"T",0,3);
	split_sreg_range(0X1AEA0,"T",0,3);
	split_sreg_range(0X1AEAC,"T",0,3);
	split_sreg_range(0X1AEBC,"T",0,3);
	split_sreg_range(0X1AF38,"T",0,3);
	split_sreg_range(0X1AF64,"T",0,3);
	split_sreg_range(0X1AF7C,"T",0,3);
	split_sreg_range(0X1AF94,"T",0,3);
	split_sreg_range(0X1B010,"T",0,3);
	split_sreg_range(0X1B070,"T",0,3);
	split_sreg_range(0X1B09C,"T",0,3);
	split_sreg_range(0X1B0A4,"T",0,3);
	split_sreg_range(0X1B0B8,"T",0,3);
	split_sreg_range(0X1B0E0,"T",0,3);
	split_sreg_range(0X1B10C,"T",0,3);
	split_sreg_range(0X1B118,"T",0,3);
	split_sreg_range(0X1B14C,"T",0,3);
	split_sreg_range(0X1B174,"T",0,3);
	split_sreg_range(0X1B194,"T",0,3);
	split_sreg_range(0X1B1C4,"T",0,3);
	split_sreg_range(0X1B1D0,"T",0,3);
	split_sreg_range(0X1B1DC,"T",0,3);
	split_sreg_range(0X1B1E4,"T",0,3);
	split_sreg_range(0X1B210,"T",0,3);
	split_sreg_range(0X1B254,"T",0,3);
	split_sreg_range(0X1B2A4,"T",0,3);
	split_sreg_range(0X1B2FC,"T",0,3);
	split_sreg_range(0X1B370,"T",0,3);
	split_sreg_range(0X1B3F0,"T",0,3);
	split_sreg_range(0X1B448,"T",0,3);
	split_sreg_range(0X1B464,"T",0,3);
	split_sreg_range(0X1B4CC,"T",0,3);
	split_sreg_range(0X1B4E8,"T",0,3);
	split_sreg_range(0X1B514,"T",0,3);
	split_sreg_range(0X1B51C,"T",0,3);
	split_sreg_range(0X1B530,"T",0,3);
	split_sreg_range(0X1B560,"T",0,3);
	split_sreg_range(0X1B594,"T",0,3);
	split_sreg_range(0X1B5C8,"T",0,3);
	split_sreg_range(0X1B5D4,"T",0,3);
	split_sreg_range(0X1B5E0,"T",0,3);
	split_sreg_range(0X1B5F4,"T",0,3);
	split_sreg_range(0X1B604,"T",0,3);
	split_sreg_range(0X1B654,"T",0,3);
	split_sreg_range(0X1B66C,"T",0,3);
	split_sreg_range(0X1B698,"T",0,3);
	split_sreg_range(0X1B6C4,"T",0,3);
	split_sreg_range(0X1B6FC,"T",0,3);
	split_sreg_range(0X1B750,"T",0,3);
	split_sreg_range(0X1B7B0,"T",0,3);
	split_sreg_range(0X1B7D0,"T",0,3);
	split_sreg_range(0X1B804,"T",0,3);
	split_sreg_range(0X1B80C,"T",0,3);
	split_sreg_range(0X1B81C,"T",0,3);
	split_sreg_range(0X1B830,"T",0,3);
	split_sreg_range(0X1B890,"T",0,3);
	split_sreg_range(0X1B8B0,"T",0,3);
	split_sreg_range(0X1B974,"T",0,3);
	split_sreg_range(0X1B9FC,"T",0,3);
	split_sreg_range(0X1BA90,"T",0,3);
	split_sreg_range(0X1BAB8,"T",0,3);
	split_sreg_range(0X1BB50,"T",0,3);
	split_sreg_range(0X1BB6C,"T",0,3);
	split_sreg_range(0X1BB74,"T",0,3);
	split_sreg_range(0X1BB8C,"T",0,3);
	split_sreg_range(0X1BBD8,"T",0,3);
	split_sreg_range(0X1BC08,"T",0,3);
	split_sreg_range(0X1BC90,"T",0,3);
	split_sreg_range(0X1BC9C,"T",0,3);
	split_sreg_range(0X1BCEC,"T",0,3);
	split_sreg_range(0X1BD24,"T",0,3);
	split_sreg_range(0X1BD5C,"T",0,3);
	split_sreg_range(0X1BD6C,"T",0,3);
	split_sreg_range(0X1BDA4,"T",0,3);
	split_sreg_range(0X1BDAC,"T",0,3);
	split_sreg_range(0X1BDC4,"T",0,3);
	split_sreg_range(0X1BDE0,"T",0,3);
	split_sreg_range(0X1BE04,"T",0,3);
	split_sreg_range(0X1BE2C,"T",0,3);
	split_sreg_range(0X1BE38,"T",0,3);
	split_sreg_range(0X1BE88,"T",0,3);
	split_sreg_range(0X1BEB0,"T",0,3);
	split_sreg_range(0X1BEC4,"T",0,3);
	split_sreg_range(0X1BF1C,"T",0,3);
	split_sreg_range(0X1BF34,"T",0,3);
	split_sreg_range(0X1BF64,"T",0,3);
	split_sreg_range(0X1BF98,"T",0,3);
	split_sreg_range(0X1C064,"T",0,3);
	split_sreg_range(0X1C070,"T",0,3);
	split_sreg_range(0X1C0B4,"T",0,3);
	split_sreg_range(0X1C0E4,"T",0,3);
	split_sreg_range(0X1C150,"T",0,3);
	split_sreg_range(0X1C1DC,"T",0,3);
	split_sreg_range(0X1C20C,"T",0,3);
	split_sreg_range(0X1C278,"T",0,3);
	split_sreg_range(0X1C4C8,"T",0,3);
	split_sreg_range(0X1C4DC,"T",0,3);
	split_sreg_range(0X1C52C,"T",0,3);
	split_sreg_range(0X1C564,"T",0,3);
	split_sreg_range(0X1C6E8,"T",0,3);
	split_sreg_range(0X1C6F4,"T",0,3);
	split_sreg_range(0X1C820,"T",0,3);
	split_sreg_range(0X1C82C,"T",0,3);
	split_sreg_range(0X1C858,"T",0,3);
	split_sreg_range(0X1C860,"T",0,3);
	split_sreg_range(0X1C870,"T",0,3);
	split_sreg_range(0X1C8A0,"T",0,3);
	split_sreg_range(0X1C8E8,"T",0,3);
	split_sreg_range(0X1C950,"T",0,3);
	split_sreg_range(0X1C974,"T",0,3);
	split_sreg_range(0X1C984,"T",0,3);
	split_sreg_range(0X1C9A8,"T",0,3);
	split_sreg_range(0X1C9CC,"T",0,3);
	split_sreg_range(0X1C9F0,"T",0,3);
	split_sreg_range(0X1CA14,"T",0,3);
	split_sreg_range(0X1CA38,"T",0,3);
	split_sreg_range(0X1CA5C,"T",0,3);
	split_sreg_range(0X1CA80,"T",0,3);
	split_sreg_range(0X1CAB0,"T",0,3);
	split_sreg_range(0X1CAC8,"T",0,3);
	split_sreg_range(0X1CBD8,"T",0,3);
	split_sreg_range(0X1CBF4,"T",0,3);
	split_sreg_range(0X1CCD4,"T",0,3);
	split_sreg_range(0X1CE98,"T",0,3);
	split_sreg_range(0X1CEDC,"T",0,3);
	split_sreg_range(0X1CEE4,"T",0,3);
	split_sreg_range(0X1CF30,"T",0,3);
	split_sreg_range(0X1CFE0,"T",0,3);
	split_sreg_range(0X1D018,"T",0,3);
	split_sreg_range(0X1D0C8,"T",0,3);
	split_sreg_range(0X1D100,"T",0,3);
	split_sreg_range(0X1D1B0,"T",0,3);
	split_sreg_range(0X1D250,"T",0,3);
	split_sreg_range(0X1D294,"T",0,3);
	split_sreg_range(0X1D2C8,"T",0,3);
	split_sreg_range(0X1D2D8,"T",0,3);
	split_sreg_range(0X1D2F0,"T",0,3);
	split_sreg_range(0X1D308,"T",0,3);
	split_sreg_range(0X1D324,"T",0,3);
	split_sreg_range(0X1D33C,"T",0,3);
	split_sreg_range(0X1D43C,"T",0,3);
	split_sreg_range(0X1D470,"T",0,3);
	split_sreg_range(0X1D47C,"T",0,3);
	split_sreg_range(0X1D49C,"T",0,3);
	split_sreg_range(0X1D56C,"T",0,3);
	split_sreg_range(0X1D594,"T",0,3);
	split_sreg_range(0X1D5C4,"T",0,3);
	split_sreg_range(0X1D640,"T",0,3);
	split_sreg_range(0X1D73C,"T",0,3);
	split_sreg_range(0X1D754,"T",0,3);
	split_sreg_range(0X1D7D0,"T",0,3);
	split_sreg_range(0X1D85C,"T",0,3);
	split_sreg_range(0X1D870,"T",0,3);
	split_sreg_range(0X1D878,"T",0,3);
	split_sreg_range(0X1D8BC,"T",0,3);
	split_sreg_range(0X1D8E0,"T",0,3);
	split_sreg_range(0X1D974,"T",0,3);
	split_sreg_range(0X1D9C8,"T",0,3);
	split_sreg_range(0X1D9E4,"T",0,3);
	split_sreg_range(0X1DA14,"T",0,3);
	split_sreg_range(0X1DAC0,"T",0,3);
	split_sreg_range(0X1DACC,"T",0,3);
	split_sreg_range(0X1DAF8,"T",0,3);
	split_sreg_range(0X1DB04,"T",0,3);
	split_sreg_range(0X1DB14,"T",0,3);
	split_sreg_range(0X1DB54,"T",0,3);
	split_sreg_range(0X1DB7C,"T",0,3);
	split_sreg_range(0X1DB9C,"T",0,3);
	split_sreg_range(0X1DBA8,"T",0,3);
	split_sreg_range(0X1DBCC,"T",0,3);
	split_sreg_range(0X1DC44,"T",0,3);
	split_sreg_range(0X1DCBC,"T",0,3);
	split_sreg_range(0X1DD34,"T",0,3);
	split_sreg_range(0X1DD68,"T",0,3);
	split_sreg_range(0X1DD74,"T",0,3);
	split_sreg_range(0X1DD98,"T",0,3);
	split_sreg_range(0X1DDB0,"T",0,3);
	split_sreg_range(0X1DDC4,"T",0,3);
	split_sreg_range(0X1DDCC,"T",0,3);
	split_sreg_range(0X1DDD4,"T",0,3);
	split_sreg_range(0X1DDDC,"T",0,3);
	split_sreg_range(0X1DE08,"T",0,3);
	split_sreg_range(0X1DE38,"T",0,3);
	split_sreg_range(0X1DE64,"T",0,3);
	split_sreg_range(0X1DE78,"T",0,3);
	split_sreg_range(0X1E0E8,"T",0,3);
	split_sreg_range(0X1E210,"T",0,3);
	split_sreg_range(0X1E3B4,"T",0,3);
	split_sreg_range(0X1E43C,"T",0,3);
	split_sreg_range(0X1E514,"T",0,3);
	split_sreg_range(0X1E7F4,"T",0,3);
	split_sreg_range(0X1E878,"T",0,3);
	split_sreg_range(0X1E88C,"T",0,3);
	split_sreg_range(0X1E898,"T",0,3);
	split_sreg_range(0X1E8B8,"T",0,3);
	split_sreg_range(0X1E8F4,"T",0,3);
	split_sreg_range(0X1E90C,"T",0,3);
	split_sreg_range(0X1E950,"T",0,3);
	split_sreg_range(0X1E9CC,"T",0,3);
	split_sreg_range(0X1E9D8,"T",0,3);
	split_sreg_range(0X1E9EC,"T",0,3);
	split_sreg_range(0X1EA04,"T",0,3);
	split_sreg_range(0X1EA54,"T",0,3);
	split_sreg_range(0X1EAD0,"T",0,3);
	split_sreg_range(0X1EADC,"T",0,3);
	split_sreg_range(0X1EB20,"T",0,3);
	split_sreg_range(0X1EB28,"T",0,3);
	split_sreg_range(0X1EB40,"T",0,3);
	split_sreg_range(0X1EB48,"T",0,3);
	split_sreg_range(0X1EB64,"T",0,3);
	split_sreg_range(0X1EB94,"T",0,3);
	split_sreg_range(0X1EBDC,"T",0,3);
	split_sreg_range(0X1EBE8,"T",0,3);
	split_sreg_range(0X1EBF8,"T",0,3);
	split_sreg_range(0X1EC0C,"T",0,3);
	split_sreg_range(0X1EC24,"T",0,3);
	split_sreg_range(0X1EC64,"T",0,3);
	split_sreg_range(0X1EC84,"T",0,3);
	split_sreg_range(0X1ECC8,"T",0,3);
	split_sreg_range(0X1ECE0,"T",0,3);
	split_sreg_range(0X1ED50,"T",0,3);
	split_sreg_range(0X1ED5C,"T",0,3);
	split_sreg_range(0X1ED68,"T",0,3);
	split_sreg_range(0X1ED7C,"T",0,3);
	split_sreg_range(0X1ED98,"T",0,3);
	split_sreg_range(0X1EDD0,"T",0,3);
	split_sreg_range(0X1EE10,"T",0,3);
	split_sreg_range(0X1EEC4,"T",0,3);
	split_sreg_range(0X1EF48,"T",0,3);
	split_sreg_range(0X1EF70,"T",0,3);
	split_sreg_range(0X1F018,"T",0,3);
	split_sreg_range(0X1F05C,"T",0,3);
	split_sreg_range(0X1F0D0,"T",0,3);
	split_sreg_range(0X1F100,"T",0,3);
	split_sreg_range(0X1F13C,"T",0,3);
	split_sreg_range(0X1F160,"T",0,3);
	split_sreg_range(0X1F17C,"T",0,3);
	split_sreg_range(0X1F1C0,"T",0,3);
	split_sreg_range(0X1F1E0,"T",0,3);
	split_sreg_range(0X1F264,"T",0,3);
	split_sreg_range(0X1F28C,"T",0,3);
	split_sreg_range(0X1F334,"T",0,3);
	split_sreg_range(0X1F398,"T",0,3);
	split_sreg_range(0X1F3B4,"T",0,3);
	split_sreg_range(0X1F3D8,"T",0,3);
	split_sreg_range(0X1F3F8,"T",0,3);
	split_sreg_range(0X1F410,"T",0,3);
	split_sreg_range(0X1F41C,"T",0,3);
	split_sreg_range(0X1F470,"T",0,3);
	split_sreg_range(0X1F4B0,"T",0,3);
	split_sreg_range(0X1F558,"T",0,3);
	split_sreg_range(0X1F5AC,"T",0,3);
	split_sreg_range(0X1F5C8,"T",0,3);
	split_sreg_range(0X1F5EC,"T",0,3);
	split_sreg_range(0X1F60C,"T",0,3);
	split_sreg_range(0X1F618,"T",0,3);
	split_sreg_range(0X1F620,"T",0,3);
	split_sreg_range(0X1F630,"T",0,3);
	split_sreg_range(0X1F65C,"T",0,3);
	split_sreg_range(0X1F6CC,"T",0,3);
	split_sreg_range(0X1F6D4,"T",0,3);
	split_sreg_range(0X1F6FC,"T",0,3);
	split_sreg_range(0X1F780,"T",0,3);
	split_sreg_range(0X1F7D4,"T",0,3);
	split_sreg_range(0X1F7F0,"T",0,3);
	split_sreg_range(0X1F814,"T",0,3);
	split_sreg_range(0X1FA98,"T",0,3);
	split_sreg_range(0X1FB20,"T",0,3);
	split_sreg_range(0X1FB74,"T",0,3);
	split_sreg_range(0X20CA0,"T",0,3);
	split_sreg_range(0X21540,"T",0,3);
	split_sreg_range(0X21574,"T",0,3);
	split_sreg_range(0X215C8,"T",0,3);
	split_sreg_range(0X22808,"T",0,3);
	split_sreg_range(0X23658,"T",0,3);
	split_sreg_range(0X2368C,"T",0,3);
	split_sreg_range(0X236C4,"T",0,3);
	split_sreg_range(0X236D0,"T",0,3);
	split_sreg_range(0X23700,"T",0,3);
	split_sreg_range(0X23724,"T",0,3);
	split_sreg_range(0X23740,"T",0,3);
	split_sreg_range(0X2374C,"T",0,3);
	split_sreg_range(0X238A0,"T",0,3);
	split_sreg_range(0X239D8,"T",0,3);
	split_sreg_range(0X239E8,"T",0,3);
	split_sreg_range(0X23A9C,"T",0,3);
	split_sreg_range(0X23BD4,"T",0,3);
	split_sreg_range(0X23C34,"T",0,3);
	split_sreg_range(0X23CE8,"T",0,3);
	split_sreg_range(0X23E20,"T",0,3);
	split_sreg_range(0X23F38,"T",0,3);
	split_sreg_range(0X23F40,"T",0,3);
	split_sreg_range(0X23F68,"T",0,3);
	split_sreg_range(0X23FB0,"T",0,3);
	split_sreg_range(0X23FD4,"T",0,3);
	split_sreg_range(0X2417C,"T",0,3);
	split_sreg_range(0X24198,"T",0,3);
	split_sreg_range(0X2445C,"T",0,3);
	split_sreg_range(0X24478,"T",0,3);
	split_sreg_range(0X2449C,"T",0,3);
	split_sreg_range(0X24634,"T",0,3);
	split_sreg_range(0X24998,"T",0,3);
	split_sreg_range(0X24CFC,"T",0,3);
	split_sreg_range(0X24E94,"T",0,3);
	split_sreg_range(0X251F8,"T",0,3);
	split_sreg_range(0X25560,"T",0,3);
	split_sreg_range(0X2559C,"T",0,3);
	split_sreg_range(0X255A8,"T",0,3);
	split_sreg_range(0X255EC,"T",0,3);
	split_sreg_range(0X25634,"T",0,3);
	split_sreg_range(0X25658,"T",0,3);
	split_sreg_range(0X2569C,"T",0,3);
	split_sreg_range(0X256B8,"T",0,3);
	split_sreg_range(0X256E4,"T",0,3);
	split_sreg_range(0X25708,"T",0,3);
	split_sreg_range(0X2571C,"T",0,3);
	split_sreg_range(0X25730,"T",0,3);
	split_sreg_range(0X2574C,"T",0,3);
	split_sreg_range(0X25790,"T",0,3);
	split_sreg_range(0X257C8,"T",0,3);
	split_sreg_range(0X25800,"T",0,3);
	split_sreg_range(0X2584C,"T",0,3);
	split_sreg_range(0X25864,"T",0,3);
	split_sreg_range(0X25878,"T",0,3);
	split_sreg_range(0X258A8,"T",0,3);
	split_sreg_range(0X258EC,"T",0,3);
	split_sreg_range(0X25930,"T",0,3);
	split_sreg_range(0X2597C,"T",0,3);
	split_sreg_range(0X259C0,"T",0,3);
	split_sreg_range(0X259DC,"T",0,3);
	split_sreg_range(0X25A10,"T",0,3);
	split_sreg_range(0X25A30,"T",0,3);
	split_sreg_range(0X25A38,"T",0,3);
	split_sreg_range(0X25BFC,"T",0,3);
	split_sreg_range(0X25C08,"T",0,3);
	split_sreg_range(0X25C18,"T",0,3);
	split_sreg_range(0X25C24,"T",0,3);
	split_sreg_range(0X25C44,"T",0,3);
	split_sreg_range(0X25C6C,"T",0,3);
	split_sreg_range(0X25C88,"T",0,3);
	split_sreg_range(0X25C98,"T",0,3);
	split_sreg_range(0X25CD4,"T",0,3);
	split_sreg_range(0X25D10,"T",0,3);
	split_sreg_range(0X25D40,"T",0,3);
	split_sreg_range(0X25D7C,"T",0,3);
	split_sreg_range(0X25DF8,"T",0,3);
	split_sreg_range(0X25E44,"T",0,3);
	split_sreg_range(0X25E50,"T",0,3);
	split_sreg_range(0X25E58,"T",0,3);
	split_sreg_range(0X25E60,"T",0,3);
	split_sreg_range(0X25E7C,"T",0,3);
	split_sreg_range(0X25E8C,"T",0,3);
	split_sreg_range(0X25EA4,"T",0,3);
	split_sreg_range(0X25ED8,"T",0,3);
	split_sreg_range(0X25EEC,"T",0,3);
	split_sreg_range(0X25F34,"T",0,3);
	split_sreg_range(0X25F80,"T",0,3);
	split_sreg_range(0X25F8C,"T",0,3);
	split_sreg_range(0X25FC4,"T",0,3);
	split_sreg_range(0X25FDC,"T",0,3);
	split_sreg_range(0X25FF4,"T",0,3);
	split_sreg_range(0X2600C,"T",0,3);
	split_sreg_range(0X26038,"T",0,3);
	split_sreg_range(0X2609C,"T",0,3);
	split_sreg_range(0X260F0,"T",0,3);
	split_sreg_range(0X26100,"T",0,3);
	split_sreg_range(0X26130,"T",0,3);
	split_sreg_range(0X261A8,"T",0,3);
	split_sreg_range(0X261F0,"T",0,3);
	split_sreg_range(0X26254,"T",0,3);
	split_sreg_range(0X26260,"T",0,3);
	split_sreg_range(0X26278,"T",0,3);
	split_sreg_range(0X26288,"T",0,3);
	split_sreg_range(0X26298,"T",0,3);
	split_sreg_range(0X262B0,"T",0,3);
	split_sreg_range(0X26304,"T",0,3);
	split_sreg_range(0X26380,"T",0,3);
	split_sreg_range(0X263CC,"T",0,3);
	split_sreg_range(0X263D8,"T",0,3);
	split_sreg_range(0X26414,"T",0,3);
	split_sreg_range(0X26428,"T",0,3);
	split_sreg_range(0X26430,"T",0,3);
	split_sreg_range(0X26440,"T",0,3);
	split_sreg_range(0X26454,"T",0,3);
	split_sreg_range(0X26488,"T",0,3);
	split_sreg_range(0X2649C,"T",0,3);
	split_sreg_range(0X264E4,"T",0,3);
	split_sreg_range(0X26530,"T",0,3);
	split_sreg_range(0X2653C,"T",0,3);
	split_sreg_range(0X26568,"T",0,3);
	split_sreg_range(0X265D8,"T",0,3);
	split_sreg_range(0X26620,"T",0,3);
	split_sreg_range(0X26688,"T",0,3);
	split_sreg_range(0X26694,"T",0,3);
	split_sreg_range(0X266C0,"T",0,3);
	split_sreg_range(0X26724,"T",0,3);
	split_sreg_range(0X26778,"T",0,3);
	split_sreg_range(0X26788,"T",0,3);
	split_sreg_range(0X267A0,"T",0,3);
	split_sreg_range(0X267B0,"T",0,3);
	split_sreg_range(0X267C0,"T",0,3);
	split_sreg_range(0X267D8,"T",0,3);
	split_sreg_range(0X267E8,"T",0,3);
	split_sreg_range(0X267EC,"T",0,3);
	split_sreg_range(0X267F0,"T",0,3);
	split_sreg_range(0X2A374,"T",0,3);
	split_sreg_range(0X2B124,"T",0,3);
	split_sreg_range(0X2BBDC,"T",0,3);
	split_sreg_range(0X34000,"T",0,3);
	split_sreg_range(0X34004,"T",0,3);
	split_sreg_range(0X34008,"T",0,3);
	split_sreg_range(0X3400C,"T",0,3);
	split_sreg_range(0X34134,"T",0,3);
	split_sreg_range(0X34558,"T",0,3);
	split_sreg_range(0X34960,"T",0,3);
	split_sreg_range(0X85A1C,"T",0,3);
	split_sreg_range(0X85A20,"T",0,3);
	split_sreg_range(0X85AF0,"T",0,3);
	split_sreg_range(0X85AF4,"T",0,3);
	split_sreg_range(0X85AF8,"T",0,3);
	split_sreg_range(0X85AFC,"T",0,3);
	split_sreg_range(0X85B00,"T",0,3);
	split_sreg_range(0X85B04,"T",0,3);
	split_sreg_range(0X85B08,"T",0,3);
	split_sreg_range(0X85B0C,"T",0,3);
	split_sreg_range(0X85B10,"T",0,3);
	split_sreg_range(0X85B14,"T",0,3);
	split_sreg_range(0X85B18,"T",0,3);
	split_sreg_range(0X85B1C,"T",0,3);
	split_sreg_range(0X85B24,"T",0,3);
	split_sreg_range(0X85B28,"T",0,3);
	split_sreg_range(0X85B2C,"T",0,3);
	split_sreg_range(0X85B30,"T",0,3);
	split_sreg_range(0X85B34,"T",0,3);
	split_sreg_range(0X85B38,"T",0,3);
	split_sreg_range(0X85B3C,"T",0,3);
	split_sreg_range(0X85B40,"T",0,3);
	split_sreg_range(0X85B44,"T",0,3);
	split_sreg_range(0X85B48,"T",0,3);
	split_sreg_range(0X85B4C,"T",0,3);
	split_sreg_range(0X85B50,"T",0,3);
	split_sreg_range(0X85B54,"T",0,3);
	split_sreg_range(0X85B58,"T",0,3);
	split_sreg_range(0X85B5C,"T",0,3);
	split_sreg_range(0X85B60,"T",0,3);
	split_sreg_range(0X85B64,"T",0,3);
	split_sreg_range(0X85B68,"T",0,3);
	split_sreg_range(0X85B6C,"T",0,3);
	split_sreg_range(0X85B70,"T",0,3);
	split_sreg_range(0X85B74,"T",0,3);
	split_sreg_range(0X85B78,"T",0,3);
	split_sreg_range(0X85B7C,"T",0,3);
	split_sreg_range(0X85B80,"T",0,3);
	split_sreg_range(0X85B84,"T",0,3);
	split_sreg_range(0X85B88,"T",0,3);
	split_sreg_range(0X85B8C,"T",0,3);
	split_sreg_range(0X85B90,"T",0,3);
	split_sreg_range(0X85B94,"T",0,3);
	split_sreg_range(0X85B98,"T",0,3);
	split_sreg_range(0X85B9C,"T",0,3);
	split_sreg_range(0X85BA0,"T",0,3);
	split_sreg_range(0X85BA4,"T",0,3);
	split_sreg_range(0X85BA8,"T",0,3);
	split_sreg_range(0X85BAC,"T",0,3);
	split_sreg_range(0X85BB0,"T",0,3);
	split_sreg_range(0X85BB4,"T",0,3);
	split_sreg_range(0X85BB8,"T",0,3);
	split_sreg_range(0X85BBC,"T",0,3);
	split_sreg_range(0X85BC0,"T",0,3);
	split_sreg_range(0X85BC4,"T",0,3);
	split_sreg_range(0X85BC8,"T",0,3);
	split_sreg_range(0X85BCC,"T",0,3);
	split_sreg_range(0X85BD0,"T",0,3);
	split_sreg_range(0X85BD4,"T",0,3);
	split_sreg_range(0X85BD8,"T",0,3);
	split_sreg_range(0X85BDC,"T",0,3);
	split_sreg_range(0X85BE0,"T",0,3);
	split_sreg_range(0X85BE4,"T",0,3);
	split_sreg_range(0X85BE8,"T",0,3);
	split_sreg_range(0X85BEC,"T",0,3);
	split_sreg_range(0X85BF0,"T",0,3);
	split_sreg_range(0X85BF4,"T",0,3);
	split_sreg_range(0X85BF8,"T",0,3);
	split_sreg_range(0X85BFC,"T",0,3);
	split_sreg_range(0X85C00,"T",0,3);
	split_sreg_range(0X85C04,"T",0,3);
	split_sreg_range(0X85C08,"T",0,3);
	split_sreg_range(0X85C0C,"T",0,3);
	split_sreg_range(0X85C10,"T",0,3);
	split_sreg_range(0X85C14,"T",0,3);
	split_sreg_range(0X85C18,"T",0,3);
	split_sreg_range(0X85C1C,"T",0,3);
	split_sreg_range(0X85C20,"T",0,3);
	split_sreg_range(0X85C24,"T",0,3);
	split_sreg_range(0X85C28,"T",0,3);
	split_sreg_range(0X85C2C,"T",0,3);
	split_sreg_range(0X85C30,"T",0,3);
	split_sreg_range(0X85C34,"T",0,3);
	split_sreg_range(0X85C38,"T",0,3);
	split_sreg_range(0X85C3C,"T",0,3);
	split_sreg_range(0X85C40,"T",0,3);
	split_sreg_range(0X85C44,"T",0,3);
	split_sreg_range(0X85C48,"T",0,3);
	split_sreg_range(0X85C4C,"T",0,3);
	split_sreg_range(0X85C50,"T",0,3);
	split_sreg_range(0X85C54,"T",0,3);
	split_sreg_range(0X85C58,"T",0,3);
	split_sreg_range(0X85C5C,"T",0,3);
	split_sreg_range(0X85C60,"T",0,3);
	split_sreg_range(0X85C64,"T",0,3);
	split_sreg_range(0X85C68,"T",0,3);
	split_sreg_range(0X85C6C,"T",0,3);
	split_sreg_range(0X85C70,"T",0,3);
	split_sreg_range(0X85C74,"T",0,3);
	split_sreg_range(0X85C78,"T",0,3);
	split_sreg_range(0X85C7C,"T",0,3);
	split_sreg_range(0X85C80,"T",0,3);
	split_sreg_range(0X85C84,"T",0,3);
	split_sreg_range(0X85C88,"T",0,3);
	split_sreg_range(0X85C8C,"T",0,3);
	split_sreg_range(0X85C90,"T",0,3);
	split_sreg_range(0X85C98,"T",0,3);
	split_sreg_range(0X85C9C,"T",0,3);
	split_sreg_range(0X85CA0,"T",0,3);
	split_sreg_range(0X85CA4,"T",0,3);
	split_sreg_range(0X85CA8,"T",0,3);
	split_sreg_range(0X85CAC,"T",0,3);
	split_sreg_range(0X85CB0,"T",0,3);
	split_sreg_range(0X85CB4,"T",0,3);
	split_sreg_range(0X85CB8,"T",0,3);
	split_sreg_range(0,"DS",0X10,3);
	split_sreg_range(0X5754,"DS",0X10,3);
	split_sreg_range(0X5760,"DS",0X10,3);
	split_sreg_range(0X638C,"DS",0X10,3);
	split_sreg_range(0X267E8,"DS",0X10,3);
	split_sreg_range(0X267F0,"DS",0X10,3);
	split_sreg_range(0X2A374,"DS",0X10,3);
	split_sreg_range(0X2B124,"DS",0X10,3);
	split_sreg_range(0X2BBDC,"DS",0X10,3);
	split_sreg_range(0X34000,"DS",0X10,3);
	split_sreg_range(0X34004,"DS",0X10,3);
	split_sreg_range(0X34008,"DS",0X10,3);
	split_sreg_range(0X3400C,"DS",0X10,3);
	split_sreg_range(0X34134,"DS",0X10,3);
	split_sreg_range(0X34558,"DS",0X10,3);
	split_sreg_range(0X34960,"DS",0X10,3);
	split_sreg_range(0X85A1C,"DS",0X12,3);
	split_sreg_range(0X85A20,"DS",0X13,3);
	split_sreg_range(0X85AF0,"DS",0X14,3);
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
	Bytes_1();
	Bytes_2();
	Bytes_3();
	Bytes_4();
	Bytes_5();
	Bytes_6();
	Bytes_7();
        end_type_updating(UTP_STRUCT);
}

// End of file.
