//
// +-------------------------------------------------------------------------+
// |   This file has been generated by The Interactive Disassembler (IDA)    |
// |           Copyright (c) 2017 Hex-Rays, <support@hex-rays.com>           |
// +-------------------------------------------------------------------------+
//
//
//      This file should be used in the following way:
//         - reload executable into IDA with using switch -c
//         - use File, Load IDC file and load this file.
//
//      NOTE: This file doesn't contain all information from the database.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
  // set 'loading idc file' mode
  set_inf_attr(INF_GENFLAGS, INFFL_LOADIDC|get_inf_attr(INF_GENFLAGS));
  GenInfo();            // various settings
  Segments();           // segmentation
  Enums();              // enumerations
  Structures();         // structure types
  ApplyStrucTInfos();   // structure type infos
  Patches();            // manual patches
  SegRegs();            // segment register values
  Bytes();              // individual bytes (code,data)
  Functions();          // function definitions
  // clear 'loading idc file' mode
  set_inf_attr(INF_GENFLAGS, ~INFFL_LOADIDC&get_inf_attr(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        delete_all_segments();    // purge database
	set_processor_type("ARM", SETPROC_USER);
	set_inf_attr(INF_COMPILER, 6);
	set_inf_attr(INF_STRLIT_BREAK, 0xA);
	set_flag(INF_CMTFLAG, SW_ALLCMT, 0);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_VOID, 0);
	set_inf_attr(INF_XREFNUM, 2);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_AUTO, 1);
	set_inf_attr(INF_INDENT, 16);
	set_inf_attr(INF_COMMENT, 40);
	set_inf_attr(INF_MAXREF, 0x10);
	add_default_til("armv12");
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	set_selector(0X1,0);
	set_selector(0X2,0);
	set_selector(0X3,0);
	set_selector(0X4,0);
	set_selector(0X5,0);
	set_selector(0X6,0);
	set_selector(0X7,0);
	;
	add_segm_ex(0XA000,0X25BA0,0X3,1,8,2,ADDSEG_NOSREG);
	SegRename(0XA000,".text");
	SegClass (0XA000,"CODE");
	SegDefReg(0xA000,"T",0x0);
	SegDefReg(0xA000,"DS",0x4);
	set_segm_type(0XA000,2);
	add_segm_ex(0X25BA0,0X2B1AC,0X4,1,8,2,ADDSEG_NOSREG);
	SegRename(0X25BA0,".data");
	SegClass (0X25BA0,"DATA");
	SegDefReg(0x25BA0,"T",0x0);
	SegDefReg(0x25BA0,"DS",0x4);
	set_segm_type(0X25BA0,3);
	add_segm_ex(0X10000000,0X10008000,0X5,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X10000000,".bss");
	SegClass (0X10000000,"BSS");
	SegDefReg(0x10000000,"T",0x0);
	SegDefReg(0x10000000,"DS",0x4);
	set_segm_type(0X10000000,9);
	add_segm_ex(0X40000000,0X40050000,0X7,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X40000000,".bss2");
	SegClass (0X40000000,"BSS");
	SegDefReg(0x40000000,"T",0x0);
	SegDefReg(0x40000000,"DS",0x4);
	set_segm_type(0X40000000,9);
	add_segm_ex(0XA0001020,0XA0001028,0X1,1,5,2,ADDSEG_NOSREG);
	SegRename(0XA0001020,"EXIDX");
	SegClass (0XA0001020,"DATA");
	SegDefReg(0xA0001020,"T",0x0);
	SegDefReg(0xA0001020,"DS",0x4);
	set_segm_type(0XA0001020,3);
	add_segm_ex(0XE0000000,0XE0010000,0X6,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XE0000000,".bss3");
	SegClass (0XE0000000,"BSS");
	SegDefReg(0xE0000000,"T",0x0);
	SegDefReg(0xE0000000,"DS",0x4);
	set_segm_type(0XE0000000,9);
	set_inf_attr(INF_LOW_OFF, 0x20);
	set_inf_attr(INF_HIGH_OFF, 0xE0010000);
}

static Enums_0(id) {

	id = add_enum(-1,"FunctionalState",0x1100000);
	add_enum_member(id,"DISABLE",	0,	-1);
	add_enum_member(id,"ENABLE",	0X1,	-1);
	id = add_enum(-1,"system_defines",0x1100000);
	add_enum_member(id,"IRC_OSC",	0X3D0900,	-1);
	id = add_enum(-1,"IntStatus",0x1100000);
	add_enum_member(id,"RESET",	0,	-1);
	add_enum_member(id,"SET",	0X1,	-1);
	id = add_enum(-1,"RTC_CCR",0x1100000);
	add_enum_member(id,"RTC_CCR_CLKEN",	0X1,	-1);
	add_enum_member(id,"RTC_CCR_CTCRST",	0X2,	-1);
	add_enum_member(id,"RTC_CCR_CCALEN",	0X10,	-1);
	add_enum_member(id,"RTC_CCR_BITMASK",	0X13,	-1);
	id = add_enum(-1,"ADC_TYPE_INT_OPT",0x1100000);
	id = add_enum(-1,"CLKPWR_PCLKSEL",0x2200000);
	add_enum_member(id,"CLKPWR_PCLKSEL_WDT",	0,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_TIMER0",	0X2,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_TIMER1",	0X4,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_UART0",	0X6,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_UART1",	0X8,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_PWM1",	0XC,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_I2C0",	0XE,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_SPI",	0X10,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_SSP1",	0X14,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_DAC",	0X16,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_ADC",	0X18,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_CAN1",	0X1A,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_CAN2",	0X1C,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_ACF",	0X1E,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_QEI",	0X20,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_PCB",	0X24,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_I2C1",	0X26,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_SSP0",	0X2A,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_TIMER2",	0X2C,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_TIMER3",	0X2E,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_UART2",	0X30,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_UART3",	0X32,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_I2C2",	0X34,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_I2S",	0X36,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_RIT",	0X3A,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_SYSCON",	0X3C,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_MC",	0X3E,	-1);
	id = add_enum(-1,"OS_STATE_PEND",0x1100000);
	add_enum_member(id,"OS_TASK_PEND_ON_NOTHING",	0,	-1);
	add_enum_member(id,"OS_TASK_PEND_ON_FLAG",	0X1,	-1);
	add_enum_member(id,"OS_TASK_PEND_ON_TASK_Q",	0X2,	-1);
	add_enum_member(id,"OS_TASK_PEND_ON_MULTI",	0X3,	-1);
	add_enum_member(id,"OS_TASK_PEND_ON_MUTEX",	0X4,	-1);
	add_enum_member(id,"OS_TASK_PEND_ON_Q",	0X5,	-1);
	add_enum_member(id,"OS_TASK_PEND_ON_SEM",	0X6,	-1);
	add_enum_member(id,"OS_TASK_PEND_ON_TASK_SEM",	0X7,	-1);
	id = add_enum(-1,"WDT_MODE_OPT",0x1100000);
	add_enum_member(id,"WDT_MODE_INT_ONLY",	0,	-1);
	add_enum_member(id,"WDT_MODE_RESET",	0X1,	-1);
	id = add_enum(-1,"WDT_CLK_OPT",0x1100000);
	add_enum_member(id,"WDT_CLKSRC_IRC",	0,	-1);
	add_enum_member(id,"WDT_CLKSRC_PCLK",	0X1,	-1);
	add_enum_member(id,"WDT_CLKSRC_RTC",	0X2,	-1);
	id = add_enum(-1,"CLKPWR_PCLKSEL_CCLK",0x1100000);
	add_enum_member(id,"CLKPWR_PCLKSEL_CCLK_DIV_4",	0,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_CCLK_DIV_1",	0X1,	-1);
	add_enum_member(id,"CLKPWR_PCLKSEL_CCLK_DIV_2",	0X2,	-1);
	id = add_enum(-1,"OS_ERR",0x2200000);
	add_enum_member(id,"OS_ERR_NONE",	0,	-1);
	add_enum_member(id,"OS_ERR_A",	0X2710,	-1);
	add_enum_member(id,"OS_ERR_ACCEPT_ISR",	0X2711,	-1);
	add_enum_member(id,"OS_ERR_B",	0X2AF8,	-1);
	add_enum_member(id,"OS_ERR_C",	0X2EE0,	-1);
	add_enum_member(id,"OS_ERR_CREATE_ISR",	0X2EE1,	-1);
	add_enum_member(id,"OS_ERR_D",	0X32C8,	-1);
	add_enum_member(id,"OS_ERR_DEL_ISR",	0X32C9,	-1);
	add_enum_member(id,"OS_ERR_E",	0X36B0,	-1);
	add_enum_member(id,"OS_ERR_F",	0X3A98,	-1);
	add_enum_member(id,"OS_ERR_FATAL_RETURN",	0X3A99,	-1);
	add_enum_member(id,"OS_ERR_FLAG_GRP_DEPLETED",	0X3AFD,	-1);
	add_enum_member(id,"OS_ERR_FLAG_NOT_RDY",	0X3AFE,	-1);
	add_enum_member(id,"OS_ERR_FLAG_PEND_OPT",	0X3AFF,	-1);
	add_enum_member(id,"OS_ERR_FLUSH_ISR",	0X3B00,	-1);
	add_enum_member(id,"OS_ERR_G",	0X3E80,	-1);
	add_enum_member(id,"OS_ERR_H",	0X4268,	-1);
	add_enum_member(id,"OS_ERR_I",	0X4650,	-1);
	add_enum_member(id,"OS_ERR_J",	0X4A38,	-1);
	add_enum_member(id,"OS_ERR_K",	0X4E20,	-1);
	add_enum_member(id,"OS_ERR_L",	0X5208,	-1);
	add_enum_member(id,"OS_ERR_M",	0X55F0,	-1);
	add_enum_member(id,"OS_ERR_MEM_CREATE_ISR",	0X56B9,	-1);
	add_enum_member(id,"OS_ERR_MSG_POOL_EMPTY",	0X571D,	-1);
	add_enum_member(id,"OS_ERR_MUTEX_NOT_OWNER",	0X5781,	-1);
	add_enum_member(id,"OS_ERR_P",	0X61A8,	-1);
	add_enum_member(id,"OS_ERR_POST_NULL_PTR",	0X620D,	-1);
	add_enum_member(id,"OS_ERR_PRIO_EXIST",	0X6271,	-1);
	add_enum_member(id,"OS_ERR_PTR_INVALID",	0X62D5,	-1);
	add_enum_member(id,"OS_ERR_Q",	0X6590,	-1);
	add_enum_member(id,"OS_ERR_Q_FULL",	0X6591,	-1);
	add_enum_member(id,"OS_ERR_Q_EMPTY",	0X6592,	-1);
	add_enum_member(id,"OS_ERR_Q_MAX",	0X6593,	-1);
	add_enum_member(id,"OS_ERR_Q_SIZE",	0X6594,	-1);
	id = add_enum(-1,"CPU_ERR",0x1100000);
	add_enum_member(id,"CPU_ERR_NONE",	0,	-1);
	add_enum_member(id,"CPU_ERR_NULL_PTR",	0XA,	-1);
	add_enum_member(id,"CPU_ERR_NAME_SIZE",	0X3E8,	-1);
	add_enum_member(id,"CPU_ERR_TS_FREQ_INVALID",	0X7D0,	-1);
	id = add_enum(-1,"OS_PRIO",0x1100000);
	id = add_enum(-1,"OS_OPT",0x1100000);
	add_enum_member(id,"OS_OPT_NONE",	0,	-1);
	add_enum_member(id,"OS_OPT_DEL_ALWAYS",	0X1,	-1);
	add_enum_member(id,"OS_OPT_PEND_FLAG_CLR_ANY",	0X2,	-1);
	add_enum_member(id,"OS_OPT_PEND_FLAG_SET_ALL",	0X4,	-1);
	add_enum_member(id,"OS_OPT_PEND_FLAG_SET_ANY",	0X8,	-1);
	add_enum_member(id,"OS_OPT_PEND_FLAG_CONSUME",	0X100,	-1);
	add_enum_member(id,"OS_OPT_PEND_NON_BLOCKING",	0X8000,	-1);
	id = add_enum(-1,"CPU_INT_BIT",0x1100000);
	add_enum_member(id,"CPU_INT_STK_PTR",	0,	-1);
	add_enum_member(id,"CPU_INT_RESET",	0X1,	-1);
	add_enum_member(id,"CPU_INT_NMI",	0X2,	-1);
	add_enum_member(id,"CPU_INT_HFAULT",	0X3,	-1);
	add_enum_member(id,"CPU_INT_MEM",	0X4,	-1);
	add_enum_member(id,"CPU_INT_BUSFAULT",	0X5,	-1);
	add_enum_member(id,"CPU_INT_USAGEFAULT",	0X6,	-1);
	add_enum_member(id,"CPU_INT_RSVD_07",	0X7,	-1);
	add_enum_member(id,"CPU_INT_RSVD_08",	0X8,	-1);
	add_enum_member(id,"CPU_INT_RSVD_09",	0X9,	-1);
	add_enum_member(id,"CPU_INT_RSVD_10",	0XA,	-1);
	add_enum_member(id,"CPU_INT_SVCALL",	0XB,	-1);
	add_enum_member(id,"CPU_INT_DBGMON",	0XC,	-1);
	add_enum_member(id,"CPU_INT_RSVD_13",	0XD,	-1);
	add_enum_member(id,"CPU_INT_PENDSV",	0XE,	-1);
	add_enum_member(id,"CPU_INT_SYSTICK",	0XF,	-1);
	add_enum_member(id,"CPU_INT_EXT0",	0X10,	-1);
	id = add_enum(-1,"CPU_STK",0x1100000);
	set_enum_cmt(id,"Defines CPU stack word size (in octets).",1);
	id = add_enum(-1,"IAP_CAMMAND",0x1100000);
	add_enum_member(id,"IAP_PREWRRITE_CMD",	0X32,	-1);
	add_enum_member(id,"IAP_WRISECTOR_CMD",	0X33,	-1);
	add_enum_member(id,"IAP_ERSSECTOR_CMD",	0X34,	-1);
	add_enum_member(id,"IAP_BLANK_CHECK_SECTOR_CMD",	0X35,	-1);
	add_enum_member(id,"IAP_REPID_CMD",	0X36,	-1);
	add_enum_member(id,"IAP_READ_BOOT_CODE_CMD",	0X37,	-1);
	add_enum_member(id,"IAP_COMPARE_CMD",	0X38,	-1);
	add_enum_member(id,"IAP_REINVOKE_ISP_CMD",	0X39,	-1);
	add_enum_member(id,"IAP_READ_UID_CMD",	0X3A,	-1);
	add_enum_member(id,"IAP_ERASE_PAGE_CMD",	0X3B,	-1);
	add_enum_member(id,"IAP_EEPROM_WRITE",	0X3D,	-1);
	add_enum_member(id,"IAP_EEPROM_READ",	0X3E,	-1);
	id = add_enum(-1,"RTC_TIMETYPE_Num",0x1100000);
	add_enum_member(id,"RTC_TIMETYPE_SECOND",	0,	-1);
	add_enum_member(id,"RTC_TIMETYPE_MINUTE",	0X1,	-1);
	add_enum_member(id,"RTC_TIMETYPE_HOUR",	0X2,	-1);
	add_enum_member(id,"RTC_TIMETYPE_DAYOFWEEK",	0X3,	-1);
	add_enum_member(id,"RTC_TIMETYPE_DAYOFMONTH",	0X4,	-1);
	add_enum_member(id,"RTC_TIMETYPE_DAYOFYEAR",	0X5,	-1);
	add_enum_member(id,"RTC_TIMETYPE_MONTH",	0X6,	-1);
	add_enum_member(id,"RTC_TIMETYPE_YEAR",	0X7,	-1);
	id = add_enum(-1,"PACKET_FIELDS",0x1100000);
	add_enum_member(id,"PACKET_DELIMITER",	0X55,	-1);
	id = add_enum(-1,"PktCmd_CommandSets",0x1100000);
	add_enum_member(id,"CMDSET_Universal",	0,	-1);
	add_enum_member(id,"CMDSET_Special",	0X1,	-1);
	add_enum_member(id,"CMDSET_Camera",	0X2,	-1);
	add_enum_member(id,"CMDSET_FlightCtrl",	0X3,	-1);
	add_enum_member(id,"CMDSET_Gimbal",	0X4,	-1);
	add_enum_member(id,"CMDSET_CentrBoard",	0X5,	-1);
	add_enum_member(id,"CMDSET_RemtCtrl",	0X6,	-1);
	add_enum_member(id,"CMDSET_WiFi",	0X7,	-1);
	add_enum_member(id,"CMDSET_DM368",	0X8,	-1);
	add_enum_member(id,"CMDSET_HDVidTx",	0X9,	-1);
	add_enum_member(id,"CMDSET_MonBinOcular",	0XA,	-1);
	add_enum_member(id,"CMDSET_Simult",	0XB,	-1);
	add_enum_member(id,"CMDSET_ESC",	0XC,	-1);
	add_enum_member(id,"CMDSET_SmartBat",	0XD,	-1);
	add_enum_member(id,"CMDSET_DataLoggr",	0XE,	-1);
	add_enum_member(id,"CMDSET_RTK",	0XF,	-1);
	add_enum_member(id,"CMDSET_Automatn",	0X10,	-1);
	id = add_enum(-1,"PktCmdSet_Universal",0x1100000);
	id = add_enum(-1,"PktCmdSet_Special",0x1100000);
	id = add_enum(-1,"PktCmdSet_Camera",0x1100000);
	id = add_enum(-1,"PktCmdSet_FlightCtrl",0x1100000);
	id = add_enum(-1,"PktCmdSet_Gimbal",0x1100000);
	id = add_enum(-1,"PktCmdSet_CentrBoard",0x1100000);
	id = add_enum(-1,"PktCmdSet_RemtCtrl",0x1100000);
	add_enum_member(id,"PKTCMD_GetPowerZone",	0X21,	-1);
	id = add_enum(-1,"PktCmdSet_WiFi",0x1100000);
	id = add_enum(-1,"PktCmdSet_DM368",0x1100000);
	id = add_enum(-1,"PktCmdSet_HDVidTx",0x1100000);
	id = add_enum(-1,"PktCmdSet_MonBinOcular",0x1100000);
	id = add_enum(-1,"PktCmdSet_Simult",0x1100000);
	id = add_enum(-1,"PktCmdSet_ESC",0x1100000);
	id = add_enum(-1,"PktCmdSet_SmartBat",0x1100000);
	id = add_enum(-1,"PktCmdSet_DataLoggr",0x1100000);
	id = add_enum(-1,"PktCmdSet_RTK",0x1100000);
	id = add_enum(-1,"PktCmdSet_Automatn",0x1100000);
	id = add_enum(-1,"OFDM_CONF_NREG",0x1100000);
	add_enum_member(id,"NREG_TARGET_TCX",	0,	-1);
	add_enum_member(id,"NREG_TARGET_FPGA",	0XFE00,	-1);
	add_enum_member(id,"NREG_TARGET_MCU",	0XFF00,	-1);
	id = add_enum(-1,"BoardVersion",0x1100000);
	add_enum_member(id,"BOARD_VER_0",	0,	-1);
	add_enum_member(id,"BOARD_VER_1",	0X1,	-1);
	add_enum_member(id,"BOARD_VER_AD_2",	0X2,	-1);
	add_enum_member(id,"BOARD_VER_3",	0X3,	-1);
	add_enum_member(id,"BOARD_VER_AD_4",	0X4,	-1);
	add_enum_member(id,"BOARD_VER_AD_5",	0X5,	-1);
	add_enum_member(id,"BOARD_VER_AR_6",	0X6,	-1);
	add_enum_member(id,"BOARD_VER_AR_7",	0X7,	-1);
	id = add_enum(-1,"SPI_AD9363_REG_DEFINES",0x1100000);
	add_enum_member(id,"AD9363_REG_SPI_CONF",	0,	-1);
	add_enum_member(id,"AD9363_REG_MULTICHIP_SYNC_AND_TX_MON_CTRL",	0X1,	-1);
	add_enum_member(id,"AD9363_REG_TX_ENABLE_FILTER_CTRL",	0X2,	-1);
	add_enum_member(id,"AD9363_REG_RX_ENABLE_FILTER_CTRL",	0X3,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_SELECT",	0X4,	-1);
	add_enum_member(id,"AD9363_REG_RFPLL_DIVIDERS",	0X5,	-1);
	add_enum_member(id,"AD9363_REG_RX_CLOCK_DATA_DELAY",	0X6,	-1);
	add_enum_member(id,"AD9363_REG_TX_CLOCK_DATA_DELAY",	0X7,	-1);
	add_enum_member(id,"AD9363_REG_CLOCK_ENABLE",	0X9,	-1);
	add_enum_member(id,"AD9363_REG_BBPLL",	0XA,	-1);
	add_enum_member(id,"AD9363_REG_TEMP_OFFSET",	0XB,	-1);
	add_enum_member(id,"AD9363_REG_START_TEMP_READING",	0XC,	-1);
	add_enum_member(id,"AD9363_REG_TEMP_SENSE2",	0XD,	-1);
	add_enum_member(id,"AD9363_REG_TEMPERATURE",	0XE,	-1);
	add_enum_member(id,"AD9363_REG_TEMP_SENSOR_CONFIG",	0XF,	-1);
	add_enum_member(id,"AD9363_REG_PARALLEL_PORT_CONF_1",	0X10,	-1);
	add_enum_member(id,"AD9363_REG_PARALLEL_PORT_CONF_2",	0X11,	-1);
	add_enum_member(id,"AD9363_REG_PARALLEL_PORT_CONF_3",	0X12,	-1);
	add_enum_member(id,"AD9363_REG_ENSM_MODE",	0X13,	-1);
	add_enum_member(id,"AD9363_REG_ENSM_CONFIG_1",	0X14,	-1);
	add_enum_member(id,"AD9363_REG_ENSM_CONFIG_2",	0X15,	-1);
	add_enum_member(id,"AD9363_REG_CALIBRATION_CTRL",	0X16,	-1);
	add_enum_member(id,"AD9363_REG_STATE",	0X17,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_1_WORD",	0X18,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_2_WORD",	0X19,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_1_CONFIG",	0X1A,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_2_CONFIG",	0X1B,	-1);
	add_enum_member(id,"AD9363_REG_AUXADC_CLOCK_DIVIDER",	0X1C,	-1);
	add_enum_member(id,"AD9363_REG_AUXADC_CONFIG",	0X1D,	-1);
	add_enum_member(id,"AD9363_REG_AUXADC_WORD_MSB",	0X1E,	-1);
	add_enum_member(id,"AD9363_REG_AUXADC_LSB",	0X1F,	-1);
	add_enum_member(id,"AD9363_REG_AUTO_GPO",	0X20,	-1);
	add_enum_member(id,"AD9363_REG_AGC_GAIN_LOCK_DELAY",	0X21,	-1);
	add_enum_member(id,"AD9363_REG_AGC_ATTACK_DELAY",	0X22,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_ENABLE_CTRL",	0X23,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOAD_SYNTH_DELAY",	0X24,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOAD_SYNTH_DELAY",	0X25,	-1);
	add_enum_member(id,"AD9363_REG_EXTERNAL_LNA_CTRL",	0X26,	-1);
	add_enum_member(id,"AD9363_REG_GPO_FORCE_AND_INIT",	0X27,	-1);
	add_enum_member(id,"AD9363_REG_GPO0_RX_DELAY",	0X28,	-1);
	add_enum_member(id,"AD9363_REG_GPO1_RX_DELAY",	0X29,	-1);
	add_enum_member(id,"AD9363_REG_GPO2_RX_DELAY",	0X2A,	-1);
	add_enum_member(id,"AD9363_REG_GPO3_RX_DELAY",	0X2B,	-1);
	add_enum_member(id,"AD9363_REG_GPO0_TX_DELAY",	0X2C,	-1);
	add_enum_member(id,"AD9363_REG_GPO1_TX_DELAY",	0X2D,	-1);
	add_enum_member(id,"AD9363_REG_GPO2_TX_DELAY",	0X2E,	-1);
	add_enum_member(id,"AD9363_REG_GPO3_TX_DELAY",	0X2F,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC1_RX_DELAY",	0X30,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC1_TX_DELAY",	0X31,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC2_RX_DELAY",	0X32,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC2_TX_DELAY",	0X33,	-1);
	add_enum_member(id,"AD9363_REG_CTRL_OUTPUT_POINTER",	0X35,	-1);
	add_enum_member(id,"AD9363_REG_CTRL_OUTPUT_ENABLE",	0X36,	-1);
	add_enum_member(id,"AD9363_REG_PRODUCT_ID",	0X37,	-1);
	add_enum_member(id,"AD9363_REG_REFERENCE_CLOCK_CYCLES",	0X3A,	-1);
	add_enum_member(id,"AD9363_REG_DIGITAL_IO_CTRL",	0X3B,	-1);
	add_enum_member(id,"AD9363_REG_LVDS_BIAS_CTRL",	0X3C,	-1);
	add_enum_member(id,"AD9363_REG_LVDS_INVERT_CTRL1",	0X3D,	-1);
	add_enum_member(id,"AD9363_REG_LVDS_INVERT_CTRL2",	0X3E,	-1);
	add_enum_member(id,"AD9363_REG_SDM_CTRL_1",	0X3F,	-1);
	add_enum_member(id,"AD9363_REG_FRACT_BB_FREQ_WORD_1",	0X41,	-1);
	add_enum_member(id,"AD9363_REG_FRACT_BB_FREQ_WORD_2",	0X42,	-1);
	add_enum_member(id,"AD9363_REG_FRACT_BB_FREQ_WORD_3",	0X43,	-1);
	add_enum_member(id,"AD9363_REG_INTEGER_BB_FREQ_WORD",	0X44,	-1);
	add_enum_member(id,"AD9363_REG_CLOCK_CTRL",	0X45,	-1);
	add_enum_member(id,"AD9363_REG_CP_CURRENT",	0X46,	-1);
	add_enum_member(id,"AD9363_REG_CP_BLEED_CURRENT",	0X47,	-1);
	add_enum_member(id,"AD9363_REG_LOOP_FILTER_1",	0X48,	-1);
	add_enum_member(id,"AD9363_REG_LOOP_FILTER_2",	0X49,	-1);
	add_enum_member(id,"AD9363_REG_LOOP_FILTER_3",	0X4A,	-1);
	add_enum_member(id,"AD9363_REG_VCO_CTRL",	0X4B,	-1);
	add_enum_member(id,"AD9363_REG_VCO_PROGRAM_1",	0X4C,	-1);
	add_enum_member(id,"AD9363_REG_VCO_PROGRAM_2",	0X4D,	-1);
	add_enum_member(id,"AD9363_REG_SDM_CTRL",	0X4E,	-1);
	add_enum_member(id,"AD9363_REG_UNKNOWN_50",	0X50,	-1);
	add_enum_member(id,"AD9363_REG_RX_ANALOG_POWER_DOWN_OVERRIDE_1",	0X52,	-1);
	add_enum_member(id,"AD9363_REG_RX_ANALOG_POWER_DOWN_OVERRIDE_2",	0X53,	-1);
	add_enum_member(id,"AD9363_REG_RX1_ADC_POWER_DOWN_OVERRIDE",	0X54,	-1);
	add_enum_member(id,"AD9363_REG_RX2_ADC_POWER_DOWN_OVERRIDE",	0X55,	-1);
	add_enum_member(id,"AD9363_REG_TX_ANALOG_POWER_DOWN_OVERRIDE_1",	0X56,	-1);
	add_enum_member(id,"AD9363_REG_ANALOG_POWER_DOWN_OVERRIDE",	0X57,	-1);
	add_enum_member(id,"AD9363_REG_MISC_POWER_DOWN_OVERRIDE",	0X58,	-1);
	add_enum_member(id,"AD9363_REG_UNKNOWN_5C",	0X5C,	-1);
	add_enum_member(id,"AD9363_REG_CH_1_OVERFLOW",	0X5E,	-1);
	add_enum_member(id,"AD9363_REG_CH_2_OVERFLOW",	0X5F,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_ADDR",	0X60,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_WRITE_DATA_1",	0X61,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_WRITE_DATA_2",	0X62,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_READ_DATA_1",	0X63,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_READ_DATA_2",	0X64,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_CONF",	0X65,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_LOW_GAIN",	0X67,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_HIGH_GAIN",	0X68,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_DELAY",	0X69,	-1);
	add_enum_member(id,"AD9363_REG_TX_LEVEL_THRESH",	0X6A,	-1);
	add_enum_member(id,"AD9363_REG_TX_RSSI1",	0X6B,	-1);
	add_enum_member(id,"AD9363_REG_TX_RSSI2",	0X6C,	-1);
	add_enum_member(id,"AD9363_REG_TX_RSSI_LSB",	0X6D,	-1);
	add_enum_member(id,"AD9363_REG_TPM_MODE_ENABLE",	0X6E,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_TEMP_GAIN_COEF",	0X6F,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_1_CONFIG",	0X70,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_2_CONFIG",	0X71,	-1);
	add_enum_member(id,"AD9363_REG_TX1_ATTEN_0",	0X73,	-1);
	add_enum_member(id,"AD9363_REG_TX1_ATTEN_1",	0X74,	-1);
	add_enum_member(id,"AD9363_REG_TX2_ATTEN_0",	0X75,	-1);
	add_enum_member(id,"AD9363_REG_TX2_ATTEN_1",	0X76,	-1);
	add_enum_member(id,"AD9363_REG_TX_ATTEN_OFFSET",	0X77,	-1);
	add_enum_member(id,"AD9363_REG_TX_ATTEN_THRESH",	0X78,	-1);
	add_enum_member(id,"AD9363_REG_TX1_DIG_ATTEN",	0X79,	-1);
	add_enum_member(id,"AD9363_REG_TX2_DIG_ATTEN",	0X7C,	-1);
	add_enum_member(id,"AD9363_REG_TX1_SYMBOL_ATTEN",	0X7F,	-1);
	add_enum_member(id,"AD9363_REG_TX2_SYMBOL_ATTEN",	0X80,	-1);
	add_enum_member(id,"AD9363_REG_TX_SYMBOL_ATTEN_CONFIG",	0X81,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_1_PHASE_CORR",	0X8E,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_1_GAIN_CORR",	0X8F,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_1_PHASE_CORR",	0X90,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_1_GAIN_CORR",	0X91,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_1_OFFSET_I",	0X92,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_1_OFFSET_Q",	0X93,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_1_OFFSET_I",	0X94,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_1_OFFSET_Q",	0X95,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_2_PHASE_CORR",	0X96,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_2_GAIN_CORR",	0X97,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_2_PHASE_CORR",	0X98,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_2_GAIN_CORR",	0X99,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_2_OFFSET_I",	0X9A,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_2_OFFSET_Q",	0X9B,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_2_OFFSET_I",	0X9C,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_2_OFFSET_Q",	0X9D,	-1);
	add_enum_member(id,"AD9363_REG_TX_FORCE_BITS",	0X9F,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_NCO_FREQ_PHASE_OFFSET",	0XA0,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_CTRL",	0XA1,	-1);
	add_enum_member(id,"AD9363_REG_KEXP_1",	0XA2,	-1);
	add_enum_member(id,"AD9363_REG_KEXP_2",	0XA3,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_SETTLE_COUNT",	0XA4,	-1);
	add_enum_member(id,"AD9363_REG_MAG_FTEST_THRESH",	0XA5,	-1);
	add_enum_member(id,"AD9363_REG_MAG_FTEST_THRESH_2",	0XA6,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_STATUS_TX1",	0XA7,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_STATUS_TX2",	0XA8,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_COUNT",	0XA9,	-1);
	add_enum_member(id,"AD9363_REG_TX_QUAD_FULL_LMT_GAIN",	0XAA,	-1);
	add_enum_member(id,"AD9363_REG_SQUARER_CONFIG",	0XAB,	-1);
	add_enum_member(id,"AD9363_REG_TX_QUAD_CAL_ATTEN",	0XAC,	-1);
	add_enum_member(id,"AD9363_REG_THRESH_ACCUM",	0XAD,	-1);
	add_enum_member(id,"AD9363_REG_TX_QUAD_LPF_GAIN",	0XAE,	-1);
	add_enum_member(id,"AD9363_REG_TXDAC_VDS_I",	0XB0,	-1);
	add_enum_member(id,"AD9363_REG_TXDAC_VDS_Q",	0XB1,	-1);
	add_enum_member(id,"AD9363_REG_TXDAC_GN_I",	0XB2,	-1);
	add_enum_member(id,"AD9363_REG_TXDAC_GN_Q",	0XB3,	-1);
	add_enum_member(id,"AD9363_REG_TXBBF_OPAMP_A",	0XC0,	-1);
	add_enum_member(id,"AD9363_REG_TXBBF_OPAMP_B",	0XC1,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R1",	0XC2,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R2",	0XC3,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R3",	0XC4,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R4",	0XC5,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_RP",	0XC6,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_C1",	0XC7,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_C2",	0XC8,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_CP",	0XC9,	-1);
	add_enum_member(id,"AD9363_REG_TX_TUNE_CTRL",	0XCA,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R2B",	0XCB,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_TUNE",	0XCC,	-1);
	add_enum_member(id,"AD9363_REG_CONFIG0",	0XD0,	-1);
	add_enum_member(id,"AD9363_REG_RESISTOR",	0XD1,	-1);
	add_enum_member(id,"AD9363_REG_CAPACITOR",	0XD2,	-1);
	add_enum_member(id,"AD9363_REG_LO_CM",	0XD3,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_TUNE_DIVIDER",	0XD6,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_TUNE_MODE",	0XD7,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_ADDR",	0XF0,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_DATA_1",	0XF1,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_DATA_2",	0XF2,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_READ_DATA_1",	0XF3,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_READ_DATA_2",	0XF4,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_CONFIG",	0XF5,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_GAIN",	0XF6,	-1);
	add_enum_member(id,"AD9363_REG_AGC_CONFIG_1",	0XFA,	-1);
	add_enum_member(id,"AD9363_REG_AGC_CONFIG_2",	0XFB,	-1);
	add_enum_member(id,"AD9363_REG_AGC_CONFIG_3",	0XFC,	-1);
	add_enum_member(id,"AD9363_REG_MAX_LMT_FULL_GAIN",	0XFD,	-1);
	add_enum_member(id,"AD9363_REG_PEAK_WAIT_TIME",	0XFE,	-1);
	add_enum_member(id,"AD9363_REG_DIGITAL_GAIN",	0X100,	-1);
	add_enum_member(id,"AD9363_REG_AGC_LOCK_LEVEL",	0X101,	-1);
	add_enum_member(id,"AD9363_REG_ADC_NOISE_CORRECTION_FACTOR",	0X102,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_STP_CONFIG1",	0X103,	-1);
	add_enum_member(id,"AD9363_REG_ADC_SMALL_OVERLOAD_THRESH",	0X104,	-1);
	add_enum_member(id,"AD9363_REG_ADC_LARGE_OVERLOAD_THRESH",	0X105,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_STP_CONFIG_2",	0X106,	-1);
	add_enum_member(id,"AD9363_REG_SMALL_LMT_OVERLOAD_THRESH",	0X107,	-1);
	add_enum_member(id,"AD9363_REG_LARGE_LMT_OVERLOAD_THRESH",	0X108,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MANUAL_LMT_FULL_GAIN",	0X109,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MANUAL_LPF_GAIN",	0X10A,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MANUAL_DIGITALFORCED_GAIN",	0X10B,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MANUAL_LMT_FULL_GAIN",	0X10C,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MANUAL_LPF_GAIN",	0X10D,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MANUAL_DIGITALFORCED_GAIN",	0X10E,	-1);
	add_enum_member(id,"AD9363_REG_FAST_CONFIG_1",	0X110,	-1);
	add_enum_member(id,"AD9363_REG_FAST_CONFIG_2_SETTLING_DELAY",	0X111,	-1);
	add_enum_member(id,"AD9363_REG_FAST_ENERGY_LOST_THRESH",	0X112,	-1);
	add_enum_member(id,"AD9363_REG_FAST_STRONGER_SIGNAL_THRESH",	0X113,	-1);
	add_enum_member(id,"AD9363_REG_FAST_LOW_POWER_THRESH",	0X114,	-1);
	add_enum_member(id,"AD9363_REG_FAST_STRONG_SIGNAL_FREEZE",	0X115,	-1);
	add_enum_member(id,"AD9363_REG_FAST_FINAL_OVER_RANGE_AND_OPT_GAIN",	0X116,	-1);
	add_enum_member(id,"AD9363_REG_FAST_ENERGY_DETECT_COUNT",	0X117,	-1);
	add_enum_member(id,"AD9363_REG_FAST_AGCLL_UPPER_LIMIT",	0X118,	-1);
	add_enum_member(id,"AD9363_REG_FAST_GAIN_LOCK_EXIT_COUNT",	0X119,	-1);
	add_enum_member(id,"AD9363_REG_FAST_INITIAL_LMT_GAIN_LIMIT",	0X11A,	-1);
	add_enum_member(id,"AD9363_REG_FAST_INCREMENT_TIME",	0X11B,	-1);
	add_enum_member(id,"AD9363_REG_AGC_INNER_LOW_THRESH",	0X120,	-1);
	add_enum_member(id,"AD9363_REG_LMT_OVERLOAD_COUNTERS",	0X121,	-1);
	add_enum_member(id,"AD9363_REG_ADC_OVERLOAD_COUNTERS",	0X122,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_STP1",	0X123,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_UPDATE_COUNTER1",	0X124,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_UPDATE_COUNTER2",	0X125,	-1);
	add_enum_member(id,"AD9363_REG_DIGITAL_SAT_COUNTER",	0X128,	-1);
	add_enum_member(id,"AD9363_REG_OUTER_POWER_THRESHS",	0X129,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_STP_2",	0X12A,	-1);
	add_enum_member(id,"AD9363_REG_EXT_LNA_HIGH_GAIN",	0X12C,	-1);
	add_enum_member(id,"AD9363_REG_EXT_LNA_LOW_GAIN",	0X12D,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_ADDRESS",	0X130,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_WRITE_DATA1",	0X131,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_WRITE_DATA2",	0X132,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_WRITE_DATA3",	0X133,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_READ_DATA1",	0X134,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_READ_DATA2",	0X135,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_READ_DATA3",	0X136,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_CONFIG",	0X137,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_ADDRESS",	0X138,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_GAIN_WRITE",	0X139,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_BIAS_WRITE",	0X13A,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_CTRL_WRITE",	0X13B,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_GAIN_READ",	0X13C,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_BIAS_READ",	0X13D,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_CTRL_READ",	0X13E,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_CONFIG",	0X13F,	-1);
	add_enum_member(id,"AD9363_REG_WORD_ADDRESS",	0X140,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_DIFF_WORDERROR_WRITE",	0X141,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_ERROR_READ",	0X142,	-1);
	add_enum_member(id,"AD9363_REG_CONFIG",	0X143,	-1);
	add_enum_member(id,"AD9363_REG_LNA_GAIN_DIFF_READ_BACK",	0X144,	-1);
	add_enum_member(id,"AD9363_REG_MAX_MIXER_CALIBRATION_GAIN_INDEX",	0X145,	-1);
	add_enum_member(id,"AD9363_REG_TEMP_GAIN_COEF",	0X146,	-1);
	add_enum_member(id,"AD9363_REG_SETTLE_TIME",	0X147,	-1);
	add_enum_member(id,"AD9363_REG_MEASURE_DURATION",	0X148,	-1);
	add_enum_member(id,"AD9363_REG_CAL_TEMP_SENSOR_WORD",	0X149,	-1);
	add_enum_member(id,"AD9363_REG_MEASURE_DURATION_01",	0X150,	-1);
	add_enum_member(id,"AD9363_REG_MEASURE_DURATION_23",	0X151,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WEIGHT_0",	0X152,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WEIGHT_1",	0X153,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WEIGHT_2",	0X154,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WEIGHT_3",	0X155,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_DELAY",	0X156,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WAIT_TIME",	0X157,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_CONFIG",	0X158,	-1);
	add_enum_member(id,"AD9363_REG_ADC_MEASURE_DURATION_01",	0X159,	-1);
	add_enum_member(id,"AD9363_REG_ADC_WEIGHT_0",	0X15A,	-1);
	add_enum_member(id,"AD9363_REG_ADC_WEIGHT_1",	0X15B,	-1);
	add_enum_member(id,"AD9363_REG_DEC_POWER_MEASURE_DURATION_0",	0X15C,	-1);
	add_enum_member(id,"AD9363_REG_LNA_GAIN",	0X15D,	-1);
	add_enum_member(id,"AD9363_REG_CH1_ADC_POWER",	0X160,	-1);
	add_enum_member(id,"AD9363_REG_CH1_RX_FILTER_POWER",	0X161,	-1);
	add_enum_member(id,"AD9363_REG_CH2_ADC_POWER",	0X162,	-1);
	add_enum_member(id,"AD9363_REG_CH2_RX_FILTER_POWER",	0X163,	-1);
	add_enum_member(id,"AD9363_REG_RX_QUAD_CAL_LEVEL",	0X168,	-1);
	add_enum_member(id,"AD9363_REG_CALIBRATION_CONFIG_1",	0X169,	-1);
	add_enum_member(id,"AD9363_REG_CALIBRATION_CONFIG_2",	0X16A,	-1);
	add_enum_member(id,"AD9363_REG_CALIBRATION_CONFIG_3",	0X16B,	-1);
	add_enum_member(id,"AD9363_REG_CALIB_COUNT",	0X16C,	-1);
	add_enum_member(id,"AD9363_REG_RX_QUAD_GAIN1",	0X16E,	-1);
	add_enum_member(id,"AD9363_REG_RX_QUAD_GAIN2",	0X16F,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_A_PHASE_CORR",	0X170,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_A_GAIN_CORR",	0X171,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_A_PHASE_CORR",	0X172,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_A_GAIN_CORR",	0X173,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_A_Q_OFFSET",	0X174,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_A_OFFSETS",	0X175,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_OFFSETS_1",	0X176,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_A_OFFSETS",	0X177,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_A_I_OFFSET",	0X178,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_BC_PHASE_CORR",	0X179,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_BC_GAIN_CORR",	0X17A,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_BC_PHASE_CORR",	0X17B,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_BC_GAIN_CORR",	0X17C,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_BC_Q_OFFSET",	0X17D,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_BC_OFFSETS",	0X17E,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_BC_OFFSETS_1",	0X17F,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_BC_OFFSETS",	0X180,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_BC_I_OFFSET",	0X181,	-1);
	add_enum_member(id,"AD9363_REG_FORCE_BITS",	0X182,	-1);
	add_enum_member(id,"AD9363_REG_WAIT_COUNT",	0X185,	-1);
	add_enum_member(id,"AD9363_REG_RF_DC_OFFSET_COUNT",	0X186,	-1);
	add_enum_member(id,"AD9363_REG_RF_DC_OFFSET_CONFIG_1",	0X187,	-1);
	add_enum_member(id,"AD9363_REG_RF_DC_OFFSET_ATTEN",	0X188,	-1);
	add_enum_member(id,"AD9363_REG_INVERT_BITS",	0X189,	-1);
	add_enum_member(id,"AD9363_REG_DC_OFFSET_CONFIG2",	0X18B,	-1);
	add_enum_member(id,"AD9363_REG_RF_CAL_GAIN_INDEX",	0X18C,	-1);
	add_enum_member(id,"AD9363_REG_SOI_THRESH",	0X18D,	-1);
	add_enum_member(id,"AD9363_REG_BB_DC_OFFSET_SHIFT",	0X190,	-1);
	add_enum_member(id,"AD9363_REG_BB_DC_OFFSET_FAST_SETTLE_SHIFT",	0X191,	-1);
	add_enum_member(id,"AD9363_REG_BB_FAST_SETTLE_DUR",	0X192,	-1);
	add_enum_member(id,"AD9363_REG_BB_DC_OFFSET_COUNT",	0X193,	-1);
	add_enum_member(id,"AD9363_REG_BB_DC_OFFSET_ATTEN",	0X194,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BB_DC_WORD_I_MSB",	0X19A,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BB_DC_WORD_I_LSB",	0X19B,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BB_DC_WORD_Q_MSB",	0X19C,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BB_DC_WORD_Q_LSB",	0X19D,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BB_DC_WORD_I_MSB",	0X19E,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BB_DC_WORD_I_LSB",	0X19F,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BB_DC_WORD_Q_MSB",	0X1A0,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BB_DC_WORD_Q_LSB",	0X1A1,	-1);
	add_enum_member(id,"AD9363_REG_BB_TRACK_CORR_WORD_I_MSB",	0X1A2,	-1);
	add_enum_member(id,"AD9363_REG_BB_TRACK_CORR_WORD_I_LSB",	0X1A3,	-1);
	add_enum_member(id,"AD9363_REG_BB_TRACK_CORR_WORD_Q_MSB",	0X1A4,	-1);
	add_enum_member(id,"AD9363_REG_BB_TRACK_CORR_WORD_Q_LSB",	0X1A5,	-1);
	add_enum_member(id,"AD9363_REG_RX1_RSSI_SYMBOL",	0X1A7,	-1);
	add_enum_member(id,"AD9363_REG_RX1_RSSI_PREAMBLE",	0X1A8,	-1);
	add_enum_member(id,"AD9363_REG_RX2_RSSI_SYMBOL",	0X1A9,	-1);
	add_enum_member(id,"AD9363_REG_RX2_RSSI_PREAMBLE",	0X1AA,	-1);
	add_enum_member(id,"AD9363_REG_SYMBOL_LSB",	0X1AB,	-1);
	add_enum_member(id,"AD9363_REG_PREAMBLE_LSB",	0X1AC,	-1);
	add_enum_member(id,"AD9363_REG_RX_PATH_GAIN_MSB",	0X1AD,	-1);
	add_enum_member(id,"AD9363_REG_RX_PATH_GAIN_LSB",	0X1AE,	-1);
	add_enum_member(id,"AD9363_REG_RX_DIFF_LNA_FORCE",	0X1B0,	-1);
	add_enum_member(id,"AD9363_REG_RX_LNA_BIAS_COARSE",	0X1B1,	-1);
	add_enum_member(id,"AD9363_REG_RX_LNA_BIAS_FINE_0",	0X1B2,	-1);
	add_enum_member(id,"AD9363_REG_RX_LNA_BIAS_FINE_1",	0X1B3,	-1);
	add_enum_member(id,"AD9363_REG_RX_MIX_GM_CONFIG",	0X1C0,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MIX_GM_FORCE",	0X1C1,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MIX_GM_BIAS_FORCE",	0X1C2,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MIX_GM_FORCE",	0X1C3,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MIX_GM_BIAS_FORCE",	0X1C4,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_MSBS",	0X1C8,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_RX1_I",	0X1C9,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_RX1_Q",	0X1CA,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_RX2_I",	0X1CB,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_RX2_Q",	0X1CC,	-1);
	add_enum_member(id,"AD9363_REG_INPUTS_BC_RX1_I",	0X1CD,	-1);
	add_enum_member(id,"AD9363_REG_BAND1_RX1_Q",	0X1CE,	-1);
	add_enum_member(id,"AD9363_REG_INPUTS_BC_RX2_I",	0X1CF,	-1);
	add_enum_member(id,"AD9363_REG_INPUTS_BC_RX2_Q",	0X1D0,	-1);
	add_enum_member(id,"AD9363_REG_INPUTS_BC_MSBS",	0X1D1,	-1);
	add_enum_member(id,"AD9363_REG_FORCE_OS_DAC",	0X1D2,	-1);
	add_enum_member(id,"AD9363_REG_RX_MIX_LO_CM",	0X1D5,	-1);
	add_enum_member(id,"AD9363_REG_RX_CGB_SEG_ENABLE",	0X1D6,	-1);
	add_enum_member(id,"AD9363_REG_RX_MIX_INPUTBIAS",	0X1D7,	-1);
	add_enum_member(id,"AD9363_REG_RX_TIA_CONFIG",	0X1DB,	-1);
	add_enum_member(id,"AD9363_REG_TIA1_C_LSB",	0X1DC,	-1);
	add_enum_member(id,"AD9363_REG_TIA1_C_MSB",	0X1DD,	-1);
	add_enum_member(id,"AD9363_REG_TIA2_C_LSB",	0X1DE,	-1);
	add_enum_member(id,"AD9363_REG_TIA2_C_MSB",	0X1DF,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BBF_R1A",	0X1E0,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BBF_R1A",	0X1E1,	-1);
	add_enum_member(id,"AD9363_REG_RX1_TUNE_CTRL",	0X1E2,	-1);
	add_enum_member(id,"AD9363_REG_RX2_TUNE_CTRL",	0X1E3,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BBF_R5",	0X1E4,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BBF_R5",	0X1E5,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_R2346",	0X1E6,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C1_MSB",	0X1E7,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C1_LSB",	0X1E8,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C2_MSB",	0X1E9,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C2_LSB",	0X1EA,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C3_MSB",	0X1EB,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C3_LSB",	0X1EC,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_CC1_CTR",	0X1ED,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_POW_RZ_BYTE0",	0X1EE,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_CC2_CTR",	0X1EF,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_POW_RZ_BYTE1",	0X1F0,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_CC3_CTR",	0X1F1,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_R5_TUNE",	0X1F2,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_TUNE",	0X1F3,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BBF_MAN_GAIN",	0X1F4,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BBF_MAN_GAIN",	0X1F5,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_TUNE_DIVIDE",	0X1F8,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_TUNE_CONFIG",	0X1F9,	-1);
	add_enum_member(id,"AD9363_REG_POLE_GAIN",	0X1FA,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBBW_MHZ",	0X1FB,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBBW_KHZ",	0X1FC,	-1);
	add_enum_member(id,"AD9363_REG_FB_DAC_CLK_DELAY1",	0X201,	-1);
	add_enum_member(id,"AD9363_REG_FB_DAC_CLK_DELAY2",	0X202,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_SAMPLE_CLK_DELAY_3P",	0X203,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_SAMPLE_CLK_DELAY_3N",	0X204,	-1);
	add_enum_member(id,"AD9363_REG_TEST_MUX_2I",	0X205,	-1);
	add_enum_member(id,"AD9363_REG_TEST_MUX_2Q",	0X206,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_1_RESISTANCE",	0X207,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_1_CAPACITANCE",	0X208,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_23_RESISTANCE",	0X209,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_2_RESISTANCE",	0X20A,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_2_CAPACITANCE",	0X20B,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_3_RESISTANCE",	0X20C,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_3_CAPACITANCE",	0X20D,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_AMP_CC",	0X20E,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_FB_DAC_NMOS_CURRENT_SOURCE",	0X20F,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_FB_DAC_NMOS_CASOADE_BIAS_CURRENT",	0X210,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_FB_DAC_PMOS_CURRENT_SOURCE",	0X211,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_FB_DAC_NMOS_CURRENT_SOURCE",	0X212,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_FB_DAC_NMOS_CASCODE_BIAS_CURRENT",	0X213,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_FB_DAC_PMOS_CURRENT_SOURCE",	0X214,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_FB_DAC_NMOS_CURRENT_SOURCE",	0X215,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_FB_DAC_NMOS_CASCODE_BIAS_CURRENT",	0X216,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_FB_DAC_PMOS_CURRENT_SOURCE",	0X217,	-1);
	add_enum_member(id,"AD9363_REG_FB_DAC_BIAS_CURRENT",	0X218,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_1ST_STAGE_CURRENT",	0X219,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_1ST_STAGE_CASCODE_CURRENT",	0X21A,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_2ND_STAGE_CURRENT",	0X21B,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_2_1ST_STAGE_CURRENT",	0X21C,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_1ST_STAGE_CASCODE_CURRENT",	0X21D,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_2ND_STAGE_CURRENT",	0X21E,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_1ST_STAGE_CURRENT",	0X21F,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_1ST_STAGE_CASCODE_CURRENT",	0X220,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_2ND_STAGE_CURRENT",	0X221,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_BIAS_CURRENT",	0X222,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_LADDER_BIAS",	0X223,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_LADDER_BIAS2",	0X225,	-1);
	add_enum_member(id,"AD9363_REG_RESET",	0X226,	-1);
	add_enum_member(id,"AD9363_REG_RX_PFD_CONFIG",	0X230,	-1);
	add_enum_member(id,"AD9363_REG_RX_INTEGER_BYTE_0",	0X231,	-1);
	add_enum_member(id,"AD9363_REG_RX_INTEGER_BYTE_1",	0X232,	-1);
	add_enum_member(id,"AD9363_REG_RX_FRACT_BYTE_0",	0X233,	-1);
	add_enum_member(id,"AD9363_REG_RX_FRACT_BYTE_1",	0X234,	-1);
	add_enum_member(id,"AD9363_REG_RX_FRACT_BYTE_2",	0X235,	-1);
	add_enum_member(id,"AD9363_REG_RX_FORCE_ALC",	0X236,	-1);
	add_enum_member(id,"AD9363_REG_RX_FORCE_VCO_TUNE_0",	0X237,	-1);
	add_enum_member(id,"AD9363_REG_RX_FORCE_VCO_TUNE_1",	0X238,	-1);
	add_enum_member(id,"AD9363_REG_RX_ALC_VARACTOR",	0X239,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_OUTPUT",	0X23A,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_CURRENT",	0X23B,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_OFFSET",	0X23C,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_CONFIG",	0X23D,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOOP_FILTER_1",	0X23E,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOOP_FILTER_2",	0X23F,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOOP_FILTER_3",	0X240,	-1);
	add_enum_member(id,"AD9363_REG_RX_DITHERCP_CAL",	0X241,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_BIAS_1",	0X242,	-1);
	add_enum_member(id,"AD9363_REG_RX_CAL_STATUS",	0X244,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_CAL_REF",	0X245,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_PD_OVERRIDES",	0X246,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_OVERRANGE_VCO_LOCK",	0X247,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_LDO",	0X248,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_CAL",	0X249,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOCK_DETECT_CONFIG",	0X24A,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_LEVEL_DETECT",	0X24B,	-1);
	add_enum_member(id,"AD9363_REG_RX_DSM_SETUP_0",	0X24C,	-1);
	add_enum_member(id,"AD9363_REG_RX_DSM_SETUP_1",	0X24D,	-1);
	add_enum_member(id,"AD9363_REG_RX_CORRECTION_WORD0",	0X24E,	-1);
	add_enum_member(id,"AD9363_REG_RX_CORRECTION_WORD1",	0X24F,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_VARACTOR_CTRL_0",	0X250,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_VARACTOR_CTRL_1",	0X251,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_SETUP",	0X25A,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_SETUP_INIT_DELAY",	0X25B,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_PROGRAM_ADDR",	0X25C,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_PROGRAM_DATA",	0X25D,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_PROGRAM_READ",	0X25E,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_PROGRAM_CTRL",	0X25F,	-1);
	add_enum_member(id,"AD9363_REG_RX_LO_GEN_POWER_MODE",	0X261,	-1);
	add_enum_member(id,"AD9363_REG_TX_PFD_CONFIG",	0X270,	-1);
	add_enum_member(id,"AD9363_REG_TX_INTEGER_BYTE_0",	0X271,	-1);
	add_enum_member(id,"AD9363_REG_TX_INTEGER_BYTE_1",	0X272,	-1);
	add_enum_member(id,"AD9363_REG_TX_FRACT_BYTE_0",	0X273,	-1);
	add_enum_member(id,"AD9363_REG_TX_FRACT_BYTE_1",	0X274,	-1);
	add_enum_member(id,"AD9363_REG_TX_FRACT_BYTE_2",	0X275,	-1);
	add_enum_member(id,"AD9363_REG_TX_FORCE_ALC",	0X276,	-1);
	add_enum_member(id,"AD9363_REG_TX_FORCE_VCO_TUNE_0",	0X277,	-1);
	add_enum_member(id,"AD9363_REG_TX_FORCE_VCO_TUNE_1",	0X278,	-1);
	add_enum_member(id,"AD9363_REG_TX_ALCVARACT_OR",	0X279,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_OUTPUT",	0X27A,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_CURRENT",	0X27B,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_OFFSET",	0X27C,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_CONFIG",	0X27D,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOOP_FILTER_1",	0X27E,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOOP_FILTER_2",	0X27F,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOOP_FILTER_3",	0X280,	-1);
	add_enum_member(id,"AD9363_REG_TX_DITHERCP_CAL",	0X281,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_BIAS_1",	0X282,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_BIAS_2",	0X283,	-1);
	add_enum_member(id,"AD9363_REG_TX_CAL_STATUS",	0X284,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_CAL_REF",	0X285,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_PD_OVERRIDES",	0X286,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_OVERRANGE_VCO_LOCK",	0X287,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_LDO",	0X288,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_CAL",	0X289,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOCK_DETECT_CONFIG",	0X28A,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_LEVEL_DETECT",	0X28B,	-1);
	add_enum_member(id,"AD9363_REG_TX_DSM_SETUP_0",	0X28C,	-1);
	add_enum_member(id,"AD9363_REG_TX_DSM_SETUP_1",	0X28D,	-1);
	add_enum_member(id,"AD9363_REG_TX_CORRECTION_WORD0",	0X28E,	-1);
	add_enum_member(id,"AD9363_REG_TX_CORRECTION_WORD1",	0X28F,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_VARACTOR_CTRL_0",	0X290,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_VARACTOR_CTRL_1",	0X291,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_COARSE_TUNE",	0X292,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_FINE_TUNE_HIGH",	0X293,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_FINE_TUNE_LOW",	0X294,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_CONFIG",	0X295,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_TEMPCO_WRITE",	0X296,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_TEMPCO_READ",	0X297,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_TEMPCO_ADDR",	0X298,	-1);
	add_enum_member(id,"AD9363_REG_DELTA_T_READ",	0X299,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_SETUP",	0X29A,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_SETUP_INIT_DELAY",	0X29B,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_PROGRAM_ADDR",	0X29C,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_PROGRAM_DATA",	0X29D,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_PROGRAM_READ",	0X29E,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_PROGRAM_CTRL",	0X29F,	-1);
	add_enum_member(id,"AD9363_REG_TX_LO_GEN_POWER_MODE",	0X2A1,	-1);
	add_enum_member(id,"AD9363_REG_BANDGAP_CONFIG0",	0X2A6,	-1);
	add_enum_member(id,"AD9363_REG_BANDGAP_CONFIG1",	0X2A8,	-1);
	add_enum_member(id,"AD9363_REG_REF_DIVIDE_CONFIG_1",	0X2AB,	-1);
	add_enum_member(id,"AD9363_REG_REF_DIVIDE_CONFIG_2",	0X2AC,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_RX1",	0X2B0,	-1);
	add_enum_member(id,"AD9363_REG_LPF_GAIN_RX1",	0X2B1,	-1);
	add_enum_member(id,"AD9363_REG_DIG_GAIN_RX1",	0X2B2,	-1);
	add_enum_member(id,"AD9363_REG_FAST_ATTACK_STATE",	0X2B3,	-1);
	add_enum_member(id,"AD9363_REG_SLOW_LOOP_STATE",	0X2B4,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_RX2",	0X2B5,	-1);
	add_enum_member(id,"AD9363_REG_LPF_GAIN_RX2",	0X2B6,	-1);
	add_enum_member(id,"AD9363_REG_DIG_GAIN_RX2",	0X2B7,	-1);
	add_enum_member(id,"AD9363_REG_OVRG_SIGS_RX1",	0X2B8,	-1);
	add_enum_member(id,"AD9363_REG_OVRG_SIGS_RX2",	0X2B9,	-1);
	add_enum_member(id,"AD9363_REG_CTRL",	0X3DF,	-1);
	add_enum_member(id,"AD9363_REG_BIST_CONFIG",	0X3F4,	-1);
	add_enum_member(id,"AD9363_REG_OBSERVE_CONFIG",	0X3F5,	-1);
	add_enum_member(id,"AD9363_REG_BIST_AND_DATA_PORT_TEST_CONFIG",	0X3F6,	-1);
	add_enum_member(id,"AD9363_REG_DAC_TEST_0",	0X3FC,	-1);
	add_enum_member(id,"AD9363_REG_DAC_TEST_1",	0X3FD,	-1);
	add_enum_member(id,"AD9363_REG_DAC_TEST_2",	0X3FE,	-1);
	id = add_enum(-1,"SPI_AR9003_REG_DEFINES",0x1100000);
	add_enum_member(id,"AR8003_REG_UNKN_2A",	0X2A,	-1);
	add_enum_member(id,"AR8003_REG_UNKN_42",	0X42,	-1);
	add_enum_member(id,"AR8003_REG_TX1_ATTEN_0",	0X54,	-1);
	add_enum_member(id,"AR8003_REG_TX2_ATTEN_0",	0X5C,	-1);
	add_enum_member(id,"AR8003_REG_UNKN_6A",	0X6A,	-1);
	add_enum_member(id,"AR8003_REG_STATE_FLAGS",	0X7C,	-1);
	id = add_enum(-1,"SPI_FPGA_REG_DEFINES",0x1100000);
	add_enum_member(id,"FPGA_REG_UNKN_00",	0,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_01",	0X1,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_02",	0X2,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_04",	0X4,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_05",	0X5,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_06",	0X6,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_07",	0X7,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_08",	0X8,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_09",	0X9,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_10",	0X10,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_12",	0X12,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_20",	0X20,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_23",	0X23,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_8B",	0X8B,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_8C",	0X8C,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_8D",	0X8D,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_8E",	0X8E,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_90",	0X90,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_91",	0X91,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_92",	0X92,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_93",	0X93,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_94",	0X94,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_95",	0X95,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_96",	0X96,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_97",	0X97,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_98",	0X98,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_99",	0X99,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_9A",	0X9A,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_9B",	0X9B,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_9E",	0X9E,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_9F",	0X9F,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A0",	0XA0,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A1",	0XA1,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A3",	0XA3,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A5",	0XA5,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A6",	0XA6,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A7",	0XA7,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A8",	0XA8,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A9",	0XA9,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AA",	0XAA,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AB",	0XAB,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AC",	0XAC,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AD",	0XAD,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AE",	0XAE,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B0",	0XB0,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B1",	0XB1,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B2",	0XB2,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B3",	0XB3,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B4",	0XB4,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B8",	0XB8,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B9",	0XB9,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_BA",	0XBA,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_BB",	0XBB,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_BC",	0XBC,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_BD",	0XBD,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_CE",	0XCE,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_E9",	0XE9,	-1);
	id = add_enum(-1,"SPI_AR9001_REG_DEFINES",0x1100000);
	add_enum_member(id,"AR8001_REG_UNKN_00",	0,	-1);
	add_enum_member(id,"AR8001_REG_UNKN_01",	0X1,	-1);
	add_enum_member(id,"AR8001_REG_UNKN_CE",	0XCE,	-1);
	id = add_enum(-1,"OFDM_TCX_STATE_FLAGS",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"OFDM_FPGA_BOOT_ERR",	0X1,	0x1);
	add_enum_member(id,"OFDM_FPGA_CONFIG_ERR",	0X2,	0x2);
	add_enum_member(id,"OFDM_EXEC_FAIL_1_ERR",	0X4,	0x4);
	add_enum_member(id,"OFDM_EXEC_FAIL_2_ERR",	0X8,	0x8);
	add_enum_member(id,"OFDM_VER_MISMATCH_ERR",	0X20,	0x20);
	add_enum_member(id,"OFDM_TCX_REGISTER_ERR",	0X40,	0x40);
	add_enum_member(id,"OFDM_RECEIVED_DATA_CRC_FAIL",	0X400,	0x400);
	add_enum_member(id,"OFDM_RECEIVED_DATA_SEQ_FAIL",	0X800,	0x800);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
	id = Enums_0(id);
        end_type_updating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = get_struc_id("LPC_RTC_TypeDef");
	id = get_struc_id("LPC_PINCON_TypeDef");
	id = get_struc_id("LPC_GPIOINT_TypeDef");
	id = get_struc_id("LPC_TIM_TypeDef");
	id = get_struc_id("RTC_TIME_Type");
	id = get_struc_id("LPC_WDT_TypeDef");
	id = get_struc_id("LPC_ADC_TypeDef");
	id = get_struc_id("LPC_PWM_TypeDef");
	id = get_struc_id("LPC_UART_TypeDef");
	id = get_struc_id("LPC_SPI_TypeDef");
	id = get_struc_id("LPC_SSP_TypeDef");
	id = get_struc_id("LPC_I2C_TypeDef");
	id = get_struc_id("LPC_CANAF_RAM_TypeDef");
	id = get_struc_id("LPC_CANAF_TypeDef");
	id = get_struc_id("LPC_CANCR_TypeDef");
	id = get_struc_id("LPC_CAN_TypeDef");
	id = get_struc_id("AF_SectionDef");
	SetType(get_member_id(id, 0x0), "struct FullCAN_Entry *");
	SetType(get_member_id(id, 0x8), "struct SFF_Entry *");
	SetType(get_member_id(id, 0x10), "struct SFF_GPR_Entry *");
	SetType(get_member_id(id, 0x18), "struct EFF_Entry *");
	SetType(get_member_id(id, 0x20), "struct EFF_GPR_Entry *");
	id = get_struc_id("SFF_Entry");
	id = get_struc_id("ITM_Type");
	id = get_struc_id("CoreDebug_Type");
	id = get_struc_id("OS_TCB");
	SetType(get_member_id(id, 0x5C), "void *");
	id = get_struc_id("OS_MSG_Q");
	id = get_struc_id("OS_MSG_POOL");
	id = get_struc_id("OS_MSG");
	SetType(get_member_id(id, 0x4), "void *");
	id = get_struc_id("OS_RDY_LIST");
	SetType(get_member_id(id, 0x0), "struct OS_TCB *");
	SetType(get_member_id(id, 0x4), "struct OS_TCB *");
	id = get_struc_id("OS_PEND_LIST");
	id = get_struc_id("OS_TICK_SPOKE");
	id = get_struc_id("OS_SEM");
	id = get_struc_id("SysTick_Type");
	id = get_struc_id("NVIC_Type");
	id = get_struc_id("SCB_Type");
	id = get_struc_id("SCnSCB_Type");
	id = get_struc_id("DWT_Type");
	id = get_struc_id("DjiPacketHead");
	id = get_struc_id("DjiPacket");
	id = get_struc_id("RadioStatus");
	id = get_struc_id("PktPayloadSET06CMDF0");
	id = get_struc_id("PktPayloadS09C12");
	id = get_struc_id("DjiPacketS09C12");
	SetType(get_member_id(id, 0x0), "struct DjiPacketHead");
	SetType(get_member_id(id, 0xB), "struct PktPayloadS09C12");
	id = get_struc_id("OfdmInitInstr");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
}

static Structures_0(id) {
        auto mid;

	id = add_struc(-1,"LPC_RTC_TypeDef",0);
	id = add_struc(-1,"LPC_PINCON_TypeDef",0);
	id = add_struc(-1,"LPC_GPIOINT_TypeDef",0);
	id = add_struc(-1,"LPC_TIM_TypeDef",0);
	set_struc_cmt(id,"Timer (TIM)",1);
	id = add_struc(-1,"RTC_TIME_Type",0);
	id = add_struc(-1,"LPC_WDT_TypeDef",0);
	set_struc_cmt(id,"Watchdog Timer (WDT)",1);
	id = add_struc(-1,"LPC_ADC_TypeDef",0);
	id = add_struc(-1,"LPC_PWM_TypeDef",0);
	id = add_struc(-1,"LPC_UART_TypeDef",0);
	set_struc_cmt(id,"Universal Asynchronous Receiver Transmitter (UART)",1);
	id = add_struc(-1,"LPC_SPI_TypeDef",0);
	id = add_struc(-1,"LPC_SSP_TypeDef",0);
	id = add_struc(-1,"LPC_I2C_TypeDef",0);
	id = add_struc(-1,"LPC_CANAF_RAM_TypeDef",0);
	id = add_struc(-1,"LPC_CANAF_TypeDef",0);
	id = add_struc(-1,"LPC_CANCR_TypeDef",0);
	id = add_struc(-1,"LPC_CAN_TypeDef",0);
	id = add_struc(-1,"AF_SectionDef",0);
	set_struc_cmt(id,"Acceptance Filter Section Table structure",1);
	id = add_struc(-1,"SFF_Entry",0);
	set_struc_cmt(id,"Standard ID Frame Format Entry structure",1);
	id = add_struc(-1,"ITM_Type",0);
	id = add_struc(-1,"CoreDebug_Type",0);
	set_struc_cmt(id,"Structure type to access the Core Debug Register (CoreDebug).",1);
	id = add_struc(-1,"OS_TCB",0);
	id = add_struc(-1,"OS_MSG_Q",0);
	id = add_struc(-1,"OS_MSG_POOL",0);
	id = add_struc(-1,"OS_MSG",0);
	id = add_struc(-1,"OS_RDY_LIST",0);
	id = add_struc(-1,"OS_PEND_LIST",0);
	id = add_struc(-1,"OS_TICK_SPOKE",0);
	id = add_struc(-1,"OS_SEM",0);
	id = add_struc(-1,"SysTick_Type",0);
	set_struc_cmt(id,"Type definitions for the System Timer Registers.",1);
	id = add_struc(-1,"NVIC_Type",0);
	id = add_struc(-1,"SCB_Type",0);
	set_struc_cmt(id,"Structure type to access the System Control Block (SCB).",1);
	id = add_struc(-1,"SCnSCB_Type",0);
	set_struc_cmt(id,"Structure type to access the System Control and ID Register not in the SCB.",1);
	id = add_struc(-1,"DWT_Type",0);
	set_struc_cmt(id,"Structure type to access the Data Watchpoint and Trace Register (DWT).",1);
	id = add_struc(-1,"DjiPacketHead",0);
	id = add_struc(-1,"DjiPacket",0);
	id = add_struc(-1,"RadioStatus",0);
	id = add_struc(-1,"PktPayloadSET06CMDF0",0);
	id = add_struc(-1,"PktPayloadS09C12",0);
	id = add_struc(-1,"DjiPacketS09C12",0);
	id = add_struc(-1,"OfdmInitInstr",0);
	
	id = get_struc_id("LPC_RTC_TypeDef");
	mid = add_struc_member(id,"ILR",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED0",	0X1,	0x000400,	-1,	7);
	mid = add_struc_member(id,"CCR",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED1",	0X9,	0x000400,	-1,	3);
	mid = add_struc_member(id,"CIIR",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED2",	0XD,	0x000400,	-1,	3);
	mid = add_struc_member(id,"AMR",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED3",	0X11,	0x000400,	-1,	3);
	mid = add_struc_member(id,"CTIME0",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"CTIME1",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"CTIME2",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SEC",	0X20,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED4",	0X21,	0x000400,	-1,	3);
	mid = add_struc_member(id,"MIN",	0X24,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED5",	0X25,	0x000400,	-1,	3);
	mid = add_struc_member(id,"HOUR",	0X28,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED6",	0X29,	0x000400,	-1,	3);
	mid = add_struc_member(id,"DOM",	0X2C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED7",	0X2D,	0x000400,	-1,	3);
	mid = add_struc_member(id,"DOW",	0X30,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED8",	0X31,	0x000400,	-1,	3);
	mid = add_struc_member(id,"DOY",	0X34,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED9",	0X36,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"MONTH",	0X38,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED10",	0X39,	0x000400,	-1,	3);
	mid = add_struc_member(id,"YEAR",	0X3C,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED11",	0X3E,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"CALIBRATION",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"GPREG0",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"GPREG1",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"GPREG2",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"GPREG3",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"GPREG4",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RTC_AUXEN",	0X58,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED12",	0X59,	0x000400,	-1,	3);
	mid = add_struc_member(id,"RTC_AUX",	0X5C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED13",	0X5D,	0x000400,	-1,	3);
	mid = add_struc_member(id,"ALSEC",	0X60,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED14",	0X61,	0x000400,	-1,	3);
	mid = add_struc_member(id,"ALMIN",	0X64,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED15",	0X65,	0x000400,	-1,	3);
	mid = add_struc_member(id,"ALHOUR",	0X68,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED16",	0X69,	0x000400,	-1,	3);
	mid = add_struc_member(id,"ALDOM",	0X6C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED17",	0X6D,	0x000400,	-1,	3);
	mid = add_struc_member(id,"ALDOW",	0X70,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED18",	0X71,	0x000400,	-1,	3);
	mid = add_struc_member(id,"ALDOY",	0X74,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED19",	0X76,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ALMON",	0X78,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED20",	0X79,	0x000400,	-1,	3);
	mid = add_struc_member(id,"ALYEAR",	0X7C,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED21",	0X7E,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ERSTATUS",	0X80,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ERCONTROL",	0X84,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ERCOUNTERS",	0X88,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RESERVED22",	0X8C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ERFIRSTSTAMP0",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ERFIRSTSTAMP1",	0X94,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ERFIRSTSTAMP2",	0X98,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RESERVED23",	0X9C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ERLASTSTAMP0",	0XA0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ERLASTSTAMP1",	0XA4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ERLASTSTAMP2",	0XA8,	0x20000400,	-1,	4);
	
	id = get_struc_id("LPC_PINCON_TypeDef");
	mid = add_struc_member(id,"PINSEL",	0,	0x20000400,	-1,	44);
	mid = add_struc_member(id,"RESERVED0",	0X2C,	0x20000400,	-1,	20);
	mid = add_struc_member(id,"PINMODE",	0X40,	0x20000400,	-1,	40);
	mid = add_struc_member(id,"PINMODE_OD",	0X68,	0x20000400,	-1,	20);
	mid = add_struc_member(id,"I2CPADCFG",	0X7C,	0x20000400,	-1,	4);
	
	id = get_struc_id("LPC_GPIOINT_TypeDef");
	mid = add_struc_member(id,"IntStatus",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"IO0IntStatR",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"IO0IntStatF",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"IO0IntClr",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"IO0IntEnR",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"IO0IntEnF",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RESERVED0",	0X18,	0x20000400,	-1,	12);
	mid = add_struc_member(id,"IO2IntStatR",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"IO2IntStatF",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"IO2IntClr",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"IO2IntEnR",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"IO2IntEnF",	0X34,	0x20000400,	-1,	4);
	
	id = get_struc_id("LPC_TIM_TypeDef");
	mid = add_struc_member(id,"IR",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"Interrupt Register. The IR can be written to clear interrupts. The IR can be read to identify which of eight possible interrupt sources are pending.",	1);
	mid = add_struc_member(id,"TCR",	0X4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4,	"Timer Control Register. The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR.",	1);
	mid = add_struc_member(id,"TC",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"Timer Counter. The 32 bit TC is incremented every PR+1 cycles of PCLK. The TC is controlled through the TCR.",	1);
	mid = add_struc_member(id,"PR",	0XC,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XC,	"Prescale Register. The Prescale Counter (below) is equal to this value, the next clock increments the TC and clears the PC.",	1);
	mid = add_struc_member(id,"PC",	0X10,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X10,	"Prescale Counter. The 32 bit PC is a counter which is incremented to the value stored in PR. When the value in PR is reached, the TC is incremented and the PC is cleared. The PC is observable and controllable through the bus interface.",	1);
	mid = add_struc_member(id,"MCR",	0X14,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X14,	"Match Control Register. The MCR is used to control if an interrupt is generated and if the TC is reset when a Match occurs.",	1);
	mid = add_struc_member(id,"MR",	0X18,	0x20000400,	-1,	16);
	set_member_cmt(id,	0X18,	"Match Register. MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.",	1);
	mid = add_struc_member(id,"CCR",	0X28,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X28,	"Capture Control Register. The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place.",	1);
	mid = add_struc_member(id,"CR",	0X2C,	0x20000400,	-1,	16);
	set_member_cmt(id,	0X2C,	"Capture Register. CR is loaded with the value of TC when there is an event on the CAPn.0 input.",	1);
	mid = add_struc_member(id,"EMR",	0X3C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X3C,	"External Match Register. The EMR controls the external match pins MATn.0-3 (MAT0.0-3 and MAT1.0-3 respectively).",	1);
	mid = add_struc_member(id,"RESERVED0",	0X40,	0x20000400,	-1,	48);
	mid = add_struc_member(id,"CTCR",	0X70,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X70,	"Count Control Register. The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting.",	1);
	
	id = get_struc_id("RTC_TIME_Type");
	mid = add_struc_member(id,"SEC",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MIN",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"HOUR",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DOM",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DOW",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DOY",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MONTH",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"YEAR",	0X1C,	0x20000400,	-1,	4);
	
	id = get_struc_id("LPC_WDT_TypeDef");
	mid = add_struc_member(id,"WDMOD",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED0",	0X1,	0x000400,	-1,	3);
	mid = add_struc_member(id,"WDTC",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"WDFEED",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED1",	0X9,	0x000400,	-1,	3);
	mid = add_struc_member(id,"WDTV",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"WDCLKSEL",	0X10,	0x20000400,	-1,	4);
	
	id = get_struc_id("LPC_ADC_TypeDef");
	mid = add_struc_member(id,"ADCR",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ADGDR",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RESERVED0",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ADINTEN",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ADDR0",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ADDR1",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ADDR2",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ADDR3",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ADDR4",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ADDR5",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ADDR6",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ADDR7",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ADSTAT",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ADTRM",	0X34,	0x20000400,	-1,	4);
	
	id = get_struc_id("LPC_PWM_TypeDef");
	mid = add_struc_member(id,"IR",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TCR",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TC",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PR",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PC",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MCR",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MR",	0X18,	0x20000400,	-1,	16);
	mid = add_struc_member(id,"CCR",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"CR",	0X2C,	0x20000400,	-1,	16);
	mid = add_struc_member(id,"RESERVED0",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MR4",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MR5",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MR6",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PCR",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"LER",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RESERVED1",	0X54,	0x20000400,	-1,	28);
	mid = add_struc_member(id,"CTCR",	0X70,	0x20000400,	-1,	4);
	
	id = get_struc_id("LPC_UART_TypeDef");
	mid = add_struc_member(id,"RBR_THR_DLL",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED0",	0X1,	0x000400,	-1,	3);
	mid = add_struc_member(id,"DLM_IER",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"IIR_FCR",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"LCR",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED1",	0XD,	0x000400,	-1,	3);
	mid = add_struc_member(id,"MCR",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED2",	0X11,	0x000400,	-1,	3);
	mid = add_struc_member(id,"LSR",	0X14,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED3",	0X15,	0x000400,	-1,	3);
	mid = add_struc_member(id,"MSR",	0X18,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED4",	0X19,	0x000400,	-1,	3);
	mid = add_struc_member(id,"SCR",	0X1C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED5",	0X1D,	0x000400,	-1,	3);
	mid = add_struc_member(id,"ACR",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ICR",	0X24,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED6",	0X25,	0x000400,	-1,	3);
	mid = add_struc_member(id,"FDR",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RESERVED7",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TER",	0X30,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED8",	0X31,	0x000400,	-1,	27);
	mid = add_struc_member(id,"RS485CTRL",	0X4C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED9",	0X4D,	0x000400,	-1,	3);
	mid = add_struc_member(id,"ADRMATCH",	0X50,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED10",	0X51,	0x000400,	-1,	3);
	mid = add_struc_member(id,"RS485DLY",	0X54,	0x000400,	-1,	1);
	mid = add_struc_member(id,"RESERVED11",	0X55,	0x000400,	-1,	3);
	mid = add_struc_member(id,"FIFOLVL",	0X58,	0x000400,	-1,	1);
	
	id = get_struc_id("LPC_SPI_TypeDef");
	mid = add_struc_member(id,"SPCR",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"SPI Control Register",	1);
	mid = add_struc_member(id,"SPSR",	0X4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4,	"SPI Status Register",	1);
	mid = add_struc_member(id,"SPDR",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"SPI Data Register",	1);
	mid = add_struc_member(id,"SPCCR",	0XC,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XC,	"SPI Clock Counter Register",	1);
	mid = add_struc_member(id,"RESERVED0",	0X10,	0x20000400,	-1,	12);
	mid = add_struc_member(id,"SPINT",	0X1C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X1C,	"SPI Interrupt Flag Register",	1);
	
	id = get_struc_id("LPC_SSP_TypeDef");
	mid = add_struc_member(id,"CR0",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"Control Register 0",	1);
	mid = add_struc_member(id,"CR1",	0X4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4,	"Control Register 1",	1);
	mid = add_struc_member(id,"DR",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"Data Register",	1);
	mid = add_struc_member(id,"SR",	0XC,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XC,	"Status Register",	1);
	mid = add_struc_member(id,"CPSR",	0X10,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X10,	"Clock Prescale Register",	1);
	mid = add_struc_member(id,"IMSC",	0X14,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X14,	"Interrupt Mask Set and Clear Register",	1);
	mid = add_struc_member(id,"RIS",	0X18,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X18,	"Raw Interrupt Status Register",	1);
	mid = add_struc_member(id,"MIS",	0X1C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X1C,	"Masked Interrupt Status Register",	1);
	mid = add_struc_member(id,"ICR",	0X20,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X20,	"SSPICR Interrupt Clear Register",	1);
	mid = add_struc_member(id,"DMACR",	0X24,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X24,	"DMA Control Register",	1);
	
	id = get_struc_id("LPC_I2C_TypeDef");
	mid = add_struc_member(id,"I2CONSET",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"I2STAT",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"I2DAT",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"I2ADR0",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"I2SCLH",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"I2SCLL",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"I2CONCLR",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MMCTRL",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"I2ADR1",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"I2ADR2",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"I2ADR3",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"I2DATA_BUFFER",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"I2MASK0",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"I2MASK1",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"I2MASK2",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"I2MASK3",	0X3C,	0x20000400,	-1,	4);
	
	id = get_struc_id("LPC_CANAF_RAM_TypeDef");
	mid = add_struc_member(id,"mask",	0,	0x20000400,	-1,	2048);
	
	id = get_struc_id("LPC_CANAF_TypeDef");
	mid = add_struc_member(id,"AFMR",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SFF_sa",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SFF_GRP_sa",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"EFF_sa",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"EFF_GRP_sa",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ENDofTable",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"LUTerrAd",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"LUTerr",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"FCANIE",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"FCANIC0",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"FCANIC1",	0X28,	0x20000400,	-1,	4);
	
	id = get_struc_id("LPC_CANCR_TypeDef");
	mid = add_struc_member(id,"CANTxSR",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"CANRxSR",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"CANMSR",	0X8,	0x20000400,	-1,	4);
	
	id = get_struc_id("LPC_CAN_TypeDef");
	mid = add_struc_member(id,"MOD",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"CMR",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"GSR",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ICR",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"IER",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"BTR",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"EWL",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SR",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RFS",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RID",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RDA",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RDB",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TFI1",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TID1",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TDA1",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TDB1",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TFI2",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TID2",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TDA2",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TDB2",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TFI3",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TID3",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TDA3",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TDB3",	0X5C,	0x20000400,	-1,	4);
	
	id = get_struc_id("AF_SectionDef");
	mid = add_struc_member(id,"FullCAN_Sec",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0,	"The pointer point to FullCAN_Entry",	1);
	mid = add_struc_member(id,"FC_NumEntry",	0X4,	0x000400,	-1,	1);
	set_member_cmt(id,	0X4,	"FullCAN Entry Number",	1);
	mid = add_struc_member(id,"field_5",	0X5,	0x000400,	-1,	3);
	mid = add_struc_member(id,"SFF_Sec",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X8,	"The pointer point to SFF_Entry",	1);
	mid = add_struc_member(id,"SFF_NumEntry",	0XC,	0x000400,	-1,	1);
	set_member_cmt(id,	0XC,	"Standard ID Entry Number",	1);
	mid = add_struc_member(id,"field_D",	0XD,	0x000400,	-1,	3);
	mid = add_struc_member(id,"SFF_GPR_Sec",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X10,	"The pointer point to SFF_GPR_Entry",	1);
	mid = add_struc_member(id,"SFF_GPR_NumEntry",	0X14,	0x000400,	-1,	1);
	set_member_cmt(id,	0X14,	"Group Standard ID Entry Number",	1);
	mid = add_struc_member(id,"field_15",	0X15,	0x000400,	-1,	3);
	mid = add_struc_member(id,"EFF_Sec",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X18,	"The pointer point to EFF_Entry",	1);
	mid = add_struc_member(id,"EFF_NumEntry",	0X1C,	0x000400,	-1,	1);
	set_member_cmt(id,	0X1C,	"Extended ID Entry Number",	1);
	mid = add_struc_member(id,"field_1D",	0X1D,	0x000400,	-1,	3);
	mid = add_struc_member(id,"EFF_GPR_Sec",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X20,	"The pointer point to EFF_GPR_Entry",	1);
	mid = add_struc_member(id,"EFF_GPR_NumEntry",	0X24,	0x000400,	-1,	1);
	set_member_cmt(id,	0X24,	"Group Extended ID Entry Number",	1);
	mid = add_struc_member(id,"field_25",	0X25,	0x000400,	-1,	3);
	
	id = get_struc_id("SFF_Entry");
	mid = add_struc_member(id,"controller",	0,	0x000400,	-1,	1);
	set_member_cmt(id,	0,	"CAN Controller selection",	1);
	mid = add_struc_member(id,"disable",	0X1,	0x000400,	-1,	1);
	set_member_cmt(id,	0X1,	"Disable bit",	1);
	mid = add_struc_member(id,"id_11",	0X2,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X2,	"Standard ID, should be 11-bit value",	1);
	
	id = get_struc_id("ITM_Type");
	mid = add_struc_member(id,"PORT",	0,	0x20000400,	-1,	128);
	set_member_cmt(id,	0,	"ITM Stimulus Port Registers",	1);
	mid = add_struc_member(id,"RESERVED0",	0X80,	0x20000400,	-1,	3456);
	mid = add_struc_member(id,"TER",	0XE00,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XE00,	"ITM Trace Enable Register",	1);
	mid = add_struc_member(id,"RESERVED1",	0XE04,	0x20000400,	-1,	60);
	mid = add_struc_member(id,"TPR",	0XE40,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XE40,	"ITM Trace Privilege Register",	1);
	mid = add_struc_member(id,"RESERVED2",	0XE44,	0x20000400,	-1,	60);
	mid = add_struc_member(id,"TCR",	0XE80,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XE80,	"ITM Trace Control Register",	1);
	
	id = get_struc_id("CoreDebug_Type");
	mid = add_struc_member(id,"DHCSR",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"Debug Halting Control and Status Register",	1);
	mid = add_struc_member(id,"DCRSR",	0X4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4,	"Debug Core Register Selector Register",	1);
	mid = add_struc_member(id,"DCRDR",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"Debug Core Register Data Register",	1);
	mid = add_struc_member(id,"DEMCR",	0XC,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XC,	"Debug Exception and Monitor Control Register",	1);
	
	id = get_struc_id("OS_MSG_Q");
	mid = add_struc_member(id,"InPtr",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"OutPtr",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"NbrEntriesSize",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"NbrEntries",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"NbrEntriesMax",	0XC,	0x10000400,	-1,	2);
	
	id = get_struc_id("OS_TCB");
	mid = add_struc_member(id,"StkPtr",	0,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ExtPtr",	0X4,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"StkLimitPtr",	0X8,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"NextPtr",	0XC,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"PrevPtr",	0X10,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"TickNextPtr",	0X14,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"TickPrevPtr",	0X18,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"TickSpokePtr",	0X1C,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"NamePtr",	0X20,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"StkBasePtr",	0X24,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"TaskEntryAddr",	0X28,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"TaskEntryArg",	0X2C,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"PendDataTblPtr",	0X30,	0x20500400,	0,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"PendOn",	0X34,	0x000400,	-1,	1);
	mid = add_struc_member(id,"PendStatus",	0X35,	0x000400,	-1,	1);
	mid = add_struc_member(id,"TaskState",	0X36,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Prio",	0X37,	0x000400,	-1,	1);
	mid = add_struc_member(id,"StkSize",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Opt",	0X3C,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"PendDataTblEntries",	0X3E,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"TS",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SemCtr",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TickCtrPrev",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TickCtrMatch",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TickRemain",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TimeQuanta",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TimeQuantaCtr",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MsgPtr",	0X5C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"MsgSize",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MsgQ",	0X64,	0x60000400,	get_struc_id("OS_MSG_Q"),	14);
	mid = add_struc_member(id,"MsgQPendTime",	0X74,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MsgQPendTimeMax",	0X78,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_7C",	0X7C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"CtxSwCtr",	0X80,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"CyclesDelta",	0X84,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"CyclesStart",	0X88,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"CyclesTotal",	0X8C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"CyclesTotalPrev",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SemPendTime",	0X94,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SemPendTimeMax",	0X98,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"IntDisTimeMax",	0X9C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SchedLockTimeMax",	0XA0,	0x20000400,	-1,	4);
	
	id = get_struc_id("OS_MSG_POOL");
	mid = add_struc_member(id,"NextPtr",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"NbrFree",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"NbrUsed",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"NbrUsedMax",	0X8,	0x000400,	-1,	1);
	
	id = get_struc_id("OS_MSG");
	mid = add_struc_member(id,"NextPtr",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MsgPtr",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"MsgSize",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_A",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"MsgTS",	0XC,	0x20000400,	-1,	4);
	
	id = get_struc_id("OS_RDY_LIST");
	mid = add_struc_member(id,"HeadPtr",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0,	"Pointer to task that will run at selected priority",	1);
	mid = add_struc_member(id,"TailPtr",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_member_cmt(id,	0X4,	"Pointer to last task          at selected priority",	1);
	mid = add_struc_member(id,"NbrEntries",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"Number of entries             at selected priority",	1);
	
	id = get_struc_id("OS_TICK_SPOKE");
	mid = add_struc_member(id,"FirstPtr",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"Pointer to list of tasks in tick spoke",	1);
	mid = add_struc_member(id,"NbrEntries",	0X4,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X4,	"Current number of entries in the tick spoke",	1);
	mid = add_struc_member(id,"NbrEntriesMax",	0X6,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X6,	"Peak number of entries in the tick spoke",	1);
	
	id = get_struc_id("OS_PEND_LIST");
	mid = add_struc_member(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_8",	0X8,	0x20000400,	-1,	4);
	
	id = get_struc_id("OS_SEM");
	mid = add_struc_member(id,"Type",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"NamePtr",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PendList",	0X8,	0x60000400,	get_struc_id("OS_PEND_LIST"),	12);
	
	id = get_struc_id("SysTick_Type");
	mid = add_struc_member(id,"CTRL",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"LOAD",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"VAL",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"CALIB",	0XC,	0x20000400,	-1,	4);
	
	id = get_struc_id("NVIC_Type");
	mid = add_struc_member(id,"ISER",	0,	0x20000400,	-1,	32);
	set_member_cmt(id,	0,	"Interrupt Set Enable Register",	1);
	mid = add_struc_member(id,"RESERVED0",	0X20,	0x20000400,	-1,	96);
	mid = add_struc_member(id,"ICER",	0X80,	0x20000400,	-1,	32);
	set_member_cmt(id,	0X80,	"Interrupt Clear Enable Register",	1);
	mid = add_struc_member(id,"RESERVED1",	0XA0,	0x20000400,	-1,	96);
	mid = add_struc_member(id,"ISPR",	0X100,	0x20000400,	-1,	32);
	set_member_cmt(id,	0X100,	"Interrupt Set Pending Register",	1);
	mid = add_struc_member(id,"RESERVED2",	0X120,	0x20000400,	-1,	96);
	mid = add_struc_member(id,"ICPR",	0X180,	0x20000400,	-1,	32);
	set_member_cmt(id,	0X180,	"Interrupt Clear Pending Register",	1);
	mid = add_struc_member(id,"RESERVED3",	0X1A0,	0x20000400,	-1,	96);
	mid = add_struc_member(id,"IABR",	0X200,	0x20000400,	-1,	32);
	set_member_cmt(id,	0X200,	"Interrupt Active bit Register",	1);
	mid = add_struc_member(id,"RESERVED4",	0X220,	0x20000400,	-1,	224);
	mid = add_struc_member(id,"IP",	0X300,	0x000400,	-1,	240);
	set_member_cmt(id,	0X300,	"Interrupt Priority Register (8Bit wide)",	1);
	mid = add_struc_member(id,"RESERVED5",	0X3F0,	0x20000400,	-1,	2064);
	
	id = get_struc_id("SCB_Type");
	mid = add_struc_member(id,"CPUID",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"CPUID Base Register",	1);
	mid = add_struc_member(id,"ICSR",	0X4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4,	"CPU_REG_NVIC_INT_CTRL Interrupt Control and State Register",	1);
	mid = add_struc_member(id,"VTOR",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"Vector Table Offset Register",	1);
	mid = add_struc_member(id,"AIRCR",	0XC,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XC,	"Application Interrupt and Reset Control Register",	1);
	mid = add_struc_member(id,"SCR",	0X10,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X10,	"System Control Register",	1);
	mid = add_struc_member(id,"CCR",	0X14,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X14,	"Configuration Control Register",	1);
	mid = add_struc_member(id,"SHP",	0X18,	0x000400,	-1,	12);
	set_member_cmt(id,	0X18,	"CPU_REG_NVIC_SHPRIx System Handlers Priority Registers (4-7, 8-11, 12-15)",	1);
	mid = add_struc_member(id,"SHCSR",	0X24,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X24,	"CPU_REG_NVIC_SHCSR System Handler Control and State Register",	1);
	mid = add_struc_member(id,"CFSR",	0X28,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X28,	"Configurable Fault Status Register",	1);
	mid = add_struc_member(id,"HFSR",	0X2C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X2C,	"HardFault Status Register",	1);
	mid = add_struc_member(id,"DFSR",	0X30,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X30,	"Debug Fault Status Register",	1);
	mid = add_struc_member(id,"MMFAR",	0X34,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X34,	"MemManage Fault Address Register",	1);
	mid = add_struc_member(id,"BFAR",	0X38,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X38,	"BusFault Address Register",	1);
	mid = add_struc_member(id,"AFSR",	0X3C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X3C,	"Auxiliary Fault Status Register",	1);
	mid = add_struc_member(id,"PFR",	0X40,	0x20000400,	-1,	8);
	set_member_cmt(id,	0X40,	"Processor Feature Register",	1);
	mid = add_struc_member(id,"DFR",	0X48,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X48,	"Debug Feature Register",	1);
	mid = add_struc_member(id,"ADR",	0X4C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4C,	"Auxiliary Feature Register",	1);
	mid = add_struc_member(id,"MMFR",	0X50,	0x20000400,	-1,	16);
	set_member_cmt(id,	0X50,	"Memory Model Feature Register",	1);
	mid = add_struc_member(id,"ISAR",	0X60,	0x20000400,	-1,	20);
	set_member_cmt(id,	0X60,	"Instruction Set Attributes Register",	1);
	mid = add_struc_member(id,"RESERVED0",	0X74,	0x20000400,	-1,	20);
	mid = add_struc_member(id,"CPACR",	0X88,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X88,	"Coprocessor Access Control Register",	1);
	
	id = get_struc_id("SCnSCB_Type");
	mid = add_struc_member(id,"RESERVED0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ICTR",	0X4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4,	"Interrupt Controller Type Register",	1);
	mid = add_struc_member(id,"ACTLR",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"Auxiliary Control Register",	1);
	mid = add_struc_member(id,"RESERVED1",	0XC,	0x20000400,	-1,	4);
	
	id = get_struc_id("DWT_Type");
	mid = add_struc_member(id,"CTRL",	0,	0x20000400,	-1,	4);
	set_member_cmt(id,	0,	"Control Register",	1);
	mid = add_struc_member(id,"CYCCNT",	0X4,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X4,	"Cycle Count Register",	1);
	mid = add_struc_member(id,"CPICNT",	0X8,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X8,	"CPI Count Register",	1);
	mid = add_struc_member(id,"EXCCNT",	0XC,	0x20000400,	-1,	4);
	set_member_cmt(id,	0XC,	"Exception Overhead Count Register",	1);
	mid = add_struc_member(id,"SLEEPCNT",	0X10,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X10,	"Sleep Count Register",	1);
	mid = add_struc_member(id,"LSUCNT",	0X14,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X14,	"LSU Count Register",	1);
	mid = add_struc_member(id,"FOLDCNT",	0X18,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X18,	"Folded-instruction Count Register",	1);
	mid = add_struc_member(id,"PCSR",	0X1C,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X1C,	"Program Counter Sample Register",	1);
	mid = add_struc_member(id,"COMP0",	0X20,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X20,	"Comparator Register 0",	1);
	mid = add_struc_member(id,"MASK0",	0X24,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X24,	"Mask Register 0",	1);
	mid = add_struc_member(id,"FUNCTION0",	0X28,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X28,	"Function Register 0",	1);
	mid = add_struc_member(id,"RESERVED0",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"COMP1",	0X30,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X30,	"Comparator Register 1",	1);
	mid = add_struc_member(id,"MASK1",	0X34,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X34,	"Mask Register 1",	1);
	mid = add_struc_member(id,"FUNCTION1",	0X38,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X38,	"Function Register 1",	1);
	mid = add_struc_member(id,"RESERVED1",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"COMP2",	0X40,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X40,	"Comparator Register 2",	1);
	mid = add_struc_member(id,"MASK2",	0X44,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X44,	"Mask Register 2",	1);
	mid = add_struc_member(id,"FUNCTION2",	0X48,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X48,	"Function Register 2",	1);
	mid = add_struc_member(id,"RESERVED2",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"COMP3",	0X50,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X50,	"Comparator Register 3",	1);
	mid = add_struc_member(id,"MASK3",	0X54,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X54,	"Mask Register 3",	1);
	mid = add_struc_member(id,"FUNCTION3",	0X58,	0x20000400,	-1,	4);
	set_member_cmt(id,	0X58,	"Function Register 3",	1);
	
	id = get_struc_id("DjiPacket");
	mid = add_struc_member(id,"delimiter",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"protover_length",	0X1,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"hdr_crc",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"sender",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"receiver",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"seqctr",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ack",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmdset",	0X9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmd",	0XA,	0x000400,	-1,	1);
	mid = add_struc_member(id,"payload",	0XB,	0x000400,	-1,	1);
	
	id = get_struc_id("RadioStatus");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3",	0X3,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_5",	0X5,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_7",	0X7,	0x000400,	-1,	1);
	
	id = get_struc_id("PktPayloadSET06CMDF0");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3",	0X3,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_5",	0X5,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_7",	0X7,	0x000400,	-1,	1);
	
	id = get_struc_id("DjiPacketHead");
	mid = add_struc_member(id,"delimiter",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"protover_length",	0X1,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"hdr_crc",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"sender",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"receiver",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"seqctr",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ack",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmdset",	0X9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmd",	0XA,	0x000400,	-1,	1);
	
	id = get_struc_id("PktPayloadS09C12");
	mid = add_struc_member(id,"flag_20001A28_D_E",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"flag_20001A28_A_B",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"attenuation",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"flag_20001A28_C",	0X3,	0x000400,	-1,	1);
	
	id = get_struc_id("DjiPacketS09C12");
	mid = add_struc_member(id,"head",	0,	0x60000400,	get_struc_id("DjiPacketHead"),	11);
	mid = add_struc_member(id,"payload",	0XB,	0x60000400,	get_struc_id("PktPayloadS09C12"),	4);
	
	id = get_struc_id("OfdmInitInstr");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3",	0X3,	0x000400,	-1,	1);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
	id = Structures_0(id);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	update_extra_cmt		(0XA000,	E_PREV + 0,	"; File Name   : C1_FW_V01.05.0080_m1400.elf");
	update_extra_cmt		(0XA000,	E_PREV + 1,	"; Format      : ELF for ARM (Executable)");
	update_extra_cmt		(0XA000,	E_PREV + 2,	"; Imagebase   : A000");
	update_extra_cmt		(0XA000,	E_PREV + 3,	"; ");
	update_extra_cmt		(0XA000,	E_PREV + 4,	"; Options     : EF_ARM_VFP_FLOAT");
	update_extra_cmt		(0XA000,	E_PREV + 5,	"; EABI version: 5");
	update_extra_cmt		(0XA000,	E_PREV + 6,	"; ");
	create_dword	(x=0XA000);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XA004);
	make_array	(x,	0X32);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_byte	(0XA0CC);
	create_byte	(0XA0CD);
	make_array	(0XA0CD,	0X3);
	create_dword	(0XA0D0);
	make_array	(0XA0D0,	0X2C);
	create_insn	(0XA180);
	create_insn	(x=0XA1AA);
	op_hex		(x,	1);
	create_insn	(x=0XA1F0);
	op_hex		(x,	1);
	create_insn	(0XA210);
	create_insn	(0XA230);
	create_dword	(0XA234);
	make_array	(0XA234,	0X4);
	create_dword	(x=0XA244);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XA248);
	create_insn	(0XA254);
	create_insn	(x=0XA262);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA26C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA276);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XA27C);
	create_insn	(x=0XA280);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XA28A);
	create_insn	(x=0XA28E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA294);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA296);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA298);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA29A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA29C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA29E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA2A0);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA2B0);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA2BE);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA2C0);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0XA2D0);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA2D2);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0XA2DE);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA2E0);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0XA2EE);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA2F2);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0XA300);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA316);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA31A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA31E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA320);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA322);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA324);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA326);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA328);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA32A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA32C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA32E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA330);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA332);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA334);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA336);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA338);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA33A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA368);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA36E);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0XA370);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0XA372);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0XA374);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0XA376);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0XA378);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0XA37A);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0XA37E);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0XA380);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0XA382);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0XA384);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0XA386);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0XA388);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0XA390);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XA396);
	create_insn	(x=0XA39A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA3A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA3A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA3AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA3CE);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0XA3D0);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0XA3DC);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0XA3DE);
	op_stkvar	(x,	1);
	create_insn	(x=0XA3E2);
	op_stkvar	(x,	1);
	create_insn	(x=0XA3E6);
	op_stkvar	(x,	1);
	create_insn	(x=0XA3EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XA3F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XA3FA);
	op_stkvar	(x,	1);
	create_insn	(x=0XA400);
	op_stkvar	(x,	1);
	create_insn	(x=0XA406);
	op_stkvar	(x,	1);
	create_insn	(x=0XA40C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA412);
	op_stkvar	(x,	1);
	create_insn	(x=0XA418);
	op_stkvar	(x,	1);
	create_insn	(x=0XA41E);
	op_stkvar	(x,	1);
	create_insn	(x=0XA424);
	op_stkvar	(x,	1);
	create_insn	(x=0XA42A);
	op_stkvar	(x,	1);
	create_insn	(x=0XA430);
	op_stkvar	(x,	1);
	create_insn	(x=0XA436);
	op_stkvar	(x,	1);
	create_insn	(x=0XA43C);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0XA440);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA446);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA452);
	op_stkvar	(x,	1);
	create_insn	(x=0XA458);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA45A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA464);
	op_hex		(x,	1);
	create_insn	(x=0XA468);
	op_hex		(x,	1);
	create_insn	(x=0XA472);
	op_hex		(x,	1);
	create_insn	(0XA478);
	create_insn	(x=0XA486);
	op_stkvar	(x,	1);
	create_insn	(x=0XA488);
	op_stkvar	(x,	1);
	create_insn	(x=0XA48C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA490);
	op_stkvar	(x,	1);
	create_insn	(x=0XA494);
	op_stkvar	(x,	1);
	create_insn	(x=0XA4A6);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0XA4A8);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0XA4AA);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0XA4AC);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0XA4B0);
	op_hex		(x,	1);
	create_insn	(x=0XA4B4);
	op_hex		(x,	1);
	create_insn	(x=0XA4B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA4BA);
	op_hex		(x,	1);
	create_insn	(x=0XA4C0);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA4C8);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA4CC);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA4D6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA4DA);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA4E2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA4E6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA4EE);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA4F2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA4FA);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA4FE);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA506);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA50A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA522);
	op_hex		(x,	1);
	create_insn	(x=0XA530);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XA534);
	op_stkvar	(x,	1);
	create_insn	(x=0XA53E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA544);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XA548);
	op_stkvar	(x,	1);
	create_insn	(x=0XA54C);
	op_plain_offset	(x,	1,	0X100005BC);
	op_plain_offset	(x,	129,	0X100005BC);
	create_insn	(x=0XA550);
	op_stkvar	(x,	1);
	create_insn	(x=0XA554);
	op_plain_offset	(x,	1,	0X100005BC);
	op_plain_offset	(x,	129,	0X100005BC);
	create_insn	(0XA55C);
	create_insn	(x=0XA55E);
	op_stkvar	(x,	1);
	create_insn	(x=0XA56C);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XA56E);
	op_stkvar	(x,	1);
	create_insn	(x=0XA572);
	op_plain_offset	(x,	1,	0X100005BC);
	op_plain_offset	(x,	129,	0X100005BC);
	create_insn	(x=0XA576);
	op_stkvar	(x,	1);
	create_insn	(x=0XA57A);
	op_plain_offset	(x,	1,	0X100005BC);
	op_plain_offset	(x,	129,	0X100005BC);
	create_insn	(x=0XA57C);
	op_stkvar	(x,	1);
	create_insn	(x=0XA582);
	op_stkvar	(x,	1);
	create_insn	(x=0XA58E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0XA596);
	set_name	(0XA596,	"log_current_status");
	create_insn	(x=0XA59C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA5A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA5A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA5AC);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XA5B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA5BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA5BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA5C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA5C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA5D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA5D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA5EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA5F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA5F6);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0XA5F8);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0XA5FA);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0XA600);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0XA604);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA60C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA60E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA610);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA612);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA618);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA61A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA61C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA624);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA628);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA630);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA632);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA634);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA63A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA63C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA63E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA646);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA64E);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(0XA654);
	make_array	(0XA656,	0X2);
	create_dword	(x=0XA658);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0XA65C,	0XA66D);
	set_name	(0XA65C,	"aSomethingChang");
	create_byte	(0XA66D);
	make_array	(0XA66D,	0X3);
	create_strlit	(0XA670,	0XA67A);
	set_name	(0XA670,	"aNoChange");
	make_array	(0XA67A,	0X2);
	create_dword	(x=0XA67C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0XA680,	0XA6B3);
	create_byte	(0XA6B3);
	create_strlit	(0XA6B4,	0XA6BD);
	set_name	(0XA6B4,	"aVerioD");
	create_byte	(0XA6BD);
	make_array	(0XA6BD,	0X3);
	create_dword	(0XA6C0);
	create_strlit	(0XA6C4,	0XA6CB);
	set_name	(0XA6C4,	"aVerX");
	create_byte	(0XA6CB);
	create_strlit	(0XA6CC,	0XA6D8);
	set_name	(0XA6CC,	"aMar112016");
	create_strlit	(0XA6D8,	0XA6E6);
	set_name	(0XA6D8,	"aBuild_dateS");
	make_array	(0XA6E6,	0X2);
	create_strlit	(0XA6E8,	0XA6F1);
	set_name	(0XA6E8,	"a182228");
	create_byte	(0XA6F1);
	make_array	(0XA6F1,	0X3);
	create_strlit	(0XA6F4,	0XA702);
	set_name	(0XA6F4,	"aBuild_timeS");
	make_array	(0XA702,	0X2);
	create_strlit	(0XA704,	0XA70E);
	set_name	(0XA704,	"aDefverD");
	make_array	(0XA70E,	0X2);
	create_strlit	(0XA710,	0XA728);
	set_name	(0XA710,	"aUid08x08x08x08");
	create_strlit	(0XA728,	0XA744);
	set_name	(0XA728,	"aId02x02x02x02x");
	create_strlit	(0XA744,	0XA758);
	set_name	(0XA744,	"aMynameCCCCCC");
	create_strlit	(0XA758,	0XA768);
	set_name	(0XA758,	"aMypassword04d");
	create_strlit	(0XA768,	0XA77A);
	set_name	(0XA768,	"aRcXXXXX");
	make_array	(0XA77A,	0X2);
	create_strlit	(0XA77C,	0XA785);
	create_byte	(0XA785);
	make_array	(0XA785,	0X3);
	create_insn	(x=0XA788);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA78C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA78E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA796);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA79A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA79C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA7A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA7A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA7AC);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA7BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA7BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA7C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA7C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA7CE);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA7D0);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA7D6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA7D8);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA7DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA7E2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA7E4);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA7E6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA7E8);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA7EE);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA7F0);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA7F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA7FA);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA7FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA804);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA806);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA80E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA810);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA818);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA81A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA868);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA878);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA882);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XA886);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA890);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0XA892);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA89A);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0XA8A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA8A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA8AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA8B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA8B8);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XA8BC);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XA8C6);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XA8CA);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XA8CC);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XA8CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA8D6);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XA8DA);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XA8DC);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XA8DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA8E6);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XA8EA);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XA8EC);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XA8EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA8F6);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XA8FA);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XA8FC);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XA8FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA906);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XA90A);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XA90C);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XA90E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA916);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA922);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA924);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0XA928);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0XA932);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0XA936);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0XA938);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0XA93A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA942);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0XA946);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0XA948);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0XA94A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA952);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0XA956);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0XA958);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0XA95A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA962);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0XA966);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0XA968);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0XA96A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA972);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0XA976);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0XA978);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0XA97A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA982);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(0XA98A);
	create_insn	(x=0XA98C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA990);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA994);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA99C);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XA9A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA9AC);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XA9B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XA9BE);
	create_insn	(x=0XA9C2);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XA9C4);
	op_hex		(x,	1);
	create_insn	(x=0XA9C8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XA9CA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XA9CC);
	op_hex		(x,	1);
	create_insn	(x=0XA9D0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XA9D2);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XA9D8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XA9DA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XA9E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XA9EE);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XAA04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAA2C);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(0XAA40);
	create_insn	(0XAA48);
	create_insn	(x=0XAA4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAA50);
	op_hex		(x,	1);
	create_insn	(x=0XAA5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAA64);
	op_hex		(x,	1);
	create_insn	(x=0XAA70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAA7A);
	op_hex		(x,	1);
	create_insn	(x=0XAA86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAA90);
	op_hex		(x,	1);
	create_insn	(x=0XAA9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAAA6);
	op_hex		(x,	1);
	create_insn	(x=0XAAB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAABC);
	op_hex		(x,	1);
	create_insn	(x=0XAAC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAAD2);
	op_hex		(x,	1);
	create_insn	(x=0XAADE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAAE8);
	op_hex		(x,	1);
	create_insn	(x=0XAAEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAAF0);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XAAF8);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XAAFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAB06);
	op_hex		(x,	1);
	create_insn	(x=0XAB0C);
	op_plain_offset	(x,	1,	0X1000000E);
	op_plain_offset	(x,	129,	0X1000000E);
	create_insn	(x=0XAB12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAB1C);
	op_hex		(x,	1);
	create_insn	(0XAB24);
	create_strlit	(0XAB6C,	0XAB71);
	set_name	(0XAB6C,	"a5_8g");
	create_byte	(0XAB71);
	make_array	(0XAB71,	0X3);
	create_strlit	(0XAB74,	0XAB79);
	set_name	(0XAB74,	"a900m");
	create_byte	(0XAB79);
	make_array	(0XAB79,	0X3);
	create_strlit	(0XAB7C,	0XAB7F);
	set_name	(0XAB7C,	"aS");
	create_byte	(0XAB7F);
	create_strlit	(0XAB80,	0XAB84);
	set_name	(0XAB80,	"aFcc");
	create_strlit	(0XAB84,	0XAB88);
	set_name	(0XAB84,	"aOff");
	create_strlit	(0XAB88,	0XAB8E);
	set_name	(0XAB88,	"aSS");
	make_array	(0XAB8E,	0X2);
	create_strlit	(0XAB90,	0XAB93);
	set_name	(0XAB90,	"aCe");
	create_byte	(0XAB93);
	create_strlit	(0XAB94,	0XAB97);
	set_name	(0XAB94,	"aOn");
	create_byte	(0XAB97);
	create_strlit	(0XAB98,	0XAB9F);
	set_name	(0XAB98,	"aMaster");
	create_byte	(0XAB9F);
	create_strlit	(0XABA0,	0XABA7);
	set_name	(0XABA0,	"aSlaver");
	create_byte	(0XABA7);
	create_strlit	(0XABA8,	0XABC5);
	set_name	(0XABA8,	"aGroup_id02x02x");
	create_byte	(0XABC5);
	make_array	(0XABC5,	0X3);
	create_strlit	(0XABC8,	0XABE0);
	set_name	(0XABC8,	"aGroup_nameCCCC");
	create_strlit	(0XABE0,	0XABF2);
	set_name	(0XABE0,	"aGroup_password");
	make_array	(0XABF2,	0X2);
	create_strlit	(0XABF4,	0XABFC);
	set_name	(0XABF4,	"aMyipD");
	create_strlit	(0XABFC,	0XAC08);
	set_name	(0XABFC,	"aStatue02x");
	create_strlit	(0XAC08,	0XAC18);
	set_name	(0XAC08,	"aGimbal_ctlipD");
	create_strlit	(0XAC18,	0XAC4A);
	set_name	(0XAC18,	"aSlaverDId02x02");
	make_array	(0XAC4A,	0X2);
	create_strlit	(0XAC4C,	0XAC52);
	set_name	(0XAC4C,	"aChD");
	make_array	(0XAC52,	0X2);
	create_strlit	(0XAC54,	0XAC5B);
	set_name	(0XAC54,	"aMcsD");
	create_byte	(0XAC5B);
	create_strlit	(0XAC5C,	0XAC64);
	set_name	(0XAC5C,	"aAutoS");
	create_dword	(x=0XAC64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0XAC68,	0XAC74);
	set_name	(0XAC68,	"a5d5d5d");
	create_dword	(x=0XAC74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0XAC78,	0XAC80);
	set_name	(0XAC78,	"aMonitor");
	create_strlit	(0XAC80,	0XAC8C);
	set_name	(0XAC80,	"aCaliErr");
	create_strlit	(0XAC8C,	0XAC9B);
	set_name	(0XAC8C,	"aCaliChange");
	create_byte	(0XAC9B);
	create_strlit	(0XAC9C,	0XACA2);
	set_name	(0XAC9C,	"aDD");
	make_array	(0XACA2,	0X2);
	create_dword	(x=0XACA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XACA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XACAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XACB0);
	create_dword	(0XACB4);
	create_strlit	(0XACB8,	0XACC1);
	set_name	(0XACB8,	"aStickerr");
	create_byte	(0XACC1);
	make_array	(0XACC1,	0X3);
	create_strlit	(0XACC4,	0XACCC);
	set_name	(0XACC4,	"aFpgaerr");
	create_strlit	(0XACCC,	0XACD8);
	set_name	(0XACCC,	"aRfmoduleerr");
	create_strlit	(0XACD8,	0XACE0);
	set_name	(0XACD8,	"aF330err");
	create_strlit	(0XACE0,	0XACE7);
	set_name	(0XACE0,	"aGpserr");
	create_byte	(0XACE7);
	create_strlit	(0XACE8,	0XACF3);
	set_name	(0XACE8,	"aEncrypterr");
	create_byte	(0XACF3);
	create_strlit	(0XACF4,	0XACFD);
	set_name	(0XACF4,	"aReseterr");
	create_byte	(0XACFD);
	make_array	(0XACFD,	0X3);
	create_strlit	(0XAD00,	0XAD10);
	set_name	(0XAD00,	"aBattery600mh");
	create_strlit	(0XAD10,	0XAD18);
	set_name	(0XAD10,	"aTemperr");
	create_dword	(0XAD18);
	create_dword	(0XAD1C);
	create_dword	(0XAD20);
	create_dword	(0XAD24);
	create_dword	(0XAD28);
	create_dword	(0XAD2C);
	create_dword	(0XAD30);
	create_dword	(0XAD34);
	create_dword	(0XAD38);
	create_dword	(0XAD3C);
	create_insn	(x=0XAD40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAD58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAD62);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XAD72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAD82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAD8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAD8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAD9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XADA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XADAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XADAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XADBE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XADCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XADD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XADD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XADE8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XADF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAE0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAE0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAE18);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(0XAE1E);
	create_insn	(x=0XAE22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAE28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAE2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAE32);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XAE36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAE44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAE50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAE52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAE5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAE76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAE82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAE88);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XAE92);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XAE9C);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XAEB0);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XAEBA);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XAEC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAEDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAEFC);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XAF04);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0XAF08);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0XAF0C);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0XAF10);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0XAF1C);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0XAF22);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0XAF2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAF32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAF36);
	op_plain_offset	(x,	1,	0X100005BC);
	op_plain_offset	(x,	129,	0X100005BC);
	create_insn	(x=0XAF3A);
	op_plain_offset	(x,	1,	0X100005BC);
	op_plain_offset	(x,	129,	0X100005BC);
	create_insn	(x=0XAF40);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0XAF44);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0XAF48);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0XAF4C);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0XAF58);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0XAF5C);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0XAF64);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XAF70);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XAF74);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XAF7C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XAF82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAF86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XAF8E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XAF9E);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XAFA0);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XAFA8);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XAFB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XAFB6);
	create_insn	(x=0XAFBA);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XAFBC);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XAFCC);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XAFD4);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XAFD8);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(0XAFF8);
	create_insn	(0XAFFA);
	create_insn	(x=0XB004);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB016);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XB026);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XB032);
	create_insn	(x=0XB03E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB04A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB050);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XB05A);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XB064);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XB078);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XB082);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(0XB090);
	create_insn	(x=0XB094);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB09E);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XB0A8);
	op_plain_offset	(x,	1,	0X1000000E);
	op_plain_offset	(x,	129,	0X1000000E);
	create_insn	(x=0XB0AC);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XB0B4);
	op_plain_offset	(x,	1,	0X1000000E);
	op_plain_offset	(x,	129,	0X1000000E);
	create_insn	(x=0XB0B6);
	op_hex		(x,	1);
	create_insn	(x=0XB0BC);
	op_plain_offset	(x,	1,	0X1000000E);
	op_plain_offset	(x,	129,	0X1000000E);
	create_insn	(x=0XB0BE);
	op_hex		(x,	1);
	create_insn	(0XB0C4);
	create_insn	(x=0XB0CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB0D8);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XB0E6);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XB0EA);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XB0F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB0FE);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XB106);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XB10C);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XB114);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB116);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	make_array	(0XB12E,	0X2);
	create_dword	(0XB130);
	make_array	(0XB130,	0X2);
	create_dword	(x=0XB138);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB13C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB140);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0XB144,	0XB14A);
	set_name	(0XB144,	"aRadio");
	make_array	(0XB14A,	0X2);
	create_dword	(x=0XB14C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB150);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0XB154,	0XB15C);
	set_name	(0XB154,	"aLedbell");
	create_dword	(x=0XB15C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB160);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0XB164,	0XB16B);
	set_name	(0XB164,	"aUnpack");
	create_byte	(0XB16B);
	create_dword	(x=0XB16C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB170);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB174);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0XB178,	0XB17F);
	set_name	(0XB178,	"aBk5811");
	create_byte	(0XB17F);
	create_dword	(x=0XB180);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0XB184,	0XB18B);
	set_name	(0XB184,	"aCc1120");
	create_byte	(0XB18B);
	create_dword	(x=0XB18C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB190);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0XB194,	0XB19B);
	set_name	(0XB194,	"aAdckey");
	create_byte	(0XB19B);
	create_dword	(x=0XB19C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB1A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB1A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB1A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB1AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0XB1B0,	0XB1CC);
	set_name	(0XB1B0,	"a3d3d3d3d3d3d3d");
	make_array	(0XB1CC,	0X4);
	create_dword	(x=0XB1D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XB1D4);
	create_strlit	(0XB1D8,	0XB20D);
	set_name	(0XB1D8,	"aSSDIpDCtlD3d3d");
	create_byte	(0XB20D);
	make_array	(0XB20D,	0X3);
	create_strlit	(0XB210,	0XB212);
	set_name	(0XB210,	"aM");
	make_array	(0XB212,	0X2);
	create_dword	(x=0XB214);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB218);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XB21C);
	create_dword	(x=0XB220);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB224);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB228);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB22C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XB230);
	create_insn	(x=0XB238);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB23A);
	op_hex		(x,	1);
	create_insn	(x=0XB23E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB242);
	op_hex		(x,	1);
	create_insn	(x=0XB248);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB24A);
	op_hex		(x,	1);
	create_insn	(x=0XB24E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB250);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB252);
	op_hex		(x,	1);
	create_insn	(x=0XB256);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB25E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB26A);
	op_hex		(x,	1);
	create_insn	(x=0XB272);
	op_hex		(x,	1);
	create_insn	(x=0XB27A);
	op_hex		(x,	1);
	create_insn	(x=0XB282);
	op_hex		(x,	1);
	create_insn	(x=0XB28A);
	op_hex		(x,	1);
	create_insn	(x=0XB292);
	op_hex		(x,	1);
	create_insn	(x=0XB29A);
	op_hex		(x,	1);
	create_insn	(x=0XB2A2);
	op_hex		(x,	1);
	create_insn	(x=0XB2A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB2AA);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0XB2AC);
	op_hex		(x,	1);
	create_insn	(x=0XB2B0);
	op_hex		(x,	1);
	create_insn	(x=0XB2B4);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0XB2B8);
	op_hex		(x,	1);
	create_insn	(x=0XB2C0);
	op_hex		(x,	1);
	create_insn	(0XB2D0);
	create_insn	(x=0XB2DC);
	op_hex		(x,	1);
	create_insn	(0XB2E4);
	create_insn	(x=0XB2E8);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(0XB2EC);
	create_insn	(x=0XB2F0);
	op_plain_offset	(x,	1,	0X10000000);
	op_plain_offset	(x,	129,	0X10000000);
	create_insn	(x=0XB2FE);
	op_stkvar	(x,	1);
	create_insn	(x=0XB308);
	op_stkvar	(x,	1);
	create_insn	(x=0XB30C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB30E);
	op_stkvar	(x,	1);
	create_insn	(x=0XB31E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB326);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB328);
	op_stkvar	(x,	1);
	create_insn	(x=0XB32C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB32E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB336);
	op_stkvar	(x,	1);
	create_insn	(0XB342);
	create_dword	(x=0XB348);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB34C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB350);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB354);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB358);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0XB35C,	0XB362);
	set_name	(0XB35C,	"aStart");
	make_array	(0XB362,	0X2);
	create_insn	(x=0XB364);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB36C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB370);
	op_hex		(x,	1);
	create_insn	(x=0XB374);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB378);
	op_hex		(x,	1);
	create_insn	(x=0XB37E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB380);
	op_hex		(x,	1);
	create_insn	(x=0XB384);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB386);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB388);
	op_hex		(x,	1);
	create_insn	(x=0XB38C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB390);
	op_hex		(x,	1);
	create_insn	(x=0XB394);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB398);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB3A0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB3A4);
	op_hex		(x,	1);
	create_insn	(x=0XB3A8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB3AA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB3AC);
	op_hex		(x,	1);
	create_insn	(x=0XB3B0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB3B2);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB3B4);
	op_hex		(x,	1);
	create_insn	(x=0XB3B8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB3BA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB3BC);
	op_hex		(x,	1);
	create_insn	(x=0XB3C0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB3C4);
	op_hex		(x,	1);
	create_insn	(x=0XB3C8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB3CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB3D4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB3D8);
	op_hex		(x,	1);
	create_insn	(x=0XB3DC);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB3DE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB3E0);
	op_hex		(x,	1);
	create_insn	(x=0XB3E4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB3E6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB3E8);
	op_hex		(x,	1);
	create_insn	(x=0XB3EC);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB3EE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB3F0);
	op_hex		(x,	1);
	create_insn	(x=0XB3F4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB3F8);
	op_hex		(x,	1);
	create_insn	(x=0XB3FC);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB400);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB40A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB40C);
	op_hex		(x,	1);
	create_insn	(x=0XB410);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB414);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB41E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB420);
	op_hex		(x,	1);
	create_insn	(x=0XB424);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB428);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB432);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB434);
	op_hex		(x,	1);
	create_insn	(x=0XB438);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0XB43C);
	create_insn	(x=0XB43E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB440);
	op_hex		(x,	1);
	create_insn	(x=0XB444);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB448);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0XB44C);
	op_hex		(x,	1);
	create_insn	(x=0XB450);
	op_plain_offset	(x,	1,	0X400FC0C4);
	op_plain_offset	(x,	129,	0X400FC0C4);
	create_insn	(x=0XB456);
	op_hex		(x,	1);
	create_insn	(x=0XB45C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB45E);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0XB460);
	op_hex		(x,	1);
	create_insn	(x=0XB464);
	op_hex		(x,	1);
	create_insn	(x=0XB468);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0XB46E);
	op_plain_offset	(x,	1,	0X400B8000);
	op_plain_offset	(x,	129,	0X400B8000);
	create_insn	(x=0XB474);
	op_plain_offset	(x,	1,	0X400B8000);
	op_plain_offset	(x,	129,	0X400B8000);
	create_insn	(x=0XB478);
	op_plain_offset	(x,	1,	0X400B8000);
	op_plain_offset	(x,	129,	0X400B8000);
	create_insn	(0XB47C);
	create_insn	(x=0XB47E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB488);
	op_plain_offset	(x,	1,	0X400B8000);
	op_plain_offset	(x,	129,	0X400B8000);
	create_insn	(x=0XB48C);
	op_plain_offset	(x,	1,	0X400B8000);
	op_plain_offset	(x,	129,	0X400B8000);
	create_insn	(x=0XB490);
	op_plain_offset	(x,	1,	0X400B8000);
	op_plain_offset	(x,	129,	0X400B8000);
	create_insn	(x=0XB494);
	op_plain_offset	(x,	1,	0X400B8000);
	op_plain_offset	(x,	129,	0X400B8000);
	create_insn	(x=0XB496);
	op_hex		(x,	1);
	create_insn	(x=0XB49A);
	op_plain_offset	(x,	1,	0X400B8000);
	op_plain_offset	(x,	129,	0X400B8000);
	create_insn	(x=0XB49C);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0XB49E);
	op_hex		(x,	1);
	create_insn	(x=0XB4A2);
	op_hex		(x,	1);
	create_insn	(x=0XB4A6);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0XB4AA);
	op_plain_offset	(x,	1,	0X400B8000);
	op_plain_offset	(x,	129,	0X400B8000);
	create_insn	(x=0XB4AC);
	op_hex		(x,	1);
	create_insn	(x=0XB4B0);
	op_plain_offset	(x,	1,	0X400B8000);
	op_plain_offset	(x,	129,	0X400B8000);
	create_insn	(x=0XB4B2);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0XB4B4);
	op_hex		(x,	1);
	create_insn	(x=0XB4B8);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0XB4BA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB4BC);
	op_hex		(x,	1);
	create_insn	(x=0XB4C0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB4C4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB4C6);
	op_hex		(x,	1);
	create_insn	(x=0XB4CA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB4CE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB4D0);
	op_hex		(x,	1);
	create_insn	(x=0XB4D4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB4D8);
	op_plain_offset	(x,	1,	0X400B8000);
	op_plain_offset	(x,	129,	0X400B8000);
	create_insn	(x=0XB4DA);
	op_hex		(x,	1);
	create_insn	(x=0XB4DE);
	op_plain_offset	(x,	1,	0X400B8000);
	op_plain_offset	(x,	129,	0X400B8000);
	create_insn	(x=0XB4E0);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0XB4E2);
	op_hex		(x,	1);
	create_insn	(x=0XB4E6);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0XB4E8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB4EA);
	op_hex		(x,	1);
	create_insn	(x=0XB4EE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0XB4F2);
	create_insn	(0XB508);
	create_insn	(0XB54C);
	create_insn	(0XB594);
	create_insn	(x=0XB59A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB59C);
	op_hex		(x,	1);
	create_insn	(x=0XB5A0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0XB5A4);
	create_insn	(0XB604);
	create_insn	(x=0XB64C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB64E);
	op_hex		(x,	1);
	create_insn	(x=0XB652);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB654);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB656);
	op_hex		(x,	1);
	create_insn	(x=0XB65A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB65C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB65E);
	op_hex		(x,	1);
	create_insn	(x=0XB662);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0XB676);
	create_insn	(x=0XB67A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB686);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XB696);
	create_insn	(0XB6AA);
	create_insn	(x=0XB6AC);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XB6B0);
	create_insn	(x=0XB6B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB6BC);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XB6C0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB6C2);
	op_hex		(x,	1);
	create_insn	(x=0XB6C6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB6C8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB6CA);
	op_hex		(x,	1);
	create_insn	(x=0XB6CE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB6D0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB6D2);
	op_hex		(x,	1);
	create_insn	(x=0XB6D6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB6DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB6E4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB6E6);
	op_hex		(x,	1);
	create_insn	(x=0XB6EA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0XB6EE);
	create_insn	(x=0XB6F6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XB6FA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB6FC);
	op_hex		(x,	1);
	create_insn	(x=0XB700);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB702);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB704);
	op_hex		(x,	1);
	create_insn	(x=0XB708);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB70A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB70C);
	op_hex		(x,	1);
	create_insn	(x=0XB710);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB714);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB716);
	op_hex		(x,	1);
	create_insn	(x=0XB71A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0XB71E);
	create_insn	(x=0XB720);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB722);
	op_hex		(x,	1);
	create_insn	(x=0XB726);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB728);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB72A);
	op_hex		(x,	1);
	create_insn	(x=0XB72E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB730);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB732);
	op_hex		(x,	1);
	create_insn	(x=0XB736);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0XB73A);
	create_insn	(x=0XB73C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB740);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XB75E,	0X2);
	create_dword	(x=0XB760);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB764);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB768);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB76C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB770);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB774);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB778);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB77C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB780);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XB784);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XB788);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB78A);
	op_hex		(x,	1);
	create_insn	(x=0XB78E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB790);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB792);
	op_hex		(x,	1);
	create_insn	(x=0XB796);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB79A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB79C);
	op_hex		(x,	1);
	create_insn	(x=0XB7A0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB7A2);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB7A4);
	op_hex		(x,	1);
	create_insn	(x=0XB7A8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB7AA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB7AC);
	op_hex		(x,	1);
	create_insn	(x=0XB7B0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0XB7B4);
	create_insn	(x=0XB7B6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB7B8);
	op_hex		(x,	1);
	create_insn	(x=0XB7BC);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB7BE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB7C0);
	op_hex		(x,	1);
	create_insn	(x=0XB7C4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB7C6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB7C8);
	op_hex		(x,	1);
	create_insn	(x=0XB7CC);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB7D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB7D6);
	op_hex		(x,	1);
	create_insn	(x=0XB7E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB7F0);
	op_plain_offset	(x,	1,	0X100027C2);
	op_plain_offset	(x,	129,	0X100027C2);
	create_insn	(x=0XB7F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB7FE);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XB80C);
	create_insn	(x=0XB810);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XB816);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XB818);
	op_stkvar	(x,	1);
	create_insn	(x=0XB81E);
	op_stkvar	(x,	1);
	create_insn	(x=0XB830);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XB83C);
	create_insn	(x=0XB846);
	op_stkvar	(x,	1);
	create_insn	(x=0XB84C);
	op_stkvar	(x,	1);
	create_insn	(x=0XB85C);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XB85E);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XB862);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XB866);
	create_insn	(x=0XB868);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB872);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XB874);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	set_cmt	(0XB876,	"switch 6 cases ",	0);
	set_cmt	(0XB87A,	"switch jump",	0);
	set_cmt	(0XB87E,	"jump table for switch statement",	0);
	create_byte	(0XB87E);
	set_name	(0XB87E,	"jpt_187A");
	create_byte	(0XB87F);
	create_byte	(0XB880);
	create_byte	(0XB881);
	create_byte	(0XB882);
	create_byte	(0XB883);
	set_cmt	(0XB884,	"jumptable 0000B87A case 0",	1);
	create_insn	(0XB884);
	set_cmt	(0XB888,	"jumptable 0000B87A case 1",	1);
	create_insn	(0XB888);
	set_cmt	(0XB890,	"jumptable 0000B87A default case",	1);
	create_insn	(x=0XB890);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	set_name	(0XB890,	"def_187A");
	create_insn	(x=0XB894);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	set_cmt	(0XB898,	"jumptable 0000B87A case 2",	1);
	create_insn	(0XB898);
	set_cmt	(0XB8A4,	"jumptable 0000B87A case 3",	1);
	create_insn	(0XB8A4);
	set_cmt	(0XB8B8,	"jumptable 0000B87A case 4",	1);
	create_insn	(0XB8B8);
	create_insn	(x=0XB8DC);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XB8E0);
	create_insn	(x=0XB8E8);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XB8EA);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	set_cmt	(0XB8EE,	"jumptable 0000B87A case 5",	1);
	create_insn	(0XB8EE);
	create_insn	(x=0XB8F6);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XB8FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB8FE);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XB90A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB90C);
	op_hex		(x,	1);
	create_insn	(x=0XB910);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB914);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XB918);
	create_insn	(x=0XB91C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XB91E);
	op_hex		(x,	1);
	create_insn	(x=0XB922);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0XB928);
	create_insn	(x=0XB932);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB934);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XB954);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XB976);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XB998);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XB9A0);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XB9AA);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XB9B0);
	create_insn	(x=0XB9B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB9BE);
	op_plain_offset	(x,	1,	0X100027C2);
	op_plain_offset	(x,	129,	0X100027C2);
	create_insn	(x=0XB9C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB9D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XB9D4);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XB9D8);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XB9DC);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XB9DE);
	op_plain_offset	(x,	1,	0X10000074);
	op_plain_offset	(x,	129,	0X10000074);
	create_insn	(x=0XB9E2);
	op_plain_offset	(x,	1,	0X10000074);
	op_plain_offset	(x,	129,	0X10000074);
	create_insn	(x=0XB9F0);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XB9F2);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	set_cmt	(0XB9FE,	"switch 5 cases ",	0);
	set_cmt	(0XBA02,	"switch jump",	0);
	set_cmt	(0XBA06,	"jump table for switch statement",	0);
	create_byte	(0XBA06);
	set_name	(0XBA06,	"jpt_1A02");
	create_byte	(0XBA07);
	create_byte	(0XBA08);
	create_byte	(0XBA09);
	create_byte	(0XBA0A);
	set_cmt	(0XBA0C,	"jumptable 0000BA02 case 0",	1);
	create_insn	(0XBA0C);
	create_insn	(x=0XBA10);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBA14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XBA16);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XBA1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XBA1E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XBA22);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBA28);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBA2C);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBA3A);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBA40);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBA48);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBA4E);
	create_insn	(x=0XBA50);
	op_plain_offset	(x,	1,	0X10000074);
	op_plain_offset	(x,	129,	0X10000074);
	create_insn	(x=0XBA54);
	op_plain_offset	(x,	1,	0X10000074);
	op_plain_offset	(x,	129,	0X10000074);
	create_insn	(x=0XBA58);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBA66);
	create_insn	(0XBA72);
	create_insn	(0XBA82);
	create_insn	(x=0XBA8C);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBA8E);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBA92);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBA94);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBA98);
	op_plain_offset	(x,	1,	0X10000074);
	op_plain_offset	(x,	129,	0X10000074);
	create_insn	(x=0XBA9C);
	op_plain_offset	(x,	1,	0X10000074);
	op_plain_offset	(x,	129,	0X10000074);
	create_insn	(x=0XBAAA);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBAAE);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBAB0);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBAB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XBABA);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XBABE);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	set_cmt	(0XBAC4,	"jumptable 0000BA02 default case",	1);
	set_name	(0XBAC4,	"def_1A02");
	create_insn	(0XBAC6);
	create_insn	(x=0XBACC);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBAD8);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	set_cmt	(0XBADC,	"jumptable 0000BA02 case 1",	1);
	create_insn	(x=0XBADC);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBAE6);
	create_insn	(0XBAF6);
	create_insn	(x=0XBB02);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBB04);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBB08);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	set_cmt	(0XBB0C,	"jumptable 0000BA02 case 2",	1);
	create_insn	(0XBB0C);
	create_insn	(x=0XBB12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XBB1E);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBB22);
	create_insn	(x=0XBB24);
	op_plain_offset	(x,	1,	0X10000074);
	op_plain_offset	(x,	129,	0X10000074);
	create_insn	(x=0XBB28);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBB44);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBB50);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBB56);
	create_insn	(x=0XBB60);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBB66);
	create_insn	(x=0XBB70);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBB72);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBB74);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBB76);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	set_cmt	(0XBB7C,	"jumptable 0000BA02 case 3",	1);
	create_insn	(0XBB7C);
	create_insn	(x=0XBB8C);
	op_plain_offset	(x,	1,	0X10000074);
	op_plain_offset	(x,	129,	0X10000074);
	create_insn	(x=0XBB90);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBB94);
	create_insn	(x=0XBB96);
	op_plain_offset	(x,	1,	0X10000074);
	op_plain_offset	(x,	129,	0X10000074);
	create_insn	(x=0XBB9A);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBBA0);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBBA2);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBBB6);
	create_insn	(0XBBB8);
	set_cmt	(0XBBBA,	"jumptable 0000BA02 case 4",	1);
	create_insn	(0XBBBA);
	create_dword	(x=0XBBBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XBBC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XBBC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XBBC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XBBCC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XBBD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XBBD4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XBBD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XBBDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XBBE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XBBE4);
	op_plain_offset	(x,	1,	0X10000074);
	op_plain_offset	(x,	129,	0X10000074);
	create_insn	(x=0XBBEA);
	op_plain_offset	(x,	1,	0X10000074);
	op_plain_offset	(x,	129,	0X10000074);
	create_insn	(0XBBF0);
	create_insn	(x=0XBBFA);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBC0A);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBC1A);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBC2C);
	create_insn	(x=0XBC2E);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBC32);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBC36);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBC42);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBC48);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBC54);
	op_plain_offset	(x,	1,	0X10000074);
	op_plain_offset	(x,	129,	0X10000074);
	create_insn	(x=0XBC5E);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBC60);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBC62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XBC78);
	create_insn	(x=0XBC7E);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBC8C);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBC96);
	create_insn	(x=0XBC9C);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBCAA);
	create_insn	(x=0XBCB0);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBCBC);
	create_insn	(x=0XBCC2);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBCC4);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBCC8);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBCCC);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBCD2);
	create_insn	(0XBCDA);
	create_insn	(0XBCDE);
	create_insn	(x=0XBCE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XBCE6);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBCF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XBCFA);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XBD00);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBD06);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBD08);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XBD0E);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBD14);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBD1A);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBD20);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBD26);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBD28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XBD2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XBD34);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0XBD38);
	op_plain_offset	(x,	1,	0X100000AC);
	op_plain_offset	(x,	129,	0X100000AC);
	create_insn	(x=0XBD3A);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0XBD3E);
	op_plain_offset	(x,	1,	0X100000AC);
	op_plain_offset	(x,	129,	0X100000AC);
	create_insn	(x=0XBD40);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0XBD44);
	op_plain_offset	(x,	1,	0X100000AC);
	op_plain_offset	(x,	129,	0X100000AC);
	create_insn	(x=0XBD46);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0XBD4A);
	op_plain_offset	(x,	1,	0X100000AC);
	op_plain_offset	(x,	129,	0X100000AC);
	create_insn	(x=0XBD4C);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0XBD50);
	op_plain_offset	(x,	1,	0X100000AC);
	op_plain_offset	(x,	129,	0X100000AC);
	create_insn	(x=0XBD52);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0XBD56);
	op_plain_offset	(x,	1,	0X100000AC);
	op_plain_offset	(x,	129,	0X100000AC);
	create_insn	(x=0XBD58);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBD62);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBD64);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBD6E);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBD70);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBD78);
	op_plain_offset	(x,	1,	0X10003C0A);
	op_plain_offset	(x,	129,	0X10003C0A);
	create_insn	(x=0XBD7A);
	op_plain_offset	(x,	1,	0X10003C0A);
	op_plain_offset	(x,	129,	0X10003C0A);
	create_insn	(x=0XBD7C);
	op_hex		(x,	1);
	create_insn	(x=0XBD84);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBD86);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XBD8A);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBD9E);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XBDA2);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBDA4);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBDAA);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XBDAC);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBDC0);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XBDC6);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBDCA);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBDEA);
	create_insn	(0XBDF2);
	create_insn	(x=0XBE0E);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XBE14);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBE18);
	create_insn	(0XBE1E);
	create_insn	(0XBE26);
	create_insn	(x=0XBE2A);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBE32);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBE36);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XBE3C);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBE44);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBE4C);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBE54);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBE5C);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBE74);
	op_plain_offset	(x,	1,	0X100000AC);
	op_plain_offset	(x,	129,	0X100000AC);
	create_insn	(x=0XBE7E);
	op_plain_offset	(x,	1,	0X100000AC);
	op_plain_offset	(x,	129,	0X100000AC);
	create_insn	(x=0XBE88);
	op_plain_offset	(x,	1,	0X100000AC);
	op_plain_offset	(x,	129,	0X100000AC);
	create_insn	(x=0XBE94);
	op_plain_offset	(x,	1,	0X100000AC);
	op_plain_offset	(x,	129,	0X100000AC);
	create_insn	(x=0XBEA0);
	op_plain_offset	(x,	1,	0X100000AC);
	op_plain_offset	(x,	129,	0X100000AC);
	create_insn	(0XBEAC);
	create_insn	(0XBEAE);
	create_insn	(0XBEB0);
	create_insn	(0XBEB2);
	create_insn	(0XBEB4);
	create_insn	(0XBEB6);
	create_insn	(0XBEB8);
	create_insn	(0XBEBA);
	create_insn	(x=0XBEBC);
	op_plain_offset	(x,	1,	0X100000AC);
	op_plain_offset	(x,	129,	0X100000AC);
	create_insn	(x=0XBEC6);
	op_hex		(x,	1);
	create_insn	(x=0XBECE);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XBED6);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBEE2);
	create_insn	(0XBEE4);
	create_insn	(0XBEE6);
	create_insn	(0XBEE8);
	create_insn	(x=0XBEF0);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBEF4);
	create_insn	(x=0XBEFC);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBF00);
	create_insn	(x=0XBF08);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBF0C);
	create_insn	(x=0XBF14);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBF18);
	create_insn	(x=0XBF20);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBF24);
	create_insn	(x=0XBF2C);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBF30);
	create_insn	(x=0XBF38);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XBF3C);
	create_insn	(0XBF6A);
	create_insn	(0XBF8A);
	create_insn	(0XBF8C);
	create_insn	(0XBF8E);
	create_insn	(0XBF90);
	create_insn	(0XBF92);
	create_insn	(x=0XBF9E);
	op_plain_offset	(x,	1,	0X100000AC);
	op_plain_offset	(x,	129,	0X100000AC);
	create_insn	(0XBFA2);
	create_insn	(x=0XBFCC);
	op_plain_offset	(x,	1,	0X100000AC);
	op_plain_offset	(x,	129,	0X100000AC);
	create_insn	(0XBFD0);
	create_insn	(x=0XBFFA);
	op_plain_offset	(x,	1,	0X100000AC);
	op_plain_offset	(x,	129,	0X100000AC);
	create_insn	(0XBFFE);
	create_insn	(x=0XC028);
	op_plain_offset	(x,	1,	0X100000AC);
	op_plain_offset	(x,	129,	0X100000AC);
	create_insn	(0XC02C);
	create_insn	(x=0XC056);
	op_plain_offset	(x,	1,	0X100000AC);
	op_plain_offset	(x,	129,	0X100000AC);
	make_array	(0XC05A,	0X2);
	create_dword	(x=0XC05C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC060);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC064);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC068);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC06C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XC070);
	create_insn	(x=0XC09A);
	op_plain_offset	(x,	1,	0X100000AC);
	op_plain_offset	(x,	129,	0X100000AC);
	create_insn	(0XC09E);
	create_insn	(x=0XC0A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC0A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC0AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC0B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC0BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XC0D6);
	create_insn	(x=0XC0DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC0DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC0F4);
	op_plain_offset	(x,	1,	0X1000000E);
	op_plain_offset	(x,	129,	0X1000000E);
	create_insn	(x=0XC0F6);
	op_hex		(x,	1);
	create_insn	(x=0XC0FA);
	op_plain_offset	(x,	1,	0X1000000E);
	op_plain_offset	(x,	129,	0X1000000E);
	create_insn	(x=0XC0FE);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC100);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XC10A);
	create_insn	(x=0XC118);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC11A);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC11E);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC122);
	op_plain_offset	(x,	1,	0X1000000E);
	op_plain_offset	(x,	129,	0X1000000E);
	create_insn	(x=0XC124);
	op_hex		(x,	1);
	create_insn	(x=0XC128);
	op_plain_offset	(x,	1,	0X1000000E);
	op_plain_offset	(x,	129,	0X1000000E);
	create_insn	(x=0XC12A);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC132);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XC13C);
	create_insn	(x=0XC140);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC144);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC148);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC14A);
	op_plain_offset	(x,	1,	0X100027C2);
	op_plain_offset	(x,	129,	0X100027C2);
	create_insn	(x=0XC14E);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC160);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC162);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC16A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XC16C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC176);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XC186);
	create_insn	(x=0XC18E);
	op_plain_offset	(x,	1,	0X10000074);
	op_plain_offset	(x,	129,	0X10000074);
	create_insn	(0XC1A8);
	create_insn	(x=0XC1B0);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC1B6);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC1BA);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XC1C0);
	create_insn	(x=0XC1C8);
	op_plain_offset	(x,	1,	0X10000074);
	op_plain_offset	(x,	129,	0X10000074);
	create_insn	(0XC1E2);
	create_insn	(x=0XC1EA);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XC1F2);
	create_insn	(x=0XC204);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC206);
	op_hex		(x,	1);
	create_insn	(x=0XC20A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC20C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC20E);
	op_hex		(x,	1);
	create_insn	(x=0XC212);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0XC216);
	create_insn	(x=0XC222);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC224);
	op_hex		(x,	1);
	create_insn	(x=0XC228);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC22A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC22C);
	op_hex		(x,	1);
	create_insn	(x=0XC230);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC232);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC234);
	op_hex		(x,	1);
	create_insn	(x=0XC238);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC23C);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XC240);
	create_insn	(0XC242);
	create_insn	(x=0XC24A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC24C);
	op_hex		(x,	1);
	create_insn	(x=0XC250);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC252);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC254);
	op_hex		(x,	1);
	create_insn	(x=0XC258);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC25A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC25C);
	op_hex		(x,	1);
	create_insn	(x=0XC260);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC264);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XC268);
	create_insn	(x=0XC270);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC272);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XC276);
	create_insn	(x=0XC27E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC280);
	op_hex		(x,	1);
	create_insn	(x=0XC284);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC286);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC288);
	op_hex		(x,	1);
	create_insn	(x=0XC28C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC290);
	op_hex		(x,	1);
	create_insn	(x=0XC2A0);
	op_hex		(x,	1);
	create_insn	(x=0XC2A8);
	op_hex		(x,	1);
	create_insn	(x=0XC2B0);
	op_hex		(x,	1);
	create_insn	(x=0XC2C0);
	op_hex		(x,	1);
	create_insn	(x=0XC2C8);
	op_hex		(x,	1);
	create_insn	(0XC2D0);
	create_insn	(x=0XC2D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC2D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XC2E6);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC2EA);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC2EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC2F0);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC2F2);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XC3BE);
	create_insn	(0XC3C8);
	create_insn	(0XC3CA);
	create_insn	(x=0XC3CC);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC3CE);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC3D4);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC444);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC44A);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC464);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC468);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XC492);
	create_dword	(x=0XC494);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC49C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XC4A0);
	create_dword	(x=0XC4A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC4A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC4AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC4B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC4B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC4B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XC4BC);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC4BE);
	op_hex		(x,	1);
	create_insn	(x=0XC4C2);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC4C4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC4C6);
	op_hex		(x,	1);
	create_insn	(x=0XC4CA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC4CE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC4D0);
	op_hex		(x,	1);
	create_insn	(x=0XC4D4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC4D6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC4D8);
	op_hex		(x,	1);
	create_insn	(x=0XC4DC);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC4DE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC4E0);
	op_hex		(x,	1);
	create_insn	(x=0XC4E4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC4E8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC4EA);
	op_hex		(x,	1);
	create_insn	(x=0XC4EE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC4F0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC4F2);
	op_hex		(x,	1);
	create_insn	(x=0XC4F6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC4F8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC4FA);
	op_hex		(x,	1);
	create_insn	(x=0XC4FE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC500);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC51C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC51E);
	op_hex		(x,	1);
	create_insn	(x=0XC522);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC526);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC528);
	op_hex		(x,	1);
	create_insn	(x=0XC52C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC52E);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XC54A);
	create_insn	(0XC554);
	create_insn	(0XC570);
	create_insn	(x=0XC572);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC574);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC578);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC57C);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XC57E);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC58C);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC590);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC598);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC59A);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC5A0);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XC5B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC5B4);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XC5B8);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XC5BC);
	create_insn	(x=0XC5BE);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC5C6);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC5C8);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC5CA);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XC5CE);
	create_insn	(0XC5D6);
	create_insn	(0XC5E4);
	create_insn	(x=0XC5FA);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC5FC);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC600);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC604);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XC608);
	create_insn	(x=0XC60A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC60E);
	op_stkvar	(x,	1);
	create_insn	(x=0XC612);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC614);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XC616);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XC61A);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC620);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	set_cmt	(0XC622,	"switch 5 cases ",	0);
	set_cmt	(0XC626,	"switch jump",	0);
	set_cmt	(0XC62A,	"jump table for switch statement",	0);
	create_byte	(0XC62A);
	set_name	(0XC62A,	"jpt_2626");
	create_byte	(0XC62B);
	create_byte	(0XC62C);
	create_byte	(0XC62D);
	create_byte	(0XC62E);
	set_cmt	(0XC630,	"jumptable 0000C626 case 0",	1);
	create_insn	(0XC630);
	create_insn	(x=0XC642);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC64A);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC64C);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC64E);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	set_cmt	(0XC650,	"jumptable 0000C626 default case",	1);
	set_name	(0XC650,	"def_2626");
	create_insn	(x=0XC652);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	set_cmt	(0XC656,	"jumptable 0000C626 case 1",	1);
	create_insn	(0XC656);
	create_insn	(x=0XC672);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XC676);
	set_cmt	(0XC67E,	"jumptable 0000C626 case 2",	1);
	create_insn	(x=0XC67E);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC682);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC694);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC696);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC698);
	op_stkvar	(x,	1);
	create_insn	(0XC69E);
	create_insn	(x=0XC6A4);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC6A6);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC6A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XC6AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XC6C0);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	set_cmt	(0XC6C4,	"jumptable 0000C626 case 3",	1);
	create_insn	(0XC6C4);
	create_insn	(x=0XC6D0);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC6D2);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC6D6);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	set_cmt	(0XC6DA,	"jumptable 0000C626 case 4",	1);
	create_insn	(0XC6DA);
	create_insn	(0XC6E2);
	create_insn	(0XC6EA);
	create_insn	(0XC6F0);
	create_insn	(x=0XC6F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC6F6);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC704);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC706);
	op_hex		(x,	1);
	create_insn	(x=0XC70A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC70C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC70E);
	op_hex		(x,	1);
	create_insn	(x=0XC712);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC714);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC716);
	op_hex		(x,	1);
	create_insn	(x=0XC71A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC720);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC722);
	op_hex		(x,	1);
	create_insn	(x=0XC726);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC728);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC72A);
	op_hex		(x,	1);
	create_insn	(x=0XC72E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC730);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XC732);
	op_hex		(x,	1);
	create_insn	(x=0XC736);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0XC73A);
	create_insn	(x=0XC742);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC748);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC750);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XC75C);
	create_insn	(0XC75E);
	create_insn	(x=0XC760);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC762);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC764);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XC766);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC770);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC7EA);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XC7EC);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(0XC7F0);
	create_insn	(0XC80A);
	create_insn	(x=0XC810);
	op_stkvar	(x,	1);
	create_insn	(x=0XC814);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC81A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC81C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XC822);
	op_stkvar	(x,	1);
	create_insn	(x=0XC826);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC82C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC830);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC832);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC834);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC838);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XC83A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC83E);
	op_hex		(x,	1);
	create_insn	(x=0XC842);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XC84C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC856);
	op_stkvar	(x,	1);
	create_insn	(x=0XC85C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC86C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC87E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC886);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC88A);
	op_stkvar	(x,	1);
	create_insn	(x=0XC898);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC8A2);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC8A4);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC8A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC8A8);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC8AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC8B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC8BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC8CA);
	op_plain_offset	(x,	1,	0X100026F0);
	op_plain_offset	(x,	129,	0X100026F0);
	create_insn	(x=0XC8DE);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XC8E4);
	op_hex		(x,	1);
	create_insn	(x=0XC8E8);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XC8EC);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC8F2);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC8FA);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_insn	(x=0XC904);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XC936);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(0XC94C);
	create_insn	(x=0XC950);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XC958);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XC962);
	op_plain_offset	(x,	1,	0X10000050);
	op_plain_offset	(x,	129,	0X10000050);
	create_dword	(x=0XC96C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC970);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC974);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC978);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC97C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC980);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC984);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC988);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC98C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC990);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC994);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC998);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC99C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC9A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC9A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC9A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XC9AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XC9B0);
	create_insn	(x=0XC9B6);
	op_stkvar	(x,	1);
	make_array	(0XC9CA,	0X2);
	create_insn	(0XC9CC);
	create_insn	(x=0XC9D8);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	set_cmt	(0XC9F0,	"switch 6 cases ",	0);
	set_cmt	(0XC9F4,	"switch jump",	0);
	set_cmt	(0XC9F8,	"jump table for switch statement",	0);
	create_byte	(0XC9F8);
	set_name	(0XC9F8,	"jpt_29F4");
	create_byte	(0XC9F9);
	create_byte	(0XC9FA);
	create_byte	(0XC9FB);
	create_byte	(0XC9FC);
	create_byte	(0XC9FD);
	set_cmt	(0XC9FE,	"jumptable 0000C9F4 case 0",	1);
	create_insn	(0XC9FE);
	set_cmt	(0XCA0C,	"jumptable 0000C9F4 default case",	1);
	set_name	(0XCA0C,	"def_29F4");
	set_cmt	(0XCA12,	"jumptable 0000C9F4 case 1",	1);
	create_insn	(x=0XCA12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCA14);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0XCA24);
	create_insn	(x=0XCA26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCA28);
	op_plain_offset	(x,	1,	0X100044FE);
	op_plain_offset	(x,	129,	0X100044FE);
	create_insn	(x=0XCA2E);
	op_plain_offset	(x,	1,	0X100044FE);
	op_plain_offset	(x,	129,	0X100044FE);
	create_insn	(x=0XCA34);
	op_plain_offset	(x,	1,	0X100044FE);
	op_plain_offset	(x,	129,	0X100044FE);
	create_insn	(0XCA3E);
	create_insn	(x=0XCA48);
	op_plain_offset	(x,	1,	0X100035C8);
	op_plain_offset	(x,	129,	0X100035C8);
	create_insn	(x=0XCA58);
	op_plain_offset	(x,	1,	0X100035C8);
	op_plain_offset	(x,	129,	0X100035C8);
	create_insn	(x=0XCA6A);
	op_plain_offset	(x,	1,	0X100035C8);
	op_plain_offset	(x,	129,	0X100035C8);
	create_insn	(x=0XCA70);
	op_plain_offset	(x,	1,	0X100035C8);
	op_plain_offset	(x,	129,	0X100035C8);
	create_insn	(x=0XCA7A);
	op_plain_offset	(x,	1,	0X100035C8);
	op_plain_offset	(x,	129,	0X100035C8);
	create_insn	(0XCA8C);
	create_insn	(x=0XCA96);
	op_plain_offset	(x,	1,	0X100035C8);
	op_plain_offset	(x,	129,	0X100035C8);
	create_insn	(x=0XCAA6);
	op_plain_offset	(x,	1,	0X100035C8);
	op_plain_offset	(x,	129,	0X100035C8);
	create_insn	(x=0XCAB8);
	op_plain_offset	(x,	1,	0X100035C8);
	op_plain_offset	(x,	129,	0X100035C8);
	create_insn	(x=0XCABE);
	op_plain_offset	(x,	1,	0X100035C8);
	op_plain_offset	(x,	129,	0X100035C8);
	create_insn	(x=0XCAC8);
	op_plain_offset	(x,	1,	0X100035C8);
	op_plain_offset	(x,	129,	0X100035C8);
	create_insn	(x=0XCADA);
	op_stkvar	(x,	1);
	create_insn	(x=0XCADE);
	op_stkvar	(x,	1);
	create_insn	(x=0XCAE8);
	op_stkvar	(x,	1);
	create_insn	(x=0XCAF2);
	op_stkvar	(x,	1);
	set_cmt	(0XCB1A,	"jumptable 0000C9F4 case 2",	1);
	create_insn	(0XCB1A);
	set_cmt	(0XCB2A,	"jumptable 0000C9F4 case 3",	1);
	create_insn	(0XCB2A);
	set_cmt	(0XCB3A,	"jumptable 0000C9F4 case 4",	1);
	create_insn	(0XCB3A);
	set_cmt	(0XCB4A,	"jumptable 0000C9F4 case 5",	1);
	create_insn	(0XCB4A);
	create_insn	(x=0XCB56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XCB5E);
	set_name	(0XCB5E,	"cmd_exec_set08_cmd02");
	create_insn	(x=0XCB76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XCB7C);
	set_name	(0XCB7C,	"cmd_exec_set08_cmd0E");
	create_insn	(x=0XCB7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCB82);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XCB8C);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XCB90);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XCBA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCBAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCBAC);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XCBAE);
	op_hex		(x,	1);
	create_insn	(x=0XCBB2);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(0XCBB6);
	set_name	(0XCBB6,	"cmd_exec_set09_cmd15");
	create_insn	(x=0XCBBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCBC2);
	op_plain_offset	(x,	1,	0X10000150);
	op_plain_offset	(x,	129,	0X10000150);
	create_insn	(x=0XCBC8);
	op_plain_offset	(x,	1,	0X10000150);
	op_plain_offset	(x,	129,	0X10000150);
	create_insn	(x=0XCBCE);
	op_plain_offset	(x,	1,	0X10000150);
	op_plain_offset	(x,	129,	0X10000150);
	create_insn	(0XCBD2);
	set_name	(0XCBD2,	"packet_send");
	create_insn	(x=0XCBD4);
	op_hex		(x,	1);
	set_cmt	(0XCBD8,	"switch 31 cases ",	0);
	set_cmt	(0XCBDC,	"switch jump",	0);
	set_cmt	(0XCBE0,	"jump table for switch statement",	0);
	create_byte	(0XCBE0);
	set_name	(0XCBE0,	"jpt_2BDC");
	create_byte	(0XCBE1);
	create_byte	(0XCBE2);
	create_byte	(0XCBE3);
	create_byte	(0XCBE4);
	create_byte	(0XCBE5);
	create_byte	(0XCBE6);
	create_byte	(0XCBE7);
	create_byte	(0XCBE8);
	create_byte	(0XCBE9);
	create_byte	(0XCBEA);
	create_byte	(0XCBEB);
	create_byte	(0XCBEC);
	create_byte	(0XCBED);
	create_byte	(0XCBEE);
	create_byte	(0XCBEF);
	create_byte	(0XCBF0);
	create_byte	(0XCBF1);
	create_byte	(0XCBF2);
	create_byte	(0XCBF3);
	create_byte	(0XCBF4);
	create_byte	(0XCBF5);
	create_byte	(0XCBF6);
	create_byte	(0XCBF7);
	create_byte	(0XCBF8);
	create_byte	(0XCBF9);
	create_byte	(0XCBFA);
	create_byte	(0XCBFB);
	create_byte	(0XCBFC);
	create_byte	(0XCBFD);
	create_byte	(0XCBFE);
	set_cmt	(0XCC00,	"jumptable 0000CBDC cases 1,3-5,7-9,11,12,15,17-19,21,23",	1);
	create_insn	(0XCC00);
	set_cmt	(0XCC06,	"jumptable 0000CBDC case 10",	1);
	create_insn	(0XCC06);
	set_cmt	(0XCC0C,	"jumptable 0000CBDC cases 2,13,16,22",	1);
	create_insn	(0XCC0C);
	set_cmt	(0XCC12,	"jumptable 0000CBDC case 30",	1);
	create_insn	(0XCC12);
	set_cmt	(0XCC18,	"jumptable 0000CBDC case 24",	1);
	create_insn	(0XCC18);
	set_cmt	(0XCC1E,	"jumptable 0000CBDC cases 25,28",	1);
	create_insn	(0XCC1E);
	set_cmt	(0XCC24,	"jumptable 0000CBDC default case",	1);
	create_insn	(0XCC24);
	set_name	(0XCC24,	"def_2BDC");
	create_insn	(0XCC26);
	set_name	(0XCC26,	"packet_prepare_response");
	create_insn	(x=0XCC34);
	op_hex		(x,	1);
	create_insn	(x=0XCC60);
	op_hex		(x,	1);
	create_insn	(0XCCB6);
	set_name	(0XCCB6,	"cmd_exec_set09_cmd14");
	create_insn	(x=0XCCBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCCBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCCC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCCC2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0XCCDA);
	create_insn	(x=0XCCDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCCE0);
	op_hex		(x,	1);
	create_insn	(x=0XCCE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XCCF8);
	create_insn	(0XCD16);
	create_insn	(x=0XCD18);
	op_hex		(x,	1);
	create_insn	(0XCD28);
	create_insn	(x=0XCD34);
	op_plain_offset	(x,	1,	0X10000150);
	op_plain_offset	(x,	129,	0X10000150);
	create_insn	(x=0XCD40);
	op_plain_offset	(x,	1,	0X10000150);
	op_plain_offset	(x,	129,	0X10000150);
	create_insn	(x=0XCD46);
	op_plain_offset	(x,	1,	0X10000150);
	op_plain_offset	(x,	129,	0X10000150);
	create_insn	(x=0XCD4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCD58);
	op_hex		(x,	1);
	create_insn	(x=0XCD62);
	op_plain_offset	(x,	1,	0X10000150);
	op_plain_offset	(x,	129,	0X10000150);
	create_insn	(x=0XCD68);
	op_plain_offset	(x,	1,	0X10000150);
	op_plain_offset	(x,	129,	0X10000150);
	create_insn	(x=0XCD7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XCD80);
	op_hex		(x,	1);
	create_insn	(x=0XCD8A);
	op_stkvar	(x,	1);
	create_insn	(0XCDA0);
	create_insn	(0XCDA8);
	set_name	(0XCDA8,	"cmd_exec_set09_cmd13");
	create_insn	(x=0XCDB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XCDBA);
	op_hex		(x,	1);
	create_dword	(x=0XCDC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XCDC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XCDC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XCDCC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XCDD0);
	create_dword	(0XCDD4);
	create_dword	(x=0XCDD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XCDDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XCDE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XCDE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XCDE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XCDEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XCDF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XCDF4);
	op_hex		(x,	1);
	create_insn	(x=0XCDF8);
	op_stkvar	(x,	1);
	create_insn	(x=0XCE1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XCE20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCE30);
	op_stkvar	(x,	1);
	create_insn	(x=0XCE40);
	op_stkvar	(x,	1);
	create_insn	(x=0XCE44);
	op_hex		(x,	1);
	create_insn	(x=0XCE4A);
	op_stkvar	(x,	1);
	create_insn	(x=0XCE56);
	op_stkvar	(x,	1);
	create_insn	(0XCE60);
	set_name	(0XCE60,	"cmd_exec_set09_cmd12");
	create_insn	(0XCE7C);
	create_insn	(x=0XCE84);
	op_hex		(x,	1);
	create_insn	(x=0XCE8E);
	op_hex		(x,	1);
	create_insn	(x=0XCEAE);
	op_stkvar	(x,	1);
	create_insn	(x=0XCEB2);
	op_hex		(x,	1);
	create_insn	(x=0XCEBC);
	op_stkvar	(x,	1);
	create_insn	(0XCECE);
	set_name	(0XCECE,	"cmd_exec_set09_cmd10");
	create_insn	(x=0XCED0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCED6);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XCEE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XCEE8);
	op_hex		(x,	1);
	create_insn	(x=0XCEF2);
	op_stkvar	(x,	1);
	create_insn	(0XCF02);
	set_name	(0XCF02,	"cmd_exec_set09_cmd0D");
	create_insn	(x=0XCF0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XCF12);
	create_insn	(0XCF24);
	create_insn	(x=0XCF2E);
	op_stkvar	(x,	1);
	create_insn	(x=0XCF56);
	op_hex		(x,	1);
	create_insn	(x=0XCF5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XCF68);
	op_stkvar	(x,	1);
	create_insn	(0XCF70);
	create_insn	(x=0XCF72);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0XCF78);
	create_insn	(x=0XCF7A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XCF7E);
	op_stkvar	(x,	1);
	create_insn	(0XCF84);
	create_insn	(x=0XCF86);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0XCF8C);
	create_insn	(x=0XCF8E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0XCF94);
	create_insn	(x=0XCF98);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0XCF9E);
	set_name	(0XCF9E,	"cmd_exec_set09_cmd0C");
	create_insn	(x=0XCFAC);
	op_hex		(x,	1);
	create_insn	(x=0XCFB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XCFB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCFBA);
	op_stkvar	(x,	1);
	create_insn	(x=0XCFBC);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XCFC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XCFC4);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0XCFC6);
	op_stkvar	(x,	1);
	create_insn	(x=0XCFCA);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0XCFCC);
	op_stkvar	(x,	1);
	create_insn	(x=0XCFD0);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0XCFD2);
	op_stkvar	(x,	1);
	create_insn	(x=0XCFD6);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0XCFDC);
	op_stkvar	(x,	1);
	create_insn	(x=0XCFE6);
	op_stkvar	(x,	1);
	create_insn	(0XCFF0);
	set_name	(0XCFF0,	"cmd_exec_set09_cmd09");
	create_insn	(x=0XCFF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XCFF8);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XD004);
	op_hex		(x,	1);
	create_insn	(x=0XD00C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD014);
	op_stkvar	(x,	1);
	create_insn	(0XD022);
	set_name	(0XD022,	"cmd_exec_set09_cmd07");
	create_insn	(x=0XD032);
	op_stkvar	(x,	1);
	create_insn	(x=0XD040);
	op_hex		(x,	1);
	create_insn	(x=0XD048);
	op_stkvar	(x,	1);
	create_insn	(x=0XD050);
	op_stkvar	(x,	1);
	create_insn	(0XD062);
	set_name	(0XD062,	"cmd_exec_set09_cmd06");
	create_insn	(x=0XD07E);
	op_hex		(x,	1);
	create_insn	(x=0XD086);
	op_stkvar	(x,	1);
	create_insn	(x=0XD08E);
	op_stkvar	(x,	1);
	create_insn	(0XD09E);
	set_name	(0XD09E,	"cmd_exec_set09_cmd05");
	create_insn	(x=0XD0AA);
	op_stkvar	(x,	1);
	create_insn	(x=0XD0B8);
	op_hex		(x,	1);
	create_insn	(x=0XD0C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD0C8);
	op_stkvar	(x,	1);
	create_insn	(0XD0D8);
	set_name	(0XD0D8,	"cmd_exec_set09_cmd04");
	create_insn	(x=0XD0F2);
	op_hex		(x,	1);
	create_insn	(x=0XD0FA);
	op_stkvar	(x,	1);
	create_insn	(x=0XD102);
	op_stkvar	(x,	1);
	create_insn	(0XD112);
	set_name	(0XD112,	"cmd_exec_set09_cmd00");
	create_insn	(0XD12A);
	create_insn	(x=0XD12E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0XD12E,	"cmd_exec_set06_cmd41");
	create_insn	(x=0XD134);
	op_plain_offset	(x,	1,	0X10003C08);
	op_plain_offset	(x,	129,	0X10003C08);
	create_insn	(x=0XD13A);
	op_plain_offset	(x,	1,	0X10003C0A);
	op_plain_offset	(x,	129,	0X10003C0A);
	create_insn	(x=0XD13E);
	op_plain_offset	(x,	1,	0X10003C0A);
	op_plain_offset	(x,	129,	0X10003C0A);
	create_insn	(x=0XD140);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD144);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XD148);
	set_name	(0XD148,	"cmd_exec_set06_cmdFD");
	create_insn	(x=0XD156);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD15A);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XD168);
	op_stkvar	(x,	1);
	create_insn	(x=0XD16C);
	op_hex		(x,	1);
	create_insn	(x=0XD176);
	op_stkvar	(x,	1);
	create_insn	(0XD184);
	set_name	(0XD184,	"cmd_exec_set06_cmdF0");
	create_insn	(x=0XD188);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD194);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XD19E);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0XD1BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD1C0);
	op_hex		(x,	1);
	create_insn	(x=0XD1EA);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0XD1EC);
	op_hex		(x,	1);
	create_insn	(x=0XD1F0);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0XD1F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD212);
	op_stkvar	(x,	1);
	create_dword	(x=0XD21C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XD220);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XD224);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XD228);
	create_dword	(x=0XD22C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XD230);
	create_insn	(x=0XD234);
	op_hex		(x,	1);
	create_insn	(0XD262);
	create_insn	(x=0XD264);
	op_stkvar	(x,	1);
	create_insn	(x=0XD270);
	op_hex		(x,	1);
	create_insn	(x=0XD29C);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0XD2A6);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0XD2B2);
	op_hex		(x,	1);
	create_insn	(x=0XD2C2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XD2CA);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0XD2E4);
	create_insn	(0XD2E8);
	create_insn	(x=0XD2EC);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0XD2EE);
	op_hex		(x,	1);
	create_insn	(0XD2F4);
	create_insn	(x=0XD2F6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XD306);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0XD30C);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0XD310);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(0XD31E);
	create_insn	(x=0XD336);
	op_hex		(x,	1);
	create_insn	(0XD35C);
	create_insn	(0XD35E);
	create_insn	(x=0XD36A);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(0XD370);
	create_insn	(x=0XD376);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0XD380);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0XD38C);
	op_hex		(x,	1);
	create_insn	(x=0XD39C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XD3A4);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0XD3BC);
	create_insn	(0XD3C0);
	create_insn	(0XD3C4);
	create_insn	(x=0XD3C8);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0XD3CC);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XD3D4);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0XD3D8);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0XD3DE);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(0XD3F0);
	create_insn	(0XD408);
	create_insn	(x=0XD40A);
	op_stkvar	(x,	1);
	create_insn	(x=0XD41A);
	op_stkvar	(x,	1);
	create_insn	(x=0XD42E);
	op_stkvar	(x,	1);
	create_insn	(x=0XD432);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0XD434);
	op_stkvar	(x,	1);
	create_insn	(x=0XD438);
	op_stkvar	(x,	1);
	create_insn	(x=0XD442);
	op_stkvar	(x,	1);
	create_insn	(x=0XD446);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0XD448);
	op_stkvar	(x,	1);
	create_insn	(x=0XD44C);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0XD44E);
	op_stkvar	(x,	1);
	create_insn	(x=0XD452);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0XD454);
	op_stkvar	(x,	1);
	create_insn	(x=0XD458);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0XD45A);
	op_stkvar	(x,	1);
	create_insn	(x=0XD462);
	op_hex		(x,	1);
	create_insn	(x=0XD46E);
	op_stkvar	(x,	1);
	create_insn	(0XD47A);
	set_name	(0XD47A,	"cmd_exec_set06_cmd3B");
	create_insn	(x=0XD47C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD484);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XD48A);
	op_plain_offset	(x,	1,	0X1000063E);
	op_plain_offset	(x,	129,	0X1000063E);
	create_insn	(x=0XD48E);
	op_plain_offset	(x,	1,	0X1000063E);
	op_plain_offset	(x,	129,	0X1000063E);
	create_insn	(x=0XD49A);
	op_hex		(x,	1);
	create_insn	(x=0XD4A2);
	op_stkvar	(x,	1);
	create_insn	(x=0XD4AA);
	op_stkvar	(x,	1);
	create_insn	(0XD4B8);
	set_name	(0XD4B8,	"cmd_exec_set06_cmd38");
	create_insn	(x=0XD4C6);
	op_hex		(x,	1);
	create_insn	(x=0XD4CE);
	op_stkvar	(x,	1);
	create_insn	(x=0XD4D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD4D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD4D6);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XD4D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD4DC);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XD4DE);
	op_stkvar	(x,	1);
	create_insn	(x=0XD4E2);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XD4E6);
	op_stkvar	(x,	1);
	create_insn	(x=0XD4EA);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XD4EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD4F0);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XD4F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD4F8);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XD4FA);
	op_stkvar	(x,	1);
	create_insn	(x=0XD500);
	op_stkvar	(x,	1);
	create_insn	(x=0XD504);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XD506);
	op_stkvar	(x,	1);
	create_insn	(x=0XD50A);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XD50C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD510);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0XD512);
	op_stkvar	(x,	1);
	create_insn	(x=0XD51E);
	op_stkvar	(x,	1);
	create_insn	(0XD528);
	set_name	(0XD528,	"cmd_exec_set06_cmd36");
	create_insn	(x=0XD538);
	op_stkvar	(x,	1);
	create_insn	(x=0XD53C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD544);
	op_stkvar	(x,	1);
	create_insn	(x=0XD54A);
	op_hex		(x,	1);
	create_insn	(x=0XD550);
	op_stkvar	(x,	1);
	create_insn	(0XD55E);
	set_name	(0XD55E,	"cmd_exec_set06_cmd35");
	create_insn	(x=0XD56A);
	op_stkvar	(x,	1);
	create_insn	(x=0XD56E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XD574);
	create_insn	(x=0XD576);
	op_stkvar	(x,	1);
	create_insn	(x=0XD584);
	op_hex		(x,	1);
	create_insn	(x=0XD58E);
	op_stkvar	(x,	1);
	create_insn	(0XD59C);
	set_name	(0XD59C,	"cmd_exec_set06_cmd34");
	create_insn	(x=0XD5AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD5B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD5B6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XD5BA);
	op_stkvar	(x,	1);
	create_insn	(x=0XD5C0);
	op_hex		(x,	1);
	create_insn	(x=0XD5C6);
	op_stkvar	(x,	1);
	create_insn	(0XD5D4);
	set_name	(0XD5D4,	"cmd_exec_set06_cmd33");
	create_insn	(x=0XD5E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XD5E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD5E6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0XD5EC);
	create_insn	(x=0XD5EE);
	op_stkvar	(x,	1);
	create_insn	(x=0XD5FC);
	op_hex		(x,	1);
	create_insn	(x=0XD606);
	op_stkvar	(x,	1);
	create_insn	(0XD614);
	set_name	(0XD614,	"cmd_exec_set06_cmd32");
	create_insn	(x=0XD622);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD624);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XD62A);
	op_stkvar	(x,	1);
	create_insn	(x=0XD630);
	op_stkvar	(x,	1);
	create_insn	(x=0XD632);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XD636);
	op_stkvar	(x,	1);
	create_insn	(x=0XD63A);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XD63C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD640);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XD642);
	op_stkvar	(x,	1);
	create_insn	(x=0XD648);
	op_stkvar	(x,	1);
	create_insn	(x=0XD64C);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XD64E);
	op_stkvar	(x,	1);
	create_insn	(x=0XD652);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XD654);
	op_stkvar	(x,	1);
	create_insn	(x=0XD65C);
	op_hex		(x,	1);
	create_insn	(x=0XD668);
	op_stkvar	(x,	1);
	create_insn	(0XD672);
	set_name	(0XD672,	"cmd_exec_set06_cmd31");
	create_insn	(x=0XD67C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD67E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD684);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD68A);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XD690);
	create_insn	(x=0XD6CE);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XD6D2);
	create_insn	(x=0XD712);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XD71E);
	op_stkvar	(x,	1);
	create_insn	(x=0XD722);
	op_hex		(x,	1);
	create_insn	(x=0XD72C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD73A);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XD744);
	set_name	(0XD744,	"cmd_exec_set06_cmd30");
	create_insn	(x=0XD756);
	op_stkvar	(x,	1);
	create_insn	(x=0XD75C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD75E);
	op_stkvar	(x,	1);
	create_insn	(x=0XD76A);
	op_hex		(x,	1);
	create_insn	(x=0XD772);
	op_stkvar	(x,	1);
	create_insn	(0XD784);
	set_name	(0XD784,	"cmd_exec_set06_cmd2F");
	create_insn	(x=0XD786);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD78C);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XD79C);
	create_insn	(x=0XD79E);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XD7A2);
	create_insn	(x=0XD7AA);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XD7AC);
	op_stkvar	(x,	1);
	create_insn	(0XD7B2);
	create_insn	(x=0XD7B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XD7C2);
	op_stkvar	(x,	1);
	create_insn	(x=0XD7C6);
	op_hex		(x,	1);
	create_insn	(x=0XD7CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD7D4);
	op_stkvar	(x,	1);
	create_insn	(0XD7DC);
	set_name	(0XD7DC,	"cmd_exec_set06_cmd2E");
	create_insn	(x=0XD7EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XD7F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD7F4);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XD7F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XD7FC);
	op_plain_offset	(x,	1,	0X10000639);
	op_plain_offset	(x,	129,	0X10000639);
	create_insn	(x=0XD7FE);
	op_stkvar	(x,	1);
	create_insn	(x=0XD806);
	op_hex		(x,	1);
	create_insn	(x=0XD80C);
	op_stkvar	(x,	1);
	create_insn	(0XD81A);
	set_name	(0XD81A,	"cmd_exec_set06_cmd2D");
	create_insn	(x=0XD81C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD822);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XD828);
	op_plain_offset	(x,	1,	0X10000639);
	op_plain_offset	(x,	129,	0X10000639);
	create_insn	(x=0XD836);
	op_stkvar	(x,	1);
	create_insn	(x=0XD83A);
	op_hex		(x,	1);
	create_insn	(x=0XD844);
	op_stkvar	(x,	1);
	create_insn	(0XD852);
	set_name	(0XD852,	"cmd_exec_set06_cmd2C");
	create_insn	(x=0XD862);
	op_stkvar	(x,	1);
	create_insn	(x=0XD866);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD868);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XD86C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD870);
	op_plain_offset	(x,	1,	0X10000636);
	op_plain_offset	(x,	129,	0X10000636);
	create_insn	(x=0XD872);
	op_stkvar	(x,	1);
	create_dword	(x=0XD878);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XD87C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XD880);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XD884);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XD888);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XD88C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XD890);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XD894);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XD898);
	op_plain_offset	(x,	1,	0X10000636);
	op_plain_offset	(x,	129,	0X10000636);
	create_insn	(x=0XD89A);
	op_stkvar	(x,	1);
	create_insn	(x=0XD8A2);
	op_hex		(x,	1);
	create_insn	(x=0XD8AA);
	op_stkvar	(x,	1);
	create_insn	(0XD8BA);
	set_name	(0XD8BA,	"cmd_exec_set06_cmd2B");
	create_insn	(x=0XD8D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD8D6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XD8DC);
	op_plain_offset	(x,	1,	0X10000636);
	op_plain_offset	(x,	129,	0X10000636);
	create_insn	(x=0XD8E0);
	op_plain_offset	(x,	1,	0X10000636);
	op_plain_offset	(x,	129,	0X10000636);
	create_insn	(x=0XD8EE);
	op_stkvar	(x,	1);
	create_insn	(x=0XD8F2);
	op_hex		(x,	1);
	create_insn	(x=0XD8FC);
	op_stkvar	(x,	1);
	create_insn	(0XD90C);
	set_name	(0XD90C,	"cmd_exec_set06_cmd2A");
	create_insn	(x=0XD91C);
	op_stkvar	(x,	1);
	create_insn	(x=0XD920);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD924);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XD928);
	op_stkvar	(x,	1);
	create_insn	(x=0XD92C);
	op_plain_offset	(x,	1,	0X10000631);
	op_plain_offset	(x,	129,	0X10000631);
	create_insn	(x=0XD92E);
	op_stkvar	(x,	1);
	create_insn	(x=0XD936);
	op_hex		(x,	1);
	create_insn	(x=0XD93C);
	op_stkvar	(x,	1);
	create_insn	(0XD94A);
	set_name	(0XD94A,	"cmd_exec_set06_cmd29");
	create_insn	(x=0XD94C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD954);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XD95A);
	op_plain_offset	(x,	1,	0X10000631);
	op_plain_offset	(x,	129,	0X10000631);
	create_insn	(x=0XD968);
	op_stkvar	(x,	1);
	create_insn	(x=0XD96C);
	op_hex		(x,	1);
	create_insn	(x=0XD976);
	op_stkvar	(x,	1);
	create_insn	(0XD984);
	set_name	(0XD984,	"cmd_exec_set06_cmd28");
	create_insn	(x=0XD992);
	op_hex		(x,	1);
	create_insn	(x=0XD99A);
	op_stkvar	(x,	1);
	create_insn	(x=0XD99E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD9A0);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XD9A2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0XD9AC);
	create_insn	(x=0XD9AE);
	op_stkvar	(x,	1);
	create_insn	(x=0XD9B6);
	op_stkvar	(x,	1);
	create_insn	(x=0XD9C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XD9C6);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XD9CE);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XD9D8);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XD9DE);
	create_insn	(x=0XD9E0);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XD9EA);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XD9EE);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XD9F2);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XD9FA);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XDA06);
	create_insn	(x=0XDA0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDA0C);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDA14);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDA16);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDA1E);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XDA2E);
	create_insn	(x=0XDA32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDA34);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDA3C);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDA3E);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDA46);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XDA54);
	create_insn	(x=0XDA58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDA5A);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDA62);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDA64);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDA6C);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XDA7A);
	create_insn	(x=0XDA7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDA80);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDA88);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDA8A);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDA92);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XDAA0);
	create_insn	(x=0XDAA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDAA6);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDAAE);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDAB0);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDAB8);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XDAC6);
	create_insn	(x=0XDACA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDAD0);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDAD6);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XDAE0);
	create_insn	(0XDAE4);
	create_insn	(x=0XDAE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDAEA);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDAEE);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XDAFC);
	create_insn	(x=0XDB00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDB02);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDB08);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDB0E);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDB16);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDB18);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDB1A);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XDB24);
	create_insn	(0XDB28);
	create_insn	(x=0XDB2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDB2E);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XDB30);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XDB3C);
	op_hex		(x,	1);
	create_insn	(x=0XDB5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDB64);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDB8E);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDB92);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDB9E);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDBA0);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XDBA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDBAA);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDBAE);
	op_hex		(x,	1);
	create_insn	(x=0XDBB4);
	op_hex		(x,	1);
	create_insn	(x=0XDBB8);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDBBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDBC6);
	op_hex		(x,	1);
	create_insn	(x=0XDBCC);
	op_hex		(x,	1);
	create_insn	(x=0XDBD4);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDBDC);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDBDE);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDBE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDC04);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDC0A);
	op_hex		(x,	1);
	create_insn	(x=0XDC10);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XDC1C);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDC20);
	op_hex		(x,	1);
	create_insn	(x=0XDC26);
	op_hex		(x,	1);
	create_insn	(x=0XDC2A);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDC2C);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XDC38);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDC3C);
	op_hex		(x,	1);
	create_insn	(x=0XDC42);
	op_hex		(x,	1);
	create_insn	(x=0XDC46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDC48);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDC4A);
	op_plain_offset	(x,	1,	0X10003CDC);
	op_plain_offset	(x,	129,	0X10003CDC);
	create_insn	(x=0XDC52);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDC56);
	op_hex		(x,	1);
	create_insn	(x=0XDC5C);
	op_hex		(x,	1);
	create_insn	(x=0XDC60);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDC62);
	op_plain_offset	(x,	1,	0X10003CDC);
	op_plain_offset	(x,	129,	0X10003CDC);
	create_insn	(x=0XDC6A);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDC6E);
	op_hex		(x,	1);
	create_insn	(x=0XDC74);
	op_hex		(x,	1);
	create_insn	(x=0XDC78);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDC7A);
	op_plain_offset	(x,	1,	0X10003CDC);
	op_plain_offset	(x,	129,	0X10003CDC);
	create_insn	(x=0XDC82);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDC86);
	op_hex		(x,	1);
	create_insn	(x=0XDC8C);
	op_hex		(x,	1);
	create_insn	(x=0XDC90);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDC9A);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDC9E);
	op_hex		(x,	1);
	create_insn	(x=0XDCA4);
	op_hex		(x,	1);
	create_insn	(x=0XDCA8);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDCAA);
	op_plain_offset	(x,	1,	0X10003CDC);
	op_plain_offset	(x,	129,	0X10003CDC);
	create_insn	(x=0XDCB2);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDCB6);
	op_hex		(x,	1);
	create_dword	(x=0XDCBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XDCC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XDCC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XDCC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XDCCC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XDCD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XDCD4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XDCD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XDCDC);
	op_hex		(x,	1);
	create_insn	(x=0XDCE0);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDCE2);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XDCEC);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDCF0);
	op_hex		(x,	1);
	create_insn	(x=0XDCF6);
	op_hex		(x,	1);
	create_insn	(x=0XDCFA);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDCFE);
	op_hex		(x,	1);
	create_insn	(x=0XDD08);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDD0A);
	op_hex		(x,	1);
	create_insn	(x=0XDD0E);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDD1A);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0XDD1C);
	op_hex		(x,	1);
	create_insn	(x=0XDD20);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(0XDD24);
	set_name	(0XDD24,	"cmd_exec_set06_cmd27");
	create_insn	(x=0XDD2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDD34);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDD3C);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XDD48);
	op_hex		(x,	1);
	create_insn	(x=0XDD50);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD54);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD58);
	op_hex		(x,	1);
	create_insn	(x=0XDD5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDD68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDD6A);
	op_plain_offset	(x,	1,	0X10003CDC);
	op_plain_offset	(x,	129,	0X10003CDC);
	create_insn	(x=0XDD6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD70);
	op_plain_offset	(x,	1,	0X10003CDC);
	op_plain_offset	(x,	129,	0X10003CDC);
	create_insn	(x=0XDD72);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD76);
	op_plain_offset	(x,	1,	0X10003CDC);
	op_plain_offset	(x,	129,	0X10003CDC);
	create_insn	(x=0XDD78);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD7E);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD82);
	op_plain_offset	(x,	1,	0X10003CDC);
	op_plain_offset	(x,	129,	0X10003CDC);
	create_insn	(x=0XDD84);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDD8A);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XDD90);
	op_stkvar	(x,	1);
	create_insn	(x=0XDD94);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XDD96);
	op_stkvar	(x,	1);
	create_insn	(x=0XDDA6);
	op_stkvar	(x,	1);
	create_insn	(x=0XDDAA);
	op_stkvar	(x,	1);
	create_insn	(x=0XDDB4);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XDDD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDDDA);
	op_stkvar	(x,	1);
	create_insn	(x=0XDDE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XDDE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDDE8);
	op_stkvar	(x,	1);
	create_insn	(x=0XDDF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XDDF4);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XDDF6);
	op_stkvar	(x,	1);
	create_insn	(x=0XDDFA);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XDDFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE00);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XDE04);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE08);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XDE0A);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDE10);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0XDE12);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE18);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE1C);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0XDE1E);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE22);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0XDE24);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE28);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0XDE2A);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE2E);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0XDE30);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE34);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0XDE36);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE3A);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0XDE3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE40);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(0XDE44);
	create_insn	(x=0XDE46);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE4A);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE56);
	op_stkvar	(x,	1);
	create_insn	(0XDE60);
	set_name	(0XDE60,	"cmd_exec_set06_cmd25");
	create_insn	(x=0XDE6E);
	op_hex		(x,	1);
	create_insn	(x=0XDE74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDE7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XDE80);
	op_stkvar	(x,	1);
	create_insn	(0XDE8E);
	set_name	(0XDE8E,	"cmd_exec_set06_cmd24");
	create_insn	(x=0XDEA0);
	op_stkvar	(x,	1);
	create_insn	(0XDEA6);
	create_insn	(x=0XDEAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XDEB6);
	create_insn	(0XDEBA);
	create_insn	(x=0XDEBC);
	op_stkvar	(x,	1);
	create_insn	(x=0XDECA);
	op_hex		(x,	1);
	create_insn	(x=0XDED4);
	op_stkvar	(x,	1);
	create_insn	(0XDEE6);
	set_name	(0XDEE6,	"cmd_exec_set06_cmd23");
	create_insn	(x=0XDEF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XDEF6);
	op_stkvar	(x,	1);
	create_insn	(x=0XDEFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF02);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF08);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF0E);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDF28);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0XDF2E);
	create_insn	(x=0XDF34);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF38);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF3C);
	op_hex		(x,	1);
	create_insn	(x=0XDF40);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF46);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF48);
	op_stkvar	(x,	1);
	create_insn	(0XDF58);
	set_name	(0XDF58,	"cmd_exec_set06_cmd22");
	create_insn	(x=0XDF60);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDF68);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF6C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XDF70);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF74);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XDF78);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF7C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XDF7E);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF84);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF88);
	op_stkvar	(x,	1);
	create_insn	(x=0XDF8A);
	op_stkvar	(x,	1);
	create_insn	(x=0XDFA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDFA8);
	op_plain_offset	(x,	1,	0X10003588);
	op_plain_offset	(x,	129,	0X10003588);
	create_insn	(x=0XDFAE);
	op_plain_offset	(x,	1,	0X10003599);
	op_plain_offset	(x,	129,	0X10003599);
	create_insn	(x=0XDFB2);
	op_plain_offset	(x,	1,	0X10003599);
	op_plain_offset	(x,	129,	0X10003599);
	create_insn	(x=0XDFB6);
	op_plain_offset	(x,	1,	0X10003599);
	op_plain_offset	(x,	129,	0X10003599);
	create_insn	(x=0XDFB8);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XDFBA);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XDFC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XDFC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XDFCE);
	op_stkvar	(x,	1);
	create_insn	(x=0XDFD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDFE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XDFE4);
	op_plain_offset	(x,	1,	0X10003598);
	op_plain_offset	(x,	129,	0X10003598);
	create_insn	(0XDFE8);
	set_name	(0XDFE8,	"cmd_exec_set06_cmd21");
	create_insn	(x=0XDFF6);
	op_hex		(x,	1);
	create_insn	(x=0XDFFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE002);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE004);
	op_stkvar	(x,	1);
	create_insn	(x=0XE008);
	op_stkvar	(x,	1);
	create_insn	(0XE016);
	set_name	(0XE016,	"cmd_exec_set06_cmd20");
	create_insn	(x=0XE018);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE01E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE02A);
	op_hex		(x,	1);
	create_insn	(x=0XE032);
	op_stkvar	(x,	1);
	create_insn	(x=0XE03A);
	op_stkvar	(x,	1);
	create_insn	(0XE048);
	set_name	(0XE048,	"cmd_exec_set06_cmd1A");
	create_insn	(x=0XE056);
	op_hex		(x,	1);
	create_insn	(x=0XE05E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE062);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE066);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE06A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE06E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE070);
	op_stkvar	(x,	1);
	create_insn	(x=0XE076);
	op_stkvar	(x,	1);
	create_insn	(0XE084);
	set_name	(0XE084,	"cmd_exec_set06_cmd19");
	create_insn	(x=0XE08E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XE0A4);
	create_insn	(x=0XE0A6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE0AC);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE0B0);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE0BC);
	op_hex		(x,	1);
	create_insn	(x=0XE0C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE0CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE0DC);
	op_hex		(x,	1);
	create_insn	(x=0XE0E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XE0EC);
	set_name	(0XE0EC,	"cmd_exec_set06_cmd18");
	create_insn	(x=0XE0FA);
	op_hex		(x,	1);
	create_insn	(x=0XE104);
	op_stkvar	(x,	1);
	make_array	(0XE112,	0X2);
	create_dword	(x=0XE114);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE118);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE11C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE120);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE124);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE128);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE12C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE130);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE134);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE138);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XE13C);
	create_dword	(x=0XE140);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE144);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE148);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE14C);
	set_name	(0XE14C,	"cmd_exec_set06_cmd17");
	create_insn	(x=0XE14E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE182);
	op_hex		(x,	1);
	create_insn	(x=0XE18A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE192);
	op_stkvar	(x,	1);
	create_insn	(0XE1A4);
	create_insn	(0XE1B6);
	set_name	(0XE1B6,	"cmd_exec_set06_cmd16");
	create_insn	(x=0XE1B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE1D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_1(void) {
        auto x;
#define id x

	create_insn	(x=0XE1D2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE1D4);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE1D6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE1E2);
	op_hex		(x,	1);
	create_insn	(x=0XE1E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE1F0);
	op_stkvar	(x,	1);
	create_insn	(0XE200);
	set_name	(0XE200,	"cmd_exec_set06_cmd15");
	create_insn	(x=0XE206);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE23E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE246);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE25A);
	op_hex		(x,	1);
	create_insn	(x=0XE260);
	op_stkvar	(x,	1);
	create_insn	(x=0XE268);
	op_stkvar	(x,	1);
	create_insn	(0XE27C);
	set_name	(0XE27C,	"cmd_exec_set06_cmd14");
	create_insn	(x=0XE286);
	op_stkvar	(x,	1);
	create_insn	(x=0XE294);
	op_hex		(x,	1);
	create_insn	(x=0XE298);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE2B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE2BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE2D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE2F2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE306);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0XE306,	"cmd_exec_set06_cmd13");
	create_insn	(x=0XE30A);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XE30E);
	set_name	(0XE30E,	"cmd_exec_set06_cmd12");
	create_insn	(x=0XE31C);
	op_hex		(x,	1);
	create_insn	(x=0XE322);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE328);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE32A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE32E);
	op_stkvar	(x,	1);
	create_insn	(0XE33C);
	set_name	(0XE33C,	"cmd_exec_set06_cmd11");
	create_insn	(x=0XE33E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE344);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE350);
	op_hex		(x,	1);
	create_insn	(x=0XE358);
	op_stkvar	(x,	1);
	create_insn	(x=0XE360);
	op_stkvar	(x,	1);
	create_insn	(0XE36E);
	set_name	(0XE36E,	"cmd_exec_set06_cmd10");
	create_insn	(x=0XE37C);
	op_hex		(x,	1);
	create_insn	(x=0XE382);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE388);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XE38A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE38E);
	op_stkvar	(x,	1);
	create_insn	(0XE39C);
	set_name	(0XE39C,	"cmd_exec_set06_cmd0F");
	create_insn	(x=0XE39E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE3A6);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XE3A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE3AE);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XE3BA);
	op_hex		(x,	1);
	create_insn	(x=0XE3C2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE3CA);
	op_stkvar	(x,	1);
	create_insn	(0XE3DC);
	set_name	(0XE3DC,	"cmd_exec_set06_cmd0E");
	create_insn	(x=0XE3EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE3EE);
	op_hex		(x,	1);
	create_insn	(x=0XE3F4);
	op_stkvar	(x,	1);
	create_insn	(0XE3FC);
	create_insn	(x=0XE43C);
	op_stkvar	(x,	1);
	create_insn	(0XE44C);
	set_name	(0XE44C,	"cmd_exec_set06_cmd0D");
	create_insn	(x=0XE45A);
	op_hex		(x,	1);
	create_insn	(x=0XE460);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE464);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE466);
	op_stkvar	(x,	1);
	create_insn	(x=0XE468);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE46A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE46C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE46E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE472);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE474);
	op_stkvar	(x,	1);
	create_insn	(x=0XE478);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE47E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE482);
	op_stkvar	(x,	1);
	create_insn	(0XE492);
	set_name	(0XE492,	"cmd_exec_set06_cmd0C");
	create_insn	(x=0XE4A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE4A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE4AA);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XE4AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XE4B2);
	create_insn	(x=0XE4E0);
	op_hex		(x,	1);
	create_insn	(x=0XE4E6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE4F2);
	op_stkvar	(x,	1);
	create_insn	(0XE4FA);
	create_insn	(x=0XE506);
	op_stkvar	(x,	1);
	create_insn	(x=0XE518);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE51A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE526);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE52E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE532);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE536);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE53A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	make_array	(0XE53E,	0X2);
	create_dword	(x=0XE540);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE544);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE548);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE54C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE550);
	create_insn	(x=0XE552);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE570);
	op_stkvar	(x,	1);
	create_insn	(0XE578);
	create_insn	(x=0XE582);
	op_stkvar	(x,	1);
	create_insn	(0XE588);
	set_name	(0XE588,	"cmd_exec_set06_cmd0B");
	create_insn	(x=0XE596);
	op_hex		(x,	1);
	create_insn	(x=0XE59C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5A2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE5A6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5AA);
	op_stkvar	(x,	1);
	create_insn	(0XE5B8);
	set_name	(0XE5B8,	"cmd_exec_set06_cmd0A");
	create_insn	(x=0XE5BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5C4);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE5D2);
	op_hex		(x,	1);
	create_insn	(x=0XE5DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5E2);
	op_stkvar	(x,	1);
	create_insn	(0XE5F0);
	set_name	(0XE5F0,	"cmd_exec_set06_cmd09");
	create_insn	(x=0XE5FE);
	op_hex		(x,	1);
	create_insn	(x=0XE604);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE60A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE60E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE610);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0XE612);
	op_stkvar	(x,	1);
	create_insn	(x=0XE618);
	op_stkvar	(x,	1);
	create_insn	(0XE626);
	set_name	(0XE626,	"cmd_exec_set06_cmd08");
	create_insn	(x=0XE628);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE632);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE63A);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0XE646);
	op_hex		(x,	1);
	create_insn	(x=0XE64E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE656);
	op_stkvar	(x,	1);
	create_insn	(0XE664);
	set_name	(0XE664,	"cmd_exec_set06_cmd07");
	create_insn	(x=0XE672);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE674);
	op_hex		(x,	1);
	create_insn	(x=0XE67C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE67E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE688);
	op_hex		(x,	1);
	create_insn	(x=0XE68C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE692);
	op_hex		(x,	1);
	create_insn	(x=0XE696);
	op_hex		(x,	1);
	create_insn	(x=0XE69A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE69E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE6A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE6B0);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0XE6B8);
	set_name	(0XE6B8,	"cmd_exec_set06_cmd06");
	create_insn	(x=0XE6BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE6C4);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE6D0);
	op_hex		(x,	1);
	create_insn	(x=0XE6D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE6E0);
	op_stkvar	(x,	1);
	create_insn	(0XE6EE);
	set_name	(0XE6EE,	"cmd_exec_set06_cmd04");
	create_insn	(x=0XE6FC);
	op_hex		(x,	1);
	create_insn	(x=0XE704);
	op_stkvar	(x,	1);
	create_insn	(x=0XE708);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE70A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE70C);
	op_plain_offset	(x,	1,	0X100026F0);
	op_plain_offset	(x,	129,	0X100026F0);
	create_insn	(x=0XE70E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE712);
	op_plain_offset	(x,	1,	0X100026F0);
	op_plain_offset	(x,	129,	0X100026F0);
	create_insn	(x=0XE714);
	op_stkvar	(x,	1);
	create_insn	(x=0XE718);
	op_plain_offset	(x,	1,	0X100026F0);
	op_plain_offset	(x,	129,	0X100026F0);
	create_insn	(x=0XE71A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE720);
	op_stkvar	(x,	1);
	create_insn	(x=0XE724);
	op_plain_offset	(x,	1,	0X100026F0);
	op_plain_offset	(x,	129,	0X100026F0);
	create_insn	(x=0XE726);
	op_stkvar	(x,	1);
	create_insn	(x=0XE72E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE732);
	op_stkvar	(x,	1);
	create_insn	(x=0XE736);
	op_stkvar	(x,	1);
	create_insn	(x=0XE742);
	op_stkvar	(x,	1);
	create_insn	(0XE74C);
	set_name	(0XE74C,	"cmd_exec_set06_cmd03");
	create_insn	(x=0XE74E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE760);
	op_hex		(x,	1);
	create_insn	(x=0XE768);
	op_stkvar	(x,	1);
	create_insn	(x=0XE76C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE772);
	op_stkvar	(x,	1);
	create_insn	(x=0XE776);
	op_stkvar	(x,	1);
	create_insn	(0XE784);
	set_name	(0XE784,	"cmd_exec_set06_cmd02");
	create_insn	(x=0XE792);
	op_hex		(x,	1);
	create_insn	(x=0XE79A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE7A2);
	op_stkvar	(x,	1);
	create_insn	(0XE7B0);
	set_name	(0XE7B0,	"cmd_exec_set06_cmd01");
	create_insn	(x=0XE7BE);
	op_hex		(x,	1);
	create_insn	(x=0XE7C6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE7CA);
	op_stkvar	(x,	1);
	create_insn	(x=0XE7CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE7D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE7D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE7DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XE7DE);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XE7E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE7E6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE7EA);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XE7EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE7F2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE7F6);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XE7F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE7FE);
	op_stkvar	(x,	1);
	create_insn	(x=0XE802);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XE804);
	op_stkvar	(x,	1);
	create_insn	(x=0XE80A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE80E);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XE810);
	op_stkvar	(x,	1);
	create_insn	(x=0XE816);
	op_stkvar	(x,	1);
	create_insn	(x=0XE81A);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XE81C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE822);
	op_stkvar	(x,	1);
	create_insn	(x=0XE826);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0XE828);
	op_stkvar	(x,	1);
	create_insn	(x=0XE834);
	op_stkvar	(x,	1);
	create_insn	(0XE83E);
	set_name	(0XE83E,	"cmd_exec_set01_cmd01");
	create_insn	(x=0XE842);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE84A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0XE856);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE85A);
	op_plain_offset	(x,	1,	0X10003B88);
	op_plain_offset	(x,	129,	0X10003B88);
	create_insn	(x=0XE85E);
	op_plain_offset	(x,	1,	0X10003B88);
	op_plain_offset	(x,	129,	0X10003B88);
	create_insn	(x=0XE862);
	op_plain_offset	(x,	1,	0X10003B88);
	op_plain_offset	(x,	129,	0X10003B88);
	create_insn	(x=0XE866);
	op_stkvar	(x,	1);
	create_insn	(x=0XE86C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE86E);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XE872);
	create_insn	(x=0XE874);
	op_stkvar	(x,	1);
	create_insn	(x=0XE878);
	op_stkvar	(x,	1);
	create_insn	(x=0XE880);
	op_stkvar	(x,	1);
	create_insn	(x=0XE884);
	op_stkvar	(x,	1);
	create_insn	(x=0XE8A6);
	op_hex		(x,	1);
	create_insn	(x=0XE8AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE8BC);
	op_stkvar	(x,	1);
	create_insn	(0XE8C6);
	set_name	(0XE8C6,	"cmd_exec_set00_cmdFF");
	create_insn	(x=0XE8CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE8D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE8E2);
	op_hex		(x,	1);
	create_insn	(x=0XE8EC);
	op_stkvar	(x,	1);
	create_insn	(0XE8FC);
	set_name	(0XE8FC,	"cmd_exec_set00_cmd32");
	create_insn	(x=0XE908);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE90A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE924);
	op_hex		(x,	1);
	create_insn	(x=0XE92C);
	op_stkvar	(x,	1);
	make_array	(0XE936,	0X2);
	create_dword	(x=0XE938);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE93C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE940);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE944);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE948);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE94C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE950);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XE954);
	create_strlit	(0XE958,	0XE972);
	set_name	(0XE958,	"aWm610A7_176520");
	make_array	(0XE972,	0X2);
	create_dword	(x=0XE974);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE978);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE97C);
	create_insn	(x=0XE986);
	op_hex		(x,	1);
	create_insn	(x=0XE98C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE992);
	op_stkvar	(x,	1);
	create_insn	(x=0XE996);
	op_plain_offset	(x,	1,	0X10000021);
	op_plain_offset	(x,	129,	0X10000021);
	create_insn	(x=0XE998);
	op_stkvar	(x,	1);
	create_insn	(x=0XE99C);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XE99E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE9A2);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XE9A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE9A8);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XE9AA);
	op_stkvar	(x,	1);
	create_insn	(x=0XE9B2);
	op_stkvar	(x,	1);
	create_insn	(0XE9C4);
	create_insn	(x=0XE9C6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE9E0);
	op_plain_offset	(x,	1,	0X10000021);
	op_plain_offset	(x,	129,	0X10000021);
	create_insn	(x=0XE9E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE9EA);
	op_stkvar	(x,	1);
	create_insn	(x=0XE9F8);
	op_hex		(x,	1);
	create_insn	(0XEA00);
	set_name	(0XEA00,	"log_printf");
	create_insn	(0XEA02);
	create_insn	(x=0XEA0E);
	op_stkvar	(x,	1);
	create_insn	(x=0XEA14);
	op_stkvar	(x,	1);
	create_insn	(x=0XEA1E);
	op_stkvar	(x,	1);
	create_insn	(x=0XEA2E);
	op_hex		(x,	1);
	create_insn	(x=0XEA36);
	op_stkvar	(x,	1);
	create_insn	(x=0XEA3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XEA3E);
	op_stkvar	(x,	1);
	create_insn	(x=0XEA46);
	op_stkvar	(x,	1);
	create_insn	(x=0XEA48);
	op_stkvar	(x,	1);
	create_insn	(x=0XEA4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XEA4E);
	op_stkvar	(x,	1);
	create_insn	(x=0XEA52);
	op_stkvar	(x,	1);
	create_insn	(x=0XEA56);
	op_stkvar	(x,	1);
	create_insn	(x=0XEA5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XEA60);
	op_stkvar	(x,	1);
	create_insn	(x=0XEA68);
	op_stkvar	(x,	1);
	create_insn	(x=0XEA74);
	op_stkvar	(x,	1);
	create_insn	(0XEA7E);
	create_insn	(x=0XEA84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XEA92);
	op_stkvar	(x,	1);
	create_insn	(x=0XEAA2);
	op_stkvar	(x,	1);
	create_insn	(x=0XEAD8);
	op_stkvar	(x,	1);
	create_insn	(x=0XEADE);
	op_stkvar	(x,	1);
	create_insn	(x=0XEAE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XEAEE);
	op_stkvar	(x,	1);
	create_insn	(x=0XEAF2);
	op_stkvar	(x,	1);
	create_insn	(x=0XEAFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XEAFC);
	op_hex		(x,	1);
	create_insn	(0XEB24);
	create_insn	(x=0XEB28);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEB2C);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEB30);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEB34);
	op_stkvar	(x,	1);
	create_insn	(x=0XEB3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XEB48);
	op_stkvar	(x,	1);
	create_insn	(x=0XEB52);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEB56);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEB5C);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEB60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XEB68);
	create_insn	(x=0XEB8C);
	op_hex		(x,	1);
	create_insn	(x=0XEB92);
	op_stkvar	(x,	1);
	create_insn	(x=0XEB96);
	op_stkvar	(x,	1);
	create_insn	(0XEB9C);
	create_insn	(0XEB9E);
	create_insn	(0XEBA0);
	create_insn	(x=0XEBA4);
	op_stkvar	(x,	1);
	create_insn	(0XEBB0);
	create_insn	(x=0XEBB4);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEBB8);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEBBC);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEBC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XEBCA);
	op_stkvar	(x,	1);
	create_insn	(x=0XEBD6);
	op_stkvar	(x,	1);
	create_insn	(x=0XEBE0);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEBE4);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEBEA);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEBEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XEBF8);
	create_insn	(x=0XEC04);
	op_stkvar	(x,	1);
	create_insn	(0XEC0A);
	create_insn	(x=0XEC0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XEC16);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XEC18);
	op_stkvar	(x,	1);
	create_insn	(x=0XEC28);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XEC2A);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XEC30);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XEC3A);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XEC44);
	op_hex		(x,	1);
	create_insn	(x=0XEC6A);
	op_hex		(x,	1);
	create_insn	(x=0XEC78);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XEC8A);
	op_stkvar	(x,	1);
	create_insn	(x=0XECB8);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XECBE);
	create_insn	(x=0XECC6);
	op_stkvar	(x,	1);
	create_insn	(x=0XECCA);
	op_stkvar	(x,	1);
	create_insn	(x=0XECCE);
	op_stkvar	(x,	1);
	create_insn	(x=0XECD2);
	op_hex		(x,	1);
	create_insn	(x=0XECD6);
	op_stkvar	(x,	1);
	create_insn	(x=0XECE2);
	op_stkvar	(x,	1);
	create_insn	(x=0XECEA);
	op_stkvar	(x,	1);
	create_insn	(x=0XECF2);
	op_stkvar	(x,	1);
	create_insn	(x=0XECFA);
	op_stkvar	(x,	1);
	create_insn	(x=0XED08);
	op_stkvar	(x,	1);
	create_insn	(x=0XED10);
	op_stkvar	(x,	1);
	create_insn	(x=0XED18);
	op_stkvar	(x,	1);
	create_insn	(x=0XED20);
	op_stkvar	(x,	1);
	create_insn	(x=0XED3A);
	op_stkvar	(x,	1);
	create_insn	(x=0XED3E);
	op_stkvar	(x,	1);
	create_insn	(x=0XED52);
	op_stkvar	(x,	1);
	create_insn	(x=0XED5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XED64);
	op_stkvar	(x,	1);
	create_insn	(x=0XED6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XED74);
	op_stkvar	(x,	1);
	create_insn	(0XED8A);
	create_insn	(x=0XED90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XEDA2);
	op_stkvar	(x,	1);
	create_insn	(x=0XEDB0);
	op_stkvar	(x,	1);
	make_array	(0XEDC6,	0X2);
	create_dword	(x=0XEDC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XEDCC);
	create_word	(0XEDCE);
	create_dword	(0XEDD0);
	create_dword	(x=0XEDD4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XEDD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XEDDC);
	create_insn	(x=0XEDF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XEDF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XEDFE);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE04);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE1A);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE1C);
	op_stkvar	(x,	1);
	create_insn	(0XEE28);
	create_insn	(x=0XEE36);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE40);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE44);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE48);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE50);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE5A);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE60);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE66);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE70);
	op_stkvar	(x,	1);
	create_insn	(x=0XEE7C);
	op_hex		(x,	1);
	create_insn	(x=0XEE90);
	op_stkvar	(x,	1);
	create_insn	(0XEE94);
	create_insn	(x=0XEE98);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEE9C);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEEA0);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEEA2);
	op_stkvar	(x,	1);
	create_insn	(x=0XEEA6);
	op_stkvar	(x,	1);
	create_insn	(x=0XEEB0);
	op_stkvar	(x,	1);
	create_insn	(x=0XEEB2);
	op_stkvar	(x,	1);
	create_insn	(0XEEB6);
	create_insn	(0XEEB8);
	create_insn	(x=0XEEBE);
	op_stkvar	(x,	1);
	create_insn	(x=0XEEC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XEEC8);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEECC);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEED0);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEED6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XEEFA);
	op_stkvar	(x,	1);
	create_insn	(0XEF0E);
	create_insn	(0XEF10);
	create_insn	(x=0XEF1E);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF24);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF2A);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF32);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF4A);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF4E);
	op_hex		(x,	1);
	create_insn	(x=0XEF54);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF58);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF60);
	op_stkvar	(x,	1);
	create_insn	(0XEF6A);
	create_insn	(0XEF6C);
	create_insn	(x=0XEF70);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEF74);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEF78);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEF7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF7E);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF86);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF88);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF90);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF92);
	op_stkvar	(x,	1);
	create_insn	(x=0XEF9A);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEF9E);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEFA2);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEFA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XEFBC);
	create_insn	(x=0XEFC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XEFC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XEFCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XEFCE);
	op_hex		(x,	1);
	create_insn	(x=0XEFD2);
	op_stkvar	(x,	1);
	create_insn	(x=0XEFDC);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEFE2);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEFE8);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0XEFEE);
	op_hex		(x,	1);
	create_insn	(x=0XEFF2);
	op_stkvar	(x,	1);
	create_insn	(x=0XEFFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF000);
	op_hex		(x,	1);
	create_insn	(x=0XF006);
	op_stkvar	(x,	1);
	create_insn	(x=0XF00A);
	op_hex		(x,	1);
	create_insn	(x=0XF00E);
	op_stkvar	(x,	1);
	create_insn	(x=0XF01C);
	op_hex		(x,	1);
	create_insn	(x=0XF022);
	op_stkvar	(x,	1);
	create_insn	(x=0XF02E);
	op_stkvar	(x,	1);
	create_insn	(0XF038);
	create_insn	(x=0XF040);
	op_stkvar	(x,	1);
	create_insn	(x=0XF044);
	op_stkvar	(x,	1);
	create_insn	(x=0XF048);
	op_hex		(x,	1);
	create_insn	(x=0XF04C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF050);
	op_stkvar	(x,	1);
	create_insn	(x=0XF054);
	op_stkvar	(x,	1);
	create_insn	(x=0XF058);
	op_stkvar	(x,	1);
	create_insn	(x=0XF06A);
	op_stkvar	(x,	1);
	create_insn	(x=0XF06E);
	op_hex		(x,	1);
	create_insn	(x=0XF072);
	op_stkvar	(x,	1);
	create_insn	(x=0XF084);
	op_stkvar	(x,	1);
	create_insn	(x=0XF088);
	op_hex		(x,	1);
	create_insn	(x=0XF08C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF09E);
	op_stkvar	(x,	1);
	create_insn	(x=0XF0A2);
	op_hex		(x,	1);
	create_insn	(x=0XF0A6);
	op_stkvar	(x,	1);
	create_insn	(x=0XF0AA);
	op_stkvar	(x,	1);
	create_insn	(x=0XF0C0);
	op_hex		(x,	1);
	create_insn	(x=0XF0C6);
	op_stkvar	(x,	1);
	create_insn	(0XF0CC);
	create_insn	(0XF0CE);
	create_insn	(x=0XF0DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XF0E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XF0E2);
	op_hex		(x,	1);
	create_insn	(x=0XF0F2);
	op_stkvar	(x,	1);
	create_insn	(0XF0FC);
	create_insn	(x=0XF104);
	op_stkvar	(x,	1);
	create_insn	(x=0XF108);
	op_stkvar	(x,	1);
	create_insn	(x=0XF10C);
	op_hex		(x,	1);
	create_insn	(x=0XF110);
	op_stkvar	(x,	1);
	create_insn	(x=0XF114);
	op_stkvar	(x,	1);
	create_insn	(x=0XF118);
	op_stkvar	(x,	1);
	create_insn	(x=0XF11C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF120);
	op_stkvar	(x,	1);
	create_insn	(x=0XF138);
	op_stkvar	(x,	1);
	create_insn	(x=0XF13C);
	op_hex		(x,	1);
	create_insn	(x=0XF140);
	op_stkvar	(x,	1);
	create_insn	(x=0XF152);
	op_stkvar	(x,	1);
	create_insn	(x=0XF156);
	op_hex		(x,	1);
	create_insn	(x=0XF15A);
	op_stkvar	(x,	1);
	create_insn	(x=0XF16C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF170);
	op_hex		(x,	1);
	create_insn	(x=0XF174);
	op_stkvar	(x,	1);
	create_insn	(x=0XF17A);
	op_stkvar	(x,	1);
	create_insn	(x=0XF190);
	op_hex		(x,	1);
	create_insn	(x=0XF196);
	op_stkvar	(x,	1);
	create_insn	(0XF19C);
	create_insn	(0XF19E);
	create_insn	(x=0XF1AA);
	op_stkvar	(x,	1);
	create_insn	(x=0XF1B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XF1B2);
	op_hex		(x,	1);
	create_insn	(x=0XF1C2);
	op_stkvar	(x,	1);
	create_insn	(0XF1CC);
	set_name	(0XF1CC,	"cmd_exec_set00_cmd30");
	create_insn	(x=0XF1DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF1DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0XF1F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF1F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF1FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF200);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XF204);
	create_insn	(x=0XF20E);
	op_hex		(x,	1);
	create_insn	(x=0XF216);
	op_stkvar	(x,	1);
	create_insn	(x=0XF21E);
	op_stkvar	(x,	1);
	create_insn	(0XF22C);
	create_insn	(0XF238);
	create_insn	(0XF23E);
	create_insn	(0XF244);
	create_insn	(0XF250);
	create_insn	(0XF256);
	create_insn	(0XF25C);
	set_name	(0XF25C,	"cmd_exec_set00_cmd0D");
	create_insn	(x=0XF266);
	op_hex		(x,	1);
	create_insn	(x=0XF27A);
	op_stkvar	(x,	1);
	create_insn	(x=0XF27E);
	op_stkvar	(x,	1);
	create_insn	(x=0XF28C);
	op_hex		(x,	1);
	create_insn	(x=0XF294);
	op_stkvar	(x,	1);
	create_insn	(x=0XF29C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF2A8);
	op_stkvar	(x,	1);
	create_insn	(0XF2B2);
	create_insn	(x=0XF2B4);
	op_stkvar	(x,	1);
	create_insn	(0XF2BA);
	set_name	(0XF2BA,	"cmd_exec_set00_cmd0C");
	create_insn	(x=0XF2C0);
	op_hex		(x,	1);
	create_insn	(x=0XF2DA);
	op_hex		(x,	1);
	create_insn	(x=0XF2E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XF2EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XF2F6);
	op_stkvar	(x,	1);
	create_insn	(0XF300);
	create_insn	(x=0XF302);
	op_stkvar	(x,	1);
	create_insn	(x=0XF306);
	op_stkvar	(x,	1);
	create_insn	(x=0XF30C);
	op_hex		(x,	1);
	create_insn	(x=0XF314);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF318);
	op_stkvar	(x,	1);
	create_insn	(0XF31E);
	set_name	(0XF31E,	"cmd_exec_set00_cmd0B");
	create_insn	(x=0XF324);
	op_hex		(x,	1);
	create_insn	(x=0XF33A);
	op_hex		(x,	1);
	create_insn	(x=0XF34A);
	op_stkvar	(x,	1);
	create_insn	(x=0XF352);
	op_stkvar	(x,	1);
	create_insn	(x=0XF35E);
	op_stkvar	(x,	1);
	create_insn	(0XF380);
	create_insn	(0XF384);
	set_name	(0XF384,	"cmd_exec_set00_cmd0A");
	create_insn	(x=0XF394);
	op_hex		(x,	1);
	create_insn	(x=0XF3B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XF3B4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XF3B6);
	op_hex		(x,	1);
	create_insn	(x=0XF3BA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XF3BC);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XF3BE);
	op_hex		(x,	1);
	create_insn	(x=0XF3C2);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XF3CA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XF3CC);
	op_hex		(x,	1);
	create_insn	(x=0XF3D0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0XF3EA);
	op_hex		(x,	1);
	create_insn	(x=0XF3F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XF3FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XF406);
	op_stkvar	(x,	1);
	create_insn	(0XF40C);
	create_insn	(0XF410);
	create_insn	(0XF412);
	set_name	(0XF412,	"cmd_exec_set00_cmd08");
	create_insn	(x=0XF420);
	op_hex		(x,	1);
	create_insn	(x=0XF430);
	op_stkvar	(x,	1);
	create_insn	(x=0XF438);
	op_stkvar	(x,	1);
	create_insn	(x=0XF446);
	op_hex		(x,	1);
	create_insn	(x=0XF450);
	op_stkvar	(x,	1);
	create_insn	(0XF460);
	set_name	(0XF460,	"cmd_exec_set00_cmd07");
	create_insn	(x=0XF46E);
	op_hex		(x,	1);
	create_insn	(x=0XF47E);
	op_stkvar	(x,	1);
	create_insn	(0XF48E);
	create_insn	(x=0XF4A4);
	op_hex		(x,	1);
	create_insn	(x=0XF4AE);
	op_stkvar	(x,	1);
	create_insn	(x=0XF4BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XF4C6);
	op_hex		(x,	1);
	create_insn	(0XF4E2);
	create_insn	(0XF4E4);
	set_name	(0XF4E4,	"cmd_exec_set00_cmd01");
	create_insn	(x=0XF4E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF4F8);
	op_hex		(x,	1);
	create_insn	(x=0XF500);
	op_stkvar	(x,	1);
	create_insn	(x=0XF504);
	op_stkvar	(x,	1);
	create_insn	(x=0XF50A);
	op_hex		(x,	1);
	create_insn	(x=0XF510);
	op_hex		(x,	1);
	create_insn	(x=0XF514);
	op_stkvar	(x,	1);
	create_insn	(x=0XF518);
	op_stkvar	(x,	1);
	create_insn	(x=0XF522);
	op_hex		(x,	1);
	create_insn	(x=0XF52A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF532);
	op_stkvar	(x,	1);
	create_insn	(x=0XF53A);
	op_stkvar	(x,	1);
	create_insn	(0XF540);
	create_insn	(x=0XF546);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF54A);
	op_stkvar	(x,	1);
	create_insn	(x=0XF54E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF552);
	op_stkvar	(x,	1);
	create_insn	(0XF558);
	create_insn	(x=0XF55C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF562);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF566);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF570);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF572);
	op_stkvar	(x,	1);
	create_insn	(x=0XF57A);
	op_hex		(x,	1);
	create_insn	(x=0XF586);
	op_stkvar	(x,	1);
	create_insn	(x=0XF58C);
	op_stkvar	(x,	1);
	create_insn	(x=0XF592);
	op_stkvar	(x,	1);
	create_insn	(x=0XF59A);
	op_stkvar	(x,	1);
	create_insn	(x=0XF59E);
	op_stkvar	(x,	1);
	create_insn	(x=0XF5AA);
	op_stkvar	(x,	1);
	create_insn	(x=0XF5B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XF5B8);
	op_hex		(x,	1);
	create_insn	(x=0XF5BC);
	op_hex		(x,	1);
	create_insn	(0XF5C2);
	create_insn	(x=0XF5C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XF5CA,	"switch 10 cases ",	0);
	set_cmt	(0XF5CE,	"switch jump",	0);
	set_cmt	(0XF5D2,	"jump table for switch statement",	0);
	create_byte	(0XF5D2);
	set_name	(0XF5D2,	"jpt_55CE");
	create_byte	(0XF5D3);
	create_byte	(0XF5D4);
	create_byte	(0XF5D5);
	create_byte	(0XF5D6);
	create_byte	(0XF5D7);
	create_byte	(0XF5D8);
	create_byte	(0XF5D9);
	create_byte	(0XF5DA);
	create_byte	(0XF5DB);
	set_cmt	(0XF5DC,	"jumptable 0000F5CE case 0",	1);
	create_insn	(0XF5DC);
	set_cmt	(0XF600,	"jumptable 0000F5CE default case",	1);
	set_name	(0XF600,	"def_55CE");
	create_insn	(0XF602);
	create_insn	(0XF610);
	create_insn	(0XF624);
	create_insn	(0XF632);
	create_insn	(0XF638);
	create_insn	(0XF63E);
	create_insn	(0XF644);
	create_insn	(0XF64A);
	create_insn	(0XF650);
	set_cmt	(0XF656,	"jumptable 0000F5CE case 1",	1);
	create_insn	(0XF656);
	set_cmt	(0XF66A,	"jumptable 0000F67A default case",	1);
	set_name	(0XF66A,	"def_56CE");
	set_cmt	(0XF66C,	"jumptable 0000F5CE case 6",	1);
	create_insn	(0XF66C);
	set_cmt	(0XF676,	"switch 29 cases ",	0);
	set_cmt	(0XF67A,	"switch jump",	0);
	set_cmt	(0XF67E,	"jump table for switch statement",	0);
	create_byte	(0XF67E);
	set_name	(0XF67E,	"jpt_567A");
	create_byte	(0XF67F);
	create_byte	(0XF680);
	create_byte	(0XF681);
	create_byte	(0XF682);
	create_byte	(0XF683);
	create_byte	(0XF684);
	create_byte	(0XF685);
	create_byte	(0XF686);
	create_byte	(0XF687);
	create_byte	(0XF688);
	create_byte	(0XF689);
	create_byte	(0XF68A);
	create_byte	(0XF68B);
	create_byte	(0XF68C);
	create_byte	(0XF68D);
	create_byte	(0XF68E);
	create_byte	(0XF68F);
	create_byte	(0XF690);
	create_byte	(0XF691);
	create_byte	(0XF692);
	create_byte	(0XF693);
	create_byte	(0XF694);
	create_byte	(0XF695);
	create_byte	(0XF696);
	create_byte	(0XF697);
	create_byte	(0XF698);
	create_byte	(0XF699);
	create_byte	(0XF69A);
	set_cmt	(0XF69C,	"jumptable 0000F67A cases 0,5,27",	1);
	create_insn	(0XF69C);
	create_insn	(0XF69E);
	set_cmt	(0XF6A4,	"switch 14 cases ",	0);
	set_cmt	(0XF6AC,	"switch jump",	0);
	set_cmt	(0XF6B0,	"jump table for switch statement",	0);
	create_byte	(0XF6B0);
	set_name	(0XF6B0,	"jpt_56AC");
	create_byte	(0XF6B1);
	create_byte	(0XF6B2);
	create_byte	(0XF6B3);
	create_byte	(0XF6B4);
	create_byte	(0XF6B5);
	create_byte	(0XF6B6);
	create_byte	(0XF6B7);
	create_byte	(0XF6B8);
	create_byte	(0XF6B9);
	create_byte	(0XF6BA);
	create_byte	(0XF6BB);
	create_byte	(0XF6BC);
	create_byte	(0XF6BD);
	set_cmt	(0XF6BE,	"jumptable 0000F6AC case 38",	1);
	create_insn	(0XF6BE);
	create_insn	(0XF6C0);
	set_cmt	(0XF6C6,	"switch 6 cases ",	0);
	set_cmt	(0XF6CE,	"switch jump",	0);
	set_cmt	(0XF6D2,	"jump table for switch statement",	0);
	create_byte	(0XF6D2);
	set_name	(0XF6D2,	"jpt_56CE");
	create_byte	(0XF6D3);
	create_byte	(0XF6D4);
	create_byte	(0XF6D5);
	create_byte	(0XF6D6);
	create_byte	(0XF6D7);
	create_insn	(0XF6D8);
	create_insn	(0XF6EC);
	make_array	(0XF6FA,	0X2);
	create_dword	(x=0XF6FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF700);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF704);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF708);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF70C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF710);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF714);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XF718);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XF71C);
	create_dword	(x=0XF720);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XF724,	"jumptable 0000F67A case 1",	1);
	create_insn	(0XF724);
	set_cmt	(0XF72C,	"jumptable 0000F67A case 2",	1);
	create_insn	(0XF72C);
	set_cmt	(0XF734,	"jumptable 0000F67A case 3",	1);
	create_insn	(0XF734);
	set_cmt	(0XF73C,	"jumptable 0000F67A case 4",	1);
	create_insn	(0XF73C);
	set_cmt	(0XF744,	"jumptable 0000F67A case 6",	1);
	create_insn	(0XF744);
	set_cmt	(0XF74C,	"jumptable 0000F67A case 7",	1);
	create_insn	(0XF74C);
	create_insn	(0XF754);
	set_cmt	(0XF756,	"jumptable 0000F67A case 8",	1);
	create_insn	(0XF756);
	set_cmt	(0XF75E,	"jumptable 0000F67A case 9",	1);
	create_insn	(0XF75E);
	set_cmt	(0XF766,	"jumptable 0000F67A case 10",	1);
	create_insn	(0XF766);
	set_cmt	(0XF76E,	"jumptable 0000F67A case 11",	1);
	create_insn	(0XF76E);
	set_cmt	(0XF776,	"jumptable 0000F67A case 12",	1);
	create_insn	(0XF776);
	set_cmt	(0XF77E,	"jumptable 0000F67A case 13",	1);
	create_insn	(0XF77E);
	create_insn	(0XF786);
	set_cmt	(0XF788,	"jumptable 0000F67A case 14",	1);
	create_insn	(0XF788);
	set_cmt	(0XF790,	"jumptable 0000F67A case 15",	1);
	create_insn	(0XF790);
	set_cmt	(0XF798,	"jumptable 0000F67A case 16",	1);
	create_insn	(0XF798);
	set_cmt	(0XF7A0,	"jumptable 0000F67A case 17",	1);
	create_insn	(0XF7A0);
	create_insn	(0XF7A8);
	set_cmt	(0XF7AA,	"jumptable 0000F5CE case 9",	1);
	create_insn	(0XF7AA);
	set_cmt	(0XF7AC,	"jumptable 0000F5CE case 8",	1);
	create_insn	(0XF7AC);
	create_insn	(0XF7AE);
	set_cmt	(0XF7B0,	"jumptable 0000F67A case 18",	1);
	create_insn	(0XF7B0);
	set_cmt	(0XF7B8,	"jumptable 0000F67A case 19",	1);
	create_insn	(0XF7B8);
	set_cmt	(0XF7C0,	"jumptable 0000F67A case 20",	1);
	create_insn	(0XF7C0);
	create_insn	(0XF7C8);
	create_insn	(0XF7CA);
	set_cmt	(0XF7CC,	"jumptable 0000F67A case 21",	1);
	create_insn	(0XF7CC);
	set_cmt	(0XF7D4,	"jumptable 0000F67A case 22",	1);
	create_insn	(0XF7D4);
	set_cmt	(0XF7DC,	"jumptable 0000F67A case 23",	1);
	create_insn	(0XF7DC);
	set_cmt	(0XF7E2,	"jumptable 0000F8D8 default case",	1);
	set_name	(0XF7E2,	"def_58D8");
	set_cmt	(0XF7E4,	"jumptable 0000F67A case 24",	1);
	create_insn	(0XF7E4);
	set_cmt	(0XF7EC,	"jumptable 0000F67A case 25",	1);
	create_insn	(0XF7EC);
	set_cmt	(0XF7F4,	"jumptable 0000F67A case 26",	1);
	create_insn	(0XF7F4);
	set_cmt	(0XF7FC,	"jumptable 0000F67A case 28",	1);
	create_insn	(0XF7FC);
	create_insn	(x=0XF800);
	op_hex		(x,	1);
	create_insn	(x=0XF804);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF80A);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XF814);
	set_cmt	(0XF81A,	"jumptable 0000F6AC case 33",	1);
	create_insn	(0XF81A);
	set_cmt	(0XF822,	"jumptable 0000F6AC case 34",	1);
	create_insn	(0XF822);
	set_cmt	(0XF82A,	"jumptable 0000F6AC case 35",	1);
	create_insn	(0XF82A);
	set_cmt	(0XF832,	"jumptable 0000F6AC case 36",	1);
	create_insn	(0XF832);
	set_cmt	(0XF83A,	"jumptable 0000F6AC case 37",	1);
	create_insn	(0XF83A);
	set_cmt	(0XF842,	"jumptable 0000F6AC case 39",	1);
	create_insn	(0XF842);
	set_cmt	(0XF84A,	"jumptable 0000F6AC case 40",	1);
	create_insn	(0XF84A);
	set_cmt	(0XF852,	"jumptable 0000F6AC case 41",	1);
	create_insn	(0XF852);
	set_cmt	(0XF85A,	"jumptable 0000F6AC case 42",	1);
	create_insn	(0XF85A);
	set_cmt	(0XF862,	"jumptable 0000F6AC case 43",	1);
	create_insn	(0XF862);
	set_cmt	(0XF86A,	"jumptable 0000F6AC case 44",	1);
	create_insn	(0XF86A);
	set_cmt	(0XF872,	"jumptable 0000F6AC case 45",	1);
	create_insn	(0XF872);
	set_cmt	(0XF87A,	"jumptable 0000F6AC case 46",	1);
	create_insn	(0XF87A);
	create_insn	(0XF882);
	set_cmt	(0XF888,	"jumptable 0000F6CE case 48",	1);
	create_insn	(0XF888);
	set_cmt	(0XF890,	"jumptable 0000F6CE case 49",	1);
	create_insn	(0XF890);
	set_cmt	(0XF898,	"jumptable 0000F6CE case 50",	1);
	create_insn	(0XF898);
	set_cmt	(0XF8A0,	"jumptable 0000F6CE case 51",	1);
	create_insn	(0XF8A0);
	set_cmt	(0XF8A8,	"jumptable 0000F6CE case 52",	1);
	create_insn	(0XF8A8);
	create_insn	(0XF8B0);
	set_cmt	(0XF8B2,	"jumptable 0000F6CE case 53",	1);
	create_insn	(0XF8B2);
	create_insn	(0XF8BA);
	create_insn	(0XF8C0);
	create_insn	(0XF8C6);
	create_insn	(0XF8CC);
	create_insn	(0XF8D2);
	set_cmt	(0XF8D4,	"switch 22 cases ",	0);
	set_cmt	(0XF8D8,	"switch jump",	0);
	set_cmt	(0XF8DC,	"jump table for switch statement",	0);
	create_byte	(0XF8DC);
	set_name	(0XF8DC,	"jpt_58D8");
	create_byte	(0XF8DD);
	create_byte	(0XF8DE);
	create_byte	(0XF8DF);
	create_byte	(0XF8E0);
	create_byte	(0XF8E1);
	create_byte	(0XF8E2);
	create_byte	(0XF8E3);
	create_byte	(0XF8E4);
	create_byte	(0XF8E5);
	create_byte	(0XF8E6);
	create_byte	(0XF8E7);
	create_byte	(0XF8E8);
	create_byte	(0XF8E9);
	create_byte	(0XF8EA);
	create_byte	(0XF8EB);
	create_byte	(0XF8EC);
	create_byte	(0XF8ED);
	create_byte	(0XF8EE);
	create_byte	(0XF8EF);
	create_byte	(0XF8F0);
	create_byte	(0XF8F1);
	set_cmt	(0XF8F2,	"jumptable 0000F8D8 cases 1-3,8,10,11,14,15,17",	1);
	create_insn	(0XF8F2);
	set_cmt	(0XF8F4,	"jumptable 0000F8D8 case 0",	1);
	create_insn	(0XF8F4);
	set_cmt	(0XF8FC,	"jumptable 0000F8D8 case 4",	1);
	create_insn	(0XF8FC);
	set_cmt	(0XF904,	"jumptable 0000F8D8 case 5",	1);
	create_insn	(0XF904);
	set_cmt	(0XF90C,	"jumptable 0000F8D8 case 6",	1);
	create_insn	(0XF90C);
	set_cmt	(0XF914,	"jumptable 0000F8D8 case 7",	1);
	create_insn	(0XF914);
	set_cmt	(0XF91C,	"jumptable 0000F8D8 case 9",	1);
	create_insn	(0XF91C);
	set_cmt	(0XF924,	"jumptable 0000F8D8 case 12",	1);
	create_insn	(0XF924);
	set_cmt	(0XF92C,	"jumptable 0000F8D8 case 13",	1);
	create_insn	(0XF92C);
	set_cmt	(0XF934,	"jumptable 0000F8D8 case 16",	1);
	create_insn	(0XF934);
	set_cmt	(0XF93C,	"jumptable 0000F8D8 case 18",	1);
	create_insn	(0XF93C);
	set_cmt	(0XF944,	"jumptable 0000F8D8 case 19",	1);
	create_insn	(0XF944);
	set_cmt	(0XF94C,	"jumptable 0000F8D8 case 20",	1);
	create_insn	(0XF94C);
	set_cmt	(0XF954,	"jumptable 0000F8D8 case 21",	1);
	create_insn	(0XF954);
	create_insn	(0XF95C);
	create_insn	(0XF96E);
	create_insn	(0XF974);
	create_insn	(x=0XF980);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XF996);
	create_insn	(x=0XF99A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF9A6);
	op_plain_offset	(x,	1,	0X100000DF);
	op_plain_offset	(x,	129,	0X100000DF);
	create_insn	(0XF9AA);
	create_insn	(x=0XF9B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XF9B6);
	op_stkvar	(x,	1);
	create_insn	(x=0XF9CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF9DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XF9DE);
	op_stkvar	(x,	1);
	create_insn	(x=0XF9F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XF9FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFA00);
	op_plain_offset	(x,	1,	0X100000DF);
	op_plain_offset	(x,	129,	0X100000DF);
	create_insn	(x=0XFA02);
	op_stkvar	(x,	1);
	create_insn	(0XFA10);
	create_insn	(x=0XFA14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFA22);
	create_insn	(0XFA28);
	create_insn	(x=0XFA38);
	op_hex		(x,	1);
	create_insn	(x=0XFA40);
	op_stkvar	(x,	1);
	create_insn	(x=0XFA44);
	op_stkvar	(x,	1);
	create_insn	(x=0XFA4A);
	op_hex		(x,	1);
	create_insn	(x=0XFA50);
	op_hex		(x,	1);
	create_insn	(x=0XFA54);
	op_stkvar	(x,	1);
	create_insn	(x=0XFA58);
	op_stkvar	(x,	1);
	create_insn	(x=0XFA64);
	op_stkvar	(x,	1);
	create_insn	(x=0XFA68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFA6A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFA6E);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XFA74);
	op_hex		(x,	1);
	create_insn	(x=0XFA7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFA84);
	op_stkvar	(x,	1);
	create_insn	(x=0XFA90);
	op_stkvar	(x,	1);
	create_insn	(0XFA9A);
	create_insn	(0XFB16);
	set_name	(0XFB16,	"power_zone_auto_select");
	create_insn	(x=0XFB1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFB22);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XFB2E);
	create_insn	(0XFB72);
	create_insn	(0XFB7C);
	create_insn	(0XFBFC);
	make_array	(0XFBFE,	0X2);
	create_dword	(x=0XFC00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFC04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFC08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFC0C);
	create_dword	(x=0XFC10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFC14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFC18);
	create_dword	(0XFC1C);
	create_dword	(0XFC20);
	create_dword	(0XFC24);
	create_dword	(0XFC28);
	create_insn	(0XFC2C);
	create_insn	(0XFC38);
	create_insn	(x=0XFC40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFC44);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	set_cmt	(0XFC4C,	"power_zone_is_ce",	0);
	create_insn	(0XFC4C);
	create_insn	(0XFC56);
	create_insn	(x=0XFC5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFC70);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XFC74);
	op_hex		(x,	1);
	create_insn	(x=0XFC78);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XFC7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFC7E);
	create_insn	(x=0XFC8C);
	op_hex		(x,	1);
	create_insn	(x=0XFCA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFCA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFCA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFCAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFCB0);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0XFCB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFCB8);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XFCCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFCE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFCF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFCF6);
	op_plain_offset	(x,	1,	0X100027C2);
	op_plain_offset	(x,	129,	0X100027C2);
	create_insn	(x=0XFD00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFD08);
	op_plain_offset	(x,	1,	0X100027E2);
	op_plain_offset	(x,	129,	0X100027E2);
	create_insn	(x=0XFD0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFD14);
	create_insn	(x=0XFD18);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0XFD3E);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(0XFD6A);
	create_insn	(0XFD70);
	create_insn	(x=0XFD78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFD7E);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XFD8C);
	op_hex		(x,	1);
	create_insn	(0XFDA0);
	create_insn	(0XFDA4);
	create_insn	(0XFDB2);
	create_insn	(0XFDB8);
	create_insn	(x=0XFDBE);
	op_hex		(x,	1);
	create_insn	(x=0XFDD0);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XFDD4);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XFDE2);
	op_hex		(x,	1);
	create_insn	(x=0XFDEC);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XFE26);
	op_hex		(x,	1);
	create_insn	(x=0XFE42);
	op_hex		(x,	1);
	set_cmt	(0XFE46,	"switch 32 cases ",	0);
	set_cmt	(0XFE4A,	"switch jump",	0);
	set_cmt	(0XFE4E,	"jump table for switch statement",	0);
	create_byte	(0XFE4E);
	set_name	(0XFE4E,	"jpt_5E4A");
	create_byte	(0XFE4F);
	create_byte	(0XFE50);
	create_byte	(0XFE51);
	create_byte	(0XFE52);
	create_byte	(0XFE53);
	create_byte	(0XFE54);
	create_byte	(0XFE55);
	create_byte	(0XFE56);
	create_byte	(0XFE57);
	create_byte	(0XFE58);
	create_byte	(0XFE59);
	create_byte	(0XFE5A);
	create_byte	(0XFE5B);
	create_byte	(0XFE5C);
	create_byte	(0XFE5D);
	create_byte	(0XFE5E);
	create_byte	(0XFE5F);
	create_byte	(0XFE60);
	create_byte	(0XFE61);
	create_byte	(0XFE62);
	create_byte	(0XFE63);
	create_byte	(0XFE64);
	create_byte	(0XFE65);
	create_byte	(0XFE66);
	create_byte	(0XFE67);
	create_byte	(0XFE68);
	create_byte	(0XFE69);
	create_byte	(0XFE6A);
	create_byte	(0XFE6B);
	create_byte	(0XFE6C);
	create_byte	(0XFE6D);
	set_cmt	(0XFE6E,	"jumptable 0000FE4A case 0",	1);
	create_insn	(0XFE6E);
	set_cmt	(0XFE7C,	"jumptable 0000FE4A cases 1,3-5,7-9,11,12,15,17-19,21,23",	1);
	create_insn	(0XFE7C);
	set_cmt	(0XFE82,	"jumptable 0000FE4A case 10",	1);
	create_insn	(0XFE82);
	set_cmt	(0XFE88,	"jumptable 0000FE4A cases 2,13,16,22",	1);
	create_insn	(0XFE88);
	set_cmt	(0XFE8E,	"jumptable 0000FE4A case 24",	1);
	create_insn	(0XFE8E);
	set_cmt	(0XFE94,	"jumptable 0000FE4A cases 25,28",	1);
	create_insn	(0XFE94);
	set_cmt	(0XFEA0,	"jumptable 0000FE4A case 31",	1);
	create_insn	(0XFEA0);
	create_insn	(x=0XFEA8);
	op_hex		(x,	1);
	set_cmt	(0XFEAC,	"switch 24 cases ",	0);
	set_cmt	(0XFEB0,	"switch jump",	0);
	set_cmt	(0XFEB4,	"jump table for switch statement",	0);
	create_byte	(0XFEB4);
	set_name	(0XFEB4,	"jpt_5EB0");
	create_byte	(0XFEB5);
	create_byte	(0XFEB6);
	create_byte	(0XFEB7);
	create_byte	(0XFEB8);
	create_byte	(0XFEB9);
	create_byte	(0XFEBA);
	create_byte	(0XFEBB);
	create_byte	(0XFEBC);
	create_byte	(0XFEBD);
	create_byte	(0XFEBE);
	create_byte	(0XFEBF);
	create_byte	(0XFEC0);
	create_byte	(0XFEC1);
	create_byte	(0XFEC2);
	create_byte	(0XFEC3);
	create_byte	(0XFEC4);
	create_byte	(0XFEC5);
	create_byte	(0XFEC6);
	create_byte	(0XFEC7);
	create_byte	(0XFEC8);
	create_byte	(0XFEC9);
	create_byte	(0XFECA);
	create_byte	(0XFECB);
	set_cmt	(0XFECC,	"jumptable 0000FEB0 cases 1,3-5,7-9,11,12,15,17-19,21,23",	1);
	create_insn	(0XFECC);
	set_cmt	(0XFED2,	"jumptable 0000FEB0 case 10",	1);
	create_insn	(0XFED2);
	set_cmt	(0XFEDC,	"jumptable 0000FEB0 cases 2,13,16,22",	1);
	create_insn	(0XFEDC);
	set_cmt	(0XFEE6,	"jumptable 0000FE4A default case",	1);
	create_insn	(0XFEE6);
	set_name	(0XFEE6,	"def_5EB0");
	create_insn	(0XFEE8);
	create_insn	(x=0XFEEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFEF6);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XFEFE);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XFF04);
	op_stkvar	(x,	1);
	create_insn	(x=0XFF1A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFF22);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XFF28);
	create_insn	(x=0XFF2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFF2E);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XFF36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFF38);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XFF3A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFF42);
	op_stkvar	(x,	1);
	create_insn	(x=0XFF4A);
	op_plain_offset	(x,	1,	0X10003900);
	op_plain_offset	(x,	129,	0X10003900);
	create_insn	(x=0XFF7A);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XFF7E);
	op_stkvar	(x,	1);
	create_insn	(0XFF82);
	create_insn	(x=0XFF86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFF88);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0XFF8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFF92);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0XFF9C);
	create_insn	(0XFFAE);
	create_insn	(x=0XFFB8);
	op_hex		(x,	1);
	create_insn	(0XFFC4);
	create_insn	(x=0XFFE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10002);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1000A);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0X10010);
	create_insn	(x=0X10014);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10016);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X1001E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10020);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10022);
	op_stkvar	(x,	1);
	create_insn	(x=0X1002A);
	op_stkvar	(x,	1);
	create_insn	(x=0X10032);
	op_plain_offset	(x,	1,	0X10003B00);
	op_plain_offset	(x,	129,	0X10003B00);
	make_array	(0X1003A,	0X2);
	create_dword	(x=0X1003C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10040);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10044);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10048);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1004C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10050);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10054);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10058);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1005C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10060);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X10064);
	create_dword	(0X10068);
	create_dword	(0X1006C);
	create_dword	(x=0X10070);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10074);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10078);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1007C);
	create_insn	(x=0X100A6);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0X100AA);
	create_insn	(x=0X100B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X100B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X100BA);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X100BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X100C0);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X100C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X100C6);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X100C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X100CE);
	op_stkvar	(x,	1);
	create_insn	(0X100E0);
	create_insn	(x=0X100E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X100EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X100F0);
	op_hex		(x,	1);
	create_insn	(x=0X100F6);
	op_hex		(x,	1);
	create_insn	(x=0X100FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10128);
	op_stkvar	(x,	1);
	create_insn	(x=0X1012C);
	op_plain_offset	(x,	1,	0X1000000E);
	op_plain_offset	(x,	129,	0X1000000E);
	create_insn	(x=0X1012E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1013E);
	op_stkvar	(x,	1);
	create_insn	(x=0X10144);
	op_stkvar	(x,	1);
	create_insn	(0X10156);
	create_insn	(x=0X10158);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1015C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1015E);
	op_plain_offset	(x,	1,	0X100026F0);
	op_plain_offset	(x,	129,	0X100026F0);
	create_insn	(x=0X10160);
	op_stkvar	(x,	1);
	create_insn	(x=0X10164);
	op_plain_offset	(x,	1,	0X100026F0);
	op_plain_offset	(x,	129,	0X100026F0);
	create_insn	(x=0X10166);
	op_stkvar	(x,	1);
	create_insn	(x=0X1016A);
	op_plain_offset	(x,	1,	0X100026F0);
	op_plain_offset	(x,	129,	0X100026F0);
	create_insn	(x=0X1016C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10172);
	op_stkvar	(x,	1);
	create_insn	(x=0X10176);
	op_plain_offset	(x,	1,	0X100026F0);
	op_plain_offset	(x,	129,	0X100026F0);
	create_insn	(x=0X10178);
	op_stkvar	(x,	1);
	create_insn	(x=0X1017C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1017E);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X10180);
	op_stkvar	(x,	1);
	create_insn	(x=0X10184);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X10186);
	op_stkvar	(x,	1);
	create_insn	(x=0X1019C);
	op_stkvar	(x,	1);
	create_insn	(x=0X101A0);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X101A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X101C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X101C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X101CE);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X101D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X101D6);
	op_stkvar	(x,	1);
	create_insn	(0X101EC);
	create_insn	(0X10214);
	create_insn	(x=0X10216);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1021E);
	op_stkvar	(x,	1);
	create_insn	(x=0X10222);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X10224);
	op_stkvar	(x,	1);
	create_insn	(x=0X10228);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X1022A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1022E);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X10230);
	op_stkvar	(x,	1);
	create_insn	(x=0X10234);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X10236);
	op_stkvar	(x,	1);
	create_insn	(x=0X1023A);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X1023C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10240);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X10242);
	op_stkvar	(x,	1);
	create_insn	(x=0X10246);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X10248);
	op_stkvar	(x,	1);
	create_insn	(x=0X1024C);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X1024E);
	op_stkvar	(x,	1);
	create_insn	(x=0X10252);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X10254);
	op_stkvar	(x,	1);
	create_insn	(x=0X10258);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X1025A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1025E);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X10260);
	op_stkvar	(x,	1);
	create_insn	(x=0X10262);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X10264);
	op_stkvar	(x,	1);
	create_insn	(x=0X10268);
	op_stkvar	(x,	1);
	create_insn	(x=0X1027A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1027C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0X10296);
	create_insn	(x=0X1029C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1029E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X102A0);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0X102A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X102A8);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0X102AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X102AE);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0X102B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X102B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X102BA);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0X102BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X102C0);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0X102C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X102C6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X102C8);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X102CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X102E4);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0X102FE);
	create_insn	(x=0X10300);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10308);
	op_stkvar	(x,	1);
	create_insn	(x=0X1030C);
	op_stkvar	(x,	1);
	create_insn	(0X1031E);
	create_insn	(x=0X10320);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10328);
	op_stkvar	(x,	1);
	create_insn	(x=0X10334);
	op_stkvar	(x,	1);
	create_insn	(x=0X1033A);
	op_stkvar	(x,	1);
	create_insn	(0X1034C);
	create_insn	(x=0X1034E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10354);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X10356);
	op_stkvar	(x,	1);
	create_insn	(x=0X1035A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1035E);
	op_stkvar	(x,	1);
	create_insn	(x=0X10362);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0X10364);
	op_stkvar	(x,	1);
	create_insn	(x=0X10368);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0X1036A);
	op_stkvar	(x,	1);
	create_insn	(x=0X10370);
	op_stkvar	(x,	1);
	create_insn	(0X10380);
	create_insn	(x=0X10384);
	op_stkvar	(x,	1);
	create_insn	(x=0X10388);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1038C);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0X10392);
	op_stkvar	(x,	1);
	create_insn	(x=0X10396);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0X1039C);
	op_stkvar	(x,	1);
	create_insn	(x=0X103A0);
	op_hex		(x,	1);
	create_insn	(x=0X103A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X103A8);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0X103AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X103B2);
	op_hex		(x,	1);
	create_insn	(x=0X103B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X103BA);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0X103C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X103C4);
	op_hex		(x,	1);
	create_insn	(x=0X103C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X103CC);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0X103D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X103D6);
	op_hex		(x,	1);
	create_insn	(x=0X103DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X103DE);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0X103E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X103E8);
	op_hex		(x,	1);
	create_insn	(x=0X103EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X103F0);
	op_stkvar	(x,	1);
	create_insn	(0X10404);
	create_insn	(x=0X1040A);
	op_stkvar	(x,	1);
	create_insn	(x=0X10410);
	op_stkvar	(x,	1);
	create_insn	(x=0X10414);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10418);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1041C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10420);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0X10422);
	op_stkvar	(x,	1);
	create_insn	(x=0X10426);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0X10428);
	op_stkvar	(x,	1);
	create_insn	(x=0X1042C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10430);
	op_stkvar	(x,	1);
	create_insn	(x=0X10432);
	op_stkvar	(x,	1);
	create_insn	(0X10446);
	create_insn	(x=0X1044A);
	op_stkvar	(x,	1);
	create_insn	(x=0X10450);
	op_stkvar	(x,	1);
	create_insn	(x=0X10454);
	op_stkvar	(x,	1);
	create_insn	(x=0X1045A);
	op_stkvar	(x,	1);
	create_insn	(0X1046E);
	create_insn	(x=0X10470);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10478);
	op_stkvar	(x,	1);
	create_insn	(x=0X1047C);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X1047E);
	op_stkvar	(x,	1);
	create_insn	(x=0X10482);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X10484);
	op_stkvar	(x,	1);
	create_insn	(x=0X10488);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X1048A);
	op_stkvar	(x,	1);
	create_insn	(x=0X10490);
	op_stkvar	(x,	1);
	create_dword	(x=0X104A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X104A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X104A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X104AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X104B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X104B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X104B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X104BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X104C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X104C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X104C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X104CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X104D0);
	create_insn	(0X104D4);
	create_insn	(0X104F6);
	create_insn	(x=0X104FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X104FE);
	op_stkvar	(x,	1);
	create_insn	(0X1050C);
	create_insn	(x=0X10510);
	op_stkvar	(x,	1);
	create_insn	(x=0X10518);
	op_stkvar	(x,	1);
	create_insn	(x=0X10520);
	op_stkvar	(x,	1);
	create_insn	(0X10534);
	create_insn	(0X1054C);
	create_insn	(x=0X10552);
	op_stkvar	(x,	1);
	create_insn	(0X10566);
	create_insn	(x=0X1056C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10570);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10576);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1057A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1057E);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0X10580);
	op_stkvar	(x,	1);
	create_insn	(x=0X10584);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0X10586);
	op_stkvar	(x,	1);
	create_insn	(x=0X1058A);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0X1058C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10590);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0X10596);
	op_stkvar	(x,	1);
	create_insn	(x=0X1059A);
	op_stkvar	(x,	1);
	create_insn	(0X105AA);
	create_insn	(x=0X105AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X105AE);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X105B2);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X105CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X105D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X105DA);
	op_stkvar	(x,	1);
	create_insn	(0X105EE);
	create_insn	(x=0X105F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X105F6);
	op_plain_offset	(x,	1,	0X10000150);
	op_plain_offset	(x,	129,	0X10000150);
	create_insn	(x=0X105FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1060C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10614);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10616);
	op_stkvar	(x,	1);
	create_insn	(x=0X1061A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0X10628);
	create_insn	(x=0X1063E);
	op_stkvar	(x,	1);
	create_insn	(x=0X10642);
	op_plain_offset	(x,	1,	0X10000150);
	op_plain_offset	(x,	129,	0X10000150);
	create_insn	(x=0X10644);
	op_stkvar	(x,	1);
	create_insn	(0X1064C);
	create_insn	(x=0X10662);
	op_stkvar	(x,	1);
	create_insn	(x=0X10666);
	op_plain_offset	(x,	1,	0X10000150);
	op_plain_offset	(x,	129,	0X10000150);
	create_insn	(x=0X10668);
	op_stkvar	(x,	1);
	create_insn	(x=0X10670);
	op_plain_offset	(x,	1,	0X10000150);
	op_plain_offset	(x,	129,	0X10000150);
	create_insn	(x=0X10678);
	op_plain_offset	(x,	1,	0X10000150);
	op_plain_offset	(x,	129,	0X10000150);
	create_insn	(0X1067E);
	create_insn	(x=0X10682);
	op_stkvar	(x,	1);
	create_insn	(x=0X10684);
	op_stkvar	(x,	1);
	create_insn	(0X10694);
	create_insn	(x=0X1069C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X106A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X106A2);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X106A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X106B4);
	op_plain_offset	(x,	1,	0X10002A08);
	op_plain_offset	(x,	129,	0X10002A08);
	create_insn	(x=0X106BE);
	op_plain_offset	(x,	1,	0X10002A08);
	op_plain_offset	(x,	129,	0X10002A08);
	create_insn	(x=0X106C2);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X106E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X106E8);
	op_plain_offset	(x,	1,	0X10002A08);
	op_plain_offset	(x,	129,	0X10002A08);
	create_insn	(x=0X106EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X106FE);
	op_stkvar	(x,	1);
	create_insn	(0X1070C);
	create_insn	(x=0X10712);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10716);
	op_stkvar	(x,	1);
	create_insn	(x=0X10718);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X1071A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1072E);
	op_plain_offset	(x,	1,	0X10002C2C);
	op_plain_offset	(x,	129,	0X10002C2C);
	create_insn	(x=0X1073A);
	op_plain_offset	(x,	1,	0X10002C2C);
	op_plain_offset	(x,	129,	0X10002C2C);
	create_insn	(x=0X10740);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10742);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10746);
	op_plain_offset	(x,	1,	0X100066E8);
	op_plain_offset	(x,	129,	0X100066E8);
	create_insn	(x=0X10748);
	op_plain_offset	(x,	1,	0X100066E8);
	op_plain_offset	(x,	129,	0X100066E8);
	create_insn	(x=0X10752);
	op_plain_offset	(x,	1,	0X100066E8);
	op_plain_offset	(x,	129,	0X100066E8);
	create_insn	(x=0X1075C);
	op_plain_offset	(x,	1,	0X100066E8);
	op_plain_offset	(x,	129,	0X100066E8);
	create_insn	(x=0X10764);
	op_plain_offset	(x,	1,	0X100066E8);
	op_plain_offset	(x,	129,	0X100066E8);
	create_insn	(0X10774);
	create_insn	(x=0X10776);
	op_stkvar	(x,	1);
	create_insn	(x=0X10778);
	op_plain_offset	(x,	1,	0X10002C2C);
	op_plain_offset	(x,	129,	0X10002C2C);
	create_insn	(x=0X10780);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10790);
	op_stkvar	(x,	1);
	create_insn	(0X1079C);
	create_insn	(x=0X107A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X107A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X107A8);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X107AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X107BE);
	op_plain_offset	(x,	1,	0X10002E50);
	op_plain_offset	(x,	129,	0X10002E50);
	create_insn	(x=0X107CA);
	op_plain_offset	(x,	1,	0X10002E50);
	op_plain_offset	(x,	129,	0X10002E50);
	create_insn	(x=0X107D0);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X107D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X107D6);
	op_plain_offset	(x,	1,	0X10006A08);
	op_plain_offset	(x,	129,	0X10006A08);
	create_insn	(x=0X107D8);
	op_plain_offset	(x,	1,	0X10006A08);
	op_plain_offset	(x,	129,	0X10006A08);
	create_insn	(x=0X107E2);
	op_plain_offset	(x,	1,	0X10006A08);
	op_plain_offset	(x,	129,	0X10006A08);
	create_insn	(x=0X107EC);
	op_plain_offset	(x,	1,	0X10006A08);
	op_plain_offset	(x,	129,	0X10006A08);
	create_insn	(x=0X107F4);
	op_plain_offset	(x,	1,	0X10006A08);
	op_plain_offset	(x,	129,	0X10006A08);
	create_insn	(0X10804);
	create_insn	(x=0X10806);
	op_stkvar	(x,	1);
	create_insn	(x=0X10808);
	op_plain_offset	(x,	1,	0X10002E50);
	op_plain_offset	(x,	129,	0X10002E50);
	create_insn	(x=0X10810);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10820);
	op_stkvar	(x,	1);
	create_insn	(0X10828);
	create_insn	(x=0X1082C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10830);
	op_stkvar	(x,	1);
	create_insn	(x=0X10832);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10834);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10844);
	op_plain_offset	(x,	1,	0X10002F74);
	op_plain_offset	(x,	129,	0X10002F74);
	create_insn	(x=0X1084E);
	op_plain_offset	(x,	1,	0X10002F74);
	op_plain_offset	(x,	129,	0X10002F74);
	create_insn	(x=0X10852);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10854);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1085A);
	op_plain_offset	(x,	1,	0X1000411A);
	op_plain_offset	(x,	129,	0X1000411A);
	create_insn	(x=0X1085E);
	op_hex		(x,	1);
	create_insn	(x=0X1086A);
	op_plain_offset	(x,	1,	0X1000411A);
	op_plain_offset	(x,	129,	0X1000411A);
	create_insn	(x=0X10874);
	op_plain_offset	(x,	1,	0X1000411A);
	op_plain_offset	(x,	129,	0X1000411A);
	create_insn	(x=0X1087E);
	op_stkvar	(x,	1);
	create_insn	(x=0X10880);
	op_plain_offset	(x,	1,	0X10002F74);
	op_plain_offset	(x,	129,	0X10002F74);
	create_insn	(x=0X10886);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10896);
	op_stkvar	(x,	1);
	create_insn	(0X108A0);
	create_insn	(x=0X108A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X108B6);
	create_insn	(x=0X108B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X108CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X108CC);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0X108D0);
	create_insn	(x=0X108D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X108DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X108DC);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X108DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X108F2);
	op_plain_offset	(x,	1,	0X10003198);
	op_plain_offset	(x,	129,	0X10003198);
	create_insn	(x=0X108FE);
	op_plain_offset	(x,	1,	0X10003198);
	op_plain_offset	(x,	129,	0X10003198);
	create_insn	(x=0X10904);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10906);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1090A);
	op_plain_offset	(x,	1,	0X100064C8);
	op_plain_offset	(x,	129,	0X100064C8);
	create_insn	(x=0X1090C);
	op_plain_offset	(x,	1,	0X100064C8);
	op_plain_offset	(x,	129,	0X100064C8);
	create_insn	(x=0X10916);
	op_plain_offset	(x,	1,	0X100064C8);
	op_plain_offset	(x,	129,	0X100064C8);
	create_insn	(x=0X10920);
	op_plain_offset	(x,	1,	0X100064C8);
	op_plain_offset	(x,	129,	0X100064C8);
	create_insn	(x=0X10928);
	op_plain_offset	(x,	1,	0X100064C8);
	op_plain_offset	(x,	129,	0X100064C8);
	create_dword	(0X10934);
	create_dword	(x=0X10938);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1093C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10940);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10944);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10948);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1094C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10950);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10954);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10958);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1095C);
	make_array	(0X1095C,	0X2);
	create_dword	(x=0X10964);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10968);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1096C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X10970);
	create_insn	(0X10976);
	create_insn	(x=0X10978);
	op_stkvar	(x,	1);
	create_insn	(x=0X1097A);
	op_plain_offset	(x,	1,	0X10003198);
	op_plain_offset	(x,	129,	0X10003198);
	create_insn	(x=0X10982);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10992);
	op_stkvar	(x,	1);
	create_insn	(0X1099A);
	create_insn	(x=0X1099E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X109A6);
	op_plain_offset	(x,	1,	0X10006278);
	op_plain_offset	(x,	129,	0X10006278);
	create_insn	(x=0X109AA);
	op_plain_offset	(x,	1,	0X10006278);
	op_plain_offset	(x,	129,	0X10006278);
	create_insn	(x=0X109B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X109B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X109C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X109C4);
	op_plain_offset	(x,	1,	0X10006278);
	op_plain_offset	(x,	129,	0X10006278);
	create_insn	(x=0X109D2);
	op_plain_offset	(x,	1,	0X10006278);
	op_plain_offset	(x,	129,	0X10006278);
	create_insn	(x=0X109D8);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X109EA);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	set_cmt	(0X109EE,	"jumptable 00010A78 default case",	1);
	set_name	(0X109EE,	"def_6A78");
	create_insn	(0X109F6);
	create_insn	(x=0X10A00);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0X10A06);
	create_insn	(x=0X10A0C);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10A12);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10A1A);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10A22);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10A2A);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10A32);
	op_plain_offset	(x,	1,	0X100031BC);
	op_plain_offset	(x,	129,	0X100031BC);
	create_insn	(x=0X10A36);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10A46);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10A4C);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10A52);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0X10A5C);
	create_insn	(x=0X10A6E);
	op_plain_offset	(x,	1,	0X100031BC);
	op_plain_offset	(x,	129,	0X100031BC);
	set_cmt	(0X10A72,	"switch 5 cases ",	0);
	set_cmt	(0X10A78,	"switch jump",	0);
	set_cmt	(0X10A7C,	"jump table for switch statement",	0);
	create_byte	(0X10A7C);
	set_name	(0X10A7C,	"jpt_6A78");
	create_byte	(0X10A7D);
	create_byte	(0X10A7E);
	create_byte	(0X10A7F);
	create_byte	(0X10A80);
	set_cmt	(0X10A82,	"jumptable 00010A78 case 2",	1);
	create_insn	(0X10A82);
	set_cmt	(0X10A84,	"jumptable 00010A78 case 3",	1);
	create_insn	(x=0X10A84);
	op_plain_offset	(x,	1,	0X100031BC);
	op_plain_offset	(x,	129,	0X100031BC);
	create_insn	(x=0X10A8E);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X10A90);
	op_hex		(x,	1);
	create_insn	(x=0X10A94);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X10A98);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X10A9A);
	op_hex		(x,	1);
	set_cmt	(0X10AA0,	"jumptable 00010A78 case 4",	1);
	create_insn	(x=0X10AA0);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X10AAA);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(0X10AB6);
	create_insn	(x=0X10ABA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X10AC2,	"jumptable 00010A78 case 5",	1);
	create_insn	(x=0X10AC2);
	op_plain_offset	(x,	1,	0X100031BC);
	op_plain_offset	(x,	129,	0X100031BC);
	create_insn	(x=0X10AC4);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	set_cmt	(0X10AC8,	"jumptable 00010A78 case 6",	1);
	create_insn	(x=0X10AC8);
	op_plain_offset	(x,	1,	0X100031BC);
	op_plain_offset	(x,	129,	0X100031BC);
	create_insn	(x=0X10ACC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10AD2);
	op_plain_offset	(x,	1,	0X100031BC);
	op_plain_offset	(x,	129,	0X100031BC);
	create_insn	(x=0X10AD4);
	op_plain_offset	(x,	1,	0X100031BC);
	op_plain_offset	(x,	129,	0X100031BC);
	create_insn	(x=0X10AD8);
	op_hex		(x,	1);
	create_insn	(x=0X10AE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10AE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10AEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10AEE);
	op_hex		(x,	1);
	create_insn	(x=0X10AF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10AF6);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0X10AF8);
	op_hex		(x,	1);
	create_insn	(x=0X10AFC);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0X10B00);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10B04);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0X10B0A);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(0X10B10);
	create_insn	(x=0X10B14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10B1C);
	op_plain_offset	(x,	1,	0X100060C8);
	op_plain_offset	(x,	129,	0X100060C8);
	create_insn	(x=0X10B20);
	op_plain_offset	(x,	1,	0X100060C8);
	op_plain_offset	(x,	129,	0X100060C8);
	create_insn	(x=0X10B26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10B2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10B3A);
	op_plain_offset	(x,	1,	0X100060C8);
	op_plain_offset	(x,	129,	0X100060C8);
	create_insn	(x=0X10B48);
	op_plain_offset	(x,	1,	0X100060C8);
	op_plain_offset	(x,	129,	0X100060C8);
	create_insn	(x=0X10B52);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10B56);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10B64);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10B80);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10B84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X10BA2);
	create_insn	(x=0X10BAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10BC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10BCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10BD0);
	op_hex		(x,	1);
	create_insn	(x=0X10BD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10BDA);
	op_hex		(x,	1);
	create_insn	(0X10BEA);
	create_insn	(0X10BEE);
	create_insn	(x=0X10BF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10BF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X10BF8);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10BFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10C10);
	op_plain_offset	(x,	1,	0X10003350);
	op_plain_offset	(x,	129,	0X10003350);
	create_insn	(x=0X10C1A);
	op_plain_offset	(x,	1,	0X10003350);
	op_plain_offset	(x,	129,	0X10003350);
	create_insn	(x=0X10C20);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10C24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10C28);
	op_plain_offset	(x,	1,	0X10006258);
	op_plain_offset	(x,	129,	0X10006258);
	create_insn	(x=0X10C2A);
	op_plain_offset	(x,	1,	0X10006258);
	op_plain_offset	(x,	129,	0X10006258);
	create_insn	(x=0X10C34);
	op_plain_offset	(x,	1,	0X10006258);
	op_plain_offset	(x,	129,	0X10006258);
	create_insn	(x=0X10C3A);
	op_plain_offset	(x,	1,	0X10006258);
	op_plain_offset	(x,	129,	0X10006258);
	create_insn	(x=0X10C42);
	op_plain_offset	(x,	1,	0X10006258);
	op_plain_offset	(x,	129,	0X10006258);
	create_insn	(0X10C52);
	create_insn	(x=0X10C54);
	op_stkvar	(x,	1);
	create_insn	(x=0X10C56);
	op_plain_offset	(x,	1,	0X10003350);
	op_plain_offset	(x,	129,	0X10003350);
	create_insn	(x=0X10C5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10C6E);
	op_stkvar	(x,	1);
	create_insn	(0X10C78);
	create_insn	(x=0X10C7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10C82);
	op_stkvar	(x,	1);
	create_insn	(x=0X10C84);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10C88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10C96);
	op_plain_offset	(x,	1,	0X10003574);
	op_plain_offset	(x,	129,	0X10003574);
	create_insn	(x=0X10CA0);
	op_plain_offset	(x,	1,	0X10003574);
	op_plain_offset	(x,	129,	0X10003574);
	create_insn	(x=0X10CA4);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10CB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10CB6);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0X10CB8);
	op_hex		(x,	1);
	create_insn	(x=0X10CBC);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0X10CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X10CCE);
	op_plain_offset	(x,	1,	0X10003574);
	op_plain_offset	(x,	129,	0X10003574);
	create_insn	(x=0X10CD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10CE0);
	op_stkvar	(x,	1);
	create_insn	(0X10CEC);
	create_insn	(x=0X10CEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10CF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10CF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10CFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10D10);
	op_plain_offset	(x,	1,	0X1000046D);
	op_plain_offset	(x,	129,	0X1000046D);
	create_insn	(x=0X10D12);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D32);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X10D60);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_dword	(x=0X10D6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10D70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10D74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10D78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10D7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10D80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10D84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10D88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10D8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10D90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10D94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10D98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X10D9C,	0X10DA1);
	set_name	(0X10D9C,	"a_2x");
	create_byte	(0X10DA1);
	make_array	(0X10DA1,	0X3);
	create_dword	(x=0X10DA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10DA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10DAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X10DB0);
	create_dword	(x=0X10DB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10DB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X10DBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X10DC0);
	create_insn	(0X10DC2);
	create_insn	(x=0X10DD2);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X10DE0);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10DE6);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X10DEE);
	op_plain_offset	(x,	1,	0X100000B8);
	op_plain_offset	(x,	129,	0X100000B8);
	create_insn	(x=0X10DFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10E00);
	op_plain_offset	(x,	1,	0X100066E8);
	op_plain_offset	(x,	129,	0X100066E8);
	create_dword	(x=0X10E34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10E38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10E42);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X10E44);
	op_hex		(x,	1);
	create_insn	(x=0X10E48);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X10E4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X10E56);
	create_insn	(x=0X10E58);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X10E5A);
	op_hex		(x,	1);
	create_insn	(x=0X10E60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10E6C);
	op_hex		(x,	1);
	create_insn	(x=0X10E74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X10E7E);
	create_insn	(x=0X10E80);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X10E82);
	op_hex		(x,	1);
	create_insn	(x=0X10E88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10E92);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X10E94);
	op_hex		(x,	1);
	create_insn	(x=0X10E98);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X10E9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X10EA6);
	create_insn	(x=0X10EA8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X10EAA);
	op_hex		(x,	1);
	create_insn	(x=0X10EB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10EB8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X10EBA);
	op_hex		(x,	1);
	create_insn	(x=0X10EBE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X10EC2);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X10EC4);
	op_hex		(x,	1);
	create_insn	(x=0X10EC8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X10ECC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10ED4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X10ED6);
	op_hex		(x,	1);
	create_insn	(x=0X10EDC);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X10EDE);
	op_hex		(x,	1);
	create_insn	(0X10EE4);
	create_insn	(x=0X10EE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10EEE);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X10EF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X10F0C);
	create_insn	(x=0X10F12);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X10F16);
	op_plain_offset	(x,	1,	0X10000074);
	op_plain_offset	(x,	129,	0X10000074);
	create_insn	(0X10F1E);
	create_insn	(x=0X10F52);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X10F5C);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X10F5E);
	op_plain_offset	(x,	1,	0X10000074);
	op_plain_offset	(x,	129,	0X10000074);
	create_insn	(0X10F64);
	create_insn	(x=0X10F9A);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X10FAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X10FBA);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X10FC0);
	op_plain_offset	(x,	1,	0X10000074);
	op_plain_offset	(x,	129,	0X10000074);
	create_insn	(0X10FC6);
	create_insn	(0X11010);
	create_insn	(0X11042);
	create_insn	(0X11056);
	create_insn	(0X110D0);
	create_insn	(x=0X110D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X110DA);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X110DE);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X110EA);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X110FA);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	set_cmt	(0X11106,	"switch 5 cases ",	0);
	set_cmt	(0X1110C,	"switch jump",	0);
	set_cmt	(0X11110,	"jump table for switch statement",	0);
	create_byte	(0X11110);
	set_name	(0X11110,	"jpt_710C");
	create_byte	(0X11111);
	create_byte	(0X11112);
	create_byte	(0X11113);
	create_byte	(0X11114);
	set_cmt	(0X11116,	"jumptable 0001110C case 0",	1);
	create_insn	(x=0X11116);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11126);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(0X1112C);
	create_insn	(x=0X11130);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(0X11136);
	create_insn	(x=0X1113E);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(0X11144);
	create_insn	(x=0X11146);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	set_cmt	(0X1114A,	"jumptable 0001110C case 1",	1);
	create_insn	(0X1114A);
	create_insn	(x=0X11150);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X1115E);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11162);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11164);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	set_cmt	(0X1116A,	"jumptable 0001110C case 2",	1);
	create_insn	(0X1116A);
	create_insn	(x=0X11170);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X1117E);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11182);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11184);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	set_cmt	(0X1118A,	"jumptable 0001110C case 3",	1);
	create_insn	(0X1118A);
	create_insn	(x=0X11192);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X111A0);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X111A4);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X111A6);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	set_cmt	(0X111AC,	"jumptable 0001110C case 4",	1);
	create_insn	(0X111AC);
	create_insn	(x=0X111B2);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(0X111C0);
	create_insn	(0X111C2);
	create_insn	(x=0X111C4);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X111C8);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X111CC);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X111CE);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	set_cmt	(0X111D0,	"jumptable 0001110C default case",	1);
	create_insn	(x=0X111D0);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	set_name	(0X111D0,	"def_710C");
	create_insn	(0X111D6);
	create_insn	(0X111DE);
	create_insn	(0X111E4);
	create_insn	(0X11208);
	create_dword	(x=0X11220);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11224);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11228);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1122C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11230);
	create_insn	(0X11242);
	create_insn	(0X11258);
	create_insn	(x=0X1125A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1125C);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11264);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X1126A);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X1126C);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11274);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11276);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11284);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X1128E);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X112A0);
	op_hex		(x,	1);
	create_insn	(0X112B0);
	create_insn	(x=0X112B8);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(0X112BC);
	create_insn	(x=0X112BE);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X112C0);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(0X112C6);
	create_insn	(x=0X112C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X112CC);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X112D0);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X112D4);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X112E0);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X112E2);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X112E4);
	op_hex		(x,	1);
	create_insn	(x=0X112E8);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X112EC);
	op_hex		(x,	1);
	create_insn	(x=0X112F0);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(0X112F8);
	create_insn	(x=0X112FE);
	op_hex		(x,	1);
	create_insn	(x=0X11302);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X1130E);
	op_hex		(x,	1);
	create_insn	(x=0X11314);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11316);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X1131A);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X1131C);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(0X11320);
	create_insn	(x=0X11322);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1132E);
	op_hex		(x,	1);
	create_insn	(x=0X1134A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1135A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1135C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X11366);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11368);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X11372);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11374);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0X1137E);
	create_insn	(0X1138A);
	create_insn	(x=0X1138C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1139A);
	op_hex		(x,	1);
	create_insn	(x=0X113B6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X113C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X113CA);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X113D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X113D8);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X113E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X113E6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0X113F2);
	create_insn	(x=0X113FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11400);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11402);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11404);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11406);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X1140A);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11412);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11418);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(0X1141C);
	create_insn	(x=0X11422);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11424);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X1142A);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11430);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11432);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11436);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(0X11442);
	create_insn	(x=0X11448);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X1144C);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11450);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11452);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(0X11456);
	create_insn	(x=0X1145C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1145E);
	op_stkvar	(x,	1);
	create_insn	(x=0X11476);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1147A);
	op_hex		(x,	1);
	create_insn	(x=0X1147E);
	op_plain_offset	(x,	1,	0X2009C040);
	op_plain_offset	(x,	129,	0X2009C040);
	create_insn	(x=0X11482);
	op_plain_offset	(x,	1,	0X2009C020);
	op_plain_offset	(x,	129,	0X2009C020);
	create_insn	(x=0X11484);
	op_hex		(x,	1);
	create_insn	(x=0X11488);
	op_plain_offset	(x,	1,	0X2009C020);
	op_plain_offset	(x,	129,	0X2009C020);
	create_insn	(x=0X1148A);
	op_plain_offset	(x,	1,	0X2009C020);
	op_plain_offset	(x,	129,	0X2009C020);
	create_insn	(x=0X1148C);
	op_hex		(x,	1);
	create_insn	(x=0X11490);
	op_plain_offset	(x,	1,	0X2009C020);
	op_plain_offset	(x,	129,	0X2009C020);
	create_insn	(x=0X11494);
	op_hex		(x,	1);
	create_insn	(x=0X1149C);
	op_hex		(x,	1);
	create_insn	(x=0X114A4);
	op_hex		(x,	1);
	create_insn	(x=0X114AC);
	op_hex		(x,	1);
	create_insn	(x=0X114B2);
	op_plain_offset	(x,	1,	0X2009C020);
	op_plain_offset	(x,	129,	0X2009C020);
	create_insn	(x=0X114B4);
	op_hex		(x,	1);
	create_insn	(x=0X114B8);
	op_plain_offset	(x,	1,	0X2009C020);
	op_plain_offset	(x,	129,	0X2009C020);
	create_insn	(x=0X114BC);
	op_hex		(x,	1);
	create_insn	(x=0X114C4);
	op_hex		(x,	1);
	create_insn	(x=0X114CA);
	op_plain_offset	(x,	1,	0X2009C020);
	op_plain_offset	(x,	129,	0X2009C020);
	create_insn	(x=0X114CC);
	op_hex		(x,	1);
	create_insn	(x=0X114D0);
	op_plain_offset	(x,	1,	0X2009C020);
	op_plain_offset	(x,	129,	0X2009C020);
	create_insn	(x=0X114DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X114E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X114EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11500);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11508);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11516);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0X1151C);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0X1152A);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0X11530);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0X11536);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0X11540);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0X11546);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0X1154C);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0X11556);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0X1155C);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0X11562);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0X1156C);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0X11572);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0X11578);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0X1158E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11598);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0X1159E);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0X115AC);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0X115B2);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0X115B8);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0X115C2);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0X115C8);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0X115CE);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0X115D8);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0X115DE);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0X115E4);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0X115EE);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0X115F4);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(0X115FC);
	create_insn	(x=0X115FE);
	op_plain_offset	(x,	1,	0X100001C2);
	op_plain_offset	(x,	129,	0X100001C2);
	create_insn	(x=0X11608);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11616);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11624);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11630);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11636);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X11652,	0X2);
	create_dword	(x=0X11654);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X11658);
	create_dword	(x=0X1165C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11660);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11664);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11668);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1166C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X11670);
	create_insn	(x=0X11674);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1167E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X11688);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X116A4);
	create_insn	(0X116BA);
	create_insn	(0X116D4);
	create_insn	(0X116D8);
	create_insn	(x=0X116E6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X116EE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X116F6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X116FE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1170A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X11712);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X1171E);
	create_insn	(x=0X1172A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1172C);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X1172E);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11730);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X11744);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X1174C);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11750);
	op_hex		(x,	1);
	create_insn	(x=0X11754);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X11760);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1176C);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X1176E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X11774);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X1177C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X11788);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X11794);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X11798);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X117A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X117A8);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X117C0);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X117D2);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X117DE);
	op_hex		(x,	1);
	create_insn	(0X117E4);
	create_insn	(x=0X117E6);
	op_hex		(x,	1);
	create_insn	(x=0X117EC);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X117F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X117FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X11820);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11822);
	op_stkvar	(x,	1);
	create_insn	(x=0X11826);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X1182E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1183C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1183E);
	op_stkvar	(x,	1);
	create_insn	(x=0X11886);
	op_stkvar	(x,	1);
	create_insn	(x=0X11888);
	op_stkvar	(x,	1);
	create_insn	(x=0X1188A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1188E);
	op_stkvar	(x,	1);
	create_insn	(x=0X11894);
	op_plain_offset	(x,	1,	0X10000196);
	op_plain_offset	(x,	129,	0X10000196);
	create_insn	(x=0X118A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X118A8);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0X118AC);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0X118B0);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0X118BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X118BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X118C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X118C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X118C8);
	op_plain_offset	(x,	1,	0X100026F0);
	op_plain_offset	(x,	129,	0X100026F0);
	create_insn	(x=0X118CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X118CC);
	op_plain_offset	(x,	1,	0X100026F0);
	op_plain_offset	(x,	129,	0X100026F0);
	create_insn	(x=0X118CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X118D2);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X118DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X118E6);
	op_stkvar	(x,	1);
	create_insn	(0X118F0);
	create_insn	(x=0X118F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X118FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X11902);
	op_stkvar	(x,	1);
	create_insn	(x=0X1190A);
	op_hex		(x,	1);
	create_insn	(x=0X11912);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0X11916);
	op_stkvar	(x,	1);
	create_insn	(x=0X11920);
	op_hex		(x,	1);
	create_insn	(x=0X1192E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1193E);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11948);
	op_hex		(x,	1);
	create_insn	(x=0X11958);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11962);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X1196C);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X1196E);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11972);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11974);
	op_plain_offset	(x,	1,	0X1000019E);
	op_plain_offset	(x,	129,	0X1000019E);
	create_insn	(x=0X11982);
	op_stkvar	(x,	1);
	create_insn	(x=0X11986);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X1198C);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11990);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11994);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X119A4);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X119BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X119C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X119C4);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X119C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X119CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X119D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X119D6);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X119D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X119DC);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X119DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X119E2);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X119E6);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X119E8);
	op_plain_offset	(x,	1,	0X100044FE);
	op_plain_offset	(x,	129,	0X100044FE);
	create_insn	(x=0X119F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X119FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11A22);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11A26);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A30);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11A32);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A36);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A50);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11A52);
	op_stkvar	(x,	1);
	create_insn	(x=0X11A5A);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11A5C);
	op_stkvar	(x,	1);
	create_insn	(0X11A66);
	create_dword	(x=0X11A68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11A6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11A70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11A74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11A78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X11A7C);
	create_dword	(x=0X11A80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11A84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11A88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11A8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11A90);
	create_insn	(0X11A92);
	create_insn	(x=0X11A94);
	op_stkvar	(x,	1);
	create_insn	(x=0X11AAA);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(0X11AAE);
	create_insn	(x=0X11AB2);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11AB8);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(0X11ABE);
	create_insn	(x=0X11AD4);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X11AEE);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11AF0);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11AFA);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11B00);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(0X11B06);
	create_insn	(0X11B08);
	create_insn	(0X11B0A);
	create_insn	(x=0X11B20);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X11B3A);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11B3C);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11B46);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11B4C);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11B50);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X11B6A);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11B6C);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11B74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11B82);
	op_stkvar	(x,	1);
	create_insn	(x=0X11B98);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11B9C);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11BA0);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11BA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X11BB8);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11BBA);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11BBE);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11BC0);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11BC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X11BD8);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11BDA);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11BE4);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11BE8);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11BEA);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11BEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11BF6);
	op_plain_offset	(x,	1,	0X1000000E);
	op_plain_offset	(x,	129,	0X1000000E);
	create_insn	(x=0X11C00);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11C02);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11C04);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11C06);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C28);
	op_stkvar	(x,	1);
	create_insn	(0X11C2E);
	create_insn	(x=0X11C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C34);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11C36);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C3A);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C40);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11C42);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C46);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C4C);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11C4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C52);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11C54);
	op_stkvar	(x,	1);
	create_insn	(0X11C5A);
	create_insn	(x=0X11C5C);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11C5E);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11C60);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11C62);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X11C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C78);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11C7A);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C82);
	op_stkvar	(x,	1);
	create_insn	(x=0X11C9C);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11C9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X11CB8);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11CBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X11CD4);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11CD6);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11CD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11CE2);
	op_plain_offset	(x,	1,	0X100044FE);
	op_plain_offset	(x,	129,	0X100044FE);
	create_insn	(x=0X11CEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11CEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X11CF8);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11CFA);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X11D02);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(0X11D0A);
	create_insn	(x=0X11D0C);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11D0E);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11D10);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11D12);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11D14);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11D16);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11D1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11D22);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11D4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D58);
	op_plain_offset	(x,	1,	0X10003C0A);
	op_plain_offset	(x,	129,	0X10003C0A);
	create_insn	(x=0X11D5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D5E);
	op_plain_offset	(x,	1,	0X10003C0A);
	op_plain_offset	(x,	129,	0X10003C0A);
	create_insn	(x=0X11D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D64);
	op_plain_offset	(x,	1,	0X10003C0A);
	op_plain_offset	(x,	129,	0X10003C0A);
	create_insn	(x=0X11D66);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D6A);
	op_plain_offset	(x,	1,	0X10003C0A);
	op_plain_offset	(x,	129,	0X10003C0A);
	create_insn	(x=0X11D76);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D7A);
	op_plain_offset	(x,	1,	0X10003C0A);
	op_plain_offset	(x,	129,	0X10003C0A);
	create_insn	(x=0X11D7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X11D9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DAC);
	op_hex		(x,	1);
	create_insn	(x=0X11DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DBC);
	op_hex		(x,	1);
	create_insn	(x=0X11DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DCC);
	op_hex		(x,	1);
	create_insn	(x=0X11DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DD4);
	op_stkvar	(x,	1);
	create_insn	(0X11DDC);
	create_insn	(0X11DDE);
	create_insn	(x=0X11DE2);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11DE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X11DEE);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X11DF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11E08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11E16);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E22);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E68);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11E6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E72);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X11E86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E90);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E92);
	op_stkvar	(x,	1);
	create_insn	(x=0X11E98);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11E9A);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X11EA2);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X11EA8);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X11EC4);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X11EC6);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11EC8);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X11EE2);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X11EEA);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X11EF0);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X11EF2);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X11F02);
	op_stkvar	(x,	1);
	create_insn	(x=0X11F0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11F0E);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X11F10);
	op_hex		(x,	1);
	create_insn	(x=0X11F16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11F18);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X11F1A);
	op_hex		(x,	1);
	create_insn	(x=0X11F1E);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X11F20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11F22);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11F26);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X11F2E);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11F36);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11F3A);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X11F3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11F40);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X11F46);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X11F58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11F60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11F6A);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_dword	(x=0X11F70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11F74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11F78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11F7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11F80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11F84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11F88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11F8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11F90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11F94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11F98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X11F9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11FA0);
	create_insn	(x=0X11FA6);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X11FA8);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X11FBE);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X11FCA);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X11FD6);
	op_hex		(x,	1);
	create_insn	(0X11FDC);
	create_insn	(0X11FDE);
	create_insn	(x=0X11FE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11FE4);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X11FF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X11FFA);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X12002);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X1200A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12012);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12020);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12026);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1202E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12032);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12034);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1203C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X12040);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X1204A);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X1204E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12056);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X1205E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12060);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X12066);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X12068);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1206A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1206E);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X12072);
	op_plain_offset	(x,	1,	0X10003C00);
	op_plain_offset	(x,	129,	0X10003C00);
	create_insn	(x=0X12074);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X12078);
	op_plain_offset	(x,	1,	0X10003C00);
	op_plain_offset	(x,	129,	0X10003C00);
	create_insn	(x=0X1207A);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X12080);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X12084);
	op_plain_offset	(x,	1,	0X100044FE);
	op_plain_offset	(x,	129,	0X100044FE);
	create_insn	(x=0X1208C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1208E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12090);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1209C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X120B2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0X120BC);
	create_insn	(x=0X120C4);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X120CA);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0X120D0);
	create_insn	(0X120D4);
	create_insn	(0X120D6);
	create_insn	(x=0X120DC);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X120E4);
	op_plain_offset	(x,	1,	0X100044FE);
	op_plain_offset	(x,	129,	0X100044FE);
	create_insn	(x=0X120EA);
	op_plain_offset	(x,	1,	0X100044FE);
	op_plain_offset	(x,	129,	0X100044FE);
	create_insn	(x=0X120F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X120F8);
	op_plain_offset	(x,	1,	0X100035C8);
	op_plain_offset	(x,	129,	0X100035C8);
	create_insn	(x=0X1210A);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X1210E);
	op_stkvar	(x,	1);
	create_insn	(0X12116);
	create_insn	(0X1211A);
	create_insn	(x=0X1211C);
	op_stkvar	(x,	1);
	create_insn	(0X12124);
	create_insn	(x=0X12126);
	op_stkvar	(x,	1);
	create_insn	(x=0X12128);
	op_stkvar	(x,	1);
	create_insn	(x=0X1212E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12132);
	op_plain_offset	(x,	1,	0X100035C8);
	op_plain_offset	(x,	129,	0X100035C8);
	create_insn	(x=0X12158);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1215C);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X12162);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X12166);
	op_hex		(x,	1);
	create_insn	(x=0X1216A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1216C);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X12172);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12178);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X1217C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12180);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12188);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12192);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1219A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X121AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X121B0);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X121B6);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X121B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X121BE);
	op_plain_offset	(x,	1,	0X100026FC);
	op_plain_offset	(x,	129,	0X100026FC);
	create_insn	(x=0X121C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X121CC);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X121D2);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X121D6);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X121E2);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X121E8);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_insn	(x=0X121EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X121EE);
	op_plain_offset	(x,	1,	0X10000160);
	op_plain_offset	(x,	129,	0X10000160);
	create_dword	(x=0X121FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12200);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12204);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12208);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1220C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12210);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12214);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12218);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1221C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12220);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12224);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12228);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1222C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X12230);
	create_insn	(x=0X12234);
	op_stkvar	(x,	1);
	create_insn	(0X12246);
	create_insn	(x=0X12254);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12256);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1225A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1225E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12260);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12276);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X1227A);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X12282);
	op_hex		(x,	1);
	create_insn	(0X1228A);
	create_insn	(x=0X122A0);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X122B0);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X122B2);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0X122B6);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X122C0);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X122C4);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X122C6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X122CA);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X122CC);
	op_plain_offset	(x,	1,	0X100001FC);
	op_plain_offset	(x,	129,	0X100001FC);
	create_insn	(x=0X122CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X122D2);
	op_plain_offset	(x,	1,	0X100001FC);
	op_plain_offset	(x,	129,	0X100001FC);
	create_insn	(x=0X122D4);
	op_plain_offset	(x,	1,	0X100001FC);
	op_plain_offset	(x,	129,	0X100001FC);
	create_insn	(x=0X122D6);
	op_plain_offset	(x,	1,	0X100001FC);
	op_plain_offset	(x,	129,	0X100001FC);
	create_insn	(x=0X122DC);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X122E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X122E6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X122EA);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X122F2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X122F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X122F8);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X122FC);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X12300);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12308);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12314);
	op_hex		(x,	1);
	create_insn	(x=0X1231A);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0X1231E);
	op_hex		(x,	1);
	create_insn	(x=0X12322);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0X12326);
	op_plain_offset	(x,	1,	0X1000063E);
	op_plain_offset	(x,	129,	0X1000063E);
	create_insn	(x=0X12330);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0X12336);
	create_insn	(0X1233E);
	create_insn	(x=0X12340);
	op_hex		(x,	1);
	create_insn	(x=0X1234C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1234E);
	op_hex		(x,	1);
	create_insn	(x=0X12352);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X12354);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X12356);
	op_hex		(x,	1);
	create_insn	(x=0X1235A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1235C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1235E);
	op_hex		(x,	1);
	create_insn	(x=0X12362);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X12364);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X12366);
	op_hex		(x,	1);
	create_insn	(x=0X1236A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1236C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12372);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12374);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1237E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12382);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12388);
	op_stkvar	(x,	1);
	create_insn	(x=0X1238A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12390);
	op_stkvar	(x,	1);
	create_insn	(x=0X12396);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1239C);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X123A0);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X123B0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X123BA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X123BC);
	op_hex		(x,	1);
	create_insn	(x=0X123C0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X123C4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X123C6);
	op_hex		(x,	1);
	create_insn	(x=0X123CA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X123CC);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X123D2);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X123D4);
	op_hex		(x,	1);
	create_insn	(x=0X123D8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X123DC);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X123DE);
	op_hex		(x,	1);
	create_insn	(x=0X123E2);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X123E4);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X123F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X123F2);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X12408);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X1240A);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(0X12412);
	create_insn	(x=0X12418);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X1241E);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X12422);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X12440);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X12444);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1244C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12452);
	op_stkvar	(x,	1);
	create_insn	(x=0X1245A);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X12464);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0X12472);
	create_insn	(0X12478);
	create_insn	(x=0X1247A);
	op_stkvar	(x,	1);
	create_insn	(x=0X12480);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X12488);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X1248A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1248C);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X124A2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X124B2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X124BC);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X124CC);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X124D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X124EE);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X124FE);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X12518);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1251C);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X12522);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X12526);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X1252C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X12530);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X12538);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X1253A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1253E);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_insn	(x=0X12540);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X12544);
	op_plain_offset	(x,	1,	0X100001E8);
	op_plain_offset	(x,	129,	0X100001E8);
	create_dword	(x=0X1254C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12550);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12554);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12558);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1255C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X12560,	0X12582);
	set_name	(0X12560,	"aXXXXXXXXXXX");
	make_array	(0X12582,	0X2);
	create_dword	(x=0X12584);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X12588,	0X12590);
	set_name	(0X12588,	"aAmcSem");
	create_dword	(x=0X12590);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12594);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12598);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1259C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X125A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X125A4);
	create_insn	(0X125B0);
	create_insn	(0X125B6);
	create_insn	(0X125C8);
	create_insn	(0X12634);
	create_insn	(0X12690);
	create_insn	(x=0X1269C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1269E);
	op_hex		(x,	1);
	create_insn	(x=0X126A2);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X126AA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X126AE);
	op_hex		(x,	1);
	create_insn	(x=0X126B2);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X126B4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X126C4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X126C6);
	op_hex		(x,	1);
	create_insn	(x=0X126CA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X126D2);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X126D4);
	op_hex		(x,	1);
	create_insn	(x=0X126D8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X126E6);
	create_insn	(x=0X126EE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X126F0);
	op_hex		(x,	1);
	create_insn	(x=0X126F4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X12702);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X12704);
	op_hex		(x,	1);
	create_insn	(x=0X12708);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X12714);
	create_insn	(x=0X12718);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_2(void) {
        auto x;
#define id x

	create_insn	(x=0X1271A);
	op_hex		(x,	1);
	create_insn	(x=0X1271E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1272A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1272C);
	op_hex		(x,	1);
	create_insn	(x=0X12730);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X12734);
	create_insn	(x=0X1273E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X12742);
	op_hex		(x,	1);
	create_insn	(x=0X12746);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X12750);
	create_insn	(x=0X12760);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X12762);
	op_hex		(x,	1);
	create_insn	(x=0X12766);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X1276E);
	create_insn	(x=0X1277A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1277C);
	op_hex		(x,	1);
	create_insn	(x=0X12780);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1278A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1278C);
	op_hex		(x,	1);
	create_insn	(x=0X12790);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X12792);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X12794);
	op_hex		(x,	1);
	create_insn	(x=0X12798);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1279A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1279C);
	op_hex		(x,	1);
	create_insn	(x=0X127A0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X127A4);
	create_insn	(x=0X127B0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X127B2);
	op_hex		(x,	1);
	create_insn	(x=0X127B6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X127C0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X127C2);
	op_hex		(x,	1);
	create_insn	(x=0X127C6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X127C8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X127CA);
	op_hex		(x,	1);
	create_insn	(x=0X127CE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X127D0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X127D2);
	op_hex		(x,	1);
	create_insn	(x=0X127D6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X127DA);
	create_insn	(0X127E0);
	create_insn	(x=0X127EA);
	op_hex		(x,	1);
	create_insn	(0X127F4);
	create_insn	(0X12802);
	create_insn	(x=0X1280A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12818);
	op_hex		(x,	1);
	create_insn	(x=0X12838);
	op_hex		(x,	1);
	create_insn	(x=0X1284C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1286A);
	op_hex		(x,	1);
	create_insn	(x=0X12898);
	op_hex		(x,	1);
	create_insn	(x=0X128AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X128BE);
	set_name	(0X128BE,	"rf_power_unkn1");
	create_insn	(x=0X128C8);
	op_hex		(x,	1);
	create_insn	(0X128E4);
	create_insn	(x=0X128EE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X128F0);
	op_hex		(x,	1);
	create_insn	(x=0X128F4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X1290C);
	create_insn	(0X1290E);
	create_insn	(x=0X12918);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1291E);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12924);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12936);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12944);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12946);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1294E);
	op_hex		(x,	1);
	create_insn	(x=0X12952);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X1295E);
	create_insn	(x=0X1296E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X12972);
	op_hex		(x,	1);
	create_insn	(x=0X12976);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1297A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1297C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1298A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12994);
	op_plain_offset	(x,	1,	0X10003D4C);
	op_plain_offset	(x,	129,	0X10003D4C);
	create_insn	(x=0X1299E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X129B4);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X129BA);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(0X129C0);
	create_insn	(x=0X129D0);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X129D2);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X129D8);
	op_plain_offset	(x,	1,	0X10003D4C);
	op_plain_offset	(x,	129,	0X10003D4C);
	create_insn	(x=0X129DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X129E0);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X129EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X129F8);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X129FC);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(0X12A04);
	create_insn	(0X12A06);
	create_insn	(x=0X12A08);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12A12);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(0X12A18);
	create_insn	(x=0X12A26);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(0X12A30);
	create_insn	(0X12A32);
	create_insn	(x=0X12A40);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(0X12A4C);
	create_insn	(x=0X12A58);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(0X12A64);
	create_insn	(x=0X12A66);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X12A6A);
	op_hex		(x,	1);
	create_insn	(x=0X12A6E);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_dword	(x=0X12A74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12A78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12A7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12A80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12A84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12A88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12A8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X12A90);
	create_insn	(0X12A98);
	create_insn	(x=0X12AA6);
	op_hex		(x,	1);
	create_insn	(0X12ABA);
	create_insn	(x=0X12AC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X12AD0);
	op_hex		(x,	1);
	create_insn	(x=0X12ADE);
	op_hex		(x,	1);
	create_insn	(x=0X12B06);
	op_hex		(x,	1);
	create_insn	(x=0X12B1A);
	op_hex		(x,	1);
	create_insn	(0X12B20);
	create_insn	(x=0X12B44);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X12B4A);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12B52);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12B58);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12B5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12B60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12B6C);
	op_hex		(x,	1);
	create_insn	(x=0X12B88);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(0X12B8C);
	create_insn	(0X12B90);
	create_insn	(x=0X12B94);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0X12B96);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12B9C);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0X12BA0);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12BA8);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12BBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12BBC);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12BC0);
	op_plain_offset	(x,	1,	0X10000221);
	op_plain_offset	(x,	129,	0X10000221);
	create_insn	(x=0X12BC8);
	op_plain_offset	(x,	1,	0X10000226);
	op_plain_offset	(x,	129,	0X10000226);
	create_insn	(x=0X12BD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12BDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12BE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12BE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X12BEC);
	op_plain_offset	(x,	1,	0X10003D8C);
	op_plain_offset	(x,	129,	0X10003D8C);
	create_insn	(x=0X12BEE);
	op_plain_offset	(x,	1,	0X10003D8C);
	op_plain_offset	(x,	129,	0X10003D8C);
	create_insn	(x=0X12BF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12BF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12BF6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X12BF8);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X12BFA);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X12BFE);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X12C00);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X12C04);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X12C06);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X12C08);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X12C0A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X12C0E);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X12C10);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X12C14);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X12C1A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X12C1E);
	op_plain_offset	(x,	1,	0X10003ECC);
	op_plain_offset	(x,	129,	0X10003ECC);
	create_insn	(x=0X12C22);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0X12C24);
	op_plain_offset	(x,	1,	0X10003ECC);
	op_plain_offset	(x,	129,	0X10003ECC);
	create_insn	(x=0X12C2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12C2E);
	op_stkvar	(x,	1);
	create_insn	(0X12C3C);
	create_insn	(0X12C3E);
	create_insn	(x=0X12C46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12C48);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12C54);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12C5A);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12C62);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12C6A);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12C70);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12C7E);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12C84);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12C88);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12C90);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12C92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X12C98);
	create_insn	(0X12C9A);
	set_cmt	(0X12C9E,	"switch 7 cases ",	0);
	set_cmt	(0X12CA2,	"switch jump",	0);
	set_cmt	(0X12CA6,	"jump table for switch statement",	0);
	create_byte	(0X12CA6);
	set_name	(0X12CA6,	"jpt_8CA2");
	create_byte	(0X12CA7);
	create_byte	(0X12CA8);
	create_byte	(0X12CA9);
	create_byte	(0X12CAA);
	create_byte	(0X12CAB);
	create_byte	(0X12CAC);
	create_insn	(0X12CAE);
	set_cmt	(0X12CB2,	"jumptable 00012CA2 case 1",	1);
	create_insn	(0X12CB2);
	create_insn	(x=0X12CB6);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X12CBA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X12CBC);
	op_hex		(x,	1);
	create_insn	(x=0X12CC0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X12CC6);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	set_cmt	(0X12CCE,	"jumptable 00012CA2 case 2",	1);
	create_insn	(0X12CCE);
	create_insn	(x=0X12CD2);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X12CD4);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12CE2);
	op_plain_offset	(x,	1,	0X10000221);
	op_plain_offset	(x,	129,	0X10000221);
	create_insn	(x=0X12CE4);
	op_plain_offset	(x,	1,	0X10000226);
	op_plain_offset	(x,	129,	0X10000226);
	set_cmt	(0X12CEC,	"jumptable 00012CA2 default case",	1);
	create_insn	(x=0X12CEC);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	set_name	(0X12CEC,	"def_8CA2");
	create_insn	(x=0X12CF0);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	set_cmt	(0X12CF6,	"jumptable 00012CA2 case 3",	1);
	create_insn	(0X12CF6);
	create_insn	(x=0X12CFA);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X12CFC);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	set_cmt	(0X12D08,	"jumptable 00012CA2 case 4",	1);
	create_insn	(0X12D08);
	create_insn	(x=0X12D0C);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X12D0E);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	set_cmt	(0X12D1A,	"jumptable 00012CA2 case 5",	1);
	create_insn	(0X12D1A);
	create_insn	(x=0X12D1E);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X12D20);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	set_cmt	(0X12D2C,	"jumptable 00012CA2 case 6",	1);
	create_insn	(0X12D2C);
	create_insn	(x=0X12D30);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X12D32);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(0X12D3E);
	create_insn	(x=0X12D4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12D50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12D6E);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X12D72);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X12D82);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12D88);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12D94);
	op_plain_offset	(x,	1,	0X10000226);
	op_plain_offset	(x,	129,	0X10000226);
	create_insn	(x=0X12D96);
	op_plain_offset	(x,	1,	0X10000221);
	op_plain_offset	(x,	129,	0X10000221);
	create_insn	(x=0X12DA0);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12DBE);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12DD0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X12DD2);
	op_hex		(x,	1);
	create_insn	(x=0X12DD6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X12DDC);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X12DE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12DE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12DE6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X12E02);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X12E0C);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12E10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12E1C);
	op_plain_offset	(x,	1,	0X10000221);
	op_plain_offset	(x,	129,	0X10000221);
	create_insn	(x=0X12E1E);
	op_plain_offset	(x,	1,	0X10000226);
	op_plain_offset	(x,	129,	0X10000226);
	create_insn	(x=0X12E26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12E32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X12E46);
	op_plain_offset	(x,	1,	0X10003DA5);
	op_plain_offset	(x,	129,	0X10003DA5);
	create_insn	(x=0X12E48);
	op_plain_offset	(x,	1,	0X10003DA5);
	op_plain_offset	(x,	129,	0X10003DA5);
	create_insn	(x=0X12E4A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0X12E4E);
	create_insn	(x=0X12E50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12E52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12E54);
	op_plain_offset	(x,	1,	0X100044FE);
	op_plain_offset	(x,	129,	0X100044FE);
	create_insn	(x=0X12E5C);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12E60);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12E66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12E68);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0X12E6E);
	op_plain_offset	(x,	1,	0X10003F4C);
	op_plain_offset	(x,	129,	0X10003F4C);
	create_insn	(x=0X12E72);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X12E74);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X12E76);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X12E78);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X12E7A);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X12E7C);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X12E82);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X12E84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12E86);
	op_plain_offset	(x,	1,	0X100026F0);
	op_plain_offset	(x,	129,	0X100026F0);
	create_insn	(x=0X12E88);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X12E8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12E8C);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X12E94);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X12EA2);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X12EA4);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X12EA6);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X12ED0);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0X12ED6);
	create_insn	(0X12ED8);
	create_insn	(0X12EDA);
	create_insn	(x=0X12EDE);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X12EE0);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X12EE2);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X12EEA);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X12EF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12EF2);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12EF8);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0X12EFC);
	op_plain_offset	(x,	1,	0X10003ECC);
	op_plain_offset	(x,	129,	0X10003ECC);
	create_insn	(x=0X12F00);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X12F04);
	op_plain_offset	(x,	1,	0X10003F07);
	op_plain_offset	(x,	129,	0X10003F07);
	create_insn	(x=0X12F06);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0X12F08);
	op_plain_offset	(x,	1,	0X10003F07);
	op_plain_offset	(x,	129,	0X10003F07);
	create_insn	(x=0X12F0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12F0C);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X12F10);
	op_plain_offset	(x,	1,	0X10003F07);
	op_plain_offset	(x,	129,	0X10003F07);
	create_insn	(x=0X12F12);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X12F14);
	op_plain_offset	(x,	1,	0X10003F07);
	op_plain_offset	(x,	129,	0X10003F07);
	create_insn	(x=0X12F16);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X12F18);
	op_plain_offset	(x,	1,	0X10003F07);
	op_plain_offset	(x,	129,	0X10003F07);
	create_insn	(x=0X12F1A);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X12F1C);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X12F1E);
	op_plain_offset	(x,	1,	0X10003F07);
	op_plain_offset	(x,	129,	0X10003F07);
	create_dword	(x=0X12F30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12F34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12F38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12F3C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12F40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12F44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12F48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12F4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12F50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X12F54);
	create_dword	(x=0X12F58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12F5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12F60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12F64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X12F68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X12F6C);
	create_insn	(x=0X12F76);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0X12F7E);
	op_plain_offset	(x,	1,	0X10003F07);
	op_plain_offset	(x,	129,	0X10003F07);
	create_insn	(x=0X12F80);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X12F82);
	op_plain_offset	(x,	1,	0X10003F07);
	op_plain_offset	(x,	129,	0X10003F07);
	create_insn	(x=0X12F8C);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0X12F92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12F98);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12FA4);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X12FAC);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X12FB0);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X12FB8);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X12FC0);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X12FEA);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X12FF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X12FFA);
	op_plain_offset	(x,	1,	0X10000221);
	op_plain_offset	(x,	129,	0X10000221);
	create_insn	(x=0X12FFC);
	op_plain_offset	(x,	1,	0X10000226);
	op_plain_offset	(x,	129,	0X10000226);
	create_insn	(0X13008);
	create_insn	(x=0X13020);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13022);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13028);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X1302A);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13030);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13036);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1303A);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13044);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X1304C);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X1305C);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13066);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1306C);
	op_plain_offset	(x,	1,	0X10000226);
	op_plain_offset	(x,	129,	0X10000226);
	create_insn	(x=0X13070);
	op_plain_offset	(x,	1,	0X10000221);
	op_plain_offset	(x,	129,	0X10000221);
	create_insn	(0X1307C);
	create_insn	(x=0X13080);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13086);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1308C);
	op_plain_offset	(x,	1,	0X10000221);
	op_plain_offset	(x,	129,	0X10000221);
	create_insn	(x=0X1308E);
	op_plain_offset	(x,	1,	0X10000226);
	op_plain_offset	(x,	129,	0X10000226);
	create_insn	(0X1309C);
	create_insn	(x=0X130A0);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X130A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X130AE);
	op_plain_offset	(x,	1,	0X10000221);
	op_plain_offset	(x,	129,	0X10000221);
	create_insn	(x=0X130B0);
	op_plain_offset	(x,	1,	0X10000226);
	op_plain_offset	(x,	129,	0X10000226);
	create_insn	(x=0X130BC);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(0X130C0);
	create_insn	(0X130C2);
	create_insn	(x=0X130C6);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X130CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X130D6);
	op_plain_offset	(x,	1,	0X10000221);
	op_plain_offset	(x,	129,	0X10000221);
	create_insn	(x=0X130D8);
	op_plain_offset	(x,	1,	0X10000226);
	op_plain_offset	(x,	129,	0X10000226);
	create_insn	(0X130E6);
	create_insn	(x=0X130EA);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X130F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X130FA);
	op_plain_offset	(x,	1,	0X10000221);
	op_plain_offset	(x,	129,	0X10000221);
	create_insn	(x=0X130FC);
	op_plain_offset	(x,	1,	0X10000226);
	op_plain_offset	(x,	129,	0X10000226);
	create_insn	(0X1310A);
	create_insn	(0X1310C);
	create_insn	(x=0X13110);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13116);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13120);
	op_plain_offset	(x,	1,	0X10000221);
	op_plain_offset	(x,	129,	0X10000221);
	create_insn	(x=0X13122);
	op_plain_offset	(x,	1,	0X10000226);
	op_plain_offset	(x,	129,	0X10000226);
	create_insn	(0X13130);
	create_insn	(x=0X13140);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13142);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13164);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X13168);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X13178);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X1317E);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X1318A);
	op_plain_offset	(x,	1,	0X10000226);
	op_plain_offset	(x,	129,	0X10000226);
	create_insn	(x=0X1318C);
	op_plain_offset	(x,	1,	0X10000221);
	op_plain_offset	(x,	129,	0X10000221);
	create_insn	(x=0X131B6);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X131BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X131E8);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X131EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X131F8);
	op_plain_offset	(x,	1,	0X10000221);
	op_plain_offset	(x,	129,	0X10000221);
	create_insn	(x=0X131FA);
	op_plain_offset	(x,	1,	0X10000226);
	op_plain_offset	(x,	129,	0X10000226);
	create_insn	(0X13208);
	create_insn	(x=0X13220);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13222);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13228);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X1322A);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13230);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13236);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13238);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13258);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1325E);
	op_plain_offset	(x,	1,	0X10000226);
	op_plain_offset	(x,	129,	0X10000226);
	create_insn	(x=0X13262);
	op_plain_offset	(x,	1,	0X10000221);
	op_plain_offset	(x,	129,	0X10000221);
	create_insn	(0X1326E);
	create_insn	(x=0X13272);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13278);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1327E);
	op_plain_offset	(x,	1,	0X10000221);
	op_plain_offset	(x,	129,	0X10000221);
	create_insn	(x=0X13280);
	op_plain_offset	(x,	1,	0X10000226);
	op_plain_offset	(x,	129,	0X10000226);
	create_insn	(0X1328E);
	create_insn	(x=0X13292);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13298);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X132A0);
	op_plain_offset	(x,	1,	0X10000221);
	op_plain_offset	(x,	129,	0X10000221);
	create_insn	(x=0X132A2);
	op_plain_offset	(x,	1,	0X10000226);
	op_plain_offset	(x,	129,	0X10000226);
	create_insn	(x=0X132AE);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(0X132B4);
	create_insn	(0X132B6);
	create_insn	(x=0X132BA);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X132C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X132CA);
	op_plain_offset	(x,	1,	0X10000221);
	op_plain_offset	(x,	129,	0X10000221);
	create_insn	(x=0X132CC);
	op_plain_offset	(x,	1,	0X10000226);
	op_plain_offset	(x,	129,	0X10000226);
	create_insn	(0X132DA);
	create_insn	(x=0X132DE);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X132E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X132EE);
	op_plain_offset	(x,	1,	0X10000221);
	op_plain_offset	(x,	129,	0X10000221);
	create_insn	(x=0X132F0);
	op_plain_offset	(x,	1,	0X10000226);
	op_plain_offset	(x,	129,	0X10000226);
	create_insn	(0X132FE);
	create_insn	(0X13300);
	create_insn	(x=0X13304);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X1330A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13314);
	op_plain_offset	(x,	1,	0X10000221);
	op_plain_offset	(x,	129,	0X10000221);
	create_insn	(x=0X13316);
	op_plain_offset	(x,	1,	0X10000226);
	op_plain_offset	(x,	129,	0X10000226);
	create_insn	(0X13324);
	create_insn	(x=0X13328);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1332C);
	op_hex		(x,	1);
	create_insn	(x=0X13330);
	op_plain_offset	(x,	1,	0X400FC0C4);
	op_plain_offset	(x,	129,	0X400FC0C4);
	create_insn	(x=0X13336);
	op_hex		(x,	1);
	create_insn	(x=0X13346);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X1334A);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X1334E);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X13354);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X1335A);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X1335E);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X13360);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1337E);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X13382);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X13384);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13386);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X1338C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X13390);
	create_dword	(x=0X13394);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X13398);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1339C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X133A0);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0X133A4);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X133A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X133AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X133AC);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X133B0);
	op_plain_offset	(x,	1,	0X10003ECC);
	op_plain_offset	(x,	129,	0X10003ECC);
	create_insn	(x=0X133B4);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0X133B6);
	op_plain_offset	(x,	1,	0X10003ECC);
	op_plain_offset	(x,	129,	0X10003ECC);
	create_insn	(x=0X133BA);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0X133BC);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X133BE);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0X133C0);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X133C2);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0X133C4);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(0X133C8);
	create_insn	(x=0X133CC);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X133D0);
	op_hex		(x,	1);
	create_insn	(x=0X133D4);
	op_plain_offset	(x,	1,	0X400FC0C4);
	op_plain_offset	(x,	129,	0X400FC0C4);
	create_insn	(x=0X133DA);
	op_hex		(x,	1);
	create_insn	(x=0X133EA);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X133EE);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X133F2);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X133F8);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X133FC);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X133FE);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X13402);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X13404);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13422);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X13426);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X1342A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1342C);
	op_hex		(x,	1);
	create_insn	(x=0X13430);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13432);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13434);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13436);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13438);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(0X1343E);
	create_insn	(x=0X13442);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X13446);
	op_hex		(x,	1);
	create_insn	(x=0X1344A);
	op_plain_offset	(x,	1,	0X400FC0C4);
	op_plain_offset	(x,	129,	0X400FC0C4);
	create_insn	(x=0X13450);
	op_hex		(x,	1);
	create_insn	(x=0X13460);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X13464);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X13468);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X1346E);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X13472);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X13474);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X13478);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X1347A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13498);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X1349C);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X134A0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X134A2);
	op_hex		(x,	1);
	create_insn	(x=0X134A6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X134A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X134AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X134AC);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X134AE);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(0X134B4);
	create_insn	(x=0X134B8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X134BA);
	op_hex		(x,	1);
	create_insn	(x=0X134BE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X134C2);
	op_hex		(x,	1);
	create_insn	(x=0X134CA);
	op_hex		(x,	1);
	create_insn	(x=0X134D2);
	op_hex		(x,	1);
	create_insn	(x=0X134DA);
	op_hex		(x,	1);
	create_insn	(x=0X134E0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X134E2);
	op_hex		(x,	1);
	create_insn	(x=0X134E6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X134E8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X134EA);
	op_hex		(x,	1);
	create_insn	(x=0X134EE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X134F0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X134F2);
	op_hex		(x,	1);
	create_insn	(x=0X134F6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X134FA);
	op_hex		(x,	1);
	create_insn	(x=0X13500);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13502);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X13504);
	op_hex		(x,	1);
	create_insn	(x=0X13508);
	op_hex		(x,	1);
	create_insn	(x=0X1350C);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X13510);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X13514);
	op_hex		(x,	1);
	create_insn	(x=0X13518);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1351C);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X13520);
	op_hex		(x,	1);
	create_insn	(x=0X13524);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X13528);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1352C);
	op_hex		(x,	1);
	create_insn	(x=0X13530);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X13534);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1353E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13540);
	op_hex		(x,	1);
	create_insn	(x=0X13544);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13546);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13548);
	op_hex		(x,	1);
	create_insn	(x=0X1354C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X13550);
	create_insn	(x=0X13556);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1355C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13562);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13566);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1356C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1357E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13582);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13586);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13594);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1359A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1359E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X135A0);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X135A2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X135A4);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0X135A8);
	create_insn	(x=0X135B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X135C6);
	create_insn	(0X13648);
	create_insn	(0X1364A);
	create_insn	(0X1366A);
	create_insn	(x=0X13682);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1368A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0X136B8);
	create_insn	(x=0X136CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X136E8);
	create_insn	(x=0X1371A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13724);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13730);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1373A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13758);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13768);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1376A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1376E);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(0X13772);
	create_insn	(x=0X13774);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X13780);
	create_insn	(x=0X13792);
	op_hex		(x,	1);
	make_array	(0X1379E,	0X2);
	create_dword	(x=0X137A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X137A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X137A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X137AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X137B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X137B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X137B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X137BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X137C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X137C4);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X137C6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X137C8);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X137D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X137E6);
	create_insn	(0X137E8);
	create_insn	(x=0X137EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X137F4);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X137F8);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X137FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1380C);
	op_plain_offset	(x,	1,	0X10003598);
	op_plain_offset	(x,	129,	0X10003598);
	create_insn	(x=0X13810);
	op_stkvar	(x,	1);
	create_insn	(x=0X13812);
	op_plain_offset	(x,	1,	0X10003598);
	op_plain_offset	(x,	129,	0X10003598);
	create_insn	(x=0X13816);
	op_stkvar	(x,	1);
	create_insn	(x=0X13818);
	op_plain_offset	(x,	1,	0X10003598);
	op_plain_offset	(x,	129,	0X10003598);
	create_insn	(x=0X1381C);
	op_stkvar	(x,	1);
	create_insn	(x=0X13820);
	op_plain_offset	(x,	1,	0X10003598);
	op_plain_offset	(x,	129,	0X10003598);
	create_insn	(x=0X13822);
	op_stkvar	(x,	1);
	create_insn	(x=0X13826);
	op_plain_offset	(x,	1,	0X10003598);
	op_plain_offset	(x,	129,	0X10003598);
	create_insn	(x=0X13828);
	op_stkvar	(x,	1);
	create_insn	(0X13832);
	create_insn	(0X13836);
	create_insn	(x=0X13838);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13842);
	op_plain_offset	(x,	1,	0X10003C00);
	op_plain_offset	(x,	129,	0X10003C00);
	create_insn	(x=0X13846);
	op_plain_offset	(x,	1,	0X10003C00);
	op_plain_offset	(x,	129,	0X10003C00);
	create_insn	(x=0X1384E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X13854);
	create_insn	(x=0X13868);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1386E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1388C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X138A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X138B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X138CC);
	create_insn	(x=0X138DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X138E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X138E8);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X138EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X138EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X138F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13908);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1391A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X13924,	"switch 6 cases ",	0);
	set_cmt	(0X1392A,	"switch jump",	0);
	set_cmt	(0X1392E,	"jump table for switch statement",	0);
	create_byte	(0X1392E);
	set_name	(0X1392E,	"jpt_992A");
	create_byte	(0X1392F);
	create_byte	(0X13930);
	create_byte	(0X13931);
	create_byte	(0X13932);
	create_byte	(0X13933);
	set_cmt	(0X13934,	"jumptable 0001392A case 2",	1);
	create_insn	(0X13934);
	set_cmt	(0X1393C,	"jumptable 0001392A case 3",	1);
	create_insn	(0X1393C);
	set_cmt	(0X13944,	"jumptable 0001392A case 4",	1);
	create_insn	(0X13944);
	set_cmt	(0X13948,	"jumptable 0001392A case 5",	1);
	create_insn	(0X13948);
	set_cmt	(0X1394C,	"jumptable 0001392A case 6",	1);
	create_insn	(0X1394C);
	set_cmt	(0X13954,	"jumptable 0001392A case 7",	1);
	create_insn	(0X13954);
	create_insn	(x=0X1395C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1397A,	"jumptable 0001392A default case",	1);
	set_name	(0X1397A,	"def_992A");
	create_insn	(0X1397C);
	create_insn	(0X1397E);
	create_insn	(0X1399E);
	create_insn	(0X139A6);
	create_insn	(0X139AC);
	create_insn	(0X139B2);
	create_insn	(0X139C0);
	create_insn	(0X139CC);
	create_insn	(0X139D4);
	create_insn	(x=0X139D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X139E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X139EA);
	op_plain_offset	(x,	1,	0X10004018);
	op_plain_offset	(x,	129,	0X10004018);
	create_insn	(x=0X139EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X139FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X139FE);
	op_plain_offset	(x,	1,	0X10004018);
	op_plain_offset	(x,	129,	0X10004018);
	create_insn	(x=0X13A06);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A0C);
	op_plain_offset	(x,	1,	0X10004018);
	op_plain_offset	(x,	129,	0X10004018);
	create_insn	(x=0X13A10);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(0X13A22);
	create_insn	(x=0X13A2A);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(0X13A2E);
	create_insn	(x=0X13A34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13A3E);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13A44);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13A48);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(0X13A4C);
	create_insn	(x=0X13A4E);
	op_plain_offset	(x,	1,	0X10003DDE);
	op_plain_offset	(x,	129,	0X10003DDE);
	create_insn	(x=0X13A56);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13A5C);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13A62);
	op_plain_offset	(x,	1,	0X10003DDE);
	op_plain_offset	(x,	129,	0X10003DDE);
	create_insn	(x=0X13A64);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13A70);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13A74);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13A78);
	op_plain_offset	(x,	1,	0X10003DDE);
	op_plain_offset	(x,	129,	0X10003DDE);
	create_insn	(x=0X13A7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13A84);
	op_stkvar	(x,	1);
	create_insn	(x=0X13A8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13A94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13A9E);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(0X13AAA);
	create_insn	(x=0X13AC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X13AE4);
	create_insn	(0X13AF0);
	create_insn	(x=0X13AF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13B02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13B0E);
	op_plain_offset	(x,	1,	0X10004018);
	op_plain_offset	(x,	129,	0X10004018);
	create_insn	(x=0X13B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X13B28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13B40);
	op_hex		(x,	1);
	create_insn	(0X13B46);
	create_insn	(0X13B4C);
	create_insn	(x=0X13B4E);
	op_hex		(x,	1);
	create_insn	(x=0X13B52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13B58);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0X13B5C);
	op_hex		(x,	1);
	create_insn	(x=0X13B62);
	op_hex		(x,	1);
	create_insn	(x=0X13B66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13B68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13B6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13B6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13B70);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0X13B7E);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X13B80);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(0X13B96);
	create_insn	(x=0X13BA0);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13BA4);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13BA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13BAA);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13BB0);
	op_plain_offset	(x,	1,	0X10003ECC);
	op_plain_offset	(x,	129,	0X10003ECC);
	create_insn	(0X13BB6);
	create_insn	(0X13BB8);
	make_array	(0X13BBA,	0X2);
	create_dword	(x=0X13BBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X13BC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X13BC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X13BC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X13BCC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X13BD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X13BD4,	0X13BE6);
	set_name	(0X13BD4,	"aXGrXXXX");
	make_array	(0X13BE6,	0X2);
	create_dword	(x=0X13BE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X13BEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X13BF0);
	create_strlit	(0X13BF4,	0X13C05);
	set_name	(0X13BF4,	"a5_8gVerErrD");
	create_byte	(0X13C05);
	make_array	(0X13C05,	0X3);
	create_dword	(x=0X13C08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X13C0C,	0X13C19);
	set_name	(0X13C0C,	"aRfmCrcErr");
	create_byte	(0X13C19);
	make_array	(0X13C19,	0X3);
	create_dword	(x=0X13C1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X13C20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X13C24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X13C28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X13C2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X13C30);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13C34);
	op_plain_offset	(x,	1,	0X10003ECC);
	op_plain_offset	(x,	129,	0X10003ECC);
	create_insn	(x=0X13C38);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13C3C);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X13C40);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13C42);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X13C44);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13C46);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X13C48);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13C4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X13C4E);
	create_insn	(x=0X13C58);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13C5C);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13C62);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13C64);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13C66);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13C6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13C72);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X13C78);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13C7C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13C7E);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13C86);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0X13C94);
	create_insn	(x=0X13C96);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13C98);
	op_hex		(x,	1);
	create_insn	(x=0X13C9C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13C9E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13CA0);
	op_hex		(x,	1);
	create_insn	(x=0X13CA4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13CB2);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13CB6);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13CB8);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(0X13CBE);
	create_insn	(0X13CC4);
	create_insn	(0X13CCA);
	create_insn	(x=0X13CCE);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13CD0);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13CD2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13CD4);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(0X13CE2);
	create_insn	(0X13CE6);
	create_insn	(x=0X13CEC);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13CEE);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13CF0);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13CF6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13CF8);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(0X13D0A);
	create_insn	(0X13D10);
	create_insn	(0X13D16);
	create_insn	(x=0X13D1A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13D1C);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13D20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13D22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X13D2A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13D2E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13D30);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13D34);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13D36);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(x=0X13D3E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13D54);
	op_hex		(x,	1);
	create_insn	(x=0X13D5A);
	op_hex		(x,	1);
	create_insn	(x=0X13D74);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X13D76);
	op_plain_offset	(x,	1,	0X10000204);
	op_plain_offset	(x,	129,	0X10000204);
	create_insn	(0X13D8E);
	create_insn	(0X13D92);
	create_insn	(0X13D9A);
	make_array	(0X13DBE,	0X2);
	create_strlit	(0X13DC0,	0X13DC7);
	set_name	(0X13DC0,	"aMaster_0");
	create_byte	(0X13DC7);
	create_strlit	(0X13DC8,	0X13DCF);
	set_name	(0X13DC8,	"aSlaver_0");
	create_byte	(0X13DCF);
	create_dword	(x=0X13DD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X13DD4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X13DD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X13DDC);
	create_insn	(x=0X13DE8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13DEA);
	op_hex		(x,	1);
	create_insn	(x=0X13DEE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13DF6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13DFA);
	op_hex		(x,	1);
	create_insn	(x=0X13DFE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13E00);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13E10);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13E12);
	op_hex		(x,	1);
	create_insn	(x=0X13E16);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13E1E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13E20);
	op_hex		(x,	1);
	create_insn	(x=0X13E24);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X13E32);
	create_insn	(0X13E46);
	create_insn	(x=0X13E48);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13E4A);
	op_hex		(x,	1);
	create_insn	(x=0X13E4E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13E50);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X13E58);
	create_insn	(0X13E6E);
	create_insn	(0X13E84);
	create_insn	(0X13E98);
	create_insn	(0X13EA2);
	create_insn	(0X13EAA);
	create_insn	(0X13EBC);
	create_insn	(0X13EC4);
	create_insn	(x=0X13ECE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13ED0);
	op_hex		(x,	1);
	create_insn	(x=0X13ED4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13ED6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13EF0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13EF2);
	op_hex		(x,	1);
	create_insn	(x=0X13EF6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X13EFE);
	create_insn	(x=0X13F06);
	op_stkvar	(x,	1);
	create_insn	(x=0X13F08);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13F0C);
	op_hex		(x,	1);
	create_insn	(x=0X13F10);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13F12);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13F32);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X13F34);
	op_hex		(x,	1);
	create_insn	(x=0X13F38);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X13F40);
	create_insn	(0X13F54);
	create_insn	(x=0X13F5A);
	op_stkvar	(x,	1);
	create_insn	(0X13F68);
	create_insn	(0X13F78);
	create_insn	(0X13F8C);
	create_insn	(x=0X13F92);
	op_stkvar	(x,	1);
	create_insn	(0X13FA0);
	create_insn	(0X13FB0);
	create_insn	(0X13FBA);
	create_insn	(0X13FC4);
	create_insn	(0X13FCA);
	create_insn	(0X13FD0);
	create_insn	(x=0X13FDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X13FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X13FFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X14002);
	op_stkvar	(x,	1);
	create_insn	(x=0X1401A);
	op_stkvar	(x,	1);
	create_insn	(x=0X14022);
	op_stkvar	(x,	1);
	create_insn	(x=0X1402C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14034);
	op_stkvar	(x,	1);
	create_insn	(x=0X14052);
	op_stkvar	(x,	1);
	create_insn	(x=0X14060);
	op_stkvar	(x,	1);
	create_insn	(x=0X14064);
	op_stkvar	(x,	1);
	create_insn	(x=0X1407A);
	op_stkvar	(x,	1);
	create_insn	(x=0X14082);
	op_stkvar	(x,	1);
	create_insn	(x=0X1408C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14094);
	op_stkvar	(x,	1);
	create_insn	(x=0X140AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X140B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X140B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X140C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X140CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X140D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X140DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X140EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X140F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X140FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X14102);
	op_stkvar	(x,	1);
	create_insn	(0X14116);
	create_insn	(x=0X1411E);
	op_stkvar	(x,	1);
	create_insn	(x=0X14122);
	op_stkvar	(x,	1);
	create_insn	(x=0X14128);
	op_stkvar	(x,	1);
	create_insn	(0X14152);
	create_insn	(x=0X1415C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14166);
	op_stkvar	(x,	1);
	create_insn	(x=0X14174);
	op_stkvar	(x,	1);
	create_insn	(x=0X1417E);
	op_stkvar	(x,	1);
	create_insn	(x=0X14182);
	op_hex		(x,	1);
	create_insn	(x=0X1418C);
	op_stkvar	(x,	1);
	create_insn	(x=0X14192);
	op_stkvar	(x,	1);
	create_insn	(x=0X14196);
	op_stkvar	(x,	1);
	create_insn	(0X141B0);
	create_insn	(0X141BA);
	create_insn	(x=0X141C4);
	op_stkvar	(x,	1);
	make_array	(0X141DA,	0X2);
	create_dword	(x=0X141DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X141E0);
	op_stkvar	(x,	1);
	create_insn	(0X141F0);
	create_insn	(0X141F4);
	create_insn	(x=0X141FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X14202);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X14206);
	op_hex		(x,	1);
	create_insn	(x=0X1420A);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X14218);
	op_stkvar	(x,	1);
	create_insn	(x=0X14220);
	op_stkvar	(x,	1);
	create_insn	(x=0X14228);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X14232);
	create_insn	(x=0X14248);
	op_hex		(x,	1);
	create_insn	(x=0X14252);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14268);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1427A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1427C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14286);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14296);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X1429A);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X1429C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X142AA);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X142AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X142B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X142B6);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X142B8);
	op_hex		(x,	1);
	create_insn	(x=0X142BC);
	op_hex		(x,	1);
	create_insn	(x=0X142C0);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X142C4);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X142C8);
	op_hex		(x,	1);
	create_insn	(x=0X142CC);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X142D0);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X142D4);
	op_hex		(x,	1);
	create_insn	(x=0X142D8);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X142DC);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X142E0);
	op_hex		(x,	1);
	create_insn	(x=0X142E4);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X142E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X142F2);
	create_insn	(x=0X142F6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X142F8);
	op_hex		(x,	1);
	create_insn	(x=0X142FC);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X14300);
	op_hex		(x,	1);
	create_insn	(x=0X14308);
	op_hex		(x,	1);
	create_insn	(x=0X14310);
	op_hex		(x,	1);
	create_insn	(x=0X14316);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14318);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1431E);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X14322);
	op_hex		(x,	1);
	create_insn	(x=0X1432C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1432E);
	op_hex		(x,	1);
	create_insn	(x=0X14332);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X14334);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X14336);
	op_hex		(x,	1);
	create_insn	(x=0X1433A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X1433E);
	create_insn	(x=0X14346);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1435C);
	op_stkvar	(x,	1);
	create_insn	(0X14374);
	create_insn	(x=0X14376);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1438A);
	op_stkvar	(x,	1);
	create_insn	(0X14398);
	create_insn	(0X143A4);
	create_insn	(x=0X143AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X143BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X143CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X143E0);
	op_stkvar	(x,	1);
	create_insn	(0X143EA);
	create_insn	(0X14404);
	create_insn	(x=0X14414);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1441E);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14422);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1442C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14434);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14440);
	op_hex		(x,	1);
	create_insn	(0X1445C);
	create_insn	(0X14462);
	create_insn	(0X14466);
	create_insn	(x=0X1446A);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0X14472);
	op_plain_offset	(x,	1,	0X10000158);
	op_plain_offset	(x,	129,	0X10000158);
	create_insn	(x=0X14476);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X1447E);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X14480);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14490);
	op_stkvar	(x,	1);
	create_insn	(x=0X14498);
	op_stkvar	(x,	1);
	create_insn	(x=0X1449C);
	op_stkvar	(x,	1);
	create_insn	(x=0X144A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X144A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X144AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X144AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X144B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X144B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X144B8);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X144BA);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X144BC);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X144C0);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X144C2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X144C6);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X144C8);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X144CA);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X144CC);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X144D0);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X144D2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X144D6);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X144D8);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X144DE);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0X144E0);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X144E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X144F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X144FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X14506);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X1450C);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(0X14516);
	create_insn	(x=0X14518);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1451A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1451C);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X14532);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14534);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14552);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14554);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X14566);
	create_insn	(0X14568);
	create_insn	(0X1456C);
	create_insn	(x=0X14570);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14572);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X14580);
	create_insn	(x=0X14584);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14586);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X145A0);
	create_insn	(x=0X145AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X145B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X145B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X145B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X145C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X145D4);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X145D6);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X145DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X145E0);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X145E6);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_dword	(x=0X145FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14600);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14604);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14608);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1460C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14610);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X14614);
	create_dword	(x=0X14618);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1461C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14620);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14624);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14628);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1462C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14630);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X14634);
	create_dword	(x=0X14638);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1463C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14640);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14644);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X14648);
	create_insn	(x=0X14666);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14668);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14688);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1468E);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X146A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X146A8);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X146BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X146C4);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(0X146DC);
	create_insn	(x=0X146DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X146E0);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X146E6);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X146E8);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X146EE);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X146F4);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X1471E);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14724);
	op_stkvar	(x,	1);
	create_insn	(x=0X1472C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1472E);
	op_stkvar	(x,	1);
	create_insn	(x=0X14732);
	op_stkvar	(x,	1);
	create_insn	(x=0X14736);
	op_stkvar	(x,	1);
	create_insn	(x=0X1473E);
	op_stkvar	(x,	1);
	create_insn	(x=0X14740);
	op_stkvar	(x,	1);
	create_insn	(x=0X14744);
	op_stkvar	(x,	1);
	create_insn	(x=0X14748);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0X1474C);
	create_insn	(x=0X1474E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14750);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14752);
	op_plain_offset	(x,	1,	0X100044FE);
	op_plain_offset	(x,	129,	0X100044FE);
	create_insn	(x=0X1475A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1475C);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0X14762);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14766);
	op_plain_offset	(x,	1,	0X10003F07);
	op_plain_offset	(x,	129,	0X10003F07);
	create_insn	(x=0X14768);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0X1476A);
	op_plain_offset	(x,	1,	0X10003F07);
	op_plain_offset	(x,	129,	0X10003F07);
	create_insn	(x=0X1476C);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X1476E);
	op_plain_offset	(x,	1,	0X10003F07);
	op_plain_offset	(x,	129,	0X10003F07);
	create_insn	(x=0X14770);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X14772);
	op_plain_offset	(x,	1,	0X10003F07);
	op_plain_offset	(x,	129,	0X10003F07);
	create_insn	(x=0X14774);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X14776);
	op_plain_offset	(x,	1,	0X10003F07);
	op_plain_offset	(x,	129,	0X10003F07);
	create_insn	(x=0X14778);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X1477A);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X1477C);
	op_plain_offset	(x,	1,	0X10003F07);
	op_plain_offset	(x,	129,	0X10003F07);
	create_insn	(x=0X14794);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0X1479C);
	op_plain_offset	(x,	1,	0X10003F07);
	op_plain_offset	(x,	129,	0X10003F07);
	create_insn	(x=0X1479E);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X147A0);
	op_plain_offset	(x,	1,	0X10003F07);
	op_plain_offset	(x,	129,	0X10003F07);
	create_insn	(x=0X147AA);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0X147B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X147B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X147BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X147CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X147CC);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0X147D2);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X147D4);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X147D6);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X147D8);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X147DA);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X147DC);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X147E2);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X147E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X147E6);
	op_plain_offset	(x,	1,	0X100026F0);
	op_plain_offset	(x,	129,	0X100026F0);
	create_insn	(x=0X147E8);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X147EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X147EC);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X147F4);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X14802);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X14804);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X14806);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X1482A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14832);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X14834);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X14836);
	op_plain_offset	(x,	1,	0X10003F8C);
	op_plain_offset	(x,	129,	0X10003F8C);
	create_insn	(x=0X1483E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0X14844);
	create_insn	(x=0X14850);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14854);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14856);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1485A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1486A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14876);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X1487E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14880);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X14886);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X148B8);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X148BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X148DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X148DC);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X148E2);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X148E4);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X148EA);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X148F2);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X1491C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14922);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X14936);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1493C);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X14950);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14956);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1495C);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(0X14974);
	create_insn	(x=0X14978);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1497C);
	op_hex		(x,	1);
	create_insn	(x=0X14980);
	op_plain_offset	(x,	1,	0X400FC0C4);
	op_plain_offset	(x,	129,	0X400FC0C4);
	create_insn	(x=0X14986);
	op_hex		(x,	1);
	create_insn	(x=0X14996);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X1499A);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X1499E);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X149A4);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X149AA);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X149AE);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X149B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X149CE);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X149D2);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X149D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X149D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X149D8);
	op_plain_offset	(x,	1,	0X1000001C);
	op_plain_offset	(x,	129,	0X1000001C);
	create_insn	(x=0X149DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X149E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X149E2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X149E8);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0X149EA);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X149EC);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0X149EE);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X149F0);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0X149F2);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X149F4);
	op_plain_offset	(x,	1,	0X100005D3);
	op_plain_offset	(x,	129,	0X100005D3);
	create_insn	(x=0X149F6);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(0X149FA);
	create_insn	(x=0X149FE);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X14A02);
	op_hex		(x,	1);
	create_insn	(x=0X14A06);
	op_plain_offset	(x,	1,	0X400FC0C4);
	op_plain_offset	(x,	129,	0X400FC0C4);
	create_insn	(x=0X14A0C);
	op_hex		(x,	1);
	create_insn	(x=0X14A1C);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14A20);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14A24);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14A2A);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14A2E);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14A30);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14A34);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14A36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14A54);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14A58);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14A5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14A5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14A5E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_dword	(x=0X14A64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14A68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X14A6C);
	create_dword	(x=0X14A70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14A74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14A78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14A7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14A80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14A84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14A88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14A8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14A90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14A94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14A98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14A9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14AA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14AA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X14AA8);
	create_insn	(x=0X14AAC);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X14AB0);
	op_hex		(x,	1);
	create_insn	(x=0X14AB4);
	op_plain_offset	(x,	1,	0X400FC0C4);
	op_plain_offset	(x,	129,	0X400FC0C4);
	create_insn	(x=0X14ABA);
	op_hex		(x,	1);
	create_insn	(x=0X14ACA);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14ACE);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14AD2);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14AD8);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14ADC);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14AE0);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14AE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14B00);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14B04);
	op_plain_offset	(x,	1,	0X40004000);
	op_plain_offset	(x,	129,	0X40004000);
	create_insn	(x=0X14B06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14B08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14B0A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0X14B10);
	create_insn	(x=0X14B20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X14B24);
	create_insn	(x=0X14B32);
	op_hex		(x,	1);
	create_insn	(x=0X14B36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14B3A);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0X14B3E);
	op_hex		(x,	1);
	create_insn	(0X14B44);
	create_insn	(x=0X14B46);
	op_hex		(x,	1);
	create_insn	(x=0X14B4E);
	op_hex		(x,	1);
	create_insn	(x=0X14B54);
	op_hex		(x,	1);
	create_insn	(x=0X14B58);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0X14B5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14B62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14B66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14B6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14B6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14B6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14B7C);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X14B80);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(0X14B96);
	create_insn	(x=0X14BA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14BA2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14BA8);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14BAC);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X14BAE);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14BB2);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X14BB6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14BB8);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X14BBA);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14BBC);
	op_plain_offset	(x,	1,	0X10003EFA);
	op_plain_offset	(x,	129,	0X10003EFA);
	create_insn	(x=0X14BBE);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14BC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X14BC4);
	create_insn	(x=0X14BD0);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14BD2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14BD4);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14BD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14BE0);
	op_plain_offset	(x,	1,	0X10003CC8);
	op_plain_offset	(x,	129,	0X10003CC8);
	create_insn	(x=0X14BE8);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(0X14BEC);
	create_insn	(x=0X14BEE);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14BF0);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X14BF8);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0X14C06);
	create_insn	(x=0X14C12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14C16);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(x=0X14C18);
	op_plain_offset	(x,	1,	0X10000232);
	op_plain_offset	(x,	129,	0X10000232);
	create_insn	(0X14C1C);
	create_insn	(0X14C22);
	create_insn	(0X14C28);
	create_insn	(x=0X14C2C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14C2E);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X14C30);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14C36);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14C38);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(0X14C4A);
	create_insn	(x=0X14C4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X14C52);
	create_insn	(x=0X14C56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14C5E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14C60);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X14C62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14C68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14C70);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14C74);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14C78);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14C7A);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X14C82);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14C98);
	op_hex		(x,	1);
	create_insn	(0X14C9E);
	create_insn	(x=0X14CA2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14CA6);
	op_hex		(x,	1);
	create_insn	(x=0X14CC0);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14CC2);
	op_plain_offset	(x,	1,	0X10000254);
	op_plain_offset	(x,	129,	0X10000254);
	create_insn	(x=0X14CC8);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14CCC);
	op_hex		(x,	1);
	create_insn	(x=0X14CD0);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X14CD2);
	op_stkvar	(x,	1);
	create_insn	(0X14CE4);
	create_insn	(0X14CE8);
	create_insn	(0X14CF0);
	create_insn	(x=0X14CF6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X14CF8);
	op_hex		(x,	1);
	create_insn	(x=0X14CFC);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X14D0A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X14D0C);
	op_hex		(x,	1);
	create_insn	(x=0X14D10);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_dword	(x=0X14D14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14D18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14D1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X14D20);
	create_dword	(x=0X14D24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14D28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14D2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14D30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14D34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14D38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X14D3C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X14D40,	0X14D4B);
	set_name	(0X14D40,	"aTestmaster");
	create_byte	(0X14D4B);
	create_strlit	(0X14D4C,	0X14D57);
	set_name	(0X14D4C,	"aTestslaver");
	create_byte	(0X14D57);
	create_dword	(x=0X14D58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X14D5C,	0X14D64);
	set_name	(0X14D5C,	"aMonitor_0");
	create_dword	(x=0X14D64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X14D68);
	create_insn	(0X14D7C);
	create_insn	(0X14DAC);
	create_insn	(0X14DE6);
	create_insn	(0X14DFA);
	create_insn	(0X14E32);
	create_insn	(0X14E38);
	create_insn	(0X14E48);
	create_insn	(0X14E54);
	create_insn	(x=0X14E5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14E78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14E94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14EB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X14ECE);
	create_insn	(x=0X14EDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X14EE0);
	create_insn	(x=0X14EE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14EE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X14EEE);
	create_insn	(0X14F06);
	create_insn	(0X14F10);
	create_insn	(x=0X14F1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14F22);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X14F2A);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(0X14F34);
	create_insn	(0X14F48);
	create_insn	(x=0X14F4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14F5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14F5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X14F94);
	op_hex		(x,	1);
	create_insn	(0X14FC6);
	create_insn	(x=0X14FF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X15048);
	create_insn	(x=0X1504C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15052);
	op_stkvar	(x,	1);
	create_insn	(0X15066);
	create_insn	(0X15074);
	create_insn	(x=0X15082);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X150BC);
	create_insn	(x=0X150C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X150C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15108);
	op_hex		(x,	1);
	create_insn	(0X1513A);
	create_insn	(x=0X15168);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1518A);
	create_insn	(0X151B0);
	create_insn	(0X151C4);
	create_insn	(0X15220);
	create_insn	(0X15232);
	create_dword	(x=0X1524C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X15250);
	create_dword	(x=0X15254);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X15258);
	create_dword	(x=0X15260);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X15264);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X15268);
	create_dword	(0X1526C);
	create_insn	(0X15270);
	create_insn	(0X15286);
	create_insn	(0X152B2);
	create_insn	(0X152CA);
	create_insn	(0X152D4);
	create_insn	(x=0X152D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X152DA);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(0X152E8);
	create_insn	(0X152EA);
	create_insn	(x=0X152EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X152EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X152F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X152F2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X152F6);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X152F8);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0X152FA);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X1530A);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15312);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15314);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15316);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15318);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X1531A);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X1531C);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X1531E);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15320);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(0X15324);
	create_insn	(x=0X15328);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1532A);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(0X15336);
	create_insn	(x=0X1533C);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15342);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15348);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X1534E);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X1535C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1535E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X15364);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X15368);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1536C);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15372);
	op_plain_offset	(x,	1,	0X1000062F);
	op_plain_offset	(x,	129,	0X1000062F);
	create_insn	(x=0X15376);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15378);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15388);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X1538A);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15394);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1539A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X153A4);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X153A8);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X153AA);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X153AC);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X153BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X153BE);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X153C0);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X153C4);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X153C8);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X153CA);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(0X153D6);
	create_insn	(x=0X153DA);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X153E2);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X153E4);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X153F0);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0X153F2);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X153F4);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(0X153FA);
	create_insn	(x=0X153FC);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X153FE);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(0X1540A);
	create_insn	(x=0X1540C);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X1540E);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(0X1541A);
	create_insn	(x=0X1541E);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15424);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(0X15428);
	create_insn	(x=0X1542A);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X1542C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1542E);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X15430);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X15438);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(0X15466);
	create_insn	(x=0X1546E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15476);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1547A);
	op_plain_offset	(x,	1,	0X100042B8);
	op_plain_offset	(x,	129,	0X100042B8);
	create_insn	(x=0X15482);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X154D0);
	create_insn	(x=0X154D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X154EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X154F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X154FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15506);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X1550A);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X1550C);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15516);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X1551E);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15520);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15526);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(0X1552A);
	create_insn	(x=0X15538);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1553E);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15540);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X15546);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15548);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X15552);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15554);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15562);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15568);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15574);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15578);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X1557A);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X1557C);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15582);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X1558C);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15592);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15594);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X1559A);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X1559E);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X155A0);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X155A6);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X155A8);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X155AA);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X155AE);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(0X155B2);
	create_insn	(x=0X155B4);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X155B8);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X155BE);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X155C4);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X155C6);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X155CA);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X155D4);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X155E0);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X155E2);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X155E6);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X155EE);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X155F0);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X155F2);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X155F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X155F6);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X155FC);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15602);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15604);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1560C);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X1560E);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X15616);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15618);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1561E);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15620);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X15624);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15626);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1562C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X15630);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15632);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X15636);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15638);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X1563C);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X15646);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15648);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0X1564C);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0X15650);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X15656);
	op_plain_offset	(x,	1,	0X1000062E);
	op_plain_offset	(x,	129,	0X1000062E);
	create_insn	(x=0X15658);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(0X1565C);
	create_insn	(x=0X1567E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15686);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_insn	(x=0X156AC);
	op_plain_offset	(x,	1,	0X10000260);
	op_plain_offset	(x,	129,	0X10000260);
	create_dword	(0X156B8);
	create_dword	(x=0X156BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X156C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X156C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X156C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X156CC);
	create_dword	(0X156D0);
	create_dword	(x=0X156D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X156D8);
	create_insn	(0X156E2);
	create_insn	(0X156EA);
	make_array	(0X156EE,	0X2);
	create_insn	(0X156F0);
	set_name	(0X156F0,	"ofdm_init_instruction");
	create_insn	(x=0X156FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X156FC,	"switch 8 cases ",	0);
	set_cmt	(0X15702,	"switch jump",	0);
	set_cmt	(0X15706,	"jump table for switch statement",	0);
	create_byte	(0X15706);
	set_name	(0X15706,	"jpt_B702");
	create_byte	(0X15707);
	create_byte	(0X15708);
	create_byte	(0X15709);
	create_byte	(0X1570A);
	create_byte	(0X1570B);
	create_byte	(0X1570C);
	create_byte	(0X1570D);
	set_cmt	(0X1570E,	"jumptable 00015702 case 5",	1);
	create_insn	(0X1570E);
	set_cmt	(0X15716,	"jumptable 00015702 case 6",	1);
	create_insn	(0X15716);
	set_cmt	(0X1571A,	"addr10",	0);
	set_cmt	(0X15726,	"val",	0);
	set_cmt	(0X1572C,	"wrflag",	0);
	create_insn	(0X15732);
	create_insn	(x=0X15734);
	op_hex		(x,	1);
	create_insn	(x=0X15738);
	op_hex		(x,	1);
	set_cmt	(0X1573E,	"jumptable 00015702 case 7",	1);
	create_insn	(0X1573E);
	set_cmt	(0X15740,	"bus_n_bytes",	0);
	set_cmt	(0X1574A,	"jumptable 00015702 case 8",	1);
	create_insn	(0X1574A);
	set_cmt	(0X15752,	"wrflag",	0);
	set_cmt	(0X15754,	"addr10",	0);
	set_cmt	(0X15764,	"jumptable 00015702 default case",	1);
	set_name	(0X15764,	"def_B702");
	set_cmt	(0X15768,	"jumptable 00015702 case 9",	1);
	create_insn	(0X15768);
	set_cmt	(0X1576A,	"bus_n_bytes",	0);
	set_cmt	(0X15772,	"jumptable 00015702 case 10",	1);
	create_insn	(0X15772);
	create_insn	(x=0X1577C);
	op_hex		(x,	1);
	set_cmt	(0X15788,	"wrflag",	0);
	set_cmt	(0X1578A,	"addr10",	0);
	set_cmt	(0X157B0,	"jumptable 00015702 case 11",	1);
	create_insn	(0X157B0);
	set_cmt	(0X157BA,	"jumptable 00015702 case 12",	1);
	create_insn	(0X157BA);
	create_insn	(0X157D0);
	set_cmt	(0X157D4,	"data8",	0);
	create_insn	(0X157D4);
	set_cmt	(0X157D6,	"addr8",	0);
	set_cmt	(0X157D8,	"bus_n_bytes",	0);
	create_insn	(0X157E2);
	set_cmt	(0X157E4,	"addr8",	0);
	set_cmt	(0X157E6,	"bus_n_bytes",	0);
	create_insn	(x=0X157EC);
	op_hex		(x,	1);
	set_cmt	(0X157F0,	"data8",	0);
	set_cmt	(0X157F2,	"addr8",	0);
	set_cmt	(0X157F4,	"bus_n_bytes",	0);
	create_insn	(x=0X157FA);
	op_hex		(x,	1);
	set_cmt	(0X157FE,	"addr8",	0);
	set_cmt	(0X15804,	"bus_n_bytes",	0);
	create_insn	(0X1580A);
	set_name	(0X1580A,	"init_fpga_config");
	create_insn	(x=0X15820);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15822);
	op_hex		(x,	1);
	create_insn	(x=0X15826);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1582E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15830);
	op_hex		(x,	1);
	create_insn	(x=0X15834);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15836);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1585C);
	create_insn	(0X15866);
	create_insn	(0X15876);
	create_insn	(x=0X1587E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1588A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X158AA,	"wrflag",	0);
	create_insn	(0X158AA);
	set_cmt	(0X158AC,	"val",	0);
	set_cmt	(0X158AE,	"addr10",	0);
	set_cmt	(0X158B4,	"wrflag",	0);
	set_cmt	(0X158B6,	"addr10",	0);
	set_cmt	(0X158C2,	"wrflag",	0);
	set_cmt	(0X158C4,	"addr10",	0);
	set_cmt	(0X158CE,	"wrflag",	0);
	set_cmt	(0X158D0,	"addr10",	0);
	set_cmt	(0X158DE,	"wrflag",	0);
	set_cmt	(0X158E0,	"addr10",	0);
	create_insn	(0X158F0);
	set_cmt	(0X158F4,	"wrflag",	0);
	create_insn	(0X158F4);
	set_cmt	(0X158F6,	"val",	0);
	set_cmt	(0X158F8,	"addr10",	0);
	set_cmt	(0X158FE,	"wrflag",	0);
	set_cmt	(0X15900,	"val",	0);
	set_cmt	(0X15902,	"addr10",	0);
	set_cmt	(0X15908,	"wrflag",	0);
	set_cmt	(0X1590A,	"val",	0);
	set_cmt	(0X1590C,	"addr10",	0);
	set_cmt	(0X15918,	"wrflag",	0);
	set_cmt	(0X1591A,	"val",	0);
	set_cmt	(0X1591C,	"addr10",	0);
	set_cmt	(0X15928,	"wrflag",	0);
	set_cmt	(0X1592A,	"addr10",	0);
	set_cmt	(0X15936,	"data8",	0);
	set_cmt	(0X15938,	"addr8",	0);
	set_cmt	(0X1593A,	"bus_n_bytes",	0);
	create_insn	(0X1594A);
	create_insn	(0X15958);
	set_cmt	(0X1595A,	"addr8",	0);
	set_cmt	(0X1595C,	"bus_n_bytes",	0);
	create_insn	(x=0X15962);
	op_hex		(x,	1);
	set_cmt	(0X15966,	"data8",	0);
	set_cmt	(0X15968,	"addr8",	0);
	set_cmt	(0X1596A,	"bus_n_bytes",	0);
	create_insn	(x=0X15970);
	op_hex		(x,	1);
	set_cmt	(0X15974,	"addr8",	0);
	set_cmt	(0X1597A,	"bus_n_bytes",	0);
	create_insn	(0X15980);
	set_cmt	(0X15982,	"addr8",	0);
	set_cmt	(0X15984,	"bus_n_bytes",	0);
	create_insn	(x=0X1598A);
	op_hex		(x,	1);
	set_cmt	(0X1598E,	"data8",	0);
	set_cmt	(0X15990,	"addr8",	0);
	set_cmt	(0X15992,	"bus_n_bytes",	0);
	create_insn	(x=0X15998);
	op_hex		(x,	1);
	create_insn	(0X159A8);
	set_cmt	(0X159B4,	"addr8",	0);
	set_cmt	(0X159B6,	"bus_n_bytes",	0);
	create_insn	(x=0X159C0);
	op_hex		(x,	1);
	set_cmt	(0X159C4,	"addr8",	0);
	set_cmt	(0X159CA,	"bus_n_bytes",	0);
	create_insn	(x=0X159D0);
	op_hex		(x,	1);
	create_insn	(0X159D6);
	create_insn	(0X159D8);
	create_insn	(x=0X159E2);
	op_hex		(x,	1);
	create_insn	(0X159F4);
	create_insn	(x=0X159F8);
	op_stkvar	(x,	1);
	make_array	(0X15A0A,	0X2);
	create_dword	(x=0X15A0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X15A10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X15A14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X15A18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X15A1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X15A20);
	set_name	(0X15A20,	"get_board_version");
	create_insn	(0X15A26);
	create_insn	(x=0X15A28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15A2A);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X15A2C);
	op_hex		(x,	1);
	create_insn	(x=0X15A30);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X15A34);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15A36);
	op_hex		(x,	1);
	create_insn	(x=0X15A3A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15A42);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15A44);
	op_hex		(x,	1);
	create_insn	(x=0X15A48);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15A4A);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X15A4C);
	op_hex		(x,	1);
	create_insn	(x=0X15A50);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X15A52);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X15A54);
	op_hex		(x,	1);
	create_insn	(x=0X15A58);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X15A5A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15A5C);
	op_hex		(x,	1);
	create_insn	(x=0X15A60);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15A62);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15A64);
	op_hex		(x,	1);
	create_insn	(x=0X15A68);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15A6A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15A6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15A74);
	op_hex		(x,	1);
	create_insn	(x=0X15A7A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15A82);
	op_hex		(x,	1);
	create_insn	(0X15A8E);
	set_name	(0X15A8E,	"spi_raw_ct16_dt8_write");
	create_insn	(x=0X15A96);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15A9A);
	op_hex		(x,	1);
	create_insn	(x=0X15A9E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15AB2);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15AB4);
	op_hex		(x,	1);
	create_insn	(x=0X15AB8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X15ABC);
	set_name	(0X15ABC,	"spi_raw_ct16_dt8_read");
	create_insn	(x=0X15AC4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15AC6);
	op_hex		(x,	1);
	create_insn	(x=0X15ACA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15ADE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15AE0);
	op_hex		(x,	1);
	create_insn	(x=0X15AE4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X15AE8);
	create_insn	(x=0X15AF2);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15AF8);
	op_hex		(x,	1);
	create_insn	(x=0X15AFC);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X15B08);
	create_insn	(x=0X15B16);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15B18);
	op_hex		(x,	1);
	create_insn	(x=0X15B1C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X15B22);
	create_insn	(x=0X15B2C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15B32);
	op_hex		(x,	1);
	create_insn	(x=0X15B36);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X15B46);
	create_insn	(x=0X15B56);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15B58);
	op_hex		(x,	1);
	create_insn	(x=0X15B5C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X15B60);
	set_name	(0X15B60,	"ad936x_reg_sync_write");
	set_cmt	(0X15B6A,	"data8",	0);
	set_cmt	(0X15B6C,	"addr8",	0);
	set_cmt	(0X15B6E,	"bus_n_bytes",	0);
	create_insn	(x=0X15B76);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15B78);
	op_hex		(x,	1);
	create_insn	(x=0X15B7C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15B94);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15B96);
	op_hex		(x,	1);
	create_insn	(x=0X15B9A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	set_cmt	(0X15BA2,	"data8",	0);
	create_insn	(0X15BA2);
	set_cmt	(0X15BA8,	"addr8",	0);
	set_cmt	(0X15BAA,	"bus_n_bytes",	0);
	create_insn	(0X15BAE);
	set_name	(0X15BAE,	"ad936x_reg_sync_read");
	set_cmt	(0X15BB4,	"data8",	0);
	set_cmt	(0X15BB6,	"addr8",	0);
	set_cmt	(0X15BB8,	"bus_n_bytes",	0);
	create_insn	(x=0X15BC0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15BC2);
	op_hex		(x,	1);
	create_insn	(x=0X15BC6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15BDE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X15BE0);
	op_hex		(x,	1);
	create_insn	(x=0X15BE4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	set_cmt	(0X15BEC,	"data8",	0);
	create_insn	(0X15BEC);
	set_cmt	(0X15BEE,	"addr8",	0);
	set_cmt	(0X15BF0,	"bus_n_bytes",	0);
	make_array	(0X15BFA,	0X2);
	create_dword	(x=0X15BFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X15C00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X15C04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X15C08);
	create_insn	(0X15C0C);
	create_insn	(0X15C0E);
	create_insn	(x=0X15C10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15C12);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15C14);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15C18);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15C1A);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15C30);
	op_hex		(x,	1);
	create_insn	(x=0X15C3A);
	op_hex		(x,	1);
	create_insn	(x=0X15C42);
	op_hex		(x,	1);
	create_insn	(x=0X15C46);
	op_hex		(x,	1);
	create_insn	(x=0X15C4A);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(0X15C50);
	create_insn	(x=0X15C52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15C54);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15C58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15C60);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15C62);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X15C64);
	op_hex		(x,	1);
	create_insn	(x=0X15C6C);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15C6E);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X15C78);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15C80);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15C88);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X15C92,	"addr8",	0);
	create_insn	(0X15C92);
	set_cmt	(0X15C94,	"bus_n_bytes",	0);
	create_insn	(x=0X15C9A);
	op_hex		(x,	1);
	set_cmt	(0X15C9E,	"data8",	0);
	create_insn	(x=0X15C9E);
	op_hex		(x,	1);
	set_cmt	(0X15CA2,	"addr8",	0);
	set_cmt	(0X15CA4,	"bus_n_bytes",	0);
	set_cmt	(0X15CAA,	"addr8",	0);
	set_cmt	(0X15CAC,	"bus_n_bytes",	0);
	create_insn	(x=0X15CB2);
	op_hex		(x,	1);
	set_cmt	(0X15CB8,	"addr8",	0);
	create_insn	(0X15CB8);
	set_cmt	(0X15CBA,	"bus_n_bytes",	0);
	create_insn	(x=0X15CC0);
	op_hex		(x,	1);
	set_cmt	(0X15CC4,	"data8",	0);
	create_insn	(x=0X15CC4);
	op_hex		(x,	1);
	set_cmt	(0X15CC8,	"addr8",	0);
	set_cmt	(0X15CCA,	"bus_n_bytes",	0);
	set_cmt	(0X15CD0,	"addr8",	0);
	set_cmt	(0X15CD2,	"bus_n_bytes",	0);
	create_insn	(x=0X15CD8);
	op_hex		(x,	1);
	create_insn	(x=0X15CDE);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15CE0);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15CE2);
	op_hex		(x,	1);
	set_cmt	(0X15CF0,	"addr8",	0);
	set_cmt	(0X15CF2,	"bus_n_bytes",	0);
	set_cmt	(0X15CF8,	"data8",	0);
	create_insn	(x=0X15CF8);
	op_hex		(x,	1);
	set_cmt	(0X15CFC,	"addr8",	0);
	set_cmt	(0X15CFE,	"bus_n_bytes",	0);
	create_insn	(x=0X15D04);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15D06);
	op_hex		(x,	1);
	set_cmt	(0X15D1A,	"addr8",	0);
	set_cmt	(0X15D1C,	"bus_n_bytes",	0);
	set_cmt	(0X15D28,	"addr8",	0);
	set_cmt	(0X15D2A,	"bus_n_bytes",	0);
	create_insn	(x=0X15D30);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15D36);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15D38);
	op_hex		(x,	1);
	create_insn	(x=0X15D3C);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X15D3E);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15D44);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(0X15D48);
	create_insn	(x=0X15D62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X15D6A,	"addr8",	0);
	set_cmt	(0X15D6C,	"data8",	0);
	set_cmt	(0X15D6E,	"bus_n_bytes",	0);
	set_cmt	(0X15D74,	"data8",	0);
	set_cmt	(0X15D76,	"addr8",	0);
	set_cmt	(0X15D78,	"bus_n_bytes",	0);
	set_cmt	(0X15D7E,	"data8",	0);
	set_cmt	(0X15D80,	"addr8",	0);
	set_cmt	(0X15D82,	"bus_n_bytes",	0);
	set_cmt	(0X15D88,	"data8",	0);
	set_cmt	(0X15D8A,	"addr8",	0);
	set_cmt	(0X15D8C,	"bus_n_bytes",	0);
	create_insn	(x=0X15D98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15D9A);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15DA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X15DAC,	"addr8",	0);
	set_cmt	(0X15DAE,	"data8",	0);
	set_cmt	(0X15DB0,	"bus_n_bytes",	0);
	set_cmt	(0X15DB8,	"addr8",	0);
	set_cmt	(0X15DBA,	"data8",	0);
	set_cmt	(0X15DBC,	"bus_n_bytes",	0);
	set_cmt	(0X15DC2,	"data8",	0);
	set_cmt	(0X15DC4,	"addr8",	0);
	set_cmt	(0X15DC6,	"bus_n_bytes",	0);
	set_cmt	(0X15DCC,	"data8",	0);
	set_cmt	(0X15DCE,	"addr8",	0);
	set_cmt	(0X15DD0,	"bus_n_bytes",	0);
	set_cmt	(0X15DD6,	"data8",	0);
	set_cmt	(0X15DDC,	"addr8",	0);
	set_cmt	(0X15DDE,	"bus_n_bytes",	0);
	create_insn	(x=0X15DE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X15DE6,	"addr8",	0);
	set_cmt	(0X15DE8,	"data8",	0);
	set_cmt	(0X15DEA,	"bus_n_bytes",	0);
	create_insn	(0X15DFA);
	create_insn	(0X15DFE);
	set_cmt	(0X15E00,	"addr8",	0);
	set_cmt	(0X15E02,	"bus_n_bytes",	0);
	create_insn	(0X15E08);
	create_insn	(x=0X15E0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15E0E);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15E10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15E16);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X15E1C);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15E20);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X15E26);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15E28);
	op_hex		(x,	1);
	create_insn	(x=0X15E40);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15E42);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15E4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X15E54,	"addr8",	0);
	set_cmt	(0X15E56,	"data8",	0);
	set_cmt	(0X15E58,	"bus_n_bytes",	0);
	create_insn	(x=0X15E5E);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15E60);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X15E70,	"addr8",	0);
	set_cmt	(0X15E72,	"data8",	0);
	set_cmt	(0X15E74,	"bus_n_bytes",	0);
	create_insn	(x=0X15E7A);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15E7C);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X15E8C,	"addr8",	0);
	set_cmt	(0X15E8E,	"data8",	0);
	set_cmt	(0X15E90,	"bus_n_bytes",	0);
	create_insn	(x=0X15E96);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15E98);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X15EA6,	"addr8",	0);
	set_cmt	(0X15EA8,	"data8",	0);
	set_cmt	(0X15EAA,	"bus_n_bytes",	0);
	create_insn	(x=0X15EB0);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15EB8);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15EBA);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15ECA);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15EE4);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X15EE8);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15EEA);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15EF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X15EFC,	"addr8",	0);
	set_cmt	(0X15EFE,	"data8",	0);
	set_cmt	(0X15F00,	"bus_n_bytes",	0);
	create_insn	(x=0X15F06);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15F08);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X15F18,	"addr8",	0);
	set_cmt	(0X15F1A,	"data8",	0);
	set_cmt	(0X15F1C,	"bus_n_bytes",	0);
	create_insn	(0X15F24);
	create_insn	(0X15F26);
	create_insn	(x=0X15F28);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15F2A);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X15F3A,	"addr8",	0);
	set_cmt	(0X15F3C,	"data8",	0);
	set_cmt	(0X15F3E,	"bus_n_bytes",	0);
	create_insn	(x=0X15F44);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15F46);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X15F56,	"addr8",	0);
	set_cmt	(0X15F58,	"data8",	0);
	set_cmt	(0X15F5A,	"bus_n_bytes",	0);
	create_insn	(x=0X15F60);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15F62);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15F78);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X15F7A);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15F80);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X15F82);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X15F86);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X15F88);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X15F94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X15FA4);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	set_cmt	(0X15FA8,	"addr8",	0);
	set_cmt	(0X15FB0,	"data8",	0);
	set_cmt	(0X15FB2,	"bus_n_bytes",	0);
	create_insn	(x=0X15FB8);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	set_cmt	(0X15FBC,	"addr8",	0);
	set_cmt	(0X15FC4,	"data8",	0);
	set_cmt	(0X15FC6,	"bus_n_bytes",	0);
	create_insn	(x=0X15FCC);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	set_cmt	(0X15FD0,	"addr8",	0);
	set_cmt	(0X15FD8,	"data8",	0);
	set_cmt	(0X15FDA,	"bus_n_bytes",	0);
	create_insn	(x=0X15FE0);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	set_cmt	(0X15FE4,	"addr8",	0);
	set_cmt	(0X15FEC,	"data8",	0);
	set_cmt	(0X15FEE,	"bus_n_bytes",	0);
	create_insn	(x=0X15FF4);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	create_dword	(x=0X16000);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X16004);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X16008);
	create_dword	(x=0X1600C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X16010);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X16014);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X16018);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1601C);
	create_insn	(x=0X16020);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	set_cmt	(0X16024,	"addr8",	0);
	set_cmt	(0X1602C,	"data8",	0);
	set_cmt	(0X1602E,	"bus_n_bytes",	0);
	create_insn	(x=0X16034);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	set_cmt	(0X16038,	"addr8",	0);
	set_cmt	(0X16040,	"data8",	0);
	set_cmt	(0X16042,	"bus_n_bytes",	0);
	create_insn	(x=0X16048);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	set_cmt	(0X1604C,	"addr8",	0);
	set_cmt	(0X16054,	"data8",	0);
	set_cmt	(0X16056,	"bus_n_bytes",	0);
	create_insn	(x=0X1605C);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	set_cmt	(0X16060,	"addr8",	0);
	set_cmt	(0X16068,	"data8",	0);
	set_cmt	(0X1606A,	"bus_n_bytes",	0);
	create_insn	(x=0X16070);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	create_insn	(x=0X16080);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16082);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16088);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1608A);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X16090);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16092);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X1609C);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X160A2);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X160A4);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X160AA);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X160AC);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X160AE);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X160B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X160C0);
	set_cmt	(0X160C4,	"data8",	0);
	set_cmt	(0X160C6,	"addr8",	0);
	set_cmt	(0X160C8,	"bus_n_bytes",	0);
	create_insn	(0X160CE);
	create_insn	(0X160D0);
	create_insn	(x=0X160D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X160D4);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X160DC,	"addr8",	0);
	set_cmt	(0X160DE,	"bus_n_bytes",	0);
	create_insn	(x=0X160E4);
	op_hex		(x,	1);
	create_insn	(x=0X160E8);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X160F0);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X160FA);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X160FE,	"data8",	0);
	set_cmt	(0X16100,	"addr8",	0);
	set_cmt	(0X16102,	"bus_n_bytes",	0);
	create_insn	(x=0X16108);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X1610C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1610E);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(0X1611C);
	set_cmt	(0X16120,	"data8",	0);
	set_cmt	(0X16122,	"addr8",	0);
	set_cmt	(0X16124,	"bus_n_bytes",	0);
	set_cmt	(0X1612E,	"addr8",	0);
	set_cmt	(0X16130,	"bus_n_bytes",	0);
	set_cmt	(0X16136,	"data8",	0);
	create_insn	(x=0X16136);
	op_hex		(x,	1);
	set_cmt	(0X1613A,	"addr8",	0);
	set_cmt	(0X1613C,	"bus_n_bytes",	0);
	set_cmt	(0X16142,	"addr8",	0);
	set_cmt	(0X16144,	"bus_n_bytes",	0);
	create_insn	(x=0X1614A);
	op_hex		(x,	1);
	set_cmt	(0X1614E,	"addr8",	0);
	set_cmt	(0X16150,	"bus_n_bytes",	0);
	create_insn	(x=0X16156);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X1615A);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X1615E,	"data8",	0);
	set_cmt	(0X16160,	"addr8",	0);
	set_cmt	(0X16162,	"bus_n_bytes",	0);
	set_cmt	(0X1616A,	"data8",	0);
	create_insn	(x=0X1616A);
	op_hex		(x,	1);
	set_cmt	(0X1616E,	"addr8",	0);
	set_cmt	(0X16170,	"bus_n_bytes",	0);
	set_cmt	(0X16180,	"addr8",	0);
	create_insn	(0X16180);
	set_cmt	(0X16182,	"bus_n_bytes",	0);
	set_cmt	(0X16188,	"data8",	0);
	create_insn	(x=0X16188);
	op_hex		(x,	1);
	set_cmt	(0X1618C,	"addr8",	0);
	set_cmt	(0X1618E,	"bus_n_bytes",	0);
	create_insn	(0X1619C);
	create_insn	(x=0X1619E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X161A0);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(0X161A4);
	set_name	(0X161A4,	"fpga_set_receiver_id");
	set_cmt	(0X161AE,	"data8",	0);
	set_cmt	(0X161B0,	"addr8",	0);
	set_cmt	(0X161B2,	"bus_n_bytes",	0);
	set_cmt	(0X161B8,	"data8",	0);
	set_cmt	(0X161BA,	"addr8",	0);
	set_cmt	(0X161BC,	"bus_n_bytes",	0);
	set_cmt	(0X161C2,	"data8",	0);
	set_cmt	(0X161C4,	"addr8",	0);
	set_cmt	(0X161C6,	"bus_n_bytes",	0);
	set_cmt	(0X161CC,	"data8",	0);
	set_cmt	(0X161CE,	"addr8",	0);
	set_cmt	(0X161D0,	"bus_n_bytes",	0);
	set_cmt	(0X161D6,	"data8",	0);
	set_cmt	(0X161D8,	"addr8",	0);
	set_cmt	(0X161DA,	"bus_n_bytes",	0);
	create_insn	(0X161EA);
	create_insn	(x=0X161EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X161F0);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16202);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16204);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1620C,	"addr8",	0);
	set_cmt	(0X1620E,	"data8",	0);
	set_cmt	(0X16210,	"bus_n_bytes",	0);
	create_insn	(x=0X16216);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X16218,	"addr8",	0);
	set_cmt	(0X16220,	"data8",	0);
	set_cmt	(0X16222,	"bus_n_bytes",	0);
	create_insn	(x=0X16228);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X1622A,	"addr8",	0);
	set_cmt	(0X16232,	"data8",	0);
	set_cmt	(0X16234,	"bus_n_bytes",	0);
	create_insn	(x=0X1623A);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X1623C,	"addr8",	0);
	set_cmt	(0X16242,	"data8",	0);
	set_cmt	(0X16244,	"bus_n_bytes",	0);
	create_insn	(x=0X16250);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16254);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X1625E);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16260);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X16266,	"addr8",	0);
	set_cmt	(0X16268,	"data8",	0);
	set_cmt	(0X1626A,	"bus_n_bytes",	0);
	create_insn	(x=0X16270);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X16272,	"addr8",	0);
	set_cmt	(0X1627A,	"data8",	0);
	set_cmt	(0X1627C,	"bus_n_bytes",	0);
	create_insn	(x=0X16282);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X16284,	"addr8",	0);
	set_cmt	(0X1628C,	"data8",	0);
	set_cmt	(0X1628E,	"bus_n_bytes",	0);
	create_insn	(x=0X16294);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X16296,	"addr8",	0);
	set_cmt	(0X1629E,	"data8",	0);
	set_cmt	(0X162A0,	"bus_n_bytes",	0);
	create_insn	(x=0X162A6);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X162A8,	"addr8",	0);
	set_cmt	(0X162B0,	"data8",	0);
	set_cmt	(0X162B6,	"bus_n_bytes",	0);
	create_insn	(x=0X162BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X162BE,	"data8",	0);
	set_cmt	(0X162C0,	"addr8",	0);
	set_cmt	(0X162C2,	"bus_n_bytes",	0);
	create_insn	(0X162D2);
	create_insn	(0X162D4);
	create_insn	(x=0X162D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X162DE);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X162E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X162E4);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X162EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X162F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16308);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X1630E);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X16316,	"data8",	0);
	set_cmt	(0X16318,	"addr8",	0);
	set_cmt	(0X1631A,	"bus_n_bytes",	0);
	set_cmt	(0X16320,	"data8",	0);
	create_insn	(x=0X16320);
	op_plain_offset	(x,	1,	0X100042DC);
	op_plain_offset	(x,	129,	0X100042DC);
	set_cmt	(0X16322,	"addr8",	0);
	set_cmt	(0X16324,	"bus_n_bytes",	0);
	set_cmt	(0X1632A,	"data8",	0);
	create_insn	(x=0X1632A);
	op_plain_offset	(x,	1,	0X100042DC);
	op_plain_offset	(x,	129,	0X100042DC);
	set_cmt	(0X1632C,	"addr8",	0);
	set_cmt	(0X1632E,	"bus_n_bytes",	0);
	set_cmt	(0X16334,	"data8",	0);
	create_insn	(x=0X16334);
	op_plain_offset	(x,	1,	0X100042DC);
	op_plain_offset	(x,	129,	0X100042DC);
	set_cmt	(0X16336,	"addr8",	0);
	set_cmt	(0X16338,	"bus_n_bytes",	0);
	set_cmt	(0X1633E,	"data8",	0);
	set_cmt	(0X16340,	"addr8",	0);
	set_cmt	(0X16342,	"bus_n_bytes",	0);
	set_cmt	(0X16348,	"data8",	0);
	create_insn	(x=0X16348);
	op_plain_offset	(x,	1,	0X100042E0);
	op_plain_offset	(x,	129,	0X100042E0);
	set_cmt	(0X1634A,	"addr8",	0);
	set_cmt	(0X1634C,	"bus_n_bytes",	0);
	set_cmt	(0X16352,	"data8",	0);
	create_insn	(x=0X16352);
	op_plain_offset	(x,	1,	0X100042E0);
	op_plain_offset	(x,	129,	0X100042E0);
	set_cmt	(0X16354,	"addr8",	0);
	set_cmt	(0X16356,	"bus_n_bytes",	0);
	set_cmt	(0X1635C,	"data8",	0);
	create_insn	(x=0X1635C);
	op_plain_offset	(x,	1,	0X100042E0);
	op_plain_offset	(x,	129,	0X100042E0);
	set_cmt	(0X1635E,	"addr8",	0);
	set_cmt	(0X16360,	"bus_n_bytes",	0);
	set_cmt	(0X1636C,	"data8",	0);
	set_cmt	(0X16370,	"bus_n_bytes",	0);
	create_insn	(x=0X1637E);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16382);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16384);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X1638A);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X1638E,	"addr8",	0);
	set_cmt	(0X16394,	"bus_n_bytes",	0);
	create_insn	(x=0X1639E);
	op_hex		(x,	1);
	create_insn	(0X163A4);
	create_insn	(0X163A8);
	create_insn	(x=0X163AC);
	op_hex		(x,	1);
	set_cmt	(0X163B0,	"addr8",	0);
	set_cmt	(0X163B2,	"bus_n_bytes",	0);
	create_insn	(x=0X163B8);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X163BC);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X163C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X163CA);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(0X163CE);
	create_insn	(x=0X163D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X163DC);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	set_cmt	(0X16400,	"addr8",	0);
	set_cmt	(0X16402,	"bus_n_bytes",	0);
	set_cmt	(0X1640A,	"addr8",	0);
	set_cmt	(0X1640C,	"bus_n_bytes",	0);
	set_cmt	(0X16416,	"addr8",	0);
	set_cmt	(0X16418,	"bus_n_bytes",	0);
	set_cmt	(0X1643A,	"addr8",	0);
	create_insn	(0X1643A);
	set_cmt	(0X1643C,	"bus_n_bytes",	0);
	set_cmt	(0X16444,	"addr8",	0);
	set_cmt	(0X16446,	"bus_n_bytes",	0);
	create_insn	(0X16452);
	create_dword	(x=0X1646C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X16470);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X16474);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X16478);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1647C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X16480);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X16484);
	create_dword	(0X16488);
	create_dword	(0X1648C);
	create_insn	(0X16490);
	create_insn	(0X16492);
	create_insn	(x=0X164B2);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	create_insn	(x=0X164B8);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	create_insn	(x=0X164CE);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	create_insn	(x=0X164DE);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	create_insn	(0X164E4);
	create_insn	(0X164E6);
	create_insn	(x=0X164EA);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	create_insn	(x=0X16512);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16518);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1651A);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X16520);
	op_plain_offset	(x,	1,	0X100005CC);
	op_plain_offset	(x,	129,	0X100005CC);
	create_insn	(x=0X16524);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	create_insn	(x=0X1652C);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	create_insn	(x=0X16534);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	create_insn	(x=0X1653C);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	create_insn	(x=0X16544);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	create_insn	(x=0X1654E);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	create_insn	(0X16554);
	create_insn	(x=0X16556);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16558);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X1655A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16560);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16568);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X1656C);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X16578);
	op_plain_offset	(x,	1,	0X100042C4);
	op_plain_offset	(x,	129,	0X100042C4);
	create_insn	(x=0X1657E);
	op_plain_offset	(x,	1,	0X100042C4);
	op_plain_offset	(x,	129,	0X100042C4);
	create_insn	(x=0X16584);
	op_plain_offset	(x,	1,	0X100042C4);
	op_plain_offset	(x,	129,	0X100042C4);
	create_insn	(x=0X1658E);
	op_plain_offset	(x,	1,	0X100042C4);
	op_plain_offset	(x,	129,	0X100042C4);
	create_insn	(x=0X165AE);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X165B0);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X165B2);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X165B6);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X165B8);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X165C2);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X165CA);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X165D4);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X165D6);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(0X165DA);
	create_insn	(x=0X165DC);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X165DE);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X165E0);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X165E2);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X165E6);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X165EA);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X165EE);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X165F4);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(0X165FE);
	create_insn	(0X16608);
	create_insn	(0X16612);
	create_insn	(0X1661E);
	create_insn	(x=0X16620);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X1662A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X16632);
	set_name	(0X16632,	"tcx_config_update1");
	create_insn	(x=0X16634);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16636);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X1663A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16640);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16644);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	set_cmt	(0X1664A,	"addr8",	0);
	set_cmt	(0X1664C,	"bus_n_bytes",	0);
	create_insn	(x=0X16652);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	set_cmt	(0X16654,	"data8",	0);
	create_insn	(x=0X16654);
	op_hex		(x,	1);
	set_cmt	(0X16658,	"addr8",	0);
	set_cmt	(0X1665A,	"bus_n_bytes",	0);
	create_insn	(x=0X16664);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	set_cmt	(0X16670,	"wrflag",	0);
	create_insn	(0X16670);
	set_cmt	(0X16672,	"addr10",	0);
	create_insn	(x=0X16672);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X16678);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X16680,	"val",	0);
	create_insn	(x=0X16680);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X16684,	"wrflag",	0);
	set_cmt	(0X16686,	"addr10",	0);
	create_insn	(x=0X16686);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X1668C,	"wrflag",	0);
	set_cmt	(0X1668E,	"addr10",	0);
	create_insn	(x=0X1668E);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X16694);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X1669C);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X166A2);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(0X166A6);
	set_cmt	(0X166AC,	"data8",	0);
	create_insn	(x=0X166AC);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X166B0,	"addr8",	0);
	create_insn	(x=0X166B0);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	set_cmt	(0X166B2,	"bus_n_bytes",	0);
	set_cmt	(0X166BE,	"wrflag",	0);
	set_cmt	(0X166C0,	"addr10",	0);
	create_insn	(x=0X166C0);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(x=0X166C6);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X166CE,	"val",	0);
	create_insn	(x=0X166CE);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X166D2,	"wrflag",	0);
	set_cmt	(0X166D4,	"addr10",	0);
	create_insn	(x=0X166D4);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X166DA,	"wrflag",	0);
	set_cmt	(0X166DC,	"addr10",	0);
	create_insn	(x=0X166DC);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(x=0X166E2);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X166EA,	"val",	0);
	create_insn	(x=0X166EA);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X166EE,	"wrflag",	0);
	set_cmt	(0X166F0,	"addr10",	0);
	create_insn	(x=0X166F0);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X166F6,	"data8",	0);
	create_insn	(x=0X166F6);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	set_cmt	(0X166F8,	"addr8",	0);
	set_cmt	(0X166FA,	"bus_n_bytes",	0);
	create_insn	(x=0X16700);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16704);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X16706);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X1670C);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X1670E);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X16716);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X1671A,	"addr8",	0);
	set_cmt	(0X1671C,	"bus_n_bytes",	0);
	create_insn	(x=0X16722);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_3(void) {
        auto x;
#define id x

	set_cmt	(0X16724,	"data8",	0);
	create_insn	(x=0X16724);
	op_hex		(x,	1);
	set_cmt	(0X16728,	"addr8",	0);
	set_cmt	(0X1672A,	"bus_n_bytes",	0);
	create_insn	(x=0X16730);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X1673A);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	set_cmt	(0X1673E,	"wrflag",	0);
	set_cmt	(0X16740,	"val",	0);
	set_cmt	(0X16742,	"addr10",	0);
	create_insn	(x=0X16742);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(0X1674E);
	set_cmt	(0X16754,	"data8",	0);
	set_cmt	(0X16756,	"addr8",	0);
	create_insn	(x=0X16756);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	set_cmt	(0X16758,	"bus_n_bytes",	0);
	set_cmt	(0X16764,	"wrflag",	0);
	set_cmt	(0X16766,	"val",	0);
	set_cmt	(0X16768,	"addr10",	0);
	create_insn	(x=0X16768);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(x=0X16772);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(0X16776);
	create_insn	(0X16778);
	create_insn	(x=0X1677C);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X16784);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	set_cmt	(0X1678A,	"wrflag",	0);
	create_insn	(0X1678A);
	set_cmt	(0X1678C,	"val",	0);
	set_cmt	(0X1678E,	"addr10",	0);
	create_insn	(x=0X1678E);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X16794,	"wrflag",	0);
	set_cmt	(0X16796,	"val",	0);
	set_cmt	(0X16798,	"addr10",	0);
	create_insn	(x=0X16798);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X167A0,	"data8",	0);
	create_insn	(x=0X167A0);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	set_cmt	(0X167A2,	"addr8",	0);
	set_cmt	(0X167A4,	"bus_n_bytes",	0);
	create_insn	(x=0X167AA);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X167AE);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X167B0);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X167BC);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	set_cmt	(0X167C6,	"addr8",	0);
	set_cmt	(0X167C8,	"bus_n_bytes",	0);
	create_insn	(x=0X167CE);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X167D6,	"data8",	0);
	create_insn	(x=0X167D6);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X167DA,	"addr8",	0);
	set_cmt	(0X167DC,	"bus_n_bytes",	0);
	create_insn	(0X167EC);
	create_insn	(0X167EE);
	create_insn	(x=0X167F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X167F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X167F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X16806,	"addr8",	0);
	set_cmt	(0X16808,	"bus_n_bytes",	0);
	create_insn	(x=0X1680E);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X16810,	"addr8",	0);
	set_cmt	(0X16812,	"bus_n_bytes",	0);
	create_insn	(x=0X16818);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X1681A,	"addr8",	0);
	set_cmt	(0X1681C,	"bus_n_bytes",	0);
	create_insn	(x=0X16822);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X16824,	"addr8",	0);
	set_cmt	(0X16826,	"bus_n_bytes",	0);
	create_insn	(x=0X1682C);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X1682E,	"addr8",	0);
	set_cmt	(0X16830,	"bus_n_bytes",	0);
	create_insn	(x=0X16836);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X16838);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X1683A);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X1683E);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X16840);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16844);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1684A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16860);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16864);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X1686A,	"addr8",	0);
	set_cmt	(0X1686C,	"bus_n_bytes",	0);
	create_insn	(x=0X16872);
	op_hex		(x,	1);
	set_cmt	(0X16876,	"addr8",	0);
	set_cmt	(0X16878,	"bus_n_bytes",	0);
	set_cmt	(0X1687E,	"addr8",	0);
	set_cmt	(0X16880,	"bus_n_bytes",	0);
	set_cmt	(0X16886,	"data8",	0);
	create_insn	(x=0X16886);
	op_hex		(x,	1);
	set_cmt	(0X1688A,	"addr8",	0);
	set_cmt	(0X1688C,	"bus_n_bytes",	0);
	set_cmt	(0X16896,	"addr8",	0);
	set_cmt	(0X16898,	"bus_n_bytes",	0);
	create_dword	(0X168A0);
	create_dword	(0X168A4);
	create_dword	(0X168A8);
	create_dword	(x=0X168AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X168B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X168B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X168B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X168BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X168C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X168C4);
	set_cmt	(0X168C6,	"addr8",	0);
	set_cmt	(0X168C8,	"bus_n_bytes",	0);
	create_insn	(x=0X168CE);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X168D0,	"addr8",	0);
	set_cmt	(0X168D2,	"bus_n_bytes",	0);
	create_insn	(x=0X168D8);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X168DA,	"addr8",	0);
	set_cmt	(0X168DC,	"bus_n_bytes",	0);
	create_insn	(x=0X168E2);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X168E4,	"addr8",	0);
	set_cmt	(0X168E6,	"bus_n_bytes",	0);
	create_insn	(x=0X168EC);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X168EE,	"addr8",	0);
	set_cmt	(0X168F0,	"bus_n_bytes",	0);
	create_insn	(x=0X168F6);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X168F8,	"addr8",	0);
	set_cmt	(0X168FA,	"bus_n_bytes",	0);
	create_insn	(x=0X16900);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X16902,	"addr8",	0);
	set_cmt	(0X16904,	"bus_n_bytes",	0);
	create_insn	(x=0X1690A);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X1690C,	"addr8",	0);
	set_cmt	(0X1690E,	"bus_n_bytes",	0);
	create_insn	(x=0X16914);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X16916,	"addr8",	0);
	set_cmt	(0X16918,	"bus_n_bytes",	0);
	create_insn	(x=0X1691E);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X16920,	"addr8",	0);
	set_cmt	(0X16922,	"bus_n_bytes",	0);
	create_insn	(x=0X16928);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X1692A,	"addr8",	0);
	set_cmt	(0X1692C,	"bus_n_bytes",	0);
	create_insn	(x=0X16932);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X16934,	"addr8",	0);
	set_cmt	(0X16936,	"bus_n_bytes",	0);
	create_insn	(x=0X1693C);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X1693E,	"addr8",	0);
	set_cmt	(0X16940,	"bus_n_bytes",	0);
	create_insn	(x=0X16946);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X16948,	"addr8",	0);
	set_cmt	(0X1694A,	"bus_n_bytes",	0);
	create_insn	(x=0X16950);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X16952,	"addr8",	0);
	set_cmt	(0X16954,	"bus_n_bytes",	0);
	create_insn	(x=0X1695A);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X1695C,	"addr8",	0);
	set_cmt	(0X1695E,	"bus_n_bytes",	0);
	create_insn	(x=0X16964);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X16966,	"addr8",	0);
	set_cmt	(0X16968,	"bus_n_bytes",	0);
	create_insn	(x=0X1696E);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X16970,	"addr8",	0);
	set_cmt	(0X16972,	"bus_n_bytes",	0);
	create_insn	(x=0X16978);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X1697A,	"addr8",	0);
	set_cmt	(0X1697C,	"bus_n_bytes",	0);
	create_insn	(x=0X16982);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X16984);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16988);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X16994);
	create_insn	(0X16996);
	create_insn	(x=0X1699A);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	set_cmt	(0X169A4,	"addr8",	0);
	set_cmt	(0X169A6,	"bus_n_bytes",	0);
	create_insn	(x=0X169AC);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X169B2,	"addr8",	0);
	set_cmt	(0X169B4,	"bus_n_bytes",	0);
	create_insn	(x=0X169BA);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X169C0,	"addr8",	0);
	set_cmt	(0X169C2,	"bus_n_bytes",	0);
	create_insn	(x=0X169C8);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X169CE,	"addr8",	0);
	set_cmt	(0X169D0,	"bus_n_bytes",	0);
	create_insn	(x=0X169D6);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X169E4);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X169E8);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X169EE);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X169F4);
	op_hex		(x,	1);
	set_cmt	(0X169F8,	"switch 8 cases ",	0);
	set_cmt	(0X169FC,	"switch jump",	0);
	set_cmt	(0X16A00,	"jump table for switch statement",	0);
	create_byte	(0X16A00);
	set_name	(0X16A00,	"jpt_C9FC");
	create_byte	(0X16A01);
	create_byte	(0X16A02);
	create_byte	(0X16A03);
	create_byte	(0X16A04);
	create_byte	(0X16A05);
	create_byte	(0X16A06);
	create_byte	(0X16A07);
	set_cmt	(0X16A08,	"jumptable 000169FC case 0",	1);
	create_insn	(0X16A08);
	set_cmt	(0X16A0E,	"jumptable 000169FC case 1",	1);
	create_insn	(0X16A0E);
	set_cmt	(0X16A14,	"jumptable 000169FC case 5",	1);
	create_insn	(0X16A14);
	set_cmt	(0X16A1A,	"jumptable 000169FC case 2",	1);
	create_insn	(0X16A1A);
	set_cmt	(0X16A20,	"jumptable 000169FC case 3",	1);
	create_insn	(0X16A20);
	set_cmt	(0X16A26,	"jumptable 000169FC case 7",	1);
	create_insn	(0X16A26);
	create_insn	(x=0X16A2A);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X16A2E,	"jumptable 000169FC default case",	1);
	create_insn	(x=0X16A2E);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_name	(0X16A2E,	"def_C9FC");
	create_insn	(x=0X16A30);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16A34);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16A38);
	op_hex		(x,	1);
	create_insn	(0X16A3E);
	create_insn	(x=0X16A40);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16A46);
	op_hex		(x,	1);
	create_insn	(x=0X16A4A);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16A5C);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16A5E);
	op_hex		(x,	1);
	create_insn	(x=0X16A64);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16A66);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16A70);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(0X16A74);
	create_insn	(x=0X16A78);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X16A7C);
	op_hex		(x,	1);
	create_insn	(x=0X16A80);
	op_plain_offset	(x,	1,	0X400FC0C4);
	op_plain_offset	(x,	129,	0X400FC0C4);
	create_insn	(x=0X16A86);
	op_hex		(x,	1);
	create_insn	(x=0X16A8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16A90);
	op_plain_offset	(x,	1,	0X40008000);
	op_plain_offset	(x,	129,	0X40008000);
	create_insn	(x=0X16A98);
	op_plain_offset	(x,	1,	0X40008000);
	op_plain_offset	(x,	129,	0X40008000);
	create_insn	(x=0X16A9A);
	op_plain_offset	(x,	1,	0X40008000);
	op_plain_offset	(x,	129,	0X40008000);
	create_insn	(x=0X16A9E);
	op_plain_offset	(x,	1,	0X40008000);
	op_plain_offset	(x,	129,	0X40008000);
	create_insn	(x=0X16AA4);
	op_plain_offset	(x,	1,	0X40008000);
	op_plain_offset	(x,	129,	0X40008000);
	create_insn	(x=0X16AAA);
	op_plain_offset	(x,	1,	0X40008000);
	op_plain_offset	(x,	129,	0X40008000);
	create_insn	(x=0X16AB0);
	op_plain_offset	(x,	1,	0X40008000);
	op_plain_offset	(x,	129,	0X40008000);
	create_insn	(x=0X16AB6);
	op_plain_offset	(x,	1,	0X40008000);
	op_plain_offset	(x,	129,	0X40008000);
	create_insn	(x=0X16ABC);
	op_plain_offset	(x,	1,	0X40008000);
	op_plain_offset	(x,	129,	0X40008000);
	create_insn	(x=0X16ABE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16ADA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16ADE);
	op_plain_offset	(x,	1,	0X40008000);
	op_plain_offset	(x,	129,	0X40008000);
	create_insn	(x=0X16AE4);
	op_plain_offset	(x,	1,	0X40008000);
	op_plain_offset	(x,	129,	0X40008000);
	create_insn	(x=0X16AE8);
	op_plain_offset	(x,	1,	0X40008000);
	op_plain_offset	(x,	129,	0X40008000);
	create_insn	(x=0X16AEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16AF0);
	op_plain_offset	(x,	1,	0X40008000);
	op_plain_offset	(x,	129,	0X40008000);
	create_insn	(x=0X16AF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16AF8);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16B00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16B04);
	op_plain_offset	(x,	1,	0X40008000);
	op_plain_offset	(x,	129,	0X40008000);
	create_insn	(x=0X16B0A);
	op_plain_offset	(x,	1,	0X40008000);
	op_plain_offset	(x,	129,	0X40008000);
	create_insn	(x=0X16B0E);
	op_plain_offset	(x,	1,	0X40008000);
	op_plain_offset	(x,	129,	0X40008000);
	create_insn	(x=0X16B12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16B16);
	op_plain_offset	(x,	1,	0X40028000);
	op_plain_offset	(x,	129,	0X40028000);
	create_insn	(x=0X16B1A);
	op_hex		(x,	1);
	create_insn	(x=0X16B24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16B2A);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16B2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16B32);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X16B34);
	op_hex		(x,	1);
	create_insn	(x=0X16B38);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X16B3C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X16B3E);
	op_hex		(x,	1);
	create_insn	(x=0X16B42);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X16B44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16B58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16B5C);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16B62);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(0X16B66);
	create_insn	(x=0X16B76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16B7C);
	op_plain_offset	(x,	1,	0X100042C4);
	op_plain_offset	(x,	129,	0X100042C4);
	create_insn	(x=0X16B80);
	op_plain_offset	(x,	1,	0X100042C4);
	op_plain_offset	(x,	129,	0X100042C4);
	create_insn	(x=0X16B82);
	op_plain_offset	(x,	1,	0X100042C4);
	op_plain_offset	(x,	129,	0X100042C4);
	create_insn	(x=0X16B86);
	op_plain_offset	(x,	1,	0X100042C4);
	op_plain_offset	(x,	129,	0X100042C4);
	create_insn	(x=0X16BA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16BA6);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BAA);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BAC);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BAE);
	op_hex		(x,	1);
	create_insn	(x=0X16BB6);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BB8);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BBA);
	op_hex		(x,	1);
	create_insn	(x=0X16BC2);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BC4);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BC6);
	op_hex		(x,	1);
	create_insn	(x=0X16BCA);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BCC);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BCE);
	op_hex		(x,	1);
	create_insn	(x=0X16BD2);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BD6);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BDA);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BDC);
	op_hex		(x,	1);
	create_insn	(x=0X16BE2);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BE4);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BE6);
	op_hex		(x,	1);
	create_insn	(x=0X16BEA);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BEC);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BEE);
	op_hex		(x,	1);
	create_insn	(x=0X16BF2);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BF4);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BF6);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BFA);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16BFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16C04);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16C06);
	op_hex		(x,	1);
	create_insn	(x=0X16C10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16C16);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16C18);
	op_hex		(x,	1);
	create_insn	(x=0X16C22);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16C24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16C38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16C6C);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	create_insn	(x=0X16C72);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16C74);
	op_hex		(x,	1);
	create_insn	(x=0X16C78);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16C7A);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16C7E);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16C84);
	op_plain_offset	(x,	1,	0X100044FE);
	op_plain_offset	(x,	129,	0X100044FE);
	create_insn	(x=0X16C88);
	op_plain_offset	(x,	1,	0X1000451E);
	op_plain_offset	(x,	129,	0X1000451E);
	create_insn	(0X16C92);
	create_insn	(0X16C98);
	create_insn	(x=0X16C9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X16CA0);
	create_insn	(x=0X16CA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16CA8);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16CB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16CB2);
	op_plain_offset	(x,	1,	0X40028000);
	op_plain_offset	(x,	129,	0X40028000);
	create_insn	(x=0X16CB6);
	op_hex		(x,	1);
	create_insn	(x=0X16CBC);
	op_plain_offset	(x,	1,	0X400280AC);
	op_plain_offset	(x,	129,	0X400280AC);
	create_insn	(x=0X16CBE);
	op_hex		(x,	1);
	create_insn	(x=0X16CC2);
	op_plain_offset	(x,	1,	0X400280AC);
	op_plain_offset	(x,	129,	0X400280AC);
	create_insn	(x=0X16CC6);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16CCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16CD0);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16CD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16CDA);
	op_plain_offset	(x,	1,	0X40028000);
	op_plain_offset	(x,	129,	0X40028000);
	create_insn	(x=0X16CDE);
	op_hex		(x,	1);
	create_insn	(x=0X16CE6);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16CEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16CEE);
	op_plain_offset	(x,	1,	0X40008000);
	op_plain_offset	(x,	129,	0X40008000);
	create_insn	(0X16CF2);
	create_insn	(x=0X16CF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16CF8);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16D16);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16D18);
	op_hex		(x,	1);
	create_insn	(x=0X16D1C);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16D26);
	op_plain_offset	(x,	1,	0X100044FE);
	op_plain_offset	(x,	129,	0X100044FE);
	create_insn	(x=0X16D2A);
	op_plain_offset	(x,	1,	0X1000451E);
	op_plain_offset	(x,	129,	0X1000451E);
	create_insn	(0X16D30);
	create_insn	(x=0X16D32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16D38);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16D3C);
	op_hex		(x,	1);
	create_insn	(x=0X16D40);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(0X16D44);
	create_insn	(x=0X16D52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16D5E);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16D60);
	op_hex		(x,	1);
	create_insn	(x=0X16D64);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	make_array	(0X16D6E,	0X2);
	create_dword	(x=0X16D70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X16D74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X16D78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X16D7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X16D80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X16D84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X16D88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X16D8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X16D90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X16D94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X16D98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X16D9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X16DA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16DA4);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16DA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16DAC);
	op_plain_offset	(x,	1,	0X100042C4);
	op_plain_offset	(x,	129,	0X100042C4);
	create_insn	(x=0X16DB0);
	op_plain_offset	(x,	1,	0X100042D1);
	op_plain_offset	(x,	129,	0X100042D1);
	create_insn	(x=0X16DB4);
	op_plain_offset	(x,	1,	0X1000432C);
	op_plain_offset	(x,	129,	0X1000432C);
	create_insn	(x=0X16DB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16DBC);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16DC0);
	op_plain_offset	(x,	1,	0X1000432C);
	op_plain_offset	(x,	129,	0X1000432C);
	create_insn	(x=0X16DC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16DC8);
	op_plain_offset	(x,	1,	0X100042C4);
	op_plain_offset	(x,	129,	0X100042C4);
	create_insn	(x=0X16DCC);
	op_plain_offset	(x,	1,	0X1000432C);
	op_plain_offset	(x,	129,	0X1000432C);
	create_insn	(0X16DD0);
	create_insn	(x=0X16DD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16DD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16DD6);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X16DDA);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X16DDC);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16DE0);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16DE2);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16DEC);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X16DFA);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16DFE);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16E02);
	op_hex		(x,	1);
	create_insn	(x=0X16E08);
	op_hex		(x,	1);
	create_insn	(x=0X16E0C);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16E14);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16E18);
	op_hex		(x,	1);
	create_insn	(x=0X16E1E);
	op_hex		(x,	1);
	create_insn	(x=0X16E22);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16E24);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X16E2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X16E2E,	"set_transciever_flag_20001A28_E");
	create_insn	(x=0X16E32);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16E36);
	op_hex		(x,	1);
	create_insn	(x=0X16E3C);
	op_hex		(x,	1);
	create_insn	(x=0X16E40);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16E44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X16E44,	"set_transciever_flag_20001A28_D");
	create_insn	(x=0X16E46);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16E4C);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16E50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16E52);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(0X16E5A);
	set_name	(0X16E5A,	"set_transciever_flag_20001A28_B");
	create_insn	(x=0X16E5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16E60);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16E62);
	op_hex		(x,	1);
	create_insn	(x=0X16E6A);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16E6C);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16E72);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16E76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16E78);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(0X16E80);
	set_name	(0X16E80,	"set_transciever_flag_20001A28_C");
	create_insn	(x=0X16E84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16E86);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16E8C);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16E90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16E92);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16E9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X16E9A,	"update_tcx_power_zone_flag");
	create_insn	(x=0X16E9C);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16EA2);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16EA8);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16EAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16EAE);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16EB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X16EB4,	"set_transciever_attenuation");
	create_insn	(x=0X16EB6);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16EBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X16EBC,	"get_transciever_attenuation");
	create_insn	(x=0X16EBE);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16EC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16EC8);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16ECC);
	op_hex		(x,	1);
	create_insn	(x=0X16ED2);
	op_hex		(x,	1);
	create_insn	(x=0X16ED6);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16EDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16EDC);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(0X16EE6);
	create_insn	(x=0X16EEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16EF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16EF4);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16EFE);
	op_plain_offset	(x,	1,	0X10004335);
	op_plain_offset	(x,	129,	0X10004335);
	create_insn	(0X16F08);
	create_insn	(x=0X16F0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16F2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16F2E);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X16F30);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X16F3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16F3E);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X16F42);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X16F48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16F4A);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16F50);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16F54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16F58);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16F5C);
	op_hex		(x,	1);
	create_insn	(x=0X16F62);
	op_hex		(x,	1);
	create_insn	(x=0X16F66);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(0X16F6A);
	create_insn	(x=0X16F76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16F78);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16F7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16F80);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(0X16F86);
	create_insn	(x=0X16F8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16F8C);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16F92);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16F94);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16F96);
	op_hex		(x,	1);
	create_insn	(x=0X16F9E);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16FA4);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16FA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16FAA);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16FAC);
	op_hex		(x,	1);
	create_insn	(x=0X16FB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16FB4);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16FB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16FBA);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16FC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16FC2);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16FC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16FCA);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(0X16FD0);
	set_name	(0X16FD0,	"tcx_config_80105FA");
	create_insn	(x=0X16FD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X16FD4);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16FE0);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16FE4);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16FE8);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16FEC);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X16FF6);
	op_plain_offset	(x,	1,	0X100042C4);
	op_plain_offset	(x,	129,	0X100042C4);
	create_insn	(x=0X16FFA);
	op_plain_offset	(x,	1,	0X100042D1);
	op_plain_offset	(x,	129,	0X100042D1);
	create_insn	(x=0X1700A);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X17010);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17012);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X17018,	"data8",	0);
	create_insn	(0X17018);
	set_cmt	(0X1701A,	"addr8",	0);
	set_cmt	(0X1701C,	"bus_n_bytes",	0);
	set_cmt	(0X17022,	"addr8",	0);
	create_insn	(0X17022);
	set_cmt	(0X17024,	"bus_n_bytes",	0);
	create_insn	(0X1702A);
	set_name	(0X1702A,	"ad936x_config_set");
	create_insn	(x=0X17030);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1703E);
	op_hex		(x,	1);
	set_cmt	(0X17070,	"data8",	0);
	set_cmt	(0X17072,	"bus_n_bytes",	0);
	create_insn	(x=0X17082);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X1708A);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X1708C);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X17094);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X1709C);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X1709E);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X170A4);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(0X170A8);
	create_insn	(x=0X170B0);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X170B6);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X170BE);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X170C0);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X170C6);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X170CA);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X170CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X170D2);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	create_insn	(x=0X170D8);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X170DE);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X170E2,	"val",	0);
	create_insn	(0X170E2);
	set_cmt	(0X170E4,	"addr10",	0);
	create_insn	(0X170EE);
	set_name	(0X170EE,	"ad936x_config_get");
	create_insn	(x=0X170F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1712A,	"bus_n_bytes",	0);
	create_insn	(x=0X1713C);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X1713E);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X1714E);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X17150);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X17160);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X17168);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X1716E);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X17170);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X17176);
	op_hex		(x,	1);
	create_dword	(x=0X17180);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X17184);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X17188);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(0X1718E);
	create_insn	(x=0X17190);
	op_plain_offset	(x,	1,	0X1000435D);
	op_plain_offset	(x,	129,	0X1000435D);
	create_insn	(x=0X17196);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	set_cmt	(0X1719C,	"addr10",	0);
	create_insn	(0X1719C);
	create_insn	(0X171A8);
	set_cmt	(0X171AA,	"addr8",	0);
	set_cmt	(0X171AC,	"bus_n_bytes",	0);
	create_insn	(x=0X171B2);
	op_hex		(x,	1);
	set_cmt	(0X171B6,	"addr8",	0);
	set_cmt	(0X171BC,	"bus_n_bytes",	0);
	create_insn	(x=0X171C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X171C6);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X171C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X171CA);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X171D0);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X171D2);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X171D8);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X171DA);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X171DC);
	op_plain_offset	(x,	1,	0X10004344);
	op_plain_offset	(x,	129,	0X10004344);
	create_insn	(x=0X171DE);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X171E2);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X171E6);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(x=0X171EC);
	op_plain_offset	(x,	1,	0X10000304);
	op_plain_offset	(x,	129,	0X10000304);
	create_insn	(0X171F6);
	make_array	(0X171FA,	0X2);
	create_dword	(x=0X171FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X17200);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X17204);
	create_insn	(x=0X17208);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17210);
	op_hex		(x,	1);
	create_insn	(x=0X17218);
	op_hex		(x,	1);
	create_insn	(x=0X1721E);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X17220);
	op_hex		(x,	1);
	create_insn	(x=0X17224);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X17226);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X17228);
	op_hex		(x,	1);
	create_insn	(x=0X1722C);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1722E);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X17230);
	op_hex		(x,	1);
	create_insn	(x=0X17234);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X17236);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X17238);
	op_hex		(x,	1);
	create_insn	(x=0X1723C);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X17240);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X17244);
	op_hex		(x,	1);
	create_insn	(x=0X17248);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1724C);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X17250);
	op_hex		(x,	1);
	create_insn	(x=0X17254);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X17258);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X17274);
	create_insn	(x=0X17278);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1727C);
	op_hex		(x,	1);
	create_insn	(0X17286);
	create_insn	(x=0X17288);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(0X1728C);
	create_insn	(x=0X1728E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17290);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X17292);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X1729A);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_dword	(x=0X172A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X172A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X172A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X172AC);
	create_insn	(x=0X172B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X172B6,	"bus_n_bytes",	0);
	set_cmt	(0X172B8,	"addr8",	0);
	set_cmt	(0X172C0,	"addr8",	0);
	set_cmt	(0X172C2,	"data8",	0);
	set_cmt	(0X172C8,	"bus_n_bytes",	0);
	create_insn	(0X172CE);
	create_insn	(x=0X172D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X172F2);
	create_insn	(x=0X172F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X172FC,	"bus_n_bytes",	0);
	set_cmt	(0X172FE,	"addr8",	0);
	create_insn	(0X1730C);
	create_insn	(x=0X17310);
	op_stkvar	(x,	1);
	set_cmt	(0X17312,	"addr8",	0);
	set_cmt	(0X17314,	"bus_n_bytes",	0);
	create_insn	(x=0X1731A);
	op_stkvar	(x,	1);
	set_cmt	(0X1731E,	"addr8",	0);
	set_cmt	(0X17320,	"bus_n_bytes",	0);
	create_insn	(x=0X17326);
	op_stkvar	(x,	1);
	set_cmt	(0X1732A,	"addr8",	0);
	set_cmt	(0X1732C,	"bus_n_bytes",	0);
	create_insn	(x=0X17332);
	op_stkvar	(x,	1);
	set_cmt	(0X17336,	"addr8",	0);
	set_cmt	(0X17338,	"bus_n_bytes",	0);
	create_insn	(x=0X1733E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17342);
	op_stkvar	(x,	1);
	create_insn	(0X17346);
	set_cmt	(0X1734C,	"data8",	0);
	set_cmt	(0X1734E,	"addr8",	0);
	set_cmt	(0X17350,	"bus_n_bytes",	0);
	set_cmt	(0X17356,	"addr8",	0);
	set_cmt	(0X17358,	"bus_n_bytes",	0);
	set_cmt	(0X1735E,	"data8",	0);
	create_insn	(x=0X1735E);
	op_hex		(x,	1);
	set_cmt	(0X17362,	"addr8",	0);
	set_cmt	(0X17364,	"bus_n_bytes",	0);
	create_insn	(0X17380);
	create_insn	(0X17384);
	create_insn	(0X173A2);
	create_insn	(0X173AE);
	create_insn	(x=0X173C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X173EC);
	create_insn	(0X173F8);
	create_insn	(0X17402);
	create_insn	(0X17428);
	create_insn	(0X17434);
	create_insn	(0X17436);
	create_insn	(0X1743E);
	create_insn	(x=0X1748E);
	op_plain_offset	(x,	1,	0X10000324);
	op_plain_offset	(x,	129,	0X10000324);
	create_insn	(x=0X17490);
	op_hex		(x,	1);
	create_insn	(x=0X17494);
	op_plain_offset	(x,	1,	0X10000324);
	op_plain_offset	(x,	129,	0X10000324);
	create_insn	(x=0X1749A);
	op_plain_offset	(x,	1,	0X10000324);
	op_plain_offset	(x,	129,	0X10000324);
	create_insn	(x=0X1749C);
	op_hex		(x,	1);
	create_insn	(x=0X174A0);
	op_plain_offset	(x,	1,	0X10000324);
	op_plain_offset	(x,	129,	0X10000324);
	create_insn	(0X174A6);
	create_insn	(x=0X174AA);
	op_plain_offset	(x,	1,	0X10000324);
	op_plain_offset	(x,	129,	0X10000324);
	create_insn	(0X174B0);
	set_cmt	(0X174B4,	"data8",	0);
	set_cmt	(0X174B6,	"addr8",	0);
	set_cmt	(0X174B8,	"bus_n_bytes",	0);
	set_cmt	(0X174BE,	"addr8",	0);
	set_cmt	(0X174C0,	"bus_n_bytes",	0);
	set_cmt	(0X174C6,	"data8",	0);
	create_insn	(x=0X174C6);
	op_hex		(x,	1);
	set_cmt	(0X174CA,	"addr8",	0);
	set_cmt	(0X174CC,	"bus_n_bytes",	0);
	create_insn	(0X174E2);
	create_insn	(0X174E6);
	create_insn	(0X17504);
	create_insn	(0X17510);
	create_insn	(0X17518);
	create_insn	(0X1753E);
	create_insn	(0X1754A);
	create_insn	(0X17552);
	create_insn	(x=0X1756E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17570);
	op_plain_offset	(x,	1,	0X10000324);
	op_plain_offset	(x,	129,	0X10000324);
	create_insn	(x=0X17572);
	op_hex		(x,	1);
	create_insn	(x=0X17576);
	op_plain_offset	(x,	1,	0X10000324);
	op_plain_offset	(x,	129,	0X10000324);
	create_insn	(0X1757C);
	create_insn	(x=0X1758C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X175A8);
	create_insn	(x=0X175B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X175C2,	"addr8",	0);
	set_cmt	(0X175C4,	"bus_n_bytes",	0);
	set_cmt	(0X175D0,	"addr8",	0);
	set_cmt	(0X175D2,	"bus_n_bytes",	0);
	create_insn	(0X175E2);
	create_insn	(0X175E6);
	create_insn	(0X17604);
	create_insn	(0X17610);
	create_insn	(0X17618);
	create_insn	(0X17670);
	create_insn	(0X17674);
	create_insn	(0X1767C);
	create_insn	(x=0X17680);
	op_plain_offset	(x,	1,	0X10000324);
	op_plain_offset	(x,	129,	0X10000324);
	create_insn	(x=0X17682);
	op_hex		(x,	1);
	create_insn	(x=0X17686);
	op_plain_offset	(x,	1,	0X10000324);
	op_plain_offset	(x,	129,	0X10000324);
	create_dword	(x=0X1768C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X17690);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X17694);
	create_insn	(0X17698);
	create_insn	(0X176C8);
	create_insn	(x=0X176CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X176CE);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X176D0);
	op_hex		(x,	1);
	create_insn	(x=0X176D4);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X176D8);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X176DA);
	op_hex		(x,	1);
	create_insn	(x=0X176DE);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X176E0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X176E2);
	op_hex		(x,	1);
	create_insn	(x=0X176E6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X176EA);
	create_insn	(x=0X176EC);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X176EE);
	op_hex		(x,	1);
	create_insn	(x=0X176F2);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X176F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X176FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1770A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1770C);
	op_hex		(x,	1);
	create_insn	(x=0X17710);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_dword	(x=0X17714);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X17718);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1771C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X17720);
	create_insn	(0X17734);
	create_insn	(0X17752);
	create_insn	(x=0X1775A);
	op_hex		(x,	1);
	create_insn	(x=0X1776A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1778A);
	create_insn	(0X17796);
	create_insn	(0X177CE);
	create_insn	(x=0X177D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X177D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X177EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X177F0);
	op_plain_offset	(x,	1,	0X10000334);
	op_plain_offset	(x,	129,	0X10000334);
	create_insn	(x=0X177F6);
	op_plain_offset	(x,	1,	0X10000334);
	op_plain_offset	(x,	129,	0X10000334);
	create_insn	(x=0X17802);
	op_plain_offset	(x,	1,	0X10000334);
	op_plain_offset	(x,	129,	0X10000334);
	create_insn	(x=0X1780C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1782E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1784C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17864);
	op_stkvar	(x,	1);
	create_insn	(x=0X17882);
	op_stkvar	(x,	1);
	create_insn	(x=0X1789A);
	op_stkvar	(x,	1);
	create_insn	(x=0X178B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X178B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X178EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X178F6);
	create_insn	(0X178F8);
	create_insn	(x=0X17904);
	op_stkvar	(x,	1);
	create_insn	(x=0X17926);
	op_stkvar	(x,	1);
	create_insn	(x=0X1797A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17996);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X179B0);
	op_stkvar	(x,	1);
	create_insn	(0X179B4);
	create_insn	(x=0X179C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X179C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X179C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X179CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X179D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X179D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X179D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X179E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X179EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X179FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A06);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A16);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A1C);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17A1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A20);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17A36);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A3E);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17A40);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A42);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A4C);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17A4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X17A6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17A6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X17ABA);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AD6);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17ADA);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X17AE8);
	create_insn	(0X17AEA);
	create_insn	(0X17AEC);
	create_insn	(x=0X17AF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17AFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17B00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17B06);
	op_stkvar	(x,	1);
	create_insn	(x=0X17B4C);
	op_stkvar	(x,	1);
	create_insn	(0X17B66);
	create_dword	(x=0X17B68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X17B6C);
	create_dword	(x=0X17B70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X17B74);
	create_dword	(0X17B78);
	create_dword	(0X17B7C);
	create_dword	(0X17B80);
	create_dword	(0X17B84);
	create_dword	(x=0X17B88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X17B8C,	0X17B96);
	set_name	(0X17B8C,	"a2d2d2d");
	make_array	(0X17B96,	0X2);
	create_strlit	(0X17B98,	0X17BA2);
	set_name	(0X17B98,	"a2d2d4d");
	make_array	(0X17BA2,	0X2);
	create_strlit	(0X17BA4,	0X17BA7);
	set_name	(0X17BA4,	"aF_0");
	create_byte	(0X17BA7);
	create_dword	(0X17BA8);
	create_dword	(0X17BAC);
	create_dword	(0X17BB0);
	create_insn	(0X17BB4);
	create_insn	(x=0X17BB8);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17BCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17BD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17BF2);
	op_stkvar	(x,	1);
	create_insn	(0X17BF6);
	create_insn	(x=0X17BF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17BFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17C02);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C28);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C42);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17C44);
	op_stkvar	(x,	1);
	create_insn	(0X17C50);
	create_insn	(0X17C52);
	create_insn	(x=0X17C66);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C80);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X17C8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17C96);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(0X17CA0);
	create_insn	(0X17CA4);
	create_insn	(x=0X17CA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17CAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17CC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17CCA);
	op_plain_offset	(x,	1,	0X10000334);
	op_plain_offset	(x,	129,	0X10000334);
	create_insn	(x=0X17CE4);
	op_plain_offset	(x,	1,	0X10000334);
	op_plain_offset	(x,	129,	0X10000334);
	create_insn	(x=0X17CFE);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D18);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X17D44);
	op_plain_offset	(x,	1,	0X10000334);
	op_plain_offset	(x,	129,	0X10000334);
	create_insn	(x=0X17D4A);
	op_plain_offset	(x,	1,	0X10000334);
	op_plain_offset	(x,	129,	0X10000334);
	create_insn	(x=0X17D52);
	op_plain_offset	(x,	1,	0X10000334);
	op_plain_offset	(x,	129,	0X10000334);
	create_insn	(x=0X17D56);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17D5A);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17D5E);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17D60);
	op_plain_offset	(x,	1,	0X10000334);
	op_plain_offset	(x,	129,	0X10000334);
	create_insn	(x=0X17D62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17D64);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17D6E);
	op_plain_offset	(x,	1,	0X10000334);
	op_plain_offset	(x,	129,	0X10000334);
	create_insn	(x=0X17D74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17D7C);
	op_plain_offset	(x,	1,	0X100045A0);
	op_plain_offset	(x,	129,	0X100045A0);
	create_insn	(x=0X17D7E);
	op_plain_offset	(x,	1,	0X100045A0);
	op_plain_offset	(x,	129,	0X100045A0);
	create_insn	(x=0X17D88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17D8A);
	op_plain_offset	(x,	1,	0X10000334);
	op_plain_offset	(x,	129,	0X10000334);
	create_insn	(x=0X17D94);
	op_plain_offset	(x,	1,	0X10000334);
	op_plain_offset	(x,	129,	0X10000334);
	create_insn	(x=0X17D9A);
	op_plain_offset	(x,	1,	0X10000334);
	op_plain_offset	(x,	129,	0X10000334);
	create_insn	(x=0X17D9C);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17DB0);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17DB6);
	op_plain_offset	(x,	1,	0X10000334);
	op_plain_offset	(x,	129,	0X10000334);
	create_insn	(0X17DBA);
	create_insn	(0X17DC4);
	create_insn	(x=0X17DCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17DDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X17DEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17DF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17DF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17E0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17E10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17E22);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17E26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17E3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17E50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17E62);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17E66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17E6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E76);
	op_stkvar	(x,	1);
	create_insn	(x=0X17E8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17E8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17E9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17EA2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17EC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X17ED8);
	create_insn	(0X17EDA);
	create_insn	(x=0X17EDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17EE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X17EF2);
	op_stkvar	(x,	1);
	create_insn	(0X17EFA);
	create_insn	(x=0X17F00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17F0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17F16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17F22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X17F36);
	create_insn	(x=0X17F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17F4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17F50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17F52);
	op_stkvar	(x,	1);
	create_insn	(x=0X17F56);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17F64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17F66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17F6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X17F72);
	create_insn	(0X17F7A);
	create_insn	(x=0X17F7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X17F94);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17F9E);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17FA8);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17FB2);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17FBC);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_insn	(x=0X17FC0);
	op_plain_offset	(x,	1,	0X10004614);
	op_plain_offset	(x,	129,	0X10004614);
	create_dword	(x=0X17FC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X17FC8);
	create_dword	(0X17FCC);
	create_dword	(0X17FD0);
	create_dword	(0X17FD4);
	create_dword	(0X17FD8);
	create_dword	(0X17FDC);
	create_dword	(0X17FE0);
	create_dword	(x=0X17FE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X17FE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X17FEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X17FF0);
	create_dword	(0X17FF4);
	create_dword	(0X17FF8);
	create_dword	(0X17FFC);
	create_dword	(0X18000);
	create_dword	(0X18004);
	create_strlit	(0X18008,	0X1800F);
	set_name	(0X18008,	"aGpgga");
	create_byte	(0X1800F);
	create_strlit	(0X18010,	0X18017);
	set_name	(0X18010,	"aGprmc");
	create_byte	(0X18017);
	create_strlit	(0X18018,	0X1801F);
	set_name	(0X18018,	"aGpgsv");
	create_byte	(0X1801F);
	create_strlit	(0X18020,	0X18023);
	set_name	(0X18020,	"aD");
	create_byte	(0X18023);
	create_strlit	(0X18024,	0X18027);
	set_name	(0X18024,	"aF");
	create_byte	(0X18027);
	create_dword	(x=0X18028);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1802C);
	set_name	(0X1802C,	"compute_buf_crc8");
	create_insn	(x=0X1802E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X18032);
	create_insn	(0X18040);
	create_insn	(0X1804E);
	create_insn	(x=0X18082);
	op_stkvar	(x,	1);
	create_insn	(0X18098);
	create_insn	(0X1809E);
	create_insn	(0X180AE);
	create_insn	(x=0X180BA);
	op_stkvar	(x,	1);
	create_insn	(0X180C6);
	create_insn	(x=0X180E0);
	op_hex		(x,	1);
	create_insn	(0X180F4);
	create_insn	(0X180FA);
	create_insn	(0X1810E);
	create_insn	(0X18120);
	create_insn	(x=0X18154);
	op_stkvar	(x,	1);
	create_insn	(0X18176);
	set_name	(0X18176,	"packet_set_checksum");
	create_insn	(x=0X1817C);
	op_stkvar	(x,	1);
	create_dword	(x=0X18184);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X18188);
	create_insn	(0X1818C);
	create_insn	(0X18194);
	create_insn	(0X1819E);
	create_insn	(0X181A6);
	create_insn	(0X181AC);
	create_insn	(x=0X181B6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X181B8);
	op_hex		(x,	1);
	create_insn	(x=0X181BC);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X181C0);
	op_stkvar	(x,	1);
	create_insn	(0X181C6);
	create_insn	(x=0X181D0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X181D2);
	op_hex		(x,	1);
	create_insn	(x=0X181D6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X181DA);
	op_stkvar	(x,	1);
	create_insn	(0X181E0);
	create_insn	(x=0X181EA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X181EC);
	op_hex		(x,	1);
	create_insn	(x=0X181F0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X181FA);
	op_hex		(x,	1);
	create_insn	(x=0X18202);
	op_stkvar	(x,	1);
	create_insn	(0X18208);
	create_insn	(0X18210);
	create_insn	(0X1821E);
	create_insn	(x=0X18222);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X18224);
	op_hex		(x,	1);
	create_insn	(x=0X18228);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X18230);
	op_hex		(x,	1);
	create_insn	(x=0X18248);
	op_hex		(x,	1);
	create_insn	(x=0X1825A);
	op_stkvar	(x,	1);
	create_insn	(0X18260);
	create_insn	(x=0X18264);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X18266);
	op_hex		(x,	1);
	create_insn	(x=0X1826A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X18272);
	op_hex		(x,	1);
	create_insn	(x=0X1828A);
	op_hex		(x,	1);
	create_insn	(x=0X18292);
	op_stkvar	(x,	1);
	create_insn	(0X18298);
	create_insn	(x=0X1829E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X182A0);
	op_hex		(x,	1);
	create_insn	(x=0X182A4);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X182B0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X182B2);
	op_hex		(x,	1);
	create_insn	(x=0X182B6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X182BA);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X182BC);
	op_hex		(x,	1);
	create_insn	(x=0X182C0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X182D6);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X182D8);
	op_hex		(x,	1);
	create_insn	(x=0X182DC);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X182EA);
	create_insn	(x=0X182F0);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X18302);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X18304);
	op_hex		(x,	1);
	create_insn	(x=0X18308);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X1830E);
	create_insn	(0X18312);
	create_insn	(x=0X18316);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1831A);
	op_hex		(x,	1);
	create_insn	(x=0X1831E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X18328);
	op_hex		(x,	1);
	create_insn	(0X18330);
	create_insn	(x=0X18332);
	op_hex		(x,	1);
	create_insn	(x=0X18348);
	op_stkvar	(x,	1);
	create_insn	(0X1834E);
	create_insn	(x=0X18354);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X18356);
	op_hex		(x,	1);
	create_insn	(x=0X1835A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1835C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1835E);
	op_hex		(x,	1);
	create_insn	(x=0X18362);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1836A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1837A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1837C);
	op_hex		(x,	1);
	create_insn	(x=0X18380);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X18386);
	create_insn	(x=0X1838C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1838E);
	op_hex		(x,	1);
	create_insn	(x=0X18392);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(0X18398);
	create_insn	(0X183B8);
	create_insn	(0X183C2);
	create_insn	(0X183E8);
	create_insn	(0X183F2);
	create_insn	(0X1840A);
	create_insn	(0X1840E);
	create_insn	(x=0X18412);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X18414);
	op_hex		(x,	1);
	create_insn	(x=0X18418);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X18420);
	op_hex		(x,	1);
	create_insn	(x=0X18438);
	op_hex		(x,	1);
	create_insn	(0X18452);
	create_insn	(x=0X18456);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X18458);
	op_hex		(x,	1);
	create_insn	(x=0X1845C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X18464);
	op_hex		(x,	1);
	create_insn	(x=0X1847C);
	op_hex		(x,	1);
	create_insn	(0X1848C);
	create_insn	(0X184A0);
	create_insn	(0X184C0);
	create_insn	(0X184C8);
	create_insn	(x=0X184DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X184EC);
	create_insn	(0X18506);
	create_insn	(0X18514);
	create_insn	(x=0X18518);
	op_stkvar	(x,	1);
	create_insn	(0X1853A);
	create_insn	(0X18546);
	create_insn	(0X1855A);
	create_insn	(0X18568);
	create_insn	(x=0X1857A);
	op_hex		(x,	1);
	make_array	(0X18592,	0X2);
	create_dword	(x=0X18594);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X18598,	0X185BF);
	set_name	(0X18598,	"aSha204p_send_s");
	create_byte	(0X185BF);
	create_insn	(0X185C0);
	create_insn	(x=0X185C6);
	op_stkvar	(x,	1);
	create_insn	(0X185EA);
	create_insn	(0X1860A);
	create_insn	(0X18614);
	create_insn	(0X1862C);
	create_insn	(x=0X1864A);
	op_stkvar	(x,	1);
	create_insn	(0X18656);
	create_insn	(x=0X18664);
	op_stkvar	(x,	1);
	create_insn	(0X1866E);
	create_insn	(0X18674);
	create_insn	(x=0X1867E);
	op_stkvar	(x,	1);
	create_insn	(x=0X18692);
	op_stkvar	(x,	1);
	create_insn	(x=0X18698);
	op_stkvar	(x,	1);
	create_insn	(x=0X1869C);
	op_stkvar	(x,	1);
	create_insn	(0X186A8);
	create_insn	(x=0X186B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X186C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X186CC);
	op_stkvar	(x,	1);
	create_insn	(0X186DA);
	create_insn	(0X186E8);
	create_insn	(0X186F8);
	create_insn	(0X18714);
	create_insn	(0X1871C);
	create_insn	(0X18720);
	create_insn	(0X18724);
	create_insn	(0X18738);
	create_insn	(x=0X1873C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18746);
	op_stkvar	(x,	1);
	create_insn	(x=0X18748);
	op_stkvar	(x,	1);
	create_insn	(0X1879E);
	create_insn	(0X187AC);
	create_insn	(0X187C0);
	create_insn	(0X187CA);
	create_insn	(x=0X187CE);
	op_hex		(x,	1);
	create_insn	(0X187DA);
	create_insn	(x=0X187DC);
	op_hex		(x,	1);
	create_insn	(0X187E2);
	create_insn	(x=0X187EC);
	op_hex		(x,	1);
	create_insn	(x=0X187F2);
	op_hex		(x,	1);
	create_insn	(x=0X18800);
	op_hex		(x,	1);
	create_insn	(x=0X18806);
	op_hex		(x,	1);
	create_insn	(0X18810);
	create_insn	(0X1881C);
	create_insn	(x=0X18822);
	op_hex		(x,	1);
	create_insn	(0X18832);
	create_insn	(x=0X18834);
	op_hex		(x,	1);
	create_insn	(0X1883E);
	create_insn	(0X18842);
	create_insn	(x=0X1884E);
	op_stkvar	(x,	1);
	create_insn	(x=0X18850);
	op_stkvar	(x,	1);
	create_insn	(x=0X18854);
	op_stkvar	(x,	1);
	create_insn	(x=0X18858);
	op_stkvar	(x,	1);
	create_insn	(x=0X18864);
	op_stkvar	(x,	1);
	create_insn	(x=0X1886A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1886C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18872);
	op_stkvar	(x,	1);
	create_insn	(x=0X18874);
	op_stkvar	(x,	1);
	create_insn	(x=0X1887A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1887C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18886);
	op_stkvar	(x,	1);
	create_insn	(0X188A2);
	create_insn	(0X188B0);
	create_insn	(0X188C4);
	create_insn	(x=0X188DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X188DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X188E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X188EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X188F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X18906);
	op_stkvar	(x,	1);
	create_insn	(x=0X18918);
	op_stkvar	(x,	1);
	create_insn	(x=0X1892A);
	op_stkvar	(x,	1);
	create_insn	(x=0X18932);
	op_stkvar	(x,	1);
	create_insn	(x=0X1893A);
	op_stkvar	(x,	1);
	create_insn	(x=0X18940);
	op_stkvar	(x,	1);
	create_insn	(x=0X18946);
	op_stkvar	(x,	1);
	create_insn	(x=0X18948);
	op_stkvar	(x,	1);
	create_insn	(0X18952);
	create_insn	(0X18958);
	create_insn	(0X1895E);
	create_insn	(0X18964);
	create_insn	(0X1896A);
	create_insn	(0X1896C);
	create_insn	(0X1896E);
	create_insn	(0X18970);
	create_insn	(0X18972);
	create_insn	(0X18978);
	create_insn	(0X1897E);
	create_insn	(0X18984);
	create_insn	(0X18992);
	create_insn	(0X18994);
	create_insn	(0X18996);
	create_insn	(0X18998);
	create_insn	(0X1899A);
	create_insn	(0X189A0);
	create_insn	(0X189A6);
	create_insn	(0X189B4);
	create_insn	(0X189B8);
	create_insn	(0X189BE);
	create_insn	(0X189C4);
	create_insn	(0X189CA);
	create_insn	(x=0X189EC);
	op_hex		(x,	1);
	create_insn	(x=0X189F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A12);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A16);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A18);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A1E);
	op_stkvar	(x,	1);
	create_insn	(0X18A3A);
	create_insn	(0X18A48);
	create_insn	(x=0X18A6A);
	op_hex		(x,	1);
	create_insn	(x=0X18A6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A7C);
	op_hex		(x,	1);
	create_insn	(x=0X18A82);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A84);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A88);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A92);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A94);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A96);
	op_stkvar	(x,	1);
	create_insn	(x=0X18A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AA0);
	op_stkvar	(x,	1);
	create_insn	(0X18ABC);
	create_insn	(x=0X18AC8);
	op_hex		(x,	1);
	create_insn	(x=0X18ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X18ADA);
	op_hex		(x,	1);
	create_insn	(x=0X18AE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X18AFC);
	op_stkvar	(x,	1);
	create_insn	(0X18B18);
	create_insn	(x=0X18B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B36);
	op_hex		(x,	1);
	create_insn	(x=0X18B3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B52);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X18B56);
	op_stkvar	(x,	1);
	create_insn	(0X18B78);
	create_insn	(0X18B86);
	create_insn	(0X18B8C);
	create_insn	(0X18BA4);
	create_insn	(0X18BAA);
	create_insn	(0X18BC2);
	create_insn	(x=0X18BD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18BE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18BE6);
	op_stkvar	(x,	1);
	create_insn	(0X18BF8);
	create_insn	(x=0X18C0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C12);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C16);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18C1E);
	op_stkvar	(x,	1);
	create_insn	(0X18C30);
	create_insn	(x=0X18C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C3E);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0X18C40);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C42);
	op_plain_offset	(x,	1,	0X100006C7);
	op_plain_offset	(x,	129,	0X100006C7);
	create_insn	(x=0X18C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C62);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C72);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C76);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X18C92);
	op_stkvar	(x,	1);
	create_insn	(x=0X18CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X18CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X18CAE);
	op_stkvar	(x,	1);
	create_insn	(0X18CBE);
	create_insn	(x=0X18CC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18CEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18CF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18CFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X18D00);
	create_insn	(x=0X18D06);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X18D08);
	op_hex		(x,	1);
	create_insn	(x=0X18D0C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X18D10);
	op_hex		(x,	1);
	create_insn	(x=0X18D16);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X18D18);
	op_hex		(x,	1);
	create_insn	(x=0X18D1C);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X18D1E);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X18D20);
	op_hex		(x,	1);
	create_insn	(x=0X18D24);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X18D26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18D38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18D3C);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X18D3E);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X18D44);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X18D48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18D50);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X18D52);
	op_stkvar	(x,	1);
	create_insn	(x=0X18D54);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X18D56);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X18D58);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X18D5E);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X18D60);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X18D62);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X18D64);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X18D6A);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X18D6C);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X18D6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18D78);
	op_plain_offset	(x,	1,	0X1000277B);
	op_plain_offset	(x,	129,	0X1000277B);
	create_insn	(x=0X18D7A);
	op_plain_offset	(x,	1,	0X1000277B);
	op_plain_offset	(x,	129,	0X1000277B);
	create_insn	(x=0X18D80);
	op_plain_offset	(x,	1,	0X1000277B);
	op_plain_offset	(x,	129,	0X1000277B);
	create_insn	(x=0X18D84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18D8C);
	op_plain_offset	(x,	1,	0X1000277B);
	op_plain_offset	(x,	129,	0X1000277B);
	create_insn	(x=0X18D8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X18D92);
	op_plain_offset	(x,	1,	0X1000277B);
	op_plain_offset	(x,	129,	0X1000277B);
	create_insn	(x=0X18D94);
	op_plain_offset	(x,	1,	0X1000277B);
	op_plain_offset	(x,	129,	0X1000277B);
	create_insn	(x=0X18D96);
	op_plain_offset	(x,	1,	0X1000277B);
	op_plain_offset	(x,	129,	0X1000277B);
	create_insn	(x=0X18D9C);
	op_plain_offset	(x,	1,	0X1000277B);
	op_plain_offset	(x,	129,	0X1000277B);
	create_insn	(x=0X18D9E);
	op_plain_offset	(x,	1,	0X1000277B);
	op_plain_offset	(x,	129,	0X1000277B);
	create_insn	(x=0X18DA0);
	op_plain_offset	(x,	1,	0X1000277B);
	op_plain_offset	(x,	129,	0X1000277B);
	create_insn	(x=0X18DA2);
	op_plain_offset	(x,	1,	0X1000277B);
	op_plain_offset	(x,	129,	0X1000277B);
	create_insn	(x=0X18DA8);
	op_plain_offset	(x,	1,	0X1000277B);
	op_plain_offset	(x,	129,	0X1000277B);
	create_insn	(x=0X18DAA);
	op_plain_offset	(x,	1,	0X1000277B);
	op_plain_offset	(x,	129,	0X1000277B);
	create_insn	(x=0X18DAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18DC6);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X18DCC);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X18DD2);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X18DE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18DEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18DEE);
	op_plain_offset	(x,	1,	0X1000277B);
	op_plain_offset	(x,	129,	0X1000277B);
	create_insn	(x=0X18DF4);
	op_plain_offset	(x,	1,	0X1000277B);
	op_plain_offset	(x,	129,	0X1000277B);
	create_insn	(x=0X18DFA);
	op_plain_offset	(x,	1,	0X1000277B);
	op_plain_offset	(x,	129,	0X1000277B);
	create_insn	(x=0X18E00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18E0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18E16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18E1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18E24);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X18E52);
	op_hex		(x,	1);
	create_insn	(0X18E5C);
	create_insn	(x=0X18E5E);
	op_hex		(x,	1);
	create_insn	(x=0X18E64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X18E66);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(x=0X18E68);
	op_hex		(x,	1);
	create_insn	(x=0X18E6C);
	op_plain_offset	(x,	1,	0X10000018);
	op_plain_offset	(x,	129,	0X10000018);
	create_insn	(0X18E70);
	create_insn	(x=0X18E78);
	op_stkvar	(x,	1);
	create_insn	(0X18E92);
	create_insn	(x=0X18E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EBC);
	op_stkvar	(x,	1);
	create_insn	(0X18ECA);
	create_insn	(0X18ED2);
	create_insn	(x=0X18ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X18EF2);
	op_stkvar	(x,	1);
	create_insn	(0X18F10);
	create_insn	(0X18F1C);
	create_insn	(x=0X18F2E);
	op_stkvar	(x,	1);
	create_insn	(0X18F3C);
	create_insn	(0X18F40);
	create_insn	(0X18F48);
	create_insn	(x=0X18F5A);
	op_stkvar	(x,	1);
	create_insn	(0X18F68);
	create_insn	(0X18F6C);
	create_insn	(0X18F74);
	create_insn	(x=0X18F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X18F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X18FA0);
	op_stkvar	(x,	1);
	create_insn	(0X18FA8);
	create_insn	(x=0X18FCA);
	op_stkvar	(x,	1);
	create_insn	(0X18FD0);
	make_array	(0X18FD2,	0X2);
	create_dword	(x=0X18FD4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X18FD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X18FDC,	0X18FED);
	set_name	(0X18FDC,	"aFactory_infoEr");
	create_byte	(0X18FED);
	make_array	(0X18FED,	0X3);
	create_strlit	(0X18FF0,	0X18FF8);
	set_name	(0X18FF0,	"aMacErr");
	create_strlit	(0X18FF8,	0X19006);
	set_name	(0X18FF8,	"aChip_infoErr");
	make_array	(0X19006,	0X2);
	create_dword	(x=0X19008);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1900C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X19010,	0X19034);
	set_name	(0X19010,	"aIsareadyencrpt");
	create_strlit	(0X19034,	0X1904C);
	set_name	(0X19034,	"aBnCCCCCCCCCC");
	create_strlit	(0X1904C,	0X19071);
	set_name	(0X1904C,	"aIsareadyencr_0");
	create_byte	(0X19071);
	make_array	(0X19071,	0X3);
	create_strlit	(0X19074,	0X1908D);
	set_name	(0X19074,	"aBn2CCCCCCCCCC");
	create_byte	(0X1908D);
	make_array	(0X1908D,	0X3);
	create_strlit	(0X19090,	0X190A2);
	set_name	(0X19090,	"aEncryptChange");
	make_array	(0X190A2,	0X2);
	create_strlit	(0X190A4,	0X190B4);
	set_name	(0X190A4,	"aEncryptLoss");
	create_dword	(x=0X190B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X190B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X190BC);
	create_insn	(x=0X190D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X190D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X190DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X190E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X190E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X190EC);
	op_stkvar	(x,	1);
	create_insn	(0X190F4);
	create_insn	(0X19116);
	create_insn	(0X19122);
	create_insn	(x=0X19138);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1913A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1913E);
	op_stkvar	(x,	1);
	create_insn	(x=0X19140);
	op_stkvar	(x,	1);
	create_insn	(x=0X19142);
	op_plain_offset	(x,	1,	0X10002734);
	op_plain_offset	(x,	129,	0X10002734);
	create_insn	(x=0X19146);
	op_plain_offset	(x,	1,	0X10002772);
	op_plain_offset	(x,	129,	0X10002772);
	create_insn	(x=0X19148);
	op_plain_offset	(x,	1,	0X10002772);
	op_plain_offset	(x,	129,	0X10002772);
	create_insn	(0X1914E);
	create_insn	(x=0X1915A);
	op_stkvar	(x,	1);
	create_insn	(x=0X19164);
	op_stkvar	(x,	1);
	create_insn	(x=0X1916A);
	op_stkvar	(x,	1);
	create_insn	(0X19174);
	create_insn	(0X1917C);
	create_insn	(0X19192);
	create_insn	(0X191A8);
	create_insn	(0X191BE);
	create_insn	(0X191D4);
	create_insn	(0X191EA);
	create_insn	(0X191FA);
	create_insn	(0X19204);
	create_insn	(0X19212);
	create_insn	(0X1921E);
	create_insn	(x=0X19220);
	op_hex		(x,	1);
	create_insn	(x=0X19224);
	op_stkvar	(x,	1);
	create_insn	(0X19244);
	create_insn	(0X1924E);
	create_dword	(x=0X1926C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X19270);
	create_insn	(0X19282);
	create_insn	(x=0X192FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19306);
	op_stkvar	(x,	1);
	create_insn	(x=0X19308);
	op_stkvar	(x,	1);
	create_insn	(x=0X19320);
	op_stkvar	(x,	1);
	create_insn	(x=0X19334);
	op_stkvar	(x,	1);
	create_insn	(x=0X19340);
	op_stkvar	(x,	1);
	create_insn	(x=0X19342);
	op_stkvar	(x,	1);
	create_insn	(x=0X19352);
	op_stkvar	(x,	1);
	create_insn	(x=0X19354);
	op_stkvar	(x,	1);
	create_insn	(x=0X19356);
	op_stkvar	(x,	1);
	create_insn	(x=0X19358);
	op_stkvar	(x,	1);
	create_insn	(x=0X1935A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1935C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1935E);
	op_stkvar	(x,	1);
	create_insn	(x=0X19364);
	op_stkvar	(x,	1);
	create_insn	(x=0X19366);
	op_stkvar	(x,	1);
	create_insn	(x=0X19368);
	op_stkvar	(x,	1);
	create_insn	(x=0X1936A);
	op_stkvar	(x,	1);
	create_insn	(x=0X19372);
	op_stkvar	(x,	1);
	create_insn	(0X1939C);
	create_insn	(x=0X193A6);
	op_hex		(x,	1);
	create_insn	(0X193B2);
	create_insn	(0X1941C);
	create_insn	(0X1944E);
	create_insn	(x=0X19468);
	op_hex		(x,	1);
	create_insn	(x=0X19488);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X194AA);
	create_insn	(0X194D0);
	make_array	(0X194FE,	0X2);
	create_dword	(x=0X19500);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X19504);
	create_insn	(x=0X1950C);
	op_stkvar	(x,	1);
	create_insn	(x=0X19510);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19514);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19518);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19526);
	op_stkvar	(x,	1);
	create_insn	(0X1952A);
	create_insn	(x=0X19562);
	op_hex		(x,	1);
	create_insn	(x=0X19586);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X1958C);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(0X19594);
	create_insn	(x=0X195B8);
	op_hex		(x,	1);
	create_insn	(x=0X195D4);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(0X195E0);
	create_insn	(x=0X195EA);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X195EC);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(0X1960C);
	create_insn	(0X1960E);
	create_insn	(0X19610);
	create_insn	(x=0X19630);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19634);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X1963C);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X1963E);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X19644);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(0X1964C);
	create_insn	(0X1964E);
	create_insn	(x=0X19686);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X1968A);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(0X19696);
	create_insn	(x=0X196A0);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X196AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X196B0);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X196B6);
	op_stkvar	(x,	1);
	create_insn	(0X196C2);
	create_insn	(0X196C4);
	create_insn	(x=0X196F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X19700);
	op_stkvar	(x,	1);
	create_insn	(x=0X19704);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19708);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X19714);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X19716);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X1971C);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(0X19724);
	create_insn	(x=0X1972E);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X19738);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19750);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19754);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X1975E);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X19760);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(0X19764);
	create_insn	(0X19766);
	create_insn	(x=0X1976A);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(0X19772);
	create_insn	(x=0X19780);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X19782);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(0X197B0);
	create_insn	(x=0X197CC);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X197D0);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X197D8);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X197DA);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X197EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X197F0);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X197F2);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X197F4);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19800);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19802);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19804);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X1980C);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1980E);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19810);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19816);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19818);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1981A);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19822);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19824);
	op_stkvar	(x,	1);
	create_insn	(x=0X19830);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19838);
	op_plain_offset	(x,	1,	0X10004660);
	op_plain_offset	(x,	129,	0X10004660);
	create_insn	(x=0X1983C);
	op_plain_offset	(x,	1,	0X10004660);
	op_plain_offset	(x,	129,	0X10004660);
	create_insn	(x=0X1983E);
	op_plain_offset	(x,	1,	0X10004660);
	op_plain_offset	(x,	129,	0X10004660);
	create_insn	(x=0X19840);
	op_plain_offset	(x,	1,	0X10004660);
	op_plain_offset	(x,	129,	0X10004660);
	create_insn	(x=0X19846);
	op_plain_offset	(x,	1,	0X10004660);
	op_plain_offset	(x,	129,	0X10004660);
	create_insn	(x=0X19848);
	op_plain_offset	(x,	1,	0X10004660);
	op_plain_offset	(x,	129,	0X10004660);
	create_insn	(x=0X1984A);
	op_plain_offset	(x,	1,	0X10004660);
	op_plain_offset	(x,	129,	0X10004660);
	create_insn	(x=0X1984E);
	op_plain_offset	(x,	1,	0X10004660);
	op_plain_offset	(x,	129,	0X10004660);
	create_insn	(x=0X19856);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X19858);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X1985C);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X1985E);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X19860);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X19862);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X19864);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X19866);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X19868);
	op_plain_offset	(x,	1,	0X10004638);
	op_plain_offset	(x,	129,	0X10004638);
	create_insn	(x=0X1986C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1987C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19882);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X19886);
	create_insn	(x=0X1988A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19898);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X198A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X198AA);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X198BA);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X198C4);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X198CC);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X198E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X198FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X19902,	0X2);
	create_dword	(x=0X19904);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X19908);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1990C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X19910);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X19914);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X19918);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1991C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X19920);
	create_insn	(x=0X19944);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1994C);
	create_insn	(0X1997E);
	create_insn	(x=0X19992);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19994);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X199B0);
	create_insn	(0X199BA);
	create_insn	(0X199D0);
	create_insn	(0X199DC);
	create_insn	(0X199EE);
	create_insn	(0X19A02);
	create_insn	(0X19A18);
	create_insn	(0X19A26);
	create_insn	(0X19A42);
	create_insn	(0X19A44);
	create_insn	(0X19A4C);
	create_insn	(x=0X19A78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19A7A);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19A80);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19A86);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19A8A);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19A90);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(0X19A96);
	create_insn	(x=0X19AB4);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(0X19ABA);
	create_insn	(x=0X19AD0);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19AD6);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19ADA);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19AE0);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(0X19AF4);
	create_insn	(0X19AF8);
	create_insn	(x=0X19AFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19B06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19B0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19B1E);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19B26);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19B2A);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19B2E);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19B46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19B4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19B58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19B60);
	op_hex		(x,	1);
	create_insn	(0X19B76);
	create_insn	(x=0X19BA4);
	op_hex		(x,	1);
	create_insn	(0X19BAA);
	create_insn	(0X19BB4);
	create_insn	(0X19BCE);
	create_insn	(0X19BDA);
	create_insn	(0X19BEE);
	create_insn	(0X19C06);
	create_insn	(0X19C1C);
	create_insn	(0X19C26);
	create_insn	(0X19C42);
	create_insn	(0X19C4A);
	create_insn	(x=0X19C8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X19CA6);
	create_insn	(x=0X19CC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19CCE);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19CD2);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19CD4);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19CD8);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19CDA);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19CDE);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19CE0);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19CE4);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19CE6);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19CEA);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(0X19CF4);
	create_insn	(x=0X19CFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19D06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19D18);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19D26);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19D2C);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19D32);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19D3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X19D54);
	create_insn	(x=0X19D6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19D7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X19D84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X19D88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X19D8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X19D90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X19D94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X19D98);
	create_insn	(x=0X19D9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X19DA0);
	create_insn	(0X19DA6);
	create_insn	(0X19DDE);
	create_insn	(0X19DE0);
	create_insn	(0X19E00);
	create_insn	(x=0X19E14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19E18);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19E1C);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19E20);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19E22);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19E26);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19E28);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(0X19E2E);
	create_insn	(0X19E30);
	create_insn	(x=0X19E38);
	op_hex		(x,	1);
	create_insn	(x=0X19E3C);
	op_hex		(x,	1);
	create_insn	(0X19E5C);
	create_insn	(x=0X19E5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X19E68);
	create_insn	(x=0X19E6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19E8E);
	op_hex		(x,	1);
	create_insn	(x=0X19E92);
	op_hex		(x,	1);
	create_insn	(x=0X19E9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X19EAA);
	create_insn	(x=0X19EBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19EDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X19EDE);
	create_insn	(0X19EE0);
	create_insn	(0X19EE4);
	create_insn	(x=0X19F02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19F08);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19F0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19F0E);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19F12);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X19F1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X19F22);
	create_insn	(0X19F26);
	create_insn	(x=0X19F2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19F30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19F34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X19F46);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19F52);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19F56);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X19F5E);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(0X19F8A);
	create_insn	(0X19FA8);
	create_insn	(0X19FCC);
	create_insn	(x=0X1A000);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1A00A);
	create_insn	(0X1A01A);
	create_insn	(0X1A024);
	create_insn	(x=0X1A040);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A044);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A046);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A04A);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A04C);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A050);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A052);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A056);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A058);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A05C);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(0X1A072);
	create_insn	(0X1A074);
	create_insn	(0X1A076);
	create_insn	(0X1A078);
	create_insn	(0X1A07A);
	create_insn	(0X1A084);
	create_insn	(0X1A0A2);
	create_insn	(0X1A0CC);
	create_insn	(0X1A0F0);
	create_insn	(x=0X1A12C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1A132);
	create_insn	(0X1A142);
	create_insn	(0X1A14C);
	create_insn	(x=0X1A168);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A16C);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A16E);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A172);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A174);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A178);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A17A);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A17E);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A182);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_dword	(x=0X1A188);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A18C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A190);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A194);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1A198);
	create_insn	(x=0X1A1AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1A1BA);
	create_insn	(x=0X1A1D8);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X1A1DC);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A1E0);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(0X1A1E4);
	create_insn	(x=0X1A1FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1A200);
	create_insn	(x=0X1A21E);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X1A222);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A226);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A228);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(x=0X1A22C);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(0X1A23C);
	create_insn	(0X1A24E);
	create_insn	(x=0X1A264);
	op_plain_offset	(x,	1,	0X10000460);
	op_plain_offset	(x,	129,	0X10000460);
	create_insn	(x=0X1A268);
	op_plain_offset	(x,	1,	0X4003C000);
	op_plain_offset	(x,	129,	0X4003C000);
	create_insn	(0X1A26E);
	make_array	(0X1A272,	0X2);
	create_dword	(x=0X1A274);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1A278);
	create_insn	(x=0X1A27C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1A29C);
	create_insn	(0X1A29E);
	create_insn	(0X1A2CC);
	create_insn	(0X1A2E6);
	create_insn	(0X1A2EA);
	create_insn	(0X1A2EE);
	create_insn	(0X1A2F2);
	create_insn	(0X1A2FC);
	create_insn	(0X1A2FE);
	create_insn	(x=0X1A302);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A310);
	op_plain_offset	(x,	1,	0X100046A0);
	op_plain_offset	(x,	129,	0X100046A0);
	create_insn	(x=0X1A314);
	op_plain_offset	(x,	1,	0X100046A0);
	op_plain_offset	(x,	129,	0X100046A0);
	create_insn	(x=0X1A318);
	op_plain_offset	(x,	1,	0X100046A0);
	op_plain_offset	(x,	129,	0X100046A0);
	create_insn	(x=0X1A31E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A330);
	op_plain_offset	(x,	1,	0X100046A0);
	op_plain_offset	(x,	129,	0X100046A0);
	create_insn	(x=0X1A33A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A33C);
	op_plain_offset	(x,	1,	0X100046A0);
	op_plain_offset	(x,	129,	0X100046A0);
	create_insn	(x=0X1A33E);
	op_plain_offset	(x,	1,	0X1000046A);
	op_plain_offset	(x,	129,	0X1000046A);
	create_insn	(x=0X1A342);
	op_plain_offset	(x,	1,	0X100046A0);
	op_plain_offset	(x,	129,	0X100046A0);
	create_insn	(x=0X1A344);
	op_plain_offset	(x,	1,	0X1000046A);
	op_plain_offset	(x,	129,	0X1000046A);
	create_insn	(x=0X1A34A);
	op_plain_offset	(x,	1,	0X1000046A);
	op_plain_offset	(x,	129,	0X1000046A);
	create_insn	(0X1A34E);
	create_insn	(0X1A352);
	create_insn	(x=0X1A356);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A364);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A378);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A380);
	op_plain_offset	(x,	1,	0X40044000);
	op_plain_offset	(x,	129,	0X40044000);
	create_insn	(x=0X1A382);
	op_plain_offset	(x,	1,	0X40044000);
	op_plain_offset	(x,	129,	0X40044000);
	create_insn	(x=0X1A38A);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1A38E);
	op_hex		(x,	1);
	create_insn	(0X1A396);
	create_insn	(x=0X1A398);
	op_stkvar	(x,	1);
	create_insn	(0X1A3A4);
	create_insn	(x=0X1A3A6);
	op_stkvar	(x,	1);
	create_insn	(0X1A3B2);
	create_insn	(x=0X1A3B4);
	op_stkvar	(x,	1);
	create_insn	(0X1A3C0);
	create_insn	(x=0X1A3C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A3CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A3D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1A3DC);
	create_insn	(x=0X1A3E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1A3F4);
	create_insn	(x=0X1A3F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A41E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A430);
	op_hex		(x,	1);
	create_insn	(x=0X1A43A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A448);
	op_stkvar	(x,	1);
	create_insn	(0X1A456);
	create_insn	(x=0X1A464);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A472);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1A476);
	create_insn	(x=0X1A47C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A48E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A4B2);
	op_stkvar	(x,	1);
	create_insn	(0X1A4C2);
	create_insn	(x=0X1A4C6);
	op_hex		(x,	1);
	create_insn	(x=0X1A4D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A4F4);
	op_stkvar	(x,	1);
	create_insn	(0X1A504);
	create_insn	(x=0X1A50A);
	op_hex		(x,	1);
	create_insn	(x=0X1A514);
	op_stkvar	(x,	1);
	create_insn	(x=0X1A530);
	op_stkvar	(x,	1);
	create_insn	(0X1A546);
	create_insn	(x=0X1A548);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A54A);
	op_plain_offset	(x,	1,	0X40044000);
	op_plain_offset	(x,	129,	0X40044000);
	create_insn	(x=0X1A564);
	op_hex		(x,	1);
	create_insn	(x=0X1A582);
	op_plain_offset	(x,	1,	0X40044000);
	op_plain_offset	(x,	129,	0X40044000);
	create_insn	(x=0X1A58A);
	op_plain_offset	(x,	1,	0X40044000);
	op_plain_offset	(x,	129,	0X40044000);
	create_insn	(x=0X1A58C);
	op_plain_offset	(x,	1,	0X40044000);
	op_plain_offset	(x,	129,	0X40044000);
	create_insn	(0X1A59A);
	create_insn	(0X1A59C);
	create_insn	(x=0X1A59E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A5A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A5A8);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1A5AC);
	op_hex		(x,	1);
	create_insn	(x=0X1A5B2);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1A5B4);
	op_hex		(x,	1);
	create_insn	(x=0X1A5B8);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1A5BA);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1A5BC);
	op_hex		(x,	1);
	create_insn	(x=0X1A5C0);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1A5C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A5CA);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1A5CE);
	op_hex		(x,	1);
	create_insn	(x=0X1A5D4);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1A5D6);
	op_hex		(x,	1);
	create_insn	(x=0X1A5DA);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1A5DC);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1A5DE);
	op_hex		(x,	1);
	create_insn	(x=0X1A5E2);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(0X1A600);
	make_array	(0X1A60E,	0X2);
	create_dword	(x=0X1A610);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1A614);
	create_dword	(0X1A618);
	create_dword	(0X1A61C);
	create_dword	(x=0X1A620);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1A624);
	create_dword	(x=0X1A628);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1A62C);
	create_dword	(x=0X1A630);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A634);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A638);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1A63C);
	create_insn	(x=0X1A64E);
	op_plain_offset	(x,	1,	0X2007C200);
	op_plain_offset	(x,	129,	0X2007C200);
	create_insn	(x=0X1A654);
	op_plain_offset	(x,	1,	0X2007C200);
	op_plain_offset	(x,	129,	0X2007C200);
	create_insn	(x=0X1A658);
	op_plain_offset	(x,	1,	0X2007C200);
	op_plain_offset	(x,	129,	0X2007C200);
	create_insn	(x=0X1A65A);
	op_plain_offset	(x,	1,	0X2007C200);
	op_plain_offset	(x,	129,	0X2007C200);
	create_insn	(x=0X1A666);
	op_plain_offset	(x,	1,	0X2007C41C);
	op_plain_offset	(x,	129,	0X2007C41C);
	create_insn	(x=0X1A66C);
	op_plain_offset	(x,	1,	0X2007C41C);
	op_plain_offset	(x,	129,	0X2007C41C);
	create_insn	(x=0X1A672);
	op_plain_offset	(x,	1,	0X2007C41C);
	op_plain_offset	(x,	129,	0X2007C41C);
	create_insn	(x=0X1A674);
	op_plain_offset	(x,	1,	0X2007C41C);
	op_plain_offset	(x,	129,	0X2007C41C);
	create_insn	(x=0X1A67A);
	op_plain_offset	(x,	1,	0X2007C458);
	op_plain_offset	(x,	129,	0X2007C458);
	create_insn	(x=0X1A67E);
	op_plain_offset	(x,	1,	0X2007C458);
	op_plain_offset	(x,	129,	0X2007C458);
	create_insn	(x=0X1A682);
	op_plain_offset	(x,	1,	0X2007C458);
	op_plain_offset	(x,	129,	0X2007C458);
	create_insn	(x=0X1A688);
	op_plain_offset	(x,	1,	0X2007C458);
	op_plain_offset	(x,	129,	0X2007C458);
	create_insn	(x=0X1A68E);
	op_plain_offset	(x,	1,	0X2007C458);
	op_plain_offset	(x,	129,	0X2007C458);
	create_insn	(x=0X1A690);
	op_plain_offset	(x,	1,	0X2007C458);
	op_plain_offset	(x,	129,	0X2007C458);
	create_insn	(0X1A694);
	create_insn	(0X1A6A8);
	create_insn	(0X1A6BA);
	create_insn	(0X1A6CE);
	create_insn	(0X1A6D2);
	create_insn	(0X1A6E4);
	create_insn	(0X1A6E8);
	create_insn	(0X1A6F4);
	create_insn	(0X1A6FC);
	create_insn	(0X1A714);
	create_insn	(0X1A718);
	create_insn	(0X1A734);
	create_insn	(0X1A74C);
	create_insn	(0X1A768);
	create_insn	(0X1A7A2);
	create_insn	(0X1A7AE);
	create_insn	(0X1A7BA);
	create_insn	(0X1A7CE);
	create_insn	(0X1A7D0);
	create_insn	(x=0X1A7E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1A808);
	make_array	(0X1A80A,	0X2);
	create_dword	(x=0X1A80C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1A810);
	create_dword	(0X1A814);
	create_strlit	(0X1A818,	0X1A82D);
	set_name	(0X1A818,	"aCanBufOverFlow");
	create_byte	(0X1A82D);
	make_array	(0X1A82D,	0X3);
	create_insn	(0X1A830);
	create_insn	(x=0X1A836);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1A83A);
	op_hex		(x,	1);
	create_insn	(x=0X1A844);
	op_hex		(x,	1);
	create_insn	(0X1A852);
	create_insn	(x=0X1A854);
	op_plain_offset	(x,	1,	0XE0001000);
	op_plain_offset	(x,	129,	0XE0001000);
	create_insn	(0X1A858);
	make_array	(0X1A85E,	0X2);
	create_dword	(x=0X1A860);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A864);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1A868);
	create_insn	(0X1A86A);
	create_insn	(0X1A876);
	create_insn	(0X1A878);
	create_insn	(0X1A87C);
	create_insn	(0X1A888);
	create_insn	(0X1A88A);
	create_insn	(x=0X1A89E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1A8B2);
	create_insn	(0X1A8B4);
	create_insn	(0X1A8E0);
	create_insn	(0X1A8E2);
	set_name	(0X1A8E2,	"nullsub_8");
	create_insn	(0X1A8E4);
	create_insn	(x=0X1A8E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1A8F8);
	create_insn	(0X1A8FA);
	create_insn	(0X1A8FC);
	create_insn	(0X1A8FE);
	create_insn	(0X1A900);
	create_insn	(0X1A902);
	create_insn	(0X1A904);
	create_insn	(0X1A906);
	create_insn	(x=0X1A926);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1A938);
	create_dword	(0X1A984);
	make_array	(0X1A984,	0X10);
	create_dword	(x=0X1A9C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A9C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1AA82);
	create_insn	(x=0X1AA88);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AA8C);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AA94);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AA9E);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AAA4);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AAA8);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AAAE);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AAB4);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AABA);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AAC0);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AAC4);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AAC8);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AACC);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AAD0);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AAD8);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AADC);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AAE0);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AAE4);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AAE8);
	op_hex		(x,	1);
	create_insn	(x=0X1AAF0);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AAF4);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AAF8);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AAFC);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AB00);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AB04);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AB08);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AB10);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AB14);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AB18);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AB1C);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AB20);
	op_hex		(x,	1);
	create_insn	(x=0X1AB28);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1AB2C);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_dword	(x=0X1AB38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AB3C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1AB40);
	make_array	(0X1AB40,	0X4);
	create_dword	(0X1AB50);
	create_dword	(0X1AB54);
	create_insn	(0X1AB58);
	set_name	(0X1AB58,	"nullsub_2");
	make_array	(0X1AB5A,	0X2);
	create_insn	(x=0X1AB5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1AB6A);
	create_insn	(x=0X1AB6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AB76);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AB78);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AB7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AB80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AB82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AB8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1AB98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AB9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AB9E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1ABA8);
	create_insn	(x=0X1ABAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1ABC6);
	create_insn	(x=0X1ABCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ABD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ABD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ABDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ABDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ABE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ABE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ABEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1AC4C);
	create_insn	(x=0X1AC4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AC56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AC64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AC72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AC7C);
	op_hex		(x,	1);
	create_insn	(x=0X1AC84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AC8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AC92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AC9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ACA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ACB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ACB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1ACCA);
	create_insn	(x=0X1ACCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ACD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ACEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ACF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ACFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AD0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AD12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1AD24);
	create_insn	(x=0X1AD26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AD34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1AD3A);
	create_insn	(x=0X1AD3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AD4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1AD5A);
	create_insn	(x=0X1AD7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AD8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AD92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AD9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1ADA8);
	create_insn	(x=0X1ADAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ADBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ADCE);
	op_hex		(x,	1);
	create_insn	(0X1ADE6);
	create_insn	(0X1ADEC);
	create_insn	(0X1AE04);
	create_insn	(x=0X1AE06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1AE16);
	create_insn	(x=0X1AE1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AE22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AE2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AE30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1AE3C);
	create_insn	(0X1AE42);
	create_insn	(0X1AE4C);
	create_insn	(0X1AE5E);
	create_insn	(x=0X1AE6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AE6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1AE72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1AE7A);
	create_insn	(0X1AE90);
	create_insn	(0X1AE9C);
	create_insn	(0X1AEAE);
	create_insn	(0X1AEBE);
	create_insn	(0X1AECA);
	create_insn	(0X1AED4);
	create_insn	(0X1AEE0);
	create_insn	(0X1AF04);
	create_insn	(x=0X1AF0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1AF30);
	create_insn	(0X1AF3E);
	create_insn	(0X1AF40);
	make_array	(0X1AF42,	0X2);
	create_dword	(x=0X1AF44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X1AF54,	0X1AF68);
	set_name	(0X1AF54,	"aUcOsIiiIdleTas");
	create_dword	(x=0X1AF68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AF9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AFA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1AFA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1AFA8);
	create_strlit	(0X1AFAC,	0X1AFB3);
	set_name	(0X1AFAC,	"aTaskQ");
	create_byte	(0X1AFB3);
	create_strlit	(0X1AFB4,	0X1AFBD);
	set_name	(0X1AFB4,	"aTaskSem");
	create_byte	(0X1AFBD);
	make_array	(0X1AFBD,	0X3);
	create_insn	(0X1AFC0);
	create_insn	(0X1AFD0);
	create_insn	(0X1AFD4);
	create_insn	(x=0X1AFE4);
	op_stkvar	(x,	1);
	create_insn	(0X1AFF6);
	create_insn	(0X1AFFE);
	create_insn	(x=0X1B002);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1B036);
	create_insn	(0X1B046);
	create_insn	(0X1B068);
	create_insn	(0X1B06E);
	create_insn	(0X1B076);
	create_insn	(0X1B07C);
	create_insn	(0X1B086);
	create_insn	(0X1B0A2);
	create_insn	(0X1B0AA);
	create_insn	(0X1B0B6);
	create_insn	(0X1B0C2);
	create_insn	(x=0X1B0C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1B0E8);
	create_insn	(0X1B0F6);
	create_insn	(x=0X1B0FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1B11A);
	create_insn	(0X1B126);
	create_insn	(x=0X1B132);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1B146);
	create_insn	(0X1B14C);
	create_insn	(0X1B164);
	create_insn	(0X1B166);
	set_cmt	(0X1B17A,	"switch 8 cases ",	0);
	set_cmt	(0X1B17E,	"switch jump",	0);
	set_cmt	(0X1B182,	"jump table for switch statement",	0);
	create_byte	(0X1B182);
	set_name	(0X1B182,	"jpt_1117E");
	create_byte	(0X1B183);
	create_byte	(0X1B184);
	create_byte	(0X1B185);
	create_byte	(0X1B186);
	create_byte	(0X1B187);
	create_byte	(0X1B188);
	create_byte	(0X1B189);
	set_cmt	(0X1B18A,	"jumptable 0001B17E cases 2,3",	1);
	create_insn	(0X1B18A);
	set_cmt	(0X1B1B6,	"jumptable 0001B17E cases 6,7",	1);
	create_insn	(0X1B1B6);
	set_cmt	(0X1B1EA,	"jumptable 0001B17E default case",	1);
	set_name	(0X1B1EA,	"def_11294");
	create_insn	(x=0X1B1EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B1FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1B204);
	create_insn	(0X1B210);
	create_insn	(0X1B236);
	create_insn	(0X1B240);
	create_insn	(0X1B260);
	create_insn	(0X1B268);
	create_insn	(0X1B274);
	create_insn	(0X1B280);
	set_cmt	(0X1B290,	"switch 8 cases ",	0);
	set_cmt	(0X1B294,	"switch jump",	0);
	set_cmt	(0X1B298,	"jump table for switch statement",	0);
	create_byte	(0X1B298);
	set_name	(0X1B298,	"jpt_11294");
	create_byte	(0X1B299);
	create_byte	(0X1B29A);
	create_byte	(0X1B29B);
	create_byte	(0X1B29C);
	create_byte	(0X1B29D);
	create_byte	(0X1B29E);
	create_byte	(0X1B29F);
	set_cmt	(0X1B2A0,	"jumptable 0001B294 cases 2,3",	1);
	create_insn	(0X1B2A0);
	set_cmt	(0X1B2CA,	"jumptable 0001B294 cases 6,7",	1);
	create_insn	(0X1B2CA);
	set_cmt	(0X1B2FC,	"jumptable 0001B294 cases 0,1,4,5",	1);
	create_insn	(0X1B2FE);
	create_insn	(x=0X1B302);
	op_stkvar	(x,	1);
	create_insn	(0X1B308);
	create_insn	(0X1B318);
	create_insn	(0X1B324);
	create_insn	(x=0X1B330);
	op_stkvar	(x,	1);
	set_cmt	(0X1B332,	"switch 8 cases ",	0);
	set_cmt	(0X1B336,	"switch jump",	0);
	set_cmt	(0X1B33A,	"jump table for switch statement",	0);
	create_byte	(0X1B33A);
	set_name	(0X1B33A,	"jpt_11336");
	create_byte	(0X1B33B);
	create_byte	(0X1B33C);
	create_byte	(0X1B33D);
	create_byte	(0X1B33E);
	create_byte	(0X1B33F);
	create_byte	(0X1B340);
	create_byte	(0X1B341);
	set_cmt	(0X1B342,	"jumptable 0001B336 cases 2,3",	1);
	create_insn	(0X1B342);
	create_insn	(x=0X1B36E);
	op_stkvar	(x,	1);
	set_cmt	(0X1B37A,	"jumptable 0001B336 cases 6,7",	1);
	create_insn	(0X1B37A);
	set_cmt	(0X1B3AE,	"jumptable 0001B336 default case",	1);
	set_name	(0X1B3AE,	"def_11336");
	create_insn	(x=0X1B3B0);
	op_stkvar	(x,	1);
	create_insn	(0X1B3BC);
	create_insn	(0X1B3DE);
	create_dword	(x=0X1B3F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B3F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B3F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1B3FC);
	create_insn	(0X1B400);
	set_name	(0X1B400,	"nullsub_9");
	create_insn	(0X1B402);
	create_insn	(x=0X1B404);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B408);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1B410);
	create_insn	(x=0X1B41C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1B428);
	create_insn	(0X1B42A);
	set_name	(0X1B42A,	"nullsub_3");
	create_insn	(0X1B42C);
	create_insn	(0X1B42E);
	set_name	(0X1B42E,	"nullsub_11");
	create_insn	(0X1B430);
	create_insn	(x=0X1B432);
	op_stkvar	(x,	1);
	create_insn	(x=0X1B440);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1B48C);
	create_insn	(x=0X1B492);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B494);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B4C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1B4DA);
	set_name	(0X1B4DA,	"nullsub_10");
	create_insn	(0X1B4DC);
	create_insn	(x=0X1B4E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1B506);
	create_insn	(x=0X1B50C);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X1B50E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B512);
	op_hex		(x,	1);
	create_insn	(x=0X1B518);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X1B51A);
	op_hex		(x,	1);
	create_insn	(x=0X1B51E);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X1B520);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X1B522);
	op_hex		(x,	1);
	create_insn	(x=0X1B526);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	make_array	(0X1B52A,	0X2);
	create_dword	(x=0X1B52C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B530);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B534);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B538);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B53C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B540);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B544);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B548);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B54C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1B550);
	set_name	(0X1B550,	"nullsub_4");
	make_array	(0X1B552,	0X2);
	create_insn	(0X1B554);
	create_insn	(0X1B564);
	create_insn	(0X1B584);
	create_insn	(x=0X1B590);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B59E);
	op_plain_offset	(x,	1,	0X1000048C);
	op_plain_offset	(x,	129,	0X1000048C);
	create_insn	(x=0X1B5A2);
	op_plain_offset	(x,	1,	0X1000048C);
	op_plain_offset	(x,	129,	0X1000048C);
	create_insn	(0X1B5AA);
	create_insn	(x=0X1B5AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B5AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B5BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B5C4);
	op_plain_offset	(x,	1,	0X1000048C);
	op_plain_offset	(x,	129,	0X1000048C);
	create_insn	(x=0X1B5C6);
	op_plain_offset	(x,	1,	0X1000048C);
	op_plain_offset	(x,	129,	0X1000048C);
	create_insn	(0X1B5CC);
	create_insn	(0X1B5EC);
	create_insn	(x=0X1B5F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B5FE);
	op_plain_offset	(x,	1,	0X1000048C);
	op_plain_offset	(x,	129,	0X1000048C);
	create_insn	(x=0X1B604);
	op_plain_offset	(x,	1,	0X1000048C);
	op_plain_offset	(x,	129,	0X1000048C);
	create_insn	(x=0X1B606);
	op_plain_offset	(x,	1,	0X1000048C);
	op_plain_offset	(x,	129,	0X1000048C);
	create_insn	(x=0X1B60A);
	op_plain_offset	(x,	1,	0X1000048C);
	op_plain_offset	(x,	129,	0X1000048C);
	create_insn	(0X1B61A);
	create_insn	(0X1B628);
	create_insn	(x=0X1B64A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B652);
	op_plain_offset	(x,	1,	0X1000048C);
	op_plain_offset	(x,	129,	0X1000048C);
	create_insn	(x=0X1B656);
	op_plain_offset	(x,	1,	0X1000048C);
	op_plain_offset	(x,	129,	0X1000048C);
	create_insn	(x=0X1B658);
	op_plain_offset	(x,	1,	0X1000048C);
	op_plain_offset	(x,	129,	0X1000048C);
	create_insn	(x=0X1B65C);
	op_plain_offset	(x,	1,	0X1000048C);
	op_plain_offset	(x,	129,	0X1000048C);
	create_insn	(0X1B664);
	create_insn	(0X1B674);
	create_insn	(0X1B67A);
	create_insn	(x=0X1B690);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B692);
	op_plain_offset	(x,	1,	0X1000048C);
	op_plain_offset	(x,	129,	0X1000048C);
	create_insn	(x=0X1B6AA);
	op_plain_offset	(x,	1,	0X1000048C);
	op_plain_offset	(x,	129,	0X1000048C);
	create_insn	(x=0X1B6AE);
	op_plain_offset	(x,	1,	0X1000048C);
	op_plain_offset	(x,	129,	0X1000048C);
	create_insn	(x=0X1B6B6);
	op_plain_offset	(x,	1,	0X1000048C);
	op_plain_offset	(x,	129,	0X1000048C);
	create_insn	(0X1B6CC);
	create_insn	(0X1B6D6);
	create_insn	(0X1B6DE);
	create_dword	(x=0X1B700);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B704);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1B708);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1B70C);
	create_insn	(x=0X1B70E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1B71C);
	create_insn	(x=0X1B720);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1B724);
	create_insn	(x=0X1B73C);
	op_hex		(x,	1);
	create_insn	(x=0X1B74A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B758);
	op_hex		(x,	1);
	create_insn	(x=0X1B766);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X1B774);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1B778);
	create_insn	(x=0X1B77A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1B77C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1B78E);
	create_insn	(0X1B792);
	create_insn	(x=0X1B7C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1B7DC);
	create_insn	(x=0X1B7EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1B7F2);
	create_insn	(x=0X1B806);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1B812);
	create_insn	(0X1B816);
	create_insn	(x=0X1B832);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1B856);
	create_insn	(0X1B86A);
	create_insn	(0X1B88C);
	create_insn	(0X1B894);
	create_insn	(0X1B8D6);
	create_insn	(x=0X1B8DE);
	op_stkvar	(x,	1);
	create_insn	(0X1B920);
	create_insn	(x=0X1B93E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1B956);
	create_insn	(x=0X1B97A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1B9A4);
	create_insn	(0X1B9AE);
	create_insn	(0X1B9BA);
	create_insn	(0X1B9D4);
	create_insn	(0X1B9E0);
	create_insn	(0X1BA0C);
	create_insn	(0X1BA22);
	create_insn	(0X1BA56);
	create_insn	(0X1BA84);
	create_insn	(0X1BA9C);
	create_insn	(0X1BAB0);
	create_insn	(x=0X1BABA);
	op_stkvar	(x,	1);
	create_insn	(0X1BAE8);
	create_insn	(x=0X1BB02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1BB08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(0X1BB10);
	create_dword	(x=0X1BB14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1BB18);
	create_dword	(x=0X1BB1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1BB20);
	create_strlit	(0X1BB24,	0X1BB29);
	set_name	(0X1BB24,	"aSem");
	create_byte	(0X1BB29);
	make_array	(0X1BB29,	0X3);
	create_dword	(x=0X1BB2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1BB30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1BB34);
	create_insn	(0X1BB4C);
	set_cmt	(0X1BB5E,	"switch 8 cases ",	0);
	set_cmt	(0X1BB62,	"switch jump",	0);
	set_cmt	(0X1BB66,	"jump table for switch statement",	0);
	create_byte	(0X1BB66);
	set_name	(0X1BB66,	"jpt_11B62");
	create_byte	(0X1BB67);
	create_byte	(0X1BB68);
	create_byte	(0X1BB69);
	create_byte	(0X1BB6A);
	create_byte	(0X1BB6B);
	create_byte	(0X1BB6C);
	create_byte	(0X1BB6D);
	create_insn	(0X1BB6E);
	create_insn	(x=0X1BB78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1BB8A,	"jumptable 0001BB62 case 0",	1);
	create_insn	(0X1BB8A);
	create_insn	(0X1BBA4);
	set_cmt	(0X1BBAA,	"jumptable 0001BB62 cases 2,3,6,7",	1);
	create_insn	(0X1BBAA);
	set_cmt	(0X1BBAE,	"switch 8 cases ",	0);
	set_cmt	(0X1BBB2,	"switch jump",	0);
	set_cmt	(0X1BBB6,	"jump table for switch statement",	0);
	create_byte	(0X1BBB6);
	set_name	(0X1BBB6,	"jpt_11BB2");
	create_byte	(0X1BBB7);
	create_byte	(0X1BBB8);
	create_byte	(0X1BBB9);
	create_byte	(0X1BBBA);
	create_byte	(0X1BBBB);
	create_byte	(0X1BBBC);
	create_byte	(0X1BBBD);
	set_cmt	(0X1BBBE,	"jumptable 0001BB62 cases 1,4,5\njumptable 0001BBB2 cases 1,2,7",	1);
	create_insn	(0X1BBBE);
	set_cmt	(0X1BBC4,	"jumptable 0001BBB2 cases 3-6",	1);
	create_insn	(0X1BBC4);
	set_cmt	(0X1BBCC,	"jumptable 0001BBB2 default case",	1);
	set_name	(0X1BBCC,	"def_11BB2");
	set_cmt	(0X1BBE0,	"jumptable 0001BB62 default case",	1);
	create_insn	(0X1BBE0);
	set_name	(0X1BBE0,	"def_11B62");
	create_insn	(x=0X1BBF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1BC08);
	create_insn	(0X1BC0E);
	create_insn	(x=0X1BC22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1BC88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1BC92);
	create_insn	(x=0X1BCA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BCAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1BCC2);
	create_insn	(0X1BCDC);
	create_insn	(x=0X1BCE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD00);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD12);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD20);
	op_stkvar	(x,	1);
	create_insn	(x=0X1BD4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1BD52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1BD6A);
	create_insn	(0X1BD7E);
	create_insn	(x=0X1BD90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1BDC4);
	create_insn	(x=0X1BDE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1BE16);
	create_insn	(x=0X1BE3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1BE58);
	create_insn	(0X1BEB0);
	create_insn	(0X1BEE0);
	create_insn	(0X1BEF0);
	create_insn	(x=0X1BF0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1BF18,	"switch 8 cases ",	0);
	set_cmt	(0X1BF1C,	"switch jump",	0);
	set_cmt	(0X1BF20,	"jump table for switch statement",	0);
	create_byte	(0X1BF20);
	set_name	(0X1BF20,	"jpt_11F1C");
	create_byte	(0X1BF21);
	create_byte	(0X1BF22);
	create_byte	(0X1BF23);
	create_byte	(0X1BF24);
	create_byte	(0X1BF25);
	create_byte	(0X1BF26);
	create_byte	(0X1BF27);
	set_cmt	(0X1BF28,	"jumptable 0001BF1C cases 2,3,6,7",	1);
	create_insn	(0X1BF28);
	set_cmt	(0X1BF30,	"jumptable 0001BF1C cases 0,1,4,5",	1);
	create_insn	(0X1BF50);
	create_insn	(x=0X1BF58);
	op_stkvar	(x,	1);
	make_array	(0X1BF72,	0X2);
	create_dword	(x=0X1BF74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1BF78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X1BF7C,	0X1BF82);
	set_name	(0X1BF7C,	"aTask");
	make_array	(0X1BF82,	0X2);
	create_strlit	(0X1BF84,	0X1BF86);
	make_array	(0X1BF86,	0X2);
	create_dword	(x=0X1BF88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1BF8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1BF90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1BF94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1BF98);
	set_cmt	(0X1BF9C,	"jumptable 0001BF1C default case",	1);
	create_insn	(0X1BF9C);
	set_name	(0X1BF9C,	"def_11F1C");
	create_insn	(0X1BFB0);
	create_insn	(0X1BFD6);
	set_cmt	(0X1BFEE,	"switch 8 cases ",	0);
	set_cmt	(0X1BFF2,	"switch jump",	0);
	set_cmt	(0X1BFF6,	"jump table for switch statement",	0);
	create_byte	(0X1BFF6);
	set_name	(0X1BFF6,	"jpt_11FF2");
	create_byte	(0X1BFF7);
	create_byte	(0X1BFF8);
	create_byte	(0X1BFF9);
	create_byte	(0X1BFFA);
	create_byte	(0X1BFFB);
	create_byte	(0X1BFFC);
	create_byte	(0X1BFFD);
	set_cmt	(0X1BFFE,	"jumptable 0001BFF2 cases 0-3",	1);
	create_insn	(0X1BFFE);
	set_cmt	(0X1C010,	"jumptable 0001BFF2 case 4",	1);
	create_insn	(0X1C010);
	create_insn	(x=0X1C016);
	op_hex		(x,	1);
	set_cmt	(0X1C03C,	"jumptable 0001BFF2 case 5",	1);
	create_insn	(0X1C03C);
	create_insn	(x=0X1C042);
	op_hex		(x,	1);
	set_cmt	(0X1C050,	"jumptable 0001BFF2 case 6",	1);
	create_insn	(0X1C050);
	create_insn	(x=0X1C056);
	op_hex		(x,	1);
	set_cmt	(0X1C064,	"jumptable 0001BFF2 case 7",	1);
	create_insn	(0X1C064);
	create_insn	(x=0X1C06A);
	op_hex		(x,	1);
	set_cmt	(0X1C07C,	"jumptable 0001BFF2 default case",	1);
	create_insn	(0X1C07C);
	set_name	(0X1C07C,	"def_11FF2");
	create_insn	(0X1C08E);
	create_insn	(x=0X1C0AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1C0EC);
	create_insn	(x=0X1C102);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1C11C);
	create_insn	(0X1C156);
	create_insn	(0X1C17A);
	create_insn	(0X1C186);
	create_insn	(0X1C1A2);
	create_insn	(x=0X1C1BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1C1C8,	"switch 8 cases ",	0);
	set_cmt	(0X1C1CC,	"switch jump",	0);
	set_cmt	(0X1C1D0,	"jump table for switch statement",	0);
	create_byte	(0X1C1D0);
	set_name	(0X1C1D0,	"jpt_121CC");
	create_byte	(0X1C1D1);
	create_byte	(0X1C1D2);
	create_byte	(0X1C1D3);
	create_byte	(0X1C1D4);
	create_byte	(0X1C1D5);
	create_byte	(0X1C1D6);
	create_byte	(0X1C1D7);
	set_cmt	(0X1C1D8,	"jumptable 0001C1CC cases 0,1,4,5",	1);
	create_insn	(0X1C1D8);
	create_insn	(0X1C1F4);
	set_cmt	(0X1C204,	"jumptable 0001C1CC cases 2,3,6,7",	1);
	create_insn	(0X1C204);
	create_insn	(0X1C210);
	create_insn	(x=0X1C218);
	op_stkvar	(x,	1);
	set_cmt	(0X1C234,	"jumptable 0001C1CC default case",	1);
	create_insn	(0X1C234);
	set_name	(0X1C234,	"def_121CC");
	create_insn	(0X1C24A);
	create_insn	(0X1C264);
	create_insn	(x=0X1C27A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1C294);
	create_insn	(x=0X1C298);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1C2A8);
	create_insn	(x=0X1C2B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C2BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1C2D4);
	set_cmt	(0X1C2DE,	"switch 8 cases ",	0);
	set_cmt	(0X1C2E2,	"switch jump",	0);
	set_cmt	(0X1C2E6,	"jump table for switch statement",	0);
	create_byte	(0X1C2E6);
	set_name	(0X1C2E6,	"jpt_122E2");
	create_byte	(0X1C2E7);
	create_byte	(0X1C2E8);
	create_byte	(0X1C2E9);
	create_byte	(0X1C2EA);
	create_byte	(0X1C2EB);
	create_byte	(0X1C2EC);
	create_byte	(0X1C2ED);
	set_cmt	(0X1C2EE,	"jumptable 0001C2E2 case 0",	1);
	create_insn	(0X1C2EE);
	set_cmt	(0X1C300,	"jumptable 0001C2E2 case 1",	1);
	create_insn	(0X1C300);
	create_insn	(0X1C304);
	set_cmt	(0X1C316,	"jumptable 0001C2E2 case 2",	1);
	create_insn	(0X1C316);
	set_cmt	(0X1C31A,	"jumptable 0001C2E2 case 3",	1);
	create_insn	(0X1C31A);
	set_cmt	(0X1C326,	"jumptable 0001C2E2 cases 4-7",	1);
	create_insn	(0X1C326);
	set_cmt	(0X1C330,	"jumptable 0001C2E2 default case",	1);
	create_insn	(0X1C330);
	set_name	(0X1C330,	"def_122E2");
	create_insn	(0X1C342);
	create_insn	(x=0X1C35E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1C36E);
	create_insn	(x=0X1C374);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C37A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C37E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C386);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C390);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X1C39E,	0X2);
	create_dword	(x=0X1C3A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C3A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C3A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C3AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C3B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C3B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C3B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1C3BC);
	create_insn	(0X1C3D8);
	create_insn	(0X1C3F2);
	create_insn	(x=0X1C3FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C404);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C408);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C420);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1C438,	"switch 8 cases ",	0);
	set_cmt	(0X1C43C,	"switch jump",	0);
	set_cmt	(0X1C440,	"jump table for switch statement",	0);
	create_byte	(0X1C440);
	set_name	(0X1C440,	"jpt_1243C");
	create_byte	(0X1C441);
	create_byte	(0X1C442);
	create_byte	(0X1C443);
	create_byte	(0X1C444);
	create_byte	(0X1C445);
	create_byte	(0X1C446);
	create_byte	(0X1C447);
	set_cmt	(0X1C448,	"jumptable 0001C43C case 1",	1);
	create_insn	(0X1C448);
	set_cmt	(0X1C460,	"jumptable 0001C43C case 3",	1);
	create_insn	(0X1C460);
	set_cmt	(0X1C48A,	"jumptable 0001C43C case 5",	1);
	create_insn	(0X1C48A);
	create_insn	(0X1C4A2);
	set_cmt	(0X1C4A4,	"jumptable 0001C43C case 7",	1);
	create_insn	(0X1C4A4);
	create_insn	(0X1C4D6);
	set_cmt	(0X1C4D8,	"jumptable 0001C43C default case",	1);
	set_name	(0X1C4D8,	"def_1243C");
	create_insn	(x=0X1C4E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C4F4);
	op_stkvar	(x,	1);
	create_insn	(0X1C4FE);
	create_insn	(x=0X1C500);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C506);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C50E);
	op_stkvar	(x,	1);
	create_insn	(0X1C522);
	create_insn	(x=0X1C528);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C52A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1C52E);
	create_insn	(0X1C544);
	create_insn	(x=0X1C548);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C550);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C558);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1C56A);
	create_insn	(x=0X1C570);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C572);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C574);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C576);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C578);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C584);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C586);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C58C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C590);
	op_stkvar	(x,	1);
	create_insn	(x=0X1C592);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C594);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1C59C);
	create_insn	(x=0X1C59E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C5AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1C5BE);
	create_insn	(0X1C5D0);
	create_insn	(0X1C5E0);
	create_insn	(x=0X1C5EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C5F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1C61C);
	create_insn	(0X1C61E);
	create_insn	(0X1C628);
	create_insn	(0X1C632);
	create_insn	(0X1C63A);
	create_insn	(0X1C65C);
	create_insn	(0X1C666);
	create_insn	(x=0X1C66C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_4(void) {
        auto x;
#define id x

	create_insn	(x=0X1C66E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1C672);
	create_dword	(x=0X1C684);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C688);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C68C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C690);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C694);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C698);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C69C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C6A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C6A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X1C6A8,	0X1C6BC);
	set_name	(0X1C6A8,	"aUcOsIiiTickTas");
	create_dword	(x=0X1C6BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1C6C0);
	create_insn	(x=0X1C6C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1C6D6);
	create_insn	(0X1C6EA);
	create_insn	(x=0X1C6F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1C71C);
	create_insn	(0X1C726);
	create_insn	(0X1C740);
	create_insn	(x=0X1C746);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C758);
	op_hex		(x,	1);
	create_insn	(0X1C774);
	create_insn	(x=0X1C77C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1C7B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1C7DC);
	create_insn	(0X1C7F6);
	create_insn	(0X1C7F8);
	create_insn	(0X1C7FC);
	create_insn	(x=0X1C80A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1C820);
	create_insn	(x=0X1C830);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1C844);
	create_insn	(x=0X1C84E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X1C856,	0X2);
	create_dword	(x=0X1C858);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C85C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C860);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C864);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1C868);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1C86C);
	create_insn	(x=0X1C872);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X1C882,	0X2);
	create_dword	(x=0X1C884);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1C888);
	create_insn	(0X1C88C);
	create_insn	(0X1C890);
	create_insn	(0X1C898);
	create_insn	(0X1C89E);
	create_insn	(0X1C8A4);
	create_insn	(0X1C8AA);
	create_insn	(0X1C8AE);
	make_array	(0X1C8B2,	0X2);
	create_insn	(0X1C8B4);
	create_insn	(0X1C8D0);
	create_insn	(0X1C8E0);
	create_insn	(0X1C8FC);
	create_insn	(0X1C90C);
	create_insn	(x=0X1C90E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1C914,	"switch 16 cases ",	0);
	set_cmt	(0X1C918,	"switch jump",	0);
	set_cmt	(0X1C91C,	"jump table for switch statement",	0);
	create_byte	(0X1C91C);
	set_name	(0X1C91C,	"jpt_12918");
	create_byte	(0X1C91D);
	create_byte	(0X1C91E);
	create_byte	(0X1C91F);
	create_byte	(0X1C920);
	create_byte	(0X1C921);
	create_byte	(0X1C922);
	create_byte	(0X1C923);
	create_byte	(0X1C924);
	create_byte	(0X1C925);
	create_byte	(0X1C926);
	create_byte	(0X1C927);
	create_byte	(0X1C928);
	create_byte	(0X1C929);
	create_byte	(0X1C92A);
	create_byte	(0X1C92B);
	set_cmt	(0X1C92C,	"jumptable 0001C918 case 4",	1);
	create_insn	(0X1C92C);
	create_insn	(x=0X1C938);
	op_hex		(x,	1);
	set_cmt	(0X1C93E,	"jumptable 0001C918 case 5",	1);
	create_insn	(0X1C93E);
	create_insn	(x=0X1C94A);
	op_hex		(x,	1);
	set_cmt	(0X1C958,	"jumptable 0001C918 case 6",	1);
	create_insn	(0X1C958);
	create_insn	(x=0X1C964);
	op_hex		(x,	1);
	set_cmt	(0X1C96A,	"jumptable 0001C918 case 15",	1);
	create_insn	(0X1C96A);
	create_insn	(x=0X1C974);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X1C976);
	op_hex		(x,	1);
	create_insn	(x=0X1C97A);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	set_cmt	(0X1C984,	"jumptable 0001C918 default case",	1);
	create_insn	(x=0X1C984);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	set_name	(0X1C984,	"def_12918");
	create_insn	(x=0X1C9A0);
	op_hex		(x,	1);
	set_cmt	(0X1C9CC,	"jumptable 0001C918 cases 0-3,7-14",	1);
	create_insn	(0X1C9CC);
	create_insn	(0X1C9CE);
	create_insn	(x=0X1C9D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1C9D6,	"switch 16 cases ",	0);
	set_cmt	(0X1C9DA,	"switch jump",	0);
	set_cmt	(0X1C9DE,	"jump table for switch statement",	0);
	create_byte	(0X1C9DE);
	set_name	(0X1C9DE,	"jpt_129DA");
	create_byte	(0X1C9DF);
	create_byte	(0X1C9E0);
	create_byte	(0X1C9E1);
	create_byte	(0X1C9E2);
	create_byte	(0X1C9E3);
	create_byte	(0X1C9E4);
	create_byte	(0X1C9E5);
	create_byte	(0X1C9E6);
	create_byte	(0X1C9E7);
	create_byte	(0X1C9E8);
	create_byte	(0X1C9E9);
	create_byte	(0X1C9EA);
	create_byte	(0X1C9EB);
	create_byte	(0X1C9EC);
	create_byte	(0X1C9ED);
	set_cmt	(0X1C9EE,	"jumptable 0001C9DA case 4",	1);
	create_insn	(0X1C9EE);
	create_insn	(x=0X1C9FA);
	op_hex		(x,	1);
	set_cmt	(0X1CA00,	"jumptable 0001C9DA case 5",	1);
	create_insn	(0X1CA00);
	create_insn	(x=0X1CA0C);
	op_hex		(x,	1);
	set_cmt	(0X1CA1A,	"jumptable 0001C9DA case 6",	1);
	create_insn	(0X1CA1A);
	create_insn	(x=0X1CA26);
	op_hex		(x,	1);
	set_cmt	(0X1CA2C,	"jumptable 0001C9DA case 15",	1);
	create_insn	(0X1CA2C);
	create_insn	(x=0X1CA36);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X1CA38);
	op_hex		(x,	1);
	create_insn	(x=0X1CA3C);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	set_cmt	(0X1CA46,	"jumptable 0001C9DA default case",	1);
	create_insn	(x=0X1CA46);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	set_name	(0X1CA46,	"def_129DA");
	create_insn	(x=0X1CA62);
	op_hex		(x,	1);
	set_cmt	(0X1CA8E,	"jumptable 0001C9DA cases 0-3,7-14",	1);
	create_insn	(0X1CA8E);
	create_insn	(0X1CA90);
	create_insn	(x=0X1CA9A);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X1CAB6);
	op_hex		(x,	1);
	create_insn	(0X1CAE2);
	create_insn	(0X1CAE4);
	create_insn	(x=0X1CAF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CAF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1CAFA,	"switch 16 cases ",	0);
	set_cmt	(0X1CAFE,	"switch jump",	0);
	set_cmt	(0X1CB02,	"jump table for switch statement",	0);
	create_byte	(0X1CB02);
	set_name	(0X1CB02,	"jpt_12AFE");
	create_byte	(0X1CB03);
	create_byte	(0X1CB04);
	create_byte	(0X1CB05);
	create_byte	(0X1CB06);
	create_byte	(0X1CB07);
	create_byte	(0X1CB08);
	create_byte	(0X1CB09);
	create_byte	(0X1CB0A);
	create_byte	(0X1CB0B);
	create_byte	(0X1CB0C);
	create_byte	(0X1CB0D);
	create_byte	(0X1CB0E);
	create_byte	(0X1CB0F);
	create_byte	(0X1CB10);
	create_byte	(0X1CB11);
	set_cmt	(0X1CB12,	"jumptable 0001CAFE case 4",	1);
	create_insn	(0X1CB12);
	create_insn	(x=0X1CB1E);
	op_hex		(x,	1);
	set_cmt	(0X1CB26,	"jumptable 0001CAFE case 5",	1);
	create_insn	(0X1CB26);
	create_insn	(x=0X1CB32);
	op_hex		(x,	1);
	set_cmt	(0X1CB44,	"jumptable 0001CAFE case 6",	1);
	create_insn	(0X1CB44);
	create_insn	(x=0X1CB50);
	op_hex		(x,	1);
	set_cmt	(0X1CB5A,	"jumptable 0001CAFE case 11",	1);
	create_insn	(0X1CB5A);
	create_insn	(x=0X1CB64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CB6A);
	op_hex		(x,	1);
	set_cmt	(0X1CB76,	"jumptable 0001CAFE case 12",	1);
	create_insn	(0X1CB76);
	create_insn	(x=0X1CB82);
	op_hex		(x,	1);
	set_cmt	(0X1CB8A,	"jumptable 0001CAFE case 14",	1);
	create_insn	(0X1CB8A);
	create_insn	(x=0X1CB96);
	op_hex		(x,	1);
	set_cmt	(0X1CBA0,	"jumptable 0001CAFE case 15",	1);
	create_insn	(0X1CBA0);
	create_insn	(x=0X1CBAC);
	op_hex		(x,	1);
	set_cmt	(0X1CBB8,	"jumptable 0001CAFE default case",	1);
	create_insn	(0X1CBB8);
	set_name	(0X1CBB8,	"def_12AFE");
	create_insn	(x=0X1CBBC);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X1CBD8);
	op_hex		(x,	1);
	set_cmt	(0X1CC10,	"jumptable 0001CAFE cases 0-3,7-10,13",	1);
	create_insn	(0X1CC10);
	create_insn	(0X1CC14);
	create_insn	(x=0X1CC16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CC18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1CC20,	"switch 16 cases ",	0);
	set_cmt	(0X1CC24,	"switch jump",	0);
	set_cmt	(0X1CC28,	"jump table for switch statement",	0);
	create_byte	(0X1CC28);
	set_name	(0X1CC28,	"jpt_12C24");
	create_byte	(0X1CC29);
	create_byte	(0X1CC2A);
	create_byte	(0X1CC2B);
	create_byte	(0X1CC2C);
	create_byte	(0X1CC2D);
	create_byte	(0X1CC2E);
	create_byte	(0X1CC2F);
	create_byte	(0X1CC30);
	create_byte	(0X1CC31);
	create_byte	(0X1CC32);
	create_byte	(0X1CC33);
	create_byte	(0X1CC34);
	create_byte	(0X1CC35);
	create_byte	(0X1CC36);
	create_byte	(0X1CC37);
	set_cmt	(0X1CC38,	"jumptable 0001CC24 case 1",	1);
	create_insn	(0X1CC38);
	set_cmt	(0X1CC3E,	"jumptable 0001CC24 case 2",	1);
	create_insn	(0X1CC3E);
	set_cmt	(0X1CC44,	"jumptable 0001CC24 case 3",	1);
	create_insn	(0X1CC44);
	set_cmt	(0X1CC4A,	"jumptable 0001CC24 case 4",	1);
	create_insn	(0X1CC4A);
	set_cmt	(0X1CC5A,	"jumptable 0001CC24 case 5",	1);
	create_insn	(0X1CC5A);
	set_cmt	(0X1CC76,	"jumptable 0001CC24 case 6",	1);
	create_insn	(0X1CC76);
	set_cmt	(0X1CC86,	"jumptable 0001CC24 case 11",	1);
	create_insn	(0X1CC86);
	create_insn	(x=0X1CC90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1CC98,	"jumptable 0001CC24 case 12",	1);
	create_insn	(0X1CC98);
	set_cmt	(0X1CCA8,	"jumptable 0001CC24 case 14",	1);
	create_insn	(0X1CCA8);
	set_cmt	(0X1CCBA,	"jumptable 0001CC24 case 15",	1);
	create_insn	(0X1CCBA);
	set_cmt	(0X1CCD0,	"jumptable 0001CC24 default case",	1);
	create_insn	(0X1CCD0);
	set_name	(0X1CCD0,	"def_12C24");
	create_insn	(x=0X1CCD4);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X1CCF0);
	op_hex		(x,	1);
	create_dword	(x=0X1CD08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1CD0C);
	create_insn	(0X1CD10);
	set_cmt	(0X1CD30,	"jumptable 0001CC24 cases 0,7-10,13",	1);
	create_insn	(0X1CD34);
	create_insn	(x=0X1CD36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CD38);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CD40);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CD48);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CD4A);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CD4E);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CD54);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CD56);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CD5C);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(0X1CD60);
	create_insn	(x=0X1CD62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CD6A);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CD72);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CD74);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CD78);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CD7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CD82);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(0X1CD90);
	create_insn	(0X1CD92);
	create_insn	(0X1CD96);
	create_insn	(0X1CD98);
	create_insn	(x=0X1CD9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CD9E);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(0X1CDA6);
	create_insn	(0X1CDA8);
	create_insn	(x=0X1CDB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CDB2);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(0X1CDB6);
	create_insn	(x=0X1CDBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CDBE);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(0X1CDCE);
	create_insn	(x=0X1CDDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CDDE);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(0X1CDE8);
	create_insn	(x=0X1CDEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CDF0);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(0X1CE00);
	create_insn	(x=0X1CE04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CE0C);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CE0E);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CE10);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CE12);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CE14);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CE16);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CE20);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CE2A);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CE3C);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(x=0X1CE46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1CE48);
	op_plain_offset	(x,	1,	0X100004CC);
	op_plain_offset	(x,	129,	0X100004CC);
	create_insn	(0X1CE52);
	make_array	(0X1CE56,	0X2);
	create_dword	(x=0X1CE58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1CE5C);
	create_insn	(0X1CE5E);
	create_insn	(x=0X1CE62);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1CE66);
	op_hex		(x,	1);
	create_insn	(0X1CE78);
	create_insn	(0X1CE7C);
	create_insn	(0X1CE80);
	create_insn	(x=0X1CE84);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1CE88);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1CE94);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1CEAC);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(0X1CEBA);
	set_cmt	(0X1CED2,	"switch 7 cases ",	0);
	set_cmt	(0X1CED6,	"switch jump",	0);
	set_cmt	(0X1CEDA,	"jump table for switch statement",	0);
	create_byte	(0X1CEDA);
	set_name	(0X1CEDA,	"jpt_12ED6");
	create_byte	(0X1CEDB);
	create_byte	(0X1CEDC);
	create_byte	(0X1CEDD);
	create_byte	(0X1CEDE);
	create_byte	(0X1CEDF);
	create_byte	(0X1CEE0);
	set_cmt	(0X1CEE2,	"jumptable 0001CED6 case 1",	1);
	create_insn	(0X1CEE2);
	set_cmt	(0X1CEE6,	"jumptable 0001CED6 case 2",	1);
	create_insn	(0X1CEE6);
	set_cmt	(0X1CEEA,	"jumptable 0001CED6 case 4",	1);
	create_insn	(0X1CEEA);
	set_cmt	(0X1CEEE,	"jumptable 0001CED6 case 6",	1);
	create_insn	(0X1CEEE);
	set_cmt	(0X1CEFA,	"jumptable 0001CED6 default case",	1);
	set_name	(0X1CEFA,	"def_12ED6");
	create_insn	(0X1CEFE);
	create_insn	(x=0X1CF14);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1CF1C);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1CF20);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1CF28);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(0X1CF2E);
	create_insn	(x=0X1CF30);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1CF38);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1CF3E);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1CF44);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(0X1CF56);
	create_insn	(0X1CF6E);
	create_insn	(x=0X1CF82);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(0X1CF9C);
	create_insn	(0X1CFB4);
	create_insn	(x=0X1CFC8);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(0X1CFE2);
	create_insn	(x=0X1CFFE);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1D008);
	op_hex		(x,	1);
	create_insn	(0X1D01E);
	create_insn	(0X1D022);
	create_insn	(0X1D032);
	create_insn	(0X1D03E);
	create_insn	(0X1D040);
	create_insn	(0X1D042);
	create_insn	(0X1D046);
	make_array	(0X1D04A,	0X2);
	create_dword	(x=0X1D04C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1D050);
	create_dword	(0X1D054);
	create_insn	(0X1D058);
	create_insn	(x=0X1D05C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1D060);
	create_insn	(x=0X1D074);
	op_plain_offset	(x,	1,	0X10005A80);
	op_plain_offset	(x,	129,	0X10005A80);
	create_insn	(x=0X1D078);
	op_plain_offset	(x,	1,	0X10005A80);
	op_plain_offset	(x,	129,	0X10005A80);
	create_insn	(0X1D080);
	create_insn	(0X1D088);
	create_insn	(0X1D08C);
	create_insn	(x=0X1D090);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D094);
	op_plain_offset	(x,	1,	0X10005A80);
	op_plain_offset	(x,	129,	0X10005A80);
	create_insn	(0X1D0BE);
	create_insn	(0X1D0C6);
	create_insn	(0X1D0CA);
	create_insn	(x=0X1D0CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1D0D2);
	create_insn	(x=0X1D0E6);
	op_plain_offset	(x,	1,	0X10005C88);
	op_plain_offset	(x,	129,	0X10005C88);
	create_insn	(x=0X1D0EA);
	op_plain_offset	(x,	1,	0X10005C88);
	op_plain_offset	(x,	129,	0X10005C88);
	create_insn	(0X1D0F2);
	create_insn	(0X1D0FA);
	create_insn	(0X1D0FE);
	create_insn	(x=0X1D102);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D106);
	op_plain_offset	(x,	1,	0X10005C88);
	op_plain_offset	(x,	129,	0X10005C88);
	create_insn	(0X1D130);
	create_insn	(0X1D138);
	create_insn	(x=0X1D13C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D140);
	op_plain_offset	(x,	1,	0X10005A80);
	op_plain_offset	(x,	129,	0X10005A80);
	create_insn	(x=0X1D14E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D152);
	op_plain_offset	(x,	1,	0X100004E8);
	op_plain_offset	(x,	129,	0X100004E8);
	create_insn	(x=0X1D154);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D15A);
	op_plain_offset	(x,	1,	0X10005A80);
	op_plain_offset	(x,	129,	0X10005A80);
	create_insn	(x=0X1D15C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D160);
	op_plain_offset	(x,	1,	0X10005C88);
	op_plain_offset	(x,	129,	0X10005C88);
	create_insn	(0X1D164);
	create_insn	(0X1D168);
	create_insn	(0X1D16C);
	create_insn	(0X1D170);
	create_insn	(0X1D174);
	create_insn	(0X1D178);
	create_insn	(x=0X1D17C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D17E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D188);
	op_plain_offset	(x,	1,	0X100059BA);
	op_plain_offset	(x,	129,	0X100059BA);
	create_insn	(x=0X1D18C);
	op_plain_offset	(x,	1,	0X100059BA);
	op_plain_offset	(x,	129,	0X100059BA);
	create_insn	(x=0X1D190);
	op_plain_offset	(x,	1,	0X100059BA);
	op_plain_offset	(x,	129,	0X100059BA);
	create_insn	(x=0X1D192);
	op_plain_offset	(x,	1,	0X100004FC);
	op_plain_offset	(x,	129,	0X100004FC);
	create_insn	(x=0X1D194);
	op_plain_offset	(x,	1,	0X100059BA);
	op_plain_offset	(x,	129,	0X100059BA);
	create_insn	(x=0X1D196);
	op_plain_offset	(x,	1,	0X100004FC);
	op_plain_offset	(x,	129,	0X100004FC);
	create_insn	(x=0X1D198);
	op_plain_offset	(x,	1,	0X100059BA);
	op_plain_offset	(x,	129,	0X100059BA);
	create_insn	(x=0X1D19A);
	op_plain_offset	(x,	1,	0X100004FC);
	op_plain_offset	(x,	129,	0X100004FC);
	create_insn	(x=0X1D19C);
	op_plain_offset	(x,	1,	0X100059BA);
	op_plain_offset	(x,	129,	0X100059BA);
	create_insn	(0X1D1A2);
	create_insn	(0X1D1A6);
	create_insn	(0X1D1AA);
	create_insn	(x=0X1D1AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D1AE);
	op_plain_offset	(x,	1,	0X100004E8);
	op_plain_offset	(x,	129,	0X100004E8);
	create_insn	(x=0X1D1B2);
	op_plain_offset	(x,	1,	0X100004E8);
	op_plain_offset	(x,	129,	0X100004E8);
	create_insn	(x=0X1D1B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D1B8);
	op_plain_offset	(x,	1,	0X10005C88);
	op_plain_offset	(x,	129,	0X10005C88);
	create_insn	(x=0X1D1C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D1C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D1CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D1D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D1D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1D1E2);
	create_insn	(x=0X1D1E4);
	op_plain_offset	(x,	1,	0X100004E8);
	op_plain_offset	(x,	129,	0X100004E8);
	create_insn	(x=0X1D1E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D1EC);
	op_plain_offset	(x,	1,	0X100004E8);
	op_plain_offset	(x,	129,	0X100004E8);
	create_insn	(x=0X1D1EE);
	op_plain_offset	(x,	1,	0X100004E8);
	op_plain_offset	(x,	129,	0X100004E8);
	create_insn	(x=0X1D1F6);
	op_plain_offset	(x,	1,	0X100004E8);
	op_plain_offset	(x,	129,	0X100004E8);
	create_insn	(x=0X1D1FA);
	op_plain_offset	(x,	1,	0X100004E8);
	op_plain_offset	(x,	129,	0X100004E8);
	create_insn	(x=0X1D200);
	op_plain_offset	(x,	1,	0X100004E8);
	op_plain_offset	(x,	129,	0X100004E8);
	create_insn	(0X1D204);
	create_insn	(x=0X1D206);
	op_plain_offset	(x,	1,	0X100004E8);
	op_plain_offset	(x,	129,	0X100004E8);
	create_insn	(x=0X1D208);
	op_plain_offset	(x,	1,	0X100004E8);
	op_plain_offset	(x,	129,	0X100004E8);
	create_insn	(x=0X1D20A);
	op_plain_offset	(x,	1,	0X100004E8);
	op_plain_offset	(x,	129,	0X100004E8);
	create_insn	(x=0X1D20C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D210);
	op_plain_offset	(x,	1,	0X10005A80);
	op_plain_offset	(x,	129,	0X10005A80);
	create_insn	(x=0X1D220);
	op_plain_offset	(x,	1,	0X100004E8);
	op_plain_offset	(x,	129,	0X100004E8);
	create_insn	(x=0X1D224);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D22E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1D230);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D23C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D23E);
	op_plain_offset	(x,	1,	0X100004E8);
	op_plain_offset	(x,	129,	0X100004E8);
	create_insn	(x=0X1D244);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D24E);
	op_plain_offset	(x,	1,	0X100004E8);
	op_plain_offset	(x,	129,	0X100004E8);
	create_insn	(0X1D252);
	create_insn	(x=0X1D254);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D260);
	op_plain_offset	(x,	1,	0X10005944);
	op_plain_offset	(x,	129,	0X10005944);
	create_insn	(x=0X1D264);
	op_plain_offset	(x,	1,	0X10005944);
	op_plain_offset	(x,	129,	0X10005944);
	create_insn	(x=0X1D266);
	op_plain_offset	(x,	1,	0X10005944);
	op_plain_offset	(x,	129,	0X10005944);
	create_insn	(x=0X1D268);
	op_plain_offset	(x,	1,	0X10005944);
	op_plain_offset	(x,	129,	0X10005944);
	create_insn	(x=0X1D26A);
	op_plain_offset	(x,	1,	0X10005944);
	op_plain_offset	(x,	129,	0X10005944);
	create_insn	(x=0X1D26C);
	op_plain_offset	(x,	1,	0X10005944);
	op_plain_offset	(x,	129,	0X10005944);
	create_insn	(x=0X1D26E);
	op_plain_offset	(x,	1,	0X10005944);
	op_plain_offset	(x,	129,	0X10005944);
	create_insn	(x=0X1D270);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D276);
	op_plain_offset	(x,	1,	0X10005944);
	op_plain_offset	(x,	129,	0X10005944);
	create_insn	(x=0X1D27A);
	op_plain_offset	(x,	1,	0X10005944);
	op_plain_offset	(x,	129,	0X10005944);
	create_dword	(x=0X1D284);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D288);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D28C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D290);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D294);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1D298);
	create_insn	(x=0X1D2A4);
	op_hex		(x,	1);
	create_insn	(0X1D2B0);
	create_insn	(x=0X1D2B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D2BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D2C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D2D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1D2DA);
	create_insn	(x=0X1D2DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D2E4);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(0X1D2F2);
	create_insn	(0X1D2FA);
	create_insn	(x=0X1D2FC);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D316);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(x=0X1D31A);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(x=0X1D324);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(0X1D328);
	create_insn	(0X1D32E);
	create_insn	(x=0X1D33E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1D346);
	create_insn	(x=0X1D348);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D354);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D360);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(0X1D364);
	create_insn	(x=0X1D36A);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D36E);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D370);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D374);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(0X1D380);
	create_insn	(x=0X1D38E);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D390);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D396);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D398);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D39C);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D3A0);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(x=0X1D3A4);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(x=0X1D3AE);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(0X1D3B6);
	create_insn	(0X1D3B8);
	create_insn	(x=0X1D3BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D3C6);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D3D2);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D3D4);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(0X1D3D8);
	create_insn	(x=0X1D3E0);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D3E2);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D3E6);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D3EE);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D3F0);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D3F4);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D3F8);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(x=0X1D3FC);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(x=0X1D406);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D40C);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(0X1D414);
	create_insn	(0X1D418);
	create_insn	(0X1D41A);
	create_insn	(x=0X1D41E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D422);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(x=0X1D428);
	op_hex		(x,	1);
	create_insn	(x=0X1D42C);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(x=0X1D436);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(0X1D448);
	create_insn	(x=0X1D452);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(x=0X1D458);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(x=0X1D45E);
	op_hex		(x,	1);
	create_insn	(x=0X1D462);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(x=0X1D468);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D46A);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(x=0X1D476);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(0X1D480);
	create_insn	(x=0X1D486);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(0X1D490);
	create_insn	(0X1D494);
	create_insn	(x=0X1D49E);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(x=0X1D4A2);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(x=0X1D4AE);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(0X1D4B8);
	create_insn	(0X1D4BC);
	create_insn	(x=0X1D4C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D4C4);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(x=0X1D4C6);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D4CC);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(0X1D4D2);
	create_insn	(x=0X1D4D8);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D4E4);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D4E6);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(x=0X1D4EA);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(x=0X1D4EE);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(0X1D4F2);
	create_insn	(x=0X1D4F8);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(x=0X1D4FC);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(0X1D506);
	create_insn	(x=0X1D510);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(0X1D518);
	create_insn	(x=0X1D52E);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D530);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D532);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D534);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D536);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D538);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D53A);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D53C);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D53E);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D540);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D542);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D544);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D546);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D548);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D54A);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D54C);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D54E);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D550);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D554);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(0X1D55C);
	create_insn	(0X1D55E);
	create_insn	(x=0X1D572);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D574);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D578);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D57C);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D57E);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D580);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D582);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D586);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D58A);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D58E);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D590);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D592);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D594);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D596);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D598);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D59A);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D59E);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5A2);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5A4);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5A8);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5AA);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5AE);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5B0);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5B2);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5B4);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5B6);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5B8);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5BA);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5BC);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5BE);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5C0);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5C4);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5CA);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5D0);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5D4);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D5DC);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(0X1D5E4);
	create_insn	(0X1D5E6);
	create_insn	(x=0X1D5FA);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5FC);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D5FE);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D600);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D604);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(0X1D60C);
	create_insn	(0X1D60E);
	create_insn	(x=0X1D622);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D624);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D626);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D628);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D62A);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D62C);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D62E);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D630);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D634);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(0X1D63C);
	create_insn	(0X1D63E);
	create_insn	(x=0X1D648);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D64C);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D658);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D65C);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D65E);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D662);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D664);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D668);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D66A);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D66E);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(0X1D676);
	create_insn	(0X1D678);
	create_insn	(x=0X1D688);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D68C);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D68E);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D692);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D694);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D698);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D69C);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D6A0);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D6A2);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D6A6);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D6A8);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D6AA);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_insn	(x=0X1D6AC);
	op_plain_offset	(x,	1,	0X1000594E);
	op_plain_offset	(x,	129,	0X1000594E);
	create_dword	(x=0X1D6B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D6B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D6B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D6BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D6C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1D6C4);
	create_insn	(0X1D6C8);
	create_insn	(x=0X1D6CA);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(0X1D6D2);
	create_insn	(0X1D6D4);
	create_insn	(x=0X1D6D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D6DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D6DE);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(0X1D6E6);
	create_insn	(x=0X1D6FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D6FE);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(x=0X1D706);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(x=0X1D708);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(x=0X1D70A);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(x=0X1D70C);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(x=0X1D710);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(x=0X1D718);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(x=0X1D71E);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(0X1D740);
	create_insn	(0X1D74A);
	create_insn	(x=0X1D762);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(x=0X1D76A);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(0X1D76E);
	create_insn	(x=0X1D782);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(0X1D790);
	create_insn	(0X1D792);
	create_insn	(0X1D798);
	create_insn	(0X1D79E);
	create_insn	(0X1D7A4);
	create_insn	(0X1D7AA);
	create_insn	(0X1D7B0);
	create_insn	(x=0X1D7B8);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(0X1D7C6);
	create_insn	(x=0X1D7CC);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(0X1D7D4);
	create_insn	(0X1D7D6);
	create_insn	(x=0X1D7DE);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(x=0X1D7E8);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(0X1D7EE);
	create_insn	(0X1D7F2);
	create_insn	(x=0X1D7F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D7FC);
	op_hex		(x,	1);
	create_insn	(x=0X1D80A);
	op_hex		(x,	1);
	create_insn	(x=0X1D816);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D832);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D834);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(0X1D844);
	create_insn	(0X1D84A);
	create_insn	(x=0X1D852);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D85E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D860);
	op_plain_offset	(x,	1,	0X10000504);
	op_plain_offset	(x,	129,	0X10000504);
	create_insn	(x=0X1D874);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D87A);
	op_plain_offset	(x,	1,	0X100059AD);
	op_plain_offset	(x,	129,	0X100059AD);
	create_insn	(0X1D882);
	create_insn	(x=0X1D888);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D88A);
	op_plain_offset	(x,	1,	0X1000598E);
	op_plain_offset	(x,	129,	0X1000598E);
	create_insn	(0X1D89E);
	create_insn	(0X1D8A4);
	create_insn	(0X1D8A6);
	create_insn	(0X1D8B0);
	create_insn	(x=0X1D8D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1D8D6);
	create_insn	(0X1D8DA);
	create_insn	(0X1D8DE);
	create_insn	(0X1D8E2);
	create_insn	(x=0X1D8EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1D8FE);
	create_insn	(x=0X1D90A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1D91A);
	create_insn	(x=0X1D920);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1D930);
	create_insn	(0X1D93E);
	create_insn	(0X1D952);
	make_array	(0X1D95A,	0X2);
	create_dword	(x=0X1D95C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D960);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1D964);
	create_dword	(x=0X1D968);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D96C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1D970);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D972);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1D974);
	op_hex		(x,	1);
	create_insn	(x=0X1D978);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1D97E);
	op_hex		(x,	1);
	create_insn	(x=0X1D984);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1D986);
	op_hex		(x,	1);
	create_insn	(x=0X1D98A);
	op_plain_offset	(x,	1,	0X2009C000);
	op_plain_offset	(x,	129,	0X2009C000);
	create_insn	(x=0X1D98E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D990);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1D992);
	op_hex		(x,	1);
	create_insn	(x=0X1D996);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1D998);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1D99A);
	op_hex		(x,	1);
	create_insn	(x=0X1D99E);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(0X1D9A2);
	create_insn	(x=0X1D9A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D9B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D9C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D9C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D9CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1D9CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1D9DA);
	create_insn	(0X1D9DC);
	create_dword	(x=0X1D9E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D9E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D9E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D9EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D9F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D9F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1D9F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1D9FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DA04);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X1DA06);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X1DA08);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X1DA0E);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X1DA12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1DA1C);
	create_insn	(x=0X1DA1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DA22);
	op_plain_offset	(x,	1,	0X1000053C);
	op_plain_offset	(x,	129,	0X1000053C);
	create_insn	(x=0X1DA38);
	op_plain_offset	(x,	1,	0X1000053C);
	op_plain_offset	(x,	129,	0X1000053C);
	create_insn	(x=0X1DA3C);
	op_plain_offset	(x,	1,	0X1000053C);
	op_plain_offset	(x,	129,	0X1000053C);
	create_insn	(0X1DA40);
	create_insn	(x=0X1DA42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DA54);
	op_plain_offset	(x,	1,	0X1000053C);
	op_plain_offset	(x,	129,	0X1000053C);
	create_insn	(x=0X1DA58);
	op_plain_offset	(x,	1,	0X1000053C);
	op_plain_offset	(x,	129,	0X1000053C);
	create_insn	(0X1DA5C);
	create_insn	(x=0X1DA66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1DA6E);
	create_insn	(x=0X1DA72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DA7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1DA80,	"switch 8 cases ",	0);
	set_cmt	(0X1DA84,	"switch jump",	0);
	set_cmt	(0X1DA88,	"jump table for switch statement",	0);
	create_byte	(0X1DA88);
	set_name	(0X1DA88,	"jpt_13A84");
	create_byte	(0X1DA89);
	create_byte	(0X1DA8A);
	create_byte	(0X1DA8B);
	create_byte	(0X1DA8C);
	create_byte	(0X1DA8D);
	create_byte	(0X1DA8E);
	create_byte	(0X1DA8F);
	set_cmt	(0X1DA90,	"jumptable 0001DA84 case 1",	1);
	create_insn	(0X1DA90);
	create_insn	(x=0X1DA9C);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X1DA9E);
	op_plain_offset	(x,	1,	0X1000053C);
	op_plain_offset	(x,	129,	0X1000053C);
	create_insn	(x=0X1DAAE);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	set_cmt	(0X1DAB0,	"switch 12 cases ",	0);
	set_cmt	(0X1DAB4,	"switch jump",	0);
	set_cmt	(0X1DAB8,	"jump table for switch statement",	0);
	create_byte	(0X1DAB8);
	set_name	(0X1DAB8,	"jpt_13AB4");
	create_byte	(0X1DAB9);
	create_byte	(0X1DABA);
	create_byte	(0X1DABB);
	create_byte	(0X1DABC);
	create_byte	(0X1DABD);
	create_byte	(0X1DABE);
	create_byte	(0X1DABF);
	create_byte	(0X1DAC0);
	create_byte	(0X1DAC1);
	create_byte	(0X1DAC2);
	create_byte	(0X1DAC3);
	set_cmt	(0X1DAC4,	"jumptable 0001DAB4 case 0",	1);
	create_insn	(0X1DAC4);
	set_cmt	(0X1DACA,	"jumptable 0001DAB4 case 1",	1);
	create_insn	(0X1DACA);
	set_cmt	(0X1DACE,	"jumptable 0001DAB4 case 3",	1);
	create_insn	(0X1DACE);
	set_cmt	(0X1DAD6,	"jumptable 0001DAB4 case 5",	1);
	create_insn	(x=0X1DAD6);
	op_hex		(x,	1);
	create_insn	(x=0X1DADC);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X1DADE);
	op_hex		(x,	1);
	create_insn	(x=0X1DAE2);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	set_cmt	(0X1DAE6,	"jumptable 0001DAB4 case 6",	1);
	create_insn	(0X1DAE6);
	set_cmt	(0X1DAF0,	"jumptable 0001DAB4 case 7",	1);
	create_insn	(0X1DAF0);
	set_cmt	(0X1DAF4,	"jumptable 0001DAB4 case 8",	1);
	create_insn	(x=0X1DAF4);
	op_hex		(x,	1);
	create_insn	(x=0X1DAFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1DB00,	"jumptable 0001DAB4 case 9",	1);
	create_insn	(0X1DB00);
	set_cmt	(0X1DB14,	"jumptable 0001DAB4 case 10",	1);
	create_insn	(x=0X1DB14);
	op_hex		(x,	1);
	create_insn	(x=0X1DB1C);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X1DB20);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X1DB22);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X1DB28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1DB32,	"jumptable 0001DAB4 case 11",	1);
	create_insn	(0X1DB32);
	create_insn	(x=0X1DB3A);
	op_hex		(x,	1);
	create_insn	(x=0X1DB44);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X1DB48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DB4E);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X1DB58);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	set_cmt	(0X1DB66,	"jumptable 0001DA84 default case",	1);
	create_insn	(0X1DB66);
	set_name	(0X1DB66,	"def_13A84");
	create_insn	(x=0X1DB68);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X1DB76);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X1DB7E);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	set_cmt	(0X1DB96,	"jumptable 0001DAB4 default case",	1);
	create_insn	(0X1DB96);
	set_name	(0X1DB96,	"def_13AB4");
	create_insn	(0X1DB98);
	create_insn	(0X1DBAA);
	create_insn	(x=0X1DBB0);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X1DBC0);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(0X1DBC8);
	create_insn	(0X1DBCA);
	create_insn	(0X1DBCE);
	create_insn	(x=0X1DBD4);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X1DBE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1DBEA,	"jumptable 0001DA84 cases 0,4,5",	1);
	create_insn	(x=0X1DBEE);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	set_cmt	(0X1DBF6,	"jumptable 0001DAB4 cases 2,4",	1);
	create_insn	(0X1DBF6);
	create_insn	(x=0X1DBFC);
	op_plain_offset	(x,	1,	0X1000053C);
	op_plain_offset	(x,	129,	0X1000053C);
	set_cmt	(0X1DC00,	"jumptable 0001DA84 case 2",	1);
	create_insn	(0X1DC00);
	create_insn	(x=0X1DC04);
	op_plain_offset	(x,	1,	0X1000053C);
	op_plain_offset	(x,	129,	0X1000053C);
	create_insn	(x=0X1DC0E);
	op_plain_offset	(x,	1,	0X1000053C);
	op_plain_offset	(x,	129,	0X1000053C);
	create_insn	(x=0X1DC22);
	op_hex		(x,	1);
	create_insn	(x=0X1DC2C);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X1DC34);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(0X1DC46);
	create_insn	(x=0X1DC4C);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(0X1DC5C);
	set_cmt	(0X1DC62,	"jumptable 0001DA84 case 7",	1);
	create_insn	(0X1DC62);
	create_insn	(0X1DC64);
	create_insn	(0X1DC66);
	set_cmt	(0X1DC68,	"jumptable 0001DA84 case 3",	1);
	create_insn	(0X1DC68);
	create_insn	(x=0X1DC72);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X1DC78);
	op_hex		(x,	1);
	create_insn	(x=0X1DC7C);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	set_cmt	(0X1DC86,	"jumptable 0001DA84 case 6",	1);
	create_insn	(0X1DC86);
	create_insn	(0X1DC8A);
	create_dword	(x=0X1DC94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1DC98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1DC9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1DCA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1DCA4);
	create_insn	(0X1DCB2);
	create_insn	(x=0X1DCB6);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DCBA);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DCBE);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(0X1DCC8);
	create_insn	(x=0X1DCCC);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DCD0);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DCD4);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DCDC);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DCE0);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DCE4);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(0X1DCEE);
	create_insn	(0X1DCF4);
	create_insn	(x=0X1DCFC);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(0X1DD2A);
	create_insn	(x=0X1DD2E);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DD32);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DD36);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DD3E);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(0X1DD44);
	create_insn	(0X1DD60);
	create_insn	(x=0X1DD64);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DD6A);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DD70);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DD74);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DD78);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DD84);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DD88);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DD8C);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DD92);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(0X1DD98);
	create_insn	(0X1DDA8);
	create_insn	(0X1DDAA);
	create_insn	(0X1DDAC);
	create_insn	(x=0X1DDB4);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DDC0);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(0X1DDF4);
	create_insn	(0X1DE02);
	create_insn	(x=0X1DE0A);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DE16);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DE1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DE32);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DE36);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DE3E);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DE58);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DE5C);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(0X1DE64);
	create_insn	(0X1DE74);
	create_insn	(x=0X1DE80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DE84);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1DE86);
	op_hex		(x,	1);
	create_insn	(x=0X1DE8A);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1DE8C);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1DE8E);
	op_hex		(x,	1);
	create_insn	(x=0X1DE92);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1DE96);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1DE9A);
	op_hex		(x,	1);
	create_insn	(x=0X1DEB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1DED4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1DEE2);
	create_insn	(0X1DEE4);
	set_name	(0X1DEE4,	"nullsub_5");
	create_insn	(0X1DEE6);
	create_insn	(x=0X1DEFE);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DF02);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DF0A);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(0X1DF10);
	create_insn	(x=0X1DF1C);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DF26);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DF2A);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DF30);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DF34);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DF40);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(0X1DF46);
	set_name	(0X1DF46,	"nullsub_6");
	create_insn	(0X1DF48);
	create_insn	(x=0X1DF50);
	op_stkvar	(x,	1);
	create_insn	(0X1DF5C);
	create_insn	(x=0X1DF64);
	op_stkvar	(x,	1);
	create_insn	(0X1DF70);
	create_insn	(x=0X1DF78);
	op_stkvar	(x,	1);
	create_insn	(0X1DF84);
	create_insn	(x=0X1DF8C);
	op_stkvar	(x,	1);
	create_insn	(0X1DF98);
	create_insn	(x=0X1DFA0);
	op_stkvar	(x,	1);
	create_insn	(0X1DFAC);
	create_insn	(0X1DFB0);
	create_insn	(x=0X1DFB4);
	op_hex		(x,	1);
	create_insn	(x=0X1DFC0);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DFC4);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DFD6);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1DFE8);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(0X1E002);
	create_insn	(x=0X1E00A);
	op_hex		(x,	1);
	create_insn	(x=0X1E014);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1E018);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(0X1E022);
	create_insn	(x=0X1E026);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(x=0X1E034);
	op_plain_offset	(x,	1,	0X5000C000);
	op_plain_offset	(x,	129,	0X5000C000);
	create_insn	(0X1E044);
	make_array	(0X1E062,	0X2);
	create_dword	(x=0X1E064);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1E068);
	create_dword	(0X1E06C);
	create_dword	(0X1E070);
	create_dword	(0X1E074);
	create_dword	(0X1E078);
	create_dword	(x=0X1E07C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E080);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E084);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E088);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E08C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E090);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1E094);
	create_dword	(0X1E098);
	create_dword	(0X1E09C);
	create_dword	(0X1E0A0);
	create_dword	(0X1E0A4);
	create_dword	(0X1E0A8);
	create_dword	(0X1E0AC);
	create_dword	(0X1E0B0);
	create_insn	(0X1E0B4);
	create_insn	(x=0X1E0B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E0C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1E0C8);
	create_insn	(0X1E0CC);
	set_name	(0X1E0CC,	"nullsub_7");
	create_insn	(0X1E0CE);
	set_name	(0X1E0CE,	"nullsub_12");
	create_insn	(0X1E0D0);
	create_insn	(0X1E0DC);
	create_insn	(0X1E0E0);
	create_insn	(0X1E0E2);
	create_insn	(0X1E0E4);
	create_insn	(0X1E0E6);
	create_insn	(0X1E0F2);
	create_insn	(0X1E0F6);
	create_insn	(0X1E0F8);
	create_insn	(0X1E0FA);
	create_insn	(0X1E0FC);
	create_insn	(0X1E0FE);
	create_insn	(0X1E100);
	create_insn	(0X1E102);
	create_insn	(0X1E104);
	create_insn	(0X1E106);
	create_insn	(0X1E108);
	create_insn	(0X1E10A);
	create_dword	(x=0X1E10C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1E110);
	create_insn	(0X1E124);
	create_insn	(x=0X1E126);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1E13E);
	create_insn	(x=0X1E140);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E142);
	op_plain_offset	(x,	1,	0X10005C88);
	op_plain_offset	(x,	129,	0X10005C88);
	create_insn	(x=0X1E164);
	op_plain_offset	(x,	1,	0X10005C88);
	op_plain_offset	(x,	129,	0X10005C88);
	create_insn	(x=0X1E180);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E18C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E192);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1E1A8);
	create_insn	(x=0X1E1B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E1BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E1BE);
	op_plain_offset	(x,	1,	0X10005C88);
	op_plain_offset	(x,	129,	0X10005C88);
	create_insn	(x=0X1E1C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E1CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E1DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E1E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E1EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E1F0);
	op_stkvar	(x,	1);
	create_insn	(0X1E202);
	create_insn	(0X1E214);
	create_insn	(x=0X1E222);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E22A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1E236);
	create_insn	(x=0X1E238);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E24E);
	op_plain_offset	(x,	1,	0X10005A80);
	op_plain_offset	(x,	129,	0X10005A80);
	create_insn	(x=0X1E252);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E254);
	op_plain_offset	(x,	1,	0X10005A80);
	op_plain_offset	(x,	129,	0X10005A80);
	create_insn	(x=0X1E260);
	op_plain_offset	(x,	1,	0X10005A80);
	op_plain_offset	(x,	129,	0X10005A80);
	create_insn	(x=0X1E264);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E268);
	op_plain_offset	(x,	1,	0X10005A80);
	op_plain_offset	(x,	129,	0X10005A80);
	create_insn	(x=0X1E272);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E276);
	op_plain_offset	(x,	1,	0X10005A80);
	op_plain_offset	(x,	129,	0X10005A80);
	create_dword	(x=0X1E27C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E280);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E284);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E288);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E28C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E290);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1E294);
	create_insn	(x=0X1E29A);
	op_plain_offset	(x,	1,	0X40000000);
	op_plain_offset	(x,	129,	0X40000000);
	create_insn	(x=0X1E29E);
	op_plain_offset	(x,	1,	0X40000000);
	op_plain_offset	(x,	129,	0X40000000);
	create_insn	(0X1E2A4);
	create_insn	(x=0X1E2AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E2B4);
	op_plain_offset	(x,	1,	0X10005F90);
	op_plain_offset	(x,	129,	0X10005F90);
	create_insn	(0X1E2C4);
	create_insn	(x=0X1E2CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E2D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E2DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1E2EA);
	create_insn	(x=0X1E2EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E304);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1E312);
	create_insn	(x=0X1E318);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E32C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1E338);
	create_insn	(0X1E33C);
	create_insn	(x=0X1E344);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E354);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E360);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1E36E);
	create_insn	(0X1E370);
	create_insn	(0X1E37E);
	create_insn	(x=0X1E380);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1E392);
	create_insn	(0X1E3A0);
	create_insn	(x=0X1E3A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E3A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E3CA);
	op_plain_offset	(x,	1,	0X100005B0);
	op_plain_offset	(x,	129,	0X100005B0);
	create_insn	(x=0X1E3D2);
	op_plain_offset	(x,	1,	0X100005B0);
	op_plain_offset	(x,	129,	0X100005B0);
	create_insn	(0X1E3D6);
	create_insn	(x=0X1E3F8);
	op_plain_offset	(x,	1,	0X100005B0);
	op_plain_offset	(x,	129,	0X100005B0);
	create_insn	(x=0X1E406);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E40C);
	op_plain_offset	(x,	1,	0X100005B0);
	op_plain_offset	(x,	129,	0X100005B0);
	create_insn	(x=0X1E410);
	op_plain_offset	(x,	1,	0X100005B0);
	op_plain_offset	(x,	129,	0X100005B0);
	create_insn	(0X1E414);
	create_insn	(x=0X1E42C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E42E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E43C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E462);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1E47A);
	create_insn	(x=0X1E47E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E48A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E494);
	op_plain_offset	(x,	1,	0X10005FB8);
	op_plain_offset	(x,	129,	0X10005FB8);
	create_insn	(x=0X1E4B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1E4C4);
	create_insn	(0X1E4CE);
	create_insn	(0X1E4D8);
	create_insn	(0X1E4E2);
	create_insn	(0X1E4EC);
	create_insn	(0X1E4F6);
	create_insn	(0X1E500);
	create_insn	(0X1E50A);
	create_insn	(0X1E514);
	create_insn	(0X1E51E);
	create_insn	(0X1E528);
	create_insn	(0X1E532);
	create_insn	(0X1E53C);
	create_insn	(0X1E546);
	create_insn	(0X1E550);
	create_insn	(0X1E55A);
	create_insn	(0X1E564);
	create_insn	(0X1E574);
	create_insn	(x=0X1E582);
	op_stkvar	(x,	1);
	create_insn	(0X1E588);
	create_insn	(0X1E592);
	create_insn	(0X1E5A2);
	create_insn	(0X1E5AC);
	create_insn	(0X1E5B6);
	create_insn	(0X1E5BA);
	create_insn	(x=0X1E5C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E5CA);
	op_plain_offset	(x,	1,	0X10005F90);
	op_plain_offset	(x,	129,	0X10005F90);
	create_insn	(0X1E5DA);
	create_insn	(0X1E5DC);
	create_dword	(x=0X1E5E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1E5EC);
	create_dword	(x=0X1E5F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E5F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E5F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1E5FC);
	create_dword	(x=0X1E600);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1E604);
	set_name	(0X1E604,	"compute_buf_crc16");
	create_insn	(x=0X1E608);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1E620);
	create_insn	(0X1E626);
	create_insn	(0X1E62A);
	create_insn	(0X1E65A);
	create_insn	(0X1E65E);
	create_dword	(x=0X1E680);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1E684);
	create_insn	(x=0X1E686);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1E68A);
	create_insn	(0X1E69A);
	create_insn	(0X1E6BC);
	create_insn	(0X1E6C0);
	create_dword	(x=0X1E6DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1E6E0);
	create_insn	(x=0X1E6E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E6EE);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1E6F2);
	op_hex		(x,	1);
	create_insn	(x=0X1E6FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E700);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1E702);
	op_hex		(x,	1);
	create_insn	(x=0X1E706);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1E708);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1E70A);
	op_hex		(x,	1);
	create_insn	(x=0X1E70E);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1E710);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1E712);
	op_hex		(x,	1);
	create_insn	(x=0X1E716);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1E718);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1E71A);
	op_hex		(x,	1);
	create_insn	(x=0X1E71E);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1E720);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1E722);
	op_hex		(x,	1);
	create_insn	(x=0X1E726);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1E728);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1E72A);
	op_hex		(x,	1);
	create_insn	(x=0X1E72E);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1E762);
	op_hex		(x,	1);
	create_insn	(x=0X1E76C);
	op_hex		(x,	1);
	create_insn	(x=0X1E784);
	op_hex		(x,	1);
	create_insn	(0X1E78A);
	create_insn	(x=0X1E78E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E790);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E796);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E79A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E79E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E7A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X1E7A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E7B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1E7BE);
	create_insn	(x=0X1E7C0);
	op_hex		(x,	1);
	create_insn	(x=0X1E7C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E7CE);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1E7D2);
	op_hex		(x,	1);
	create_insn	(0X1E7DA);
	create_insn	(x=0X1E7DC);
	op_hex		(x,	1);
	create_insn	(0X1E7EC);
	create_insn	(x=0X1E7EE);
	op_hex		(x,	1);
	create_insn	(x=0X1E7FA);
	op_hex		(x,	1);
	create_insn	(0X1E802);
	create_insn	(x=0X1E804);
	op_hex		(x,	1);
	create_insn	(x=0X1E810);
	op_hex		(x,	1);
	create_insn	(0X1E818);
	create_insn	(x=0X1E81A);
	op_hex		(x,	1);
	create_insn	(x=0X1E826);
	op_hex		(x,	1);
	create_insn	(0X1E82E);
	create_insn	(0X1E846);
	create_insn	(0X1E856);
	create_insn	(0X1E85A);
	create_insn	(0X1E866);
	create_insn	(x=0X1E86E);
	op_hex		(x,	1);
	create_insn	(x=0X1E874);
	op_hex		(x,	1);
	create_insn	(0X1E880);
	create_insn	(0X1E884);
	create_insn	(x=0X1E888);
	op_hex		(x,	1);
	create_insn	(x=0X1E88E);
	op_hex		(x,	1);
	make_array	(0X1E89A,	0X2);
	create_dword	(x=0X1E89C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E8A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E8A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1E8A8);
	create_insn	(0X1E8AC);
	create_insn	(x=0X1E8BC);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1E8C8);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1E8CC);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1E8D8);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1E8DE);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1E8EA);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1E8EE);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1E8FA);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(0X1E900);
	create_insn	(x=0X1E906);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1E90C);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1E914);
	op_hex		(x,	1);
	create_insn	(x=0X1E91A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1E934);
	create_insn	(0X1E938);
	create_insn	(0X1E940);
	create_insn	(x=0X1E94C);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1E958);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(0X1E962);
	create_insn	(x=0X1E966);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1E96E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E978);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1E980);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E98A);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1E992);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E99C);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_dword	(x=0X1E9A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1E9A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1E9AC);
	create_dword	(x=0X1E9B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1E9B4);
	create_insn	(x=0X1E9B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_strlit	(0X1E9C0,	0X1E9ED);
	set_name	(0X1E9C0,	"aWrongParameter");
	create_byte	(0X1E9ED);
	make_array	(0X1E9ED,	0X3);
	create_insn	(0X1E9F0);
	create_insn	(x=0X1E9F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1E9FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1EA1A);
	create_insn	(x=0X1EA1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EA26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1EA3E);
	create_insn	(x=0X1EA42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EA4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EA52);
	op_hex		(x,	1);
	create_insn	(x=0X1EA5A);
	op_hex		(x,	1);
	create_insn	(0X1EA62);
	create_insn	(x=0X1EA66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EA70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EA7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EA86);
	op_hex		(x,	1);
	create_insn	(0X1EA8E);
	create_insn	(x=0X1EA90);
	op_hex		(x,	1);
	create_insn	(0X1EA96);
	create_insn	(x=0X1EA9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EAA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EAB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EADA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1EAE4,	"switch 8 cases ",	0);
	set_cmt	(0X1EAE8,	"switch jump",	0);
	set_cmt	(0X1EAEC,	"jump table for switch statement",	0);
	create_byte	(0X1EAEC);
	set_name	(0X1EAEC,	"jpt_14AE8");
	create_byte	(0X1EAED);
	create_byte	(0X1EAEE);
	create_byte	(0X1EAEF);
	create_byte	(0X1EAF0);
	create_byte	(0X1EAF1);
	create_byte	(0X1EAF2);
	create_byte	(0X1EAF3);
	set_cmt	(0X1EAF4,	"switch 8 cases ",	0);
	create_insn	(0X1EAF4);
	set_cmt	(0X1EAF8,	"switch jump",	0);
	set_cmt	(0X1EAFC,	"jump table for switch statement",	0);
	create_byte	(0X1EAFC);
	set_name	(0X1EAFC,	"jpt_14AF8");
	create_byte	(0X1EAFD);
	create_byte	(0X1EAFE);
	create_byte	(0X1EAFF);
	create_byte	(0X1EB00);
	create_byte	(0X1EB01);
	create_byte	(0X1EB02);
	create_byte	(0X1EB03);
	set_cmt	(0X1EB04,	"jumptable 0001EAF8 case 0",	1);
	create_insn	(0X1EB04);
	create_insn	(x=0X1EB06);
	op_hex		(x,	1);
	set_cmt	(0X1EB0C,	"jumptable 0001EAF8 case 1",	1);
	create_insn	(0X1EB0C);
	create_insn	(x=0X1EB0E);
	op_hex		(x,	1);
	set_cmt	(0X1EB14,	"jumptable 0001EAE8 default case",	1);
	set_name	(0X1EB14,	"def_14AF8");
	set_cmt	(0X1EB16,	"jumptable 0001EAF8 case 2",	1);
	create_insn	(0X1EB16);
	create_insn	(x=0X1EB18);
	op_hex		(x,	1);
	set_cmt	(0X1EB1E,	"jumptable 0001EAF8 case 3",	1);
	create_insn	(0X1EB1E);
	create_insn	(x=0X1EB20);
	op_hex		(x,	1);
	set_cmt	(0X1EB26,	"jumptable 0001EAF8 case 4",	1);
	create_insn	(0X1EB26);
	create_insn	(x=0X1EB28);
	op_hex		(x,	1);
	set_cmt	(0X1EB2E,	"jumptable 0001EAF8 case 5",	1);
	create_insn	(0X1EB2E);
	create_insn	(x=0X1EB30);
	op_hex		(x,	1);
	set_cmt	(0X1EB36,	"jumptable 0001EAF8 case 6",	1);
	create_insn	(0X1EB36);
	create_insn	(x=0X1EB38);
	op_hex		(x,	1);
	set_cmt	(0X1EB3E,	"jumptable 0001EAF8 case 7",	1);
	create_insn	(0X1EB3E);
	create_insn	(x=0X1EB40);
	op_hex		(x,	1);
	set_cmt	(0X1EB46,	"jumptable 0001EAE8 case 0",	1);
	create_insn	(0X1EB46);
	create_insn	(x=0X1EB48);
	op_hex		(x,	1);
	set_cmt	(0X1EB4E,	"jumptable 0001EAE8 case 1",	1);
	create_insn	(0X1EB4E);
	create_insn	(x=0X1EB50);
	op_hex		(x,	1);
	set_cmt	(0X1EB56,	"jumptable 0001EAE8 case 2",	1);
	create_insn	(0X1EB56);
	create_insn	(x=0X1EB58);
	op_hex		(x,	1);
	set_cmt	(0X1EB5E,	"jumptable 0001EAE8 case 3",	1);
	create_insn	(0X1EB5E);
	create_insn	(x=0X1EB60);
	op_hex		(x,	1);
	set_cmt	(0X1EB66,	"jumptable 0001EAE8 case 4",	1);
	create_insn	(0X1EB66);
	create_insn	(x=0X1EB68);
	op_hex		(x,	1);
	set_cmt	(0X1EB6E,	"jumptable 0001EAE8 case 5",	1);
	create_insn	(0X1EB6E);
	create_insn	(x=0X1EB70);
	op_hex		(x,	1);
	set_cmt	(0X1EB76,	"jumptable 0001EAE8 case 6",	1);
	create_insn	(0X1EB76);
	create_insn	(x=0X1EB78);
	op_hex		(x,	1);
	set_cmt	(0X1EB7E,	"jumptable 0001EAE8 case 7",	1);
	create_insn	(0X1EB7E);
	create_insn	(x=0X1EB80);
	op_hex		(x,	1);
	create_insn	(0X1EB86);
	create_insn	(x=0X1EB8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EB96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EBA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EBCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1EBD4,	"switch 8 cases ",	0);
	set_cmt	(0X1EBD8,	"switch jump",	0);
	set_cmt	(0X1EBDC,	"jump table for switch statement",	0);
	create_byte	(0X1EBDC);
	set_name	(0X1EBDC,	"jpt_14BD8");
	create_byte	(0X1EBDD);
	create_byte	(0X1EBDE);
	create_byte	(0X1EBDF);
	create_byte	(0X1EBE0);
	create_byte	(0X1EBE1);
	create_byte	(0X1EBE2);
	create_byte	(0X1EBE3);
	set_cmt	(0X1EBE4,	"switch 8 cases ",	0);
	create_insn	(0X1EBE4);
	set_cmt	(0X1EBE8,	"switch jump",	0);
	set_cmt	(0X1EBEC,	"jump table for switch statement",	0);
	create_byte	(0X1EBEC);
	set_name	(0X1EBEC,	"jpt_14BE8");
	create_byte	(0X1EBED);
	create_byte	(0X1EBEE);
	create_byte	(0X1EBEF);
	create_byte	(0X1EBF0);
	create_byte	(0X1EBF1);
	create_byte	(0X1EBF2);
	create_byte	(0X1EBF3);
	set_cmt	(0X1EBF4,	"jumptable 0001EBE8 case 0",	1);
	create_insn	(0X1EBF4);
	create_insn	(x=0X1EBF6);
	op_hex		(x,	1);
	set_cmt	(0X1EBFC,	"jumptable 0001EBE8 case 1",	1);
	create_insn	(0X1EBFC);
	create_insn	(x=0X1EBFE);
	op_hex		(x,	1);
	set_cmt	(0X1EC04,	"jumptable 0001EBD8 default case",	1);
	set_name	(0X1EC04,	"def_14BE8");
	set_cmt	(0X1EC06,	"jumptable 0001EBE8 case 2",	1);
	create_insn	(0X1EC06);
	create_insn	(x=0X1EC08);
	op_hex		(x,	1);
	set_cmt	(0X1EC0E,	"jumptable 0001EBE8 case 3",	1);
	create_insn	(0X1EC0E);
	create_insn	(x=0X1EC10);
	op_hex		(x,	1);
	set_cmt	(0X1EC16,	"jumptable 0001EBE8 case 4",	1);
	create_insn	(0X1EC16);
	create_insn	(x=0X1EC18);
	op_hex		(x,	1);
	set_cmt	(0X1EC1E,	"jumptable 0001EBE8 case 5",	1);
	create_insn	(0X1EC1E);
	create_insn	(x=0X1EC20);
	op_hex		(x,	1);
	set_cmt	(0X1EC26,	"jumptable 0001EBE8 case 6",	1);
	create_insn	(0X1EC26);
	create_insn	(x=0X1EC28);
	op_hex		(x,	1);
	set_cmt	(0X1EC2E,	"jumptable 0001EBE8 case 7",	1);
	create_insn	(0X1EC2E);
	create_insn	(x=0X1EC30);
	op_hex		(x,	1);
	set_cmt	(0X1EC36,	"jumptable 0001EBD8 case 0",	1);
	create_insn	(0X1EC36);
	create_insn	(x=0X1EC38);
	op_hex		(x,	1);
	set_cmt	(0X1EC3E,	"jumptable 0001EBD8 case 1",	1);
	create_insn	(0X1EC3E);
	create_insn	(x=0X1EC40);
	op_hex		(x,	1);
	set_cmt	(0X1EC46,	"jumptable 0001EBD8 case 2",	1);
	create_insn	(0X1EC46);
	create_insn	(x=0X1EC48);
	op_hex		(x,	1);
	set_cmt	(0X1EC4E,	"jumptable 0001EBD8 case 3",	1);
	create_insn	(0X1EC4E);
	create_insn	(x=0X1EC50);
	op_hex		(x,	1);
	set_cmt	(0X1EC56,	"jumptable 0001EBD8 case 4",	1);
	create_insn	(0X1EC56);
	create_insn	(x=0X1EC58);
	op_hex		(x,	1);
	set_cmt	(0X1EC5E,	"jumptable 0001EBD8 case 5",	1);
	create_insn	(0X1EC5E);
	create_insn	(x=0X1EC60);
	op_hex		(x,	1);
	set_cmt	(0X1EC66,	"jumptable 0001EBD8 case 6",	1);
	create_insn	(0X1EC66);
	create_insn	(x=0X1EC68);
	op_hex		(x,	1);
	set_cmt	(0X1EC6E,	"jumptable 0001EBD8 case 7",	1);
	create_insn	(0X1EC6E);
	create_insn	(x=0X1EC70);
	op_hex		(x,	1);
	create_insn	(0X1EC76);
	create_insn	(x=0X1EC7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EC8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ECB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ECBC);
	op_hex		(x,	1);
	create_insn	(x=0X1ECC0);
	op_hex		(x,	1);
	set_cmt	(0X1ECC4,	"switch 8 cases ",	0);
	set_cmt	(0X1ECC8,	"switch jump",	0);
	set_cmt	(0X1ECCC,	"jump table for switch statement",	0);
	create_byte	(0X1ECCC);
	set_name	(0X1ECCC,	"jpt_14CC8");
	create_byte	(0X1ECCD);
	create_byte	(0X1ECCE);
	create_byte	(0X1ECCF);
	create_byte	(0X1ECD0);
	create_byte	(0X1ECD1);
	create_byte	(0X1ECD2);
	create_byte	(0X1ECD3);
	set_cmt	(0X1ECD4,	"jumptable 0001ECC8 case 0",	1);
	create_insn	(0X1ECD4);
	create_insn	(x=0X1ECDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1ECE6,	"jumptable 0001ECC8 default case",	1);
	set_name	(0X1ECE6,	"def_14CC8");
	set_cmt	(0X1ECEA,	"jumptable 0001ECC8 case 1",	1);
	create_insn	(0X1ECEA);
	create_insn	(x=0X1ECF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1ECFE,	"jumptable 0001ECC8 case 2",	1);
	create_insn	(0X1ECFE);
	create_insn	(x=0X1ED06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1ED12,	"jumptable 0001ECC8 case 3",	1);
	create_insn	(0X1ED12);
	create_insn	(x=0X1ED1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ED20);
	op_hex		(x,	1);
	set_cmt	(0X1ED2A,	"jumptable 0001ECC8 case 4",	1);
	create_insn	(0X1ED2A);
	create_insn	(x=0X1ED32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1ED3E,	"jumptable 0001ECC8 case 5",	1);
	create_insn	(0X1ED3E);
	create_insn	(x=0X1ED48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1ED56,	"jumptable 0001ECC8 case 6",	1);
	create_insn	(0X1ED56);
	create_insn	(x=0X1ED5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ED64);
	op_hex		(x,	1);
	set_cmt	(0X1ED6E,	"jumptable 0001ECC8 case 7",	1);
	create_insn	(0X1ED6E);
	create_insn	(x=0X1ED7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1ED88);
	create_insn	(x=0X1ED8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1ED98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EDC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1EDC6,	"switch 8 cases ",	0);
	set_cmt	(0X1EDCA,	"switch jump",	0);
	set_cmt	(0X1EDCE,	"jump table for switch statement",	0);
	create_byte	(0X1EDCE);
	set_name	(0X1EDCE,	"jpt_14DCA");
	create_byte	(0X1EDCF);
	create_byte	(0X1EDD0);
	create_byte	(0X1EDD1);
	create_byte	(0X1EDD2);
	create_byte	(0X1EDD3);
	create_byte	(0X1EDD4);
	create_byte	(0X1EDD5);
	set_cmt	(0X1EDD6,	"jumptable 0001EDCA case 0",	1);
	create_insn	(0X1EDD6);
	create_dword	(x=0X1EDDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X1EDE0,	0X1EDFA);
	set_name	(0X1EDE0,	"aLpc17xx_libLpc");
	make_array	(0X1EDFA,	0X2);
	set_cmt	(0X1EDFC,	"jumptable 0001EDCA case 1",	1);
	create_insn	(0X1EDFC);
	create_insn	(x=0X1EE00);
	op_hex		(x,	1);
	set_cmt	(0X1EE06,	"jumptable 0001EDCA case 2",	1);
	create_insn	(0X1EE06);
	set_cmt	(0X1EE0C,	"jumptable 0001EDCA case 3",	1);
	create_insn	(0X1EE0C);
	create_insn	(x=0X1EE10);
	op_hex		(x,	1);
	set_cmt	(0X1EE16,	"jumptable 0001EDCA case 4",	1);
	create_insn	(0X1EE16);
	create_insn	(x=0X1EE1A);
	op_hex		(x,	1);
	set_cmt	(0X1EE20,	"jumptable 0001EDCA case 5",	1);
	create_insn	(0X1EE20);
	set_cmt	(0X1EE28,	"jumptable 0001EDCA case 6",	1);
	create_insn	(0X1EE28);
	create_insn	(x=0X1EE2C);
	op_hex		(x,	1);
	set_cmt	(0X1EE32,	"jumptable 0001EDCA case 7",	1);
	create_insn	(0X1EE32);
	set_cmt	(0X1EE3A,	"jumptable 0001EDCA default case",	1);
	create_insn	(0X1EE3A);
	set_name	(0X1EE3A,	"def_14DCA");
	create_insn	(0X1EE3E);
	create_insn	(x=0X1EE42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EE4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EE58);
	op_hex		(x,	1);
	create_insn	(x=0X1EE62);
	op_hex		(x,	1);
	create_insn	(x=0X1EE74);
	op_hex		(x,	1);
	create_insn	(x=0X1EE7E);
	op_hex		(x,	1);
	create_insn	(x=0X1EE88);
	op_hex		(x,	1);
	create_insn	(x=0X1EE92);
	op_hex		(x,	1);
	create_insn	(0X1EEA2);
	create_insn	(x=0X1EEA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EEB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EEBE);
	op_hex		(x,	1);
	create_insn	(x=0X1EEC8);
	op_hex		(x,	1);
	create_insn	(x=0X1EEDA);
	op_hex		(x,	1);
	create_insn	(x=0X1EEE4);
	op_hex		(x,	1);
	create_insn	(x=0X1EEEE);
	op_hex		(x,	1);
	create_insn	(x=0X1EEF6);
	op_hex		(x,	1);
	create_insn	(0X1EF06);
	create_insn	(x=0X1EF0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EF1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EF26);
	op_hex		(x,	1);
	create_insn	(x=0X1EF2A);
	op_hex		(x,	1);
	set_cmt	(0X1EF2E,	"switch 8 cases ",	0);
	set_cmt	(0X1EF32,	"switch jump",	0);
	set_cmt	(0X1EF36,	"jump table for switch statement",	0);
	create_byte	(0X1EF36);
	set_name	(0X1EF36,	"jpt_14F32");
	create_byte	(0X1EF37);
	create_byte	(0X1EF38);
	create_byte	(0X1EF39);
	create_byte	(0X1EF3A);
	create_byte	(0X1EF3B);
	create_byte	(0X1EF3C);
	create_byte	(0X1EF3D);
	set_cmt	(0X1EF3E,	"jumptable 0001EF32 case 0",	1);
	create_insn	(0X1EF3E);
	create_insn	(x=0X1EF46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1EF52,	"jumptable 0001EF32 default case",	1);
	set_name	(0X1EF52,	"def_14F32");
	set_cmt	(0X1EF54,	"jumptable 0001EF32 case 1",	1);
	create_insn	(0X1EF54);
	create_insn	(x=0X1EF5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1EF6A,	"jumptable 0001EF32 case 2",	1);
	create_insn	(0X1EF6A);
	create_insn	(x=0X1EF72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1EF80,	"jumptable 0001EF32 case 3",	1);
	create_insn	(0X1EF80);
	create_insn	(x=0X1EF88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EF90);
	op_hex		(x,	1);
	set_cmt	(0X1EF9A,	"jumptable 0001EF32 case 4",	1);
	create_insn	(0X1EF9A);
	create_insn	(x=0X1EFA2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1EFB0,	"jumptable 0001EF32 case 5",	1);
	create_insn	(0X1EFB0);
	create_insn	(x=0X1EFBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1EFCC,	"jumptable 0001EF32 case 6",	1);
	create_insn	(0X1EFCC);
	create_insn	(x=0X1EFD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1EFDC);
	op_hex		(x,	1);
	set_cmt	(0X1EFE6,	"jumptable 0001EF32 case 7",	1);
	create_insn	(0X1EFE6);
	create_insn	(x=0X1EFF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X1F004,	"switch 8 cases ",	0);
	create_insn	(0X1F004);
	set_cmt	(0X1F008,	"switch jump",	0);
	set_cmt	(0X1F00C,	"jump table for switch statement",	0);
	create_byte	(0X1F00C);
	set_name	(0X1F00C,	"jpt_15008");
	create_byte	(0X1F00D);
	create_byte	(0X1F00E);
	create_byte	(0X1F00F);
	create_byte	(0X1F010);
	create_byte	(0X1F011);
	create_byte	(0X1F012);
	create_byte	(0X1F013);
	set_cmt	(0X1F014,	"jumptable 0001F008 case 0",	1);
	create_insn	(0X1F014);
	set_cmt	(0X1F01A,	"jumptable 0001F008 case 1",	1);
	create_insn	(0X1F01A);
	create_insn	(x=0X1F01E);
	op_hex		(x,	1);
	set_cmt	(0X1F024,	"jumptable 0001F008 case 2",	1);
	create_insn	(0X1F024);
	set_cmt	(0X1F02A,	"jumptable 0001F008 case 3",	1);
	create_insn	(0X1F02A);
	create_insn	(x=0X1F02E);
	op_hex		(x,	1);
	set_cmt	(0X1F034,	"jumptable 0001F008 case 4",	1);
	create_insn	(0X1F034);
	create_insn	(x=0X1F038);
	op_hex		(x,	1);
	set_cmt	(0X1F03E,	"jumptable 0001F008 case 5",	1);
	create_insn	(0X1F03E);
	set_cmt	(0X1F048,	"jumptable 0001F008 case 6",	1);
	create_insn	(0X1F048);
	create_insn	(x=0X1F04C);
	op_hex		(x,	1);
	set_cmt	(0X1F052,	"jumptable 0001F008 case 7",	1);
	create_insn	(0X1F052);
	set_cmt	(0X1F05C,	"jumptable 0001F008 default case",	1);
	create_insn	(0X1F05C);
	set_name	(0X1F05C,	"def_15008");
	create_insn	(0X1F060);
	create_insn	(x=0X1F064);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F070);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F07A);
	op_hex		(x,	1);
	create_insn	(x=0X1F084);
	op_hex		(x,	1);
	create_insn	(x=0X1F098);
	op_hex		(x,	1);
	create_insn	(x=0X1F0A2);
	op_hex		(x,	1);
	create_insn	(x=0X1F0AC);
	op_hex		(x,	1);
	create_insn	(x=0X1F0B6);
	op_hex		(x,	1);
	create_insn	(0X1F0C6);
	create_insn	(x=0X1F0CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F0D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F0E2);
	op_hex		(x,	1);
	create_insn	(x=0X1F0EC);
	op_hex		(x,	1);
	create_insn	(x=0X1F100);
	op_hex		(x,	1);
	create_insn	(x=0X1F10A);
	op_hex		(x,	1);
	create_insn	(x=0X1F114);
	op_hex		(x,	1);
	create_insn	(x=0X1F11C);
	op_hex		(x,	1);
	create_insn	(0X1F12C);
	create_insn	(x=0X1F130);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F13C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F150);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1F162);
	create_insn	(x=0X1F166);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F172);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F186);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1F196);
	create_insn	(x=0X1F19A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F1A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F1B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F1C2);
	op_hex		(x,	1);
	create_insn	(0X1F1CA);
	create_insn	(x=0X1F1CC);
	op_hex		(x,	1);
	create_insn	(0X1F1D2);
	create_insn	(x=0X1F1D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F1E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F1F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F20C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X1F226,	0X2);
	create_dword	(x=0X1F228);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1F22C);
	create_insn	(x=0X1F230);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F23E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F24E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1F25E);
	create_insn	(x=0X1F262);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F26E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F27E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X1F28E,	0X2);
	create_dword	(x=0X1F290);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1F294);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F29A);
	op_plain_offset	(x,	1,	0X10006258);
	op_plain_offset	(x,	129,	0X10006258);
	create_insn	(x=0X1F29E);
	op_plain_offset	(x,	1,	0X10006258);
	op_plain_offset	(x,	129,	0X10006258);
	create_insn	(x=0X1F2A4);
	op_plain_offset	(x,	1,	0X10006258);
	op_plain_offset	(x,	129,	0X10006258);
	create_insn	(x=0X1F2A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F2AE);
	op_plain_offset	(x,	1,	0X100060B8);
	op_plain_offset	(x,	129,	0X100060B8);
	create_insn	(x=0X1F2BE);
	op_plain_offset	(x,	1,	0X100060C8);
	op_plain_offset	(x,	129,	0X100060C8);
	create_insn	(0X1F2CA);
	create_insn	(x=0X1F2CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F2CE);
	op_plain_offset	(x,	1,	0X4000C000);
	op_plain_offset	(x,	129,	0X4000C000);
	create_insn	(x=0X1F2D0);
	op_hex		(x,	1);
	create_insn	(x=0X1F2EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F2EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F2F0);
	op_plain_offset	(x,	1,	0X4000C000);
	op_plain_offset	(x,	129,	0X4000C000);
	create_insn	(x=0X1F316);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1F320);
	create_insn	(x=0X1F322);
	op_plain_offset	(x,	1,	0X100060B8);
	op_plain_offset	(x,	129,	0X100060B8);
	create_insn	(x=0X1F324);
	op_hex		(x,	1);
	create_insn	(x=0X1F330);
	op_plain_offset	(x,	1,	0X100060B8);
	op_plain_offset	(x,	129,	0X100060B8);
	create_insn	(x=0X1F33A);
	op_plain_offset	(x,	1,	0X100060B8);
	op_plain_offset	(x,	129,	0X100060B8);
	create_insn	(0X1F344);
	create_insn	(x=0X1F34E);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1F354);
	op_hex		(x,	1);
	create_insn	(x=0X1F358);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(0X1F38A);
	create_insn	(0X1F394);
	create_insn	(0X1F3BA);
	create_insn	(x=0X1F3D4);
	op_hex		(x,	1);
	create_insn	(x=0X1F3EE);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1F3F2);
	op_hex		(x,	1);
	create_insn	(x=0X1F3FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F402);
	op_hex		(x,	1);
	create_insn	(x=0X1F406);
	op_hex		(x,	1);
	create_insn	(x=0X1F40C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F410);
	op_plain_offset	(x,	1,	0X4000C000);
	op_plain_offset	(x,	129,	0X4000C000);
	create_insn	(x=0X1F416);
	op_plain_offset	(x,	1,	0X4000C000);
	op_plain_offset	(x,	129,	0X4000C000);
	create_insn	(x=0X1F41C);
	op_plain_offset	(x,	1,	0X4000C000);
	op_plain_offset	(x,	129,	0X4000C000);
	create_insn	(x=0X1F422);
	op_plain_offset	(x,	1,	0X4000C000);
	op_plain_offset	(x,	129,	0X4000C000);
	create_insn	(x=0X1F426);
	op_plain_offset	(x,	1,	0X4000C000);
	op_plain_offset	(x,	129,	0X4000C000);
	create_insn	(x=0X1F42A);
	op_plain_offset	(x,	1,	0X4000C000);
	op_plain_offset	(x,	129,	0X4000C000);
	create_insn	(x=0X1F42E);
	op_plain_offset	(x,	1,	0X4000C000);
	op_plain_offset	(x,	129,	0X4000C000);
	create_insn	(x=0X1F430);
	op_plain_offset	(x,	1,	0X4000C000);
	op_plain_offset	(x,	129,	0X4000C000);
	create_insn	(x=0X1F432);
	op_hex		(x,	1);
	create_insn	(x=0X1F436);
	op_plain_offset	(x,	1,	0X4000C000);
	op_plain_offset	(x,	129,	0X4000C000);
	create_insn	(x=0X1F438);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F45A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F45E);
	op_plain_offset	(x,	1,	0X4000C000);
	op_plain_offset	(x,	129,	0X4000C000);
	create_insn	(x=0X1F466);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F468);
	op_plain_offset	(x,	1,	0X4000C000);
	op_plain_offset	(x,	129,	0X4000C000);
	create_insn	(0X1F472);
	create_insn	(x=0X1F474);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F478);
	op_plain_offset	(x,	1,	0X100060B8);
	op_plain_offset	(x,	129,	0X100060B8);
	create_insn	(x=0X1F47C);
	op_plain_offset	(x,	1,	0X100060B8);
	op_plain_offset	(x,	129,	0X100060B8);
	create_insn	(x=0X1F4A0);
	op_plain_offset	(x,	1,	0X4000C000);
	op_plain_offset	(x,	129,	0X4000C000);
	create_insn	(x=0X1F4A6);
	op_plain_offset	(x,	1,	0X100060B8);
	op_plain_offset	(x,	129,	0X100060B8);
	create_insn	(x=0X1F4B0);
	op_plain_offset	(x,	1,	0X100060B8);
	op_plain_offset	(x,	129,	0X100060B8);
	create_insn	(0X1F4C4);
	create_insn	(x=0X1F4C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F4CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F4D8);
	op_plain_offset	(x,	1,	0X100060B8);
	op_plain_offset	(x,	129,	0X100060B8);
	create_insn	(x=0X1F4DC);
	op_plain_offset	(x,	1,	0X100060B8);
	op_plain_offset	(x,	129,	0X100060B8);
	create_insn	(x=0X1F4E8);
	op_plain_offset	(x,	1,	0X100060B8);
	op_plain_offset	(x,	129,	0X100060B8);
	create_insn	(0X1F50A);
	create_insn	(x=0X1F522);
	op_plain_offset	(x,	1,	0X4000C000);
	op_plain_offset	(x,	129,	0X4000C000);
	create_insn	(x=0X1F52C);
	op_plain_offset	(x,	1,	0X100060B8);
	op_plain_offset	(x,	129,	0X100060B8);
	create_insn	(x=0X1F536);
	op_plain_offset	(x,	1,	0X100060B8);
	op_plain_offset	(x,	129,	0X100060B8);
	create_insn	(x=0X1F54E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F556);
	op_plain_offset	(x,	1,	0X10006268);
	op_plain_offset	(x,	129,	0X10006268);
	create_insn	(x=0X1F568);
	op_plain_offset	(x,	1,	0X10006278);
	op_plain_offset	(x,	129,	0X10006278);
	create_insn	(x=0X1F56C);
	op_plain_offset	(x,	1,	0X10006278);
	op_plain_offset	(x,	129,	0X10006278);
	create_insn	(x=0X1F572);
	op_plain_offset	(x,	1,	0X10006278);
	op_plain_offset	(x,	129,	0X10006278);
	create_insn	(x=0X1F57A);
	op_plain_offset	(x,	1,	0X100064C8);
	op_plain_offset	(x,	129,	0X100064C8);
	create_insn	(0X1F586);
	create_insn	(x=0X1F588);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F58A);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X1F58C);
	op_hex		(x,	1);
	create_insn	(x=0X1F5A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F5AE);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X1F5D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1F5E0);
	create_insn	(x=0X1F5E2);
	op_plain_offset	(x,	1,	0X10006268);
	op_plain_offset	(x,	129,	0X10006268);
	create_insn	(x=0X1F5E4);
	op_hex		(x,	1);
	create_insn	(x=0X1F5F0);
	op_plain_offset	(x,	1,	0X10006268);
	op_plain_offset	(x,	129,	0X10006268);
	create_insn	(x=0X1F5FA);
	op_plain_offset	(x,	1,	0X10006268);
	op_plain_offset	(x,	129,	0X10006268);
	create_insn	(0X1F604);
	create_insn	(x=0X1F60E);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1F614);
	op_hex		(x,	1);
	create_insn	(x=0X1F618);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(0X1F64A);
	create_insn	(0X1F654);
	make_array	(0X1F67A,	0X2);
	create_dword	(x=0X1F67C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1F680);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1F684);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1F688);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1F68C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1F690);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1F694);
	create_insn	(x=0X1F6AE);
	op_hex		(x,	1);
	create_insn	(x=0X1F6C8);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1F6CC);
	op_hex		(x,	1);
	create_insn	(x=0X1F6D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F6DA);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1F6DC);
	op_hex		(x,	1);
	create_insn	(x=0X1F6E0);
	op_hex		(x,	1);
	create_insn	(x=0X1F6E4);
	op_plain_offset	(x,	1,	0X4002C000);
	op_plain_offset	(x,	129,	0X4002C000);
	create_insn	(x=0X1F6E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F6EA);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X1F6F0);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X1F6F6);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X1F6FA);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X1F6FE);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X1F702);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X1F706);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X1F708);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X1F70A);
	op_hex		(x,	1);
	create_insn	(x=0X1F70E);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X1F710);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F72E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F732);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X1F73A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F73C);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(0X1F746);
	create_insn	(x=0X1F748);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F750);
	op_plain_offset	(x,	1,	0X10006268);
	op_plain_offset	(x,	129,	0X10006268);
	create_insn	(x=0X1F754);
	op_plain_offset	(x,	1,	0X10006268);
	op_plain_offset	(x,	129,	0X10006268);
	create_insn	(x=0X1F776);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F778);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X1F77E);
	op_plain_offset	(x,	1,	0X10006268);
	op_plain_offset	(x,	129,	0X10006268);
	create_insn	(x=0X1F788);
	op_plain_offset	(x,	1,	0X10006268);
	op_plain_offset	(x,	129,	0X10006268);
	create_insn	(0X1F79C);
	create_insn	(x=0X1F7A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F7A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F7B2);
	op_plain_offset	(x,	1,	0X10006268);
	op_plain_offset	(x,	129,	0X10006268);
	create_insn	(x=0X1F7BA);
	op_plain_offset	(x,	1,	0X10006268);
	op_plain_offset	(x,	129,	0X10006268);
	create_insn	(x=0X1F7C6);
	op_plain_offset	(x,	1,	0X10006268);
	op_plain_offset	(x,	129,	0X10006268);
	create_insn	(0X1F7E8);
	create_insn	(x=0X1F800);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X1F80A);
	op_plain_offset	(x,	1,	0X10006268);
	op_plain_offset	(x,	129,	0X10006268);
	create_insn	(x=0X1F814);
	op_plain_offset	(x,	1,	0X10006268);
	op_plain_offset	(x,	129,	0X10006268);
	create_insn	(x=0X1F82A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F830);
	op_plain_offset	(x,	1,	0X100066D8);
	op_plain_offset	(x,	129,	0X100066D8);
	create_insn	(x=0X1F834);
	op_plain_offset	(x,	1,	0X100066D8);
	op_plain_offset	(x,	129,	0X100066D8);
	create_insn	(x=0X1F83A);
	op_plain_offset	(x,	1,	0X100066D8);
	op_plain_offset	(x,	129,	0X100066D8);
	create_insn	(x=0X1F840);
	op_plain_offset	(x,	1,	0X100066E8);
	op_plain_offset	(x,	129,	0X100066E8);
	create_insn	(x=0X1F846);
	op_plain_offset	(x,	1,	0X100066E8);
	op_plain_offset	(x,	129,	0X100066E8);
	create_insn	(x=0X1F84C);
	op_plain_offset	(x,	1,	0X100066E8);
	op_plain_offset	(x,	129,	0X100066E8);
	create_insn	(0X1F850);
	create_insn	(x=0X1F854);
	op_plain_offset	(x,	1,	0X40098000);
	op_plain_offset	(x,	129,	0X40098000);
	create_insn	(x=0X1F856);
	op_hex		(x,	1);
	create_insn	(x=0X1F870);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F874);
	op_plain_offset	(x,	1,	0X40098000);
	op_plain_offset	(x,	129,	0X40098000);
	create_insn	(x=0X1F88C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1F896);
	create_insn	(x=0X1F898);
	op_plain_offset	(x,	1,	0X100066D8);
	op_plain_offset	(x,	129,	0X100066D8);
	create_insn	(x=0X1F89A);
	op_hex		(x,	1);
	create_insn	(x=0X1F8A6);
	op_plain_offset	(x,	1,	0X100066D8);
	op_plain_offset	(x,	129,	0X100066D8);
	create_insn	(x=0X1F8B0);
	op_plain_offset	(x,	1,	0X100066D8);
	op_plain_offset	(x,	129,	0X100066D8);
	create_insn	(0X1F8BA);
	create_insn	(0X1F8F2);
	create_insn	(0X1F8FC);
	create_insn	(0X1F922);
	create_insn	(x=0X1F93C);
	op_hex		(x,	1);
	create_insn	(x=0X1F956);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1F95A);
	op_hex		(x,	1);
	create_insn	(x=0X1F966);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F96A);
	op_hex		(x,	1);
	create_insn	(x=0X1F96E);
	op_hex		(x,	1);
	create_insn	(x=0X1F978);
	op_plain_offset	(x,	1,	0X40098000);
	op_plain_offset	(x,	129,	0X40098000);
	create_insn	(x=0X1F97E);
	op_plain_offset	(x,	1,	0X40098000);
	op_plain_offset	(x,	129,	0X40098000);
	create_insn	(x=0X1F984);
	op_plain_offset	(x,	1,	0X40098000);
	op_plain_offset	(x,	129,	0X40098000);
	create_insn	(x=0X1F98A);
	op_plain_offset	(x,	1,	0X40098000);
	op_plain_offset	(x,	129,	0X40098000);
	create_insn	(x=0X1F98E);
	op_plain_offset	(x,	1,	0X40098000);
	op_plain_offset	(x,	129,	0X40098000);
	create_insn	(x=0X1F992);
	op_plain_offset	(x,	1,	0X40098000);
	op_plain_offset	(x,	129,	0X40098000);
	create_insn	(x=0X1F996);
	op_plain_offset	(x,	1,	0X40098000);
	op_plain_offset	(x,	129,	0X40098000);
	create_insn	(x=0X1F998);
	op_plain_offset	(x,	1,	0X40098000);
	op_plain_offset	(x,	129,	0X40098000);
	create_insn	(x=0X1F99A);
	op_hex		(x,	1);
	create_insn	(x=0X1F99E);
	op_plain_offset	(x,	1,	0X40098000);
	op_plain_offset	(x,	129,	0X40098000);
	create_insn	(x=0X1F9A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1F9BE);
	create_insn	(x=0X1F9C2);
	op_plain_offset	(x,	1,	0X40098000);
	op_plain_offset	(x,	129,	0X40098000);
	create_insn	(0X1F9CA);
	create_insn	(x=0X1F9CC);
	op_plain_offset	(x,	1,	0X40098000);
	op_plain_offset	(x,	129,	0X40098000);
	create_insn	(0X1F9D6);
	create_insn	(x=0X1F9D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1F9DC);
	op_plain_offset	(x,	1,	0X100066D8);
	op_plain_offset	(x,	129,	0X100066D8);
	create_insn	(x=0X1F9E0);
	op_plain_offset	(x,	1,	0X100066D8);
	op_plain_offset	(x,	129,	0X100066D8);
	create_insn	(x=0X1FA04);
	op_plain_offset	(x,	1,	0X40098000);
	op_plain_offset	(x,	129,	0X40098000);
	create_insn	(x=0X1FA0A);
	op_plain_offset	(x,	1,	0X100066D8);
	op_plain_offset	(x,	129,	0X100066D8);
	create_insn	(x=0X1FA14);
	op_plain_offset	(x,	1,	0X100066D8);
	op_plain_offset	(x,	129,	0X100066D8);
	create_insn	(0X1FA28);
	create_insn	(x=0X1FA2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1FA3E);
	op_plain_offset	(x,	1,	0X100066D8);
	op_plain_offset	(x,	129,	0X100066D8);
	create_insn	(x=0X1FA42);
	op_plain_offset	(x,	1,	0X100066D8);
	op_plain_offset	(x,	129,	0X100066D8);
	create_insn	(x=0X1FA4E);
	op_plain_offset	(x,	1,	0X100066D8);
	op_plain_offset	(x,	129,	0X100066D8);
	create_insn	(0X1FA70);
	create_insn	(x=0X1FA88);
	op_plain_offset	(x,	1,	0X40098000);
	op_plain_offset	(x,	129,	0X40098000);
	create_insn	(x=0X1FA92);
	op_plain_offset	(x,	1,	0X100066D8);
	op_plain_offset	(x,	129,	0X100066D8);
	create_insn	(x=0X1FA9C);
	op_plain_offset	(x,	1,	0X100066D8);
	op_plain_offset	(x,	129,	0X100066D8);
	make_array	(0X1FAB2,	0X2);
	create_dword	(x=0X1FAB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1FAB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1FABC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1FAC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1FAC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1FAC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1FACC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1FAD2);
	op_plain_offset	(x,	1,	0X100069F8);
	op_plain_offset	(x,	129,	0X100069F8);
	create_insn	(x=0X1FAE4);
	op_plain_offset	(x,	1,	0X10006A08);
	op_plain_offset	(x,	129,	0X10006A08);
	create_insn	(0X1FAF0);
	create_insn	(x=0X1FAF4);
	op_plain_offset	(x,	1,	0X4009C000);
	op_plain_offset	(x,	129,	0X4009C000);
	create_insn	(x=0X1FAF6);
	op_hex		(x,	1);
	create_insn	(x=0X1FB10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1FB14);
	op_plain_offset	(x,	1,	0X4009C000);
	op_plain_offset	(x,	129,	0X4009C000);
	create_insn	(x=0X1FB2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1FB36);
	create_insn	(x=0X1FB38);
	op_plain_offset	(x,	1,	0X100069F8);
	op_plain_offset	(x,	129,	0X100069F8);
	create_insn	(x=0X1FB3A);
	op_hex		(x,	1);
	create_insn	(x=0X1FB46);
	op_plain_offset	(x,	1,	0X100069F8);
	op_plain_offset	(x,	129,	0X100069F8);
	create_insn	(x=0X1FB50);
	op_plain_offset	(x,	1,	0X100069F8);
	op_plain_offset	(x,	129,	0X100069F8);
	create_insn	(0X1FB5A);
	create_insn	(x=0X1FB64);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1FB6A);
	op_hex		(x,	1);
	create_insn	(x=0X1FB6E);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(0X1FBA0);
	create_insn	(0X1FBAA);
	create_insn	(0X1FBD0);
	create_insn	(x=0X1FBEA);
	op_hex		(x,	1);
	create_insn	(x=0X1FC04);
	op_plain_offset	(x,	1,	0X400FC000);
	op_plain_offset	(x,	129,	0X400FC000);
	create_insn	(x=0X1FC08);
	op_hex		(x,	1);
	create_insn	(x=0X1FC14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1FC18);
	op_hex		(x,	1);
	create_insn	(x=0X1FC1C);
	op_hex		(x,	1);
	create_insn	(x=0X1FC26);
	op_plain_offset	(x,	1,	0X4009C000);
	op_plain_offset	(x,	129,	0X4009C000);
	create_insn	(x=0X1FC2C);
	op_plain_offset	(x,	1,	0X4009C000);
	op_plain_offset	(x,	129,	0X4009C000);
	create_insn	(x=0X1FC32);
	op_plain_offset	(x,	1,	0X4009C000);
	op_plain_offset	(x,	129,	0X4009C000);
	create_insn	(x=0X1FC38);
	op_plain_offset	(x,	1,	0X4009C000);
	op_plain_offset	(x,	129,	0X4009C000);
	create_insn	(x=0X1FC3C);
	op_plain_offset	(x,	1,	0X4009C000);
	op_plain_offset	(x,	129,	0X4009C000);
	create_insn	(x=0X1FC40);
	op_plain_offset	(x,	1,	0X4009C000);
	op_plain_offset	(x,	129,	0X4009C000);
	create_insn	(x=0X1FC44);
	op_plain_offset	(x,	1,	0X4009C000);
	op_plain_offset	(x,	129,	0X4009C000);
	create_insn	(x=0X1FC46);
	op_plain_offset	(x,	1,	0X4009C000);
	op_plain_offset	(x,	129,	0X4009C000);
	create_insn	(x=0X1FC48);
	op_hex		(x,	1);
	create_insn	(x=0X1FC4C);
	op_plain_offset	(x,	1,	0X4009C000);
	op_plain_offset	(x,	129,	0X4009C000);
	create_insn	(x=0X1FC4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1FC6C);
	create_insn	(x=0X1FC70);
	op_plain_offset	(x,	1,	0X4009C000);
	op_plain_offset	(x,	129,	0X4009C000);
	create_insn	(0X1FC78);
	create_insn	(x=0X1FC7A);
	op_plain_offset	(x,	1,	0X4009C000);
	op_plain_offset	(x,	129,	0X4009C000);
	create_insn	(0X1FC84);
	create_insn	(x=0X1FC86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1FC8E);
	op_plain_offset	(x,	1,	0X100069F8);
	op_plain_offset	(x,	129,	0X100069F8);
	create_insn	(x=0X1FC92);
	op_plain_offset	(x,	1,	0X100069F8);
	op_plain_offset	(x,	129,	0X100069F8);
	create_insn	(x=0X1FCB6);
	op_plain_offset	(x,	1,	0X4009C000);
	op_plain_offset	(x,	129,	0X4009C000);
	create_insn	(x=0X1FCBC);
	op_plain_offset	(x,	1,	0X100069F8);
	op_plain_offset	(x,	129,	0X100069F8);
	create_insn	(x=0X1FCC6);
	op_plain_offset	(x,	1,	0X100069F8);
	op_plain_offset	(x,	129,	0X100069F8);
	create_insn	(0X1FCDA);
	create_insn	(x=0X1FCDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1FCF0);
	op_plain_offset	(x,	1,	0X100069F8);
	op_plain_offset	(x,	129,	0X100069F8);
	create_insn	(x=0X1FCF8);
	op_plain_offset	(x,	1,	0X100069F8);
	op_plain_offset	(x,	129,	0X100069F8);
	create_insn	(x=0X1FD04);
	op_plain_offset	(x,	1,	0X100069F8);
	op_plain_offset	(x,	129,	0X100069F8);
	create_insn	(0X1FD26);
	create_insn	(x=0X1FD3E);
	op_plain_offset	(x,	1,	0X4009C000);
	op_plain_offset	(x,	129,	0X4009C000);
	create_insn	(x=0X1FD48);
	op_plain_offset	(x,	1,	0X100069F8);
	op_plain_offset	(x,	129,	0X100069F8);
	create_insn	(x=0X1FD52);
	op_plain_offset	(x,	1,	0X100069F8);
	op_plain_offset	(x,	129,	0X100069F8);
	create_insn	(0X1FD68);
	create_insn	(x=0X1FD6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1FD78);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1FD7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1FD8A);
	create_insn	(x=0X1FD9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FD9E);
	op_hex		(x,	1);
	create_dword	(x=0X1FDB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1FDB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1FDBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1FDC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1FDC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1FDC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1FDCC);
	create_insn	(0X1FDE6);
	create_insn	(x=0X1FDEA);
	op_plain_offset	(x,	1,	0X40000000);
	op_plain_offset	(x,	129,	0X40000000);
	create_insn	(x=0X1FDEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X1FE06);
	create_insn	(x=0X1FE1E);
	op_plain_offset	(x,	1,	0X40000000);
	op_plain_offset	(x,	129,	0X40000000);
	create_insn	(0X1FE24);
	create_insn	(0X1FE36);
	create_insn	(0X1FE4C);
	create_insn	(x=0X1FE5E);
	op_plain_offset	(x,	1,	0X40000000);
	op_plain_offset	(x,	129,	0X40000000);
	create_insn	(x=0X1FE60);
	op_hex		(x,	1);
	create_insn	(x=0X1FE64);
	op_plain_offset	(x,	1,	0X40000000);
	op_plain_offset	(x,	129,	0X40000000);
	create_insn	(x=0X1FE66);
	op_plain_offset	(x,	1,	0X40000000);
	op_plain_offset	(x,	129,	0X40000000);
	create_insn	(x=0X1FE6A);
	op_plain_offset	(x,	1,	0X40000000);
	op_plain_offset	(x,	129,	0X40000000);
	create_insn	(x=0X1FE72);
	op_hex		(x,	1);
	create_insn	(x=0X1FE7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1FE88);
	op_plain_offset	(x,	1,	0X40000000);
	op_plain_offset	(x,	129,	0X40000000);
	create_insn	(x=0X1FE8C);
	op_plain_offset	(x,	1,	0X40000000);
	op_plain_offset	(x,	129,	0X40000000);
	create_insn	(0X1FE92);
	create_insn	(x=0X1FE9A);
	op_plain_offset	(x,	1,	0X40000000);
	op_plain_offset	(x,	129,	0X40000000);
	create_insn	(x=0X1FE9C);
	op_hex		(x,	1);
	create_insn	(x=0X1FEA6);
	op_hex		(x,	1);
	create_insn	(0X1FEB2);
	create_insn	(0X1FEBE);
	create_insn	(x=0X1FEC4);
	op_hex		(x,	1);
	create_insn	(0X1FECC);
	create_insn	(x=0X1FED2);
	op_plain_offset	(x,	1,	0X40000000);
	op_plain_offset	(x,	129,	0X40000000);
	create_insn	(x=0X1FED8);
	op_hex		(x,	1);
	create_insn	(0X1FEEA);
	create_insn	(x=0X1FEEE);
	op_plain_offset	(x,	1,	0X40000000);
	op_plain_offset	(x,	129,	0X40000000);
	create_insn	(0X1FEF2);
	create_insn	(x=0X1FEF8);
	op_hex		(x,	1);
	create_insn	(x=0X1FEFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X1FF06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X1FF0E,	0X2);
	create_dword	(0X1FF10);
	create_dword	(0X1FF14);
	create_dword	(x=0X1FF18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1FF1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1FF20);
	create_insn	(x=0X1FF2A);
	op_stkvar	(x,	1);
	create_dword	(x=0X1FF40);
	op_plain_offset	(x,	0,	0X1FF2A);
	op_plain_offset	(x,	128,	0X1FF2A);
	create_insn	(0X1FF44);
	create_insn	(x=0X1FF4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF5C);
	op_stkvar	(x,	1);
	create_dword	(x=0X1FF74);
	op_plain_offset	(x,	0,	0X1FF5A);
	op_plain_offset	(x,	128,	0X1FF5A);
	create_insn	(0X1FF78);
	create_insn	(x=0X1FF7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF84);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF86);
	op_stkvar	(x,	1);
	create_insn	(x=0X1FF9A);
	op_stkvar	(x,	1);
	make_array	(0X1FF9E,	0X2);
	create_dword	(x=0X1FFA0);
	op_plain_offset	(x,	0,	0X1FF84);
	op_plain_offset	(x,	128,	0X1FF84);
	create_insn	(0X1FFA4);
	create_insn	(0X1FFB4);
	create_insn	(x=0X1FFC2);
	op_hex		(x,	1);
	create_insn	(0X1FFF4);
	create_insn	(0X1FFFA);
	create_insn	(0X20016);
	create_insn	(x=0X20018);
	op_hex		(x,	1);
	create_insn	(0X20022);
	create_insn	(x=0X20026);
	op_hex		(x,	1);
	create_dword	(x=0X20034);
	op_plain_offset	(x,	0,	0X1FFB4);
	op_plain_offset	(x,	128,	0X1FFB4);
	create_insn	(0X20038);
	create_insn	(0X2006A);
	create_insn	(0X2008A);
	create_insn	(x=0X2008E);
	op_hex		(x,	1);
	create_insn	(0X200B4);
	create_insn	(x=0X200D0);
	op_hex		(x,	1);
	create_insn	(0X200D6);
	create_insn	(x=0X2010C);
	op_hex		(x,	1);
	create_insn	(x=0X2011A);
	op_hex		(x,	1);
	create_insn	(x=0X20124);
	op_hex		(x,	1);
	create_insn	(0X20142);
	create_insn	(0X20144);
	create_insn	(0X20166);
	create_insn	(x=0X2017C);
	op_hex		(x,	1);
	create_insn	(x=0X20196);
	op_hex		(x,	1);
	create_insn	(0X201A0);
	create_insn	(0X201A4);
	create_insn	(0X201A8);
	create_insn	(0X201AC);
	create_insn	(0X201B2);
	create_insn	(0X201B6);
	create_dword	(x=0X201BC);
	op_plain_offset	(x,	0,	0X2004C);
	op_plain_offset	(x,	128,	0X2004C);
	create_insn	(0X201C0);
	create_insn	(x=0X201C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X201C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X201CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X201CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X201D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X201D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X201DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X201E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X201E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X201E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X201F0);
	op_stkvar	(x,	1);
	create_dword	(x=0X201F4);
	op_plain_offset	(x,	0,	0X201DE);
	op_plain_offset	(x,	128,	0X201DE);
	create_dword	(x=0X201F8);
	op_plain_offset	(x,	0,	0X201E4);
	op_plain_offset	(x,	128,	0X201E4);
	create_insn	(0X201FC);
	create_insn	(x=0X20214);
	op_stkvar	(x,	1);
	create_insn	(x=0X2022C);
	op_hex		(x,	1);
	create_insn	(0X20244);
	create_insn	(x=0X2024C);
	op_hex		(x,	1);
	create_insn	(x=0X20252);
	op_stkvar	(x,	1);
	create_insn	(0X2026E);
	create_insn	(x=0X20272);
	op_stkvar	(x,	1);
	create_insn	(x=0X20276);
	op_hex		(x,	1);
	create_insn	(0X20296);
	create_insn	(x=0X202A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X202AA);
	op_hex		(x,	1);
	create_insn	(0X202B6);
	create_insn	(0X202BA);
	create_insn	(0X202C0);
	create_insn	(x=0X202C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X202CC);
	op_hex		(x,	1);
	create_insn	(x=0X202E6);
	op_stkvar	(x,	1);
	create_insn	(0X202F4);
	create_insn	(0X20306);
	create_insn	(0X20318);
	create_insn	(0X20320);
	create_insn	(0X20324);
	create_insn	(0X20336);
	create_insn	(0X20340);
	create_insn	(0X20348);
	create_insn	(0X2035C);
	create_insn	(0X20380);
	create_insn	(0X20386);
	create_insn	(0X20390);
	create_insn	(0X20394);
	create_insn	(0X203B4);
	create_insn	(0X203BA);
	create_insn	(0X203DE);
	create_insn	(0X203E2);
	create_insn	(0X203EA);
	create_insn	(0X203F2);
	create_insn	(x=0X2042C);
	op_hex		(x,	1);
	create_insn	(x=0X20430);
	op_hex		(x,	1);
	create_insn	(0X20444);
	create_insn	(0X20454);
	create_insn	(0X2045A);
	create_insn	(0X20460);
	create_insn	(0X20488);
	create_insn	(x=0X2048E);
	op_hex		(x,	1);
	create_insn	(x=0X204C0);
	op_hex		(x,	1);
	create_insn	(0X204DE);
	create_insn	(0X20512);
	create_insn	(x=0X20576);
	op_hex		(x,	1);
	create_insn	(0X20586);
	create_insn	(x=0X20590);
	op_hex		(x,	1);
	create_insn	(0X205B4);
	create_insn	(0X205CA);
	create_insn	(x=0X205F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X2060C);
	op_hex		(x,	1);
	create_insn	(0X20618);
	create_insn	(0X20622);
	create_insn	(0X2062E);
	create_insn	(0X2063E);
	create_insn	(0X20646);
	create_insn	(0X2065A);
	create_insn	(0X20668);
	create_insn	(0X2067C);
	create_insn	(0X20686);
	create_insn	(0X2068E);
	create_insn	(0X20698);
	create_insn	(0X206A0);
	create_insn	(0X206B6);
	create_insn	(0X206BA);
	create_insn	(0X206DC);
	create_insn	(0X206F2);
	create_insn	(x=0X2070A);
	op_hex		(x,	1);
	create_insn	(0X20712);
	create_insn	(0X2071C);
	create_insn	(0X2073A);
	create_insn	(0X2075E);
	create_insn	(0X20776);
	create_insn	(0X207A0);
	create_insn	(0X207A4);
	create_insn	(x=0X207B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X207C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X207C4);
	create_insn	(x=0X207CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X207CE);
	create_insn	(x=0X207D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X207D8);
	create_insn	(0X207E6);
	create_dword	(0X2080C);
	create_dword	(0X20810);
	create_dword	(0X20814);
	create_dword	(0X20818);
	create_insn	(0X2081C);
	create_insn	(0X2082A);
	create_insn	(0X20832);
	create_insn	(0X2083E);
	create_insn	(0X20844);
	create_insn	(0X2084E);
	create_insn	(x=0X20858);
	op_stkvar	(x,	1);
	make_array	(0X2086E,	0X2);
	create_dword	(x=0X20870);
	op_plain_offset	(x,	0,	0X20860);
	op_plain_offset	(x,	128,	0X20860);
	create_insn	(0X20874);
	create_insn	(0X2087E);
	make_array	(0X2088E,	0X2);
	create_insn	(0X20890);
	create_insn	(0X208AE);
	create_insn	(x=0X208B4);
	op_stkvar	(x,	1);
	create_insn	(0X20900);
	create_insn	(x=0X20906);
	op_stkvar	(x,	1);
	create_insn	(x=0X20916);
	op_stkvar	(x,	1);
	create_insn	(0X2091C);
	make_array	(0X20946,	0X2);
	create_dword	(x=0X20948);
	op_plain_offset	(x,	0,	0X208A2);
	op_plain_offset	(x,	128,	0X208A2);
	create_insn	(0X2094C);
	create_insn	(x=0X20954);
	op_hex		(x,	1);
	create_insn	(x=0X20960);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X20976);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X2097A);
	create_insn	(x=0X20982);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X20986);
	create_insn	(x=0X2098A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X20998);
	create_dword	(0X209B8);
	create_dword	(0X209BC);
	create_dword	(0X209C0);
	create_dword	(0X209C4);
	create_insn	(0X209C8);
	create_insn	(x=0X209D2);
	op_hex		(x,	1);
	create_insn	(x=0X209EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X209F4);
	op_hex		(x,	1);
	create_insn	(x=0X20A00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X20A0C);
	create_insn	(0X20A24);
	create_insn	(x=0X20A26);
	op_hex		(x,	1);
	create_dword	(0X20A30);
	create_dword	(0X20A34);
	create_insn	(0X20A38);
	create_insn	(x=0X20A3E);
	op_hex		(x,	1);
	create_insn	(0X20A54);
	create_insn	(0X20A70);
	create_insn	(0X20A74);
	create_insn	(0X20A78);
	create_insn	(0X20AD0);
	create_insn	(0X20AD4);
	create_insn	(x=0X20AF6);
	op_stkvar	(x,	1);
	create_insn	(0X20B16);
	create_insn	(0X20B24);
	create_insn	(0X20B46);
	create_insn	(0X20B50);
	create_insn	(x=0X20B56);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B62);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B70);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B88);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X20B96);
	op_hex		(x,	1);
	create_insn	(x=0X20B9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X20BAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X20BAC);
	op_hex		(x,	1);
	create_insn	(x=0X20BB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X20BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20BC2);
	op_hex		(x,	1);
	create_insn	(x=0X20BCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X20BD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X20BD8);
	op_hex		(x,	1);
	create_insn	(x=0X20BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20BF4);
	op_stkvar	(x,	1);
	create_insn	(0X20BFE);
	create_insn	(x=0X20C0C);
	op_hex		(x,	1);
	create_insn	(x=0X20C14);
	op_hex		(x,	1);
	create_insn	(x=0X20C40);
	op_hex		(x,	1);
	create_insn	(0X20C4A);
	create_insn	(0X20C50);
	create_insn	(x=0X20C66);
	op_stkvar	(x,	1);
	create_insn	(x=0X20C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X20C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X20C90);
	op_hex		(x,	1);
	create_insn	(0X20CA4);
	create_insn	(x=0X20CAA);
	op_hex		(x,	1);
	create_insn	(x=0X20CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CBC);
	op_stkvar	(x,	1);
	create_insn	(0X20CC4);
	create_insn	(x=0X20CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20CF2);
	op_stkvar	(x,	1);
	create_insn	(0X20D0A);
	create_insn	(x=0X20D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D18);
	op_hex		(x,	1);
	create_insn	(x=0X20D1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D56);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D5C);
	op_hex		(x,	1);
	create_insn	(x=0X20D62);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D6A);
	op_hex		(x,	1);
	create_insn	(x=0X20D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D82);
	op_stkvar	(x,	1);
	create_insn	(x=0X20D8E);
	op_hex		(x,	1);
	create_insn	(0X20D94);
	create_insn	(x=0X20D9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DA4);
	op_hex		(x,	1);
	create_insn	(0X20DBC);
	create_insn	(x=0X20DCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DD2);
	op_stkvar	(x,	1);
	create_insn	(0X20DE0);
	create_insn	(x=0X20DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X20DFC);
	op_hex		(x,	1);
	create_insn	(x=0X20E12);
	op_hex		(x,	1);
	create_insn	(x=0X20E18);
	op_stkvar	(x,	1);
	create_insn	(0X20E2A);
	create_insn	(x=0X20E30);
	op_stkvar	(x,	1);
	create_insn	(0X20E36);
	create_insn	(x=0X20E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E3E);
	op_hex		(x,	1);
	create_insn	(x=0X20E48);
	op_hex		(x,	1);
	create_insn	(x=0X20E52);
	op_stkvar	(x,	1);
	create_insn	(0X20E5E);
	create_insn	(0X20E66);
	create_insn	(x=0X20E6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E76);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X20E9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EB4);
	op_hex		(x,	1);
	create_insn	(x=0X20ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X20EDE);
	op_stkvar	(x,	1);
	create_dword	(x=0X20EEC);
	op_plain_offset	(x,	0,	0X20B30);
	op_plain_offset	(x,	128,	0X20B30);
	create_dword	(x=0X20EF0);
	op_plain_offset	(x,	0,	0X20C3A);
	op_plain_offset	(x,	128,	0X20C3A);
	create_dword	(0X20EF4);
	create_insn	(0X20EF8);
	create_insn	(0X20F04);
	create_dword	(x=0X20F1C);
	op_plain_offset	(x,	0,	0X20F0C);
	op_plain_offset	(x,	128,	0X20F0C);
	create_dword	(x=0X20F20);
	op_plain_offset	(x,	0,	0X20F12);
	op_plain_offset	(x,	128,	0X20F12);
	create_insn	(0X20F24);
	create_insn	(0X20F3A);
	create_insn	(0X20F42);
	create_insn	(0X20F5E);
	create_insn	(x=0X20F64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X20F68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X20F6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X20F70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X20F74);
	create_insn	(0X20FF6);
	create_insn	(0X20FFE);
	create_insn	(x=0X2100A);
	op_hex		(x,	1);
	create_insn	(0X21010);
	create_insn	(0X21012);
	create_insn	(x=0X21024);
	op_stkvar	(x,	1);
	create_insn	(x=0X21028);
	op_stkvar	(x,	1);
	create_insn	(x=0X21040);
	op_hex		(x,	1);
	create_insn	(x=0X2105E);
	op_stkvar	(x,	1);
	create_insn	(0X21084);
	create_insn	(0X21092);
	create_insn	(0X21096);
	create_insn	(x=0X210A6);
	op_stkvar	(x,	1);
	create_insn	(0X210B6);
	create_insn	(0X210BC);
	create_insn	(x=0X210C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X210C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X210CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X210D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X210E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X210E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X210F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X210F8);
	op_stkvar	(x,	1);
	create_insn	(0X21102);
	create_insn	(x=0X2110A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2110C);
	op_stkvar	(x,	1);
	create_insn	(0X21126);
	create_insn	(x=0X21130);
	op_stkvar	(x,	1);
	create_insn	(0X21136);
	create_insn	(0X21154);
	create_insn	(x=0X21160);
	op_stkvar	(x,	1);
	create_insn	(0X21166);
	create_insn	(x=0X2117E);
	op_stkvar	(x,	1);
	create_insn	(0X21184);
	create_insn	(0X2118A);
	create_insn	(x=0X211A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X211A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X211AA);
	op_stkvar	(x,	1);
	create_insn	(0X211B6);
	create_insn	(0X211BE);
	create_insn	(x=0X211C8);
	op_hex		(x,	1);
	create_insn	(x=0X211DC);
	op_stkvar	(x,	1);
	create_insn	(0X211E6);
	create_insn	(0X211F0);
	create_insn	(x=0X211F8);
	op_stkvar	(x,	1);
	create_insn	(0X2120C);
	create_insn	(0X21216);
	create_insn	(0X2122E);
	create_insn	(x=0X21234);
	op_stkvar	(x,	1);
	create_insn	(0X2123C);
	create_insn	(x=0X21240);
	op_stkvar	(x,	1);
	create_insn	(x=0X21242);
	op_stkvar	(x,	1);
	create_insn	(x=0X21244);
	op_stkvar	(x,	1);
	create_insn	(0X21258);
	create_insn	(x=0X2125C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21262);
	op_stkvar	(x,	1);
	create_insn	(x=0X21264);
	op_stkvar	(x,	1);
	create_insn	(x=0X21266);
	op_stkvar	(x,	1);
	create_insn	(x=0X21270);
	op_stkvar	(x,	1);
	create_insn	(0X21292);
	create_insn	(x=0X212A2);
	op_stkvar	(x,	1);
	create_insn	(0X212AC);
	create_insn	(x=0X212AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X212B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X212B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X212CE);
	op_stkvar	(x,	1);
	create_insn	(0X212EE);
	create_insn	(0X212F2);
	create_insn	(0X212FC);
	create_insn	(x=0X21322);
	op_stkvar	(x,	1);
	create_insn	(x=0X21326);
	op_stkvar	(x,	1);
	create_insn	(0X2135C);
	create_insn	(0X2136C);
	create_insn	(x=0X21376);
	op_stkvar	(x,	1);
	create_insn	(x=0X21378);
	op_stkvar	(x,	1);
	create_insn	(x=0X213A0);
	op_stkvar	(x,	1);
	create_insn	(0X213BE);
	create_insn	(x=0X213C6);
	op_stkvar	(x,	1);
	create_insn	(0X213CC);
	create_insn	(0X21406);
	create_insn	(0X2142A);
	create_insn	(0X21436);
	create_insn	(0X2143E);
	create_insn	(0X2144E);
	create_insn	(0X21456);
	create_insn	(0X21462);
	create_insn	(0X2146A);
	create_insn	(0X2147A);
	make_array	(0X21482,	0X2);
	create_insn	(0X21484);
	create_insn	(x=0X21494);
	op_stkvar	(x,	1);
	create_insn	(x=0X2149A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2149E);
	op_stkvar	(x,	1);
	create_insn	(x=0X214B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X214C6);
	op_stkvar	(x,	1);
	create_insn	(0X214CC);
	create_insn	(x=0X214D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X214DE);
	op_stkvar	(x,	1);
	create_insn	(0X214E4);
	create_insn	(x=0X214E6);
	op_stkvar	(x,	1);
	create_insn	(0X214F4);
	create_insn	(x=0X214F6);
	op_stkvar	(x,	1);
	create_insn	(0X21506);
	create_insn	(x=0X21508);
	op_stkvar	(x,	1);
	create_insn	(x=0X21518);
	op_stkvar	(x,	1);
	create_insn	(x=0X21526);
	op_stkvar	(x,	1);
	create_insn	(x=0X21544);
	op_hex		(x,	1);
	create_insn	(0X2154A);
	create_insn	(0X2156C);
	create_insn	(x=0X2156E);
	op_stkvar	(x,	1);
	create_insn	(x=0X21578);
	op_hex		(x,	1);
	create_insn	(x=0X2157E);
	op_hex		(x,	1);
	create_insn	(x=0X21584);
	op_hex		(x,	1);
	create_insn	(0X2158A);
	create_insn	(x=0X2158C);
	op_stkvar	(x,	1);
	create_insn	(x=0X21596);
	op_hex		(x,	1);
	create_insn	(x=0X2159C);
	op_hex		(x,	1);
	create_insn	(x=0X215A2);
	op_stkvar	(x,	1);
	create_insn	(0X215C8);
	create_insn	(0X215D2);
	create_insn	(0X215E4);
	create_insn	(0X215E6);
	create_insn	(0X215FE);
	create_insn	(0X21610);
	create_insn	(x=0X21612);
	op_stkvar	(x,	1);
	create_insn	(x=0X21620);
	op_stkvar	(x,	1);
	create_insn	(x=0X2162C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2163C);
	op_hex		(x,	1);
	create_insn	(0X2164E);
	create_insn	(0X21664);
	create_insn	(0X2166C);
	create_insn	(0X21678);
	create_insn	(x=0X2167C);
	op_hex		(x,	1);
	create_insn	(0X2168E);
	create_insn	(x=0X2169A);
	op_hex		(x,	1);
	create_insn	(x=0X216AC);
	op_hex		(x,	1);
	create_insn	(x=0X216BA);
	op_stkvar	(x,	1);
	create_insn	(0X216C6);
	create_insn	(0X216C8);
	create_insn	(x=0X216CC);
	op_stkvar	(x,	1);
	create_insn	(0X216D8);
	create_insn	(0X216EE);
	create_insn	(0X216FA);
	create_insn	(x=0X21700);
	op_stkvar	(x,	1);
	create_insn	(x=0X21716);
	op_stkvar	(x,	1);
	create_insn	(x=0X21722);
	op_stkvar	(x,	1);
	create_insn	(x=0X2173A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2174C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2175E);
	op_stkvar	(x,	1);
	create_insn	(x=0X21770);
	op_stkvar	(x,	1);
	create_insn	(x=0X21778);
	op_stkvar	(x,	1);
	create_insn	(0X21788);
	create_insn	(x=0X2178A);
	op_stkvar	(x,	1);
	create_insn	(x=0X21792);
	op_hex		(x,	1);
	create_insn	(0X217A8);
	create_insn	(x=0X217AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X217B4);
	op_stkvar	(x,	1);
	create_insn	(0X217BE);
	create_insn	(0X217C4);
	create_insn	(x=0X217D0);
	op_stkvar	(x,	1);
	create_insn	(0X217DE);
	create_insn	(0X217E2);
	create_insn	(x=0X217EE);
	op_stkvar	(x,	1);
	make_array	(0X217F2,	0X2);
	create_dword	(0X217F4);
	create_insn	(0X217F8);
	create_insn	(x=0X21812);
	op_stkvar	(x,	1);
	create_insn	(0X2183C);
	create_insn	(0X2184E);
	create_insn	(0X21876);
	create_insn	(x=0X2187E);
	op_stkvar	(x,	1);
	create_insn	(x=0X21892);
	op_stkvar	(x,	1);
	create_insn	(x=0X21896);
	op_stkvar	(x,	1);
	create_insn	(x=0X21898);
	op_stkvar	(x,	1);
	create_insn	(x=0X2189E);
	op_stkvar	(x,	1);
	create_insn	(x=0X218B4);
	op_stkvar	(x,	1);
	create_insn	(0X218BE);
	create_dword	(x=0X218D0);
	op_plain_offset	(x,	0,	0X21808);
	op_plain_offset	(x,	128,	0X21808);
	create_insn	(0X218D4);
	create_insn	(0X218F8);
	create_insn	(0X2190E);
	create_insn	(0X21914);
	make_array	(0X2191E,	0X2);
	create_dword	(0X21920);
	create_insn	(0X21924);
	create_insn	(x=0X21932);
	op_hex		(x,	1);
	create_insn	(x=0X2193A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2193E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X21942);
	create_insn	(x=0X21944);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X21948);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2194A);
	op_hex		(x,	1);
	create_insn	(0X21978);
	create_insn	(0X2197C);
	create_byte	(0X21994);
	create_byte	(0X21995);
	make_array	(0X21995,	0X3);
	create_byte	(0X21998);
	create_byte	(0X21999);
	make_array	(0X21999,	0X3);
	create_byte	(0X2199C);
	create_byte	(0X2199D);
	make_array	(0X2199D,	0X3);
	create_byte	(0X219A0);
	create_byte	(0X219A1);
	make_array	(0X219A1,	0X3);
	create_insn	(0X219A4);
	create_insn	(0X21A18);
	create_insn	(0X21A1E);
	create_insn	(x=0X21A20);
	op_hex		(x,	1);
	create_insn	(0X21A4C);
	create_insn	(0X21A64);
	create_insn	(0X21A96);
	create_dword	(0X21AC4);
	create_dword	(0X21AC8);
	make_array	(0X21AC8,	0XF);
	create_insn	(0X21B04);
	create_insn	(x=0X21B0A);
	op_hex		(x,	1);
	create_insn	(0X21B14);
	create_insn	(0X21B18);
	create_insn	(x=0X21B22);
	op_hex		(x,	1);
	create_insn	(x=0X21B32);
	op_hex		(x,	1);
	create_insn	(0X21B40);
	create_insn	(0X21B7A);
	create_insn	(0X21B90);
	create_insn	(x=0X21BA6);
	op_hex		(x,	1);
	create_insn	(0X21BC8);
	create_insn	(0X21BEE);
	create_insn	(x=0X21C12);
	op_hex		(x,	1);
	create_insn	(0X21C1E);
	create_insn	(0X21C24);
	create_insn	(0X21C2E);
	create_insn	(0X21C52);
	create_insn	(x=0X21C72);
	op_hex		(x,	1);
	create_insn	(0X21C90);
	make_array	(0X21CAE,	0X2);
	create_dword	(0X21CB0);
	create_dword	(0X21CB4);
	create_dword	(0X21CB8);
	create_insn	(0X21CBC);
	create_insn	(x=0X21CDA);
	op_hex		(x,	1);
	create_insn	(x=0X21CE4);
	op_hex		(x,	1);
	create_insn	(x=0X21CEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X21CF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X21D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D12);
	op_hex		(x,	1);
	create_insn	(x=0X21D1C);
	op_stkvar	(x,	1);
	create_insn	(0X21D32);
	create_insn	(0X21D44);
	create_insn	(x=0X21D46);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D50);
	op_hex		(x,	1);
	create_insn	(x=0X21D5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D64);
	op_hex		(x,	1);
	create_insn	(x=0X21D6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X21D76);
	op_hex		(x,	1);
	create_insn	(x=0X21D7A);
	op_hex		(x,	1);
	create_insn	(x=0X21D8A);
	op_stkvar	(x,	1);
	create_insn	(0X21D96);
	create_insn	(x=0X21D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X21DA8);
	op_stkvar	(x,	1);
	create_insn	(0X21DAE);
	create_insn	(x=0X21DBA);
	op_hex		(x,	1);
	create_insn	(x=0X21DC2);
	op_stkvar	(x,	1);
	create_insn	(0X21DD0);
	create_dword	(0X21DE0);
	create_strlit	(0X21DE4,	0X21DED);
	set_name	(0X21DE4,	"aInfinity");
	create_byte	(0X21DED);
	make_array	(0X21DED,	0X3);
	create_insn	(0X21DF0);
	make_array	(0X21E02,	0X2);
	create_insn	(0X21E04);
	make_array	(0X21E56,	0X2);
	create_insn	(0X21E58);
	create_insn	(x=0X21E60);
	op_hex		(x,	1);
	create_insn	(0X21E84);
	create_insn	(0X21EA0);
	make_array	(0X21EAA,	0X2);
	create_insn	(0X21EAC);
	create_dword	(0X21EB4);
	create_insn	(0X21EB8);
	create_insn	(0X21EBA);
	create_insn	(x=0X21EC0);
	op_hex		(x,	1);
	create_insn	(x=0X21EE0);
	op_hex		(x,	1);
	create_insn	(x=0X21EF2);
	op_hex		(x,	1);
	create_insn	(0X21EF8);
	create_insn	(x=0X21F3E);
	op_hex		(x,	1);
	create_insn	(x=0X21F46);
	op_hex		(x,	1);
	create_insn	(x=0X21F9E);
	op_hex		(x,	1);
	create_insn	(x=0X21FA6);
	op_hex		(x,	1);
	create_insn	(x=0X21FB2);
	op_hex		(x,	1);
	create_insn	(x=0X21FD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X220A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22226);
	op_hex		(x,	1);
	create_insn	(0X22240);
	create_insn	(0X22256);
	create_insn	(0X222BE);
	create_strlit	(0X222C0,	0X222D7);
	set_name	(0X222C0,	"aGfffeeeddddccc");
	create_byte	(0X222D7);
	create_insn	(0X222D8);
	create_insn	(x=0X222FE);
	op_hex		(x,	1);
	create_insn	(x=0X22306);
	op_hex		(x,	1);
	create_insn	(0X2231C);
	create_dword	(0X22328);
	create_insn	(0X2232C);
	create_insn	(x=0X2236E);
	op_hex		(x,	1);
	create_insn	(0X22378);
	create_insn	(0X2237E);
	create_insn	(0X223CC);
	create_insn	(0X223F2);
	create_insn	(0X2241A);
	create_insn	(0X22442);
	create_insn	(x=0X22450);
	op_hex		(x,	1);
	create_insn	(x=0X22456);
	op_hex		(x,	1);
	create_insn	(0X2246A);
	create_insn	(x=0X22478);
	op_hex		(x,	1);
	create_insn	(x=0X2247E);
	op_hex		(x,	1);
	create_insn	(x=0X22492);
	op_hex		(x,	1);
	create_insn	(x=0X2249A);
	op_hex		(x,	1);
	create_insn	(x=0X224A6);
	op_hex		(x,	1);
	create_insn	(x=0X224AE);
	op_hex		(x,	1);
	create_insn	(x=0X224B6);
	op_hex		(x,	1);
	create_insn	(0X2259C);
	create_insn	(0X225AC);
	create_insn	(x=0X2261C);
	op_hex		(x,	1);
	create_insn	(0X22692);
	make_array	(0X226D6,	0X2);
	create_insn	(0X226D8);
	create_insn	(x=0X226E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X226EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X226FA);
	create_insn	(x=0X22708);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22710);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22714);
	op_stkvar	(x,	1);
	create_insn	(x=0X22718);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2271A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22720);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22722);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22734);
	op_hex		(x,	1);
	create_dword	(x=0X2273C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X22740);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X22744);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X22748);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X2274C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X22750);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X22754);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X22758);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X2275C);
	make_array	(0X2275C,	0X2);
	create_dword	(x=0X22764);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X22768);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X2276C);
	create_insn	(x=0X22770);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22772);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X22778);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X22780);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X22784);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X227A6);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X227A8);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X227AC);
	op_hex		(x,	1);
	create_insn	(x=0X227B6);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X227B8);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X227BC);
	op_hex		(x,	1);
	create_insn	(0X227C8);
	create_insn	(x=0X227D8);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X227DA);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X227DE);
	op_hex		(x,	1);
	create_insn	(x=0X227E6);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X227E8);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X227EC);
	op_hex		(x,	1);
	create_insn	(x=0X22804);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X22806);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X2280A);
	op_hex		(x,	1);
	create_insn	(x=0X22814);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X22816);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X2281A);
	op_hex		(x,	1);
	create_insn	(x=0X22832);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_insn	(x=0X22834);
	op_plain_offset	(x,	1,	0X100042D0);
	op_plain_offset	(x,	129,	0X100042D0);
	create_dword	(x=0X2283C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X22840);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X22844);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2284A);
	op_hex		(x,	1);
	create_insn	(x=0X2284E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22850);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X22854);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X2285C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22860);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X2286A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22872);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X22878);
	create_insn	(x=0X22890);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X22896);
	create_insn	(x=0X228AA);
	op_plain_offset	(x,	1,	0X1000053C);
	op_plain_offset	(x,	129,	0X1000053C);
	create_insn	(x=0X228B0);
	op_plain_offset	(x,	1,	0X1000053C);
	op_plain_offset	(x,	129,	0X1000053C);
	create_insn	(0X228B6);
	make_array	(0X228BA,	0X2);
	create_dword	(x=0X228BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X228C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X228C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X228C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X228CC);
	create_insn	(x=0X228CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X228D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X228D8);
	op_hex		(x,	1);
	create_insn	(x=0X228DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X228E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X228E6);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X228E8);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X228F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X228FC);
	create_insn	(x=0X228FE);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22908);
	op_hex		(x,	1);
	create_insn	(x=0X22910);
	op_hex		(x,	1);
	create_insn	(0X2291C);
	create_insn	(x=0X22926);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X2292C);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(0X2293C);
	create_dword	(x=0X22940);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X22944);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X22948);
	create_insn	(x=0X2294A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22952);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X22954);
	op_hex		(x,	1);
	create_insn	(0X22968);
	create_insn	(x=0X22974);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22976);
	op_hex		(x,	1);
	create_insn	(0X2297C);
	create_insn	(x=0X22982);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22984);
	op_hex		(x,	1);
	create_insn	(x=0X22988);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X2298C);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X2298E);
	op_hex		(x,	1);
	create_insn	(x=0X22996);
	op_hex		(x,	1);
	create_insn	(0X229A2);
	create_insn	(x=0X229A6);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X229AE);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(0X229BA);
	create_insn	(x=0X229C2);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X229C8);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X229D8);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X229F2);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X229F6);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_dword	(x=0X229FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X22A00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X22A04);
	create_insn	(0X22A08);
	create_insn	(x=0X22A0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22A12);
	op_hex		(x,	1);
	create_insn	(x=0X22A18);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X22A1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22A30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X22A34);
	create_insn	(x=0X22A44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22A48);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X22A4E);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22A54);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22A58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22A6C);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22A7C);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22A86);
	op_hex		(x,	1);
	create_insn	(x=0X22A9E);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22AAA);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22AAE);
	op_hex		(x,	1);
	create_insn	(x=0X22AB4);
	op_hex		(x,	1);
	create_insn	(x=0X22AB8);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(0X22ABC);
	create_insn	(0X22AC0);
	create_insn	(0X22AC4);
	create_insn	(x=0X22AC8);
	op_hex		(x,	1);
	create_insn	(x=0X22AD0);
	op_hex		(x,	1);
	create_insn	(0X22ADA);
	create_insn	(x=0X22ADE);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22AE6);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(0X22B06);
	create_insn	(0X22B08);
	create_insn	(0X22B0A);
	create_insn	(x=0X22B0C);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22B14);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22B26);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22B32);
	op_hex		(x,	1);
	create_insn	(x=0X22B4A);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22B52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22B54);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22B58);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(0X22B64);
	create_dword	(x=0X22B68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X22B6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X22B70);
	create_insn	(x=0X22B74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22B7E);
	op_hex		(x,	1);
	create_insn	(x=0X22B8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22B96);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22BA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22BA2);
	op_stkvar	(x,	1);
	create_insn	(0X22BA6);
	create_insn	(0X22BB6);
	create_insn	(x=0X22BB8);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22BC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22BCA);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X22BD4);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X22BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X22BDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22BEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22BEC);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X22BF4);
	op_hex		(x,	1);
	create_insn	(x=0X22BFE);
	op_hex		(x,	1);
	create_insn	(0X22C0A);
	create_insn	(x=0X22C10);
	op_plain_offset	(x,	1,	0X10000544);
	op_plain_offset	(x,	129,	0X10000544);
	create_insn	(x=0X22C16);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22C1E);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22C22);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22C28);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(0X22C42);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_5(void) {
        auto x;
#define id x

	create_insn	(x=0X22C4C);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22C54);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22C58);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22C5E);
	op_plain_offset	(x,	1,	0X10000524);
	op_plain_offset	(x,	129,	0X10000524);
	create_insn	(x=0X22C70);
	op_stkvar	(x,	1);
	create_dword	(x=0X22C74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X22C78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X22C7C);
	create_insn	(x=0X22C8A);
	op_hex		(x,	1);
	create_insn	(x=0X22C98);
	op_hex		(x,	1);
	create_insn	(0X22CA4);
	create_insn	(x=0X22CB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X22CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22CB6);
	op_hex		(x,	1);
	create_insn	(x=0X22CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X22CCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X22CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22CE2);
	op_stkvar	(x,	1);
	create_insn	(0X22CFE);
	create_insn	(0X22D1C);
	create_insn	(0X22D32);
	create_insn	(0X22D52);
	create_insn	(x=0X22D56);
	op_stkvar	(x,	1);
	create_insn	(x=0X22D5A);
	op_hex		(x,	1);
	create_insn	(x=0X22D76);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X22DFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E06);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E3A);
	op_hex		(x,	1);
	create_insn	(x=0X22E40);
	op_stkvar	(x,	1);
	create_insn	(0X22E4A);
	create_insn	(0X22E4C);
	create_insn	(x=0X22E4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E60);
	op_hex		(x,	1);
	create_insn	(x=0X22E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X22E70);
	op_hex		(x,	1);
	create_insn	(x=0X22E8E);
	op_stkvar	(x,	1);
	create_insn	(0X22E98);
	create_insn	(0X22ED8);
	create_insn	(0X22EE0);
	create_insn	(x=0X22EF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X22EF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X22EFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F10);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F66);
	op_stkvar	(x,	1);
	create_insn	(x=0X22F7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FC4);
	op_hex		(x,	1);
	create_insn	(x=0X22FCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FCC);
	op_hex		(x,	1);
	create_insn	(x=0X22FD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X22FD8);
	op_stkvar	(x,	1);
	create_dword	(0X22FE0);
	create_dword	(x=0X22FE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X22FE8);
	create_dword	(0X22FEC);
	create_dword	(0X22FF0);
	create_dword	(0X22FF4);
	create_dword	(0X22FF8);
	create_dword	(0X22FFC);
	create_dword	(0X23000);
	create_dword	(0X23004);
	create_dword	(0X23008);
	create_dword	(0X2300C);
	create_dword	(x=0X23010);
	op_plain_offset	(x,	0,	0X22DD0);
	op_plain_offset	(x,	128,	0X22DD0);
	create_dword	(x=0X23014);
	op_plain_offset	(x,	0,	0X22E84);
	op_plain_offset	(x,	128,	0X22E84);
	create_dword	(x=0X23018);
	op_plain_offset	(x,	0,	0X22EA2);
	op_plain_offset	(x,	128,	0X22EA2);
	create_dword	(0X2301C);
	create_dword	(0X23020);
	create_dword	(0X23024);
	create_dword	(0X23028);
	create_insn	(0X2302C);
	create_insn	(x=0X23030);
	op_hex		(x,	1);
	create_insn	(0X230CA);
	make_array	(0X23112,	0X2);
	create_dword	(0X23114);
	create_dword	(x=0X23118);
	op_plain_offset	(x,	0,	0X2306C);
	op_plain_offset	(x,	128,	0X2306C);
	create_dword	(0X2311C);
	create_dword	(0X23120);
	create_dword	(0X23124);
	create_insn	(0X23128);
	create_insn	(x=0X2313C);
	op_hex		(x,	1);
	create_insn	(x=0X23158);
	op_hex		(x,	1);
	make_array	(0X231D2,	0X2);
	create_insn	(0X231D4);
	create_insn	(x=0X231DA);
	op_hex		(x,	1);
	create_insn	(0X23200);
	create_insn	(x=0X2322A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2322C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23246);
	op_stkvar	(x,	1);
	create_insn	(0X2328A);
	create_dword	(x=0X232B4);
	op_plain_offset	(x,	0,	0X23226);
	op_plain_offset	(x,	128,	0X23226);
	create_dword	(0X232B8);
	create_dword	(0X232BC);
	create_insn	(0X232C0);
	create_dword	(0X232CC);
	create_insn	(0X232D0);
	create_insn	(0X232D6);
	create_insn	(0X232DA);
	create_insn	(0X232E6);
	create_insn	(0X232F4);
	make_array	(0X232FE,	0X2);
	create_dword	(0X23300);
	create_insn	(0X23304);
	create_insn	(0X2330E);
	create_insn	(0X23314);
	create_insn	(0X2331C);
	create_insn	(0X2332C);
	create_insn	(x=0X23338);
	op_stkvar	(x,	1);
	create_insn	(x=0X2333C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23372);
	op_hex		(x,	1);
	create_insn	(x=0X23382);
	op_stkvar	(x,	1);
	create_insn	(0X233A4);
	create_dword	(0X233B0);
	create_insn	(0X233B4);
	create_insn	(0X233CA);
	create_insn	(0X233D4);
	create_insn	(0X233D8);
	create_insn	(x=0X233DC);
	op_hex		(x,	1);
	create_insn	(0X23404);
	create_insn	(x=0X2340E);
	op_stkvar	(x,	1);
	create_insn	(x=0X23414);
	op_hex		(x,	1);
	create_insn	(x=0X2341A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2342E);
	op_stkvar	(x,	1);
	create_insn	(x=0X23432);
	op_stkvar	(x,	1);
	create_insn	(0X23440);
	create_insn	(x=0X23448);
	op_stkvar	(x,	1);
	create_insn	(x=0X2344C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23458);
	op_stkvar	(x,	1);
	create_insn	(x=0X23466);
	op_hex		(x,	1);
	create_dword	(0X2346C);
	create_dword	(0X23470);
	create_insn	(0X23474);
	create_insn	(x=0X2347E);
	op_hex		(x,	1);
	create_insn	(x=0X234A4);
	op_hex		(x,	1);
	create_insn	(x=0X234B8);
	op_hex		(x,	1);
	create_insn	(x=0X234BC);
	op_hex		(x,	1);
	create_dword	(0X234C4);
	create_dword	(0X234C8);
	create_insn	(0X234CC);
	create_insn	(0X23522);
	create_insn	(0X23538);
	create_insn	(0X23540);
	create_insn	(x=0X2354E);
	op_hex		(x,	1);
	create_insn	(0X23564);
	create_insn	(0X23584);
	create_insn	(x=0X23590);
	op_hex		(x,	1);
	create_insn	(0X23598);
	create_insn	(x=0X235B2);
	op_hex		(x,	1);
	create_insn	(x=0X235B6);
	op_hex		(x,	1);
	create_insn	(x=0X235BE);
	op_hex		(x,	1);
	create_insn	(x=0X235C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X235F0);
	op_stkvar	(x,	1);
	create_insn	(0X2362E);
	create_insn	(x=0X2365E);
	op_stkvar	(x,	1);
	create_insn	(0X236A2);
	create_insn	(0X236B4);
	create_insn	(x=0X236D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X236E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X236EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X236EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X236F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X2371C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23720);
	op_stkvar	(x,	1);
	create_insn	(x=0X2372E);
	op_stkvar	(x,	1);
	create_insn	(x=0X23730);
	op_stkvar	(x,	1);
	create_insn	(x=0X23738);
	op_stkvar	(x,	1);
	create_insn	(x=0X2373A);
	op_stkvar	(x,	1);
	create_insn	(x=0X23742);
	op_stkvar	(x,	1);
	create_insn	(x=0X2374A);
	op_stkvar	(x,	1);
	create_insn	(x=0X23768);
	op_stkvar	(x,	1);
	create_insn	(x=0X2377A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2377C);
	op_stkvar	(x,	1);
	create_insn	(x=0X23784);
	op_stkvar	(x,	1);
	create_insn	(x=0X23792);
	op_stkvar	(x,	1);
	create_insn	(x=0X23794);
	op_stkvar	(x,	1);
	create_insn	(0X237C8);
	create_insn	(x=0X237CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X237F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X2380A);
	op_stkvar	(x,	1);
	create_insn	(0X23846);
	create_dword	(0X23868);
	create_dword	(0X2386C);
	create_dword	(0X23870);
	create_dword	(x=0X23874);
	op_plain_offset	(x,	0,	0X235E2);
	op_plain_offset	(x,	128,	0X235E2);
	create_dword	(0X23878);
	create_dword	(0X2387C);
	create_dword	(0X23880);
	create_dword	(0X23884);
	create_dword	(0X23888);
	create_dword	(0X2388C);
	create_dword	(0X23890);
	create_dword	(x=0X23894);
	op_plain_offset	(x,	0,	0X23712);
	op_plain_offset	(x,	128,	0X23712);
	create_dword	(x=0X23898);
	op_plain_offset	(x,	0,	0X2372C);
	op_plain_offset	(x,	128,	0X2372C);
	create_insn	(0X2389C);
	create_insn	(x=0X238AA);
	op_hex		(x,	1);
	create_insn	(0X238C0);
	create_insn	(0X238DE);
	create_insn	(x=0X238E8);
	op_hex		(x,	1);
	create_insn	(0X238F0);
	make_array	(0X23962,	0X2);
	create_dword	(0X23964);
	create_dword	(0X23968);
	create_dword	(0X2396C);
	create_dword	(0X23970);
	create_dword	(0X23974);
	create_dword	(0X23978);
	create_dword	(0X2397C);
	create_insn	(0X23980);
	create_insn	(0X23A44);
	create_insn	(0X23A8C);
	create_insn	(0X23A8E);
	create_insn	(0X23AAC);
	create_insn	(0X23ABE);
	create_insn	(x=0X23ADC);
	op_hex		(x,	1);
	create_insn	(0X23AEE);
	create_insn	(x=0X23AF8);
	op_hex		(x,	1);
	create_dword	(0X23B00);
	create_dword	(0X23B04);
	create_dword	(0X23B08);
	create_dword	(x=0X23B0C);
	op_plain_offset	(x,	0,	0X23A08);
	op_plain_offset	(x,	128,	0X23A08);
	create_dword	(0X23B10);
	create_dword	(0X23B14);
	create_dword	(x=0X23B18);
	op_plain_offset	(x,	0,	0X23A34);
	op_plain_offset	(x,	128,	0X23A34);
	create_dword	(0X23B1C);
	create_dword	(0X23B20);
	create_dword	(0X23B24);
	create_dword	(0X23B28);
	create_dword	(0X23B2C);
	create_dword	(0X23B30);
	create_insn	(0X23B34);
	create_insn	(x=0X23B40);
	op_hex		(x,	1);
	create_insn	(x=0X23B44);
	op_hex		(x,	1);
	create_insn	(0X23B90);
	create_insn	(0X23BCE);
	create_insn	(0X23C10);
	create_insn	(x=0X23C22);
	op_hex		(x,	1);
	create_insn	(0X23C50);
	create_insn	(x=0X23C5C);
	op_hex		(x,	1);
	create_insn	(0X23C64);
	create_insn	(0X23C9C);
	create_insn	(x=0X23CA0);
	op_hex		(x,	1);
	create_insn	(0X23CAC);
	create_insn	(0X23CBA);
	create_insn	(0X23CD0);
	create_insn	(0X23CE4);
	create_insn	(0X23CF2);
	create_insn	(0X23D06);
	create_insn	(0X23D0E);
	create_insn	(0X23D34);
	create_insn	(0X23D44);
	create_insn	(x=0X23D46);
	op_hex		(x,	1);
	create_insn	(0X23D86);
	create_insn	(0X23D98);
	create_insn	(0X23DAE);
	create_insn	(0X23DBA);
	create_insn	(0X23DFA);
	create_insn	(0X23E14);
	create_insn	(0X23E24);
	create_insn	(0X23E30);
	create_insn	(0X23E3A);
	create_insn	(0X23E6A);
	create_insn	(0X23E82);
	create_insn	(x=0X23EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X23EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X23ECC);
	op_stkvar	(x,	1);
	create_insn	(0X23EE2);
	create_insn	(0X23EE4);
	create_insn	(x=0X23EEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X23EF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F02);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X23F28);
	op_stkvar	(x,	1);
	create_insn	(0X23F34);
	make_array	(0X23F52,	0X2);
	create_dword	(0X23F54);
	create_dword	(0X23F58);
	create_dword	(0X23F5C);
	create_dword	(0X23F60);
	create_dword	(0X23F64);
	create_dword	(0X23F68);
	create_dword	(x=0X23F6C);
	op_plain_offset	(x,	0,	0X23CB2);
	op_plain_offset	(x,	128,	0X23CB2);
	create_dword	(0X23F70);
	create_dword	(0X23F74);
	create_dword	(0X23F78);
	create_dword	(0X23F7C);
	create_dword	(0X23F80);
	create_dword	(0X23F84);
	create_dword	(0X23F88);
	create_dword	(0X23F8C);
	create_dword	(0X23F90);
	create_dword	(0X23F94);
	create_dword	(0X23F98);
	create_insn	(0X23F9C);
	create_insn	(x=0X23FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FA6);
	op_hex		(x,	1);
	create_insn	(x=0X23FAA);
	op_hex		(x,	1);
	create_insn	(x=0X23FAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FC4);
	op_stkvar	(x,	1);
	create_insn	(0X23FC8);
	create_insn	(x=0X23FCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X23FF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X24002);
	op_stkvar	(x,	1);
	create_insn	(x=0X24014);
	op_stkvar	(x,	1);
	create_insn	(x=0X2401A);
	op_stkvar	(x,	1);
	create_insn	(x=0X24024);
	op_stkvar	(x,	1);
	create_insn	(x=0X24030);
	op_stkvar	(x,	1);
	create_insn	(x=0X24034);
	op_stkvar	(x,	1);
	create_insn	(x=0X2403E);
	op_stkvar	(x,	1);
	create_insn	(x=0X24040);
	op_stkvar	(x,	1);
	create_insn	(x=0X2404A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2404C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2404E);
	op_stkvar	(x,	1);
	create_insn	(x=0X24056);
	op_stkvar	(x,	1);
	create_insn	(x=0X24066);
	op_stkvar	(x,	1);
	create_insn	(x=0X2406C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2406E);
	op_stkvar	(x,	1);
	create_insn	(x=0X2407E);
	op_stkvar	(x,	1);
	create_insn	(x=0X24084);
	op_stkvar	(x,	1);
	create_insn	(x=0X24086);
	op_stkvar	(x,	1);
	create_insn	(x=0X2408C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2408E);
	op_stkvar	(x,	1);
	create_insn	(x=0X24090);
	op_stkvar	(x,	1);
	create_insn	(x=0X240A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X240B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X240C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X240D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X240D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X240D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X240E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X240FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X240FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X24116);
	op_stkvar	(x,	1);
	create_insn	(x=0X24118);
	op_stkvar	(x,	1);
	create_insn	(x=0X24128);
	op_stkvar	(x,	1);
	create_insn	(x=0X2412A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2413C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2413E);
	op_stkvar	(x,	1);
	create_insn	(x=0X24140);
	op_stkvar	(x,	1);
	create_insn	(x=0X24148);
	op_stkvar	(x,	1);
	create_insn	(x=0X2414E);
	op_stkvar	(x,	1);
	create_insn	(x=0X24150);
	op_stkvar	(x,	1);
	create_insn	(x=0X24158);
	op_stkvar	(x,	1);
	create_insn	(x=0X24164);
	op_stkvar	(x,	1);
	create_insn	(x=0X2417E);
	op_stkvar	(x,	1);
	create_insn	(x=0X24186);
	op_stkvar	(x,	1);
	create_insn	(x=0X24196);
	op_stkvar	(x,	1);
	create_insn	(x=0X24198);
	op_stkvar	(x,	1);
	create_insn	(x=0X241A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X241A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X241B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X241C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X241D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X241D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X241D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X241DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X241E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X241E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X241EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X241F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X241FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X24202);
	op_stkvar	(x,	1);
	create_insn	(x=0X24210);
	op_stkvar	(x,	1);
	create_insn	(x=0X24216);
	op_stkvar	(x,	1);
	create_insn	(x=0X24218);
	op_stkvar	(x,	1);
	create_insn	(x=0X2421E);
	op_stkvar	(x,	1);
	create_insn	(x=0X24220);
	op_stkvar	(x,	1);
	create_insn	(x=0X24226);
	op_stkvar	(x,	1);
	create_insn	(x=0X24228);
	op_stkvar	(x,	1);
	create_insn	(x=0X24234);
	op_stkvar	(x,	1);
	create_insn	(x=0X24240);
	op_stkvar	(x,	1);
	create_insn	(x=0X24248);
	op_stkvar	(x,	1);
	create_insn	(x=0X24258);
	op_stkvar	(x,	1);
	create_insn	(x=0X24268);
	op_stkvar	(x,	1);
	create_insn	(0X242C6);
	create_insn	(x=0X242C8);
	op_hex		(x,	1);
	create_insn	(x=0X242F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X242F6);
	op_hex		(x,	1);
	create_insn	(x=0X2432A);
	op_hex		(x,	1);
	create_insn	(x=0X24336);
	op_stkvar	(x,	1);
	create_insn	(x=0X24340);
	op_stkvar	(x,	1);
	create_insn	(x=0X24364);
	op_stkvar	(x,	1);
	create_insn	(x=0X24374);
	op_stkvar	(x,	1);
	create_insn	(x=0X2437A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2437C);
	op_stkvar	(x,	1);
	create_insn	(x=0X24384);
	op_stkvar	(x,	1);
	create_insn	(x=0X2439A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2439C);
	op_stkvar	(x,	1);
	create_dword	(0X243AC);
	create_dword	(0X243B0);
	create_dword	(x=0X243B4);
	op_plain_offset	(x,	0,	0X23FE2);
	op_plain_offset	(x,	128,	0X23FE2);
	create_dword	(0X243B8);
	create_dword	(x=0X243BC);
	op_plain_offset	(x,	0,	0X24032);
	op_plain_offset	(x,	128,	0X24032);
	create_dword	(x=0X243C0);
	op_plain_offset	(x,	0,	0X240AC);
	op_plain_offset	(x,	128,	0X240AC);
	create_dword	(0X243C4);
	create_dword	(0X243C8);
	create_dword	(0X243CC);
	create_dword	(0X243D0);
	create_dword	(0X243D4);
	create_dword	(x=0X243D8);
	op_plain_offset	(x,	0,	0X241C4);
	op_plain_offset	(x,	128,	0X241C4);
	create_dword	(x=0X243DC);
	op_plain_offset	(x,	0,	0X241F0);
	op_plain_offset	(x,	128,	0X241F0);
	create_dword	(0X243E0);
	create_dword	(0X243E4);
	create_dword	(0X243E8);
	create_dword	(0X243EC);
	create_dword	(0X243F0);
	create_dword	(0X243F4);
	create_dword	(0X243F8);
	create_dword	(x=0X243FC);
	op_plain_offset	(x,	0,	0X2431C);
	op_plain_offset	(x,	128,	0X2431C);
	create_dword	(0X24400);
	create_dword	(0X24404);
	create_dword	(0X24408);
	create_dword	(0X2440C);
	create_dword	(0X24410);
	create_dword	(0X24414);
	create_insn	(0X24418);
	create_insn	(x=0X2443A);
	op_stkvar	(x,	1);
	create_insn	(x=0X24470);
	op_stkvar	(x,	1);
	create_insn	(x=0X24478);
	op_stkvar	(x,	1);
	create_insn	(x=0X2447E);
	op_stkvar	(x,	1);
	create_insn	(x=0X24480);
	op_stkvar	(x,	1);
	create_insn	(x=0X24492);
	op_stkvar	(x,	1);
	create_insn	(x=0X244A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X244A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X244AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X244C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X244D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X244EA);
	op_stkvar	(x,	1);
	create_dword	(x=0X24504);
	op_plain_offset	(x,	0,	0X24454);
	op_plain_offset	(x,	128,	0X24454);
	create_dword	(0X24508);
	create_insn	(0X2450C);
	create_insn	(x=0X24510);
	op_hex		(x,	1);
	create_insn	(x=0X2451E);
	op_stkvar	(x,	1);
	create_insn	(0X24522);
	create_insn	(0X2453A);
	create_insn	(x=0X24544);
	op_stkvar	(x,	1);
	create_insn	(x=0X2454A);
	op_hex		(x,	1);
	create_insn	(x=0X2455C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2456A);
	op_hex		(x,	1);
	create_insn	(x=0X24570);
	op_stkvar	(x,	1);
	create_insn	(x=0X24574);
	op_stkvar	(x,	1);
	create_insn	(x=0X24582);
	op_stkvar	(x,	1);
	create_insn	(x=0X24592);
	op_stkvar	(x,	1);
	create_insn	(x=0X24596);
	op_stkvar	(x,	1);
	make_array	(0X245A2,	0X2);
	create_dword	(0X245A4);
	create_dword	(0X245A8);
	create_insn	(0X245AC);
	create_insn	(x=0X245C2);
	op_hex		(x,	1);
	create_insn	(x=0X245DA);
	op_hex		(x,	1);
	create_insn	(0X245F8);
	create_insn	(0X24614);
	make_array	(0X2461A,	0X2);
	create_dword	(x=0X2461C);
	op_plain_offset	(x,	0,	0X2460A);
	op_plain_offset	(x,	128,	0X2460A);
	create_dword	(x=0X24620);
	op_plain_offset	(x,	0,	0X2461A);
	op_plain_offset	(x,	128,	0X2461A);
	create_insn	(0X24624);
	create_insn	(0X24640);
	make_array	(0X24646,	0X2);
	create_dword	(x=0X24648);
	op_plain_offset	(x,	0,	0X24636);
	op_plain_offset	(x,	128,	0X24636);
	create_dword	(x=0X2464C);
	op_plain_offset	(x,	0,	0X24646);
	op_plain_offset	(x,	128,	0X24646);
	create_insn	(x=0X24650);
	op_hex		(x,	1);
	create_insn	(x=0X2465C);
	op_hex		(x,	1);
	create_insn	(x=0X2467A);
	op_hex		(x,	1);
	create_insn	(0X24680);
	create_insn	(0X2469A);
	create_insn	(0X246A8);
	make_array	(0X246B2,	0X2);
	create_insn	(0X246B4);
	create_insn	(x=0X246BC);
	op_hex		(x,	1);
	create_insn	(x=0X246FC);
	op_hex		(x,	1);
	create_insn	(0X24748);
	create_insn	(x=0X2474C);
	op_hex		(x,	1);
	create_insn	(0X24768);
	create_insn	(0X247B4);
	create_insn	(0X247C0);
	create_insn	(0X247D8);
	create_insn	(x=0X247E8);
	op_hex		(x,	1);
	create_insn	(0X247F0);
	create_dword	(0X247FC);
	create_dword	(0X24800);
	create_insn	(0X24804);
	make_array	(0X2480E,	0X2);
	create_dword	(0X24810);
	create_insn	(0X24814);
	create_insn	(0X2482C);
	create_insn	(x=0X24890);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X24934);
	op_hex		(x,	1);
	create_insn	(0X2494C);
	create_insn	(0X24960);
	create_insn	(0X24972);
	create_insn	(0X249C4);
	create_insn	(0X249D6);
	create_insn	(x=0X249E0);
	op_hex		(x,	1);
	create_insn	(0X249E8);
	create_insn	(0X249F4);
	create_insn	(x=0X24A06);
	op_hex		(x,	1);
	create_insn	(0X24A0E);
	create_insn	(0X24A1C);
	create_insn	(0X24A30);
	create_insn	(x=0X24A38);
	op_hex		(x,	1);
	create_insn	(0X24A3E);
	create_insn	(0X24A46);
	create_dword	(0X24A54);
	make_array	(0X24A54,	0X20);
	create_dword	(0X24AD4);
	create_dword	(0X24AD8);
	create_insn	(0X24ADC);
	create_insn	(0X24AFC);
	create_insn	(0X24B0E);
	create_insn	(0X24B12);
	create_insn	(0X24B2A);
	create_insn	(0X24B3E);
	create_insn	(0X24B54);
	create_insn	(0X24B86);
	create_insn	(0X24BA2);
	create_insn	(x=0X24BA8);
	op_stkvar	(x,	1);
	create_insn	(0X24BB0);
	make_array	(0X24BB2,	0X2);
	create_insn	(0X24BB4);
	create_insn	(0X24BDA);
	create_insn	(0X24BF6);
	create_insn	(0X24BFC);
	create_insn	(x=0X24C04);
	op_stkvar	(x,	1);
	create_insn	(0X24C0C);
	create_insn	(x=0X24C0E);
	op_hex		(x,	1);
	create_insn	(0X24C36);
	create_insn	(0X24C3C);
	create_insn	(0X24C5C);
	make_array	(0X24C62,	0X2);
	create_insn	(0X24C64);
	create_insn	(0X24C84);
	create_insn	(0X24C96);
	create_insn	(0X24C9A);
	create_insn	(0X24CB2);
	create_insn	(0X24CC6);
	create_insn	(0X24CDC);
	create_insn	(x=0X24D08);
	op_hex		(x,	1);
	create_insn	(x=0X24D0C);
	op_hex		(x,	1);
	create_insn	(x=0X24D3E);
	op_hex		(x,	1);
	create_insn	(x=0X24D42);
	op_hex		(x,	1);
	create_insn	(0X24D60);
	create_insn	(x=0X24D8A);
	op_hex		(x,	1);
	create_insn	(0X24DA4);
	create_insn	(x=0X24DD0);
	op_hex		(x,	1);
	create_insn	(0X24DD6);
	create_insn	(x=0X24DEE);
	op_hex		(x,	1);
	create_insn	(0X24DF4);
	create_insn	(0X24E00);
	create_insn	(0X24E04);
	create_insn	(0X24E16);
	create_dword	(0X24E28);
	create_dword	(0X24E2C);
	create_insn	(0X24E30);
	create_insn	(x=0X24E34);
	op_hex		(x,	1);
	create_insn	(0X24E72);
	create_insn	(0X24E78);
	create_insn	(x=0X24E84);
	op_hex		(x,	1);
	set_cmt	(0X24E88,	"switch 4 cases ",	0);
	create_insn	(x=0X24E96);
	op_hex		(x,	1);
	set_cmt	(0X24E9C,	"switch jump",	0);
	create_insn	(0X24E9C);
	set_cmt	(0X24EA0,	"jump table for switch statement",	0);
	create_byte	(0X24EA0);
	set_name	(0X24EA0,	"jpt_1AE9C");
	create_byte	(0X24EA1);
	create_byte	(0X24EA2);
	create_byte	(0X24EA3);
	set_cmt	(0X24EA4,	"jumptable 00024E9C cases 6,7",	1);
	create_insn	(0X24EA4);
	set_cmt	(0X24EB2,	"jumptable 00024E9C case 4",	1);
	create_insn	(0X24EB2);
	set_cmt	(0X24EB6,	"jumptable 00024E9C case 5",	1);
	create_insn	(x=0X24EC6);
	op_hex		(x,	1);
	create_insn	(0X24ECC);
	create_insn	(0X24ED8);
	create_insn	(0X24EF8);
	create_insn	(0X24F0A);
	create_insn	(0X24F0E);
	create_insn	(0X24F26);
	create_insn	(0X24F3A);
	create_insn	(0X24F44);
	create_insn	(x=0X24F4A);
	op_hex		(x,	1);
	create_insn	(x=0X24F52);
	op_hex		(x,	1);
	make_array	(0X24F5A,	0X2);
	create_insn	(0X24F5C);
	create_insn	(x=0X24F78);
	op_hex		(x,	1);
	create_insn	(x=0X24F8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X25078);
	op_hex		(x,	1);
	make_array	(0X2508E,	0X2);
	create_dword	(0X25090);
	make_array	(0X25090,	0XC);
	create_insn	(0X250C0);
	create_insn	(0X250E2);
	create_insn	(0X250F2);
	create_insn	(x=0X25102);
	op_hex		(x,	1);
	create_insn	(0X2510A);
	create_dword	(0X25124);
	create_insn	(0X25128);
	create_insn	(x=0X25130);
	op_hex		(x,	1);
	create_insn	(x=0X25142);
	op_hex		(x,	1);
	create_insn	(x=0X251C8);
	op_hex		(x,	1);
	create_insn	(0X251CE);
	create_insn	(x=0X25230);
	op_hex		(x,	1);
	create_insn	(0X25236);
	create_insn	(x=0X25240);
	op_hex		(x,	1);
	create_insn	(x=0X25278);
	op_hex		(x,	1);
	create_insn	(0X2527E);
	create_insn	(0X2528A);
	create_insn	(0X25294);
	create_insn	(0X2529A);
	create_insn	(0X252AA);
	create_insn	(0X252B0);
	create_insn	(x=0X252C0);
	op_hex		(x,	1);
	create_insn	(0X252CA);
	create_insn	(0X252E0);
	create_insn	(x=0X252F0);
	op_hex		(x,	1);
	create_dword	(0X252F8);
	create_insn	(0X252FC);
	create_insn	(x=0X25310);
	op_hex		(x,	1);
	create_insn	(x=0X25316);
	op_hex		(x,	1);
	create_insn	(x=0X2531E);
	op_hex		(x,	1);
	create_insn	(x=0X25324);
	op_hex		(x,	1);
	create_insn	(x=0X2533A);
	op_stkvar	(x,	1);
	create_insn	(0X25344);
	make_array	(0X25352,	0X2);
	create_insn	(0X25354);
	create_insn	(x=0X2535A);
	op_hex		(x,	1);
	create_insn	(x=0X253AA);
	op_hex		(x,	1);
	create_insn	(x=0X253C4);
	op_hex		(x,	1);
	create_insn	(0X253D8);
	create_insn	(x=0X253E4);
	op_hex		(x,	1);
	create_insn	(0X253FA);
	create_insn	(x=0X25406);
	op_hex		(x,	1);
	create_insn	(0X2540C);
	create_dword	(0X25414);
	create_insn	(0X25418);
	make_array	(0X2541E,	0X2);
	create_dword	(0X25420);
	create_insn	(0X25424);
	create_insn	(0X2543C);
	create_insn	(x=0X2545C);
	op_hex		(x,	1);
	create_insn	(x=0X25460);
	op_hex		(x,	1);
	create_insn	(x=0X25464);
	op_hex		(x,	1);
	create_insn	(x=0X25468);
	op_hex		(x,	1);
	create_insn	(x=0X2546C);
	op_hex		(x,	1);
	create_insn	(x=0X25478);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X254DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X254F4);
	op_hex		(x,	1);
	create_insn	(x=0X254FE);
	op_hex		(x,	1);
	create_insn	(0X25504);
	create_insn	(x=0X25512);
	op_stkvar	(x,	1);
	create_insn	(x=0X25514);
	op_stkvar	(x,	1);
	create_insn	(x=0X25516);
	op_stkvar	(x,	1);
	create_insn	(x=0X25518);
	op_stkvar	(x,	1);
	create_insn	(x=0X2551A);
	op_stkvar	(x,	1);
	create_insn	(x=0X2551C);
	op_stkvar	(x,	1);
	create_insn	(x=0X2551E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X25520);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X25522);
	op_stkvar	(x,	1);
	create_insn	(x=0X25524);
	op_stkvar	(x,	1);
	create_word	(0X2552A);
	create_insn	(0X2552C);
	create_word	(0X2553E);
	create_dword	(0X25540);
	make_array	(0X25540,	0X2);
	create_insn	(0X25548);
	create_insn	(0X25560);
	create_insn	(x=0X2556A);
	op_hex		(x,	1);
	create_insn	(x=0X25576);
	op_hex		(x,	1);
	create_insn	(x=0X25580);
	op_hex		(x,	1);
	create_insn	(0X25586);
	create_insn	(0X25594);
	create_insn	(x=0X25598);
	op_hex		(x,	1);
	create_insn	(0X2559E);
	create_insn	(x=0X255A2);
	op_hex		(x,	1);
	create_insn	(x=0X255AA);
	op_hex		(x,	1);
	create_dword	(0X255BC);
	create_insn	(0X255C0);
	create_insn	(x=0X255CA);
	op_hex		(x,	1);
	create_insn	(0X255DC);
	create_insn	(x=0X255E4);
	op_stkvar	(x,	1);
	create_insn	(0X255EC);
	make_array	(0X255F6,	0X2);
	create_insn	(0X255F8);
	create_insn	(x=0X25604);
	op_hex		(x,	1);
	create_insn	(0X2560E);
	create_insn	(0X25622);
	create_insn	(x=0X25628);
	op_stkvar	(x,	1);
	create_insn	(0X25630);
	make_array	(0X25636,	0X2);
	create_insn	(x=0X25638);
	op_hex		(x,	1);
	create_insn	(x=0X25662);
	op_hex		(x,	1);
	create_insn	(0X25668);
	create_insn	(x=0X25688);
	op_hex		(x,	1);
	make_array	(0X2568E,	0X2);
	create_insn	(0X25690);
	create_insn	(0X256A8);
	create_insn	(0X256BA);
	create_insn	(0X256BE);
	create_insn	(0X256CE);
	create_insn	(0X256E2);
	create_insn	(0X256F8);
	create_insn	(x=0X25718);
	op_hex		(x,	1);
	create_insn	(x=0X25738);
	op_hex		(x,	1);
	create_insn	(x=0X25766);
	op_hex		(x,	1);
	create_insn	(x=0X25774);
	op_hex		(x,	1);
	create_insn	(x=0X25786);
	op_hex		(x,	1);
	create_insn	(0X2578C);
	create_insn	(0X257A0);
	create_insn	(x=0X257AA);
	op_hex		(x,	1);
	create_insn	(x=0X257BA);
	op_hex		(x,	1);
	create_insn	(0X257C0);
	create_insn	(0X257D0);
	create_insn	(0X257D4);
	create_insn	(0X257E6);
	create_insn	(0X257FA);
	create_insn	(x=0X257FE);
	op_hex		(x,	1);
	create_insn	(0X25838);
	create_insn	(0X2583E);
	create_insn	(x=0X2584A);
	op_hex		(x,	1);
	set_cmt	(0X2584E,	"switch 4 cases ",	0);
	create_insn	(x=0X2585C);
	op_hex		(x,	1);
	set_cmt	(0X25862,	"switch jump",	0);
	create_insn	(0X25862);
	set_cmt	(0X25866,	"jump table for switch statement",	0);
	create_byte	(0X25866);
	set_name	(0X25866,	"jpt_1B862");
	create_byte	(0X25867);
	create_byte	(0X25868);
	create_byte	(0X25869);
	set_cmt	(0X2586A,	"jumptable 00025862 cases 6,7",	1);
	create_insn	(0X2586A);
	set_cmt	(0X25874,	"jumptable 00025862 case 4",	1);
	create_insn	(0X25874);
	set_cmt	(0X25876,	"jumptable 00025862 case 5",	1);
	create_insn	(x=0X25880);
	op_hex		(x,	1);
	create_insn	(0X25886);
	create_insn	(x=0X25890);
	op_hex		(x,	1);
	create_insn	(x=0X2589C);
	op_hex		(x,	1);
	create_insn	(0X258A4);
	create_insn	(x=0X258AA);
	op_hex		(x,	1);
	create_insn	(x=0X258B6);
	op_hex		(x,	1);
	create_insn	(x=0X258EE);
	op_hex		(x,	1);
	create_insn	(x=0X25904);
	op_hex		(x,	1);
	create_insn	(0X2590E);
	create_insn	(x=0X2591E);
	op_hex		(x,	1);
	create_insn	(x=0X25930);
	op_hex		(x,	1);
	create_insn	(0X25936);
	create_insn	(0X25962);
	create_insn	(0X2596E);
	create_insn	(0X2597E);
	create_insn	(x=0X25988);
	op_hex		(x,	1);
	create_insn	(0X2598E);
	create_insn	(x=0X25992);
	op_hex		(x,	1);
	create_insn	(x=0X259AC);
	op_hex		(x,	1);
	create_insn	(x=0X259BC);
	op_hex		(x,	1);
	create_insn	(x=0X259C8);
	op_hex		(x,	1);
	create_insn	(x=0X259CE);
	op_hex		(x,	1);
	create_insn	(x=0X259D2);
	op_hex		(x,	1);
	create_insn	(x=0X259E0);
	op_hex		(x,	1);
	create_insn	(x=0X259E4);
	op_hex		(x,	1);
	create_insn	(x=0X259EC);
	op_hex		(x,	1);
	create_insn	(0X259F6);
	create_insn	(x=0X25A20);
	op_hex		(x,	1);
	create_insn	(x=0X25A26);
	op_hex		(x,	1);
	create_insn	(x=0X25A2A);
	op_hex		(x,	1);
	create_insn	(x=0X25A34);
	op_hex		(x,	1);
	create_insn	(0X25A3E);
	create_insn	(x=0X25A48);
	op_hex		(x,	1);
	create_insn	(0X25A52);
	create_insn	(x=0X25A5C);
	op_hex		(x,	1);
	create_insn	(x=0X25A76);
	op_hex		(x,	1);
	create_insn	(x=0X25A7C);
	op_hex		(x,	1);
	create_insn	(x=0X25A80);
	op_hex		(x,	1);
	create_insn	(x=0X25A86);
	op_hex		(x,	1);
	create_insn	(0X25A8C);
	create_insn	(x=0X25A94);
	op_hex		(x,	1);
	create_insn	(0X25A9E);
	create_insn	(0X25AA2);
	create_insn	(0X25AA6);
	create_insn	(x=0X25AAA);
	op_hex		(x,	1);
	create_insn	(x=0X25AB0);
	op_hex		(x,	1);
	create_insn	(0X25ABE);
	create_insn	(x=0X25AC6);
	op_hex		(x,	1);
	create_insn	(0X25AD4);
	make_array	(0X25ADA,	0X2);
	create_dword	(0X25ADC);
	make_array	(0X25ADC,	0X31);
	MakeStruct	(0X25E64,	"OfdmInitInstr");
	make_array	(0X25E64,	0XC4F);
	set_name	(0X25E64,	"ofdm_init_list_2");
	MakeStruct	(0X28FA0,	"OfdmInitInstr");
	make_array	(0X28FA0,	0X247);
	set_name	(0X28FA0,	"ofdm_init_list_4");
	MakeStruct	(0X298BC,	"OfdmInitInstr");
	make_array	(0X298BC,	0X19);
	set_name	(0X298BC,	"ofdm_init_list_1");
	create_strlit	(0X29C05,	0X29C28);
	create_byte	(0X2A204);
	create_word	(0X2A206);
	create_word	(0X2A208);
	make_array	(0X2A20A,	0X2);
	create_dword	(x=0X2A20C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X2A210);
	create_dword	(0X2A214);
	create_dword	(x=0X2A21C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X2A220);
	create_dword	(x=0X2A22C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X2A234);
	create_dword	(x=0X2A238);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X2A23C);
	create_dword	(0X2A240);
	create_byte	(0X2A6E1);
	create_dword	(x=0X2A770);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X2A774);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X2A778);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X2A77C,	0X4);
	create_strlit	(0X2AB08,	0X2AB1C);
	set_name	(0X2AB08,	"a0123456789abcd");
	create_strlit	(0X2AB1C,	0X2AB30);
	set_name	(0X2AB1C,	"a0123456789abcd_0");
	create_dword	(0X2AC80);
	make_array	(0X2AC84,	0X4);
	create_byte	(0X10000000);
	create_byte	(0X10000001);
	create_byte	(0X10000002);
	create_byte	(0X10000003);
	create_byte	(0X10000004);
	create_byte	(0X10000005);
	create_byte	(0X10000006);
	create_byte	(0X10000007);
	create_byte	(0X10000008);
	create_byte	(0X10000009);
	create_byte	(0X1000000A);
	create_byte	(0X1000000B);
	create_word	(0X1000000C);
	create_byte	(0X1000000E);
	create_byte	(0X1000000F);
	create_dword	(0X10000010);
	create_dword	(0X10000014);
	create_dword	(0X10000018);
	create_dword	(0X1000001C);
	create_byte	(0X10000020);
	create_dword	(0X10000021);
	create_dword	(0X10000025);
	create_byte	(0X10000029);
	create_byte	(0X1000002A);
	create_word	(0X1000002C);
	make_array	(0X1000002E,	0X2);
	create_dword	(0X10000030);
	create_byte	(0X10000034);
	make_array	(0X10000035,	0X3);
	create_dword	(0X10000038);
	create_byte	(0X1000003C);
	create_byte	(0X1000003D);
	create_byte	(0X1000003E);
	create_byte	(0X1000003F);
	create_byte	(0X10000040);
	make_array	(0X10000041,	0X7);
	create_byte	(0X10000050);
	create_byte	(0X10000051);
	create_byte	(0X10000052);
	create_byte	(0X10000053);
	create_byte	(0X10000054);
	create_byte	(0X10000055);
	create_byte	(0X10000056);
	create_byte	(0X10000057);
	create_byte	(0X10000058);
	create_byte	(0X10000059);
	create_byte	(0X1000005A);
	create_byte	(0X1000005B);
	create_byte	(0X1000005C);
	create_byte	(0X1000005D);
	create_byte	(0X1000005E);
	create_byte	(0X1000005F);
	create_byte	(0X10000060);
	create_byte	(0X10000061);
	create_byte	(0X10000062);
	create_byte	(0X10000063);
	create_byte	(0X10000064);
	create_byte	(0X10000065);
	create_byte	(0X10000066);
	create_byte	(0X10000067);
	create_byte	(0X10000068);
	create_byte	(0X10000069);
	create_byte	(0X1000006A);
	create_byte	(0X1000006B);
	create_byte	(0X1000006C);
	create_byte	(0X1000006D);
	create_byte	(0X1000006E);
	create_byte	(0X1000006F);
	create_byte	(0X10000070);
	create_byte	(0X10000071);
	create_word	(0X10000072);
	create_byte	(0X10000075);
	create_byte	(0X10000076);
	create_dword	(0X10000078);
	create_dword	(0X1000007C);
	create_dword	(0X10000080);
	create_dword	(0X10000084);
	create_dword	(0X10000088);
	create_dword	(0X1000008C);
	create_dword	(0X10000090);
	create_dword	(0X10000094);
	create_dword	(0X10000098);
	create_dword	(0X1000009C);
	create_dword	(0X100000A0);
	create_dword	(0X100000A4);
	create_dword	(0X100000A8);
	create_byte	(0X100000AC);
	create_byte	(0X100000AD);
	create_byte	(0X100000AE);
	create_byte	(0X100000AF);
	create_byte	(0X100000B0);
	create_byte	(0X100000B1);
	create_byte	(0X100000B2);
	make_array	(0X100000B3,	0X5);
	create_byte	(0X100000B8);
	create_byte	(0X100000B9);
	create_byte	(0X100000BA);
	create_byte	(0X100000BB);
	create_byte	(0X100000BC);
	create_byte	(0X100000BD);
	create_byte	(0X100000BE);
	create_byte	(0X100000BF);
	create_byte	(0X100000C0);
	create_byte	(0X100000C1);
	create_byte	(0X100000C2);
	create_byte	(0X100000C3);
	create_byte	(0X100000C4);
	create_byte	(0X100000C5);
	create_byte	(0X100000C6);
	create_byte	(0X100000C7);
	create_byte	(0X100000C8);
	create_byte	(0X100000C9);
	create_byte	(0X100000CA);
	create_byte	(0X100000CB);
	create_byte	(0X100000CC);
	create_byte	(0X100000CD);
	create_byte	(0X100000CE);
	create_byte	(0X100000CF);
	create_byte	(0X100000D0);
	create_byte	(0X100000D1);
	create_byte	(0X100000D2);
	create_byte	(0X100000D3);
	create_byte	(0X100000D4);
	create_byte	(0X100000D5);
	create_byte	(0X100000D6);
	create_byte	(0X100000D7);
	create_byte	(0X100000D8);
	create_byte	(0X100000D9);
	create_byte	(0X100000DA);
	create_byte	(0X100000DB);
	create_byte	(0X100000DC);
	create_byte	(0X100000DD);
	create_byte	(0X100000DE);
	create_byte	(0X100000DF);
	create_byte	(0X100000E0);
	create_word	(0X100000E2);
	create_word	(0X100000E4);
	create_word	(0X100000E6);
	create_word	(0X100000E8);
	create_word	(0X100000EA);
	create_word	(0X100000EC);
	create_word	(0X100000EE);
	create_word	(0X100000F0);
	create_word	(0X100000F2);
	create_word	(0X100000F4);
	create_word	(0X100000F6);
	create_word	(0X100000F8);
	create_word	(0X100000FA);
	create_word	(0X100000FC);
	make_array	(0X100000FE,	0X2);
	create_dword	(0X10000100);
	create_dword	(0X10000104);
	create_dword	(0X10000108);
	create_dword	(0X1000010C);
	create_dword	(0X10000110);
	create_dword	(0X10000114);
	make_array	(0X10000118,	0X28);
	create_dword	(0X10000150);
	create_byte	(0X10000154);
	create_word	(0X10000156);
	create_byte	(0X10000158);
	create_byte	(0X10000159);
	create_byte	(0X1000015A);
	create_word	(0X1000015B);
	create_word	(0X1000015D);
	create_byte	(0X1000015F);
	create_byte	(0X10000160);
	create_byte	(0X10000161);
	create_byte	(0X10000162);
	create_byte	(0X10000163);
	create_byte	(0X10000164);
	create_byte	(0X10000165);
	create_byte	(0X10000166);
	create_byte	(0X10000167);
	create_byte	(0X10000168);
	create_byte	(0X10000169);
	create_byte	(0X1000016A);
	create_byte	(0X1000016B);
	create_byte	(0X1000016C);
	create_byte	(0X1000016D);
	create_byte	(0X1000016E);
	create_word	(0X10000170);
	create_word	(0X10000172);
	create_word	(0X10000174);
	create_word	(0X10000176);
	create_word	(0X10000178);
	create_word	(0X1000017A);
	create_word	(0X1000017C);
	create_word	(0X1000017E);
	create_word	(0X10000180);
	create_word	(0X10000182);
	create_word	(0X10000184);
	create_word	(0X10000186);
	create_dword	(0X10000188);
	create_dword	(0X1000018C);
	create_byte	(0X1000019A);
	create_dword	(0X1000019E);
	create_word	(0X100001A2);
	create_dword	(0X100001A4);
	create_word	(0X100001A8);
	create_dword	(0X100001AA);
	create_word	(0X100001AE);
	create_dword	(0X100001B0);
	create_word	(0X100001B4);
	create_dword	(0X100001B6);
	create_word	(0X100001BA);
	create_word	(0X100001BC);
	create_word	(0X100001BE);
	create_word	(0X100001C0);
	create_word	(0X100001C2);
	create_word	(0X100001C4);
	create_word	(0X100001C6);
	create_word	(0X100001C8);
	create_word	(0X100001CA);
	create_word	(0X100001CC);
	create_word	(0X100001CE);
	create_word	(0X100001D0);
	create_word	(0X100001D2);
	create_word	(0X100001D4);
	create_word	(0X100001D6);
	create_word	(0X100001D8);
	create_word	(0X100001DA);
	create_word	(0X100001DC);
	create_word	(0X100001DE);
	create_word	(0X100001E0);
	create_word	(0X100001E2);
	create_word	(0X100001E4);
	make_array	(0X100001E6,	0X2);
	create_byte	(0X100001E8);
	create_byte	(0X100001E9);
	create_byte	(0X100001EA);
	create_byte	(0X100001EB);
	create_byte	(0X100001EC);
	create_byte	(0X100001ED);
	create_dword	(0X100001F0);
	create_dword	(0X100001F4);
	create_dword	(0X100001F8);
	create_dword	(0X100001FC);
	create_byte	(0X10000200);
	make_array	(0X10000201,	0X3);
	create_byte	(0X10000204);
	create_byte	(0X10000205);
	create_byte	(0X10000206);
	create_byte	(0X10000207);
	create_byte	(0X10000208);
	create_byte	(0X10000209);
	create_byte	(0X1000020A);
	create_byte	(0X1000020B);
	create_byte	(0X1000020C);
	create_byte	(0X1000020D);
	create_byte	(0X1000020E);
	create_byte	(0X1000020F);
	create_byte	(0X10000210);
	create_byte	(0X10000211);
	create_byte	(0X10000212);
	create_byte	(0X10000213);
	create_byte	(0X10000214);
	create_byte	(0X10000215);
	create_byte	(0X10000216);
	create_byte	(0X10000217);
	create_byte	(0X10000218);
	create_byte	(0X10000219);
	create_byte	(0X1000021A);
	create_byte	(0X1000021B);
	create_byte	(0X1000021C);
	create_dword	(0X1000021D);
	create_byte	(0X10000225);
	create_dword	(0X10000226);
	create_byte	(0X1000022A);
	create_dword	(0X10000232);
	create_word	(0X10000236);
	create_byte	(0X10000238);
	make_array	(0X10000239,	0X3);
	create_byte	(0X10000254);
	create_byte	(0X10000255);
	create_byte	(0X10000256);
	create_byte	(0X10000257);
	create_byte	(0X10000258);
	create_byte	(0X10000259);
	create_byte	(0X1000025A);
	create_byte	(0X1000025B);
	create_byte	(0X1000025C);
	create_byte	(0X1000025D);
	create_byte	(0X1000025E);
	create_byte	(0X10000260);
	create_byte	(0X10000261);
	create_byte	(0X10000262);
	create_byte	(0X10000263);
	create_byte	(0X10000264);
	create_byte	(0X10000265);
	create_byte	(0X10000266);
	create_byte	(0X10000267);
	create_byte	(0X10000268);
	create_byte	(0X10000269);
	create_byte	(0X1000026A);
	create_byte	(0X1000026B);
	create_word	(0X1000026C);
	create_word	(0X1000026E);
	create_word	(0X10000270);
	create_word	(0X10000272);
	create_word	(0X10000274);
	create_word	(0X10000276);
	create_word	(0X10000278);
	create_word	(0X1000027A);
	create_word	(0X1000027C);
	create_word	(0X1000027E);
	create_byte	(0X100002F0);
	make_array	(0X100002F1,	0XF);
	create_byte	(0X10000300);
	create_byte	(0X10000301);
	create_byte	(0X10000302);
	create_byte	(0X10000303);
	create_byte	(0X10000304);
	create_byte	(0X10000305);
	create_byte	(0X10000306);
	create_byte	(0X10000307);
	create_byte	(0X10000308);
	create_byte	(0X10000309);
	create_byte	(0X1000030A);
	create_byte	(0X1000030B);
	create_byte	(0X1000030C);
	create_byte	(0X1000030D);
	create_byte	(0X1000030E);
	create_byte	(0X1000030F);
	create_byte	(0X10000310);
	set_name	(0X10000310,	"active_transciever_attenuation");
	create_byte	(0X10000311);
	create_byte	(0X10000312);
	set_name	(0X10000312,	"fpga_reg_unkn15_value");
	create_byte	(0X10000313);
	create_word	(0X10000316);
	create_word	(0X10000318);
	create_word	(0X1000031A);
	create_dword	(0X1000031C);
	create_dword	(0X10000320);
	create_dword	(0X10000324);
	create_dword	(0X10000328);
	create_dword	(0X1000032C);
	create_dword	(0X10000330);
	create_byte	(0X10000334);
	create_byte	(0X10000335);
	create_byte	(0X10000336);
	create_byte	(0X10000337);
	create_dword	(0X10000338);
	create_dword	(0X1000033C);
	create_word	(0X10000460);
	create_word	(0X10000462);
	create_word	(0X10000464);
	create_word	(0X10000466);
	create_word	(0X10000468);
	create_byte	(0X1000046A);
	create_byte	(0X1000046B);
	create_byte	(0X1000046C);
	create_dword	(0X1000046D);
	create_dword	(0X10000471);
	make_array	(0X10000475,	0X3);
	create_dword	(0X10000478);
	create_dword	(0X1000047C);
	create_dword	(0X10000480);
	create_dword	(0X10000484);
	create_byte	(0X10000488);
	create_byte	(0X10000489);
	make_array	(0X1000048A,	0X2);
	create_dword	(0X1000048C);
	create_word	(0X10000490);
	create_word	(0X10000492);
	create_byte	(0X10000494);
	create_byte	(0X10000495);
	make_array	(0X10000496,	0X2);
	create_dword	(0X10000498);
	create_dword	(0X1000049C);
	create_dword	(0X100004A0);
	create_byte	(0X100004A4);
	make_array	(0X100004A5,	0X3);
	create_dword	(0X100004A8);
	create_word	(0X100004AC);
	make_array	(0X100004AE,	0X2);
	create_dword	(0X100004B0);
	create_dword	(0X100004B4);
	create_word	(0X100004B8);
	make_array	(0X100004BA,	0X2);
	create_dword	(0X100004BC);
	create_dword	(0X100004C0);
	create_dword	(0X100004C4);
	create_dword	(0X100004C8);
	create_word	(0X100004CC);
	create_word	(0X100004CE);
	create_dword	(0X100004D0);
	create_dword	(0X100004D4);
	create_dword	(0X100004D8);
	create_dword	(0X100004DC);
	create_dword	(0X100004E0);
	create_dword	(0X100004E4);
	create_word	(0X100004E8);
	create_word	(0X100004EA);
	create_word	(0X100004EC);
	make_array	(0X100004EE,	0X2);
	create_dword	(0X100004F0);
	create_dword	(0X100004F4);
	create_dword	(0X100004F8);
	create_dword	(0X100004FC);
	create_byte	(0X10000500);
	create_byte	(0X10000501);
	create_byte	(0X10000502);
	create_byte	(0X10000504);
	create_byte	(0X10000505);
	make_array	(0X10000506,	0X2);
	create_dword	(0X10000508);
	create_dword	(0X1000050C);
	create_dword	(0X10000510);
	create_dword	(0X10000514);
	create_dword	(0X10000518);
	create_byte	(0X10000521);
	make_array	(0X10000522,	0X2);
	create_byte	(0X10000524);
	create_byte	(0X10000525);
	create_byte	(0X10000526);
	create_byte	(0X10000527);
	create_word	(0X10000528);
	make_array	(0X1000052A,	0X6);
	create_dword	(0X10000530);
	create_dword	(0X10000534);
	create_dword	(0X10000538);
	create_dword	(0X1000053C);
	create_word	(0X10000540);
	make_array	(0X10000542,	0X2);
	create_byte	(0X10000544);
	create_byte	(0X10000545);
	create_word	(0X10000546);
	create_byte	(0X10000548);
	create_word	(0X1000054A);
	create_byte	(0X1000055E);
	create_byte	(0X1000055F);
	create_word	(0X10000560);
	create_byte	(0X10000562);
	create_byte	(0X10000563);
	create_byte	(0X10000565);
	create_dword	(0X100005AC);
	create_dword	(0X100005B0);
	create_dword	(0X100005B4);
	create_byte	(0X100005B8);
	create_byte	(0X100005B9);
	make_array	(0X100005BA,	0X2);
	create_byte	(0X100005CC);
	create_dword	(0X100005CD);
	create_byte	(0X100005D1);
	create_byte	(0X100005D2);
	create_dword	(0X100005D3);
	create_word	(0X100005D7);
	create_word	(0X100005D9);
	create_byte	(0X100005DB);
	create_dword	(0X100005DC);
	create_dword	(0X100005E0);
	create_word	(0X100005E4);
	create_word	(0X100005E6);
	create_byte	(0X100005E8);
	create_byte	(0X100005E9);
	create_byte	(0X100005EA);
	create_byte	(0X100005EB);
	create_byte	(0X1000062E);
	create_byte	(0X1000062F);
	create_byte	(0X10000630);
	create_dword	(0X10000631);
	create_byte	(0X10000635);
	create_byte	(0X10000636);
	create_byte	(0X10000637);
	create_byte	(0X10000638);
	create_byte	(0X10000639);
	create_byte	(0X1000063A);
	create_byte	(0X1000063B);
	create_byte	(0X1000063C);
	create_byte	(0X1000063D);
	create_dword	(0X1000063E);
	create_byte	(0X10000642);
	create_byte	(0X10000643);
	create_byte	(0X10000644);
	create_dword	(0X100006C7);
	create_byte	(0X100006CE);
	create_byte	(0X100006CF);
	create_dword	(0X100026F0);
	create_dword	(0X100026F4);
	create_dword	(0X100026F8);
	create_byte	(0X100026FC);
	create_byte	(0X10002708);
	create_byte	(0X10002709);
	create_byte	(0X1000270A);
	create_dword	(0X1000270D);
	create_dword	(0X10002711);
	create_word	(0X10002715);
	create_byte	(0X10002717);
	create_byte	(0X10002733);
	create_byte	(0X10002734);
	create_byte	(0X10002735);
	create_byte	(0X10002736);
	create_byte	(0X10002737);
	create_dword	(0X10002738);
	create_dword	(0X1000273C);
	create_word	(0X10002740);
	create_dword	(0X10002772);
	create_dword	(0X10002776);
	create_byte	(0X1000277A);
	create_byte	(0X1000277B);
	create_byte	(0X1000277C);
	create_byte	(0X1000277D);
	create_byte	(0X1000277E);
	create_byte	(0X1000277F);
	create_byte	(0X10002780);
	create_byte	(0X10002781);
	create_byte	(0X10002782);
	create_byte	(0X10002783);
	create_byte	(0X10002784);
	create_byte	(0X10002785);
	create_byte	(0X10002786);
	create_byte	(0X10002787);
	create_byte	(0X10002788);
	create_byte	(0X100027E2);
	create_byte	(0X100027F2);
	create_dword	(0X10002A08);
	create_dword	(0X10002A0C);
	create_dword	(0X10002A18);
	create_dword	(0X10002A1C);
	create_dword	(0X10002C2C);
	create_dword	(0X10002C30);
	create_dword	(0X10002C3C);
	create_dword	(0X10002C40);
	create_dword	(0X10002E50);
	create_dword	(0X10002E54);
	make_array	(0X10002E58,	0X8);
	create_dword	(0X10002E60);
	create_dword	(0X10002E64);
	create_dword	(0X10002F74);
	create_dword	(0X10002F78);
	create_dword	(0X10002F84);
	create_dword	(0X10002F88);
	create_dword	(0X10003198);
	create_dword	(0X1000319C);
	create_dword	(0X100031A8);
	create_dword	(0X100031AC);
	create_byte	(0X100031BC);
	create_byte	(0X100031BE);
	create_byte	(0X100031BF);
	create_byte	(0X100031C0);
	create_byte	(0X100031C1);
	create_word	(0X100031C2);
	create_dword	(0X10003350);
	create_dword	(0X10003354);
	make_array	(0X10003358,	0X8);
	create_dword	(0X10003360);
	create_dword	(0X10003364);
	create_dword	(0X10003574);
	create_dword	(0X10003578);
	create_dword	(0X10003584);
	create_dword	(0X10003590);
	make_array	(0X10003594,	0X4);
	create_byte	(0X10003598);
	create_dword	(0X10003599);
	create_dword	(0X1000359D);
	create_word	(0X100035A1);
	create_byte	(0X100035A3);
	create_dword	(0X100035A4);
	create_byte	(0X100035C8);
	create_byte	(0X100035C9);
	create_byte	(0X10003900);
	create_byte	(0X10003972);
	make_array	(0X10003973,	0X8D);
	create_byte	(0X10003A00);
	make_array	(0X10003A01,	0XFF);
	create_byte	(0X10003B00);
	create_byte	(0X10003B73);
	create_dword	(0X10003C00);
	create_dword	(0X10003C04);
	create_word	(0X10003C08);
	create_dword	(0X10003C0A);
	create_dword	(0X10003C0E);
	create_word	(0X10003C12);
	create_word	(0X10003CC8);
	create_word	(0X10003CCA);
	create_word	(0X10003CCC);
	create_word	(0X10003CCE);
	create_word	(0X10003CD0);
	create_word	(0X10003CD2);
	create_word	(0X10003CD4);
	create_word	(0X10003CD6);
	create_word	(0X10003CD8);
	create_byte	(0X10003CDA);
	create_byte	(0X10003CDB);
	create_word	(0X10003CDC);
	create_word	(0X10003CDE);
	create_word	(0X10003CE0);
	create_word	(0X10003CE2);
	create_word	(0X10003CE4);
	make_array	(0X10003CE6,	0X2);
	create_byte	(0X10003D53);
	create_byte	(0X10003D8C);
	create_byte	(0X10003D8D);
	create_byte	(0X10003D8E);
	create_byte	(0X10003DA5);
	create_byte	(0X10003DA6);
	create_byte	(0X10003DA7);
	create_byte	(0X10003DDE);
	create_byte	(0X10003DDF);
	create_dword	(0X10003EFA);
	create_word	(0X10003EFE);
	create_word	(0X10003F00);
	create_byte	(0X10003F02);
	create_byte	(0X10003F03);
	create_byte	(0X10003F04);
	create_byte	(0X10003F05);
	create_byte	(0X10003F06);
	create_dword	(0X10003F07);
	create_dword	(0X10003F0B);
	create_word	(0X10003F0F);
	create_word	(0X10003F11);
	create_word	(0X10003F13);
	create_word	(0X10003F15);
	create_byte	(0X10003F17);
	create_word	(0X10003F18);
	create_dword	(0X10003F8C);
	create_word	(0X10003F90);
	create_word	(0X10003F92);
	create_word	(0X10003F94);
	create_word	(0X10003F96);
	create_word	(0X10003F98);
	create_byte	(0X10003F9A);
	create_byte	(0X10003F9B);
	create_word	(0X10003F9C);
	make_array	(0X10003F9E,	0X2);
	create_byte	(0X10004018);
	create_byte	(0X10004019);
	create_byte	(0X1000411A);
	create_byte	(0X1000411B);
	create_word	(0X100042BC);
	create_byte	(0X100042CE);
	create_dword	(0X100042D0);
	set_name	(0X100042D0,	"ofdm_receiver_id");
	create_byte	(0X100042D4);
	create_dword	(0X100042D5);
	make_array	(0X100042D9,	0X3);
	create_dword	(0X100042DC);
	set_name	(0X100042DC,	"transceiver_flags_1A28");
	create_dword	(0X100042E0);
	create_byte	(0X1000431C);
	make_array	(0X1000431D,	0X3);
	create_dword	(0X10004320);
	create_byte	(0X10004324);
	create_byte	(0X10004325);
	make_array	(0X10004326,	0X2);
	create_dword	(0X10004328);
	create_byte	(0X1000432C);
	create_byte	(0X1000432D);
	create_byte	(0X1000432E);
	create_byte	(0X1000432F);
	create_dword	(0X10004330);
	create_byte	(0X10004334);
	create_byte	(0X10004335);
	create_byte	(0X10004336);
	create_byte	(0X10004337);
	create_dword	(0X10004338);
	create_byte	(0X1000433C);
	set_name	(0X1000433C,	"transciever_attenuation");
	create_byte	(0X1000433D);
	set_name	(0X1000433D,	"tcx_control_attenuation_by_packet");
	create_byte	(0X1000433E);
	create_dword	(0X10004340);
	set_name	(0X10004340,	"tcx_dword_33C0");
	create_byte	(0X10004344);
	create_byte	(0X10004345);
	create_byte	(0X10004346);
	create_byte	(0X10004347);
	create_byte	(0X10004348);
	create_byte	(0X10004349);
	create_byte	(0X1000434A);
	create_byte	(0X1000434B);
	create_byte	(0X1000434C);
	create_byte	(0X1000434D);
	create_byte	(0X1000434E);
	create_byte	(0X1000434F);
	create_byte	(0X10004350);
	create_byte	(0X10004351);
	create_byte	(0X10004352);
	create_byte	(0X10004353);
	create_byte	(0X10004354);
	create_byte	(0X10004355);
	create_byte	(0X10004356);
	create_byte	(0X10004357);
	create_byte	(0X10004358);
	create_byte	(0X10004359);
	create_byte	(0X1000435A);
	create_byte	(0X1000435B);
	create_byte	(0X1000435C);
	create_byte	(0X100043DD);
	create_byte	(0X100044C9);
	create_byte	(0X100044FD);
	create_byte	(0X1000451E);
	create_byte	(0X1000451F);
	create_byte	(0X100045FE);
	create_dword	(0X10004614);
	create_dword	(0X10004618);
	create_dword	(0X1000461C);
	create_dword	(0X10004620);
	create_dword	(0X10004624);
	create_dword	(0X10004628);
	create_byte	(0X1000462C);
	make_array	(0X1000462D,	0X3);
	create_dword	(0X10004630);
	create_dword	(0X10004634);
	create_dword	(0X10004638);
	create_byte	(0X1000463C);
	make_array	(0X1000463D,	0X3);
	create_dword	(0X10004640);
	create_byte	(0X10004644);
	make_array	(0X10004645,	0X3);
	create_dword	(0X10004648);
	create_byte	(0X1000464C);
	make_array	(0X1000464D,	0X3);
	create_dword	(0X10004650);
	create_byte	(0X10004654);
	make_array	(0X10004655,	0X3);
	create_dword	(0X10004658);
	create_byte	(0X1000465C);
	make_array	(0X1000465D,	0X3);
	create_byte	(0X10004660);
	create_byte	(0X10004661);
	create_word	(0X10004662);
	create_byte	(0X10004664);
	create_byte	(0X10004665);
	create_word	(0X10004666);
	create_byte	(0X10004668);
	create_byte	(0X10004669);
	create_word	(0X1000466A);
	create_dword	(0X100046A0);
	create_dword	(0X100046A4);
	create_dword	(0X100046A8);
	create_dword	(0X100046AC);
	create_byte	(0X10005944);
	create_byte	(0X10005945);
	create_byte	(0X10005946);
	create_byte	(0X10005947);
	create_byte	(0X10005948);
	create_byte	(0X10005949);
	create_byte	(0X1000594A);
	create_byte	(0X1000594B);
	create_byte	(0X1000594C);
	create_byte	(0X1000594D);
	create_byte	(0X1000594E);
	create_byte	(0X1000594F);
	create_byte	(0X10005950);
	create_byte	(0X10005951);
	create_byte	(0X10005952);
	create_byte	(0X10005953);
	create_byte	(0X10005954);
	create_byte	(0X10005955);
	create_byte	(0X10005956);
	create_byte	(0X10005957);
	create_byte	(0X10005958);
	create_byte	(0X10005959);
	create_byte	(0X1000595A);
	create_byte	(0X1000595B);
	create_byte	(0X1000595C);
	create_byte	(0X1000595D);
	create_byte	(0X1000595E);
	create_byte	(0X1000595F);
	create_byte	(0X10005960);
	create_byte	(0X10005961);
	create_byte	(0X10005962);
	create_byte	(0X10005963);
	create_byte	(0X10005964);
	create_byte	(0X10005965);
	create_byte	(0X10005966);
	create_byte	(0X10005967);
	create_byte	(0X10005968);
	create_byte	(0X10005969);
	create_byte	(0X1000596A);
	create_byte	(0X1000596B);
	create_byte	(0X1000596C);
	create_byte	(0X1000596D);
	create_byte	(0X1000596E);
	create_byte	(0X1000596F);
	create_byte	(0X10005970);
	create_byte	(0X10005971);
	create_dword	(0X1000598E);
	create_dword	(0X10005992);
	create_dword	(0X10005996);
	create_byte	(0X1000599A);
	create_byte	(0X1000599B);
	create_byte	(0X1000599C);
	create_byte	(0X1000599D);
	create_byte	(0X1000599E);
	create_dword	(0X1000599F);
	create_word	(0X100059A4);
	create_byte	(0X100059A6);
	create_dword	(0X100059AD);
	create_dword	(0X100059B1);
	create_dword	(0X100059B5);
	create_byte	(0X100059B9);
	create_word	(0X100059BA);
	create_byte	(0X100059BC);
	create_byte	(0X100059BD);
	create_byte	(0X100059BE);
	create_byte	(0X100059BF);
	create_byte	(0X100059C0);
	make_array	(0X100059C1,	0X3F);
	create_dword	(0X10005A80);
	create_dword	(0X10005A84);
	create_dword	(0X10005C88);
	create_dword	(0X10005C8C);
	create_dword	(0X10005F90);
	create_dword	(0X10005F9C);
	create_dword	(0X10005FA0);
	create_dword	(0X10005FA4);
	create_dword	(0X10005FB8);
	create_dword	(0X10005FC8);
	create_dword	(0X100060B8);
	create_dword	(0X100060BC);
	create_dword	(0X100060C0);
	make_array	(0X100060C4,	0X4);
	create_dword	(0X100060C8);
	create_dword	(0X100060CC);
	create_dword	(0X100060D0);
	create_dword	(0X10006258);
	create_dword	(0X1000625C);
	create_dword	(0X10006260);
	create_dword	(0X10006264);
	create_dword	(0X10006268);
	create_dword	(0X1000626C);
	create_dword	(0X10006270);
	make_array	(0X10006274,	0X4);
	create_dword	(0X10006278);
	create_dword	(0X1000627C);
	create_dword	(0X10006280);
	create_dword	(0X10006284);
	create_dword	(0X100064C8);
	create_dword	(0X100064CC);
	create_dword	(0X100064D0);
	create_dword	(0X100064D4);
	create_dword	(0X100066D8);
	create_dword	(0X100066DC);
	create_dword	(0X100066E0);
	create_dword	(0X100066E4);
	create_dword	(0X100066E8);
	create_dword	(0X100066EC);
	create_dword	(0X100066F0);
	create_dword	(0X100066F4);
	create_dword	(0X100069F8);
	create_dword	(0X100069FC);
	create_dword	(0X10006A00);
	make_array	(0X10006A04,	0X4);
	create_dword	(0X10006A08);
	create_dword	(0X10006A0C);
	create_dword	(0X10006A10);
	create_dword	(0X10006A14);
	create_byte	(0X10006E18);
	create_dword	(0X10007F70);
	create_dword	(0X10007F74);
	make_array	(0X10007F78,	0X88);
	create_byte	(0X40000000);
	make_array	(0X40000001,	0X3);
	create_dword	(0X40000004);
	create_byte	(0X40000008);
	make_array	(0X40000009,	0X3);
	create_dword	(0X4000000C);
	create_dword	(0X40000010);
	create_dword	(0X40004000);
	create_dword	(0X40004004);
	create_dword	(0X40004008);
	create_dword	(0X4000400C);
	create_dword	(0X40004014);
	create_dword	(0X40004018);
	create_dword	(0X4000401C);
	create_dword	(0X40004020);
	create_dword	(0X40004070);
	create_dword	(0X40008000);
	create_dword	(0X40008004);
	create_dword	(0X40008008);
	create_dword	(0X4000800C);
	create_dword	(0X40008014);
	create_dword	(0X40008018);
	create_dword	(0X4000801C);
	create_dword	(0X40008020);
	create_dword	(0X40008024);
	create_dword	(0X40008070);
	create_byte	(0X4000C000);
	make_array	(0X4000C001,	0X3);
	create_dword	(0X4000C004);
	create_dword	(0X4000C008);
	create_byte	(0X4000C00C);
	create_byte	(0X4000C014);
	create_byte	(0X4000C028);
	create_byte	(0X40010000);
	make_array	(0X40010001,	0X3);
	create_dword	(0X40010004);
	create_dword	(0X40010008);
	create_byte	(0X4001000C);
	create_byte	(0X40010014);
	create_dword	(0X40010028);
	create_dword	(0X40020000);
	create_dword	(0X40020004);
	create_dword	(0X40020008);
	create_dword	(0X4002000C);
	create_dword	(0X400280AC);
	create_dword	(0X400280B4);
	create_dword	(0X4002C000);
	create_dword	(0X4002C004);
	create_dword	(0X4002C00C);
	create_dword	(0X4002C010);
	make_array	(0X4002C014,	0X2C);
	create_dword	(0X4002C040);
	create_dword	(0X40038000);
	create_dword	(0X4003C000);
	create_dword	(0X4003C004);
	create_dword	(0X4003C008);
	create_dword	(0X4003C00C);
	create_dword	(0X4003C010);
	create_dword	(0X4003C014);
	create_dword	(0X40044000);
	create_dword	(0X40044004);
	create_dword	(0X40044008);
	create_dword	(0X4004400C);
	create_dword	(0X40044010);
	create_dword	(0XE0001000);
	create_dword	(0XE0001004);
	create_dword	(0XE000E004);
	make_array	(0XE000E008,	0X8);
	create_dword	(0XE000E010);
	create_dword	(0XE000E014);
	create_dword	(0XE000ED04);
	make_array	(0XE000ED08,	0X8);
	create_dword	(0XE000ED10);
	make_array	(0XE000ED14,	0X4);
	create_dword	(0XE000ED18);
	create_dword	(0XE000ED1C);
	create_dword	(0XE000ED20);
	create_dword	(0XE000ED24);
	create_dword	(0XE000EDFC);
	make_array	(0XE000EE00,	0X1200);
}

static Functions_0(void) {

	add_func    (0XA180,0XA210);
	set_func_flags(0XA180,0x400);
	add_func    (0XA210,0XA230);
	set_func_flags(0XA210,0x400);
	set_frame_size(0XA210, 0X18, 0, 0);
	add_func    (0XA230,0XA234);
	set_func_flags(0XA230,0x400);
	set_frame_size(0XA230, 0X8, 0, 0);
	add_func    (0XA248,0XA254);
	set_func_flags(0XA248,0x401);
	set_frame_size(0XA248, 0X8, 0, 0);
	add_func    (0XA254,0XA28A);
	set_func_flags(0XA254,0x400);
	set_frame_size(0XA254, 0X80, 0, 0);
	add_func    (0XA28A,0XA396);
	set_func_flags(0XA28A,0x400);
	set_frame_size(0XA28A, 0X18, 0, 0);
	add_func    (0XA396,0XA596);
	set_func_flags(0XA396,0x400);
	set_frame_size(0XA396, 0X38, 0, 0);
	add_func    (0XA9BE,0XAA40);
	set_func_flags(0XA9BE,0x400);
	set_frame_size(0XA9BE, 0X10, 0, 0);
	add_func    (0XAA40,0XAA48);
	set_func_flags(0XAA40,0x400);
	add_func    (0XAA48,0XAB24);
	set_func_flags(0XAA48,0x400);
	set_frame_size(0XAA48, 0X8, 0, 0);
	add_func    (0XAB24,0XAB6C);
	set_func_flags(0XAB24,0x400);
	set_frame_size(0XAB24, 0X8, 0, 0);
	add_func    (0XB230,0XB348);
	set_func_flags(0XB230,0x400);
	set_frame_size(0XB230, 0X40, 0, 0);
	add_func    (0XB364,0XB398);
	set_func_flags(0XB364,0x400);
	add_func    (0XB398,0XB3CC);
	set_func_flags(0XB398,0x400);
	add_func    (0XB3CC,0XB400);
	set_func_flags(0XB3CC,0x400);
	add_func    (0XB400,0XB414);
	set_func_flags(0XB400,0x400);
	add_func    (0XB414,0XB428);
	set_func_flags(0XB414,0x400);
	add_func    (0XB428,0XB43C);
	set_func_flags(0XB428,0x400);
	add_func    (0XB43C,0XB47C);
	set_func_flags(0XB43C,0x400);
	add_func    (0XB47C,0XB4F2);
	set_func_flags(0XB47C,0x400);
	set_frame_size(0XB47C, 0XC, 0, 0);
	add_func    (0XB4F2,0XB604);
	set_func_flags(0XB4F2,0x400);
	set_frame_size(0XB4F2, 0X10, 0, 0);
	add_func    (0XB604,0XB676);
	set_func_flags(0XB604,0x400);
	set_frame_size(0XB604, 0X8, 0, 0);
	add_func    (0XB676,0XB6B0);
	set_func_flags(0XB676,0x400);
	set_frame_size(0XB676, 0X4, 0, 0);
	add_func    (0XB6B0,0XB71E);
	set_func_flags(0XB6B0,0x400);
	set_frame_size(0XB6B0, 0X10, 0, 0);
	add_func    (0XB71E,0XB73A);
	set_func_flags(0XB71E,0x400);
	add_func    (0XB73A,0XB866);
	set_func_flags(0XB73A,0x400);
	set_frame_size(0XB73A, 0X20, 0, 0);
	add_func    (0XB866,0XB8FA);
	set_func_flags(0XB866,0x400);
	set_frame_size(0XB866, 0X14, 0, 0);
	add_func    (0XB8FA,0XB928);
	set_func_flags(0XB8FA,0x400);
	add_func    (0XB928,0XB9B0);
	set_func_flags(0XB928,0x400);
	set_frame_size(0XB928, 0X10, 0, 0);
	add_func    (0XB9B0,0XBCD2);
	set_func_flags(0XB9B0,0x400);
	set_frame_size(0XB9B0, 0X28, 0, 0);
	add_func    (0XBCD2,0XBCDE);
	set_func_flags(0XBCD2,0x400);
	add_func    (0XBCDE,0XC09E);
	set_func_flags(0XBCDE,0x400);
	set_frame_size(0XBCDE, 0X20, 0, 0);
	add_func    (0XC09E,0XC13C);
	set_func_flags(0XC09E,0x400);
	set_frame_size(0XC09E, 0X10, 0, 0);
	add_func    (0XC13C,0XC276);
	set_func_flags(0XC13C,0x400);
	set_frame_size(0XC13C, 0X1C, 0, 0);
	add_func    (0XC276,0XC2D0);
	set_func_flags(0XC276,0x400);
	set_frame_size(0XC276, 0X4, 0, 0);
	add_func    (0XC2D0,0XC464);
	set_func_flags(0XC2D0,0x400);
	set_frame_size(0XC2D0, 0X18, 0, 0);
	add_func    (0XC464,0XC570);
	set_func_flags(0XC464,0x400);
	set_frame_size(0XC464, 0X8, 0, 0);
	add_func    (0XC570,0XC608);
	set_func_flags(0XC570,0x400);
	set_frame_size(0XC570, 0X10, 0, 0);
	add_func    (0XC608,0XC6F0);
	set_func_flags(0XC608,0x400);
	set_frame_size(0XC608, 0X20, 0, 0);
	add_func    (0XC6F0,0XC75E);
	set_func_flags(0XC6F0,0x400);
	set_frame_size(0XC6F0, 0X8, 0, 0);
	add_func    (0XC75E,0XC80A);
	set_func_flags(0XC75E,0x400);
	set_frame_size(0XC75E, 0X18, 0, 0);
	add_func    (0XC80A,0XC9CA);
	set_func_flags(0XC80A,0x401);
	set_frame_size(0XC80A, 0X10, 0, 0);
	add_func    (0XC9CC,0XCB5E);
	set_func_flags(0XC9CC,0x400);
	set_frame_size(0XC9CC, 0X38, 0, 0);
	add_func    (0XCB5E,0XCB7C);
	set_func_flags(0XCB5E,0x400);
	add_func    (0XCB7C,0XCBB6);
	set_func_flags(0XCB7C,0x400);
	set_frame_size(0XCB7C, 0X10, 0, 0);
	add_func    (0XCBB6,0XCBD2);
	set_func_flags(0XCBB6,0x400);
	add_func    (0XCBD2,0XCC26);
	set_func_flags(0XCBD2,0x400);
	add_func    (0XCC26,0XCCB6);
	set_func_flags(0XCC26,0x400);
	set_frame_size(0XCC26, 0X18, 0, 0);
	add_func    (0XCCB6,0XCDA8);
	set_func_flags(0XCCB6,0x400);
	set_frame_size(0XCCB6, 0X30, 0, 0);
	add_func    (0XCDA8,0XCE60);
	set_func_flags(0XCDA8,0x400);
	set_frame_size(0XCDA8, 0X28, 0, 0);
	add_func    (0XCE60,0XCECE);
	set_func_flags(0XCE60,0x400);
	SetType(0XCE60, "void __fastcall cmd_exec_set09_cmd12(struct DjiPacketS09C12 *pkt);");
	set_frame_size(0XCE60, 0X20, 0, 0);
	add_func    (0XCECE,0XCF02);
	set_func_flags(0XCECE,0x400);
	set_frame_size(0XCECE, 0X18, 0, 0);
	add_func    (0XCF02,0XCF9E);
	set_func_flags(0XCF02,0x400);
	set_frame_size(0XCF02, 0X20, 0, 0);
	add_func    (0XCF9E,0XCFF0);
	set_func_flags(0XCF9E,0x400);
	set_frame_size(0XCF9E, 0X30, 0, 0);
	add_func    (0XCFF0,0XD022);
	set_func_flags(0XCFF0,0x400);
	set_frame_size(0XCFF0, 0X18, 0, 0);
	add_func    (0XD022,0XD062);
	set_func_flags(0XD022,0x400);
	set_frame_size(0XD022, 0X20, 0, 0);
	add_func    (0XD062,0XD09E);
	set_func_flags(0XD062,0x400);
	set_frame_size(0XD062, 0X20, 0, 0);
	add_func    (0XD09E,0XD0D8);
	set_func_flags(0XD09E,0x400);
	set_frame_size(0XD09E, 0X20, 0, 0);
	add_func    (0XD0D8,0XD112);
	set_func_flags(0XD0D8,0x400);
	set_frame_size(0XD0D8, 0X20, 0, 0);
	add_func    (0XD112,0XD12E);
	set_func_flags(0XD112,0x400);
	add_func    (0XD12E,0XD148);
	set_func_flags(0XD12E,0x400);
	add_func    (0XD148,0XD184);
	set_func_flags(0XD148,0x400);
	set_frame_size(0XD148, 0X18, 0, 0);
	add_func    (0XD184,0XD47A);
	set_func_flags(0XD184,0x400);
	set_frame_size(0XD184, 0X40, 0, 0);
	add_func    (0XD47A,0XD4B8);
	set_func_flags(0XD47A,0x400);
	set_frame_size(0XD47A, 0X18, 0, 0);
	add_func    (0XD4B8,0XD528);
	set_func_flags(0XD4B8,0x400);
	set_frame_size(0XD4B8, 0X50, 0, 0);
	add_func    (0XD528,0XD55E);
	set_func_flags(0XD528,0x400);
	set_frame_size(0XD528, 0X18, 0, 0);
	add_func    (0XD55E,0XD59C);
	set_func_flags(0XD55E,0x400);
	set_frame_size(0XD55E, 0X18, 0, 0);
	add_func    (0XD59C,0XD5D4);
	set_func_flags(0XD59C,0x400);
	set_frame_size(0XD59C, 0X18, 0, 0);
	add_func    (0XD5D4,0XD614);
	set_func_flags(0XD5D4,0x400);
	set_frame_size(0XD5D4, 0X18, 0, 0);
	add_func    (0XD614,0XD672);
	set_func_flags(0XD614,0x400);
	set_frame_size(0XD614, 0X28, 0, 0);
	add_func    (0XD672,0XD744);
	set_func_flags(0XD672,0x400);
	set_frame_size(0XD672, 0X30, 0, 0);
	add_func    (0XD744,0XD784);
	set_func_flags(0XD744,0x400);
	set_frame_size(0XD744, 0X60, 0, 0);
	add_func    (0XD784,0XD7DC);
	set_func_flags(0XD784,0x400);
	set_frame_size(0XD784, 0X20, 0, 0);
	add_func    (0XD7DC,0XD81A);
	set_func_flags(0XD7DC,0x400);
	set_frame_size(0XD7DC, 0X18, 0, 0);
	add_func    (0XD81A,0XD852);
	set_func_flags(0XD81A,0x400);
	set_frame_size(0XD81A, 0X18, 0, 0);
	add_func    (0XD852,0XD8BA);
	set_func_flags(0XD852,0x400);
	set_frame_size(0XD852, 0X20, 0, 0);
	add_func    (0XD8BA,0XD90C);
	set_func_flags(0XD8BA,0x400);
	set_frame_size(0XD8BA, 0X20, 0, 0);
	add_func    (0XD90C,0XD94A);
	set_func_flags(0XD90C,0x400);
	set_frame_size(0XD90C, 0X20, 0, 0);
	add_func    (0XD94A,0XD984);
	set_func_flags(0XD94A,0x400);
	set_frame_size(0XD94A, 0X18, 0, 0);
	add_func    (0XD984,0XD9C4);
	set_func_flags(0XD984,0x400);
	set_frame_size(0XD984, 0X18, 0, 0);
	add_func    (0XD9C4,0XDA0A);
	set_func_flags(0XD9C4,0x400);
	add_func    (0XDA0A,0XDA32);
	set_func_flags(0XDA0A,0x400);
	add_func    (0XDA32,0XDA58);
	set_func_flags(0XDA32,0x400);
	add_func    (0XDA58,0XDA7E);
	set_func_flags(0XDA58,0x400);
	add_func    (0XDA7E,0XDAA4);
	set_func_flags(0XDA7E,0x400);
	add_func    (0XDAA4,0XDACA);
	set_func_flags(0XDAA4,0x400);
	add_func    (0XDACA,0XDAE4);
	set_func_flags(0XDACA,0x400);
	add_func    (0XDAE4,0XDB00);
	set_func_flags(0XDAE4,0x400);
	add_func    (0XDB00,0XDB28);
	set_func_flags(0XDB00,0x400);
	add_func    (0XDB28,0XDD24);
	set_func_flags(0XDB28,0x400);
	set_frame_size(0XDB28, 0X14, 0, 0);
	add_func    (0XDD24,0XDE60);
	set_func_flags(0XDD24,0x400);
	set_frame_size(0XDD24, 0X78, 0, 0);
	add_func    (0XDE60,0XDE8E);
	set_func_flags(0XDE60,0x400);
	set_frame_size(0XDE60, 0X18, 0, 0);
	add_func    (0XDE8E,0XDEE6);
	set_func_flags(0XDE8E,0x400);
	set_frame_size(0XDE8E, 0X20, 0, 0);
	add_func    (0XDEE6,0XDF2E);
	set_func_flags(0XDEE6,0x400);
	set_frame_size(0XDEE6, 0X28, 0, 0);
	add_func    (0XDF2E,0XDF58);
	set_func_flags(0XDF2E,0x400);
	set_frame_size(0XDF2E, 0X28, 0, 0);
	add_func    (0XDF58,0XDFE8);
	set_func_flags(0XDF58,0x400);
	set_frame_size(0XDF58, 0X40, 0, 0);
	add_func    (0XDFE8,0XE016);
	set_func_flags(0XDFE8,0x400);
	set_frame_size(0XDFE8, 0X18, 0, 0);
	add_func    (0XE016,0XE048);
	set_func_flags(0XE016,0x400);
	set_frame_size(0XE016, 0X18, 0, 0);
	add_func    (0XE048,0XE084);
	set_func_flags(0XE048,0x400);
	set_frame_size(0XE048, 0X20, 0, 0);
	add_func    (0XE084,0XE0EC);
	set_func_flags(0XE084,0x400);
	set_frame_size(0XE084, 0X20, 0, 0);
	add_func    (0XE0EC,0XE112);
	set_func_flags(0XE0EC,0x400);
	set_frame_size(0XE0EC, 0X20, 0, 0);
	add_func    (0XE14C,0XE1B6);
	set_func_flags(0XE14C,0x400);
	set_frame_size(0XE14C, 0X28, 0, 0);
	add_func    (0XE1B6,0XE200);
	set_func_flags(0XE1B6,0x400);
	set_frame_size(0XE1B6, 0X20, 0, 0);
	add_func    (0XE200,0XE27C);
	set_func_flags(0XE200,0x400);
	set_frame_size(0XE200, 0X38, 0, 0);
	add_func    (0XE27C,0XE306);
	set_func_flags(0XE27C,0x400);
	set_frame_size(0XE27C, 0XC0, 0, 0);
	add_func    (0XE306,0XE30E);
	set_func_flags(0XE306,0x400);
	add_func    (0XE30E,0XE33C);
	set_func_flags(0XE30E,0x400);
	set_frame_size(0XE30E, 0X18, 0, 0);
	add_func    (0XE33C,0XE36E);
	set_func_flags(0XE33C,0x400);
	set_frame_size(0XE33C, 0X18, 0, 0);
	add_func    (0XE36E,0XE39C);
	set_func_flags(0XE36E,0x400);
	set_frame_size(0XE36E, 0X18, 0, 0);
	add_func    (0XE39C,0XE3DC);
	set_func_flags(0XE39C,0x400);
	set_frame_size(0XE39C, 0X28, 0, 0);
	add_func    (0XE3DC,0XE44C);
	set_func_flags(0XE3DC,0x400);
	set_frame_size(0XE3DC, 0X100, 0, 0);
	add_func    (0XE44C,0XE492);
	set_func_flags(0XE44C,0x400);
	set_frame_size(0XE44C, 0X30, 0, 0);
	add_func    (0XE492,0XE588);
	set_func_flags(0XE492,0x400);
	set_frame_size(0XE492, 0X38, 0, 0);
	add_func    (0XE588,0XE5B8);
	set_func_flags(0XE588,0x400);
	set_frame_size(0XE588, 0X18, 0, 0);
	add_func    (0XE5B8,0XE5F0);
	set_func_flags(0XE5B8,0x400);
	set_frame_size(0XE5B8, 0X18, 0, 0);
	add_func    (0XE5F0,0XE626);
	set_func_flags(0XE5F0,0x400);
	set_frame_size(0XE5F0, 0X20, 0, 0);
	add_func    (0XE626,0XE664);
	set_func_flags(0XE626,0x400);
	set_frame_size(0XE626, 0X18, 0, 0);
	add_func    (0XE664,0XE6B8);
	set_func_flags(0XE664,0x400);
	set_frame_size(0XE664, 0X18, 0, 0);
	add_func    (0XE6B8,0XE6EE);
	set_func_flags(0XE6B8,0x400);
	set_frame_size(0XE6B8, 0X18, 0, 0);
	add_func    (0XE6EE,0XE74C);
	set_func_flags(0XE6EE,0x400);
	set_frame_size(0XE6EE, 0X38, 0, 0);
	add_func    (0XE74C,0XE784);
	set_func_flags(0XE74C,0x400);
	set_frame_size(0XE74C, 0X18, 0, 0);
	add_func    (0XE784,0XE7B0);
	set_func_flags(0XE784,0x400);
	set_frame_size(0XE784, 0X18, 0, 0);
	add_func    (0XE7B0,0XE83E);
	set_func_flags(0XE7B0,0x400);
	set_frame_size(0XE7B0, 0X48, 0, 0);
	add_func    (0XE83E,0XE8C6);
	set_func_flags(0XE83E,0x400);
	set_frame_size(0XE83E, 0X40, 0, 0);
	add_func    (0XE8C6,0XE8FC);
	set_func_flags(0XE8C6,0x400);
	set_frame_size(0XE8C6, 0X50, 0, 0);
	add_func    (0XE8FC,0XEA00);
	set_func_flags(0XE8FC,0x400);
	set_frame_size(0XE8FC, 0X48, 0, 0);
	add_func    (0XEA00,0XEA02);
	set_func_flags(0XEA00,0x440);
	add_func    (0XEA02,0XEA7E);
	set_func_flags(0XEA02,0x400);
	set_frame_size(0XEA02, 0XD0, 0, 0);
	add_func    (0XEA7E,0XEC0A);
	set_func_flags(0XEA7E,0x400);
	set_frame_size(0XEA7E, 0X88, 0, 0);
	add_func    (0XEC0A,0XECBE);
	set_func_flags(0XEC0A,0x400);
	set_frame_size(0XEC0A, 0X28, 0, 0);
	add_func    (0XECBE,0XED8A);
	set_func_flags(0XECBE,0x400);
	set_frame_size(0XECBE, 0XB8, 0, 0);
	add_func    (0XED8A,0XEFBC);
	set_func_flags(0XED8A,0x400);
	set_frame_size(0XED8A, 0XB0, 0, 0);
	add_func    (0XEFBC,0XF038);
	set_func_flags(0XEFBC,0x400);
	set_frame_size(0XEFBC, 0X20, 0, 0);
	add_func    (0XF038,0XF0FC);
	set_func_flags(0XF038,0x400);
	set_frame_size(0XF038, 0X30, 0, 0);
	add_func    (0XF0FC,0XF1CC);
	set_func_flags(0XF0FC,0x400);
	set_frame_size(0XF0FC, 0X48, 0, 0);
	add_func    (0XF1CC,0XF25C);
	set_func_flags(0XF1CC,0x400);
	set_frame_size(0XF1CC, 0X20, 0, 0);
	add_func    (0XF25C,0XF2BA);
	set_func_flags(0XF25C,0x400);
	set_frame_size(0XF25C, 0X40, 0, 0);
	add_func    (0XF2BA,0XF31E);
	set_func_flags(0XF2BA,0x400);
	set_frame_size(0XF2BA, 0X20, 0, 0);
	add_func    (0XF31E,0XF384);
	set_func_flags(0XF31E,0x400);
	set_frame_size(0XF31E, 0X20, 0, 0);
	add_func    (0XF384,0XF410);
	set_func_flags(0XF384,0x400);
	set_frame_size(0XF384, 0X28, 0, 0);
	add_func    (0XF412,0XF460);
	set_func_flags(0XF412,0x400);
	set_frame_size(0XF412, 0X20, 0, 0);
	add_func    (0XF460,0XF4E4);
	set_func_flags(0XF460,0x400);
	set_frame_size(0XF460, 0X20, 0, 0);
	add_func    (0XF4E4,0XF5C2);
	set_func_flags(0XF4E4,0x400);
	set_frame_size(0XF4E4, 0X60, 0, 0);
	add_func    (0XF5C2,0XF974);
	set_func_flags(0XF5C2,0x400);
	set_frame_size(0XF5C2, 0X10, 0, 0);
	add_func    (0XF974,0XF99A);
	set_func_flags(0XF974,0x400);
	set_frame_size(0XF974, 0X10, 0, 0);
	add_func    (0XF99A,0XF9AA);
	set_func_flags(0XF99A,0x400);
	add_func    (0XF9AA,0XFA10);
	set_func_flags(0XF9AA,0x400);
	set_frame_size(0XF9AA, 0X20, 0, 0);
	add_func    (0XFA10,0XFA28);
	set_func_flags(0XFA10,0x400);
	add_func    (0XFA28,0XFA9A);
	set_func_flags(0XFA28,0x400);
	set_frame_size(0XFA28, 0X58, 0, 0);
	add_func    (0XFA9A,0XFB16);
	set_func_flags(0XFA9A,0x400);
	set_frame_size(0XFA9A, 0X28, 0, 0);
	add_func    (0XFB16,0XFC56);
	set_func_flags(0XFB16,0x400);
	set_frame_size(0XFB16, 0X38, 0, 0);
	add_func    (0XFC56,0XFC7E);
	set_func_flags(0XFC56,0x400);
	add_func    (0XFC7E,0XFD70);
	set_func_flags(0XFC7E,0x400);
	set_frame_size(0XFC7E, 0X38, 0, 0);
	add_func    (0XFD70,0XFEE8);
	set_func_flags(0XFD70,0x400);
	set_frame_size(0XFD70, 0X10, 0, 0);
	add_func    (0XFEE8,0XFF28);
	set_func_flags(0XFEE8,0x400);
	set_frame_size(0XFEE8, 0XA8, 0, 0);
	add_func    (0XFF28,0XFF82);
	set_func_flags(0XFF28,0x400);
	set_frame_size(0XFF28, 0X30, 0, 0);
	define_local_var(0XFF28, 0XFF82, "[bp-0X10]", "varg_r0");
	define_local_var(0XFF28, 0XFF82, "[bp-0XC]", "varg_r1");
	define_local_var(0XFF28, 0XFF82, "[bp-0X8]", "varg_r2");
	define_local_var(0XFF28, 0XFF82, "[bp-0X4]", "varg_r3");
	add_func    (0XFF82,0X1000C);
	set_func_flags(0XFF82,0);
	set_frame_size(0XFF82, 0X28, 0, 0);
	add_func    (0X10010,0X100AA);
	set_func_flags(0X10010,0x400);
	set_frame_size(0X10010, 0X30, 0, 0);
	define_local_var(0X10010, 0X100AA, "[bp-0X10]", "varg_r0");
	define_local_var(0X10010, 0X100AA, "[bp-0XC]", "varg_r1");
	define_local_var(0X10010, 0X100AA, "[bp-0X8]", "varg_r2");
	define_local_var(0X10010, 0X100AA, "[bp-0X4]", "varg_r3");
	add_func    (0X100AA,0X100E0);
	set_func_flags(0X100AA,0x400);
	set_frame_size(0X100AA, 0X18, 0, 0);
	add_func    (0X100E0,0X10156);
	set_func_flags(0X100E0,0x400);
	set_frame_size(0X100E0, 0X10, 0, 0);
	add_func    (0X10156,0X101EC);
	set_func_flags(0X10156,0x400);
	set_frame_size(0X10156, 0X20, 0, 0);
	add_func    (0X10214,0X10296);
	set_func_flags(0X10214,0x400);
	set_frame_size(0X10214, 0X38, 0, 0);
	add_func    (0X10296,0X102FE);
	set_func_flags(0X10296,0x400);
	set_frame_size(0X10296, 0X28, 0, 0);
	add_func    (0X102FE,0X1031E);
	set_func_flags(0X102FE,0x400);
	set_frame_size(0X102FE, 0X10, 0, 0);
	add_func    (0X1031E,0X1034C);
	set_func_flags(0X1031E,0x400);
	set_frame_size(0X1031E, 0X18, 0, 0);
	add_func    (0X1034C,0X10380);
	set_func_flags(0X1034C,0x400);
	set_frame_size(0X1034C, 0X18, 0, 0);
	add_func    (0X10380,0X10404);
	set_func_flags(0X10380,0x400);
	set_frame_size(0X10380, 0X10, 0, 0);
	add_func    (0X10404,0X10446);
	set_func_flags(0X10404,0x400);
	set_frame_size(0X10404, 0X28, 0, 0);
	add_func    (0X10446,0X1046E);
	set_func_flags(0X10446,0x400);
	set_frame_size(0X10446, 0X18, 0, 0);
	add_func    (0X1046E,0X104A0);
	set_func_flags(0X1046E,0x400);
	set_frame_size(0X1046E, 0X18, 0, 0);
	add_func    (0X104F6,0X1050C);
	set_func_flags(0X104F6,0x400);
	set_frame_size(0X104F6, 0X10, 0, 0);
	add_func    (0X1050C,0X10534);
	set_func_flags(0X1050C,0x400);
	set_frame_size(0X1050C, 0X10, 0, 0);
	add_func    (0X10534,0X1054C);
	set_func_flags(0X10534,0x400);
	set_frame_size(0X10534, 0X10, 0, 0);
	add_func    (0X1054C,0X10566);
	set_func_flags(0X1054C,0x400);
	set_frame_size(0X1054C, 0X10, 0, 0);
	add_func    (0X10566,0X105AA);
	set_func_flags(0X10566,0x400);
	set_frame_size(0X10566, 0X20, 0, 0);
	add_func    (0X105AA,0X105EE);
	set_func_flags(0X105AA,0x400);
	set_frame_size(0X105AA, 0X10, 0, 0);
	add_func    (0X105EE,0X1067E);
	set_func_flags(0X105EE,0x400);
	set_frame_size(0X105EE, 0XA0, 0, 0);
	add_func    (0X1067E,0X10694);
	set_func_flags(0X1067E,0x400);
	set_frame_size(0X1067E, 0X10, 0, 0);
	add_func    (0X10694,0X1070C);
	set_func_flags(0X10694,0x400);
	set_frame_size(0X10694, 0X220, 0, 0);
	add_func    (0X1070C,0X1079C);
	set_func_flags(0X1070C,0x400);
	set_frame_size(0X1070C, 0X218, 0, 0);
	add_func    (0X1079C,0X10828);
	set_func_flags(0X1079C,0x400);
	set_frame_size(0X1079C, 0X218, 0, 0);
	add_func    (0X10828,0X108A0);
	set_func_flags(0X10828,0x400);
	set_frame_size(0X10828, 0X118, 0, 0);
	add_func    (0X108A0,0X108B6);
	set_func_flags(0X108A0,0x400);
	set_frame_size(0X108A0, 0X10, 0, 0);
	add_func    (0X108B6,0X108D0);
	set_func_flags(0X108B6,0x400);
	set_frame_size(0X108B6, 0X10, 0, 0);
	add_func    (0X108D0,0X1099A);
	set_func_flags(0X108D0,0x400);
	set_frame_size(0X108D0, 0X218, 0, 0);
	add_func    (0X1099A,0X10B10);
	set_func_flags(0X1099A,0x400);
	set_frame_size(0X1099A, 0X28, 0, 0);
	add_func    (0X10B10,0X10BEE);
	set_func_flags(0X10B10,0x400);
	set_frame_size(0X10B10, 0X28, 0, 0);
	add_func    (0X10BEE,0X10C78);
	set_func_flags(0X10BEE,0x400);
	set_frame_size(0X10BEE, 0X98, 0, 0);
	add_func    (0X10C78,0X10CEC);
	set_func_flags(0X10C78,0x400);
	set_frame_size(0X10C78, 0X210, 0, 0);
	add_func    (0X10CEC,0X10E34);
	set_func_flags(0X10CEC,0x401);
	set_frame_size(0X10CEC, 0X18, 0, 0);
	add_func    (0X10E38,0X10E4C);
	set_func_flags(0X10E38,0x400);
	add_func    (0X10E4C,0X10E60);
	set_func_flags(0X10E4C,0x400);
	add_func    (0X10E60,0X10E74);
	set_func_flags(0X10E60,0x400);
	add_func    (0X10E74,0X10E88);
	set_func_flags(0X10E74,0x400);
	add_func    (0X10E88,0X10E9C);
	set_func_flags(0X10E88,0x400);
	add_func    (0X10E9C,0X10EB0);
	set_func_flags(0X10E9C,0x400);
	add_func    (0X10EB0,0X10ECC);
	set_func_flags(0X10EB0,0x400);
	add_func    (0X10ECC,0X10EE4);
	set_func_flags(0X10ECC,0x400);
	add_func    (0X10EE4,0X10FC6);
	set_func_flags(0X10EE4,0x400);
	set_frame_size(0X10EE4, 0X20, 0, 0);
	add_func    (0X10FC6,0X11056);
	set_func_flags(0X10FC6,0x410);
	set_frame_size(0X10FC6, 0X24, 0, 0);
	add_func    (0X11056,0X110D0);
	set_func_flags(0X11056,0x400);
	add_func    (0X110D0,0X111D6);
	set_func_flags(0X110D0,0x400);
	set_frame_size(0X110D0, 0X24, 0, 0);
	add_func    (0X111D6,0X11208);
	set_func_flags(0X111D6,0x400);
	set_frame_size(0X111D6, 0X14, 0, 0);
	add_func    (0X11208,0X11258);
	set_func_flags(0X11208,0x400);
	set_frame_size(0X11208, 0X14, 0, 0);
	add_func    (0X11258,0X112C6);
	set_func_flags(0X11258,0x400);
	set_frame_size(0X11258, 0X10, 0, 0);
	add_func    (0X112C6,0X11320);
	set_func_flags(0X112C6,0x400);
	set_frame_size(0X112C6, 0X8, 0, 0);
	add_func    (0X11320,0X1138A);
	set_func_flags(0X11320,0x400);
	set_frame_size(0X11320, 0X8, 0, 0);
	add_func    (0X1138A,0X113FE);
	set_func_flags(0X1138A,0x400);
	set_frame_size(0X1138A, 0X8, 0, 0);
	add_func    (0X113FE,0X11456);
	set_func_flags(0X113FE,0x400);
	add_func    (0X11456,0X121FC);
	set_func_flags(0X11456,0x401);
	set_frame_size(0X11456, 0X80, 0, 0);
	add_func    (0X12230,0X12246);
	set_func_flags(0X12230,0x400);
	set_frame_size(0X12230, 0X10, 0, 0);
	add_func    (0X12246,0X1254C);
	set_func_flags(0X12246,0x401);
	set_frame_size(0X12246, 0X28, 0, 0);
	add_func    (0X125B6,0X12634);
	set_func_flags(0X125B6,0x400);
	set_frame_size(0X125B6, 0X8, 0, 0);
	add_func    (0X12634,0X12690);
	set_func_flags(0X12634,0x400);
	set_frame_size(0X12634, 0X8, 0, 0);
	add_func    (0X12690,0X126E6);
	set_func_flags(0X12690,0x400);
	set_frame_size(0X12690, 0X10, 0, 0);
	add_func    (0X126E6,0X12714);
	set_func_flags(0X126E6,0x400);
	set_frame_size(0X126E6, 0X10, 0, 0);
	add_func    (0X12714,0X12734);
	set_func_flags(0X12714,0x400);
	set_frame_size(0X12714, 0X8, 0, 0);
	add_func    (0X12734,0X1276E);
	set_func_flags(0X12734,0x400);
	set_frame_size(0X12734, 0X18, 0, 0);
	add_func    (0X1276E,0X127A4);
	set_func_flags(0X1276E,0x400);
	set_frame_size(0X1276E, 0X8, 0, 0);
	add_func    (0X127A4,0X127DA);
	set_func_flags(0X127A4,0x400);
	set_frame_size(0X127A4, 0X8, 0, 0);
	add_func    (0X127DA,0X127E0);
	set_func_flags(0X127DA,0x400);
	add_func    (0X127E0,0X12802);
	set_func_flags(0X127E0,0x400);
	set_frame_size(0X127E0, 0X8, 0, 0);
	add_func    (0X12802,0X128BE);
	set_func_flags(0X12802,0x400);
	set_frame_size(0X12802, 0X18, 0, 0);
	add_func    (0X128BE,0X128E4);
	set_func_flags(0X128BE,0x400);
	set_frame_size(0X128BE, 0X8, 0, 0);
	add_func    (0X128E4,0X1290E);
	set_func_flags(0X128E4,0x400);
	set_frame_size(0X128E4, 0X10, 0, 0);
	add_func    (0X12A90,0X12ABA);
	set_func_flags(0X12A90,0x400);
	set_frame_size(0X12A90, 0XC, 0, 0);
	add_func    (0X12ABA,0X12B20);
	set_func_flags(0X12ABA,0x400);
	set_frame_size(0X12ABA, 0X18, 0, 0);
	add_func    (0X12B20,0X12D3E);
	set_func_flags(0X12B20,0x400);
	set_frame_size(0X12B20, 0X28, 0, 0);
	add_func    (0X12D3E,0X13130);
	set_func_flags(0X12D3E,0x400);
	set_frame_size(0X12D3E, 0X30, 0, 0);
	add_func    (0X13130,0X13324);
	set_func_flags(0X13130,0x400);
	set_frame_size(0X13130, 0X28, 0, 0);
	add_func    (0X13324,0X133C8);
	set_func_flags(0X13324,0x400);
	set_frame_size(0X13324, 0X10, 0, 0);
	add_func    (0X133C8,0X1343E);
	set_func_flags(0X133C8,0x400);
	set_frame_size(0X133C8, 0X10, 0, 0);
	add_func    (0X1343E,0X134B4);
	set_func_flags(0X1343E,0x400);
	set_frame_size(0X1343E, 0X10, 0, 0);
	add_func    (0X134B4,0X13550);
	set_func_flags(0X134B4,0x400);
	set_frame_size(0X134B4, 0X8, 0, 0);
	add_func    (0X13550,0X135A8);
	set_func_flags(0X13550,0x400);
	set_frame_size(0X13550, 0X10, 0, 0);
	add_func    (0X135A8,0X1366A);
	set_func_flags(0X135A8,0x400);
	set_frame_size(0X135A8, 0X18, 0, 0);
	add_func    (0X1366A,0X13772);
	set_func_flags(0X1366A,0x400);
	set_frame_size(0X1366A, 0X28, 0, 0);
	add_func    (0X13772,0X1379E);
	set_func_flags(0X13772,0x400);
	set_frame_size(0X13772, 0X10, 0, 0);
	add_func    (0X137C0,0X137E8);
	set_func_flags(0X137C0,0x400);
	add_func    (0X137E8,0X13836);
	set_func_flags(0X137E8,0x400);
	set_frame_size(0X137E8, 0X10, 0, 0);
	add_func    (0X13836,0X13854);
	set_func_flags(0X13836,0x400);
	set_frame_size(0X13836, 0X8, 0, 0);
	add_func    (0X13854,0X138CC);
	set_func_flags(0X13854,0x400);
	set_frame_size(0X13854, 0X10, 0, 0);
	add_func    (0X138CC,0X139D4);
	set_func_flags(0X138CC,0x400);
	set_frame_size(0X138CC, 0X20, 0, 0);
	add_func    (0X139D4,0X13AAA);
	set_func_flags(0X139D4,0x400);
	set_frame_size(0X139D4, 0X20, 0, 0);
	add_func    (0X13AAA,0X13AF0);
	set_func_flags(0X13AAA,0x400);
	set_frame_size(0X13AAA, 0X30, 0, 0);
	add_func    (0X13AF0,0X13D8E);
	set_func_flags(0X13AF0,0x401);
	set_frame_size(0X13AF0, 0X10, 0, 0);
	add_func    (0X13D8E,0X13D9A);
	set_func_flags(0X13D8E,0x400);
	add_func    (0X13D9A,0X13DBE);
	set_func_flags(0X13D9A,0x400);
	set_frame_size(0X13D9A, 0X10, 0, 0);
	add_func    (0X13DDC,0X13E32);
	set_func_flags(0X13DDC,0x400);
	set_frame_size(0X13DDC, 0X10, 0, 0);
	add_func    (0X13E32,0X13E46);
	set_func_flags(0X13E32,0x400);
	set_frame_size(0X13E32, 0X8, 0, 0);
	add_func    (0X13E46,0X13E58);
	set_func_flags(0X13E46,0x400);
	add_func    (0X13E58,0X13E6E);
	set_func_flags(0X13E58,0x400);
	set_frame_size(0X13E58, 0X8, 0, 0);
	add_func    (0X13E6E,0X13EC4);
	set_func_flags(0X13E6E,0x400);
	set_frame_size(0X13E6E, 0X10, 0, 0);
	add_func    (0X13EC4,0X13EFE);
	set_func_flags(0X13EC4,0x400);
	set_frame_size(0X13EC4, 0X18, 0, 0);
	add_func    (0X13EFE,0X13F40);
	set_func_flags(0X13EFE,0x400);
	set_frame_size(0X13EFE, 0X20, 0, 0);
	add_func    (0X13F40,0X13F78);
	set_func_flags(0X13F40,0x400);
	set_frame_size(0X13F40, 0X10, 0, 0);
	add_func    (0X13F78,0X13FB0);
	set_func_flags(0X13F78,0x400);
	set_frame_size(0X13F78, 0X10, 0, 0);
	add_func    (0X13FB0,0X13FBA);
	set_func_flags(0X13FB0,0x400);
	add_func    (0X13FBA,0X13FC4);
	set_func_flags(0X13FBA,0x400);
	add_func    (0X13FD0,0X14116);
	set_func_flags(0X13FD0,0x400);
	set_frame_size(0X13FD0, 0X30, 0, 0);
	add_func    (0X14116,0X14152);
	set_func_flags(0X14116,0x400);
	set_frame_size(0X14116, 0X48, 0, 0);
	add_func    (0X14152,0X141F4);
	set_func_flags(0X14152,0x400);
	set_frame_size(0X14152, 0X48, 0, 0);
	add_func    (0X141F4,0X142B4);
	set_func_flags(0X141F4,0x400);
	set_frame_size(0X141F4, 0X40, 0, 0);
	add_func    (0X142B4,0X142F2);
	set_func_flags(0X142B4,0x400);
	add_func    (0X142F2,0X1433E);
	set_func_flags(0X142F2,0x400);
	set_frame_size(0X142F2, 0X8, 0, 0);
	add_func    (0X1433E,0X14374);
	set_func_flags(0X1433E,0x400);
	set_frame_size(0X1433E, 0X18, 0, 0);
	add_func    (0X14374,0X143A4);
	set_func_flags(0X14374,0x400);
	set_frame_size(0X14374, 0X10, 0, 0);
	add_func    (0X143A4,0X143EA);
	set_func_flags(0X143A4,0x400);
	set_frame_size(0X143A4, 0X18, 0, 0);
	add_func    (0X143EA,0X14404);
	set_func_flags(0X143EA,0x400);
	add_func    (0X14404,0X145A0);
	set_func_flags(0X14404,0x400);
	set_frame_size(0X14404, 0X60, 0, 0);
	add_func    (0X145A0,0X14844);
	set_func_flags(0X145A0,0x400);
	set_frame_size(0X145A0, 0X70, 0, 0);
	add_func    (0X14844,0X14974);
	set_func_flags(0X14844,0x400);
	set_frame_size(0X14844, 0X28, 0, 0);
	add_func    (0X14974,0X149FA);
	set_func_flags(0X14974,0x400);
	set_frame_size(0X14974, 0X10, 0, 0);
	add_func    (0X149FA,0X14A62);
	set_func_flags(0X149FA,0x400);
	set_frame_size(0X149FA, 0X10, 0, 0);
	add_func    (0X14AA8,0X14B10);
	set_func_flags(0X14AA8,0x400);
	set_frame_size(0X14AA8, 0X10, 0, 0);
	add_func    (0X14B10,0X14CE4);
	set_func_flags(0X14B10,0x401);
	set_frame_size(0X14B10, 0X10, 0, 0);
	add_func    (0X14CE4,0X14CF0);
	set_func_flags(0X14CE4,0x400);
	add_func    (0X14CF0,0X14D14);
	set_func_flags(0X14CF0,0x400);
	set_frame_size(0X14CF0, 0X10, 0, 0);
	add_func    (0X14D68,0X14D7C);
	set_func_flags(0X14D68,0x400);
	add_func    (0X14D7C,0X14DAC);
	set_func_flags(0X14D7C,0x400);
	set_frame_size(0X14D7C, 0XC, 0, 0);
	add_func    (0X14DAC,0X14DE6);
	set_func_flags(0X14DAC,0x400);
	set_frame_size(0X14DAC, 0X18, 0, 0);
	add_func    (0X14DE6,0X14E38);
	set_func_flags(0X14DE6,0x400);
	set_frame_size(0X14DE6, 0X18, 0, 0);
	add_func    (0X14E38,0X14E54);
	set_func_flags(0X14E38,0x400);
	add_func    (0X14E54,0X14ECE);
	set_func_flags(0X14E54,0x400);
	set_frame_size(0X14E54, 0X18, 0, 0);
	add_func    (0X14ECE,0X14F1E);
	set_func_flags(0X14ECE,0x400);
	set_frame_size(0X14ECE, 0X10, 0, 0);
	add_func    (0X14F1E,0X14F34);
	set_func_flags(0X14F1E,0x400);
	add_func    (0X14F34,0X14F48);
	set_func_flags(0X14F34,0x400);
	set_frame_size(0X14F34, 0X8, 0, 0);
	add_func    (0X14F48,0X15048);
	set_func_flags(0X14F48,0x400);
	set_frame_size(0X14F48, 0X2C, 0, 0);
	add_func    (0X15048,0X15066);
	set_func_flags(0X15048,0x400);
	set_frame_size(0X15048, 0X8, 0, 0);
	add_func    (0X15066,0X150BC);
	set_func_flags(0X15066,0x400);
	set_frame_size(0X15066, 0X20, 0, 0);
	add_func    (0X150BC,0X15220);
	set_func_flags(0X150BC,0x400);
	set_frame_size(0X150BC, 0X2C, 0, 0);
	add_func    (0X15220,0X152B2);
	set_func_flags(0X15220,0x400);
	set_frame_size(0X15220, 0X10, 0, 0);
	add_func    (0X152B2,0X152D4);
	set_func_flags(0X152B2,0x400);
	set_frame_size(0X152B2, 0X8, 0, 0);
	add_func    (0X152D4,0X152EA);
	set_func_flags(0X152D4,0x400);
	add_func    (0X152EA,0X15324);
	set_func_flags(0X152EA,0x400);
	set_frame_size(0X152EA, 0X8, 0, 0);
	add_func    (0X15324,0X1565C);
	set_func_flags(0X15324,0x400);
	set_frame_size(0X15324, 0X28, 0, 0);
	add_func    (0X1565C,0X156EE);
	set_func_flags(0X1565C,0x400);
	set_frame_size(0X1565C, 0X20, 0, 0);
	add_func    (0X156F0,0X157E2);
	set_func_flags(0X156F0,0x400);
	set_frame_size(0X156F0, 0X18, 0, 0);
	add_func    (0X157E2,0X1580A);
	set_func_flags(0X157E2,0x400);
	set_frame_size(0X157E2, 0X8, 0, 0);
	add_func    (0X1580A,0X15958);
	set_func_flags(0X1580A,0x400);
	set_frame_size(0X1580A, 0X20, 0, 0);
	add_func    (0X15958,0X15980);
	set_func_flags(0X15958,0x400);
	set_frame_size(0X15958, 0X8, 0, 0);
	add_func    (0X15980,0X159A8);
	set_func_flags(0X15980,0x400);
	set_frame_size(0X15980, 0X8, 0, 0);
	add_func    (0X159A8,0X159D8);
	set_func_flags(0X159A8,0x400);
	set_frame_size(0X159A8, 0X8, 0, 0);
	add_func    (0X159F4,0X15A0A);
	set_func_flags(0X159F4,0x400);
	set_frame_size(0X159F4, 0X10, 0, 0);
	add_func    (0X15A20,0X15A26);
	set_func_flags(0X15A20,0x400);
	add_func    (0X15A26,0X15A8E);
	set_func_flags(0X15A26,0x400);
	set_frame_size(0X15A26, 0X10, 0, 0);
	add_func    (0X15A8E,0X15ABC);
	set_func_flags(0X15A8E,0x400);
	SetType(0X15A8E, "void __fastcall spi_raw_ct16_dt8_write(int bus_n_bytes, int addr8, int data8);");
	set_frame_size(0X15A8E, 0X10, 0, 0);
	add_func    (0X15ABC,0X15AE8);
	set_func_flags(0X15ABC,0x400);
	SetType(0X15ABC, "int __fastcall spi_raw_ct16_dt8_read(int bus_n_bytes, int addr8);");
	set_frame_size(0X15ABC, 0X10, 0, 0);
	add_func    (0X15B60,0X15BAE);
	set_func_flags(0X15B60,0x400);
	SetType(0X15B60, "void __fastcall ad936x_reg_sync_write(unsigned int addr10, int val, int wrflag);");
	set_frame_size(0X15B60, 0X18, 0, 0);
	add_func    (0X15BAE,0X15BFA);
	set_func_flags(0X15BAE,0x400);
	SetType(0X15BAE, "int __fastcall ad936x_reg_sync_read(unsigned int addr10, int wrflag);");
	set_frame_size(0X15BAE, 0X10, 0, 0);
	add_func    (0X15C0E,0X15C50);
	set_func_flags(0X15C0E,0x400);
	set_frame_size(0X15C0E, 0X10, 0, 0);
	add_func    (0X15C50,0X15D48);
	set_func_flags(0X15C50,0x400);
	set_frame_size(0X15C50, 0X10, 0, 0);
	add_func    (0X15D48,0X15DFE);
	set_func_flags(0X15D48,0x400);
	set_frame_size(0X15D48, 0X18, 0, 0);
	add_func    (0X15DFE,0X15E08);
	set_func_flags(0X15DFE,0x400);
	add_func    (0X15E08,0X16080);
	set_func_flags(0X15E08,0x400);
	set_frame_size(0X15E08, 0X18, 0, 0);
	add_func    (0X16080,0X160D0);
	set_func_flags(0X16080,0x400);
	add_func    (0X160D0,0X1619E);
	set_func_flags(0X160D0,0x400);
	set_frame_size(0X160D0, 0X10, 0, 0);
	add_func    (0X1619E,0X161A4);
	set_func_flags(0X1619E,0x400);
	add_func    (0X161A4,0X161EA);
	set_func_flags(0X161A4,0x400);
	set_frame_size(0X161A4, 0X8, 0, 0);
	add_func    (0X161EA,0X162D4);
	set_func_flags(0X161EA,0x400);
	set_frame_size(0X161EA, 0X10, 0, 0);
	add_func    (0X162D4,0X163C8);
	set_func_flags(0X162D4,0x400);
	set_frame_size(0X162D4, 0X20, 0, 0);
	add_func    (0X163C8,0X163CE);
	set_func_flags(0X163C8,0x400);
	add_func    (0X163CE,0X16554);
	set_func_flags(0X163CE,0x400);
	set_frame_size(0X163CE, 0X20, 0, 0);
	add_func    (0X16554,0X16632);
	set_func_flags(0X16554,0x400);
	set_frame_size(0X16554, 0X14, 0, 0);
	add_func    (0X16632,0X167EE);
	set_func_flags(0X16632,0x400);
	set_frame_size(0X16632, 0X10, 0, 0);
	add_func    (0X167EE,0X16A74);
	set_func_flags(0X167EE,0x400);
	set_frame_size(0X167EE, 0X10, 0, 0);
	add_func    (0X16A74,0X16ADA);
	set_func_flags(0X16A74,0x400);
	set_frame_size(0X16A74, 0X8, 0, 0);
	add_func    (0X16ADA,0X16AEC);
	set_func_flags(0X16ADA,0x400);
	add_func    (0X16AF4,0X16B12);
	set_func_flags(0X16AF4,0x400);
	add_func    (0X16B12,0X16B2E);
	set_func_flags(0X16B12,0x400);
	set_frame_size(0X16B12, 0X4, 0, 0);
	add_func    (0X16B2E,0X16B58);
	set_func_flags(0X16B2E,0x400);
	set_frame_size(0X16B2E, 0X8, 0, 0);
	add_func    (0X16B58,0X16B66);
	set_func_flags(0X16B58,0x400);
	add_func    (0X16B66,0X16CA4);
	set_func_flags(0X16B66,0x400);
	set_frame_size(0X16B66, 0X18, 0, 0);
	add_func    (0X16CA4,0X16CCC);
	set_func_flags(0X16CA4,0x400);
	add_func    (0X16CCC,0X16CF2);
	set_func_flags(0X16CCC,0x400);
	add_func    (0X16CF2,0X16D30);
	set_func_flags(0X16CF2,0x400);
	set_frame_size(0X16CF2, 0X8, 0, 0);
	add_func    (0X16D30,0X16D6C);
	set_func_flags(0X16D30,0x400);
	set_frame_size(0X16D30, 0X8, 0, 0);
	add_func    (0X16DA0,0X16DB8);
	set_func_flags(0X16DA0,0x400);
	add_func    (0X16DB8,0X16DD0);
	set_func_flags(0X16DB8,0x400);
	add_func    (0X16DD0,0X16E2E);
	set_func_flags(0X16DD0,0x400);
	set_frame_size(0X16DD0, 0X10, 0, 0);
	add_func    (0X16E2E,0X16E44);
	set_func_flags(0X16E2E,0x400);
	add_func    (0X16E44,0X16E50);
	set_func_flags(0X16E44,0x400);
	add_func    (0X16E50,0X16E5A);
	set_func_flags(0X16E50,0x400);
	add_func    (0X16E5A,0X16E76);
	set_func_flags(0X16E5A,0x400);
	add_func    (0X16E76,0X16E80);
	set_func_flags(0X16E76,0x400);
	add_func    (0X16E80,0X16E90);
	set_func_flags(0X16E80,0x400);
	add_func    (0X16E90,0X16E9A);
	set_func_flags(0X16E90,0x400);
	add_func    (0X16E9A,0X16EAC);
	set_func_flags(0X16E9A,0x400);
	SetType(0X16E9A, "void __cdecl update_tcx_power_zone_flag(int power_zone_is_ce);");
	add_func    (0X16EAC,0X16EB4);
	set_func_flags(0X16EAC,0x400);
	add_func    (0X16EB4,0X16EBC);
	set_func_flags(0X16EB4,0x400);
	add_func    (0X16EBC,0X16EC4);
	set_func_flags(0X16EBC,0x400);
	add_func    (0X16EC4,0X16EDA);
	set_func_flags(0X16EC4,0x400);
	add_func    (0X16EDA,0X16EEA);
	set_func_flags(0X16EDA,0x400);
	add_func    (0X16EEA,0X16F08);
	set_func_flags(0X16EEA,0x400);
	add_func    (0X16F2A,0X16F3A);
	set_func_flags(0X16F2A,0x400);
	add_func    (0X16F3A,0X16F48);
	set_func_flags(0X16F3A,0x400);
	add_func    (0X16F48,0X16F54);
	set_func_flags(0X16F48,0x400);
	add_func    (0X16F54,0X16F6A);
	set_func_flags(0X16F54,0x400);
	add_func    (0X16F6A,0X16F7E);
	set_func_flags(0X16F6A,0x400);
	add_func    (0X16F7E,0X16F86);
	set_func_flags(0X16F7E,0x400);
	add_func    (0X16F86,0X16FA8);
	set_func_flags(0X16F86,0x400);
	add_func    (0X16FA8,0X16FB2);
	set_func_flags(0X16FA8,0x400);
	add_func    (0X16FB8,0X16FC0);
	set_func_flags(0X16FB8,0x400);
	add_func    (0X16FC0,0X16FC8);
	set_func_flags(0X16FC0,0x400);
	add_func    (0X16FD0,0X17010);
	set_func_flags(0X16FD0,0x400);
	set_frame_size(0X16FD0, 0X10, 0, 0);
	add_func    (0X17010,0X17018);
	set_func_flags(0X17010,0x400);
	add_func    (0X17018,0X17022);
	set_func_flags(0X17018,0x400);
	add_func    (0X17022,0X1702A);
	set_func_flags(0X17022,0x400);
	add_func    (0X1702A,0X170EE);
	set_func_flags(0X1702A,0x400);
	set_frame_size(0X1702A, 0X10, 0, 0);
	add_func    (0X170EE,0X171A8);
	set_func_flags(0X170EE,0x400);
	set_frame_size(0X170EE, 0X8, 0, 0);
	add_func    (0X171A8,0X171C2);
	set_func_flags(0X171A8,0x400);
	set_frame_size(0X171A8, 0X8, 0, 0);
	add_func    (0X171C2,0X171FA);
	set_func_flags(0X171C2,0x400);
	add_func    (0X17204,0X1728C);
	set_func_flags(0X17204,0x400);
	set_frame_size(0X17204, 0X18, 0, 0);
	add_func    (0X1728C,0X172A0);
	set_func_flags(0X1728C,0x400);
	add_func    (0X172AC,0X172CE);
	set_func_flags(0X172AC,0x400);
	set_frame_size(0X172AC, 0X8, 0, 0);
	add_func    (0X172F2,0X1730C);
	set_func_flags(0X172F2,0x400);
	set_frame_size(0X172F2, 0X8, 0, 0);
	add_func    (0X1730C,0X17346);
	set_func_flags(0X1730C,0x400);
	set_frame_size(0X1730C, 0X8, 0, 0);
	add_func    (0X17346,0X174B0);
	set_func_flags(0X17346,0x400);
	set_frame_size(0X17346, 0X18, 0, 0);
	add_func    (0X174B0,0X1758C);
	set_func_flags(0X174B0,0x400);
	set_frame_size(0X174B0, 0X10, 0, 0);
	add_func    (0X1758C,0X175A8);
	set_func_flags(0X1758C,0x400);
	set_frame_size(0X1758C, 0X8, 0, 0);
	add_func    (0X175A8,0X1768C);
	set_func_flags(0X175A8,0x400);
	set_frame_size(0X175A8, 0X18, 0, 0);
	add_func    (0X176CC,0X176EA);
	set_func_flags(0X176CC,0x400);
	add_func    (0X176EA,0X176FC);
	set_func_flags(0X176EA,0x400);
	add_func    (0X176FC,0X17714);
	set_func_flags(0X176FC,0x400);
	add_func    (0X17720,0X17796);
	set_func_flags(0X17720,0x400);
	set_frame_size(0X17720, 0X18, 0, 0);
	add_func    (0X17796,0X177CE);
	set_func_flags(0X17796,0x400);
	add_func    (0X177CE,0X179B4);
	set_func_flags(0X177CE,0x400);
	set_frame_size(0X177CE, 0X38, 0, 0);
	define_local_var(0X177CE, 0X179B4, "[bp-0X10]", "varg_r0");
	define_local_var(0X177CE, 0X179B4, "[bp-0XC]", "varg_r1");
	define_local_var(0X177CE, 0X179B4, "[bp-0X8]", "varg_r2");
	define_local_var(0X177CE, 0X179B4, "[bp-0X4]", "varg_r3");
	add_func    (0X179B4,0X17DC4);
	set_func_flags(0X179B4,0x400);
	set_frame_size(0X179B4, 0X58, 0, 0);
	add_func    (0X17DC4,0X17EFA);
	set_func_flags(0X17DC4,0x400);
	set_frame_size(0X17DC4, 0X18, 0, 0);
	add_func    (0X17EFA,0X17F7A);
	set_func_flags(0X17EFA,0x400);
	set_frame_size(0X17EFA, 0X10, 0, 0);
	add_func    (0X17F7A,0X17FC4);
	set_func_flags(0X17F7A,0x400);
	set_frame_size(0X17F7A, 0X10, 0, 0);
	add_func    (0X1802C,0X18040);
	set_func_flags(0X1802C,0x400);
	set_frame_size(0X1802C, 0X8, 0, 0);
	add_func    (0X18040,0X1804E);
	set_func_flags(0X18040,0x400);
	add_func    (0X1804E,0X18176);
	set_func_flags(0X1804E,0x400);
	set_frame_size(0X1804E, 0X30, 0, 0);
	add_func    (0X18176,0X18184);
	set_func_flags(0X18176,0x400);
	set_frame_size(0X18176, 0XC, 0, 0);
	add_func    (0X18194,0X1819E);
	set_func_flags(0X18194,0x400);
	add_func    (0X1819E,0X181A6);
	set_func_flags(0X1819E,0x400);
	add_func    (0X181A6,0X181AC);
	set_func_flags(0X181A6,0x400);
	add_func    (0X181AC,0X181C6);
	set_func_flags(0X181AC,0x400);
	set_frame_size(0X181AC, 0X4, 0, 0);
	add_func    (0X181C6,0X181E0);
	set_func_flags(0X181C6,0x400);
	set_frame_size(0X181C6, 0X4, 0, 0);
	add_func    (0X181E0,0X18208);
	set_func_flags(0X181E0,0x400);
	set_frame_size(0X181E0, 0X4, 0, 0);
	add_func    (0X1821E,0X18260);
	set_func_flags(0X1821E,0x400);
	set_frame_size(0X1821E, 0X4, 0, 0);
	add_func    (0X18260,0X18298);
	set_func_flags(0X18260,0x400);
	set_frame_size(0X18260, 0X4, 0, 0);
	add_func    (0X18298,0X18312);
	set_func_flags(0X18298,0x400);
	set_frame_size(0X18298, 0X8, 0, 0);
	add_func    (0X18312,0X1834E);
	set_func_flags(0X18312,0x400);
	set_frame_size(0X18312, 0X4, 0, 0);
	add_func    (0X1834E,0X18386);
	set_func_flags(0X1834E,0x400);
	set_frame_size(0X1834E, 0XC, 0, 0);
	add_func    (0X183B8,0X183E8);
	set_func_flags(0X183B8,0x400);
	set_frame_size(0X183B8, 0X10, 0, 0);
	add_func    (0X1840E,0X18452);
	set_func_flags(0X1840E,0x400);
	set_frame_size(0X1840E, 0X4, 0, 0);
	add_func    (0X18452,0X1848C);
	set_func_flags(0X18452,0x400);
	set_frame_size(0X18452, 0X4, 0, 0);
	add_func    (0X1848C,0X184C8);
	set_func_flags(0X1848C,0x400);
	set_frame_size(0X1848C, 0X18, 0, 0);
	add_func    (0X184C8,0X18514);
	set_func_flags(0X184C8,0x400);
	set_frame_size(0X184C8, 0X10, 0, 0);
	add_func    (0X18514,0X18546);
	set_func_flags(0X18514,0x400);
	set_frame_size(0X18514, 0X8, 0, 0);
	add_func    (0X18546,0X18592);
	set_func_flags(0X18546,0x400);
	set_frame_size(0X18546, 0X1C, 0, 0);
	add_func    (0X185C0,0X1862C);
	set_func_flags(0X185C0,0x400);
	set_frame_size(0X185C0, 0X18, 0, 0);
	add_func    (0X1862C,0X18738);
	set_func_flags(0X1862C,0x400);
	set_frame_size(0X1862C, 0X40, 0, 0);
	add_func    (0X18738,0X18842);
	set_func_flags(0X18738,0x400);
	set_frame_size(0X18738, 0X24, 0, 0);
	add_func    (0X18842,0X189CA);
	set_func_flags(0X18842,0x400);
	set_frame_size(0X18842, 0X58, 0, 0);
	add_func    (0X189CA,0X18A48);
	set_func_flags(0X189CA,0x400);
	set_frame_size(0X189CA, 0X70, 0, 0);
	add_func    (0X18A48,0X18ABC);
	set_func_flags(0X18A48,0x400);
	set_frame_size(0X18A48, 0XB8, 0, 0);
	add_func    (0X18ABC,0X18B18);
	set_func_flags(0X18ABC,0x400);
	set_frame_size(0X18ABC, 0XB0, 0, 0);
	add_func    (0X18B18,0X18B86);
	set_func_flags(0X18B18,0x400);
	set_frame_size(0X18B18, 0XB8, 0, 0);
	add_func    (0X18B86,0X18BA4);
	set_func_flags(0X18B86,0x400);
	set_frame_size(0X18B86, 0X8, 0, 0);
	add_func    (0X18BA4,0X18BC2);
	set_func_flags(0X18BA4,0x400);
	set_frame_size(0X18BA4, 0X8, 0, 0);
	add_func    (0X18BC2,0X18BF8);
	set_func_flags(0X18BC2,0x400);
	set_frame_size(0X18BC2, 0X28, 0, 0);
	add_func    (0X18BF8,0X18C30);
	set_func_flags(0X18BF8,0x400);
	set_frame_size(0X18BF8, 0X30, 0, 0);
	add_func    (0X18C30,0X18CBE);
	set_func_flags(0X18C30,0x400);
	set_frame_size(0X18C30, 0XC8, 0, 0);
	add_func    (0X18CBE,0X18D00);
	set_func_flags(0X18CBE,0x400);
	set_frame_size(0X18CBE, 0X28, 0, 0);
	add_func    (0X18D00,0X18E70);
	set_func_flags(0X18D00,0x400);
	set_frame_size(0X18D00, 0X30, 0, 0);
	add_func    (0X18E70,0X18ED2);
	set_func_flags(0X18E70,0x400);
	set_frame_size(0X18E70, 0X58, 0, 0);
	add_func    (0X18ED2,0X18F1C);
	set_func_flags(0X18ED2,0x400);
	set_frame_size(0X18ED2, 0X30, 0, 0);
	add_func    (0X18F1C,0X18F48);
	set_func_flags(0X18F1C,0x400);
	set_frame_size(0X18F1C, 0X10, 0, 0);
	add_func    (0X18F48,0X18F74);
	set_func_flags(0X18F48,0x400);
	set_frame_size(0X18F48, 0X10, 0, 0);
	add_func    (0X18F74,0X18F94);
	set_func_flags(0X18F74,0x400);
	set_frame_size(0X18F74, 0X28, 0, 0);
	add_func    (0X18FA8,0X190F4);
	set_func_flags(0X18FA8,0x400);
	set_frame_size(0X18FA8, 0X50, 0, 0);
	add_func    (0X190F4,0X19122);
	set_func_flags(0X190F4,0x400);
	set_frame_size(0X190F4, 0X28, 0, 0);
	add_func    (0X19122,0X1914E);
	set_func_flags(0X19122,0x400);
	set_frame_size(0X19122, 0X28, 0, 0);
	add_func    (0X1914E,0X19192);
	set_func_flags(0X1914E,0x400);
	set_frame_size(0X1914E, 0X10, 0, 0);
	add_func    (0X19192,0X191A8);
	set_func_flags(0X19192,0x400);
	set_frame_size(0X19192, 0X8, 0, 0);
	add_func    (0X191A8,0X191BE);
	set_func_flags(0X191A8,0x400);
	set_frame_size(0X191A8, 0X8, 0, 0);
	add_func    (0X191BE,0X191D4);
	set_func_flags(0X191BE,0x400);
	set_frame_size(0X191BE, 0X8, 0, 0);
	add_func    (0X191D4,0X191EA);
	set_func_flags(0X191D4,0x400);
	set_frame_size(0X191D4, 0X8, 0, 0);
	add_func    (0X191EA,0X191FA);
	set_func_flags(0X191EA,0x400);
	set_frame_size(0X191EA, 0X8, 0, 0);
	add_func    (0X191FA,0X1921E);
	set_func_flags(0X191FA,0x400);
	set_frame_size(0X191FA, 0X10, 0, 0);
	add_func    (0X1921E,0X19244);
	set_func_flags(0X1921E,0x400);
	set_frame_size(0X1921E, 0X10, 0, 0);
	add_func    (0X19244,0X1924E);
	set_func_flags(0X19244,0x400);
	add_func    (0X1924E,0X1926C);
	set_func_flags(0X1924E,0x400);
	set_frame_size(0X1924E, 0X8, 0, 0);
	add_func    (0X19270,0X1939C);
	set_func_flags(0X19270,0x410);
	set_frame_size(0X19270, 0X120, 32, 0);
	add_func    (0X1939C,0X1941C);
	set_func_flags(0X1939C,0x400);
	set_frame_size(0X1939C, 0X20, 0, 0);
	add_func    (0X1941C,0X19488);
	set_func_flags(0X1941C,0x400);
	set_frame_size(0X1941C, 0X20, 0, 0);
	add_func    (0X19488,0X194AA);
	set_func_flags(0X19488,0x400);
	set_frame_size(0X19488, 0X8, 0, 0);
	add_func    (0X194AA,0X194D0);
	set_func_flags(0X194AA,0x400);
	set_frame_size(0X194AA, 0XB8, 0, 0);
	add_func    (0X19504,0X19830);
	set_func_flags(0X19504,0x400);
	set_frame_size(0X19504, 0X30, 0, 0);
	add_func    (0X19830,0X19886);
	set_func_flags(0X19830,0x400);
	set_frame_size(0X19830, 0X4, 0, 0);
	add_func    (0X1A278,0X1A29E);
	set_func_flags(0X1A278,0x400);
	set_frame_size(0X1A278, 0X10, 0, 0);
	add_func    (0X1A29E,0X1A2FE);
	set_func_flags(0X1A29E,0x400);
	set_frame_size(0X1A29E, 0X8, 0, 0);
	add_func    (0X1A2FE,0X1A34E);
	set_func_flags(0X1A2FE,0x400);
	set_frame_size(0X1A2FE, 0X8, 0, 0);
	add_func    (0X1A352,0X1A378);
	set_func_flags(0X1A352,0x400);
	set_frame_size(0X1A352, 0X8, 0, 0);
	add_func    (0X1A396,0X1A3A4);
	set_func_flags(0X1A396,0x400);
	set_frame_size(0X1A396, 0X8, 0, 0);
	add_func    (0X1A3A4,0X1A3B2);
	set_func_flags(0X1A3A4,0x400);
	set_frame_size(0X1A3A4, 0X8, 0, 0);
	add_func    (0X1A3B2,0X1A3C0);
	set_func_flags(0X1A3B2,0x400);
	set_frame_size(0X1A3B2, 0X8, 0, 0);
	add_func    (0X1A3C0,0X1A456);
	set_func_flags(0X1A3C0,0x400);
	set_frame_size(0X1A3C0, 0X28, 0, 0);
	add_func    (0X1A456,0X1A546);
	set_func_flags(0X1A456,0x400);
	set_frame_size(0X1A456, 0X38, 0, 0);
	add_func    (0X1A59C,0X1A600);
	set_func_flags(0X1A59C,0x400);
	set_frame_size(0X1A59C, 0X8, 0, 0);
	add_func    (0X1A600,0X1A60E);
	set_func_flags(0X1A600,0x400);
	add_func    (0X1A63C,0X1A694);
	set_func_flags(0X1A63C,0x400);
	set_frame_size(0X1A63C, 0X8, 0, 0);
	add_func    (0X1A6D2,0X1A6E8);
	set_func_flags(0X1A6D2,0x400);
	add_func    (0X1A6E8,0X1A6F4);
	set_func_flags(0X1A6E8,0x400);
	add_func    (0X1A6FC,0X1A734);
	set_func_flags(0X1A6FC,0x400);
	set_frame_size(0X1A6FC, 0X10, 0, 0);
	add_func    (0X1A734,0X1A768);
	set_func_flags(0X1A734,0x400);
	set_frame_size(0X1A734, 0XC, 0, 0);
	add_func    (0X1A768,0X1A7D0);
	set_func_flags(0X1A768,0x400);
	set_frame_size(0X1A768, 0X10, 0, 0);
	add_func    (0X1A7D0,0X1A80A);
	set_func_flags(0X1A7D0,0x400);
	set_frame_size(0X1A7D0, 0X10, 0, 0);
	add_func    (0X1A830,0X1A852);
	set_func_flags(0X1A830,0x400);
	set_frame_size(0X1A830, 0X8, 0, 0);
	add_func    (0X1A852,0X1A858);
	set_func_flags(0X1A852,0x400);
	add_func    (0X1A86A,0X1A878);
	set_func_flags(0X1A86A,0x400);
	add_func    (0X1A87C,0X1A88A);
	set_func_flags(0X1A87C,0x400);
	add_func    (0X1A88A,0X1A8B4);
	set_func_flags(0X1A88A,0x400);
	set_frame_size(0X1A88A, 0X10, 0, 0);
	add_func    (0X1A8B4,0X1A8E2);
	set_func_flags(0X1A8B4,0x400);
	set_frame_size(0X1A8B4, 0X10, 0, 0);
	add_func    (0X1A8E2,0X1A8E4);
	set_func_flags(0X1A8E2,0x440);
	add_func    (0X1AA82,0X1AB38);
	set_func_flags(0X1AA82,0x400);
	set_frame_size(0X1AA82, 0X10, 0, 0);
	add_func    (0X1AB58,0X1AB5A);
	set_func_flags(0X1AB58,0x440);
	add_func    (0X1AB6A,0X1ABA8);
	set_func_flags(0X1AB6A,0x400);
	set_frame_size(0X1AB6A, 0X28, 0, 0);
	add_func    (0X1ABA8,0X1ABC6);
	set_func_flags(0X1ABA8,0x400);
	add_func    (0X1ABC6,0X1AC4E);
	set_func_flags(0X1ABC6,0x400);
	set_frame_size(0X1ABC6, 0X8, 0, 0);
	add_func    (0X1AC4E,0X1AC64);
	set_func_flags(0X1AC4E,0x400);
	add_func    (0X1AC64,0X1ACCC);
	set_func_flags(0X1AC64,0x400);
	set_frame_size(0X1AC64, 0X8, 0, 0);
	add_func    (0X1ACCC,0X1AD26);
	set_func_flags(0X1ACCC,0x400);
	set_frame_size(0X1ACCC, 0X8, 0, 0);
	add_func    (0X1AD26,0X1AD3A);
	set_func_flags(0X1AD26,0x400);
	set_frame_size(0X1AD26, 0X8, 0, 0);
	add_func    (0X1AD7E,0X1ADA8);
	set_func_flags(0X1AD7E,0x400);
	set_frame_size(0X1AD7E, 0X8, 0, 0);
	add_func    (0X1AE04,0X1AE3C);
	set_func_flags(0X1AE04,0x400);
	set_frame_size(0X1AE04, 0X10, 0, 0);
	add_func    (0X1AE4C,0X1AE7A);
	set_func_flags(0X1AE4C,0x400);
	add_func    (0X1AE7A,0X1AED4);
	set_func_flags(0X1AE7A,0x400);
	set_frame_size(0X1AE7A, 0XC, 0, 0);
	add_func    (0X1AED4,0X1AF04);
	set_func_flags(0X1AED4,0x400);
	set_frame_size(0X1AED4, 0X8, 0, 0);
	add_func    (0X1AF04,0X1AFD4);
	set_func_flags(0X1AF04,0x400);
	set_frame_size(0X1AF04, 0X10, 0, 0);
	add_func    (0X1AFD4,0X1AFFE);
	set_func_flags(0X1AFD4,0x400);
	set_frame_size(0X1AFD4, 0X10, 0, 0);
	add_func    (0X1AFFE,0X1B046);
	set_func_flags(0X1AFFE,0x400);
	set_frame_size(0X1AFFE, 0X18, 0, 0);
	add_func    (0X1B046,0X1B07C);
	set_func_flags(0X1B046,0x400);
	set_frame_size(0X1B046, 0X8, 0, 0);
	add_func    (0X1B07C,0X1B0A2);
	set_func_flags(0X1B07C,0x400);
	set_frame_size(0X1B07C, 0X10, 0, 0);
	add_func    (0X1B0A2,0X1B0C2);
	set_func_flags(0X1B0A2,0x400);
	set_frame_size(0X1B0A2, 0X8, 0, 0);
	add_func    (0X1B0C2,0X1B0F6);
	set_func_flags(0X1B0C2,0x400);
	add_func    (0X1B0F6,0X1B126);
	set_func_flags(0X1B0F6,0x400);
	add_func    (0X1B126,0X1B14C);
	set_func_flags(0X1B126,0x400);
	set_frame_size(0X1B126, 0X8, 0, 0);
	add_func    (0X1B14C,0X1B166);
	set_func_flags(0X1B14C,0x400);
	set_frame_size(0X1B14C, 0X8, 0, 0);
	add_func    (0X1B166,0X1B1EA);
	set_func_flags(0X1B166,0);
	set_frame_size(0X1B166, 0X18, 0, 0);
	add_func    (0X1B1EE,0X1B204);
	set_func_flags(0X1B1EE,0x400);
	add_func    (0X1B204,0X1B236);
	set_func_flags(0X1B204,0x400);
	set_frame_size(0X1B204, 0X10, 0, 0);
	add_func    (0X1B236,0X1B240);
	set_func_flags(0X1B236,0x400);
	add_func    (0X1B260,0X1B280);
	set_func_flags(0X1B260,0x400);
	set_frame_size(0X1B260, 0X8, 0, 0);
	add_func    (0X1B280,0X1B2FE);
	set_func_flags(0X1B280,0x400);
	set_frame_size(0X1B280, 0X18, 0, 0);
	add_func    (0X1B2FE,0X1B324);
	set_func_flags(0X1B2FE,0x400);
	set_frame_size(0X1B2FE, 0X10, 0, 0);
	add_func    (0X1B324,0X1B3BC);
	set_func_flags(0X1B324,0x400);
	set_frame_size(0X1B324, 0X18, 0, 0);
	add_func    (0X1B400,0X1B402);
	set_func_flags(0X1B400,0x440);
	add_func    (0X1B402,0X1B428);
	set_func_flags(0X1B402,0x400);
	set_frame_size(0X1B402, 0XC, 0, 0);
	add_func    (0X1B42A,0X1B42C);
	set_func_flags(0X1B42A,0x440);
	add_func    (0X1B42E,0X1B430);
	set_func_flags(0X1B42E,0x440);
	add_func    (0X1B430,0X1B48C);
	set_func_flags(0X1B430,0x400);
	set_frame_size(0X1B430, 0X8, 0, 0);
	add_func    (0X1B48C,0X1B4DA);
	set_func_flags(0X1B48C,0x400);
	set_frame_size(0X1B48C, 0X10, 0, 0);
	add_func    (0X1B4DA,0X1B4DC);
	set_func_flags(0X1B4DA,0x440);
	add_func    (0X1B4DC,0X1B506);
	set_func_flags(0X1B4DC,0x400);
	set_frame_size(0X1B4DC, 0X8, 0, 0);
	add_func    (0X1B550,0X1B552);
	set_func_flags(0X1B550,0x440);
	add_func    (0X1B554,0X1B584);
	set_func_flags(0X1B554,0x400);
	set_frame_size(0X1B554, 0X8, 0, 0);
	add_func    (0X1B5AA,0X1B5CC);
	set_func_flags(0X1B5AA,0x400);
	set_frame_size(0X1B5AA, 0X10, 0, 0);
	add_func    (0X1B5EC,0X1B61A);
	set_func_flags(0X1B5EC,0x400);
	set_frame_size(0X1B5EC, 0X8, 0, 0);
	add_func    (0X1B61A,0X1B628);
	set_func_flags(0X1B61A,0x400);
	add_func    (0X1B628,0X1B67A);
	set_func_flags(0X1B628,0x400);
	set_frame_size(0X1B628, 0X14, 0, 0);
	add_func    (0X1B67A,0X1B700);
	set_func_flags(0X1B67A,0x400);
	set_frame_size(0X1B67A, 0X1C, 0, 0);
	add_func    (0X1B70C,0X1B71C);
	set_func_flags(0X1B70C,0x400);
	add_func    (0X1B71C,0X1B73C);
	set_func_flags(0X1B71C,0x400);
	set_frame_size(0X1B71C, 0X8, 0, 0);
	add_func    (0X1B73C,0X1B758);
	set_func_flags(0X1B73C,0x400);
	add_func    (0X1B758,0X1B774);
	set_func_flags(0X1B758,0x400);
	add_func    (0X1B778,0X1B792);
	set_func_flags(0X1B778,0x400);
	add_func    (0X1B792,0X1B7DC);
	set_func_flags(0X1B792,0x400);
	set_frame_size(0X1B792, 0X18, 0, 0);
	add_func    (0X1B7DC,0X1B7F2);
	set_func_flags(0X1B7DC,0x400);
	add_func    (0X1B7F2,0X1B816);
	set_func_flags(0X1B7F2,0x400);
	add_func    (0X1B8D6,0X1B9E0);
	set_func_flags(0X1B8D6,0x400);
	set_frame_size(0X1B8D6, 0X48, 0, 0);
	add_func    (0X1BA56,0X1BAE8);
	set_func_flags(0X1BA56,0x400);
	set_frame_size(0X1BA56, 0X28, 0, 0);
	add_func    (0X1BAE8,0X1BB02);
	set_func_flags(0X1BAE8,0x400);
	set_frame_size(0X1BAE8, 0X10, 0, 0);
	add_func    (0X1BB02,0X1BB10);
	set_func_flags(0X1BB02,0x400);
	add_func    (0X1BB34,0X1BBF0);
	set_func_flags(0X1BB34,0x400);
	set_frame_size(0X1BB34, 0X18, 0, 0);
	add_func    (0X1BBF0,0X1BC0E);
	set_func_flags(0X1BBF0,0x400);
	add_func    (0X1BC0E,0X1BC92);
	set_func_flags(0X1BC0E,0x400);
	set_frame_size(0X1BC0E, 0X10, 0, 0);
	add_func    (0X1BC92,0X1BD7E);
	set_func_flags(0X1BC92,0x400);
	set_frame_size(0X1BC92, 0X40, 0, 0);
	add_func    (0X1BEF0,0X1BF72);
	set_func_flags(0X1BEF0,0x400);
	set_frame_size(0X1BEF0, 0X28, 0, 0);
	add_func    (0X1BF98,0X1BF9C);
	set_func_flags(0X1BF98,0x480);
	add_func    (0X1C08E,0X1C1A2);
	set_func_flags(0X1C08E,0x400);
	set_frame_size(0X1C08E, 0X20, 0, 0);
	add_func    (0X1C1A2,0X1C24A);
	set_func_flags(0X1C1A2,0x400);
	set_frame_size(0X1C1A2, 0X20, 0, 0);
	add_func    (0X1C24A,0X1C264);
	set_func_flags(0X1C24A,0x400);
	set_frame_size(0X1C24A, 0X10, 0, 0);
	add_func    (0X1C374,0X1C386);
	set_func_flags(0X1C374,0x400);
	add_func    (0X1C386,0X1C39E);
	set_func_flags(0X1C386,0x401);
	set_frame_size(0X1C386, 0X8, 0, 0);
	add_func    (0X1C3BC,0X1C3F2);
	set_func_flags(0X1C3BC,0x400);
	set_frame_size(0X1C3BC, 0X8, 0, 0);
	add_func    (0X1C3F2,0X1C4FE);
	set_func_flags(0X1C3F2,0x400);
	set_frame_size(0X1C3F2, 0X28, 0, 0);
	add_func    (0X1C4FE,0X1C522);
	set_func_flags(0X1C4FE,0x401);
	set_frame_size(0X1C4FE, 0X10, 0, 0);
	add_func    (0X1C522,0X1C544);
	set_func_flags(0X1C522,0x400);
	set_frame_size(0X1C522, 0X8, 0, 0);
	add_func    (0X1C544,0X1C59C);
	set_func_flags(0X1C544,0x400);
	set_frame_size(0X1C544, 0X30, 0, 0);
	add_func    (0X1C59C,0X1C666);
	set_func_flags(0X1C59C,0x400);
	set_frame_size(0X1C59C, 0X14, 0, 0);
	add_func    (0X1C6C0,0X1C722);
	set_func_flags(0X1C6C0,0x400);
	set_frame_size(0X1C6C0, 0X18, 0, 0);
	add_func    (0X1C740,0X1C7FC);
	set_func_flags(0X1C740,0x400);
	set_frame_size(0X1C740, 0X18, 0, 0);
	add_func    (0X1C7FC,0X1C820);
	set_func_flags(0X1C7FC,0x400);
	set_frame_size(0X1C7FC, 0X10, 0, 0);
	add_func    (0X1C844,0X1C856);
	set_func_flags(0X1C844,0x400);
	set_frame_size(0X1C844, 0X8, 0, 0);
	add_func    (0X1C86C,0X1C882);
	set_func_flags(0X1C86C,0x400);
	set_frame_size(0X1C86C, 0X8, 0, 0);
	add_func    (0X1C888,0X1C88C);
	set_func_flags(0X1C888,0x400);
	add_func    (0X1C890,0X1C898);
	set_func_flags(0X1C890,0x400);
	add_func    (0X1C898,0X1C89E);
	set_func_flags(0X1C898,0x400);
	add_func    (0X1C89E,0X1C8A4);
	set_func_flags(0X1C89E,0x400);
	add_func    (0X1C8A4,0X1C8AA);
	set_func_flags(0X1C8A4,0x400);
	add_func    (0X1C90C,0X1C9CE);
	set_func_flags(0X1C90C,0x400);
	set_frame_size(0X1C90C, 0X10, 0, 0);
	add_func    (0X1C9CE,0X1CA90);
	set_func_flags(0X1C9CE,0x400);
	set_frame_size(0X1C9CE, 0X10, 0, 0);
	add_func    (0X1CAE4,0X1CC14);
	set_func_flags(0X1CAE4,0x400);
	set_frame_size(0X1CAE4, 0X18, 0, 0);
	add_func    (0X1CD34,0X1CD60);
	set_func_flags(0X1CD34,0x400);
	set_frame_size(0X1CD34, 0X8, 0, 0);
	add_func    (0X1CD60,0X1CD7C);
	set_func_flags(0X1CD60,0x400);
	set_frame_size(0X1CD60, 0X8, 0, 0);
	add_func    (0X1CD7C,0X1CD90);
	set_func_flags(0X1CD7C,0x400);
	set_frame_size(0X1CD7C, 0X8, 0, 0);
	add_func    (0X1CDB0,0X1CDB6);
	set_func_flags(0X1CDB0,0x400);
	add_func    (0X1CDB6,0X1CDCE);
	set_func_flags(0X1CDB6,0x400);
	set_frame_size(0X1CDB6, 0X8, 0, 0);
	add_func    (0X1CDCE,0X1CDE8);
	set_func_flags(0X1CDCE,0x400);
	set_frame_size(0X1CDCE, 0X8, 0, 0);
	add_func    (0X1CE00,0X1CE46);
	set_func_flags(0X1CE00,0x400);
	set_frame_size(0X1CE00, 0X18, 0, 0);
	add_func    (0X1CE46,0X1CE56);
	set_func_flags(0X1CE46,0x400);
	add_func    (0X1CE5E,0X1CEBA);
	set_func_flags(0X1CE5E,0x400);
	set_frame_size(0X1CE5E, 0XC, 0, 0);
	add_func    (0X1D08C,0X1D0CA);
	set_func_flags(0X1D08C,0x400);
	set_frame_size(0X1D08C, 0XC, 0, 0);
	add_func    (0X1D0CA,0X1D0FE);
	set_func_flags(0X1D0CA,0x400);
	set_frame_size(0X1D0CA, 0X8, 0, 0);
	add_func    (0X1D0FE,0X1D13C);
	set_func_flags(0X1D0FE,0x400);
	set_frame_size(0X1D0FE, 0XC, 0, 0);
	add_func    (0X1D14E,0X1D164);
	set_func_flags(0X1D14E,0x400);
	add_func    (0X1D164,0X1D168);
	set_func_flags(0X1D164,0x400);
	add_func    (0X1D168,0X1D16C);
	set_func_flags(0X1D168,0x400);
	add_func    (0X1D16C,0X1D170);
	set_func_flags(0X1D16C,0x400);
	add_func    (0X1D170,0X1D174);
	set_func_flags(0X1D170,0x400);
	add_func    (0X1D174,0X1D178);
	set_func_flags(0X1D174,0x400);
	add_func    (0X1D178,0X1D17C);
	set_func_flags(0X1D178,0x400);
	add_func    (0X1D17C,0X1D1A2);
	set_func_flags(0X1D17C,0x400);
	add_func    (0X1D1A2,0X1D1A6);
	set_func_flags(0X1D1A2,0x400);
	add_func    (0X1D1A6,0X1D1AA);
	set_func_flags(0X1D1A6,0x400);
	add_func    (0X1D1AA,0X1D1E8);
	set_func_flags(0X1D1AA,0x400);
	set_frame_size(0X1D1AA, 0X10, 0, 0);
	add_func    (0X1D1E8,0X1D23C);
	set_func_flags(0X1D1E8,0x400);
	set_frame_size(0X1D1E8, 0X8, 0, 0);
	add_func    (0X1D23C,0X1D254);
	set_func_flags(0X1D23C,0x400);
	add_func    (0X1D298,0X1D2BE);
	set_func_flags(0X1D298,0x400);
	set_frame_size(0X1D298, 0X8, 0, 0);
	add_func    (0X1D2BE,0X1D2D0);
	set_func_flags(0X1D2BE,0x400);
	add_func    (0X1D2D0,0X1D2DA);
	set_func_flags(0X1D2D0,0x400);
	add_func    (0X1D2DA,0X1D32E);
	set_func_flags(0X1D2DA,0x400);
	set_frame_size(0X1D2DA, 0XC, 0, 0);
	add_func    (0X1D32E,0X1D346);
	set_func_flags(0X1D32E,0x400);
	set_frame_size(0X1D32E, 0X8, 0, 0);
	add_func    (0X1D346,0X1D3B8);
	set_func_flags(0X1D346,0x400);
	set_frame_size(0X1D346, 0X10, 0, 0);
	add_func    (0X1D3B8,0X1D41A);
	set_func_flags(0X1D3B8,0x400);
	set_frame_size(0X1D3B8, 0X10, 0, 0);
	add_func    (0X1D41A,0X1D494);
	set_func_flags(0X1D41A,0x400);
	set_frame_size(0X1D41A, 0X10, 0, 0);
	add_func    (0X1D494,0X1D4BC);
	set_func_flags(0X1D494,0x400);
	set_frame_size(0X1D494, 0X10, 0, 0);
	add_func    (0X1D4BC,0X1D4F2);
	set_func_flags(0X1D4BC,0x400);
	set_frame_size(0X1D4BC, 0X8, 0, 0);
	add_func    (0X1D4F2,0X1D518);
	set_func_flags(0X1D4F2,0x400);
	set_frame_size(0X1D4F2, 0X8, 0, 0);
	add_func    (0X1D518,0X1D55E);
	set_func_flags(0X1D518,0x400);
	set_frame_size(0X1D518, 0X8, 0, 0);
	add_func    (0X1D55E,0X1D5E6);
	set_func_flags(0X1D55E,0x400);
	set_frame_size(0X1D55E, 0X8, 0, 0);
	add_func    (0X1D5E6,0X1D60E);
	set_func_flags(0X1D5E6,0x400);
	set_frame_size(0X1D5E6, 0X8, 0, 0);
	add_func    (0X1D60E,0X1D63E);
	set_func_flags(0X1D60E,0x400);
	set_frame_size(0X1D60E, 0X8, 0, 0);
	add_func    (0X1D63E,0X1D678);
	set_func_flags(0X1D63E,0x400);
	set_frame_size(0X1D63E, 0X8, 0, 0);
	add_func    (0X1D678,0X1D6D4);
	set_func_flags(0X1D678,0x400);
	set_frame_size(0X1D678, 0X8, 0, 0);
	add_func    (0X1D6D4,0X1D816);
	set_func_flags(0X1D6D4,0x400);
	set_frame_size(0X1D6D4, 0X18, 0, 0);
	add_func    (0X1D970,0X1D98E);
	set_func_flags(0X1D970,0x400);
	add_func    (0X1D9A2,0X1D9B6);
	set_func_flags(0X1D9A2,0x400);
	set_frame_size(0X1D9A2, 0X8, 0, 0);
	add_func    (0X1D9FC,0X1DA12);
	set_func_flags(0X1D9FC,0x400);
	add_func    (0X1DA12,0X1DA1C);
	set_func_flags(0X1DA12,0x400);
	add_func    (0X1DA1C,0X1DA40);
	set_func_flags(0X1DA1C,0x400);
	set_frame_size(0X1DA1C, 0X8, 0, 0);
	add_func    (0X1DA40,0X1DA5C);
	set_func_flags(0X1DA40,0x400);
	set_frame_size(0X1DA40, 0X8, 0, 0);
	add_func    (0X1DA5C,0X1DA66);
	set_func_flags(0X1DA5C,0x400);
	add_func    (0X1DA66,0X1DA6E);
	set_func_flags(0X1DA66,0x400);
	add_func    (0X1DA6E,0X1DC94);
	set_func_flags(0X1DA6E,0x400);
	set_frame_size(0X1DA6E, 0X18, 0, 0);
	add_func    (0X1DCA4,0X1DCB2);
	set_func_flags(0X1DCA4,0x400);
	add_func    (0X1DCB2,0X1DCC8);
	set_func_flags(0X1DCB2,0x400);
	add_func    (0X1DCC8,0X1DCEE);
	set_func_flags(0X1DCC8,0x400);
	add_func    (0X1DCF4,0X1DD2A);
	set_func_flags(0X1DCF4,0x400);
	set_frame_size(0X1DCF4, 0X8, 0, 0);
	add_func    (0X1DD2A,0X1DD44);
	set_func_flags(0X1DD2A,0x400);
	add_func    (0X1DD44,0X1DD60);
	set_func_flags(0X1DD44,0x400);
	set_frame_size(0X1DD44, 0XC, 0, 0);
	add_func    (0X1DD60,0X1DD98);
	set_func_flags(0X1DD60,0x400);
	add_func    (0X1DD98,0X1DDA8);
	set_func_flags(0X1DD98,0x400);
	add_func    (0X1DDAC,0X1DE80);
	set_func_flags(0X1DDAC,0x400);
	set_frame_size(0X1DDAC, 0X20, 0, 0);
	add_func    (0X1DE80,0X1DED4);
	set_func_flags(0X1DE80,0x400);
	set_frame_size(0X1DE80, 0X8, 0, 0);
	add_func    (0X1DEE4,0X1DEE6);
	set_func_flags(0X1DEE4,0x440);
	add_func    (0X1DEE6,0X1DF10);
	set_func_flags(0X1DEE6,0x400);
	set_frame_size(0X1DEE6, 0X8, 0, 0);
	add_func    (0X1DF10,0X1DF46);
	set_func_flags(0X1DF10,0x400);
	set_frame_size(0X1DF10, 0X8, 0, 0);
	add_func    (0X1DF46,0X1DF48);
	set_func_flags(0X1DF46,0x440);
	add_func    (0X1DF48,0X1DF5C);
	set_func_flags(0X1DF48,0x400);
	set_frame_size(0X1DF48, 0X4, 0, 0);
	add_func    (0X1DF5C,0X1DF70);
	set_func_flags(0X1DF5C,0x400);
	set_frame_size(0X1DF5C, 0X4, 0, 0);
	add_func    (0X1DF70,0X1DF84);
	set_func_flags(0X1DF70,0x400);
	set_frame_size(0X1DF70, 0X4, 0, 0);
	add_func    (0X1DF84,0X1DF98);
	set_func_flags(0X1DF84,0x400);
	set_frame_size(0X1DF84, 0X4, 0, 0);
	add_func    (0X1DF98,0X1DFAC);
	set_func_flags(0X1DF98,0x400);
	set_frame_size(0X1DF98, 0X4, 0, 0);
	add_func    (0X1DFB0,0X1E002);
	set_func_flags(0X1DFB0,0x400);
	set_frame_size(0X1DFB0, 0X14, 0, 0);
	add_func    (0X1E002,0X1E044);
	set_func_flags(0X1E002,0x400);
	set_frame_size(0X1E002, 0X10, 0, 0);
	add_func    (0X1E0B4,0X1E0B8);
	set_func_flags(0X1E0B4,0x480);
	add_func    (0X1E0B8,0X1E0C0);
	set_func_flags(0X1E0B8,0x400);
	add_func    (0X1E0C0,0X1E0C8);
	set_func_flags(0X1E0C0,0x400);
	add_func    (0X1E0C8,0X1E0CC);
	set_func_flags(0X1E0C8,0x480);
	add_func    (0X1E0CC,0X1E0CE);
	set_func_flags(0X1E0CC,0x440);
	add_func    (0X1E0CE,0X1E0D0);
	set_func_flags(0X1E0CE,0x440);
	add_func    (0X1E0D0,0X1E0E2);
	set_func_flags(0X1E0D0,0x400);
	add_func    (0X1E1A8,0X1E202);
	set_func_flags(0X1E1A8,0x400);
	set_frame_size(0X1E1A8, 0X18, 0, 0);
	add_func    (0X1E202,0X1E214);
	set_func_flags(0X1E202,0x400);
	set_frame_size(0X1E202, 0X8, 0, 0);
	add_func    (0X1E252,0X1E264);
	set_func_flags(0X1E252,0x400);
	add_func    (0X1E264,0X1E272);
	set_func_flags(0X1E264,0x400);
	add_func    (0X1E294,0X1E2A4);
	set_func_flags(0X1E294,0x400);
	add_func    (0X1E2A4,0X1E2C4);
	set_func_flags(0X1E2A4,0x400);
	set_frame_size(0X1E2A4, 0X8, 0, 0);
	add_func    (0X1E2C4,0X1E2EE);
	set_func_flags(0X1E2C4,0x400);
	set_frame_size(0X1E2C4, 0X8, 0, 0);
	add_func    (0X1E33C,0X1E36E);
	set_func_flags(0X1E33C,0x400);
	set_frame_size(0X1E33C, 0X8, 0, 0);
	add_func    (0X1E37E,0X1E3A0);
	set_func_flags(0X1E37E,0x400);
	set_frame_size(0X1E37E, 0X8, 0, 0);
	add_func    (0X1E414,0X1E47A);
	set_func_flags(0X1E414,0x400);
	set_frame_size(0X1E414, 0X20, 0, 0);
	add_func    (0X1E47A,0X1E4C4);
	set_func_flags(0X1E47A,0x400);
	set_frame_size(0X1E47A, 0X8, 0, 0);
	add_func    (0X1E4C4,0X1E4CE);
	set_func_flags(0X1E4C4,0x400);
	add_func    (0X1E4CE,0X1E4D8);
	set_func_flags(0X1E4CE,0x400);
	add_func    (0X1E500,0X1E50A);
	set_func_flags(0X1E500,0x400);
	add_func    (0X1E50A,0X1E514);
	set_func_flags(0X1E50A,0x400);
	add_func    (0X1E514,0X1E51E);
	set_func_flags(0X1E514,0x400);
	add_func    (0X1E51E,0X1E528);
	set_func_flags(0X1E51E,0x400);
	add_func    (0X1E528,0X1E532);
	set_func_flags(0X1E528,0x400);
	add_func    (0X1E532,0X1E53C);
	set_func_flags(0X1E532,0x400);
	add_func    (0X1E53C,0X1E546);
	set_func_flags(0X1E53C,0x400);
	add_func    (0X1E546,0X1E550);
	set_func_flags(0X1E546,0x400);
	add_func    (0X1E550,0X1E55A);
	set_func_flags(0X1E550,0x400);
	add_func    (0X1E55A,0X1E564);
	set_func_flags(0X1E55A,0x400);
	add_func    (0X1E564,0X1E574);
	set_func_flags(0X1E564,0x400);
	set_frame_size(0X1E564, 0X8, 0, 0);
	add_func    (0X1E574,0X1E588);
	set_func_flags(0X1E574,0x400);
	set_frame_size(0X1E574, 0X8, 0, 0);
	add_func    (0X1E588,0X1E592);
	set_func_flags(0X1E588,0x400);
	add_func    (0X1E592,0X1E5A2);
	set_func_flags(0X1E592,0x400);
	set_frame_size(0X1E592, 0X4, 0, 0);
	add_func    (0X1E5A2,0X1E5AC);
	set_func_flags(0X1E5A2,0x400);
	add_func    (0X1E5AC,0X1E5B6);
	set_func_flags(0X1E5AC,0x400);
	add_func    (0X1E5B6,0X1E5BA);
	set_func_flags(0X1E5B6,0x400);
	add_func    (0X1E5BA,0X1E5DA);
	set_func_flags(0X1E5BA,0x400);
	set_frame_size(0X1E5BA, 0X8, 0, 0);
	add_func    (0X1E5DA,0X1E5E8);
	set_func_flags(0X1E5DA,0x400);
	add_func    (0X1E604,0X1E62A);
	set_func_flags(0X1E604,0x400);
	set_frame_size(0X1E604, 0X8, 0, 0);
	add_func    (0X1E684,0X1E69A);
	set_func_flags(0X1E684,0x400);
	set_frame_size(0X1E684, 0X8, 0, 0);
	add_func    (0X1E6E0,0X1E78A);
	set_func_flags(0X1E6E0,0x400);
	set_frame_size(0X1E6E0, 0X10, 0, 0);
	add_func    (0X1E78A,0X1E7B0);
	set_func_flags(0X1E78A,0x400);
	set_frame_size(0X1E78A, 0X18, 0, 0);
	add_func    (0X1E7B0,0X1E7BE);
	set_func_flags(0X1E7B0,0x400);
	add_func    (0X1E8AC,0X1E900);
	set_func_flags(0X1E8AC,0x400);
	set_frame_size(0X1E8AC, 0X8, 0, 0);
	add_func    (0X1E900,0X1E91A);
	set_func_flags(0X1E900,0x400);
	add_func    (0X1E91A,0X1E940);
	set_func_flags(0X1E91A,0x400);
	set_frame_size(0X1E91A, 0X4, 0, 0);
	add_func    (0X1E940,0X1E962);
	set_func_flags(0X1E940,0x400);
	add_func    (0X1E9B4,0X1E9C0);
	set_func_flags(0X1E9B4,0x400);
	add_func    (0X1E9F0,0X1EA1A);
	set_func_flags(0X1E9F0,0x400);
	set_frame_size(0X1E9F0, 0X8, 0, 0);
	add_func    (0X1EA62,0X1EA96);
	set_func_flags(0X1EA62,0x400);
	set_frame_size(0X1EA62, 0X10, 0, 0);
	add_func    (0X1EC76,0X1ED88);
	set_func_flags(0X1EC76,0x400);
	set_frame_size(0X1EC76, 0X18, 0, 0);
	add_func    (0X1ED88,0X1EE3E);
	set_func_flags(0X1ED88,0x400);
	set_frame_size(0X1ED88, 0X10, 0, 0);
	add_func    (0X1F294,0X1F2A8);
	set_func_flags(0X1F294,0x400);
	add_func    (0X1F2A8,0X1F2CA);
	set_func_flags(0X1F2A8,0x400);
	add_func    (0X1F2CA,0X1F344);
	set_func_flags(0X1F2CA,0x400);
	set_frame_size(0X1F2CA, 0X10, 0, 0);
	add_func    (0X1F344,0X1F45A);
	set_func_flags(0X1F344,0x400);
	set_frame_size(0X1F344, 0X28, 0, 0);
	add_func    (0X1F472,0X1F4C4);
	set_func_flags(0X1F472,0x400);
	set_frame_size(0X1F472, 0X10, 0, 0);
	add_func    (0X1F4C4,0X1F54E);
	set_func_flags(0X1F4C4,0x400);
	set_frame_size(0X1F4C4, 0X20, 0, 0);
	add_func    (0X1F54E,0X1F586);
	set_func_flags(0X1F54E,0x400);
	add_func    (0X1F586,0X1F604);
	set_func_flags(0X1F586,0x400);
	set_frame_size(0X1F586, 0X10, 0, 0);
	add_func    (0X1F604,0X1F72E);
	set_func_flags(0X1F604,0x400);
	set_frame_size(0X1F604, 0X28, 0, 0);
	add_func    (0X1F79C,0X1F82A);
	set_func_flags(0X1F79C,0x400);
	set_frame_size(0X1F79C, 0X20, 0, 0);
	add_func    (0X1F82A,0X1F850);
	set_func_flags(0X1F82A,0x400);
	add_func    (0X1F850,0X1F8BA);
	set_func_flags(0X1F850,0x400);
	set_frame_size(0X1F850, 0X10, 0, 0);
	add_func    (0X1F8BA,0X1F9BE);
	set_func_flags(0X1F8BA,0x400);
	set_frame_size(0X1F8BA, 0X28, 0, 0);
	add_func    (0X1FA28,0X1FAB2);
	set_func_flags(0X1FA28,0x400);
	set_frame_size(0X1FA28, 0X20, 0, 0);
	add_func    (0X1FACC,0X1FAF0);
	set_func_flags(0X1FACC,0x400);
	add_func    (0X1FAF0,0X1FB5A);
	set_func_flags(0X1FAF0,0x400);
	set_frame_size(0X1FAF0, 0X10, 0, 0);
	add_func    (0X1FB5A,0X1FC6C);
	set_func_flags(0X1FB5A,0x400);
	set_frame_size(0X1FB5A, 0X28, 0, 0);
	add_func    (0X1FCDA,0X1FD68);
	set_func_flags(0X1FCDA,0x400);
	set_frame_size(0X1FCDA, 0X20, 0, 0);
	add_func    (0X1FD68,0X1FD9E);
	set_func_flags(0X1FD68,0x400);
	set_frame_size(0X1FD68, 0X20, 0, 0);
	define_local_var(0X1FD68, 0X1FD9E, "[bp-0X10]", "varg_r0");
	define_local_var(0X1FD68, 0X1FD9E, "[bp-0XC]", "varg_r1");
	define_local_var(0X1FD68, 0X1FD9E, "[bp-0X8]", "varg_r2");
	define_local_var(0X1FD68, 0X1FD9E, "[bp-0X4]", "varg_r3");
	add_func    (0X1FD9E,0X1FDB4);
	set_func_flags(0X1FD9E,0x400);
	add_func    (0X1FDCC,0X1FE4C);
	set_func_flags(0X1FDCC,0x400);
	set_frame_size(0X1FDCC, 0X10, 0, 0);
	add_func    (0X1FE4C,0X1FE7A);
	set_func_flags(0X1FE4C,0x400);
	set_frame_size(0X1FE4C, 0X10, 0, 0);
	add_func    (0X1FE7A,0X1FE92);
	set_func_flags(0X1FE7A,0x400);
	add_func    (0X1FE92,0X1FEB2);
	set_func_flags(0X1FE92,0x400);
	set_frame_size(0X1FE92, 0X8, 0, 0);
	add_func    (0X1FEBE,0X1FECC);
	set_func_flags(0X1FEBE,0x400);
	add_func    (0X1FECC,0X1FEEA);
	set_func_flags(0X1FECC,0x400);
	set_frame_size(0X1FECC, 0X8, 0, 0);
	add_func    (0X1FEF2,0X1FEFE);
	set_func_flags(0X1FEF2,0x400);
	add_func    (0X1FEFE,0X1FF06);
	set_func_flags(0X1FEFE,0x400);
	add_func    (0X1FF06,0X1FF0E);
	set_func_flags(0X1FF06,0x400);
	add_func    (0X1FF20,0X1FF40);
	set_func_flags(0X1FF20,0x400);
	set_frame_size(0X1FF20, 0X10, 0, 0);
	add_func    (0X1FF44,0X1FF74);
	set_func_flags(0X1FF44,0x400);
	set_frame_size(0X1FF44, 0X18, 0, 0);
	add_func    (0X1FF78,0X1FF9E);
	set_func_flags(0X1FF78,0x400);
	set_frame_size(0X1FF78, 0X20, 0, 0);
	define_local_var(0X1FF78, 0X1FF9E, "[bp-0X10]", "varg_r0");
	define_local_var(0X1FF78, 0X1FF9E, "[bp-0XC]", "varg_r1");
	define_local_var(0X1FF78, 0X1FF9E, "[bp-0X8]", "varg_r2");
	define_local_var(0X1FF78, 0X1FF9E, "[bp-0X4]", "varg_r3");
	add_func    (0X1FFA4,0X1FFFA);
	set_func_flags(0X1FFA4,0x400);
	set_frame_size(0X1FFA4, 0X10, 0, 0);
	add_func    (0X1FFFA,0X20016);
	set_func_flags(0X1FFFA,0x400);
	set_frame_size(0X1FFFA, 0X10, 0, 0);
	add_func    (0X20038,0X201BC);
	set_func_flags(0X20038,0x400);
	set_frame_size(0X20038, 0X28, 0, 0);
	add_func    (0X201C0,0X201F4);
	set_func_flags(0X201C0,0x400);
	set_frame_size(0X201C0, 0X48, 0, 0);
	define_local_var(0X201C0, 0X201F4, "[bp-0X10]", "varg_r0");
	define_local_var(0X201C0, 0X201F4, "[bp-0XC]", "varg_r1");
	define_local_var(0X201C0, 0X201F4, "[bp-0X8]", "varg_r2");
	define_local_var(0X201C0, 0X201F4, "[bp-0X4]", "varg_r3");
	add_func    (0X201FC,0X20348);
	set_func_flags(0X201FC,0x400);
	set_frame_size(0X201FC, 0X38, 0, 0);
	add_func    (0X20348,0X2035C);
	set_func_flags(0X20348,0x400);
	add_func    (0X2035C,0X203B4);
	set_func_flags(0X2035C,0x400);
	set_frame_size(0X2035C, 0X8, 0, 0);
	add_func    (0X203B4,0X203F2);
	set_func_flags(0X203B4,0x400);
	set_frame_size(0X203B4, 0X8, 0, 0);
	add_func    (0X203F2,0X20488);
	set_func_flags(0X203F2,0x400);
	set_frame_size(0X203F2, 0X10, 0, 0);
	add_func    (0X20488,0X20576);
	set_func_flags(0X20488,0x400);
	add_func    (0X20576,0X205CA);
	set_func_flags(0X20576,0x400);
	add_func    (0X205CA,0X20618);
	set_func_flags(0X205CA,0x400);
	set_frame_size(0X205CA, 0X4, 0, 0);
	add_func    (0X20622,0X2062E);
	set_func_flags(0X20622,0x400);
	set_frame_size(0X20622, 0X8, 0, 0);
	add_func    (0X2062E,0X2065A);
	set_func_flags(0X2062E,0x400);
	set_frame_size(0X2062E, 0X10, 0, 0);
	add_func    (0X2065A,0X2067C);
	set_func_flags(0X2065A,0x400);
	set_frame_size(0X2065A, 0X10, 0, 0);
	add_func    (0X2067C,0X2068E);
	set_func_flags(0X2067C,0x400);
	add_func    (0X2068E,0X206A0);
	set_func_flags(0X2068E,0x400);
	add_func    (0X206A0,0X206F2);
	set_func_flags(0X206A0,0x400);
	set_frame_size(0X206A0, 0X10, 0, 0);
	add_func    (0X206F2,0X207A4);
	set_func_flags(0X206F2,0x400);
	set_frame_size(0X206F2, 0X20, 0, 0);
	add_func    (0X207A4,0X2080C);
	set_func_flags(0X207A4,0x400);
	set_frame_size(0X207A4, 0X18, 0, 0);
	add_func    (0X20844,0X2084E);
	set_func_flags(0X20844,0x400);
	add_func    (0X2084E,0X2086E);
	set_func_flags(0X2084E,0x400);
	set_frame_size(0X2084E, 0X40, 0, 0);
	add_func    (0X20874,0X2087E);
	set_func_flags(0X20874,0x400);
	add_func    (0X2087E,0X2088E);
	set_func_flags(0X2087E,0x400);
	add_func    (0X20890,0X20946);
	set_func_flags(0X20890,0x400);
	set_frame_size(0X20890, 0X38, 0, 0);
	add_func    (0X2094C,0X209B8);
	set_func_flags(0X2094C,0x400);
	set_frame_size(0X2094C, 0X18, 0, 0);
	add_func    (0X209C8,0X20A0C);
	set_func_flags(0X209C8,0x400);
	set_frame_size(0X209C8, 0X8, 0, 0);
	add_func    (0X20A0C,0X20A24);
	set_func_flags(0X20A0C,0x400);
	set_frame_size(0X20A0C, 0X8, 0, 0);
	add_func    (0X20A38,0X20A54);
	set_func_flags(0X20A38,0x400);
	add_func    (0X20A54,0X20C50);
	set_func_flags(0X20A54,0x400);
	set_frame_size(0X20A54, 0X58, 0, 0);
	add_func    (0X20C50,0X20EEC);
	set_func_flags(0X20C50,0x400);
	set_frame_size(0X20C50, 0X78, 0, 0);
	add_func    (0X20F04,0X20F1C);
	set_func_flags(0X20F04,0x400);
	add_func    (0X20F64,0X20F68);
	set_func_flags(0X20F64,0x400);
	add_func    (0X20F6C,0X20F70);
	set_func_flags(0X20F6C,0x400);
	add_func    (0X20F74,0X20FFE);
	set_func_flags(0X20F74,0x400);
	set_frame_size(0X20F74, 0XC, 0, 0);
	add_func    (0X20FFE,0X21010);
	set_func_flags(0X20FFE,0x400);
	set_frame_size(0X20FFE, 0X8, 0, 0);
	add_func    (0X21012,0X211BE);
	set_func_flags(0X21012,0x400);
	set_frame_size(0X21012, 0X60, 0, 0);
	add_func    (0X211BE,0X2142A);
	set_func_flags(0X211BE,0x400);
	set_frame_size(0X211BE, 0X68, 0, 0);
	add_func    (0X2142A,0X2143E);
	set_func_flags(0X2142A,0x400);
	set_frame_size(0X2142A, 0X8, 0, 0);
	add_func    (0X21456,0X2146A);
	set_func_flags(0X21456,0x400);
	set_frame_size(0X21456, 0X8, 0, 0);
	add_func    (0X21484,0X217F2);
	set_func_flags(0X21484,0x400);
	set_frame_size(0X21484, 0X60, 0, 0);
	add_func    (0X217F8,0X218D0);
	set_func_flags(0X217F8,0x400);
	set_frame_size(0X217F8, 0X48, 0, 0);
	add_func    (0X218D4,0X21914);
	set_func_flags(0X218D4,0x400);
	set_frame_size(0X218D4, 0X10, 0, 0);
	add_func    (0X21914,0X2191E);
	set_func_flags(0X21914,0x400);
	set_frame_size(0X21914, 0X8, 0, 0);
	add_func    (0X21924,0X21994);
	set_func_flags(0X21924,0x400);
	set_frame_size(0X21924, 0X18, 0, 0);
	add_func    (0X21CBC,0X21DE0);
	set_func_flags(0X21CBC,0x400);
	set_frame_size(0X21CBC, 0X48, 0, 0);
	add_func    (0X21DF0,0X21E02);
	set_func_flags(0X21DF0,0x401);
	set_frame_size(0X21DF0, 0X8, 0, 0);
	add_func    (0X21E04,0X21E84);
	set_func_flags(0X21E04,0x400);
	add_func    (0X21E84,0X21EAA);
	set_func_flags(0X21E84,0x400);
	add_func    (0X21EAC,0X21EB4);
	set_func_flags(0X21EAC,0x401);
	add_func    (0X21EBA,0X21F9E);
	set_func_flags(0X21EBA,0x400);
	add_func    (0X21F9E,0X22256);
	set_func_flags(0X21F9E,0x400);
	set_frame_size(0X21F9E, 0X10, 0, 0);
	add_func    (0X222D8,0X22328);
	set_func_flags(0X222D8,0x400);
	set_frame_size(0X222D8, 0X8, 0, 0);
	add_func    (0X2232C,0X223F2);
	set_func_flags(0X2232C,0x400);
	add_func    (0X223F2,0X2241A);
	set_func_flags(0X223F2,0x400);
	set_frame_size(0X223F2, 0X18, 0, 0);
	add_func    (0X2241A,0X22442);
	set_func_flags(0X2241A,0x400);
	set_frame_size(0X2241A, 0X18, 0, 0);
	add_func    (0X22442,0X2246A);
	set_func_flags(0X22442,0x400);
	set_frame_size(0X22442, 0X18, 0, 0);
	add_func    (0X2246A,0X22492);
	set_func_flags(0X2246A,0x400);
	set_frame_size(0X2246A, 0X18, 0, 0);
	add_func    (0X22492,0X226D6);
	set_func_flags(0X22492,0x400);
	add_func    (0X226D8,0X226FA);
	set_func_flags(0X226D8,0x401);
	add_func    (0X226FA,0X2273C);
	set_func_flags(0X226FA,0x400);
	set_frame_size(0X226FA, 0X4, 0, 0);
	add_func    (0X2276C,0X2283C);
	set_func_flags(0X2276C,0x400);
	set_frame_size(0X2276C, 0X18, 0, 0);
	add_func    (0X22844,0X228BA);
	set_func_flags(0X22844,0x400);
	set_frame_size(0X22844, 0X8, 0, 0);
	add_func    (0X228CC,0X22940);
	set_func_flags(0X228CC,0x400);
	set_frame_size(0X228CC, 0X10, 0, 0);
	add_func    (0X22948,0X229FC);
	set_func_flags(0X22948,0x400);
	set_frame_size(0X22948, 0X10, 0, 0);
	add_func    (0X22A08,0X22B68);
	set_func_flags(0X22A08,0x400);
	set_frame_size(0X22A08, 0X28, 0, 0);
	add_func    (0X22B70,0X22C74);
	set_func_flags(0X22B70,0x400);
	set_frame_size(0X22B70, 0X28, 0, 0);
	add_func    (0X22C7C,0X22CA4);
	set_func_flags(0X22C7C,0x400);
	add_func    (0X22CA4,0X22FE0);
	set_func_flags(0X22CA4,0x400);
	set_frame_size(0X22CA4, 0X80, 0, 0);
	add_func    (0X2302C,0X23112);
	set_func_flags(0X2302C,0x400);
	set_frame_size(0X2302C, 0X30, 0, 0);
	add_func    (0X23128,0X231D2);
	set_func_flags(0X23128,0x400);
	set_frame_size(0X23128, 0X18, 0, 0);
	add_func    (0X231D4,0X232B4);
	set_func_flags(0X231D4,0x400);
	set_frame_size(0X231D4, 0X40, 0, 0);
	add_func    (0X232C0,0X232CC);
	set_func_flags(0X232C0,0x400);
	add_func    (0X232D0,0X232D6);
	set_func_flags(0X232D0,0x400);
	add_func    (0X232D6,0X232DA);
	set_func_flags(0X232D6,0x480);
	add_func    (0X232DA,0X232E6);
	set_func_flags(0X232DA,0x400);
	add_func    (0X232E6,0X232F4);
	set_func_flags(0X232E6,0x400);
	add_func    (0X232F4,0X232FE);
	set_func_flags(0X232F4,0x400);
	add_func    (0X23304,0X2330E);
	set_func_flags(0X23304,0x400);
	add_func    (0X2330E,0X23314);
	set_func_flags(0X2330E,0x400);
	add_func    (0X23314,0X2331C);
	set_func_flags(0X23314,0x400);
	add_func    (0X2331C,0X2332C);
	set_func_flags(0X2331C,0x400);
	set_frame_size(0X2331C, 0X8, 0, 0);
	add_func    (0X2332C,0X233B0);
	set_func_flags(0X2332C,0x400);
	set_frame_size(0X2332C, 0X18, 0, 0);
	add_func    (0X233B4,0X233CA);
	set_func_flags(0X233B4,0x400);
	set_frame_size(0X233B4, 0X8, 0, 0);
	add_func    (0X233CA,0X233D8);
	set_func_flags(0X233CA,0x400);
	add_func    (0X233D8,0X2346C);
	set_func_flags(0X233D8,0x400);
	set_frame_size(0X233D8, 0X20, 0, 0);
	add_func    (0X23474,0X234C4);
	set_func_flags(0X23474,0x400);
	set_frame_size(0X23474, 0X8, 0, 0);
	add_func    (0X234CC,0X23540);
	set_func_flags(0X234CC,0x400);
	set_frame_size(0X234CC, 0X18, 0, 0);
	add_func    (0X23540,0X23868);
	set_func_flags(0X23540,0x400);
	set_frame_size(0X23540, 0X60, 0, 0);
	add_func    (0X2389C,0X23962);
	set_func_flags(0X2389C,0x400);
	set_frame_size(0X2389C, 0X18, 0, 0);
	add_func    (0X23980,0X23B00);
	set_func_flags(0X23980,0x400);
	set_frame_size(0X23980, 0X18, 0, 0);
	add_func    (0X23B34,0X24504);
	set_func_flags(0X23B34,0x400);
	set_frame_size(0X23B34, 0X80, 0, 0);
	add_func    (0X2450C,0X245A2);
	set_func_flags(0X2450C,0x400);
	set_frame_size(0X2450C, 0X20, 0, 0);
	add_func    (0X245AC,0X245F8);
	set_func_flags(0X245AC,0x400);
	set_frame_size(0X245AC, 0X18, 0, 0);
	add_func    (0X245F8,0X2461A);
	set_func_flags(0X245F8,0x400);
	set_frame_size(0X245F8, 0X8, 0, 0);
	add_func    (0X24624,0X24646);
	set_func_flags(0X24624,0x400);
	set_frame_size(0X24624, 0X8, 0, 0);
	add_func    (0X24650,0X246A8);
	set_func_flags(0X24650,0x400);
	add_func    (0X246B4,0X24748);
	set_func_flags(0X246B4,0x400);
	set_frame_size(0X246B4, 0X8, 0, 0);
	add_func    (0X24748,0X24768);
	set_func_flags(0X24748,0x400);
	add_func    (0X2482C,0X24A54);
	set_func_flags(0X2482C,0x400);
	set_frame_size(0X2482C, 0X18, 0, 0);
	add_func    (0X24ADC,0X24B54);
	set_func_flags(0X24ADC,0x400);
	add_func    (0X24B54,0X24BB0);
	set_func_flags(0X24B54,0x400);
	set_frame_size(0X24B54, 0, 0, 0);
	add_func    (0X24BB4,0X24C0C);
	set_func_flags(0X24BB4,0x400);
	set_frame_size(0X24BB4, 0, 0, 0);
	add_func    (0X24C0E,0X24C3C);
	set_func_flags(0X24C0E,0x400);
	add_func    (0X24C3C,0X24C62);
	set_func_flags(0X24C3C,0x400);
	add_func    (0X24C64,0X24CC6);
	set_func_flags(0X24C64,0x400);
	add_func    (0X24CC6,0X24CDC);
	set_func_flags(0X24CC6,0x400);
	set_frame_size(0X24CC6, 0X10, 0, 0);
	add_func    (0X24CDC,0X24E28);
	set_func_flags(0X24CDC,0x400);
	set_frame_size(0X24CDC, 0X10, 0, 0);
	add_func    (0X24E30,0X24ECC);
	set_func_flags(0X24E30,0x400);
	add_func    (0X24ECC,0X24ED8);
	set_func_flags(0X24ECC,0x400);
	add_func    (0X24ED8,0X24F44);
	set_func_flags(0X24ED8,0x400);
	add_func    (0X24F44,0X24F5A);
	set_func_flags(0X24F44,0x400);
	set_frame_size(0X24F44, 0X8, 0, 0);
	add_func    (0X24F5C,0X25124);
	set_func_flags(0X24F5C,0x400);
	set_frame_size(0X24F5C, 0X18, 0, 0);
	add_func    (0X25128,0X252F8);
	set_func_flags(0X25128,0x400);
	set_frame_size(0X25128, 0X8, 0, 0);
	add_func    (0X252FC,0X25344);
	set_func_flags(0X252FC,0x400);
	set_frame_size(0X252FC, 0X8, 0, 0);
	add_func    (0X25354,0X25362);
	set_func_flags(0X25354,0x400);
	add_func    (0X2543C,0X255BC);
	set_func_flags(0X2543C,0);
	set_frame_size(0X2543C, 0X4, 0, 0);
	add_func    (0X255C0,0X255EC);
	set_func_flags(0X255C0,0x400);
	set_frame_size(0X255C0, 0, 0, 0);
	add_func    (0X255F8,0X25630);
	set_func_flags(0X255F8,0x400);
	set_frame_size(0X255F8, 0, 0, 0);
	add_func    (0X25638,0X25668);
	set_func_flags(0X25638,0x400);
	add_func    (0X25668,0X2568E);
	set_func_flags(0X25668,0x400);
	add_func    (0X25690,0X256F8);
	set_func_flags(0X25690,0x400);
	add_func    (0X256F8,0X257FA);
	set_func_flags(0X256F8,0);
	add_func    (0X257FA,0X25886);
	set_func_flags(0X257FA,0x400);
	add_func    (0X25890,0X2598E);
	set_func_flags(0X25890,0x400);
	add_func    (0X259F6,0X25A52);
	set_func_flags(0X259F6,0x400);
	add_func    (0X25A52,0X25A9E);
	set_func_flags(0X25A52,0x400);
	add_func    (0X25A9E,0X25AA2);
	set_func_flags(0X25A9E,0x480);
	add_func    (0X25AA2,0X25AA6);
	set_func_flags(0X25AA2,0x480);
	add_func    (0X25AA6,0X25AAA);
	set_func_flags(0X25AA6,0x480);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	split_sreg_range(0XA000,"T",0,3);
	split_sreg_range(0XA0CC,"T",0X1,3);
	split_sreg_range(0XA0D4,"T",0X1,3);
	split_sreg_range(0XA0EA,"T",0X1,3);
	split_sreg_range(0XA180,"T",0X1,3);
	split_sreg_range(0XA210,"T",0X1,3);
	split_sreg_range(0XA230,"T",0X1,3);
	split_sreg_range(0XA234,"T",0X1,3);
	split_sreg_range(0XA248,"T",0X1,3);
	split_sreg_range(0XA254,"T",0X1,3);
	split_sreg_range(0XA27C,"T",0X1,3);
	split_sreg_range(0XA280,"T",0X1,3);
	split_sreg_range(0XA28A,"T",0X1,3);
	split_sreg_range(0XA33C,"T",0X1,3);
	split_sreg_range(0XA396,"T",0X1,3);
	split_sreg_range(0XA43E,"T",0X1,3);
	split_sreg_range(0XA478,"T",0X1,3);
	split_sreg_range(0XA4B0,"T",0X1,3);
	split_sreg_range(0XA4B4,"T",0X1,3);
	split_sreg_range(0XA4CC,"T",0X1,3);
	split_sreg_range(0XA4DA,"T",0X1,3);
	split_sreg_range(0XA4E6,"T",0X1,3);
	split_sreg_range(0XA4F2,"T",0X1,3);
	split_sreg_range(0XA4FE,"T",0X1,3);
	split_sreg_range(0XA50A,"T",0X1,3);
	split_sreg_range(0XA518,"T",0X1,3);
	split_sreg_range(0XA53E,"T",0X1,3);
	split_sreg_range(0XA544,"T",0X1,3);
	split_sreg_range(0XA55C,"T",0X1,3);
	split_sreg_range(0XA588,"T",0X1,3);
	split_sreg_range(0XA590,"T",0X1,3);
	split_sreg_range(0XA596,"T",0X1,3);
	split_sreg_range(0XA654,"T",0X1,3);
	split_sreg_range(0XA788,"T",0X1,3);
	split_sreg_range(0XA78C,"T",0X1,3);
	split_sreg_range(0XA78E,"T",0X1,3);
	split_sreg_range(0XA79C,"T",0X1,3);
	split_sreg_range(0XA7A4,"T",0X1,3);
	split_sreg_range(0XA7BA,"T",0X1,3);
	split_sreg_range(0XA7BE,"T",0X1,3);
	split_sreg_range(0XA7C2,"T",0X1,3);
	split_sreg_range(0XA7C6,"T",0X1,3);
	split_sreg_range(0XA7C8,"T",0X1,3);
	split_sreg_range(0XA7CE,"T",0X1,3);
	split_sreg_range(0XA822,"T",0X1,3);
	split_sreg_range(0XA8A2,"T",0X1,3);
	split_sreg_range(0XA98C,"T",0X1,3);
	split_sreg_range(0XA990,"T",0X1,3);
	split_sreg_range(0XA994,"T",0X1,3);
	split_sreg_range(0XA99C,"T",0X1,3);
	split_sreg_range(0XA9A8,"T",0X1,3);
	split_sreg_range(0XA9BE,"T",0X1,3);
	split_sreg_range(0XAA2E,"T",0X1,3);
	split_sreg_range(0XAA40,"T",0X1,3);
	split_sreg_range(0XAA42,"T",0X1,3);
	split_sreg_range(0XAA48,"T",0X1,3);
	split_sreg_range(0XAA6A,"T",0X1,3);
	split_sreg_range(0XAA80,"T",0X1,3);
	split_sreg_range(0XAA96,"T",0X1,3);
	split_sreg_range(0XAAAC,"T",0X1,3);
	split_sreg_range(0XAAC2,"T",0X1,3);
	split_sreg_range(0XAAD8,"T",0X1,3);
	split_sreg_range(0XAAEE,"T",0X1,3);
	split_sreg_range(0XAB0C,"T",0X1,3);
	split_sreg_range(0XAB22,"T",0X1,3);
	split_sreg_range(0XAB24,"T",0X1,3);
	split_sreg_range(0XAE1E,"T",0X1,3);
	split_sreg_range(0XAE36,"T",0X1,3);
	split_sreg_range(0XAECC,"T",0X1,3);
	split_sreg_range(0XAEEE,"T",0X1,3);
	split_sreg_range(0XAF32,"T",0X1,3);
	split_sreg_range(0XAF84,"T",0X1,3);
	split_sreg_range(0XAFAA,"T",0X1,3);
	split_sreg_range(0XAFB2,"T",0X1,3);
	split_sreg_range(0XAFB6,"T",0X1,3);
	split_sreg_range(0XAFD4,"T",0X1,3);
	split_sreg_range(0XAFD8,"T",0X1,3);
	split_sreg_range(0XAFDE,"T",0X1,3);
	split_sreg_range(0XAFE8,"T",0X1,3);
	split_sreg_range(0XAFF0,"T",0X1,3);
	split_sreg_range(0XAFF8,"T",0X1,3);
	split_sreg_range(0XAFFA,"T",0X1,3);
	split_sreg_range(0XB000,"T",0X1,3);
	split_sreg_range(0XB032,"T",0X1,3);
	split_sreg_range(0XB090,"T",0X1,3);
	split_sreg_range(0XB094,"T",0X1,3);
	split_sreg_range(0XB0A8,"T",0X1,3);
	split_sreg_range(0XB0AC,"T",0X1,3);
	split_sreg_range(0XB0B4,"T",0X1,3);
	split_sreg_range(0XB0BC,"T",0X1,3);
	split_sreg_range(0XB0C4,"T",0X1,3);
	split_sreg_range(0XB0D0,"T",0X1,3);
	split_sreg_range(0XB0EC,"T",0X1,3);
	split_sreg_range(0XB102,"T",0X1,3);
	split_sreg_range(0XB118,"T",0X1,3);
	split_sreg_range(0XB230,"T",0X1,3);
	split_sreg_range(0XB2D0,"T",0X1,3);
	split_sreg_range(0XB2DA,"T",0X1,3);
	split_sreg_range(0XB2E4,"T",0X1,3);
	split_sreg_range(0XB2EC,"T",0X1,3);
	split_sreg_range(0XB2F0,"T",0X1,3);
	split_sreg_range(0XB2F2,"T",0X1,3);
	split_sreg_range(0XB342,"T",0X1,3);
	split_sreg_range(0XB364,"T",0X1,3);
	split_sreg_range(0XB390,"T",0X1,3);
	split_sreg_range(0XB398,"T",0X1,3);
	split_sreg_range(0XB3C4,"T",0X1,3);
	split_sreg_range(0XB3CC,"T",0X1,3);
	split_sreg_range(0XB3F8,"T",0X1,3);
	split_sreg_range(0XB400,"T",0X1,3);
	split_sreg_range(0XB412,"T",0X1,3);
	split_sreg_range(0XB414,"T",0X1,3);
	split_sreg_range(0XB426,"T",0X1,3);
	split_sreg_range(0XB428,"T",0X1,3);
	split_sreg_range(0XB43A,"T",0X1,3);
	split_sreg_range(0XB43C,"T",0X1,3);
	split_sreg_range(0XB47C,"T",0X1,3);
	split_sreg_range(0XB4AA,"T",0X1,3);
	split_sreg_range(0XB4CE,"T",0X1,3);
	split_sreg_range(0XB4D8,"T",0X1,3);
	split_sreg_range(0XB4F2,"T",0X1,3);
	split_sreg_range(0XB508,"T",0X1,3);
	split_sreg_range(0XB54C,"T",0X1,3);
	split_sreg_range(0XB594,"T",0X1,3);
	split_sreg_range(0XB598,"T",0X1,3);
	split_sreg_range(0XB5A4,"T",0X1,3);
	split_sreg_range(0XB5FE,"T",0X1,3);
	split_sreg_range(0XB604,"T",0X1,3);
	split_sreg_range(0XB676,"T",0X1,3);
	split_sreg_range(0XB68C,"T",0X1,3);
	split_sreg_range(0XB696,"T",0X1,3);
	split_sreg_range(0XB69A,"T",0X1,3);
	split_sreg_range(0XB6A2,"T",0X1,3);
	split_sreg_range(0XB6AA,"T",0X1,3);
	split_sreg_range(0XB6B0,"T",0X1,3);
	split_sreg_range(0XB6C8,"T",0X1,3);
	split_sreg_range(0XB6E2,"T",0X1,3);
	split_sreg_range(0XB6E4,"T",0X1,3);
	split_sreg_range(0XB6EE,"T",0X1,3);
	split_sreg_range(0XB702,"T",0X1,3);
	split_sreg_range(0XB714,"T",0X1,3);
	split_sreg_range(0XB71E,"T",0X1,3);
	split_sreg_range(0XB73A,"T",0X1,3);
	split_sreg_range(0XB788,"T",0X1,3);
	split_sreg_range(0XB79A,"T",0X1,3);
	split_sreg_range(0XB7B2,"T",0X1,3);
	split_sreg_range(0XB7B4,"T",0X1,3);
	split_sreg_range(0XB7B6,"T",0X1,3);
	split_sreg_range(0XB7C6,"T",0X1,3);
	split_sreg_range(0XB7D0,"T",0X1,3);
	split_sreg_range(0XB7F8,"T",0X1,3);
	split_sreg_range(0XB80C,"T",0X1,3);
	split_sreg_range(0XB82E,"T",0X1,3);
	split_sreg_range(0XB830,"T",0X1,3);
	split_sreg_range(0XB83C,"T",0X1,3);
	split_sreg_range(0XB846,"T",0X1,3);
	split_sreg_range(0XB85E,"T",0X1,3);
	split_sreg_range(0XB866,"T",0X1,3);
	split_sreg_range(0XB884,"T",0X1,3);
	split_sreg_range(0XB888,"T",0X1,3);
	split_sreg_range(0XB88A,"T",0X1,3);
	split_sreg_range(0XB890,"T",0X1,3);
	split_sreg_range(0XB8D2,"T",0X1,3);
	split_sreg_range(0XB8E0,"T",0X1,3);
	split_sreg_range(0XB8FA,"T",0X1,3);
	split_sreg_range(0XB914,"T",0X1,3);
	split_sreg_range(0XB916,"T",0X1,3);
	split_sreg_range(0XB918,"T",0X1,3);
	split_sreg_range(0XB928,"T",0X1,3);
	split_sreg_range(0XB954,"T",0X1,3);
	split_sreg_range(0XB976,"T",0X1,3);
	split_sreg_range(0XB998,"T",0X1,3);
	split_sreg_range(0XB9AE,"T",0X1,3);
	split_sreg_range(0XB9B0,"T",0X1,3);
	split_sreg_range(0XB9D8,"T",0X1,3);
	split_sreg_range(0XB9F0,"T",0X1,3);
	split_sreg_range(0XB9F2,"T",0X1,3);
	split_sreg_range(0XBA14,"T",0X1,3);
	split_sreg_range(0XBA1C,"T",0X1,3);
	split_sreg_range(0XBA2C,"T",0X1,3);
	split_sreg_range(0XBA3A,"T",0X1,3);
	split_sreg_range(0XBA48,"T",0X1,3);
	split_sreg_range(0XBA4E,"T",0X1,3);
	split_sreg_range(0XBA66,"T",0X1,3);
	split_sreg_range(0XBA72,"T",0X1,3);
	split_sreg_range(0XBA7C,"T",0X1,3);
	split_sreg_range(0XBA82,"T",0X1,3);
	split_sreg_range(0XBA94,"T",0X1,3);
	split_sreg_range(0XBA98,"T",0X1,3);
	split_sreg_range(0XBAAC,"T",0X1,3);
	split_sreg_range(0XBAB2,"T",0X1,3);
	split_sreg_range(0XBABE,"T",0X1,3);
	split_sreg_range(0XBAC4,"T",0X1,3);
	split_sreg_range(0XBAC6,"T",0X1,3);
	split_sreg_range(0XBAD8,"T",0X1,3);
	split_sreg_range(0XBAE2,"T",0X1,3);
	split_sreg_range(0XBAE6,"T",0X1,3);
	split_sreg_range(0XBAEA,"T",0X1,3);
	split_sreg_range(0XBAEC,"T",0X1,3);
	split_sreg_range(0XBAF6,"T",0X1,3);
	split_sreg_range(0XBB1C,"T",0X1,3);
	split_sreg_range(0XBB22,"T",0X1,3);
	split_sreg_range(0XBB44,"T",0X1,3);
	split_sreg_range(0XBB4A,"T",0X1,3);
	split_sreg_range(0XBB54,"T",0X1,3);
	split_sreg_range(0XBB56,"T",0X1,3);
	split_sreg_range(0XBB66,"T",0X1,3);
	split_sreg_range(0XBB72,"T",0X1,3);
	split_sreg_range(0XBB94,"T",0X1,3);
	split_sreg_range(0XBBA2,"T",0X1,3);
	split_sreg_range(0XBBB6,"T",0X1,3);
	split_sreg_range(0XBBB8,"T",0X1,3);
	split_sreg_range(0XBBE4,"T",0X1,3);
	split_sreg_range(0XBBEA,"T",0X1,3);
	split_sreg_range(0XBBF0,"T",0X1,3);
	split_sreg_range(0XBBFA,"T",0X1,3);
	split_sreg_range(0XBC0A,"T",0X1,3);
	split_sreg_range(0XBC1A,"T",0X1,3);
	split_sreg_range(0XBC20,"T",0X1,3);
	split_sreg_range(0XBC2E,"T",0X1,3);
	split_sreg_range(0XBC32,"T",0X1,3);
	split_sreg_range(0XBC36,"T",0X1,3);
	split_sreg_range(0XBC42,"T",0X1,3);
	split_sreg_range(0XBC60,"T",0X1,3);
	split_sreg_range(0XBC78,"T",0X1,3);
	split_sreg_range(0XBC96,"T",0X1,3);
	split_sreg_range(0XBCA4,"T",0X1,3);
	split_sreg_range(0XBCAA,"T",0X1,3);
	split_sreg_range(0XBCB8,"T",0X1,3);
	split_sreg_range(0XBCBC,"T",0X1,3);
	split_sreg_range(0XBCC4,"T",0X1,3);
	split_sreg_range(0XBCD2,"T",0X1,3);
	split_sreg_range(0XBCDA,"T",0X1,3);
	split_sreg_range(0XBCDE,"T",0X1,3);
	split_sreg_range(0XBCF8,"T",0X1,3);
	split_sreg_range(0XBD02,"T",0X1,3);
	split_sreg_range(0XBD08,"T",0X1,3);
	split_sreg_range(0XBD10,"T",0X1,3);
	split_sreg_range(0XBD16,"T",0X1,3);
	split_sreg_range(0XBD1C,"T",0X1,3);
	split_sreg_range(0XBD22,"T",0X1,3);
	split_sreg_range(0XBD28,"T",0X1,3);
	split_sreg_range(0XBD34,"T",0X1,3);
	split_sreg_range(0XBD3A,"T",0X1,3);
	split_sreg_range(0XBD40,"T",0X1,3);
	split_sreg_range(0XBD46,"T",0X1,3);
	split_sreg_range(0XBD4C,"T",0X1,3);
	split_sreg_range(0XBD52,"T",0X1,3);
	split_sreg_range(0XBD58,"T",0X1,3);
	split_sreg_range(0XBD64,"T",0X1,3);
	split_sreg_range(0XBD70,"T",0X1,3);
	split_sreg_range(0XBD86,"T",0X1,3);
	split_sreg_range(0XBDA4,"T",0X1,3);
	split_sreg_range(0XBDA6,"T",0X1,3);
	split_sreg_range(0XBDAA,"T",0X1,3);
	split_sreg_range(0XBDCA,"T",0X1,3);
	split_sreg_range(0XBDEA,"T",0X1,3);
	split_sreg_range(0XBDF2,"T",0X1,3);
	split_sreg_range(0XBDF8,"T",0X1,3);
	split_sreg_range(0XBE0E,"T",0X1,3);
	split_sreg_range(0XBE18,"T",0X1,3);
	split_sreg_range(0XBE1E,"T",0X1,3);
	split_sreg_range(0XBE26,"T",0X1,3);
	split_sreg_range(0XBE2E,"T",0X1,3);
	split_sreg_range(0XBE36,"T",0X1,3);
	split_sreg_range(0XBE40,"T",0X1,3);
	split_sreg_range(0XBE48,"T",0X1,3);
	split_sreg_range(0XBE50,"T",0X1,3);
	split_sreg_range(0XBE58,"T",0X1,3);
	split_sreg_range(0XBE60,"T",0X1,3);
	split_sreg_range(0XBE6E,"T",0X1,3);
	split_sreg_range(0XBE78,"T",0X1,3);
	split_sreg_range(0XBE82,"T",0X1,3);
	split_sreg_range(0XBE8E,"T",0X1,3);
	split_sreg_range(0XBE9A,"T",0X1,3);
	split_sreg_range(0XBEA6,"T",0X1,3);
	split_sreg_range(0XBEAC,"T",0X1,3);
	split_sreg_range(0XBEAE,"T",0X1,3);
	split_sreg_range(0XBEB0,"T",0X1,3);
	split_sreg_range(0XBEB2,"T",0X1,3);
	split_sreg_range(0XBEB4,"T",0X1,3);
	split_sreg_range(0XBEB6,"T",0X1,3);
	split_sreg_range(0XBEB8,"T",0X1,3);
	split_sreg_range(0XBEBA,"T",0X1,3);
	split_sreg_range(0XBEC2,"T",0X1,3);
	split_sreg_range(0XBEE2,"T",0X1,3);
	split_sreg_range(0XBEE4,"T",0X1,3);
	split_sreg_range(0XBEE6,"T",0X1,3);
	split_sreg_range(0XBEE8,"T",0X1,3);
	split_sreg_range(0XBEF4,"T",0X1,3);
	split_sreg_range(0XBF00,"T",0X1,3);
	split_sreg_range(0XBF0C,"T",0X1,3);
	split_sreg_range(0XBF18,"T",0X1,3);
	split_sreg_range(0XBF24,"T",0X1,3);
	split_sreg_range(0XBF30,"T",0X1,3);
	split_sreg_range(0XBF3C,"T",0X1,3);
	split_sreg_range(0XBF6A,"T",0X1,3);
	split_sreg_range(0XBF8A,"T",0X1,3);
	split_sreg_range(0XBF8C,"T",0X1,3);
	split_sreg_range(0XBF8E,"T",0X1,3);
	split_sreg_range(0XBF90,"T",0X1,3);
	split_sreg_range(0XBF92,"T",0X1,3);
	split_sreg_range(0XBFA2,"T",0X1,3);
	split_sreg_range(0XBFD0,"T",0X1,3);
	split_sreg_range(0XBFFE,"T",0X1,3);
	split_sreg_range(0XC02C,"T",0X1,3);
	split_sreg_range(0XC070,"T",0X1,3);
	split_sreg_range(0XC09E,"T",0X1,3);
	split_sreg_range(0XC0B6,"T",0X1,3);
	split_sreg_range(0XC0D6,"T",0X1,3);
	split_sreg_range(0XC0F4,"T",0X1,3);
	split_sreg_range(0XC10A,"T",0X1,3);
	split_sreg_range(0XC110,"T",0X1,3);
	split_sreg_range(0XC118,"T",0X1,3);
	split_sreg_range(0XC11A,"T",0X1,3);
	split_sreg_range(0XC120,"T",0X1,3);
	split_sreg_range(0XC122,"T",0X1,3);
	split_sreg_range(0XC13C,"T",0X1,3);
	split_sreg_range(0XC160,"T",0X1,3);
	split_sreg_range(0XC186,"T",0X1,3);
	split_sreg_range(0XC1A2,"T",0X1,3);
	split_sreg_range(0XC1A8,"T",0X1,3);
	split_sreg_range(0XC1AC,"T",0X1,3);
	split_sreg_range(0XC1B0,"T",0X1,3);
	split_sreg_range(0XC1B6,"T",0X1,3);
	split_sreg_range(0XC1BC,"T",0X1,3);
	split_sreg_range(0XC1C0,"T",0X1,3);
	split_sreg_range(0XC1DC,"T",0X1,3);
	split_sreg_range(0XC1E2,"T",0X1,3);
	split_sreg_range(0XC1E6,"T",0X1,3);
	split_sreg_range(0XC1EA,"T",0X1,3);
	split_sreg_range(0XC1F2,"T",0X1,3);
	split_sreg_range(0XC216,"T",0X1,3);
	split_sreg_range(0XC232,"T",0X1,3);
	split_sreg_range(0XC23C,"T",0X1,3);
	split_sreg_range(0XC240,"T",0X1,3);
	split_sreg_range(0XC242,"T",0X1,3);
	split_sreg_range(0XC268,"T",0X1,3);
	split_sreg_range(0XC270,"T",0X1,3);
	split_sreg_range(0XC276,"T",0X1,3);
	split_sreg_range(0XC2D0,"T",0X1,3);
	split_sreg_range(0XC2EE,"T",0X1,3);
	split_sreg_range(0XC3BE,"T",0X1,3);
	split_sreg_range(0XC3C6,"T",0X1,3);
	split_sreg_range(0XC3CA,"T",0X1,3);
	split_sreg_range(0XC3CC,"T",0X1,3);
	split_sreg_range(0XC444,"T",0X1,3);
	split_sreg_range(0XC456,"T",0X1,3);
	split_sreg_range(0XC464,"T",0X1,3);
	split_sreg_range(0XC492,"T",0X1,3);
	split_sreg_range(0XC4BC,"T",0X1,3);
	split_sreg_range(0XC4CE,"T",0X1,3);
	split_sreg_range(0XC4E8,"T",0X1,3);
	split_sreg_range(0XC4F8,"T",0X1,3);
	split_sreg_range(0XC500,"T",0X1,3);
	split_sreg_range(0XC51C,"T",0X1,3);
	split_sreg_range(0XC526,"T",0X1,3);
	split_sreg_range(0XC52E,"T",0X1,3);
	split_sreg_range(0XC54A,"T",0X1,3);
	split_sreg_range(0XC554,"T",0X1,3);
	split_sreg_range(0XC55C,"T",0X1,3);
	split_sreg_range(0XC570,"T",0X1,3);
	split_sreg_range(0XC59E,"T",0X1,3);
	split_sreg_range(0XC5A0,"T",0X1,3);
	split_sreg_range(0XC5B8,"T",0X1,3);
	split_sreg_range(0XC5BA,"T",0X1,3);
	split_sreg_range(0XC5BC,"T",0X1,3);
	split_sreg_range(0XC5CE,"T",0X1,3);
	split_sreg_range(0XC5D2,"T",0X1,3);
	split_sreg_range(0XC5D6,"T",0X1,3);
	split_sreg_range(0XC5DA,"T",0X1,3);
	split_sreg_range(0XC5DC,"T",0X1,3);
	split_sreg_range(0XC5E4,"T",0X1,3);
	split_sreg_range(0XC5FC,"T",0X1,3);
	split_sreg_range(0XC604,"T",0X1,3);
	split_sreg_range(0XC608,"T",0X1,3);
	split_sreg_range(0XC650,"T",0X1,3);
	split_sreg_range(0XC652,"T",0X1,3);
	split_sreg_range(0XC654,"T",0X1,3);
	split_sreg_range(0XC676,"T",0X1,3);
	split_sreg_range(0XC69E,"T",0X1,3);
	split_sreg_range(0XC6AC,"T",0X1,3);
	split_sreg_range(0XC6C0,"T",0X1,3);
	split_sreg_range(0XC6C8,"T",0X1,3);
	split_sreg_range(0XC6D2,"T",0X1,3);
	split_sreg_range(0XC6DE,"T",0X1,3);
	split_sreg_range(0XC6E2,"T",0X1,3);
	split_sreg_range(0XC6E6,"T",0X1,3);
	split_sreg_range(0XC6EA,"T",0X1,3);
	split_sreg_range(0XC6F0,"T",0X1,3);
	split_sreg_range(0XC704,"T",0X1,3);
	split_sreg_range(0XC720,"T",0X1,3);
	split_sreg_range(0XC73A,"T",0X1,3);
	split_sreg_range(0XC73C,"T",0X1,3);
	split_sreg_range(0XC742,"T",0X1,3);
	split_sreg_range(0XC75C,"T",0X1,3);
	split_sreg_range(0XC75E,"T",0X1,3);
	split_sreg_range(0XC7E8,"T",0X1,3);
	split_sreg_range(0XC7EA,"T",0X1,3);
	split_sreg_range(0XC7EE,"T",0X1,3);
	split_sreg_range(0XC7F0,"T",0X1,3);
	split_sreg_range(0XC80A,"T",0X1,3);
	split_sreg_range(0XC850,"T",0X1,3);
	split_sreg_range(0XC860,"T",0X1,3);
	split_sreg_range(0XC86C,"T",0X1,3);
	split_sreg_range(0XC886,"T",0X1,3);
	split_sreg_range(0XC8AC,"T",0X1,3);
	split_sreg_range(0XC8BE,"T",0X1,3);
	split_sreg_range(0XC8CA,"T",0X1,3);
	split_sreg_range(0XC8F2,"T",0X1,3);
	split_sreg_range(0XC8F8,"T",0X1,3);
	split_sreg_range(0XC904,"T",0X1,3);
	split_sreg_range(0XC946,"T",0X1,3);
	split_sreg_range(0XC94C,"T",0X1,3);
	split_sreg_range(0XC958,"T",0X1,3);
	split_sreg_range(0XC962,"T",0X1,3);
	split_sreg_range(0XC9B0,"T",0X1,3);
	split_sreg_range(0XC9B6,"T",0X1,3);
	split_sreg_range(0XC9CC,"T",0X1,3);
	split_sreg_range(0XC9F0,"T",0X1,3);
	split_sreg_range(0XCA0C,"T",0X1,3);
	split_sreg_range(0XCA24,"T",0X1,3);
	split_sreg_range(0XCA34,"T",0X1,3);
	split_sreg_range(0XCA3E,"T",0X1,3);
	split_sreg_range(0XCA48,"T",0X1,3);
	split_sreg_range(0XCA78,"T",0X1,3);
	split_sreg_range(0XCA7E,"T",0X1,3);
	split_sreg_range(0XCA8C,"T",0X1,3);
	split_sreg_range(0XCA96,"T",0X1,3);
	split_sreg_range(0XCAC6,"T",0X1,3);
	split_sreg_range(0XCACC,"T",0X1,3);
	split_sreg_range(0XCADA,"T",0X1,3);
	split_sreg_range(0XCAF2,"T",0X1,3);
	split_sreg_range(0XCB0C,"T",0X1,3);
	split_sreg_range(0XCB5E,"T",0X1,3);
	split_sreg_range(0XCB7A,"T",0X1,3);
	split_sreg_range(0XCB7C,"T",0X1,3);
	split_sreg_range(0XCB88,"T",0X1,3);
	split_sreg_range(0XCBAA,"T",0X1,3);
	split_sreg_range(0XCBB6,"T",0X1,3);
	split_sreg_range(0XCBCE,"T",0X1,3);
	split_sreg_range(0XCBD0,"T",0X1,3);
	split_sreg_range(0XCBD2,"T",0X1,3);
	split_sreg_range(0XCC22,"T",0X1,3);
	split_sreg_range(0XCC24,"T",0X1,3);
	split_sreg_range(0XCC26,"T",0X1,3);
	split_sreg_range(0XCCB6,"T",0X1,3);
	split_sreg_range(0XCCDA,"T",0X1,3);
	split_sreg_range(0XCCF8,"T",0X1,3);
	split_sreg_range(0XCD06,"T",0X1,3);
	split_sreg_range(0XCD12,"T",0X1,3);
	split_sreg_range(0XCD16,"T",0X1,3);
	split_sreg_range(0XCD28,"T",0X1,3);
	split_sreg_range(0XCD46,"T",0X1,3);
	split_sreg_range(0XCD4A,"T",0X1,3);
	split_sreg_range(0XCD62,"T",0X1,3);
	split_sreg_range(0XCD6E,"T",0X1,3);
	split_sreg_range(0XCD9A,"T",0X1,3);
	split_sreg_range(0XCDA0,"T",0X1,3);
	split_sreg_range(0XCDA8,"T",0X1,3);
	split_sreg_range(0XCDF4,"T",0X1,3);
	split_sreg_range(0XCDF8,"T",0X1,3);
	split_sreg_range(0XCE5C,"T",0X1,3);
	split_sreg_range(0XCE60,"T",0X1,3);
	split_sreg_range(0XCE7C,"T",0X1,3);
	split_sreg_range(0XCE8C,"T",0X1,3);
	split_sreg_range(0XCECA,"T",0X1,3);
	split_sreg_range(0XCECE,"T",0X1,3);
	split_sreg_range(0XCEFE,"T",0X1,3);
	split_sreg_range(0XCF02,"T",0X1,3);
	split_sreg_range(0XCF12,"T",0X1,3);
	split_sreg_range(0XCF24,"T",0X1,3);
	split_sreg_range(0XCF2C,"T",0X1,3);
	split_sreg_range(0XCF32,"T",0X1,3);
	split_sreg_range(0XCF38,"T",0X1,3);
	split_sreg_range(0XCF70,"T",0X1,3);
	split_sreg_range(0XCF78,"T",0X1,3);
	split_sreg_range(0XCF7E,"T",0X1,3);
	split_sreg_range(0XCF84,"T",0X1,3);
	split_sreg_range(0XCF8C,"T",0X1,3);
	split_sreg_range(0XCF94,"T",0X1,3);
	split_sreg_range(0XCF9E,"T",0X1,3);
	split_sreg_range(0XCFEC,"T",0X1,3);
	split_sreg_range(0XCFF0,"T",0X1,3);
	split_sreg_range(0XD020,"T",0X1,3);
	split_sreg_range(0XD022,"T",0X1,3);
	split_sreg_range(0XD05E,"T",0X1,3);
	split_sreg_range(0XD062,"T",0X1,3);
	split_sreg_range(0XD09E,"T",0X1,3);
	split_sreg_range(0XD0D8,"T",0X1,3);
	split_sreg_range(0XD112,"T",0X1,3);
	split_sreg_range(0XD124,"T",0X1,3);
	split_sreg_range(0XD12A,"T",0X1,3);
	split_sreg_range(0XD12E,"T",0X1,3);
	split_sreg_range(0XD148,"T",0X1,3);
	split_sreg_range(0XD15C,"T",0X1,3);
	split_sreg_range(0XD182,"T",0X1,3);
	split_sreg_range(0XD184,"T",0X1,3);
	split_sreg_range(0XD1B6,"T",0X1,3);
	split_sreg_range(0XD1D0,"T",0X1,3);
	split_sreg_range(0XD1E0,"T",0X1,3);
	split_sreg_range(0XD1EC,"T",0X1,3);
	split_sreg_range(0XD1F4,"T",0X1,3);
	split_sreg_range(0XD230,"T",0X1,3);
	split_sreg_range(0XD246,"T",0X1,3);
	split_sreg_range(0XD256,"T",0X1,3);
	split_sreg_range(0XD260,"T",0X1,3);
	split_sreg_range(0XD262,"T",0X1,3);
	split_sreg_range(0XD282,"T",0X1,3);
	split_sreg_range(0XD292,"T",0X1,3);
	split_sreg_range(0XD29E,"T",0X1,3);
	split_sreg_range(0XD2C2,"T",0X1,3);
	split_sreg_range(0XD2CA,"T",0X1,3);
	split_sreg_range(0XD2E4,"T",0X1,3);
	split_sreg_range(0XD2E8,"T",0X1,3);
	split_sreg_range(0XD2EC,"T",0X1,3);
	split_sreg_range(0XD2F4,"T",0X1,3);
	split_sreg_range(0XD2F6,"T",0X1,3);
	split_sreg_range(0XD2FA,"T",0X1,3);
	split_sreg_range(0XD30C,"T",0X1,3);
	split_sreg_range(0XD310,"T",0X1,3);
	split_sreg_range(0XD31E,"T",0X1,3);
	split_sreg_range(0XD320,"T",0X1,3);
	split_sreg_range(0XD336,"T",0X1,3);
	split_sreg_range(0XD35C,"T",0X1,3);
	split_sreg_range(0XD35E,"T",0X1,3);
	split_sreg_range(0XD370,"T",0X1,3);
	split_sreg_range(0XD376,"T",0X1,3);
	split_sreg_range(0XD378,"T",0X1,3);
	split_sreg_range(0XD39C,"T",0X1,3);
	split_sreg_range(0XD3A4,"T",0X1,3);
	split_sreg_range(0XD3BC,"T",0X1,3);
	split_sreg_range(0XD3C0,"T",0X1,3);
	split_sreg_range(0XD3C4,"T",0X1,3);
	split_sreg_range(0XD3C8,"T",0X1,3);
	split_sreg_range(0XD3CC,"T",0X1,3);
	split_sreg_range(0XD3D0,"T",0X1,3);
	split_sreg_range(0XD3F0,"T",0X1,3);
	split_sreg_range(0XD3F2,"T",0X1,3);
	split_sreg_range(0XD408,"T",0X1,3);
	split_sreg_range(0XD40E,"T",0X1,3);
	split_sreg_range(0XD474,"T",0X1,3);
	split_sreg_range(0XD47A,"T",0X1,3);
	split_sreg_range(0XD4B6,"T",0X1,3);
	split_sreg_range(0XD4B8,"T",0X1,3);
	split_sreg_range(0XD524,"T",0X1,3);
	split_sreg_range(0XD528,"T",0X1,3);
	split_sreg_range(0XD55C,"T",0X1,3);
	split_sreg_range(0XD55E,"T",0X1,3);
	split_sreg_range(0XD574,"T",0X1,3);
	split_sreg_range(0XD57A,"T",0X1,3);
	split_sreg_range(0XD59A,"T",0X1,3);
	split_sreg_range(0XD59C,"T",0X1,3);
	split_sreg_range(0XD5D2,"T",0X1,3);
	split_sreg_range(0XD5D4,"T",0X1,3);
	split_sreg_range(0XD5EC,"T",0X1,3);
	split_sreg_range(0XD5F2,"T",0X1,3);
	split_sreg_range(0XD612,"T",0X1,3);
	split_sreg_range(0XD614,"T",0X1,3);
	split_sreg_range(0XD66E,"T",0X1,3);
	split_sreg_range(0XD672,"T",0X1,3);
	split_sreg_range(0XD690,"T",0X1,3);
	split_sreg_range(0XD6D2,"T",0X1,3);
	split_sreg_range(0XD710,"T",0X1,3);
	split_sreg_range(0XD714,"T",0X1,3);
	split_sreg_range(0XD73A,"T",0X1,3);
	split_sreg_range(0XD744,"T",0X1,3);
	split_sreg_range(0XD780,"T",0X1,3);
	split_sreg_range(0XD784,"T",0X1,3);
	split_sreg_range(0XD79C,"T",0X1,3);
	split_sreg_range(0XD7A2,"T",0X1,3);
	split_sreg_range(0XD7AA,"T",0X1,3);
	split_sreg_range(0XD7B2,"T",0X1,3);
	split_sreg_range(0XD7B4,"T",0X1,3);
	split_sreg_range(0XD7B8,"T",0X1,3);
	split_sreg_range(0XD7DA,"T",0X1,3);
	split_sreg_range(0XD7DC,"T",0X1,3);
	split_sreg_range(0XD818,"T",0X1,3);
	split_sreg_range(0XD81A,"T",0X1,3);
	split_sreg_range(0XD850,"T",0X1,3);
	split_sreg_range(0XD852,"T",0X1,3);
	split_sreg_range(0XD898,"T",0X1,3);
	split_sreg_range(0XD8B6,"T",0X1,3);
	split_sreg_range(0XD8BA,"T",0X1,3);
	split_sreg_range(0XD8E2,"T",0X1,3);
	split_sreg_range(0XD90A,"T",0X1,3);
	split_sreg_range(0XD90C,"T",0X1,3);
	split_sreg_range(0XD948,"T",0X1,3);
	split_sreg_range(0XD94A,"T",0X1,3);
	split_sreg_range(0XD982,"T",0X1,3);
	split_sreg_range(0XD984,"T",0X1,3);
	split_sreg_range(0XD9AC,"T",0X1,3);
	split_sreg_range(0XD9AE,"T",0X1,3);
	split_sreg_range(0XD9C2,"T",0X1,3);
	split_sreg_range(0XD9C4,"T",0X1,3);
	split_sreg_range(0XD9DE,"T",0X1,3);
	split_sreg_range(0XD9EE,"T",0X1,3);
	split_sreg_range(0XDA06,"T",0X1,3);
	split_sreg_range(0XDA0A,"T",0X1,3);
	split_sreg_range(0XDA14,"T",0X1,3);
	split_sreg_range(0XDA1E,"T",0X1,3);
	split_sreg_range(0XDA2E,"T",0X1,3);
	split_sreg_range(0XDA32,"T",0X1,3);
	split_sreg_range(0XDA3C,"T",0X1,3);
	split_sreg_range(0XDA46,"T",0X1,3);
	split_sreg_range(0XDA54,"T",0X1,3);
	split_sreg_range(0XDA58,"T",0X1,3);
	split_sreg_range(0XDA62,"T",0X1,3);
	split_sreg_range(0XDA6C,"T",0X1,3);
	split_sreg_range(0XDA7A,"T",0X1,3);
	split_sreg_range(0XDA7E,"T",0X1,3);
	split_sreg_range(0XDA88,"T",0X1,3);
	split_sreg_range(0XDA92,"T",0X1,3);
	split_sreg_range(0XDAA0,"T",0X1,3);
	split_sreg_range(0XDAA4,"T",0X1,3);
	split_sreg_range(0XDAAE,"T",0X1,3);
	split_sreg_range(0XDAB8,"T",0X1,3);
	split_sreg_range(0XDAC6,"T",0X1,3);
	split_sreg_range(0XDACA,"T",0X1,3);
	split_sreg_range(0XDAE0,"T",0X1,3);
	split_sreg_range(0XDAE4,"T",0X1,3);
	split_sreg_range(0XDAFC,"T",0X1,3);
	split_sreg_range(0XDB00,"T",0X1,3);
	split_sreg_range(0XDB16,"T",0X1,3);
	split_sreg_range(0XDB1A,"T",0X1,3);
	split_sreg_range(0XDB24,"T",0X1,3);
	split_sreg_range(0XDB28,"T",0X1,3);
	split_sreg_range(0XDB72,"T",0X1,3);
	split_sreg_range(0XDB94,"T",0X1,3);
	split_sreg_range(0XDB9C,"T",0X1,3);
	split_sreg_range(0XDBB4,"T",0X1,3);
	split_sreg_range(0XDBB8,"T",0X1,3);
	split_sreg_range(0XDBCC,"T",0X1,3);
	split_sreg_range(0XDBD0,"T",0X1,3);
	split_sreg_range(0XDC10,"T",0X1,3);
	split_sreg_range(0XDC26,"T",0X1,3);
	split_sreg_range(0XDC2A,"T",0X1,3);
	split_sreg_range(0XDC42,"T",0X1,3);
	split_sreg_range(0XDC46,"T",0X1,3);
	split_sreg_range(0XDC5C,"T",0X1,3);
	split_sreg_range(0XDC60,"T",0X1,3);
	split_sreg_range(0XDC74,"T",0X1,3);
	split_sreg_range(0XDC78,"T",0X1,3);
	split_sreg_range(0XDC8C,"T",0X1,3);
	split_sreg_range(0XDC90,"T",0X1,3);
	split_sreg_range(0XDCA4,"T",0X1,3);
	split_sreg_range(0XDCA8,"T",0X1,3);
	split_sreg_range(0XDCDC,"T",0X1,3);
	split_sreg_range(0XDCE0,"T",0X1,3);
	split_sreg_range(0XDCF6,"T",0X1,3);
	split_sreg_range(0XDCFA,"T",0X1,3);
	split_sreg_range(0XDD10,"T",0X1,3);
	split_sreg_range(0XDD22,"T",0X1,3);
	split_sreg_range(0XDD24,"T",0X1,3);
	split_sreg_range(0XDE44,"T",0X1,3);
	split_sreg_range(0XDE46,"T",0X1,3);
	split_sreg_range(0XDE5C,"T",0X1,3);
	split_sreg_range(0XDE60,"T",0X1,3);
	split_sreg_range(0XDE8C,"T",0X1,3);
	split_sreg_range(0XDE8E,"T",0X1,3);
	split_sreg_range(0XDEA6,"T",0X1,3);
	split_sreg_range(0XDEB6,"T",0X1,3);
	split_sreg_range(0XDEBA,"T",0X1,3);
	split_sreg_range(0XDEBC,"T",0X1,3);
	split_sreg_range(0XDEC0,"T",0X1,3);
	split_sreg_range(0XDEE2,"T",0X1,3);
	split_sreg_range(0XDEE6,"T",0X1,3);
	split_sreg_range(0XDF2A,"T",0X1,3);
	split_sreg_range(0XDF2E,"T",0X1,3);
	split_sreg_range(0XDF58,"T",0X1,3);
	split_sreg_range(0XDFD4,"T",0X1,3);
	split_sreg_range(0XDFD8,"T",0X1,3);
	split_sreg_range(0XDFE8,"T",0X1,3);
	split_sreg_range(0XE014,"T",0X1,3);
	split_sreg_range(0XE016,"T",0X1,3);
	split_sreg_range(0XE046,"T",0X1,3);
	split_sreg_range(0XE048,"T",0X1,3);
	split_sreg_range(0XE082,"T",0X1,3);
	split_sreg_range(0XE084,"T",0X1,3);
	split_sreg_range(0XE0A4,"T",0X1,3);
	split_sreg_range(0XE0B0,"T",0X1,3);
	split_sreg_range(0XE0B2,"T",0X1,3);
	split_sreg_range(0XE0DA,"T",0X1,3);
	split_sreg_range(0XE0EA,"T",0X1,3);
	split_sreg_range(0XE0EC,"T",0X1,3);
	split_sreg_range(0XE110,"T",0X1,3);
	split_sreg_range(0XE14C,"T",0X1,3);
	split_sreg_range(0XE15A,"T",0X1,3);
	split_sreg_range(0XE178,"T",0X1,3);
	split_sreg_range(0XE1A0,"T",0X1,3);
	split_sreg_range(0XE1A4,"T",0X1,3);
	split_sreg_range(0XE1B6,"T",0X1,3);
	split_sreg_range(0XE1D8,"T",0X1,3);
	split_sreg_range(0XE200,"T",0X1,3);
	split_sreg_range(0XE216,"T",0X1,3);
	split_sreg_range(0XE248,"T",0X1,3);
	split_sreg_range(0XE276,"T",0X1,3);
	split_sreg_range(0XE27C,"T",0X1,3);
	split_sreg_range(0XE29E,"T",0X1,3);
	split_sreg_range(0XE2E0,"T",0X1,3);
	split_sreg_range(0XE300,"T",0X1,3);
	split_sreg_range(0XE306,"T",0X1,3);
	split_sreg_range(0XE30E,"T",0X1,3);
	split_sreg_range(0XE33A,"T",0X1,3);
	split_sreg_range(0XE33C,"T",0X1,3);
	split_sreg_range(0XE36C,"T",0X1,3);
	split_sreg_range(0XE36E,"T",0X1,3);
	split_sreg_range(0XE39A,"T",0X1,3);
	split_sreg_range(0XE39C,"T",0X1,3);
	split_sreg_range(0XE3D8,"T",0X1,3);
	split_sreg_range(0XE3DC,"T",0X1,3);
	split_sreg_range(0XE3FC,"T",0X1,3);
	split_sreg_range(0XE42C,"T",0X1,3);
	split_sreg_range(0XE448,"T",0X1,3);
	split_sreg_range(0XE44C,"T",0X1,3);
	split_sreg_range(0XE48E,"T",0X1,3);
	split_sreg_range(0XE492,"T",0X1,3);
	split_sreg_range(0XE4B2,"T",0X1,3);
	split_sreg_range(0XE4CE,"T",0X1,3);
	split_sreg_range(0XE4D6,"T",0X1,3);
	split_sreg_range(0XE4F8,"T",0X1,3);
	split_sreg_range(0XE4FA,"T",0X1,3);
	split_sreg_range(0XE52A,"T",0X1,3);
	split_sreg_range(0XE538,"T",0X1,3);
	split_sreg_range(0XE550,"T",0X1,3);
	split_sreg_range(0XE568,"T",0X1,3);
	split_sreg_range(0XE578,"T",0X1,3);
	split_sreg_range(0XE582,"T",0X1,3);
	split_sreg_range(0XE588,"T",0X1,3);
	split_sreg_range(0XE5B6,"T",0X1,3);
	split_sreg_range(0XE5B8,"T",0X1,3);
	split_sreg_range(0XE5EE,"T",0X1,3);
	split_sreg_range(0XE5F0,"T",0X1,3);
	split_sreg_range(0XE624,"T",0X1,3);
	split_sreg_range(0XE626,"T",0X1,3);
	split_sreg_range(0XE662,"T",0X1,3);
	split_sreg_range(0XE664,"T",0X1,3);
	split_sreg_range(0XE696,"T",0X1,3);
	split_sreg_range(0XE6AE,"T",0X1,3);
	split_sreg_range(0XE6B0,"T",0X1,3);
	split_sreg_range(0XE6B8,"T",0X1,3);
	split_sreg_range(0XE6EC,"T",0X1,3);
	split_sreg_range(0XE6EE,"T",0X1,3);
	split_sreg_range(0XE748,"T",0X1,3);
	split_sreg_range(0XE74C,"T",0X1,3);
	split_sreg_range(0XE782,"T",0X1,3);
	split_sreg_range(0XE784,"T",0X1,3);
	split_sreg_range(0XE7AE,"T",0X1,3);
	split_sreg_range(0XE7B0,"T",0X1,3);
	split_sreg_range(0XE83A,"T",0X1,3);
	split_sreg_range(0XE83E,"T",0X1,3);
	split_sreg_range(0XE856,"T",0X1,3);
	split_sreg_range(0XE872,"T",0X1,3);
	split_sreg_range(0XE89C,"T",0X1,3);
	split_sreg_range(0XE8C2,"T",0X1,3);
	split_sreg_range(0XE8C6,"T",0X1,3);
	split_sreg_range(0XE8F8,"T",0X1,3);
	split_sreg_range(0XE8FC,"T",0X1,3);
	split_sreg_range(0XE930,"T",0X1,3);
	split_sreg_range(0XE97C,"T",0X1,3);
	split_sreg_range(0XE9B2,"T",0X1,3);
	split_sreg_range(0XE9C0,"T",0X1,3);
	split_sreg_range(0XE9C4,"T",0X1,3);
	split_sreg_range(0XE9EE,"T",0X1,3);
	split_sreg_range(0XEA00,"T",0X1,3);
	split_sreg_range(0XEA02,"T",0X1,3);
	split_sreg_range(0XEA7A,"T",0X1,3);
	split_sreg_range(0XEA7E,"T",0X1,3);
	split_sreg_range(0XEB24,"T",0X1,3);
	split_sreg_range(0XEB68,"T",0X1,3);
	split_sreg_range(0XEB82,"T",0X1,3);
	split_sreg_range(0XEB8C,"T",0X1,3);
	split_sreg_range(0XEB9C,"T",0X1,3);
	split_sreg_range(0XEB9E,"T",0X1,3);
	split_sreg_range(0XEBA0,"T",0X1,3);
	split_sreg_range(0XEBAA,"T",0X1,3);
	split_sreg_range(0XEBAC,"T",0X1,3);
	split_sreg_range(0XEBB0,"T",0X1,3);
	split_sreg_range(0XEBF8,"T",0X1,3);
	split_sreg_range(0XEC0A,"T",0X1,3);
	split_sreg_range(0XEC3A,"T",0X1,3);
	split_sreg_range(0XECBA,"T",0X1,3);
	split_sreg_range(0XECBE,"T",0X1,3);
	split_sreg_range(0XED34,"T",0X1,3);
	split_sreg_range(0XED58,"T",0X1,3);
	split_sreg_range(0XED5C,"T",0X1,3);
	split_sreg_range(0XED8A,"T",0X1,3);
	split_sreg_range(0XEDDC,"T",0X1,3);
	split_sreg_range(0XEE26,"T",0X1,3);
	split_sreg_range(0XEE28,"T",0X1,3);
	split_sreg_range(0XEE90,"T",0X1,3);
	split_sreg_range(0XEE94,"T",0X1,3);
	split_sreg_range(0XEEB6,"T",0X1,3);
	split_sreg_range(0XEEB8,"T",0X1,3);
	split_sreg_range(0XEEDE,"T",0X1,3);
	split_sreg_range(0XEF10,"T",0X1,3);
	split_sreg_range(0XEF3E,"T",0X1,3);
	split_sreg_range(0XEF4A,"T",0X1,3);
	split_sreg_range(0XEF66,"T",0X1,3);
	split_sreg_range(0XEF6C,"T",0X1,3);
	split_sreg_range(0XEFAE,"T",0X1,3);
	split_sreg_range(0XEFBC,"T",0X1,3);
	split_sreg_range(0XEFF6,"T",0X1,3);
	split_sreg_range(0XF012,"T",0X1,3);
	split_sreg_range(0XF034,"T",0X1,3);
	split_sreg_range(0XF038,"T",0X1,3);
	split_sreg_range(0XF076,"T",0X1,3);
	split_sreg_range(0XF090,"T",0X1,3);
	split_sreg_range(0XF0AA,"T",0X1,3);
	split_sreg_range(0XF0CC,"T",0X1,3);
	split_sreg_range(0XF0CE,"T",0X1,3);
	split_sreg_range(0XF0EA,"T",0X1,3);
	split_sreg_range(0XF0F8,"T",0X1,3);
	split_sreg_range(0XF0FC,"T",0X1,3);
	split_sreg_range(0XF144,"T",0X1,3);
	split_sreg_range(0XF15E,"T",0X1,3);
	split_sreg_range(0XF178,"T",0X1,3);
	split_sreg_range(0XF19C,"T",0X1,3);
	split_sreg_range(0XF19E,"T",0X1,3);
	split_sreg_range(0XF1BA,"T",0X1,3);
	split_sreg_range(0XF1C8,"T",0X1,3);
	split_sreg_range(0XF1CC,"T",0X1,3);
	split_sreg_range(0XF204,"T",0X1,3);
	split_sreg_range(0XF22A,"T",0X1,3);
	split_sreg_range(0XF22C,"T",0X1,3);
	split_sreg_range(0XF232,"T",0X1,3);
	split_sreg_range(0XF238,"T",0X1,3);
	split_sreg_range(0XF23E,"T",0X1,3);
	split_sreg_range(0XF244,"T",0X1,3);
	split_sreg_range(0XF24A,"T",0X1,3);
	split_sreg_range(0XF250,"T",0X1,3);
	split_sreg_range(0XF256,"T",0X1,3);
	split_sreg_range(0XF25C,"T",0X1,3);
	split_sreg_range(0XF282,"T",0X1,3);
	split_sreg_range(0XF2AE,"T",0X1,3);
	split_sreg_range(0XF2B2,"T",0X1,3);
	split_sreg_range(0XF2BA,"T",0X1,3);
	split_sreg_range(0XF2D0,"T",0X1,3);
	split_sreg_range(0XF2EC,"T",0X1,3);
	split_sreg_range(0XF2FC,"T",0X1,3);
	split_sreg_range(0XF300,"T",0X1,3);
	split_sreg_range(0XF318,"T",0X1,3);
	split_sreg_range(0XF31E,"T",0X1,3);
	split_sreg_range(0XF34A,"T",0X1,3);
	split_sreg_range(0XF35E,"T",0X1,3);
	split_sreg_range(0XF37E,"T",0X1,3);
	split_sreg_range(0XF380,"T",0X1,3);
	split_sreg_range(0XF384,"T",0X1,3);
	split_sreg_range(0XF3AE,"T",0X1,3);
	split_sreg_range(0XF3E0,"T",0X1,3);
	split_sreg_range(0XF402,"T",0X1,3);
	split_sreg_range(0XF406,"T",0X1,3);
	split_sreg_range(0XF40C,"T",0X1,3);
	split_sreg_range(0XF410,"T",0X1,3);
	split_sreg_range(0XF412,"T",0X1,3);
	split_sreg_range(0XF430,"T",0X1,3);
	split_sreg_range(0XF45E,"T",0X1,3);
	split_sreg_range(0XF460,"T",0X1,3);
	split_sreg_range(0XF47E,"T",0X1,3);
	split_sreg_range(0XF48E,"T",0X1,3);
	split_sreg_range(0XF4A0,"T",0X1,3);
	split_sreg_range(0XF4A4,"T",0X1,3);
	split_sreg_range(0XF4BC,"T",0X1,3);
	split_sreg_range(0XF4E0,"T",0X1,3);
	split_sreg_range(0XF4E2,"T",0X1,3);
	split_sreg_range(0XF4E4,"T",0X1,3);
	split_sreg_range(0XF540,"T",0X1,3);
	split_sreg_range(0XF552,"T",0X1,3);
	split_sreg_range(0XF558,"T",0X1,3);
	split_sreg_range(0XF562,"T",0X1,3);
	split_sreg_range(0XF570,"T",0X1,3);
	split_sreg_range(0XF586,"T",0X1,3);
	split_sreg_range(0XF58A,"T",0X1,3);
	split_sreg_range(0XF596,"T",0X1,3);
	split_sreg_range(0XF5B0,"T",0X1,3);
	split_sreg_range(0XF5B4,"T",0X1,3);
	split_sreg_range(0XF5C2,"T",0X1,3);
	split_sreg_range(0XF600,"T",0X1,3);
	split_sreg_range(0XF602,"T",0X1,3);
	split_sreg_range(0XF60E,"T",0X1,3);
	split_sreg_range(0XF610,"T",0X1,3);
	split_sreg_range(0XF622,"T",0X1,3);
	split_sreg_range(0XF624,"T",0X1,3);
	split_sreg_range(0XF632,"T",0X1,3);
	split_sreg_range(0XF638,"T",0X1,3);
	split_sreg_range(0XF63E,"T",0X1,3);
	split_sreg_range(0XF644,"T",0X1,3);
	split_sreg_range(0XF64A,"T",0X1,3);
	split_sreg_range(0XF650,"T",0X1,3);
	split_sreg_range(0XF654,"T",0X1,3);
	split_sreg_range(0XF66A,"T",0X1,3);
	split_sreg_range(0XF69E,"T",0X1,3);
	split_sreg_range(0XF6C0,"T",0X1,3);
	split_sreg_range(0XF6D8,"T",0X1,3);
	split_sreg_range(0XF6EA,"T",0X1,3);
	split_sreg_range(0XF6EC,"T",0X1,3);
	split_sreg_range(0XF6F8,"T",0X1,3);
	split_sreg_range(0XF72A,"T",0X1,3);
	split_sreg_range(0XF754,"T",0X1,3);
	split_sreg_range(0XF786,"T",0X1,3);
	split_sreg_range(0XF7A8,"T",0X1,3);
	split_sreg_range(0XF7AE,"T",0X1,3);
	split_sreg_range(0XF7C8,"T",0X1,3);
	split_sreg_range(0XF7CA,"T",0X1,3);
	split_sreg_range(0XF7E2,"T",0X1,3);
	split_sreg_range(0XF80C,"T",0X1,3);
	split_sreg_range(0XF814,"T",0X1,3);
	split_sreg_range(0XF878,"T",0X1,3);
	split_sreg_range(0XF882,"T",0X1,3);
	split_sreg_range(0XF8B2,"T",0X1,3);
	split_sreg_range(0XF8BA,"T",0X1,3);
	split_sreg_range(0XF8C0,"T",0X1,3);
	split_sreg_range(0XF8C6,"T",0X1,3);
	split_sreg_range(0XF8CC,"T",0X1,3);
	split_sreg_range(0XF8D2,"T",0X1,3);
	split_sreg_range(0XF95C,"T",0X1,3);
	split_sreg_range(0XF96E,"T",0X1,3);
	split_sreg_range(0XF974,"T",0X1,3);
	split_sreg_range(0XF992,"T",0X1,3);
	split_sreg_range(0XF994,"T",0X1,3);
	split_sreg_range(0XF996,"T",0X1,3);
	split_sreg_range(0XF99A,"T",0X1,3);
	split_sreg_range(0XF9AA,"T",0X1,3);
	split_sreg_range(0XF9BC,"T",0X1,3);
	split_sreg_range(0XF9E4,"T",0X1,3);
	split_sreg_range(0XFA10,"T",0X1,3);
	split_sreg_range(0XFA22,"T",0X1,3);
	split_sreg_range(0XFA24,"T",0X1,3);
	split_sreg_range(0XFA28,"T",0X1,3);
	split_sreg_range(0XFA96,"T",0X1,3);
	split_sreg_range(0XFA9A,"T",0X1,3);
	split_sreg_range(0XFB16,"T",0X1,3);
	split_sreg_range(0XFB28,"T",0X1,3);
	split_sreg_range(0XFB2E,"T",0X1,3);
	split_sreg_range(0XFB40,"T",0X1,3);
	split_sreg_range(0XFB72,"T",0X1,3);
	split_sreg_range(0XFB7C,"T",0X1,3);
	split_sreg_range(0XFB84,"T",0X1,3);
	split_sreg_range(0XFB8C,"T",0X1,3);
	split_sreg_range(0XFBD4,"T",0X1,3);
	split_sreg_range(0XFBFC,"T",0X1,3);
	split_sreg_range(0XFC2C,"T",0X1,3);
	split_sreg_range(0XFC38,"T",0X1,3);
	split_sreg_range(0XFC40,"T",0X1,3);
	split_sreg_range(0XFC4C,"T",0X1,3);
	split_sreg_range(0XFC4E,"T",0X1,3);
	split_sreg_range(0XFC56,"T",0X1,3);
	split_sreg_range(0XFC7E,"T",0X1,3);
	split_sreg_range(0XFC9E,"T",0X1,3);
	split_sreg_range(0XFCD4,"T",0X1,3);
	split_sreg_range(0XFCD8,"T",0X1,3);
	split_sreg_range(0XFD14,"T",0X1,3);
	split_sreg_range(0XFD18,"T",0X1,3);
	split_sreg_range(0XFD6A,"T",0X1,3);
	split_sreg_range(0XFD70,"T",0X1,3);
	split_sreg_range(0XFD8A,"T",0X1,3);
	split_sreg_range(0XFDA0,"T",0X1,3);
	split_sreg_range(0XFDA4,"T",0X1,3);
	split_sreg_range(0XFDB2,"T",0X1,3);
	split_sreg_range(0XFDB8,"T",0X1,3);
	split_sreg_range(0XFDBC,"T",0X1,3);
	split_sreg_range(0XFDE0,"T",0X1,3);
	split_sreg_range(0XFDEE,"T",0X1,3);
	split_sreg_range(0XFE00,"T",0X1,3);
	split_sreg_range(0XFE18,"T",0X1,3);
	split_sreg_range(0XFE24,"T",0X1,3);
	split_sreg_range(0XFE40,"T",0X1,3);
	split_sreg_range(0XFE74,"T",0X1,3);
	split_sreg_range(0XFE7C,"T",0X1,3);
	split_sreg_range(0XFE88,"T",0X1,3);
	split_sreg_range(0XFE98,"T",0X1,3);
	split_sreg_range(0XFED6,"T",0X1,3);
	split_sreg_range(0XFEE6,"T",0X1,3);
	split_sreg_range(0XFEE8,"T",0X1,3);
	split_sreg_range(0XFF24,"T",0X1,3);
	split_sreg_range(0XFF28,"T",0X1,3);
	split_sreg_range(0XFF7C,"T",0X1,3);
	split_sreg_range(0XFF82,"T",0X1,3);
	split_sreg_range(0XFF9C,"T",0X1,3);
	split_sreg_range(0XFFAE,"T",0X1,3);
	split_sreg_range(0XFFB0,"T",0X1,3);
	split_sreg_range(0XFFC4,"T",0X1,3);
	split_sreg_range(0XFFC6,"T",0X1,3);
	split_sreg_range(0XFFDC,"T",0X1,3);
	split_sreg_range(0X1000C,"T",0X1,3);
	split_sreg_range(0X10010,"T",0X1,3);
	split_sreg_range(0X1007C,"T",0X1,3);
	split_sreg_range(0X100AA,"T",0X1,3);
	split_sreg_range(0X100E0,"T",0X1,3);
	split_sreg_range(0X100F6,"T",0X1,3);
	split_sreg_range(0X100FA,"T",0X1,3);
	split_sreg_range(0X10156,"T",0X1,3);
	split_sreg_range(0X101E8,"T",0X1,3);
	split_sreg_range(0X101EC,"T",0X1,3);
	split_sreg_range(0X10214,"T",0X1,3);
	split_sreg_range(0X10292,"T",0X1,3);
	split_sreg_range(0X10296,"T",0X1,3);
	split_sreg_range(0X102E4,"T",0X1,3);
	split_sreg_range(0X102FC,"T",0X1,3);
	split_sreg_range(0X102FE,"T",0X1,3);
	split_sreg_range(0X1031E,"T",0X1,3);
	split_sreg_range(0X1034C,"T",0X1,3);
	split_sreg_range(0X10380,"T",0X1,3);
	split_sreg_range(0X10396,"T",0X1,3);
	split_sreg_range(0X103A8,"T",0X1,3);
	split_sreg_range(0X103BA,"T",0X1,3);
	split_sreg_range(0X103CC,"T",0X1,3);
	split_sreg_range(0X103DE,"T",0X1,3);
	split_sreg_range(0X103F0,"T",0X1,3);
	split_sreg_range(0X10404,"T",0X1,3);
	split_sreg_range(0X10446,"T",0X1,3);
	split_sreg_range(0X1046E,"T",0X1,3);
	split_sreg_range(0X1049E,"T",0X1,3);
	split_sreg_range(0X104D4,"T",0X1,3);
	split_sreg_range(0X104F6,"T",0X1,3);
	split_sreg_range(0X1050C,"T",0X1,3);
	split_sreg_range(0X1051E,"T",0X1,3);
	split_sreg_range(0X10534,"T",0X1,3);
	split_sreg_range(0X1054C,"T",0X1,3);
	split_sreg_range(0X10566,"T",0X1,3);
	split_sreg_range(0X105AA,"T",0X1,3);
	split_sreg_range(0X105EC,"T",0X1,3);
	split_sreg_range(0X105EE,"T",0X1,3);
	split_sreg_range(0X10628,"T",0X1,3);
	split_sreg_range(0X1064C,"T",0X1,3);
	split_sreg_range(0X10670,"T",0X1,3);
	split_sreg_range(0X10678,"T",0X1,3);
	split_sreg_range(0X1067A,"T",0X1,3);
	split_sreg_range(0X1067E,"T",0X1,3);
	split_sreg_range(0X10694,"T",0X1,3);
	split_sreg_range(0X106C4,"T",0X1,3);
	split_sreg_range(0X106D2,"T",0X1,3);
	split_sreg_range(0X106E6,"T",0X1,3);
	split_sreg_range(0X106EE,"T",0X1,3);
	split_sreg_range(0X10704,"T",0X1,3);
	split_sreg_range(0X1070C,"T",0X1,3);
	split_sreg_range(0X10742,"T",0X1,3);
	split_sreg_range(0X10758,"T",0X1,3);
	split_sreg_range(0X10774,"T",0X1,3);
	split_sreg_range(0X10780,"T",0X1,3);
	split_sreg_range(0X10796,"T",0X1,3);
	split_sreg_range(0X1079C,"T",0X1,3);
	split_sreg_range(0X107D2,"T",0X1,3);
	split_sreg_range(0X107E8,"T",0X1,3);
	split_sreg_range(0X10804,"T",0X1,3);
	split_sreg_range(0X10810,"T",0X1,3);
	split_sreg_range(0X10828,"T",0X1,3);
	split_sreg_range(0X10854,"T",0X1,3);
	split_sreg_range(0X10866,"T",0X1,3);
	split_sreg_range(0X1087E,"T",0X1,3);
	split_sreg_range(0X10886,"T",0X1,3);
	split_sreg_range(0X1089C,"T",0X1,3);
	split_sreg_range(0X108A0,"T",0X1,3);
	split_sreg_range(0X108B6,"T",0X1,3);
	split_sreg_range(0X108D0,"T",0X1,3);
	split_sreg_range(0X10906,"T",0X1,3);
	split_sreg_range(0X1091C,"T",0X1,3);
	split_sreg_range(0X10970,"T",0X1,3);
	split_sreg_range(0X10976,"T",0X1,3);
	split_sreg_range(0X10982,"T",0X1,3);
	split_sreg_range(0X10998,"T",0X1,3);
	split_sreg_range(0X1099A,"T",0X1,3);
	split_sreg_range(0X109B4,"T",0X1,3);
	split_sreg_range(0X109C4,"T",0X1,3);
	split_sreg_range(0X109EE,"T",0X1,3);
	split_sreg_range(0X109F6,"T",0X1,3);
	split_sreg_range(0X10A00,"T",0X1,3);
	split_sreg_range(0X10A06,"T",0X1,3);
	split_sreg_range(0X10A0C,"T",0X1,3);
	split_sreg_range(0X10A12,"T",0X1,3);
	split_sreg_range(0X10A22,"T",0X1,3);
	split_sreg_range(0X10A32,"T",0X1,3);
	split_sreg_range(0X10A4A,"T",0X1,3);
	split_sreg_range(0X10A4C,"T",0X1,3);
	split_sreg_range(0X10A5C,"T",0X1,3);
	split_sreg_range(0X10A66,"T",0X1,3);
	split_sreg_range(0X10A94,"T",0X1,3);
	split_sreg_range(0X10A98,"T",0X1,3);
	split_sreg_range(0X10AB6,"T",0X1,3);
	split_sreg_range(0X10ABA,"T",0X1,3);
	split_sreg_range(0X10B10,"T",0X1,3);
	split_sreg_range(0X10B3A,"T",0X1,3);
	split_sreg_range(0X10B56,"T",0X1,3);
	split_sreg_range(0X10BA2,"T",0X1,3);
	split_sreg_range(0X10BA8,"T",0X1,3);
	split_sreg_range(0X10BC2,"T",0X1,3);
	split_sreg_range(0X10BE0,"T",0X1,3);
	split_sreg_range(0X10BEA,"T",0X1,3);
	split_sreg_range(0X10BEE,"T",0X1,3);
	split_sreg_range(0X10C24,"T",0X1,3);
	split_sreg_range(0X10C36,"T",0X1,3);
	split_sreg_range(0X10C52,"T",0X1,3);
	split_sreg_range(0X10C5E,"T",0X1,3);
	split_sreg_range(0X10C74,"T",0X1,3);
	split_sreg_range(0X10C78,"T",0X1,3);
	split_sreg_range(0X10CA8,"T",0X1,3);
	split_sreg_range(0X10CD0,"T",0X1,3);
	split_sreg_range(0X10CE6,"T",0X1,3);
	split_sreg_range(0X10D04,"T",0X1,3);
	split_sreg_range(0X10D2A,"T",0X1,3);
	split_sreg_range(0X10D3E,"T",0X1,3);
	split_sreg_range(0X10D48,"T",0X1,3);
	split_sreg_range(0X10D52,"T",0X1,3);
	split_sreg_range(0X10D56,"T",0X1,3);
	split_sreg_range(0X10D58,"T",0X1,3);
	split_sreg_range(0X10D60,"T",0X1,3);
	split_sreg_range(0X10DC0,"T",0X1,3);
	split_sreg_range(0X10DC2,"T",0X1,3);
	split_sreg_range(0X10DD2,"T",0X1,3);
	split_sreg_range(0X10DE6,"T",0X1,3);
	split_sreg_range(0X10DF2,"T",0X1,3);
	split_sreg_range(0X10E02,"T",0X1,3);
	split_sreg_range(0X10E38,"T",0X1,3);
	split_sreg_range(0X10E4A,"T",0X1,3);
	split_sreg_range(0X10E4C,"T",0X1,3);
	split_sreg_range(0X10E56,"T",0X1,3);
	split_sreg_range(0X10E60,"T",0X1,3);
	split_sreg_range(0X10E72,"T",0X1,3);
	split_sreg_range(0X10E74,"T",0X1,3);
	split_sreg_range(0X10E7E,"T",0X1,3);
	split_sreg_range(0X10E88,"T",0X1,3);
	split_sreg_range(0X10E9A,"T",0X1,3);
	split_sreg_range(0X10E9C,"T",0X1,3);
	split_sreg_range(0X10EA6,"T",0X1,3);
	split_sreg_range(0X10EB0,"T",0X1,3);
	split_sreg_range(0X10EC2,"T",0X1,3);
	split_sreg_range(0X10ECC,"T",0X1,3);
	split_sreg_range(0X10EDC,"T",0X1,3);
	split_sreg_range(0X10EE4,"T",0X1,3);
	split_sreg_range(0X10F0C,"T",0X1,3);
	split_sreg_range(0X10F1A,"T",0X1,3);
	split_sreg_range(0X10F1E,"T",0X1,3);
	split_sreg_range(0X10F3A,"T",0X1,3);
	split_sreg_range(0X10F64,"T",0X1,3);
	split_sreg_range(0X10F76,"T",0X1,3);
	split_sreg_range(0X10F8A,"T",0X1,3);
	split_sreg_range(0X10FAA,"T",0X1,3);
	split_sreg_range(0X10FC6,"T",0X1,3);
	split_sreg_range(0X11004,"T",0X1,3);
	split_sreg_range(0X1100C,"T",0X1,3);
	split_sreg_range(0X11010,"T",0X1,3);
	split_sreg_range(0X11036,"T",0X1,3);
	split_sreg_range(0X1103E,"T",0X1,3);
	split_sreg_range(0X11042,"T",0X1,3);
	split_sreg_range(0X11044,"T",0X1,3);
	split_sreg_range(0X11052,"T",0X1,3);
	split_sreg_range(0X11056,"T",0X1,3);
	split_sreg_range(0X110D0,"T",0X1,3);
	split_sreg_range(0X11126,"T",0X1,3);
	split_sreg_range(0X1112C,"T",0X1,3);
	split_sreg_range(0X11136,"T",0X1,3);
	split_sreg_range(0X1113E,"T",0X1,3);
	split_sreg_range(0X11144,"T",0X1,3);
	split_sreg_range(0X1115E,"T",0X1,3);
	split_sreg_range(0X11162,"T",0X1,3);
	split_sreg_range(0X11164,"T",0X1,3);
	split_sreg_range(0X1117E,"T",0X1,3);
	split_sreg_range(0X11182,"T",0X1,3);
	split_sreg_range(0X11184,"T",0X1,3);
	split_sreg_range(0X111A0,"T",0X1,3);
	split_sreg_range(0X111A4,"T",0X1,3);
	split_sreg_range(0X111A6,"T",0X1,3);
	split_sreg_range(0X111C0,"T",0X1,3);
	split_sreg_range(0X111C2,"T",0X1,3);
	split_sreg_range(0X111C4,"T",0X1,3);
	split_sreg_range(0X111C8,"T",0X1,3);
	split_sreg_range(0X111CA,"T",0X1,3);
	split_sreg_range(0X111CE,"T",0X1,3);
	split_sreg_range(0X111D0,"T",0X1,3);
	split_sreg_range(0X111D6,"T",0X1,3);
	split_sreg_range(0X111DE,"T",0X1,3);
	split_sreg_range(0X111E4,"T",0X1,3);
	split_sreg_range(0X111F8,"T",0X1,3);
	split_sreg_range(0X111FC,"T",0X1,3);
	split_sreg_range(0X11202,"T",0X1,3);
	split_sreg_range(0X11208,"T",0X1,3);
	split_sreg_range(0X11230,"T",0X1,3);
	split_sreg_range(0X1123A,"T",0X1,3);
	split_sreg_range(0X11242,"T",0X1,3);
	split_sreg_range(0X1124C,"T",0X1,3);
	split_sreg_range(0X11250,"T",0X1,3);
	split_sreg_range(0X11258,"T",0X1,3);
	split_sreg_range(0X11276,"T",0X1,3);
	split_sreg_range(0X112B0,"T",0X1,3);
	split_sreg_range(0X112BC,"T",0X1,3);
	split_sreg_range(0X112BE,"T",0X1,3);
	split_sreg_range(0X112C0,"T",0X1,3);
	split_sreg_range(0X112C6,"T",0X1,3);
	split_sreg_range(0X112D4,"T",0X1,3);
	split_sreg_range(0X112F8,"T",0X1,3);
	split_sreg_range(0X112FE,"T",0X1,3);
	split_sreg_range(0X11308,"T",0X1,3);
	split_sreg_range(0X1130E,"T",0X1,3);
	split_sreg_range(0X1131A,"T",0X1,3);
	split_sreg_range(0X1131C,"T",0X1,3);
	split_sreg_range(0X11320,"T",0X1,3);
	split_sreg_range(0X11326,"T",0X1,3);
	split_sreg_range(0X11348,"T",0X1,3);
	split_sreg_range(0X1134A,"T",0X1,3);
	split_sreg_range(0X11352,"T",0X1,3);
	split_sreg_range(0X1135A,"T",0X1,3);
	split_sreg_range(0X11366,"T",0X1,3);
	split_sreg_range(0X11372,"T",0X1,3);
	split_sreg_range(0X1137E,"T",0X1,3);
	split_sreg_range(0X1138A,"T",0X1,3);
	split_sreg_range(0X11390,"T",0X1,3);
	split_sreg_range(0X113B4,"T",0X1,3);
	split_sreg_range(0X113B6,"T",0X1,3);
	split_sreg_range(0X113C0,"T",0X1,3);
	split_sreg_range(0X113C8,"T",0X1,3);
	split_sreg_range(0X113D6,"T",0X1,3);
	split_sreg_range(0X113E4,"T",0X1,3);
	split_sreg_range(0X113F2,"T",0X1,3);
	split_sreg_range(0X113FE,"T",0X1,3);
	split_sreg_range(0X1141C,"T",0X1,3);
	split_sreg_range(0X11424,"T",0X1,3);
	split_sreg_range(0X11442,"T",0X1,3);
	split_sreg_range(0X11448,"T",0X1,3);
	split_sreg_range(0X1144A,"T",0X1,3);
	split_sreg_range(0X11450,"T",0X1,3);
	split_sreg_range(0X11452,"T",0X1,3);
	split_sreg_range(0X1158E,"T",0X1,3);
	split_sreg_range(0X115FC,"T",0X1,3);
	split_sreg_range(0X115FE,"T",0X1,3);
	split_sreg_range(0X11622,"T",0X1,3);
	split_sreg_range(0X11624,"T",0X1,3);
	split_sreg_range(0X11648,"T",0X1,3);
	split_sreg_range(0X11674,"T",0X1,3);
	split_sreg_range(0X1167E,"T",0X1,3);
	split_sreg_range(0X11688,"T",0X1,3);
	split_sreg_range(0X116A4,"T",0X1,3);
	split_sreg_range(0X116BA,"T",0X1,3);
	split_sreg_range(0X116CC,"T",0X1,3);
	split_sreg_range(0X116D2,"T",0X1,3);
	split_sreg_range(0X116D4,"T",0X1,3);
	split_sreg_range(0X116D8,"T",0X1,3);
	split_sreg_range(0X116E6,"T",0X1,3);
	split_sreg_range(0X116F6,"T",0X1,3);
	split_sreg_range(0X1170A,"T",0X1,3);
	split_sreg_range(0X1171E,"T",0X1,3);
	split_sreg_range(0X11720,"T",0X1,3);
	split_sreg_range(0X11754,"T",0X1,3);
	split_sreg_range(0X117B0,"T",0X1,3);
	split_sreg_range(0X117DE,"T",0X1,3);
	split_sreg_range(0X117E4,"T",0X1,3);
	split_sreg_range(0X117E6,"T",0X1,3);
	split_sreg_range(0X11802,"T",0X1,3);
	split_sreg_range(0X1183C,"T",0X1,3);
	split_sreg_range(0X118F0,"T",0X1,3);
	split_sreg_range(0X118F2,"T",0X1,3);
	split_sreg_range(0X11912,"T",0X1,3);
	split_sreg_range(0X11982,"T",0X1,3);
	split_sreg_range(0X11990,"T",0X1,3);
	split_sreg_range(0X119A4,"T",0X1,3);
	split_sreg_range(0X119BA,"T",0X1,3);
	split_sreg_range(0X119CC,"T",0X1,3);
	split_sreg_range(0X119DC,"T",0X1,3);
	split_sreg_range(0X119E2,"T",0X1,3);
	split_sreg_range(0X11A0C,"T",0X1,3);
	split_sreg_range(0X11A26,"T",0X1,3);
	split_sreg_range(0X11A3E,"T",0X1,3);
	split_sreg_range(0X11A66,"T",0X1,3);
	split_sreg_range(0X11A90,"T",0X1,3);
	split_sreg_range(0X11A92,"T",0X1,3);
	split_sreg_range(0X11A94,"T",0X1,3);
	split_sreg_range(0X11AAE,"T",0X1,3);
	split_sreg_range(0X11AB2,"T",0X1,3);
	split_sreg_range(0X11AB4,"T",0X1,3);
	split_sreg_range(0X11ABE,"T",0X1,3);
	split_sreg_range(0X11AD8,"T",0X1,3);
	split_sreg_range(0X11AFA,"T",0X1,3);
	split_sreg_range(0X11AFC,"T",0X1,3);
	split_sreg_range(0X11B08,"T",0X1,3);
	split_sreg_range(0X11B0A,"T",0X1,3);
	split_sreg_range(0X11B24,"T",0X1,3);
	split_sreg_range(0X11B46,"T",0X1,3);
	split_sreg_range(0X11B48,"T",0X1,3);
	split_sreg_range(0X11B54,"T",0X1,3);
	split_sreg_range(0X11B74,"T",0X1,3);
	split_sreg_range(0X11B82,"T",0X1,3);
	split_sreg_range(0X11BA0,"T",0X1,3);
	split_sreg_range(0X11BBE,"T",0X1,3);
	split_sreg_range(0X11BD8,"T",0X1,3);
	split_sreg_range(0X11BDA,"T",0X1,3);
	split_sreg_range(0X11BE4,"T",0X1,3);
	split_sreg_range(0X11BEA,"T",0X1,3);
	split_sreg_range(0X11BEC,"T",0X1,3);
	split_sreg_range(0X11BF6,"T",0X1,3);
	split_sreg_range(0X11C06,"T",0X1,3);
	split_sreg_range(0X11C28,"T",0X1,3);
	split_sreg_range(0X11C2E,"T",0X1,3);
	split_sreg_range(0X11C5A,"T",0X1,3);
	split_sreg_range(0X11C70,"T",0X1,3);
	split_sreg_range(0X11C82,"T",0X1,3);
	split_sreg_range(0X11CD4,"T",0X1,3);
	split_sreg_range(0X11CD6,"T",0X1,3);
	split_sreg_range(0X11CD8,"T",0X1,3);
	split_sreg_range(0X11D0A,"T",0X1,3);
	split_sreg_range(0X11D1A,"T",0X1,3);
	split_sreg_range(0X11DA4,"T",0X1,3);
	split_sreg_range(0X11DD8,"T",0X1,3);
	split_sreg_range(0X11DDC,"T",0X1,3);
	split_sreg_range(0X11DDE,"T",0X1,3);
	split_sreg_range(0X11E4E,"T",0X1,3);
	split_sreg_range(0X11E5A,"T",0X1,3);
	split_sreg_range(0X11E86,"T",0X1,3);
	split_sreg_range(0X11EA8,"T",0X1,3);
	split_sreg_range(0X11F16,"T",0X1,3);
	split_sreg_range(0X11F1E,"T",0X1,3);
	split_sreg_range(0X11F20,"T",0X1,3);
	split_sreg_range(0X11F3E,"T",0X1,3);
	split_sreg_range(0X11F4E,"T",0X1,3);
	split_sreg_range(0X11FA0,"T",0X1,3);
	split_sreg_range(0X11FDC,"T",0X1,3);
	split_sreg_range(0X11FDE,"T",0X1,3);
	split_sreg_range(0X12006,"T",0X1,3);
	split_sreg_range(0X1200A,"T",0X1,3);
	split_sreg_range(0X12012,"T",0X1,3);
	split_sreg_range(0X12018,"T",0X1,3);
	split_sreg_range(0X1202E,"T",0X1,3);
	split_sreg_range(0X12040,"T",0X1,3);
	split_sreg_range(0X12068,"T",0X1,3);
	split_sreg_range(0X1208C,"T",0X1,3);
	split_sreg_range(0X120B8,"T",0X1,3);
	split_sreg_range(0X120BC,"T",0X1,3);
	split_sreg_range(0X120C4,"T",0X1,3);
	split_sreg_range(0X120CA,"T",0X1,3);
	split_sreg_range(0X120D0,"T",0X1,3);
	split_sreg_range(0X120D4,"T",0X1,3);
	split_sreg_range(0X120D6,"T",0X1,3);
	split_sreg_range(0X120E4,"T",0X1,3);
	split_sreg_range(0X120EA,"T",0X1,3);
	split_sreg_range(0X120F4,"T",0X1,3);
	split_sreg_range(0X12116,"T",0X1,3);
	split_sreg_range(0X1211A,"T",0X1,3);
	split_sreg_range(0X12124,"T",0X1,3);
	split_sreg_range(0X1214A,"T",0X1,3);
	split_sreg_range(0X12156,"T",0X1,3);
	split_sreg_range(0X12158,"T",0X1,3);
	split_sreg_range(0X1216E,"T",0X1,3);
	split_sreg_range(0X121B0,"T",0X1,3);
	split_sreg_range(0X121C0,"T",0X1,3);
	split_sreg_range(0X121CC,"T",0X1,3);
	split_sreg_range(0X121D6,"T",0X1,3);
	split_sreg_range(0X121E8,"T",0X1,3);
	split_sreg_range(0X12230,"T",0X1,3);
	split_sreg_range(0X12276,"T",0X1,3);
	split_sreg_range(0X1228A,"T",0X1,3);
	split_sreg_range(0X12292,"T",0X1,3);
	split_sreg_range(0X12298,"T",0X1,3);
	split_sreg_range(0X122C0,"T",0X1,3);
	split_sreg_range(0X122CC,"T",0X1,3);
	split_sreg_range(0X12330,"T",0X1,3);
	split_sreg_range(0X12336,"T",0X1,3);
	split_sreg_range(0X1233E,"T",0X1,3);
	split_sreg_range(0X12346,"T",0X1,3);
	split_sreg_range(0X1238A,"T",0X1,3);
	split_sreg_range(0X123C4,"T",0X1,3);
	split_sreg_range(0X123CC,"T",0X1,3);
	split_sreg_range(0X123DC,"T",0X1,3);
	split_sreg_range(0X123E4,"T",0X1,3);
	split_sreg_range(0X123EC,"T",0X1,3);
	split_sreg_range(0X12406,"T",0X1,3);
	split_sreg_range(0X1240A,"T",0X1,3);
	split_sreg_range(0X12412,"T",0X1,3);
	split_sreg_range(0X1241E,"T",0X1,3);
	split_sreg_range(0X12444,"T",0X1,3);
	split_sreg_range(0X12464,"T",0X1,3);
	split_sreg_range(0X12472,"T",0X1,3);
	split_sreg_range(0X12478,"T",0X1,3);
	split_sreg_range(0X1247A,"T",0X1,3);
	split_sreg_range(0X12480,"T",0X1,3);
	split_sreg_range(0X1248E,"T",0X1,3);
	split_sreg_range(0X124B6,"T",0X1,3);
	split_sreg_range(0X124D0,"T",0X1,3);
	split_sreg_range(0X124E8,"T",0X1,3);
	split_sreg_range(0X12502,"T",0X1,3);
	split_sreg_range(0X12538,"T",0X1,3);
	split_sreg_range(0X125B0,"T",0X1,3);
	split_sreg_range(0X125B2,"T",0X1,3);
	split_sreg_range(0X125B6,"T",0X1,3);
	split_sreg_range(0X125C8,"T",0X1,3);
	split_sreg_range(0X12630,"T",0X1,3);
	split_sreg_range(0X12634,"T",0X1,3);
	split_sreg_range(0X1268E,"T",0X1,3);
	split_sreg_range(0X12690,"T",0X1,3);
	split_sreg_range(0X12698,"T",0X1,3);
	split_sreg_range(0X126A4,"T",0X1,3);
	split_sreg_range(0X126E6,"T",0X1,3);
	split_sreg_range(0X12714,"T",0X1,3);
	split_sreg_range(0X12734,"T",0X1,3);
	split_sreg_range(0X12750,"T",0X1,3);
	split_sreg_range(0X1275C,"T",0X1,3);
	split_sreg_range(0X1276A,"T",0X1,3);
	split_sreg_range(0X1276E,"T",0X1,3);
	split_sreg_range(0X127A4,"T",0X1,3);
	split_sreg_range(0X127DA,"T",0X1,3);
	split_sreg_range(0X127E0,"T",0X1,3);
	split_sreg_range(0X127F2,"T",0X1,3);
	split_sreg_range(0X127F4,"T",0X1,3);
	split_sreg_range(0X127F8,"T",0X1,3);
	split_sreg_range(0X12802,"T",0X1,3);
	split_sreg_range(0X1280E,"T",0X1,3);
	split_sreg_range(0X1282E,"T",0X1,3);
	split_sreg_range(0X12854,"T",0X1,3);
	split_sreg_range(0X1285A,"T",0X1,3);
	split_sreg_range(0X1287E,"T",0X1,3);
	split_sreg_range(0X12884,"T",0X1,3);
	split_sreg_range(0X128BE,"T",0X1,3);
	split_sreg_range(0X128E4,"T",0X1,3);
	split_sreg_range(0X1290C,"T",0X1,3);
	split_sreg_range(0X1290E,"T",0X1,3);
	split_sreg_range(0X12930,"T",0X1,3);
	split_sreg_range(0X1295E,"T",0X1,3);
	split_sreg_range(0X1296A,"T",0X1,3);
	split_sreg_range(0X12994,"T",0X1,3);
	split_sreg_range(0X129C0,"T",0X1,3);
	split_sreg_range(0X129D2,"T",0X1,3);
	split_sreg_range(0X129EA,"T",0X1,3);
	split_sreg_range(0X12A04,"T",0X1,3);
	split_sreg_range(0X12A06,"T",0X1,3);
	split_sreg_range(0X12A18,"T",0X1,3);
	split_sreg_range(0X12A28,"T",0X1,3);
	split_sreg_range(0X12A32,"T",0X1,3);
	split_sreg_range(0X12A3A,"T",0X1,3);
	split_sreg_range(0X12A4C,"T",0X1,3);
	split_sreg_range(0X12A58,"T",0X1,3);
	split_sreg_range(0X12A90,"T",0X1,3);
	split_sreg_range(0X12A98,"T",0X1,3);
	split_sreg_range(0X12AA2,"T",0X1,3);
	split_sreg_range(0X12ABA,"T",0X1,3);
	split_sreg_range(0X12B20,"T",0X1,3);
	split_sreg_range(0X12B88,"T",0X1,3);
	split_sreg_range(0X12B8C,"T",0X1,3);
	split_sreg_range(0X12B90,"T",0X1,3);
	split_sreg_range(0X12B94,"T",0X1,3);
	split_sreg_range(0X12B96,"T",0X1,3);
	split_sreg_range(0X12B98,"T",0X1,3);
	split_sreg_range(0X12BB6,"T",0X1,3);
	split_sreg_range(0X12BF2,"T",0X1,3);
	split_sreg_range(0X12C38,"T",0X1,3);
	split_sreg_range(0X12C3A,"T",0X1,3);
	split_sreg_range(0X12C3C,"T",0X1,3);
	split_sreg_range(0X12C3E,"T",0X1,3);
	split_sreg_range(0X12C70,"T",0X1,3);
	split_sreg_range(0X12C84,"T",0X1,3);
	split_sreg_range(0X12C8A,"T",0X1,3);
	split_sreg_range(0X12C98,"T",0X1,3);
	split_sreg_range(0X12C9A,"T",0X1,3);
	split_sreg_range(0X12CAE,"T",0X1,3);
	split_sreg_range(0X12CDC,"T",0X1,3);
	split_sreg_range(0X12CEC,"T",0X1,3);
	split_sreg_range(0X12CF2,"T",0X1,3);
	split_sreg_range(0X12D3E,"T",0X1,3);
	split_sreg_range(0X12DAE,"T",0X1,3);
	split_sreg_range(0X12DC4,"T",0X1,3);
	split_sreg_range(0X12DCA,"T",0X1,3);
	split_sreg_range(0X12DD8,"T",0X1,3);
	split_sreg_range(0X12E4E,"T",0X1,3);
	split_sreg_range(0X12ED6,"T",0X1,3);
	split_sreg_range(0X12ED8,"T",0X1,3);
	split_sreg_range(0X12EDA,"T",0X1,3);
	split_sreg_range(0X12EF0,"T",0X1,3);
	split_sreg_range(0X12F6C,"T",0X1,3);
	split_sreg_range(0X12F90,"T",0X1,3);
	split_sreg_range(0X12F92,"T",0X1,3);
	split_sreg_range(0X12FBC,"T",0X1,3);
	split_sreg_range(0X12FC0,"T",0X1,3);
	split_sreg_range(0X13008,"T",0X1,3);
	split_sreg_range(0X1304C,"T",0X1,3);
	split_sreg_range(0X13062,"T",0X1,3);
	split_sreg_range(0X1307C,"T",0X1,3);
	split_sreg_range(0X1309C,"T",0X1,3);
	split_sreg_range(0X130BC,"T",0X1,3);
	split_sreg_range(0X130C2,"T",0X1,3);
	split_sreg_range(0X130E6,"T",0X1,3);
	split_sreg_range(0X1310C,"T",0X1,3);
	split_sreg_range(0X13130,"T",0X1,3);
	split_sreg_range(0X1319C,"T",0X1,3);
	split_sreg_range(0X131AC,"T",0X1,3);
	split_sreg_range(0X131B2,"T",0X1,3);
	split_sreg_range(0X13208,"T",0X1,3);
	split_sreg_range(0X13244,"T",0X1,3);
	split_sreg_range(0X13254,"T",0X1,3);
	split_sreg_range(0X1326E,"T",0X1,3);
	split_sreg_range(0X1328E,"T",0X1,3);
	split_sreg_range(0X132AE,"T",0X1,3);
	split_sreg_range(0X132B0,"T",0X1,3);
	split_sreg_range(0X132B6,"T",0X1,3);
	split_sreg_range(0X132DA,"T",0X1,3);
	split_sreg_range(0X13300,"T",0X1,3);
	split_sreg_range(0X13324,"T",0X1,3);
	split_sreg_range(0X133A0,"T",0X1,3);
	split_sreg_range(0X133C8,"T",0X1,3);
	split_sreg_range(0X1343E,"T",0X1,3);
	split_sreg_range(0X134B4,"T",0X1,3);
	split_sreg_range(0X13550,"T",0X1,3);
	split_sreg_range(0X13584,"T",0X1,3);
	split_sreg_range(0X135A6,"T",0X1,3);
	split_sreg_range(0X135A8,"T",0X1,3);
	split_sreg_range(0X135C2,"T",0X1,3);
	split_sreg_range(0X135C6,"T",0X1,3);
	split_sreg_range(0X135E2,"T",0X1,3);
	split_sreg_range(0X135E6,"T",0X1,3);
	split_sreg_range(0X13644,"T",0X1,3);
	split_sreg_range(0X13648,"T",0X1,3);
	split_sreg_range(0X1364A,"T",0X1,3);
	split_sreg_range(0X1366A,"T",0X1,3);
	split_sreg_range(0X136B6,"T",0X1,3);
	split_sreg_range(0X136B8,"T",0X1,3);
	split_sreg_range(0X136CE,"T",0X1,3);
	split_sreg_range(0X136E8,"T",0X1,3);
	split_sreg_range(0X136F0,"T",0X1,3);
	split_sreg_range(0X13728,"T",0X1,3);
	split_sreg_range(0X13768,"T",0X1,3);
	split_sreg_range(0X13772,"T",0X1,3);
	split_sreg_range(0X13780,"T",0X1,3);
	split_sreg_range(0X13790,"T",0X1,3);
	split_sreg_range(0X1379C,"T",0X1,3);
	split_sreg_range(0X137C0,"T",0X1,3);
	split_sreg_range(0X137D2,"T",0X1,3);
	split_sreg_range(0X137DE,"T",0X1,3);
	split_sreg_range(0X137E6,"T",0X1,3);
	split_sreg_range(0X137E8,"T",0X1,3);
	split_sreg_range(0X137F6,"T",0X1,3);
	split_sreg_range(0X13832,"T",0X1,3);
	split_sreg_range(0X13836,"T",0X1,3);
	split_sreg_range(0X13854,"T",0X1,3);
	split_sreg_range(0X138CC,"T",0X1,3);
	split_sreg_range(0X13908,"T",0X1,3);
	split_sreg_range(0X1395C,"T",0X1,3);
	split_sreg_range(0X1396A,"T",0X1,3);
	split_sreg_range(0X1397A,"T",0X1,3);
	split_sreg_range(0X1397C,"T",0X1,3);
	split_sreg_range(0X1397E,"T",0X1,3);
	split_sreg_range(0X13992,"T",0X1,3);
	split_sreg_range(0X13998,"T",0X1,3);
	split_sreg_range(0X1399E,"T",0X1,3);
	split_sreg_range(0X139A6,"T",0X1,3);
	split_sreg_range(0X139AC,"T",0X1,3);
	split_sreg_range(0X139B2,"T",0X1,3);
	split_sreg_range(0X139B8,"T",0X1,3);
	split_sreg_range(0X139C0,"T",0X1,3);
	split_sreg_range(0X139CC,"T",0X1,3);
	split_sreg_range(0X139D4,"T",0X1,3);
	split_sreg_range(0X139FC,"T",0X1,3);
	split_sreg_range(0X13A22,"T",0X1,3);
	split_sreg_range(0X13A2E,"T",0X1,3);
	split_sreg_range(0X13A3E,"T",0X1,3);
	split_sreg_range(0X13A48,"T",0X1,3);
	split_sreg_range(0X13A4C,"T",0X1,3);
	split_sreg_range(0X13A62,"T",0X1,3);
	split_sreg_range(0X13A74,"T",0X1,3);
	split_sreg_range(0X13A94,"T",0X1,3);
	split_sreg_range(0X13A9E,"T",0X1,3);
	split_sreg_range(0X13AA0,"T",0X1,3);
	split_sreg_range(0X13AAA,"T",0X1,3);
	split_sreg_range(0X13AB2,"T",0X1,3);
	split_sreg_range(0X13AC6,"T",0X1,3);
	split_sreg_range(0X13AE0,"T",0X1,3);
	split_sreg_range(0X13AE4,"T",0X1,3);
	split_sreg_range(0X13AF0,"T",0X1,3);
	split_sreg_range(0X13B2A,"T",0X1,3);
	split_sreg_range(0X13B3E,"T",0X1,3);
	split_sreg_range(0X13B46,"T",0X1,3);
	split_sreg_range(0X13B4C,"T",0X1,3);
	split_sreg_range(0X13B52,"T",0X1,3);
	split_sreg_range(0X13B62,"T",0X1,3);
	split_sreg_range(0X13B66,"T",0X1,3);
	split_sreg_range(0X13B78,"T",0X1,3);
	split_sreg_range(0X13B96,"T",0X1,3);
	split_sreg_range(0X13BB6,"T",0X1,3);
	split_sreg_range(0X13BB8,"T",0X1,3);
	split_sreg_range(0X13C30,"T",0X1,3);
	split_sreg_range(0X13C4E,"T",0X1,3);
	split_sreg_range(0X13C6C,"T",0X1,3);
	split_sreg_range(0X13C72,"T",0X1,3);
	split_sreg_range(0X13C7A,"T",0X1,3);
	split_sreg_range(0X13C7C,"T",0X1,3);
	split_sreg_range(0X13C94,"T",0X1,3);
	split_sreg_range(0X13CBE,"T",0X1,3);
	split_sreg_range(0X13CC4,"T",0X1,3);
	split_sreg_range(0X13CCA,"T",0X1,3);
	split_sreg_range(0X13CCE,"T",0X1,3);
	split_sreg_range(0X13CD2,"T",0X1,3);
	split_sreg_range(0X13CE2,"T",0X1,3);
	split_sreg_range(0X13CE6,"T",0X1,3);
	split_sreg_range(0X13CE8,"T",0X1,3);
	split_sreg_range(0X13CEC,"T",0X1,3);
	split_sreg_range(0X13CF0,"T",0X1,3);
	split_sreg_range(0X13D0A,"T",0X1,3);
	split_sreg_range(0X13D10,"T",0X1,3);
	split_sreg_range(0X13D16,"T",0X1,3);
	split_sreg_range(0X13D1A,"T",0X1,3);
	split_sreg_range(0X13D1E,"T",0X1,3);
	split_sreg_range(0X13D34,"T",0X1,3);
	split_sreg_range(0X13D3E,"T",0X1,3);
	split_sreg_range(0X13D5A,"T",0X1,3);
	split_sreg_range(0X13D5E,"T",0X1,3);
	split_sreg_range(0X13D78,"T",0X1,3);
	split_sreg_range(0X13D8E,"T",0X1,3);
	split_sreg_range(0X13D92,"T",0X1,3);
	split_sreg_range(0X13D94,"T",0X1,3);
	split_sreg_range(0X13D9A,"T",0X1,3);
	split_sreg_range(0X13DDC,"T",0X1,3);
	split_sreg_range(0X13DE4,"T",0X1,3);
	split_sreg_range(0X13DF0,"T",0X1,3);
	split_sreg_range(0X13E32,"T",0X1,3);
	split_sreg_range(0X13E3A,"T",0X1,3);
	split_sreg_range(0X13E46,"T",0X1,3);
	split_sreg_range(0X13E50,"T",0X1,3);
	split_sreg_range(0X13E58,"T",0X1,3);
	split_sreg_range(0X13E6E,"T",0X1,3);
	split_sreg_range(0X13E84,"T",0X1,3);
	split_sreg_range(0X13E92,"T",0X1,3);
	split_sreg_range(0X13E98,"T",0X1,3);
	split_sreg_range(0X13EA2,"T",0X1,3);
	split_sreg_range(0X13EAA,"T",0X1,3);
	split_sreg_range(0X13EB6,"T",0X1,3);
	split_sreg_range(0X13EBC,"T",0X1,3);
	split_sreg_range(0X13EC4,"T",0X1,3);
	split_sreg_range(0X13ED6,"T",0X1,3);
	split_sreg_range(0X13EFA,"T",0X1,3);
	split_sreg_range(0X13EFE,"T",0X1,3);
	split_sreg_range(0X13F12,"T",0X1,3);
	split_sreg_range(0X13F40,"T",0X1,3);
	split_sreg_range(0X13F52,"T",0X1,3);
	split_sreg_range(0X13F54,"T",0X1,3);
	split_sreg_range(0X13F56,"T",0X1,3);
	split_sreg_range(0X13F68,"T",0X1,3);
	split_sreg_range(0X13F78,"T",0X1,3);
	split_sreg_range(0X13F8A,"T",0X1,3);
	split_sreg_range(0X13F8C,"T",0X1,3);
	split_sreg_range(0X13F8E,"T",0X1,3);
	split_sreg_range(0X13FA0,"T",0X1,3);
	split_sreg_range(0X13FB0,"T",0X1,3);
	split_sreg_range(0X13FBA,"T",0X1,3);
	split_sreg_range(0X13FD0,"T",0X1,3);
	split_sreg_range(0X14018,"T",0X1,3);
	split_sreg_range(0X14078,"T",0X1,3);
	split_sreg_range(0X140DE,"T",0X1,3);
	split_sreg_range(0X14102,"T",0X1,3);
	split_sreg_range(0X14116,"T",0X1,3);
	split_sreg_range(0X14152,"T",0X1,3);
	split_sreg_range(0X141AE,"T",0X1,3);
	split_sreg_range(0X141B0,"T",0X1,3);
	split_sreg_range(0X141B6,"T",0X1,3);
	split_sreg_range(0X141BA,"T",0X1,3);
	split_sreg_range(0X141E0,"T",0X1,3);
	split_sreg_range(0X141F0,"T",0X1,3);
	split_sreg_range(0X141F4,"T",0X1,3);
	split_sreg_range(0X14232,"T",0X1,3);
	split_sreg_range(0X14246,"T",0X1,3);
	split_sreg_range(0X14250,"T",0X1,3);
	split_sreg_range(0X14286,"T",0X1,3);
	split_sreg_range(0X142B0,"T",0X1,3);
	split_sreg_range(0X142B4,"T",0X1,3);
	split_sreg_range(0X142F2,"T",0X1,3);
	split_sreg_range(0X1433E,"T",0X1,3);
	split_sreg_range(0X1434E,"T",0X1,3);
	split_sreg_range(0X14374,"T",0X1,3);
	split_sreg_range(0X1437A,"T",0X1,3);
	split_sreg_range(0X14398,"T",0X1,3);
	split_sreg_range(0X143A4,"T",0X1,3);
	split_sreg_range(0X143EA,"T",0X1,3);
	split_sreg_range(0X14404,"T",0X1,3);
	split_sreg_range(0X1445C,"T",0X1,3);
	split_sreg_range(0X14462,"T",0X1,3);
	split_sreg_range(0X14466,"T",0X1,3);
	split_sreg_range(0X1446A,"T",0X1,3);
	split_sreg_range(0X1446C,"T",0X1,3);
	split_sreg_range(0X1446E,"T",0X1,3);
	split_sreg_range(0X14480,"T",0X1,3);
	split_sreg_range(0X144B4,"T",0X1,3);
	split_sreg_range(0X144F2,"T",0X1,3);
	split_sreg_range(0X144F4,"T",0X1,3);
	split_sreg_range(0X14516,"T",0X1,3);
	split_sreg_range(0X14518,"T",0X1,3);
	split_sreg_range(0X14520,"T",0X1,3);
	split_sreg_range(0X1452E,"T",0X1,3);
	split_sreg_range(0X14566,"T",0X1,3);
	split_sreg_range(0X14568,"T",0X1,3);
	split_sreg_range(0X1456C,"T",0X1,3);
	split_sreg_range(0X14580,"T",0X1,3);
	split_sreg_range(0X14594,"T",0X1,3);
	split_sreg_range(0X1459C,"T",0X1,3);
	split_sreg_range(0X145A0,"T",0X1,3);
	split_sreg_range(0X14648,"T",0X1,3);
	split_sreg_range(0X1464C,"T",0X1,3);
	split_sreg_range(0X1465C,"T",0X1,3);
	split_sreg_range(0X14662,"T",0X1,3);
	split_sreg_range(0X14688,"T",0X1,3);
	split_sreg_range(0X146A2,"T",0X1,3);
	split_sreg_range(0X146BE,"T",0X1,3);
	split_sreg_range(0X146DC,"T",0X1,3);
	split_sreg_range(0X14700,"T",0X1,3);
	split_sreg_range(0X1470E,"T",0X1,3);
	split_sreg_range(0X1471E,"T",0X1,3);
	split_sreg_range(0X14720,"T",0X1,3);
	split_sreg_range(0X1474C,"T",0X1,3);
	split_sreg_range(0X147AE,"T",0X1,3);
	split_sreg_range(0X147B0,"T",0X1,3);
	split_sreg_range(0X147C4,"T",0X1,3);
	split_sreg_range(0X147CA,"T",0X1,3);
	split_sreg_range(0X14844,"T",0X1,3);
	split_sreg_range(0X1489E,"T",0X1,3);
	split_sreg_range(0X148AE,"T",0X1,3);
	split_sreg_range(0X148B4,"T",0X1,3);
	split_sreg_range(0X148FC,"T",0X1,3);
	split_sreg_range(0X1490A,"T",0X1,3);
	split_sreg_range(0X1491C,"T",0X1,3);
	split_sreg_range(0X14936,"T",0X1,3);
	split_sreg_range(0X14950,"T",0X1,3);
	split_sreg_range(0X14952,"T",0X1,3);
	split_sreg_range(0X14956,"T",0X1,3);
	split_sreg_range(0X14974,"T",0X1,3);
	split_sreg_range(0X149FA,"T",0X1,3);
	split_sreg_range(0X14A62,"T",0X1,3);
	split_sreg_range(0X14AA8,"T",0X1,3);
	split_sreg_range(0X14B10,"T",0X1,3);
	split_sreg_range(0X14B24,"T",0X1,3);
	split_sreg_range(0X14B36,"T",0X1,3);
	split_sreg_range(0X14B44,"T",0X1,3);
	split_sreg_range(0X14B4C,"T",0X1,3);
	split_sreg_range(0X14B54,"T",0X1,3);
	split_sreg_range(0X14B58,"T",0X1,3);
	split_sreg_range(0X14B76,"T",0X1,3);
	split_sreg_range(0X14B96,"T",0X1,3);
	split_sreg_range(0X14BC4,"T",0X1,3);
	split_sreg_range(0X14BDA,"T",0X1,3);
	split_sreg_range(0X14BE0,"T",0X1,3);
	split_sreg_range(0X14BEA,"T",0X1,3);
	split_sreg_range(0X14BEC,"T",0X1,3);
	split_sreg_range(0X14BEE,"T",0X1,3);
	split_sreg_range(0X14C06,"T",0X1,3);
	split_sreg_range(0X14C1C,"T",0X1,3);
	split_sreg_range(0X14C22,"T",0X1,3);
	split_sreg_range(0X14C28,"T",0X1,3);
	split_sreg_range(0X14C2C,"T",0X1,3);
	split_sreg_range(0X14C30,"T",0X1,3);
	split_sreg_range(0X14C4A,"T",0X1,3);
	split_sreg_range(0X14C52,"T",0X1,3);
	split_sreg_range(0X14C58,"T",0X1,3);
	split_sreg_range(0X14C5E,"T",0X1,3);
	split_sreg_range(0X14C62,"T",0X1,3);
	split_sreg_range(0X14C78,"T",0X1,3);
	split_sreg_range(0X14C82,"T",0X1,3);
	split_sreg_range(0X14C9E,"T",0X1,3);
	split_sreg_range(0X14CA6,"T",0X1,3);
	split_sreg_range(0X14CAA,"T",0X1,3);
	split_sreg_range(0X14CC4,"T",0X1,3);
	split_sreg_range(0X14CE4,"T",0X1,3);
	split_sreg_range(0X14CE8,"T",0X1,3);
	split_sreg_range(0X14CEA,"T",0X1,3);
	split_sreg_range(0X14CF0,"T",0X1,3);
	split_sreg_range(0X14D68,"T",0X1,3);
	split_sreg_range(0X14D7C,"T",0X1,3);
	split_sreg_range(0X14D8E,"T",0X1,3);
	split_sreg_range(0X14DAA,"T",0X1,3);
	split_sreg_range(0X14DAC,"T",0X1,3);
	split_sreg_range(0X14DC2,"T",0X1,3);
	split_sreg_range(0X14DDE,"T",0X1,3);
	split_sreg_range(0X14DE6,"T",0X1,3);
	split_sreg_range(0X14DFA,"T",0X1,3);
	split_sreg_range(0X14E16,"T",0X1,3);
	split_sreg_range(0X14E1A,"T",0X1,3);
	split_sreg_range(0X14E32,"T",0X1,3);
	split_sreg_range(0X14E34,"T",0X1,3);
	split_sreg_range(0X14E38,"T",0X1,3);
	split_sreg_range(0X14E48,"T",0X1,3);
	split_sreg_range(0X14E50,"T",0X1,3);
	split_sreg_range(0X14E54,"T",0X1,3);
	split_sreg_range(0X14E64,"T",0X1,3);
	split_sreg_range(0X14E80,"T",0X1,3);
	split_sreg_range(0X14E9C,"T",0X1,3);
	split_sreg_range(0X14EB8,"T",0X1,3);
	split_sreg_range(0X14ECE,"T",0X1,3);
	split_sreg_range(0X14EDC,"T",0X1,3);
	split_sreg_range(0X14EE0,"T",0X1,3);
	split_sreg_range(0X14EE8,"T",0X1,3);
	split_sreg_range(0X14EEE,"T",0X1,3);
	split_sreg_range(0X14F06,"T",0X1,3);
	split_sreg_range(0X14F0E,"T",0X1,3);
	split_sreg_range(0X14F10,"T",0X1,3);
	split_sreg_range(0X14F14,"T",0X1,3);
	split_sreg_range(0X14F1E,"T",0X1,3);
	split_sreg_range(0X14F2A,"T",0X1,3);
	split_sreg_range(0X14F32,"T",0X1,3);
	split_sreg_range(0X14F34,"T",0X1,3);
	split_sreg_range(0X14F48,"T",0X1,3);
	split_sreg_range(0X14F6C,"T",0X1,3);
	split_sreg_range(0X14F86,"T",0X1,3);
	split_sreg_range(0X14F94,"T",0X1,3);
	split_sreg_range(0X14FA2,"T",0X1,3);
	split_sreg_range(0X14FB4,"T",0X1,3);
	split_sreg_range(0X14FBE,"T",0X1,3);
	split_sreg_range(0X14FC6,"T",0X1,3);
	split_sreg_range(0X14FE4,"T",0X1,3);
	split_sreg_range(0X14FE8,"T",0X1,3);
	split_sreg_range(0X14FFC,"T",0X1,3);
	split_sreg_range(0X15006,"T",0X1,3);
	split_sreg_range(0X1501C,"T",0X1,3);
	split_sreg_range(0X15044,"T",0X1,3);
	split_sreg_range(0X15048,"T",0X1,3);
	split_sreg_range(0X15056,"T",0X1,3);
	split_sreg_range(0X15064,"T",0X1,3);
	split_sreg_range(0X15066,"T",0X1,3);
	split_sreg_range(0X15070,"T",0X1,3);
	split_sreg_range(0X15074,"T",0X1,3);
	split_sreg_range(0X15094,"T",0X1,3);
	split_sreg_range(0X150BC,"T",0X1,3);
	split_sreg_range(0X150E0,"T",0X1,3);
	split_sreg_range(0X150FA,"T",0X1,3);
	split_sreg_range(0X15108,"T",0X1,3);
	split_sreg_range(0X15116,"T",0X1,3);
	split_sreg_range(0X15128,"T",0X1,3);
	split_sreg_range(0X15132,"T",0X1,3);
	split_sreg_range(0X1513A,"T",0X1,3);
	split_sreg_range(0X15158,"T",0X1,3);
	split_sreg_range(0X1515C,"T",0X1,3);
	split_sreg_range(0X15178,"T",0X1,3);
	split_sreg_range(0X1518A,"T",0X1,3);
	split_sreg_range(0X1518C,"T",0X1,3);
	split_sreg_range(0X15190,"T",0X1,3);
	split_sreg_range(0X151A2,"T",0X1,3);
	split_sreg_range(0X151B0,"T",0X1,3);
	split_sreg_range(0X151B2,"T",0X1,3);
	split_sreg_range(0X151C4,"T",0X1,3);
	split_sreg_range(0X151C6,"T",0X1,3);
	split_sreg_range(0X151EC,"T",0X1,3);
	split_sreg_range(0X15200,"T",0X1,3);
	split_sreg_range(0X1521C,"T",0X1,3);
	split_sreg_range(0X1521E,"T",0X1,3);
	split_sreg_range(0X15220,"T",0X1,3);
	split_sreg_range(0X15232,"T",0X1,3);
	split_sreg_range(0X15234,"T",0X1,3);
	split_sreg_range(0X1524A,"T",0X1,3);
	split_sreg_range(0X15270,"T",0X1,3);
	split_sreg_range(0X15276,"T",0X1,3);
	split_sreg_range(0X15286,"T",0X1,3);
	split_sreg_range(0X15288,"T",0X1,3);
	split_sreg_range(0X1529C,"T",0X1,3);
	split_sreg_range(0X152A6,"T",0X1,3);
	split_sreg_range(0X152B2,"T",0X1,3);
	split_sreg_range(0X152C6,"T",0X1,3);
	split_sreg_range(0X152CA,"T",0X1,3);
	split_sreg_range(0X152D4,"T",0X1,3);
	split_sreg_range(0X152E8,"T",0X1,3);
	split_sreg_range(0X152EA,"T",0X1,3);
	split_sreg_range(0X15324,"T",0X1,3);
	split_sreg_range(0X15336,"T",0X1,3);
	split_sreg_range(0X15338,"T",0X1,3);
	split_sreg_range(0X15358,"T",0X1,3);
	split_sreg_range(0X15386,"T",0X1,3);
	split_sreg_range(0X153AA,"T",0X1,3);
	split_sreg_range(0X153AC,"T",0X1,3);
	split_sreg_range(0X153BA,"T",0X1,3);
	split_sreg_range(0X153C8,"T",0X1,3);
	split_sreg_range(0X153D6,"T",0X1,3);
	split_sreg_range(0X153F6,"T",0X1,3);
	split_sreg_range(0X153FA,"T",0X1,3);
	split_sreg_range(0X153FC,"T",0X1,3);
	split_sreg_range(0X1540A,"T",0X1,3);
	split_sreg_range(0X1540C,"T",0X1,3);
	split_sreg_range(0X1541A,"T",0X1,3);
	split_sreg_range(0X1541C,"T",0X1,3);
	split_sreg_range(0X15428,"T",0X1,3);
	split_sreg_range(0X1542A,"T",0X1,3);
	split_sreg_range(0X15466,"T",0X1,3);
	split_sreg_range(0X1546A,"T",0X1,3);
	split_sreg_range(0X154AC,"T",0X1,3);
	split_sreg_range(0X154D0,"T",0X1,3);
	split_sreg_range(0X154D4,"T",0X1,3);
	split_sreg_range(0X154D8,"T",0X1,3);
	split_sreg_range(0X1552A,"T",0X1,3);
	split_sreg_range(0X1553E,"T",0X1,3);
	split_sreg_range(0X15540,"T",0X1,3);
	split_sreg_range(0X15578,"T",0X1,3);
	split_sreg_range(0X1557C,"T",0X1,3);
	split_sreg_range(0X1559A,"T",0X1,3);
	split_sreg_range(0X1559E,"T",0X1,3);
	split_sreg_range(0X155B2,"T",0X1,3);
	split_sreg_range(0X155B4,"T",0X1,3);
	split_sreg_range(0X155B8,"T",0X1,3);
	split_sreg_range(0X155C4,"T",0X1,3);
	split_sreg_range(0X155E0,"T",0X1,3);
	split_sreg_range(0X155F4,"T",0X1,3);
	split_sreg_range(0X15618,"T",0X1,3);
	split_sreg_range(0X1562C,"T",0X1,3);
	split_sreg_range(0X15638,"T",0X1,3);
	split_sreg_range(0X1565C,"T",0X1,3);
	split_sreg_range(0X1566A,"T",0X1,3);
	split_sreg_range(0X1567E,"T",0X1,3);
	split_sreg_range(0X15696,"T",0X1,3);
	split_sreg_range(0X156AA,"T",0X1,3);
	split_sreg_range(0X156D8,"T",0X1,3);
	split_sreg_range(0X156E2,"T",0X1,3);
	split_sreg_range(0X156EA,"T",0X1,3);
	split_sreg_range(0X156F0,"T",0X1,3);
	split_sreg_range(0X15728,"T",0X1,3);
	split_sreg_range(0X15732,"T",0X1,3);
	split_sreg_range(0X15764,"T",0X1,3);
	split_sreg_range(0X15788,"T",0X1,3);
	split_sreg_range(0X157CC,"T",0X1,3);
	split_sreg_range(0X157D0,"T",0X1,3);
	split_sreg_range(0X157D4,"T",0X1,3);
	split_sreg_range(0X157D6,"T",0X1,3);
	split_sreg_range(0X157DA,"T",0X1,3);
	split_sreg_range(0X157E2,"T",0X1,3);
	split_sreg_range(0X1580A,"T",0X1,3);
	split_sreg_range(0X15836,"T",0X1,3);
	split_sreg_range(0X15848,"T",0X1,3);
	split_sreg_range(0X1585C,"T",0X1,3);
	split_sreg_range(0X15866,"T",0X1,3);
	split_sreg_range(0X1586E,"T",0X1,3);
	split_sreg_range(0X15876,"T",0X1,3);
	split_sreg_range(0X1588E,"T",0X1,3);
	split_sreg_range(0X1589A,"T",0X1,3);
	split_sreg_range(0X158AA,"T",0X1,3);
	split_sreg_range(0X158C2,"T",0X1,3);
	split_sreg_range(0X158F0,"T",0X1,3);
	split_sreg_range(0X158F4,"T",0X1,3);
	split_sreg_range(0X15934,"T",0X1,3);
	split_sreg_range(0X15946,"T",0X1,3);
	split_sreg_range(0X1594A,"T",0X1,3);
	split_sreg_range(0X15958,"T",0X1,3);
	split_sreg_range(0X15980,"T",0X1,3);
	split_sreg_range(0X159A8,"T",0X1,3);
	split_sreg_range(0X159B4,"T",0X1,3);
	split_sreg_range(0X159C4,"T",0X1,3);
	split_sreg_range(0X159D0,"T",0X1,3);
	split_sreg_range(0X159D6,"T",0X1,3);
	split_sreg_range(0X159D8,"T",0X1,3);
	split_sreg_range(0X159F4,"T",0X1,3);
	split_sreg_range(0X15A20,"T",0X1,3);
	split_sreg_range(0X15A26,"T",0X1,3);
	split_sreg_range(0X15A7A,"T",0X1,3);
	split_sreg_range(0X15A88,"T",0X1,3);
	split_sreg_range(0X15A8E,"T",0X1,3);
	split_sreg_range(0X15ABC,"T",0X1,3);
	split_sreg_range(0X15AE8,"T",0X1,3);
	split_sreg_range(0X15B08,"T",0X1,3);
	split_sreg_range(0X15B0C,"T",0X1,3);
	split_sreg_range(0X15B1E,"T",0X1,3);
	split_sreg_range(0X15B22,"T",0X1,3);
	split_sreg_range(0X15B46,"T",0X1,3);
	split_sreg_range(0X15B50,"T",0X1,3);
	split_sreg_range(0X15B60,"T",0X1,3);
	split_sreg_range(0X15BA2,"T",0X1,3);
	split_sreg_range(0X15BA4,"T",0X1,3);
	split_sreg_range(0X15BAE,"T",0X1,3);
	split_sreg_range(0X15BEC,"T",0X1,3);
	split_sreg_range(0X15BEE,"T",0X1,3);
	split_sreg_range(0X15C0C,"T",0X1,3);
	split_sreg_range(0X15C0E,"T",0X1,3);
	split_sreg_range(0X15C30,"T",0X1,3);
	split_sreg_range(0X15C3A,"T",0X1,3);
	split_sreg_range(0X15C42,"T",0X1,3);
	split_sreg_range(0X15C46,"T",0X1,3);
	split_sreg_range(0X15C50,"T",0X1,3);
	split_sreg_range(0X15C78,"T",0X1,3);
	split_sreg_range(0X15C92,"T",0X1,3);
	split_sreg_range(0X15CB8,"T",0X1,3);
	split_sreg_range(0X15CDE,"T",0X1,3);
	split_sreg_range(0X15D28,"T",0X1,3);
	split_sreg_range(0X15D30,"T",0X1,3);
	split_sreg_range(0X15D46,"T",0X1,3);
	split_sreg_range(0X15D48,"T",0X1,3);
	split_sreg_range(0X15DA6,"T",0X1,3);
	split_sreg_range(0X15DE4,"T",0X1,3);
	split_sreg_range(0X15DE6,"T",0X1,3);
	split_sreg_range(0X15DFA,"T",0X1,3);
	split_sreg_range(0X15DFE,"T",0X1,3);
	split_sreg_range(0X15E08,"T",0X1,3);
	split_sreg_range(0X15E26,"T",0X1,3);
	split_sreg_range(0X15EAA,"T",0X1,3);
	split_sreg_range(0X15EE8,"T",0X1,3);
	split_sreg_range(0X15F24,"T",0X1,3);
	split_sreg_range(0X15F26,"T",0X1,3);
	split_sreg_range(0X15F28,"T",0X1,3);
	split_sreg_range(0X15F78,"T",0X1,3);
	split_sreg_range(0X15F7A,"T",0X1,3);
	split_sreg_range(0X15F90,"T",0X1,3);
	split_sreg_range(0X15FEE,"T",0X1,3);
	split_sreg_range(0X15FFE,"T",0X1,3);
	split_sreg_range(0X16020,"T",0X1,3);
	split_sreg_range(0X16080,"T",0X1,3);
	split_sreg_range(0X1609C,"T",0X1,3);
	split_sreg_range(0X160C0,"T",0X1,3);
	split_sreg_range(0X160C6,"T",0X1,3);
	split_sreg_range(0X160CE,"T",0X1,3);
	split_sreg_range(0X160D0,"T",0X1,3);
	split_sreg_range(0X160FA,"T",0X1,3);
	split_sreg_range(0X1611C,"T",0X1,3);
	split_sreg_range(0X16122,"T",0X1,3);
	split_sreg_range(0X1615A,"T",0X1,3);
	split_sreg_range(0X16180,"T",0X1,3);
	split_sreg_range(0X16194,"T",0X1,3);
	split_sreg_range(0X1619C,"T",0X1,3);
	split_sreg_range(0X1619E,"T",0X1,3);
	split_sreg_range(0X161A4,"T",0X1,3);
	split_sreg_range(0X161EA,"T",0X1,3);
	split_sreg_range(0X1625E,"T",0X1,3);
	split_sreg_range(0X162BC,"T",0X1,3);
	split_sreg_range(0X162BE,"T",0X1,3);
	split_sreg_range(0X162D2,"T",0X1,3);
	split_sreg_range(0X162D4,"T",0X1,3);
	split_sreg_range(0X16300,"T",0X1,3);
	split_sreg_range(0X16366,"T",0X1,3);
	split_sreg_range(0X163A4,"T",0X1,3);
	split_sreg_range(0X163A8,"T",0X1,3);
	split_sreg_range(0X163B0,"T",0X1,3);
	split_sreg_range(0X163BE,"T",0X1,3);
	split_sreg_range(0X163C4,"T",0X1,3);
	split_sreg_range(0X163C8,"T",0X1,3);
	split_sreg_range(0X163CE,"T",0X1,3);
	split_sreg_range(0X16420,"T",0X1,3);
	split_sreg_range(0X1643A,"T",0X1,3);
	split_sreg_range(0X16452,"T",0X1,3);
	split_sreg_range(0X16490,"T",0X1,3);
	split_sreg_range(0X16492,"T",0X1,3);
	split_sreg_range(0X164AA,"T",0X1,3);
	split_sreg_range(0X164B8,"T",0X1,3);
	split_sreg_range(0X164E4,"T",0X1,3);
	split_sreg_range(0X164E6,"T",0X1,3);
	split_sreg_range(0X164EA,"T",0X1,3);
	split_sreg_range(0X164F4,"T",0X1,3);
	split_sreg_range(0X16524,"T",0X1,3);
	split_sreg_range(0X16538,"T",0X1,3);
	split_sreg_range(0X1653C,"T",0X1,3);
	split_sreg_range(0X16554,"T",0X1,3);
	split_sreg_range(0X1658C,"T",0X1,3);
	split_sreg_range(0X16594,"T",0X1,3);
	split_sreg_range(0X165A0,"T",0X1,3);
	split_sreg_range(0X165AE,"T",0X1,3);
	split_sreg_range(0X165DA,"T",0X1,3);
	split_sreg_range(0X165DC,"T",0X1,3);
	split_sreg_range(0X165E6,"T",0X1,3);
	split_sreg_range(0X165F6,"T",0X1,3);
	split_sreg_range(0X165FE,"T",0X1,3);
	split_sreg_range(0X16608,"T",0X1,3);
	split_sreg_range(0X16612,"T",0X1,3);
	split_sreg_range(0X1661E,"T",0X1,3);
	split_sreg_range(0X16620,"T",0X1,3);
	split_sreg_range(0X1662A,"T",0X1,3);
	split_sreg_range(0X16632,"T",0X1,3);
	split_sreg_range(0X16670,"T",0X1,3);
	split_sreg_range(0X1668C,"T",0X1,3);
	split_sreg_range(0X166A6,"T",0X1,3);
	split_sreg_range(0X166DA,"T",0X1,3);
	split_sreg_range(0X166F2,"T",0X1,3);
	split_sreg_range(0X166F6,"T",0X1,3);
	split_sreg_range(0X16706,"T",0X1,3);
	split_sreg_range(0X16730,"T",0X1,3);
	split_sreg_range(0X1674E,"T",0X1,3);
	split_sreg_range(0X16776,"T",0X1,3);
	split_sreg_range(0X16778,"T",0X1,3);
	split_sreg_range(0X16780,"T",0X1,3);
	split_sreg_range(0X1678A,"T",0X1,3);
	split_sreg_range(0X16798,"T",0X1,3);
	split_sreg_range(0X1679A,"T",0X1,3);
	split_sreg_range(0X1679E,"T",0X1,3);
	split_sreg_range(0X167AA,"T",0X1,3);
	split_sreg_range(0X167B0,"T",0X1,3);
	split_sreg_range(0X167E2,"T",0X1,3);
	split_sreg_range(0X167EC,"T",0X1,3);
	split_sreg_range(0X167EE,"T",0X1,3);
	split_sreg_range(0X16850,"T",0X1,3);
	split_sreg_range(0X16892,"T",0X1,3);
	split_sreg_range(0X168C4,"T",0X1,3);
	split_sreg_range(0X16994,"T",0X1,3);
	split_sreg_range(0X16996,"T",0X1,3);
	split_sreg_range(0X169DC,"T",0X1,3);
	split_sreg_range(0X169E4,"T",0X1,3);
	split_sreg_range(0X169F2,"T",0X1,3);
	split_sreg_range(0X16A2A,"T",0X1,3);
	split_sreg_range(0X16A2E,"T",0X1,3);
	split_sreg_range(0X16A30,"T",0X1,3);
	split_sreg_range(0X16A3E,"T",0X1,3);
	split_sreg_range(0X16A46,"T",0X1,3);
	split_sreg_range(0X16A4A,"T",0X1,3);
	split_sreg_range(0X16A72,"T",0X1,3);
	split_sreg_range(0X16A74,"T",0X1,3);
	split_sreg_range(0X16ADA,"T",0X1,3);
	split_sreg_range(0X16AF4,"T",0X1,3);
	split_sreg_range(0X16B10,"T",0X1,3);
	split_sreg_range(0X16B12,"T",0X1,3);
	split_sreg_range(0X16B2E,"T",0X1,3);
	split_sreg_range(0X16B58,"T",0X1,3);
	split_sreg_range(0X16B66,"T",0X1,3);
	split_sreg_range(0X16C10,"T",0X1,3);
	split_sreg_range(0X16C22,"T",0X1,3);
	split_sreg_range(0X16C28,"T",0X1,3);
	split_sreg_range(0X16C3E,"T",0X1,3);
	split_sreg_range(0X16C92,"T",0X1,3);
	split_sreg_range(0X16C98,"T",0X1,3);
	split_sreg_range(0X16CA0,"T",0X1,3);
	split_sreg_range(0X16CA4,"T",0X1,3);
	split_sreg_range(0X16CCA,"T",0X1,3);
	split_sreg_range(0X16CCC,"T",0X1,3);
	split_sreg_range(0X16CF0,"T",0X1,3);
	split_sreg_range(0X16CF2,"T",0X1,3);
	split_sreg_range(0X16D2C,"T",0X1,3);
	split_sreg_range(0X16D30,"T",0X1,3);
	split_sreg_range(0X16D44,"T",0X1,3);
	split_sreg_range(0X16D6A,"T",0X1,3);
	split_sreg_range(0X16D6C,"T",0X1,3);
	split_sreg_range(0X16DA0,"T",0X1,3);
	split_sreg_range(0X16DB8,"T",0X1,3);
	split_sreg_range(0X16DD0,"T",0X1,3);
	split_sreg_range(0X16DEC,"T",0X1,3);
	split_sreg_range(0X16E08,"T",0X1,3);
	split_sreg_range(0X16E0C,"T",0X1,3);
	split_sreg_range(0X16E1E,"T",0X1,3);
	split_sreg_range(0X16E22,"T",0X1,3);
	split_sreg_range(0X16E24,"T",0X1,3);
	split_sreg_range(0X16E2E,"T",0X1,3);
	split_sreg_range(0X16E3C,"T",0X1,3);
	split_sreg_range(0X16E40,"T",0X1,3);
	split_sreg_range(0X16E44,"T",0X1,3);
	split_sreg_range(0X16E5A,"T",0X1,3);
	split_sreg_range(0X16E74,"T",0X1,3);
	split_sreg_range(0X16E76,"T",0X1,3);
	split_sreg_range(0X16E80,"T",0X1,3);
	split_sreg_range(0X16E8E,"T",0X1,3);
	split_sreg_range(0X16E90,"T",0X1,3);
	split_sreg_range(0X16E9A,"T",0X1,3);
	split_sreg_range(0X16EAA,"T",0X1,3);
	split_sreg_range(0X16EB4,"T",0X1,3);
	split_sreg_range(0X16EBC,"T",0X1,3);
	split_sreg_range(0X16EC4,"T",0X1,3);
	split_sreg_range(0X16ED2,"T",0X1,3);
	split_sreg_range(0X16ED6,"T",0X1,3);
	split_sreg_range(0X16EE6,"T",0X1,3);
	split_sreg_range(0X16EEA,"T",0X1,3);
	split_sreg_range(0X16F14,"T",0X1,3);
	split_sreg_range(0X16F28,"T",0X1,3);
	split_sreg_range(0X16F2A,"T",0X1,3);
	split_sreg_range(0X16F3A,"T",0X1,3);
	split_sreg_range(0X16F48,"T",0X1,3);
	split_sreg_range(0X16F54,"T",0X1,3);
	split_sreg_range(0X16F62,"T",0X1,3);
	split_sreg_range(0X16F66,"T",0X1,3);
	split_sreg_range(0X16F6A,"T",0X1,3);
	split_sreg_range(0X16F76,"T",0X1,3);
	split_sreg_range(0X16F7C,"T",0X1,3);
	split_sreg_range(0X16F7E,"T",0X1,3);
	split_sreg_range(0X16F86,"T",0X1,3);
	split_sreg_range(0X16FA6,"T",0X1,3);
	split_sreg_range(0X16FA8,"T",0X1,3);
	split_sreg_range(0X16FB8,"T",0X1,3);
	split_sreg_range(0X16FC0,"T",0X1,3);
	split_sreg_range(0X16FD0,"T",0X1,3);
	split_sreg_range(0X1700A,"T",0X1,3);
	split_sreg_range(0X17010,"T",0X1,3);
	split_sreg_range(0X17018,"T",0X1,3);
	split_sreg_range(0X17022,"T",0X1,3);
	split_sreg_range(0X1702A,"T",0X1,3);
	split_sreg_range(0X17082,"T",0X1,3);
	split_sreg_range(0X17094,"T",0X1,3);
	split_sreg_range(0X170A8,"T",0X1,3);
	split_sreg_range(0X170B0,"T",0X1,3);
	split_sreg_range(0X170B6,"T",0X1,3);
	split_sreg_range(0X170CA,"T",0X1,3);
	split_sreg_range(0X170CE,"T",0X1,3);
	split_sreg_range(0X170D8,"T",0X1,3);
	split_sreg_range(0X170DE,"T",0X1,3);
	split_sreg_range(0X170E2,"T",0X1,3);
	split_sreg_range(0X170EE,"T",0X1,3);
	split_sreg_range(0X1713C,"T",0X1,3);
	split_sreg_range(0X1714E,"T",0X1,3);
	split_sreg_range(0X17160,"T",0X1,3);
	split_sreg_range(0X17168,"T",0X1,3);
	split_sreg_range(0X1716E,"T",0X1,3);
	split_sreg_range(0X17188,"T",0X1,3);
	split_sreg_range(0X1718E,"T",0X1,3);
	split_sreg_range(0X17196,"T",0X1,3);
	split_sreg_range(0X1719C,"T",0X1,3);
	split_sreg_range(0X171A4,"T",0X1,3);
	split_sreg_range(0X171A8,"T",0X1,3);
	split_sreg_range(0X171C2,"T",0X1,3);
	split_sreg_range(0X171D8,"T",0X1,3);
	split_sreg_range(0X171E6,"T",0X1,3);
	split_sreg_range(0X171F6,"T",0X1,3);
	split_sreg_range(0X17204,"T",0X1,3);
	split_sreg_range(0X17268,"T",0X1,3);
	split_sreg_range(0X17274,"T",0X1,3);
	split_sreg_range(0X17282,"T",0X1,3);
	split_sreg_range(0X17286,"T",0X1,3);
	split_sreg_range(0X1728C,"T",0X1,3);
	split_sreg_range(0X17292,"T",0X1,3);
	split_sreg_range(0X172AC,"T",0X1,3);
	split_sreg_range(0X172F2,"T",0X1,3);
	split_sreg_range(0X1730C,"T",0X1,3);
	split_sreg_range(0X17346,"T",0X1,3);
	split_sreg_range(0X17370,"T",0X1,3);
	split_sreg_range(0X17380,"T",0X1,3);
	split_sreg_range(0X17384,"T",0X1,3);
	split_sreg_range(0X17386,"T",0X1,3);
	split_sreg_range(0X1738A,"T",0X1,3);
	split_sreg_range(0X1738C,"T",0X1,3);
	split_sreg_range(0X173A2,"T",0X1,3);
	split_sreg_range(0X173A6,"T",0X1,3);
	split_sreg_range(0X173AE,"T",0X1,3);
	split_sreg_range(0X173CC,"T",0X1,3);
	split_sreg_range(0X173D4,"T",0X1,3);
	split_sreg_range(0X173EC,"T",0X1,3);
	split_sreg_range(0X173F0,"T",0X1,3);
	split_sreg_range(0X173F8,"T",0X1,3);
	split_sreg_range(0X173FC,"T",0X1,3);
	split_sreg_range(0X173FE,"T",0X1,3);
	split_sreg_range(0X17402,"T",0X1,3);
	split_sreg_range(0X1740A,"T",0X1,3);
	split_sreg_range(0X17412,"T",0X1,3);
	split_sreg_range(0X17428,"T",0X1,3);
	split_sreg_range(0X1742C,"T",0X1,3);
	split_sreg_range(0X17434,"T",0X1,3);
	split_sreg_range(0X17436,"T",0X1,3);
	split_sreg_range(0X1743A,"T",0X1,3);
	split_sreg_range(0X1743E,"T",0X1,3);
	split_sreg_range(0X17440,"T",0X1,3);
	split_sreg_range(0X17462,"T",0X1,3);
	split_sreg_range(0X1748E,"T",0X1,3);
	split_sreg_range(0X1749A,"T",0X1,3);
	split_sreg_range(0X174A6,"T",0X1,3);
	split_sreg_range(0X174B0,"T",0X1,3);
	split_sreg_range(0X174D2,"T",0X1,3);
	split_sreg_range(0X174E2,"T",0X1,3);
	split_sreg_range(0X174E6,"T",0X1,3);
	split_sreg_range(0X174E8,"T",0X1,3);
	split_sreg_range(0X174EC,"T",0X1,3);
	split_sreg_range(0X174EE,"T",0X1,3);
	split_sreg_range(0X17504,"T",0X1,3);
	split_sreg_range(0X17508,"T",0X1,3);
	split_sreg_range(0X17510,"T",0X1,3);
	split_sreg_range(0X17514,"T",0X1,3);
	split_sreg_range(0X17518,"T",0X1,3);
	split_sreg_range(0X1751E,"T",0X1,3);
	split_sreg_range(0X17526,"T",0X1,3);
	split_sreg_range(0X1753E,"T",0X1,3);
	split_sreg_range(0X17542,"T",0X1,3);
	split_sreg_range(0X1754A,"T",0X1,3);
	split_sreg_range(0X1754E,"T",0X1,3);
	split_sreg_range(0X17552,"T",0X1,3);
	split_sreg_range(0X17558,"T",0X1,3);
	split_sreg_range(0X17560,"T",0X1,3);
	split_sreg_range(0X1757C,"T",0X1,3);
	split_sreg_range(0X1758C,"T",0X1,3);
	split_sreg_range(0X1759E,"T",0X1,3);
	split_sreg_range(0X175A8,"T",0X1,3);
	split_sreg_range(0X175DE,"T",0X1,3);
	split_sreg_range(0X175E2,"T",0X1,3);
	split_sreg_range(0X175E6,"T",0X1,3);
	split_sreg_range(0X175EE,"T",0X1,3);
	split_sreg_range(0X17604,"T",0X1,3);
	split_sreg_range(0X17608,"T",0X1,3);
	split_sreg_range(0X17610,"T",0X1,3);
	split_sreg_range(0X17614,"T",0X1,3);
	split_sreg_range(0X17618,"T",0X1,3);
	split_sreg_range(0X17622,"T",0X1,3);
	split_sreg_range(0X17644,"T",0X1,3);
	split_sreg_range(0X17670,"T",0X1,3);
	split_sreg_range(0X17674,"T",0X1,3);
	split_sreg_range(0X1767C,"T",0X1,3);
	split_sreg_range(0X17698,"T",0X1,3);
	split_sreg_range(0X176A0,"T",0X1,3);
	split_sreg_range(0X176A8,"T",0X1,3);
	split_sreg_range(0X176C8,"T",0X1,3);
	split_sreg_range(0X176CC,"T",0X1,3);
	split_sreg_range(0X176EA,"T",0X1,3);
	split_sreg_range(0X176FC,"T",0X1,3);
	split_sreg_range(0X17712,"T",0X1,3);
	split_sreg_range(0X17720,"T",0X1,3);
	split_sreg_range(0X17734,"T",0X1,3);
	split_sreg_range(0X1773E,"T",0X1,3);
	split_sreg_range(0X17740,"T",0X1,3);
	split_sreg_range(0X17752,"T",0X1,3);
	split_sreg_range(0X17760,"T",0X1,3);
	split_sreg_range(0X17762,"T",0X1,3);
	split_sreg_range(0X1776A,"T",0X1,3);
	split_sreg_range(0X1776E,"T",0X1,3);
	split_sreg_range(0X17784,"T",0X1,3);
	split_sreg_range(0X17786,"T",0X1,3);
	split_sreg_range(0X1778A,"T",0X1,3);
	split_sreg_range(0X17796,"T",0X1,3);
	split_sreg_range(0X177CE,"T",0X1,3);
	split_sreg_range(0X1780C,"T",0X1,3);
	split_sreg_range(0X178F6,"T",0X1,3);
	split_sreg_range(0X178F8,"T",0X1,3);
	split_sreg_range(0X17978,"T",0X1,3);
	split_sreg_range(0X17980,"T",0X1,3);
	split_sreg_range(0X1798A,"T",0X1,3);
	split_sreg_range(0X179A6,"T",0X1,3);
	split_sreg_range(0X179B4,"T",0X1,3);
	split_sreg_range(0X17ACE,"T",0X1,3);
	split_sreg_range(0X17AE8,"T",0X1,3);
	split_sreg_range(0X17AEA,"T",0X1,3);
	split_sreg_range(0X17AEC,"T",0X1,3);
	split_sreg_range(0X17B60,"T",0X1,3);
	split_sreg_range(0X17B66,"T",0X1,3);
	split_sreg_range(0X17BB4,"T",0X1,3);
	split_sreg_range(0X17BF6,"T",0X1,3);
	split_sreg_range(0X17BF8,"T",0X1,3);
	split_sreg_range(0X17C50,"T",0X1,3);
	split_sreg_range(0X17C52,"T",0X1,3);
	split_sreg_range(0X17C96,"T",0X1,3);
	split_sreg_range(0X17C9A,"T",0X1,3);
	split_sreg_range(0X17CA0,"T",0X1,3);
	split_sreg_range(0X17CA4,"T",0X1,3);
	split_sreg_range(0X17CA8,"T",0X1,3);
	split_sreg_range(0X17CB2,"T",0X1,3);
	split_sreg_range(0X17CBC,"T",0X1,3);
	split_sreg_range(0X17D5A,"T",0X1,3);
	split_sreg_range(0X17D5C,"T",0X1,3);
	split_sreg_range(0X17D9C,"T",0X1,3);
	split_sreg_range(0X17DAA,"T",0X1,3);
	split_sreg_range(0X17DB6,"T",0X1,3);
	split_sreg_range(0X17DBA,"T",0X1,3);
	split_sreg_range(0X17DC4,"T",0X1,3);
	split_sreg_range(0X17E00,"T",0X1,3);
	split_sreg_range(0X17E40,"T",0X1,3);
	split_sreg_range(0X17E7C,"T",0X1,3);
	split_sreg_range(0X17EB8,"T",0X1,3);
	split_sreg_range(0X17ED8,"T",0X1,3);
	split_sreg_range(0X17EDA,"T",0X1,3);
	split_sreg_range(0X17EF8,"T",0X1,3);
	split_sreg_range(0X17EFA,"T",0X1,3);
	split_sreg_range(0X17F36,"T",0X1,3);
	split_sreg_range(0X17F70,"T",0X1,3);
	split_sreg_range(0X17F72,"T",0X1,3);
	split_sreg_range(0X17F7A,"T",0X1,3);
	split_sreg_range(0X1802C,"T",0X1,3);
	split_sreg_range(0X18032,"T",0X1,3);
	split_sreg_range(0X1803A,"T",0X1,3);
	split_sreg_range(0X18040,"T",0X1,3);
	split_sreg_range(0X1804C,"T",0X1,3);
	split_sreg_range(0X1804E,"T",0X1,3);
	split_sreg_range(0X18098,"T",0X1,3);
	split_sreg_range(0X1809E,"T",0X1,3);
	split_sreg_range(0X180AE,"T",0X1,3);
	split_sreg_range(0X180C6,"T",0X1,3);
	split_sreg_range(0X180EE,"T",0X1,3);
	split_sreg_range(0X180F4,"T",0X1,3);
	split_sreg_range(0X180F6,"T",0X1,3);
	split_sreg_range(0X180FA,"T",0X1,3);
	split_sreg_range(0X1810E,"T",0X1,3);
	split_sreg_range(0X18110,"T",0X1,3);
	split_sreg_range(0X18120,"T",0X1,3);
	split_sreg_range(0X1812E,"T",0X1,3);
	split_sreg_range(0X18162,"T",0X1,3);
	split_sreg_range(0X18168,"T",0X1,3);
	split_sreg_range(0X18176,"T",0X1,3);
	split_sreg_range(0X18182,"T",0X1,3);
	split_sreg_range(0X18188,"T",0X1,3);
	split_sreg_range(0X1818C,"T",0X1,3);
	split_sreg_range(0X1818E,"T",0X1,3);
	split_sreg_range(0X18194,"T",0X1,3);
	split_sreg_range(0X1819E,"T",0X1,3);
	split_sreg_range(0X181A6,"T",0X1,3);
	split_sreg_range(0X181AC,"T",0X1,3);
	split_sreg_range(0X181C6,"T",0X1,3);
	split_sreg_range(0X181E0,"T",0X1,3);
	split_sreg_range(0X18208,"T",0X1,3);
	split_sreg_range(0X18210,"T",0X1,3);
	split_sreg_range(0X18218,"T",0X1,3);
	split_sreg_range(0X1821E,"T",0X1,3);
	split_sreg_range(0X18260,"T",0X1,3);
	split_sreg_range(0X18298,"T",0X1,3);
	split_sreg_range(0X182A8,"T",0X1,3);
	split_sreg_range(0X182BA,"T",0X1,3);
	split_sreg_range(0X182C2,"T",0X1,3);
	split_sreg_range(0X182EA,"T",0X1,3);
	split_sreg_range(0X182FA,"T",0X1,3);
	split_sreg_range(0X182FE,"T",0X1,3);
	split_sreg_range(0X1830E,"T",0X1,3);
	split_sreg_range(0X18312,"T",0X1,3);
	split_sreg_range(0X18330,"T",0X1,3);
	split_sreg_range(0X18338,"T",0X1,3);
	split_sreg_range(0X1834E,"T",0X1,3);
	split_sreg_range(0X18366,"T",0X1,3);
	split_sreg_range(0X18372,"T",0X1,3);
	split_sreg_range(0X18386,"T",0X1,3);
	split_sreg_range(0X18398,"T",0X1,3);
	split_sreg_range(0X1839E,"T",0X1,3);
	split_sreg_range(0X183B2,"T",0X1,3);
	split_sreg_range(0X183B8,"T",0X1,3);
	split_sreg_range(0X183C2,"T",0X1,3);
	split_sreg_range(0X183D0,"T",0X1,3);
	split_sreg_range(0X183E8,"T",0X1,3);
	split_sreg_range(0X183F2,"T",0X1,3);
	split_sreg_range(0X183FE,"T",0X1,3);
	split_sreg_range(0X1840A,"T",0X1,3);
	split_sreg_range(0X1840E,"T",0X1,3);
	split_sreg_range(0X18452,"T",0X1,3);
	split_sreg_range(0X18454,"T",0X1,3);
	split_sreg_range(0X1848C,"T",0X1,3);
	split_sreg_range(0X184A0,"T",0X1,3);
	split_sreg_range(0X184BC,"T",0X1,3);
	split_sreg_range(0X184C0,"T",0X1,3);
	split_sreg_range(0X184C4,"T",0X1,3);
	split_sreg_range(0X184C8,"T",0X1,3);
	split_sreg_range(0X184E8,"T",0X1,3);
	split_sreg_range(0X184EC,"T",0X1,3);
	split_sreg_range(0X18502,"T",0X1,3);
	split_sreg_range(0X18506,"T",0X1,3);
	split_sreg_range(0X18514,"T",0X1,3);
	split_sreg_range(0X18536,"T",0X1,3);
	split_sreg_range(0X1853A,"T",0X1,3);
	split_sreg_range(0X18546,"T",0X1,3);
	split_sreg_range(0X1855A,"T",0X1,3);
	split_sreg_range(0X18560,"T",0X1,3);
	split_sreg_range(0X18568,"T",0X1,3);
	split_sreg_range(0X1856A,"T",0X1,3);
	split_sreg_range(0X18578,"T",0X1,3);
	split_sreg_range(0X18584,"T",0X1,3);
	split_sreg_range(0X1858E,"T",0X1,3);
	split_sreg_range(0X185C0,"T",0X1,3);
	split_sreg_range(0X185E6,"T",0X1,3);
	split_sreg_range(0X185EA,"T",0X1,3);
	split_sreg_range(0X185F0,"T",0X1,3);
	split_sreg_range(0X1860A,"T",0X1,3);
	split_sreg_range(0X18614,"T",0X1,3);
	split_sreg_range(0X18620,"T",0X1,3);
	split_sreg_range(0X18622,"T",0X1,3);
	split_sreg_range(0X18628,"T",0X1,3);
	split_sreg_range(0X1862A,"T",0X1,3);
	split_sreg_range(0X1862C,"T",0X1,3);
	split_sreg_range(0X18656,"T",0X1,3);
	split_sreg_range(0X1866E,"T",0X1,3);
	split_sreg_range(0X18674,"T",0X1,3);
	split_sreg_range(0X1867A,"T",0X1,3);
	split_sreg_range(0X18682,"T",0X1,3);
	split_sreg_range(0X186A8,"T",0X1,3);
	split_sreg_range(0X186AC,"T",0X1,3);
	split_sreg_range(0X186DA,"T",0X1,3);
	split_sreg_range(0X186E8,"T",0X1,3);
	split_sreg_range(0X186F8,"T",0X1,3);
	split_sreg_range(0X186FA,"T",0X1,3);
	split_sreg_range(0X18714,"T",0X1,3);
	split_sreg_range(0X18716,"T",0X1,3);
	split_sreg_range(0X18718,"T",0X1,3);
	split_sreg_range(0X1871C,"T",0X1,3);
	split_sreg_range(0X18720,"T",0X1,3);
	split_sreg_range(0X18724,"T",0X1,3);
	split_sreg_range(0X1872A,"T",0X1,3);
	split_sreg_range(0X18734,"T",0X1,3);
	split_sreg_range(0X18738,"T",0X1,3);
	split_sreg_range(0X18774,"T",0X1,3);
	split_sreg_range(0X1877C,"T",0X1,3);
	split_sreg_range(0X18784,"T",0X1,3);
	split_sreg_range(0X1879E,"T",0X1,3);
	split_sreg_range(0X187AC,"T",0X1,3);
	split_sreg_range(0X187C0,"T",0X1,3);
	split_sreg_range(0X187CA,"T",0X1,3);
	split_sreg_range(0X187D2,"T",0X1,3);
	split_sreg_range(0X187DA,"T",0X1,3);
	split_sreg_range(0X187DC,"T",0X1,3);
	split_sreg_range(0X187E2,"T",0X1,3);
	split_sreg_range(0X187EC,"T",0X1,3);
	split_sreg_range(0X187F2,"T",0X1,3);
	split_sreg_range(0X18800,"T",0X1,3);
	split_sreg_range(0X18810,"T",0X1,3);
	split_sreg_range(0X1881C,"T",0X1,3);
	split_sreg_range(0X18822,"T",0X1,3);
	split_sreg_range(0X18832,"T",0X1,3);
	split_sreg_range(0X18838,"T",0X1,3);
	split_sreg_range(0X1883A,"T",0X1,3);
	split_sreg_range(0X1883E,"T",0X1,3);
	split_sreg_range(0X18842,"T",0X1,3);
	split_sreg_range(0X188A2,"T",0X1,3);
	split_sreg_range(0X188B0,"T",0X1,3);
	split_sreg_range(0X188C4,"T",0X1,3);
	split_sreg_range(0X188CC,"T",0X1,3);
	split_sreg_range(0X188D0,"T",0X1,3);
	split_sreg_range(0X1890E,"T",0X1,3);
	split_sreg_range(0X18920,"T",0X1,3);
	split_sreg_range(0X18932,"T",0X1,3);
	split_sreg_range(0X1894E,"T",0X1,3);
	split_sreg_range(0X18952,"T",0X1,3);
	split_sreg_range(0X18958,"T",0X1,3);
	split_sreg_range(0X1895E,"T",0X1,3);
	split_sreg_range(0X18964,"T",0X1,3);
	split_sreg_range(0X1896E,"T",0X1,3);
	split_sreg_range(0X18970,"T",0X1,3);
	split_sreg_range(0X18972,"T",0X1,3);
	split_sreg_range(0X18978,"T",0X1,3);
	split_sreg_range(0X1897E,"T",0X1,3);
	split_sreg_range(0X18984,"T",0X1,3);
	split_sreg_range(0X1898E,"T",0X1,3);
	split_sreg_range(0X18992,"T",0X1,3);
	split_sreg_range(0X18994,"T",0X1,3);
	split_sreg_range(0X1899A,"T",0X1,3);
	split_sreg_range(0X189A0,"T",0X1,3);
	split_sreg_range(0X189A6,"T",0X1,3);
	split_sreg_range(0X189B0,"T",0X1,3);
	split_sreg_range(0X189B4,"T",0X1,3);
	split_sreg_range(0X189B8,"T",0X1,3);
	split_sreg_range(0X189BE,"T",0X1,3);
	split_sreg_range(0X189C4,"T",0X1,3);
	split_sreg_range(0X189CA,"T",0X1,3);
	split_sreg_range(0X189E6,"T",0X1,3);
	split_sreg_range(0X189F2,"T",0X1,3);
	split_sreg_range(0X189FC,"T",0X1,3);
	split_sreg_range(0X18A02,"T",0X1,3);
	split_sreg_range(0X18A34,"T",0X1,3);
	split_sreg_range(0X18A36,"T",0X1,3);
	split_sreg_range(0X18A3A,"T",0X1,3);
	split_sreg_range(0X18A48,"T",0X1,3);
	split_sreg_range(0X18A64,"T",0X1,3);
	split_sreg_range(0X18A6E,"T",0X1,3);
	split_sreg_range(0X18A82,"T",0X1,3);
	split_sreg_range(0X18AB6,"T",0X1,3);
	split_sreg_range(0X18AB8,"T",0X1,3);
	split_sreg_range(0X18ABC,"T",0X1,3);
	split_sreg_range(0X18ACC,"T",0X1,3);
	split_sreg_range(0X18AE0,"T",0X1,3);
	split_sreg_range(0X18B12,"T",0X1,3);
	split_sreg_range(0X18B14,"T",0X1,3);
	split_sreg_range(0X18B18,"T",0X1,3);
	split_sreg_range(0X18B28,"T",0X1,3);
	split_sreg_range(0X18B3C,"T",0X1,3);
	split_sreg_range(0X18B72,"T",0X1,3);
	split_sreg_range(0X18B78,"T",0X1,3);
	split_sreg_range(0X18B86,"T",0X1,3);
	split_sreg_range(0X18B8C,"T",0X1,3);
	split_sreg_range(0X18B9E,"T",0X1,3);
	split_sreg_range(0X18BA4,"T",0X1,3);
	split_sreg_range(0X18BAA,"T",0X1,3);
	split_sreg_range(0X18BBC,"T",0X1,3);
	split_sreg_range(0X18BC2,"T",0X1,3);
	split_sreg_range(0X18BF2,"T",0X1,3);
	split_sreg_range(0X18BF4,"T",0X1,3);
	split_sreg_range(0X18BF8,"T",0X1,3);
	split_sreg_range(0X18C2A,"T",0X1,3);
	split_sreg_range(0X18C2C,"T",0X1,3);
	split_sreg_range(0X18C30,"T",0X1,3);
	split_sreg_range(0X18CBA,"T",0X1,3);
	split_sreg_range(0X18CBE,"T",0X1,3);
	split_sreg_range(0X18CEE,"T",0X1,3);
	split_sreg_range(0X18CF8,"T",0X1,3);
	split_sreg_range(0X18CFC,"T",0X1,3);
	split_sreg_range(0X18D00,"T",0X1,3);
	split_sreg_range(0X18DD8,"T",0X1,3);
	split_sreg_range(0X18DE0,"T",0X1,3);
	split_sreg_range(0X18DEE,"T",0X1,3);
	split_sreg_range(0X18E18,"T",0X1,3);
	split_sreg_range(0X18E1E,"T",0X1,3);
	split_sreg_range(0X18E22,"T",0X1,3);
	split_sreg_range(0X18E40,"T",0X1,3);
	split_sreg_range(0X18E48,"T",0X1,3);
	split_sreg_range(0X18E58,"T",0X1,3);
	split_sreg_range(0X18E5C,"T",0X1,3);
	split_sreg_range(0X18E70,"T",0X1,3);
	split_sreg_range(0X18E7A,"T",0X1,3);
	split_sreg_range(0X18E8E,"T",0X1,3);
	split_sreg_range(0X18E92,"T",0X1,3);
	split_sreg_range(0X18ECA,"T",0X1,3);
	split_sreg_range(0X18ECE,"T",0X1,3);
	split_sreg_range(0X18ED2,"T",0X1,3);
	split_sreg_range(0X18EFA,"T",0X1,3);
	split_sreg_range(0X18F10,"T",0X1,3);
	split_sreg_range(0X18F1C,"T",0X1,3);
	split_sreg_range(0X18F38,"T",0X1,3);
	split_sreg_range(0X18F3C,"T",0X1,3);
	split_sreg_range(0X18F40,"T",0X1,3);
	split_sreg_range(0X18F42,"T",0X1,3);
	split_sreg_range(0X18F48,"T",0X1,3);
	split_sreg_range(0X18F64,"T",0X1,3);
	split_sreg_range(0X18F68,"T",0X1,3);
	split_sreg_range(0X18F6C,"T",0X1,3);
	split_sreg_range(0X18F6E,"T",0X1,3);
	split_sreg_range(0X18F74,"T",0X1,3);
	split_sreg_range(0X18F92,"T",0X1,3);
	split_sreg_range(0X18F94,"T",0X1,3);
	split_sreg_range(0X18F98,"T",0X1,3);
	split_sreg_range(0X18FA8,"T",0X1,3);
	split_sreg_range(0X18FC8,"T",0X1,3);
	split_sreg_range(0X18FD0,"T",0X1,3);
	split_sreg_range(0X190BC,"T",0X1,3);
	split_sreg_range(0X190CE,"T",0X1,3);
	split_sreg_range(0X190D4,"T",0X1,3);
	split_sreg_range(0X190E4,"T",0X1,3);
	split_sreg_range(0X190F4,"T",0X1,3);
	split_sreg_range(0X19112,"T",0X1,3);
	split_sreg_range(0X19116,"T",0X1,3);
	split_sreg_range(0X19122,"T",0X1,3);
	split_sreg_range(0X19138,"T",0X1,3);
	split_sreg_range(0X1914E,"T",0X1,3);
	split_sreg_range(0X19174,"T",0X1,3);
	split_sreg_range(0X1917A,"T",0X1,3);
	split_sreg_range(0X1917C,"T",0X1,3);
	split_sreg_range(0X19184,"T",0X1,3);
	split_sreg_range(0X1918E,"T",0X1,3);
	split_sreg_range(0X19192,"T",0X1,3);
	split_sreg_range(0X191A6,"T",0X1,3);
	split_sreg_range(0X191A8,"T",0X1,3);
	split_sreg_range(0X191BC,"T",0X1,3);
	split_sreg_range(0X191BE,"T",0X1,3);
	split_sreg_range(0X191D2,"T",0X1,3);
	split_sreg_range(0X191D4,"T",0X1,3);
	split_sreg_range(0X191E8,"T",0X1,3);
	split_sreg_range(0X191EA,"T",0X1,3);
	split_sreg_range(0X191F8,"T",0X1,3);
	split_sreg_range(0X191FA,"T",0X1,3);
	split_sreg_range(0X19204,"T",0X1,3);
	split_sreg_range(0X19212,"T",0X1,3);
	split_sreg_range(0X19216,"T",0X1,3);
	split_sreg_range(0X1921E,"T",0X1,3);
	split_sreg_range(0X19240,"T",0X1,3);
	split_sreg_range(0X19242,"T",0X1,3);
	split_sreg_range(0X19244,"T",0X1,3);
	split_sreg_range(0X1924E,"T",0X1,3);
	split_sreg_range(0X1926A,"T",0X1,3);
	split_sreg_range(0X19270,"T",0X1,3);
	split_sreg_range(0X19282,"T",0X1,3);
	split_sreg_range(0X19288,"T",0X1,3);
	split_sreg_range(0X192AA,"T",0X1,3);
	split_sreg_range(0X192E8,"T",0X1,3);
	split_sreg_range(0X19300,"T",0X1,3);
	split_sreg_range(0X19378,"T",0X1,3);
	split_sreg_range(0X19390,"T",0X1,3);
	split_sreg_range(0X19398,"T",0X1,3);
	split_sreg_range(0X1939C,"T",0X1,3);
	split_sreg_range(0X193B2,"T",0X1,3);
	split_sreg_range(0X193B4,"T",0X1,3);
	split_sreg_range(0X193F2,"T",0X1,3);
	split_sreg_range(0X1941C,"T",0X1,3);
	split_sreg_range(0X19432,"T",0X1,3);
	split_sreg_range(0X1944E,"T",0X1,3);
	split_sreg_range(0X19488,"T",0X1,3);
	split_sreg_range(0X19490,"T",0X1,3);
	split_sreg_range(0X194AA,"T",0X1,3);
	split_sreg_range(0X194D0,"T",0X1,3);
	split_sreg_range(0X194D4,"T",0X1,3);
	split_sreg_range(0X19504,"T",0X1,3);
	split_sreg_range(0X1952A,"T",0X1,3);
	split_sreg_range(0X19556,"T",0X1,3);
	split_sreg_range(0X1957C,"T",0X1,3);
	split_sreg_range(0X19586,"T",0X1,3);
	split_sreg_range(0X1958C,"T",0X1,3);
	split_sreg_range(0X19594,"T",0X1,3);
	split_sreg_range(0X195AE,"T",0X1,3);
	split_sreg_range(0X195E0,"T",0X1,3);
	split_sreg_range(0X1960C,"T",0X1,3);
	split_sreg_range(0X1960E,"T",0X1,3);
	split_sreg_range(0X19610,"T",0X1,3);
	split_sreg_range(0X19634,"T",0X1,3);
	split_sreg_range(0X1963E,"T",0X1,3);
	split_sreg_range(0X19644,"T",0X1,3);
	split_sreg_range(0X1964C,"T",0X1,3);
	split_sreg_range(0X1964E,"T",0X1,3);
	split_sreg_range(0X19668,"T",0X1,3);
	split_sreg_range(0X19696,"T",0X1,3);
	split_sreg_range(0X196C2,"T",0X1,3);
	split_sreg_range(0X196C4,"T",0X1,3);
	split_sreg_range(0X196E4,"T",0X1,3);
	split_sreg_range(0X19716,"T",0X1,3);
	split_sreg_range(0X1971C,"T",0X1,3);
	split_sreg_range(0X19724,"T",0X1,3);
	split_sreg_range(0X1974A,"T",0X1,3);
	split_sreg_range(0X19760,"T",0X1,3);
	split_sreg_range(0X19764,"T",0X1,3);
	split_sreg_range(0X19766,"T",0X1,3);
	split_sreg_range(0X1976A,"T",0X1,3);
	split_sreg_range(0X19772,"T",0X1,3);
	split_sreg_range(0X1977A,"T",0X1,3);
	split_sreg_range(0X1977C,"T",0X1,3);
	split_sreg_range(0X19780,"T",0X1,3);
	split_sreg_range(0X197AC,"T",0X1,3);
	split_sreg_range(0X197B0,"T",0X1,3);
	split_sreg_range(0X197DA,"T",0X1,3);
	split_sreg_range(0X197E2,"T",0X1,3);
	split_sreg_range(0X1982A,"T",0X1,3);
	split_sreg_range(0X19830,"T",0X1,3);
	split_sreg_range(0X19872,"T",0X1,3);
	split_sreg_range(0X19886,"T",0X1,3);
	split_sreg_range(0X198A2,"T",0X1,3);
	split_sreg_range(0X198E2,"T",0X1,3);
	split_sreg_range(0X19920,"T",0X1,3);
	split_sreg_range(0X1994C,"T",0X1,3);
	split_sreg_range(0X19958,"T",0X1,3);
	split_sreg_range(0X19968,"T",0X1,3);
	split_sreg_range(0X1997E,"T",0X1,3);
	split_sreg_range(0X1998C,"T",0X1,3);
	split_sreg_range(0X19992,"T",0X1,3);
	split_sreg_range(0X199B0,"T",0X1,3);
	split_sreg_range(0X199BA,"T",0X1,3);
	split_sreg_range(0X199CC,"T",0X1,3);
	split_sreg_range(0X199D0,"T",0X1,3);
	split_sreg_range(0X199DC,"T",0X1,3);
	split_sreg_range(0X199EE,"T",0X1,3);
	split_sreg_range(0X199FE,"T",0X1,3);
	split_sreg_range(0X19A02,"T",0X1,3);
	split_sreg_range(0X19A06,"T",0X1,3);
	split_sreg_range(0X19A0A,"T",0X1,3);
	split_sreg_range(0X19A18,"T",0X1,3);
	split_sreg_range(0X19A26,"T",0X1,3);
	split_sreg_range(0X19A38,"T",0X1,3);
	split_sreg_range(0X19A42,"T",0X1,3);
	split_sreg_range(0X19A44,"T",0X1,3);
	split_sreg_range(0X19A4C,"T",0X1,3);
	split_sreg_range(0X19A62,"T",0X1,3);
	split_sreg_range(0X19A78,"T",0X1,3);
	split_sreg_range(0X19A96,"T",0X1,3);
	split_sreg_range(0X19AA6,"T",0X1,3);
	split_sreg_range(0X19AAA,"T",0X1,3);
	split_sreg_range(0X19ABA,"T",0X1,3);
	split_sreg_range(0X19ACC,"T",0X1,3);
	split_sreg_range(0X19AD0,"T",0X1,3);
	split_sreg_range(0X19AE4,"T",0X1,3);
	split_sreg_range(0X19AEC,"T",0X1,3);
	split_sreg_range(0X19AF4,"T",0X1,3);
	split_sreg_range(0X19AF8,"T",0X1,3);
	split_sreg_range(0X19B0E,"T",0X1,3);
	split_sreg_range(0X19B40,"T",0X1,3);
	split_sreg_range(0X19B42,"T",0X1,3);
	split_sreg_range(0X19B46,"T",0X1,3);
	split_sreg_range(0X19B76,"T",0X1,3);
	split_sreg_range(0X19B86,"T",0X1,3);
	split_sreg_range(0X19B8C,"T",0X1,3);
	split_sreg_range(0X19BAA,"T",0X1,3);
	split_sreg_range(0X19BB4,"T",0X1,3);
	split_sreg_range(0X19BCE,"T",0X1,3);
	split_sreg_range(0X19BDA,"T",0X1,3);
	split_sreg_range(0X19BEE,"T",0X1,3);
	split_sreg_range(0X19C02,"T",0X1,3);
	split_sreg_range(0X19C06,"T",0X1,3);
	split_sreg_range(0X19C0A,"T",0X1,3);
	split_sreg_range(0X19C0E,"T",0X1,3);
	split_sreg_range(0X19C1C,"T",0X1,3);
	split_sreg_range(0X19C26,"T",0X1,3);
	split_sreg_range(0X19C3A,"T",0X1,3);
	split_sreg_range(0X19C42,"T",0X1,3);
	split_sreg_range(0X19C4A,"T",0X1,3);
	split_sreg_range(0X19C60,"T",0X1,3);
	split_sreg_range(0X19C72,"T",0X1,3);
	split_sreg_range(0X19C74,"T",0X1,3);
	split_sreg_range(0X19CA6,"T",0X1,3);
	split_sreg_range(0X19CC2,"T",0X1,3);
	split_sreg_range(0X19CF4,"T",0X1,3);
	split_sreg_range(0X19D06,"T",0X1,3);
	split_sreg_range(0X19D4E,"T",0X1,3);
	split_sreg_range(0X19D50,"T",0X1,3);
	split_sreg_range(0X19D54,"T",0X1,3);
	split_sreg_range(0X19D98,"T",0X1,3);
	split_sreg_range(0X19DA0,"T",0X1,3);
	split_sreg_range(0X19DA6,"T",0X1,3);
	split_sreg_range(0X19DA8,"T",0X1,3);
	split_sreg_range(0X19DD8,"T",0X1,3);
	split_sreg_range(0X19DDE,"T",0X1,3);
	split_sreg_range(0X19DE0,"T",0X1,3);
	split_sreg_range(0X19DE8,"T",0X1,3);
	split_sreg_range(0X19DEC,"T",0X1,3);
	split_sreg_range(0X19DF8,"T",0X1,3);
	split_sreg_range(0X19E00,"T",0X1,3);
	split_sreg_range(0X19E0E,"T",0X1,3);
	split_sreg_range(0X19E14,"T",0X1,3);
	split_sreg_range(0X19E30,"T",0X1,3);
	split_sreg_range(0X19E5C,"T",0X1,3);
	split_sreg_range(0X19E68,"T",0X1,3);
	split_sreg_range(0X19E6E,"T",0X1,3);
	split_sreg_range(0X19E70,"T",0X1,3);
	split_sreg_range(0X19E9A,"T",0X1,3);
	split_sreg_range(0X19EAA,"T",0X1,3);
	split_sreg_range(0X19EB2,"T",0X1,3);
	split_sreg_range(0X19EB6,"T",0X1,3);
	split_sreg_range(0X19ED0,"T",0X1,3);
	split_sreg_range(0X19EDE,"T",0X1,3);
	split_sreg_range(0X19EE0,"T",0X1,3);
	split_sreg_range(0X19EE4,"T",0X1,3);
	split_sreg_range(0X19EFE,"T",0X1,3);
	split_sreg_range(0X19F02,"T",0X1,3);
	split_sreg_range(0X19F12,"T",0X1,3);
	split_sreg_range(0X19F1A,"T",0X1,3);
	split_sreg_range(0X19F22,"T",0X1,3);
	split_sreg_range(0X19F26,"T",0X1,3);
	split_sreg_range(0X19F86,"T",0X1,3);
	split_sreg_range(0X19F8A,"T",0X1,3);
	split_sreg_range(0X19FA8,"T",0X1,3);
	split_sreg_range(0X19FC4,"T",0X1,3);
	split_sreg_range(0X19FCC,"T",0X1,3);
	split_sreg_range(0X19FF2,"T",0X1,3);
	split_sreg_range(0X19FF8,"T",0X1,3);
	split_sreg_range(0X1A00A,"T",0X1,3);
	split_sreg_range(0X1A01A,"T",0X1,3);
	split_sreg_range(0X1A024,"T",0X1,3);
	split_sreg_range(0X1A034,"T",0X1,3);
	split_sreg_range(0X1A05E,"T",0X1,3);
	split_sreg_range(0X1A072,"T",0X1,3);
	split_sreg_range(0X1A074,"T",0X1,3);
	split_sreg_range(0X1A076,"T",0X1,3);
	split_sreg_range(0X1A078,"T",0X1,3);
	split_sreg_range(0X1A07A,"T",0X1,3);
	split_sreg_range(0X1A084,"T",0X1,3);
	split_sreg_range(0X1A09C,"T",0X1,3);
	split_sreg_range(0X1A0A2,"T",0X1,3);
	split_sreg_range(0X1A0CC,"T",0X1,3);
	split_sreg_range(0X1A0E8,"T",0X1,3);
	split_sreg_range(0X1A0F0,"T",0X1,3);
	split_sreg_range(0X1A116,"T",0X1,3);
	split_sreg_range(0X1A11C,"T",0X1,3);
	split_sreg_range(0X1A132,"T",0X1,3);
	split_sreg_range(0X1A142,"T",0X1,3);
	split_sreg_range(0X1A14C,"T",0X1,3);
	split_sreg_range(0X1A15C,"T",0X1,3);
	split_sreg_range(0X1A180,"T",0X1,3);
	split_sreg_range(0X1A198,"T",0X1,3);
	split_sreg_range(0X1A19E,"T",0X1,3);
	split_sreg_range(0X1A1A4,"T",0X1,3);
	split_sreg_range(0X1A1BA,"T",0X1,3);
	split_sreg_range(0X1A1C8,"T",0X1,3);
	split_sreg_range(0X1A1E4,"T",0X1,3);
	split_sreg_range(0X1A200,"T",0X1,3);
	split_sreg_range(0X1A20E,"T",0X1,3);
	split_sreg_range(0X1A222,"T",0X1,3);
	split_sreg_range(0X1A22C,"T",0X1,3);
	split_sreg_range(0X1A22E,"T",0X1,3);
	split_sreg_range(0X1A236,"T",0X1,3);
	split_sreg_range(0X1A23C,"T",0X1,3);
	split_sreg_range(0X1A24E,"T",0X1,3);
	split_sreg_range(0X1A25E,"T",0X1,3);
	split_sreg_range(0X1A26E,"T",0X1,3);
	split_sreg_range(0X1A278,"T",0X1,3);
	split_sreg_range(0X1A29C,"T",0X1,3);
	split_sreg_range(0X1A29E,"T",0X1,3);
	split_sreg_range(0X1A2C8,"T",0X1,3);
	split_sreg_range(0X1A2CC,"T",0X1,3);
	split_sreg_range(0X1A2DE,"T",0X1,3);
	split_sreg_range(0X1A2E6,"T",0X1,3);
	split_sreg_range(0X1A2EA,"T",0X1,3);
	split_sreg_range(0X1A2EE,"T",0X1,3);
	split_sreg_range(0X1A2F2,"T",0X1,3);
	split_sreg_range(0X1A2F4,"T",0X1,3);
	split_sreg_range(0X1A2FC,"T",0X1,3);
	split_sreg_range(0X1A2FE,"T",0X1,3);
	split_sreg_range(0X1A34C,"T",0X1,3);
	split_sreg_range(0X1A352,"T",0X1,3);
	split_sreg_range(0X1A396,"T",0X1,3);
	split_sreg_range(0X1A3A4,"T",0X1,3);
	split_sreg_range(0X1A3B2,"T",0X1,3);
	split_sreg_range(0X1A3C0,"T",0X1,3);
	split_sreg_range(0X1A3DC,"T",0X1,3);
	split_sreg_range(0X1A3E6,"T",0X1,3);
	split_sreg_range(0X1A3F4,"T",0X1,3);
	split_sreg_range(0X1A3F6,"T",0X1,3);
	split_sreg_range(0X1A42C,"T",0X1,3);
	split_sreg_range(0X1A436,"T",0X1,3);
	split_sreg_range(0X1A43A,"T",0X1,3);
	split_sreg_range(0X1A448,"T",0X1,3);
	split_sreg_range(0X1A456,"T",0X1,3);
	split_sreg_range(0X1A476,"T",0X1,3);
	split_sreg_range(0X1A480,"T",0X1,3);
	split_sreg_range(0X1A486,"T",0X1,3);
	split_sreg_range(0X1A4C2,"T",0X1,3);
	split_sreg_range(0X1A504,"T",0X1,3);
	split_sreg_range(0X1A53E,"T",0X1,3);
	split_sreg_range(0X1A540,"T",0X1,3);
	split_sreg_range(0X1A546,"T",0X1,3);
	split_sreg_range(0X1A556,"T",0X1,3);
	split_sreg_range(0X1A564,"T",0X1,3);
	split_sreg_range(0X1A574,"T",0X1,3);
	split_sreg_range(0X1A58C,"T",0X1,3);
	split_sreg_range(0X1A59A,"T",0X1,3);
	split_sreg_range(0X1A59C,"T",0X1,3);
	split_sreg_range(0X1A5C4,"T",0X1,3);
	split_sreg_range(0X1A5E4,"T",0X1,3);
	split_sreg_range(0X1A600,"T",0X1,3);
	split_sreg_range(0X1A63C,"T",0X1,3);
	split_sreg_range(0X1A6CE,"T",0X1,3);
	split_sreg_range(0X1A6D2,"T",0X1,3);
	split_sreg_range(0X1A6E4,"T",0X1,3);
	split_sreg_range(0X1A6E8,"T",0X1,3);
	split_sreg_range(0X1A6FC,"T",0X1,3);
	split_sreg_range(0X1A714,"T",0X1,3);
	split_sreg_range(0X1A718,"T",0X1,3);
	split_sreg_range(0X1A72C,"T",0X1,3);
	split_sreg_range(0X1A734,"T",0X1,3);
	split_sreg_range(0X1A748,"T",0X1,3);
	split_sreg_range(0X1A74C,"T",0X1,3);
	split_sreg_range(0X1A760,"T",0X1,3);
	split_sreg_range(0X1A768,"T",0X1,3);
	split_sreg_range(0X1A7A2,"T",0X1,3);
	split_sreg_range(0X1A7AE,"T",0X1,3);
	split_sreg_range(0X1A7BA,"T",0X1,3);
	split_sreg_range(0X1A7C2,"T",0X1,3);
	split_sreg_range(0X1A7CE,"T",0X1,3);
	split_sreg_range(0X1A7D0,"T",0X1,3);
	split_sreg_range(0X1A7EE,"T",0X1,3);
	split_sreg_range(0X1A808,"T",0X1,3);
	split_sreg_range(0X1A830,"T",0X1,3);
	split_sreg_range(0X1A852,"T",0X1,3);
	split_sreg_range(0X1A868,"T",0X1,3);
	split_sreg_range(0X1A86A,"T",0X1,3);
	split_sreg_range(0X1A876,"T",0X1,3);
	split_sreg_range(0X1A87C,"T",0X1,3);
	split_sreg_range(0X1A888,"T",0X1,3);
	split_sreg_range(0X1A88A,"T",0X1,3);
	split_sreg_range(0X1A8B2,"T",0X1,3);
	split_sreg_range(0X1A8B4,"T",0X1,3);
	split_sreg_range(0X1A8E0,"T",0X1,3);
	split_sreg_range(0X1A8E2,"T",0X1,3);
	split_sreg_range(0X1A8E4,"T",0X1,3);
	split_sreg_range(0X1A8E8,"T",0X1,3);
	split_sreg_range(0X1A8F8,"T",0X1,3);
	split_sreg_range(0X1A8FA,"T",0X1,3);
	split_sreg_range(0X1A8FC,"T",0X1,3);
	split_sreg_range(0X1A8FE,"T",0X1,3);
	split_sreg_range(0X1A900,"T",0X1,3);
	split_sreg_range(0X1A902,"T",0X1,3);
	split_sreg_range(0X1A904,"T",0X1,3);
	split_sreg_range(0X1A906,"T",0X1,3);
	split_sreg_range(0X1A930,"T",0X1,3);
	split_sreg_range(0X1A938,"T",0,3);
	split_sreg_range(0X1AA82,"T",0X1,3);
	split_sreg_range(0X1AA94,"T",0X1,3);
	split_sreg_range(0X1AA9C,"T",0X1,3);
	split_sreg_range(0X1AAD0,"T",0X1,3);
	split_sreg_range(0X1AAE4,"T",0X1,3);
	split_sreg_range(0X1AB08,"T",0X1,3);
	split_sreg_range(0X1AB1C,"T",0X1,3);
	split_sreg_range(0X1AB58,"T",0X1,3);
	split_sreg_range(0X1AB5E,"T",0X1,3);
	split_sreg_range(0X1AB6A,"T",0X1,3);
	split_sreg_range(0X1ABA8,"T",0X1,3);
	split_sreg_range(0X1ABAE,"T",0X1,3);
	split_sreg_range(0X1ABC6,"T",0X1,3);
	split_sreg_range(0X1ABF6,"T",0X1,3);
	split_sreg_range(0X1ABFC,"T",0X1,3);
	split_sreg_range(0X1AC4C,"T",0X1,3);
	split_sreg_range(0X1AC4E,"T",0X1,3);
	split_sreg_range(0X1AC62,"T",0X1,3);
	split_sreg_range(0X1AC64,"T",0X1,3);
	split_sreg_range(0X1ACC0,"T",0X1,3);
	split_sreg_range(0X1ACCA,"T",0X1,3);
	split_sreg_range(0X1ACCC,"T",0X1,3);
	split_sreg_range(0X1AD1A,"T",0X1,3);
	split_sreg_range(0X1AD24,"T",0X1,3);
	split_sreg_range(0X1AD26,"T",0X1,3);
	split_sreg_range(0X1AD38,"T",0X1,3);
	split_sreg_range(0X1AD3A,"T",0X1,3);
	split_sreg_range(0X1AD4C,"T",0X1,3);
	split_sreg_range(0X1AD5A,"T",0X1,3);
	split_sreg_range(0X1AD7A,"T",0X1,3);
	split_sreg_range(0X1AD7E,"T",0X1,3);
	split_sreg_range(0X1AD9C,"T",0X1,3);
	split_sreg_range(0X1ADA6,"T",0X1,3);
	split_sreg_range(0X1ADA8,"T",0X1,3);
	split_sreg_range(0X1ADBA,"T",0X1,3);
	split_sreg_range(0X1ADE6,"T",0X1,3);
	split_sreg_range(0X1ADEC,"T",0X1,3);
	split_sreg_range(0X1AE00,"T",0X1,3);
	split_sreg_range(0X1AE04,"T",0X1,3);
	split_sreg_range(0X1AE12,"T",0X1,3);
	split_sreg_range(0X1AE16,"T",0X1,3);
	split_sreg_range(0X1AE4C,"T",0X1,3);
	split_sreg_range(0X1AE5E,"T",0X1,3);
	split_sreg_range(0X1AE6E,"T",0X1,3);
	split_sreg_range(0X1AE72,"T",0X1,3);
	split_sreg_range(0X1AE74,"T",0X1,3);
	split_sreg_range(0X1AE7A,"T",0X1,3);
	split_sreg_range(0X1AE90,"T",0X1,3);
	split_sreg_range(0X1AE9C,"T",0X1,3);
	split_sreg_range(0X1AEA8,"T",0X1,3);
	split_sreg_range(0X1AEAE,"T",0X1,3);
	split_sreg_range(0X1AEBE,"T",0X1,3);
	split_sreg_range(0X1AEC6,"T",0X1,3);
	split_sreg_range(0X1AECA,"T",0X1,3);
	split_sreg_range(0X1AED4,"T",0X1,3);
	split_sreg_range(0X1AEE0,"T",0X1,3);
	split_sreg_range(0X1AEFE,"T",0X1,3);
	split_sreg_range(0X1AF04,"T",0X1,3);
	split_sreg_range(0X1AF2A,"T",0X1,3);
	split_sreg_range(0X1AF30,"T",0X1,3);
	split_sreg_range(0X1AF3E,"T",0X1,3);
	split_sreg_range(0X1AF40,"T",0X1,3);
	split_sreg_range(0X1AFC0,"T",0X1,3);
	split_sreg_range(0X1AFD0,"T",0X1,3);
	split_sreg_range(0X1AFD4,"T",0X1,3);
	split_sreg_range(0X1AFEA,"T",0X1,3);
	split_sreg_range(0X1AFEE,"T",0X1,3);
	split_sreg_range(0X1AFF6,"T",0X1,3);
	split_sreg_range(0X1AFFE,"T",0X1,3);
	split_sreg_range(0X1B036,"T",0X1,3);
	split_sreg_range(0X1B03C,"T",0X1,3);
	split_sreg_range(0X1B046,"T",0X1,3);
	split_sreg_range(0X1B05C,"T",0X1,3);
	split_sreg_range(0X1B068,"T",0X1,3);
	split_sreg_range(0X1B06E,"T",0X1,3);
	split_sreg_range(0X1B076,"T",0X1,3);
	split_sreg_range(0X1B07C,"T",0X1,3);
	split_sreg_range(0X1B086,"T",0X1,3);
	split_sreg_range(0X1B096,"T",0X1,3);
	split_sreg_range(0X1B0A2,"T",0X1,3);
	split_sreg_range(0X1B0AA,"T",0X1,3);
	split_sreg_range(0X1B0B6,"T",0X1,3);
	split_sreg_range(0X1B0BC,"T",0X1,3);
	split_sreg_range(0X1B0C2,"T",0X1,3);
	split_sreg_range(0X1B0E8,"T",0X1,3);
	split_sreg_range(0X1B0F6,"T",0X1,3);
	split_sreg_range(0X1B116,"T",0X1,3);
	split_sreg_range(0X1B11A,"T",0X1,3);
	split_sreg_range(0X1B126,"T",0X1,3);
	split_sreg_range(0X1B146,"T",0X1,3);
	split_sreg_range(0X1B14C,"T",0X1,3);
	split_sreg_range(0X1B164,"T",0X1,3);
	split_sreg_range(0X1B166,"T",0X1,3);
	split_sreg_range(0X1B19A,"T",0X1,3);
	split_sreg_range(0X1B1AA,"T",0X1,3);
	split_sreg_range(0X1B1C6,"T",0X1,3);
	split_sreg_range(0X1B1D6,"T",0X1,3);
	split_sreg_range(0X1B1E2,"T",0X1,3);
	split_sreg_range(0X1B1EA,"T",0X1,3);
	split_sreg_range(0X1B1EE,"T",0X1,3);
	split_sreg_range(0X1B1FE,"T",0X1,3);
	split_sreg_range(0X1B200,"T",0X1,3);
	split_sreg_range(0X1B204,"T",0X1,3);
	split_sreg_range(0X1B210,"T",0X1,3);
	split_sreg_range(0X1B22A,"T",0X1,3);
	split_sreg_range(0X1B230,"T",0X1,3);
	split_sreg_range(0X1B236,"T",0X1,3);
	split_sreg_range(0X1B254,"T",0X1,3);
	split_sreg_range(0X1B25E,"T",0X1,3);
	split_sreg_range(0X1B260,"T",0X1,3);
	split_sreg_range(0X1B268,"T",0X1,3);
	split_sreg_range(0X1B274,"T",0X1,3);
	split_sreg_range(0X1B27A,"T",0X1,3);
	split_sreg_range(0X1B280,"T",0X1,3);
	split_sreg_range(0X1B2B0,"T",0X1,3);
	split_sreg_range(0X1B2DA,"T",0X1,3);
	split_sreg_range(0X1B2F4,"T",0X1,3);
	split_sreg_range(0X1B2FE,"T",0X1,3);
	split_sreg_range(0X1B308,"T",0X1,3);
	split_sreg_range(0X1B318,"T",0X1,3);
	split_sreg_range(0X1B31E,"T",0X1,3);
	split_sreg_range(0X1B324,"T",0X1,3);
	split_sreg_range(0X1B352,"T",0X1,3);
	split_sreg_range(0X1B362,"T",0X1,3);
	split_sreg_range(0X1B36E,"T",0X1,3);
	split_sreg_range(0X1B38A,"T",0X1,3);
	split_sreg_range(0X1B3A0,"T",0X1,3);
	split_sreg_range(0X1B3A6,"T",0X1,3);
	split_sreg_range(0X1B3AE,"T",0X1,3);
	split_sreg_range(0X1B3B0,"T",0X1,3);
	split_sreg_range(0X1B3BC,"T",0X1,3);
	split_sreg_range(0X1B3DE,"T",0X1,3);
	split_sreg_range(0X1B3EA,"T",0X1,3);
	split_sreg_range(0X1B3EE,"T",0X1,3);
	split_sreg_range(0X1B400,"T",0X1,3);
	split_sreg_range(0X1B402,"T",0X1,3);
	split_sreg_range(0X1B410,"T",0X1,3);
	split_sreg_range(0X1B414,"T",0X1,3);
	split_sreg_range(0X1B428,"T",0X1,3);
	split_sreg_range(0X1B42A,"T",0X1,3);
	split_sreg_range(0X1B42C,"T",0X1,3);
	split_sreg_range(0X1B42E,"T",0X1,3);
	split_sreg_range(0X1B430,"T",0X1,3);
	split_sreg_range(0X1B48C,"T",0X1,3);
	split_sreg_range(0X1B4AE,"T",0X1,3);
	split_sreg_range(0X1B4C4,"T",0X1,3);
	split_sreg_range(0X1B4D4,"T",0X1,3);
	split_sreg_range(0X1B4DA,"T",0X1,3);
	split_sreg_range(0X1B4DC,"T",0X1,3);
	split_sreg_range(0X1B506,"T",0X1,3);
	split_sreg_range(0X1B550,"T",0X1,3);
	split_sreg_range(0X1B554,"T",0X1,3);
	split_sreg_range(0X1B564,"T",0X1,3);
	split_sreg_range(0X1B576,"T",0X1,3);
	split_sreg_range(0X1B584,"T",0X1,3);
	split_sreg_range(0X1B5AA,"T",0X1,3);
	split_sreg_range(0X1B5CC,"T",0X1,3);
	split_sreg_range(0X1B5EC,"T",0X1,3);
	split_sreg_range(0X1B616,"T",0X1,3);
	split_sreg_range(0X1B61A,"T",0X1,3);
	split_sreg_range(0X1B628,"T",0X1,3);
	split_sreg_range(0X1B63E,"T",0X1,3);
	split_sreg_range(0X1B64A,"T",0X1,3);
	split_sreg_range(0X1B664,"T",0X1,3);
	split_sreg_range(0X1B66A,"T",0X1,3);
	split_sreg_range(0X1B674,"T",0X1,3);
	split_sreg_range(0X1B67A,"T",0X1,3);
	split_sreg_range(0X1B690,"T",0X1,3);
	split_sreg_range(0X1B6CC,"T",0X1,3);
	split_sreg_range(0X1B6D0,"T",0X1,3);
	split_sreg_range(0X1B6D2,"T",0X1,3);
	split_sreg_range(0X1B6D6,"T",0X1,3);
	split_sreg_range(0X1B6DE,"T",0X1,3);
	split_sreg_range(0X1B6E4,"T",0X1,3);
	split_sreg_range(0X1B6E8,"T",0X1,3);
	split_sreg_range(0X1B6F4,"T",0X1,3);
	split_sreg_range(0X1B70C,"T",0X1,3);
	split_sreg_range(0X1B712,"T",0X1,3);
	split_sreg_range(0X1B71C,"T",0X1,3);
	split_sreg_range(0X1B724,"T",0X1,3);
	split_sreg_range(0X1B72A,"T",0X1,3);
	split_sreg_range(0X1B73C,"T",0X1,3);
	split_sreg_range(0X1B758,"T",0X1,3);
	split_sreg_range(0X1B778,"T",0X1,3);
	split_sreg_range(0X1B78A,"T",0X1,3);
	split_sreg_range(0X1B78E,"T",0X1,3);
	split_sreg_range(0X1B792,"T",0X1,3);
	split_sreg_range(0X1B7DC,"T",0X1,3);
	split_sreg_range(0X1B7F2,"T",0X1,3);
	split_sreg_range(0X1B802,"T",0X1,3);
	split_sreg_range(0X1B806,"T",0X1,3);
	split_sreg_range(0X1B80E,"T",0X1,3);
	split_sreg_range(0X1B812,"T",0X1,3);
	split_sreg_range(0X1B816,"T",0X1,3);
	split_sreg_range(0X1B856,"T",0X1,3);
	split_sreg_range(0X1B866,"T",0X1,3);
	split_sreg_range(0X1B86A,"T",0X1,3);
	split_sreg_range(0X1B88C,"T",0X1,3);
	split_sreg_range(0X1B894,"T",0X1,3);
	split_sreg_range(0X1B8A4,"T",0X1,3);
	split_sreg_range(0X1B8CC,"T",0X1,3);
	split_sreg_range(0X1B8D0,"T",0X1,3);
	split_sreg_range(0X1B8D2,"T",0X1,3);
	split_sreg_range(0X1B8D6,"T",0X1,3);
	split_sreg_range(0X1B8EE,"T",0X1,3);
	split_sreg_range(0X1B910,"T",0X1,3);
	split_sreg_range(0X1B920,"T",0X1,3);
	split_sreg_range(0X1B938,"T",0X1,3);
	split_sreg_range(0X1B93E,"T",0X1,3);
	split_sreg_range(0X1B956,"T",0X1,3);
	split_sreg_range(0X1B9A0,"T",0X1,3);
	split_sreg_range(0X1B9A4,"T",0X1,3);
	split_sreg_range(0X1B9AA,"T",0X1,3);
	split_sreg_range(0X1B9AE,"T",0X1,3);
	split_sreg_range(0X1B9B4,"T",0X1,3);
	split_sreg_range(0X1B9BA,"T",0X1,3);
	split_sreg_range(0X1B9BE,"T",0X1,3);
	split_sreg_range(0X1B9C2,"T",0X1,3);
	split_sreg_range(0X1B9C4,"T",0X1,3);
	split_sreg_range(0X1B9D0,"T",0X1,3);
	split_sreg_range(0X1B9D4,"T",0X1,3);
	split_sreg_range(0X1B9DA,"T",0X1,3);
	split_sreg_range(0X1B9E0,"T",0X1,3);
	split_sreg_range(0X1BA0C,"T",0X1,3);
	split_sreg_range(0X1BA1E,"T",0X1,3);
	split_sreg_range(0X1BA22,"T",0X1,3);
	split_sreg_range(0X1BA36,"T",0X1,3);
	split_sreg_range(0X1BA3C,"T",0X1,3);
	split_sreg_range(0X1BA4E,"T",0X1,3);
	split_sreg_range(0X1BA56,"T",0X1,3);
	split_sreg_range(0X1BA80,"T",0X1,3);
	split_sreg_range(0X1BA84,"T",0X1,3);
	split_sreg_range(0X1BA9C,"T",0X1,3);
	split_sreg_range(0X1BAB0,"T",0X1,3);
	split_sreg_range(0X1BAC6,"T",0X1,3);
	split_sreg_range(0X1BAE0,"T",0X1,3);
	split_sreg_range(0X1BAE8,"T",0X1,3);
	split_sreg_range(0X1BB02,"T",0X1,3);
	split_sreg_range(0X1BB34,"T",0X1,3);
	split_sreg_range(0X1BB48,"T",0X1,3);
	split_sreg_range(0X1BB4C,"T",0X1,3);
	split_sreg_range(0X1BB50,"T",0X1,3);
	split_sreg_range(0X1BB6E,"T",0X1,3);
	split_sreg_range(0X1BBA4,"T",0X1,3);
	split_sreg_range(0X1BBCC,"T",0X1,3);
	split_sreg_range(0X1BBDC,"T",0X1,3);
	split_sreg_range(0X1BBE0,"T",0X1,3);
	split_sreg_range(0X1BBF0,"T",0X1,3);
	split_sreg_range(0X1BC04,"T",0X1,3);
	split_sreg_range(0X1BC08,"T",0X1,3);
	split_sreg_range(0X1BC0E,"T",0X1,3);
	split_sreg_range(0X1BC92,"T",0X1,3);
	split_sreg_range(0X1BCC2,"T",0X1,3);
	split_sreg_range(0X1BCDC,"T",0X1,3);
	split_sreg_range(0X1BCE0,"T",0X1,3);
	split_sreg_range(0X1BCE4,"T",0X1,3);
	split_sreg_range(0X1BD6A,"T",0X1,3);
	split_sreg_range(0X1BD7E,"T",0X1,3);
	split_sreg_range(0X1BD9E,"T",0X1,3);
	split_sreg_range(0X1BDC4,"T",0X1,3);
	split_sreg_range(0X1BDDC,"T",0X1,3);
	split_sreg_range(0X1BE16,"T",0X1,3);
	split_sreg_range(0X1BE2E,"T",0X1,3);
	split_sreg_range(0X1BE3A,"T",0X1,3);
	split_sreg_range(0X1BE3E,"T",0X1,3);
	split_sreg_range(0X1BE54,"T",0X1,3);
	split_sreg_range(0X1BE58,"T",0X1,3);
	split_sreg_range(0X1BE9C,"T",0X1,3);
	split_sreg_range(0X1BEA0,"T",0X1,3);
	split_sreg_range(0X1BEA2,"T",0X1,3);
	split_sreg_range(0X1BEB0,"T",0X1,3);
	split_sreg_range(0X1BEDA,"T",0X1,3);
	split_sreg_range(0X1BEE0,"T",0X1,3);
	split_sreg_range(0X1BEEA,"T",0X1,3);
	split_sreg_range(0X1BEF0,"T",0X1,3);
	split_sreg_range(0X1BF10,"T",0X1,3);
	split_sreg_range(0X1BF50,"T",0X1,3);
	split_sreg_range(0X1BF98,"T",0X1,3);
	split_sreg_range(0X1BF9C,"T",0X1,3);
	split_sreg_range(0X1BFAC,"T",0X1,3);
	split_sreg_range(0X1BFB0,"T",0X1,3);
	split_sreg_range(0X1BFD6,"T",0X1,3);
	split_sreg_range(0X1C02A,"T",0X1,3);
	split_sreg_range(0X1C034,"T",0X1,3);
	split_sreg_range(0X1C076,"T",0X1,3);
	split_sreg_range(0X1C07C,"T",0X1,3);
	split_sreg_range(0X1C08E,"T",0X1,3);
	split_sreg_range(0X1C0A2,"T",0X1,3);
	split_sreg_range(0X1C0C0,"T",0X1,3);
	split_sreg_range(0X1C0DA,"T",0X1,3);
	split_sreg_range(0X1C0E8,"T",0X1,3);
	split_sreg_range(0X1C0EC,"T",0X1,3);
	split_sreg_range(0X1C102,"T",0X1,3);
	split_sreg_range(0X1C116,"T",0X1,3);
	split_sreg_range(0X1C11C,"T",0X1,3);
	split_sreg_range(0X1C156,"T",0X1,3);
	split_sreg_range(0X1C176,"T",0X1,3);
	split_sreg_range(0X1C17A,"T",0X1,3);
	split_sreg_range(0X1C180,"T",0X1,3);
	split_sreg_range(0X1C186,"T",0X1,3);
	split_sreg_range(0X1C18A,"T",0X1,3);
	split_sreg_range(0X1C18E,"T",0X1,3);
	split_sreg_range(0X1C190,"T",0X1,3);
	split_sreg_range(0X1C1A2,"T",0X1,3);
	split_sreg_range(0X1C1BE,"T",0X1,3);
	split_sreg_range(0X1C1F0,"T",0X1,3);
	split_sreg_range(0X1C1F4,"T",0X1,3);
	split_sreg_range(0X1C210,"T",0X1,3);
	split_sreg_range(0X1C234,"T",0X1,3);
	split_sreg_range(0X1C246,"T",0X1,3);
	split_sreg_range(0X1C24A,"T",0X1,3);
	split_sreg_range(0X1C264,"T",0X1,3);
	split_sreg_range(0X1C27E,"T",0X1,3);
	split_sreg_range(0X1C294,"T",0X1,3);
	split_sreg_range(0X1C2A8,"T",0X1,3);
	split_sreg_range(0X1C2B8,"T",0X1,3);
	split_sreg_range(0X1C2D4,"T",0X1,3);
	split_sreg_range(0X1C304,"T",0X1,3);
	split_sreg_range(0X1C31C,"T",0X1,3);
	split_sreg_range(0X1C330,"T",0X1,3);
	split_sreg_range(0X1C33E,"T",0X1,3);
	split_sreg_range(0X1C358,"T",0X1,3);
	split_sreg_range(0X1C35E,"T",0X1,3);
	split_sreg_range(0X1C368,"T",0X1,3);
	split_sreg_range(0X1C36E,"T",0X1,3);
	split_sreg_range(0X1C374,"T",0X1,3);
	split_sreg_range(0X1C386,"T",0X1,3);
	split_sreg_range(0X1C392,"T",0X1,3);
	split_sreg_range(0X1C3BC,"T",0X1,3);
	split_sreg_range(0X1C3D8,"T",0X1,3);
	split_sreg_range(0X1C3E2,"T",0X1,3);
	split_sreg_range(0X1C3F0,"T",0X1,3);
	split_sreg_range(0X1C3F2,"T",0X1,3);
	split_sreg_range(0X1C42E,"T",0X1,3);
	split_sreg_range(0X1C4A2,"T",0X1,3);
	split_sreg_range(0X1C4CC,"T",0X1,3);
	split_sreg_range(0X1C4D6,"T",0X1,3);
	split_sreg_range(0X1C4D8,"T",0X1,3);
	split_sreg_range(0X1C4DE,"T",0X1,3);
	split_sreg_range(0X1C4F0,"T",0X1,3);
	split_sreg_range(0X1C4FE,"T",0X1,3);
	split_sreg_range(0X1C502,"T",0X1,3);
	split_sreg_range(0X1C522,"T",0X1,3);
	split_sreg_range(0X1C52E,"T",0X1,3);
	split_sreg_range(0X1C53C,"T",0X1,3);
	split_sreg_range(0X1C544,"T",0X1,3);
	split_sreg_range(0X1C566,"T",0X1,3);
	split_sreg_range(0X1C56A,"T",0X1,3);
	split_sreg_range(0X1C59C,"T",0X1,3);
	split_sreg_range(0X1C5BE,"T",0X1,3);
	split_sreg_range(0X1C5D0,"T",0X1,3);
	split_sreg_range(0X1C5E0,"T",0X1,3);
	split_sreg_range(0X1C5E2,"T",0X1,3);
	split_sreg_range(0X1C5EA,"T",0X1,3);
	split_sreg_range(0X1C608,"T",0X1,3);
	split_sreg_range(0X1C61C,"T",0X1,3);
	split_sreg_range(0X1C61E,"T",0X1,3);
	split_sreg_range(0X1C628,"T",0X1,3);
	split_sreg_range(0X1C632,"T",0X1,3);
	split_sreg_range(0X1C63A,"T",0X1,3);
	split_sreg_range(0X1C646,"T",0X1,3);
	split_sreg_range(0X1C64A,"T",0X1,3);
	split_sreg_range(0X1C656,"T",0X1,3);
	split_sreg_range(0X1C65C,"T",0X1,3);
	split_sreg_range(0X1C666,"T",0X1,3);
	split_sreg_range(0X1C672,"T",0X1,3);
	split_sreg_range(0X1C67C,"T",0X1,3);
	split_sreg_range(0X1C6C0,"T",0X1,3);
	split_sreg_range(0X1C6D6,"T",0X1,3);
	split_sreg_range(0X1C6EA,"T",0X1,3);
	split_sreg_range(0X1C6EC,"T",0X1,3);
	split_sreg_range(0X1C71C,"T",0X1,3);
	split_sreg_range(0X1C720,"T",0X1,3);
	split_sreg_range(0X1C722,"T",0X1,3);
	split_sreg_range(0X1C726,"T",0X1,3);
	split_sreg_range(0X1C740,"T",0X1,3);
	split_sreg_range(0X1C758,"T",0X1,3);
	split_sreg_range(0X1C774,"T",0X1,3);
	split_sreg_range(0X1C77C,"T",0X1,3);
	split_sreg_range(0X1C7DC,"T",0X1,3);
	split_sreg_range(0X1C7F2,"T",0X1,3);
	split_sreg_range(0X1C7F6,"T",0X1,3);
	split_sreg_range(0X1C7F8,"T",0X1,3);
	split_sreg_range(0X1C7FC,"T",0X1,3);
	split_sreg_range(0X1C820,"T",0X1,3);
	split_sreg_range(0X1C844,"T",0X1,3);
	split_sreg_range(0X1C86C,"T",0X1,3);
	split_sreg_range(0X1C888,"T",0X1,3);
	split_sreg_range(0X1C88C,"T",0X1,3);
	split_sreg_range(0X1C890,"T",0X1,3);
	split_sreg_range(0X1C898,"T",0X1,3);
	split_sreg_range(0X1C89E,"T",0X1,3);
	split_sreg_range(0X1C8A4,"T",0X1,3);
	split_sreg_range(0X1C8AA,"T",0X1,3);
	split_sreg_range(0X1C8AE,"T",0X1,3);
	split_sreg_range(0X1C8B4,"T",0X1,3);
	split_sreg_range(0X1C8D0,"T",0X1,3);
	split_sreg_range(0X1C8DC,"T",0X1,3);
	split_sreg_range(0X1C8DE,"T",0X1,3);
	split_sreg_range(0X1C8E0,"T",0X1,3);
	split_sreg_range(0X1C8FC,"T",0X1,3);
	split_sreg_range(0X1C908,"T",0X1,3);
	split_sreg_range(0X1C90A,"T",0X1,3);
	split_sreg_range(0X1C90C,"T",0X1,3);
	split_sreg_range(0X1C94E,"T",0X1,3);
	split_sreg_range(0X1C984,"T",0X1,3);
	split_sreg_range(0X1C9C4,"T",0X1,3);
	split_sreg_range(0X1C9CC,"T",0X1,3);
	split_sreg_range(0X1C9CE,"T",0X1,3);
	split_sreg_range(0X1CA10,"T",0X1,3);
	split_sreg_range(0X1CA46,"T",0X1,3);
	split_sreg_range(0X1CA86,"T",0X1,3);
	split_sreg_range(0X1CA8E,"T",0X1,3);
	split_sreg_range(0X1CA90,"T",0X1,3);
	split_sreg_range(0X1CAE2,"T",0X1,3);
	split_sreg_range(0X1CAE4,"T",0X1,3);
	split_sreg_range(0X1CB3A,"T",0X1,3);
	split_sreg_range(0X1CB3C,"T",0X1,3);
	split_sreg_range(0X1CBB4,"T",0X1,3);
	split_sreg_range(0X1CBB8,"T",0X1,3);
	split_sreg_range(0X1CC08,"T",0X1,3);
	split_sreg_range(0X1CC10,"T",0X1,3);
	split_sreg_range(0X1CC14,"T",0X1,3);
	split_sreg_range(0X1CC6A,"T",0X1,3);
	split_sreg_range(0X1CC70,"T",0X1,3);
	split_sreg_range(0X1CCC6,"T",0X1,3);
	split_sreg_range(0X1CCC8,"T",0X1,3);
	split_sreg_range(0X1CCD0,"T",0X1,3);
	split_sreg_range(0X1CD10,"T",0X1,3);
	split_sreg_range(0X1CD24,"T",0X1,3);
	split_sreg_range(0X1CD30,"T",0X1,3);
	split_sreg_range(0X1CD34,"T",0X1,3);
	split_sreg_range(0X1CD56,"T",0X1,3);
	split_sreg_range(0X1CD5E,"T",0X1,3);
	split_sreg_range(0X1CD60,"T",0X1,3);
	split_sreg_range(0X1CD74,"T",0X1,3);
	split_sreg_range(0X1CD7C,"T",0X1,3);
	split_sreg_range(0X1CD90,"T",0X1,3);
	split_sreg_range(0X1CD92,"T",0X1,3);
	split_sreg_range(0X1CD96,"T",0X1,3);
	split_sreg_range(0X1CDA6,"T",0X1,3);
	split_sreg_range(0X1CDA8,"T",0X1,3);
	split_sreg_range(0X1CDAC,"T",0X1,3);
	split_sreg_range(0X1CDB0,"T",0X1,3);
	split_sreg_range(0X1CDB6,"T",0X1,3);
	split_sreg_range(0X1CDCE,"T",0X1,3);
	split_sreg_range(0X1CDE8,"T",0X1,3);
	split_sreg_range(0X1CE00,"T",0X1,3);
	split_sreg_range(0X1CE20,"T",0X1,3);
	split_sreg_range(0X1CE46,"T",0X1,3);
	split_sreg_range(0X1CE52,"T",0X1,3);
	split_sreg_range(0X1CE5C,"T",0X1,3);
	split_sreg_range(0X1CE5E,"T",0X1,3);
	split_sreg_range(0X1CE78,"T",0X1,3);
	split_sreg_range(0X1CE7C,"T",0X1,3);
	split_sreg_range(0X1CE80,"T",0X1,3);
	split_sreg_range(0X1CE84,"T",0X1,3);
	split_sreg_range(0X1CEAC,"T",0X1,3);
	split_sreg_range(0X1CEBA,"T",0X1,3);
	split_sreg_range(0X1CEFA,"T",0X1,3);
	split_sreg_range(0X1CEFE,"T",0X1,3);
	split_sreg_range(0X1CF00,"T",0X1,3);
	split_sreg_range(0X1CF2E,"T",0X1,3);
	split_sreg_range(0X1CF48,"T",0X1,3);
	split_sreg_range(0X1CF56,"T",0X1,3);
	split_sreg_range(0X1CF6C,"T",0X1,3);
	split_sreg_range(0X1CF6E,"T",0X1,3);
	split_sreg_range(0X1CF76,"T",0X1,3);
	split_sreg_range(0X1CF9C,"T",0X1,3);
	split_sreg_range(0X1CFB2,"T",0X1,3);
	split_sreg_range(0X1CFB4,"T",0X1,3);
	split_sreg_range(0X1CFBC,"T",0X1,3);
	split_sreg_range(0X1CFE2,"T",0X1,3);
	split_sreg_range(0X1D006,"T",0X1,3);
	split_sreg_range(0X1D01A,"T",0X1,3);
	split_sreg_range(0X1D01E,"T",0X1,3);
	split_sreg_range(0X1D022,"T",0X1,3);
	split_sreg_range(0X1D032,"T",0X1,3);
	split_sreg_range(0X1D034,"T",0X1,3);
	split_sreg_range(0X1D03E,"T",0X1,3);
	split_sreg_range(0X1D040,"T",0X1,3);
	split_sreg_range(0X1D042,"T",0X1,3);
	split_sreg_range(0X1D046,"T",0X1,3);
	split_sreg_range(0X1D058,"T",0X1,3);
	split_sreg_range(0X1D060,"T",0X1,3);
	split_sreg_range(0X1D07A,"T",0X1,3);
	split_sreg_range(0X1D080,"T",0X1,3);
	split_sreg_range(0X1D084,"T",0X1,3);
	split_sreg_range(0X1D088,"T",0X1,3);
	split_sreg_range(0X1D08C,"T",0X1,3);
	split_sreg_range(0X1D094,"T",0X1,3);
	split_sreg_range(0X1D0B8,"T",0X1,3);
	split_sreg_range(0X1D0BE,"T",0X1,3);
	split_sreg_range(0X1D0C2,"T",0X1,3);
	split_sreg_range(0X1D0C6,"T",0X1,3);
	split_sreg_range(0X1D0CA,"T",0X1,3);
	split_sreg_range(0X1D0D2,"T",0X1,3);
	split_sreg_range(0X1D0EC,"T",0X1,3);
	split_sreg_range(0X1D0F2,"T",0X1,3);
	split_sreg_range(0X1D0F6,"T",0X1,3);
	split_sreg_range(0X1D0FA,"T",0X1,3);
	split_sreg_range(0X1D0FE,"T",0X1,3);
	split_sreg_range(0X1D106,"T",0X1,3);
	split_sreg_range(0X1D12A,"T",0X1,3);
	split_sreg_range(0X1D130,"T",0X1,3);
	split_sreg_range(0X1D134,"T",0X1,3);
	split_sreg_range(0X1D138,"T",0X1,3);
	split_sreg_range(0X1D14E,"T",0X1,3);
	split_sreg_range(0X1D164,"T",0X1,3);
	split_sreg_range(0X1D168,"T",0X1,3);
	split_sreg_range(0X1D16C,"T",0X1,3);
	split_sreg_range(0X1D170,"T",0X1,3);
	split_sreg_range(0X1D174,"T",0X1,3);
	split_sreg_range(0X1D178,"T",0X1,3);
	split_sreg_range(0X1D17C,"T",0X1,3);
	split_sreg_range(0X1D1A2,"T",0X1,3);
	split_sreg_range(0X1D1A6,"T",0X1,3);
	split_sreg_range(0X1D1AA,"T",0X1,3);
	split_sreg_range(0X1D1CA,"T",0X1,3);
	split_sreg_range(0X1D1E2,"T",0X1,3);
	split_sreg_range(0X1D1E8,"T",0X1,3);
	split_sreg_range(0X1D204,"T",0X1,3);
	split_sreg_range(0X1D208,"T",0X1,3);
	split_sreg_range(0X1D224,"T",0X1,3);
	split_sreg_range(0X1D23C,"T",0X1,3);
	split_sreg_range(0X1D252,"T",0X1,3);
	split_sreg_range(0X1D298,"T",0X1,3);
	split_sreg_range(0X1D2B0,"T",0X1,3);
	split_sreg_range(0X1D2B4,"T",0X1,3);
	split_sreg_range(0X1D2BE,"T",0X1,3);
	split_sreg_range(0X1D2D0,"T",0X1,3);
	split_sreg_range(0X1D2DA,"T",0X1,3);
	split_sreg_range(0X1D2F2,"T",0X1,3);
	split_sreg_range(0X1D2FA,"T",0X1,3);
	split_sreg_range(0X1D2FC,"T",0X1,3);
	split_sreg_range(0X1D314,"T",0X1,3);
	split_sreg_range(0X1D324,"T",0X1,3);
	split_sreg_range(0X1D326,"T",0X1,3);
	split_sreg_range(0X1D328,"T",0X1,3);
	split_sreg_range(0X1D32E,"T",0X1,3);
	split_sreg_range(0X1D346,"T",0X1,3);
	split_sreg_range(0X1D35E,"T",0X1,3);
	split_sreg_range(0X1D364,"T",0X1,3);
	split_sreg_range(0X1D366,"T",0X1,3);
	split_sreg_range(0X1D380,"T",0X1,3);
	split_sreg_range(0X1D38E,"T",0X1,3);
	split_sreg_range(0X1D396,"T",0X1,3);
	split_sreg_range(0X1D39C,"T",0X1,3);
	split_sreg_range(0X1D39E,"T",0X1,3);
	split_sreg_range(0X1D3AE,"T",0X1,3);
	split_sreg_range(0X1D3B6,"T",0X1,3);
	split_sreg_range(0X1D3B8,"T",0X1,3);
	split_sreg_range(0X1D3D0,"T",0X1,3);
	split_sreg_range(0X1D3D8,"T",0X1,3);
	split_sreg_range(0X1D3DA,"T",0X1,3);
	split_sreg_range(0X1D3F6,"T",0X1,3);
	split_sreg_range(0X1D406,"T",0X1,3);
	split_sreg_range(0X1D40C,"T",0X1,3);
	split_sreg_range(0X1D414,"T",0X1,3);
	split_sreg_range(0X1D418,"T",0X1,3);
	split_sreg_range(0X1D41A,"T",0X1,3);
	split_sreg_range(0X1D448,"T",0X1,3);
	split_sreg_range(0X1D452,"T",0X1,3);
	split_sreg_range(0X1D458,"T",0X1,3);
	split_sreg_range(0X1D466,"T",0X1,3);
	split_sreg_range(0X1D480,"T",0X1,3);
	split_sreg_range(0X1D482,"T",0X1,3);
	split_sreg_range(0X1D486,"T",0X1,3);
	split_sreg_range(0X1D490,"T",0X1,3);
	split_sreg_range(0X1D494,"T",0X1,3);
	split_sreg_range(0X1D4AE,"T",0X1,3);
	split_sreg_range(0X1D4B8,"T",0X1,3);
	split_sreg_range(0X1D4BC,"T",0X1,3);
	split_sreg_range(0X1D4D2,"T",0X1,3);
	split_sreg_range(0X1D4D4,"T",0X1,3);
	split_sreg_range(0X1D4F2,"T",0X1,3);
	split_sreg_range(0X1D506,"T",0X1,3);
	split_sreg_range(0X1D508,"T",0X1,3);
	split_sreg_range(0X1D50C,"T",0X1,3);
	split_sreg_range(0X1D518,"T",0X1,3);
	split_sreg_range(0X1D55C,"T",0X1,3);
	split_sreg_range(0X1D55E,"T",0X1,3);
	split_sreg_range(0X1D5E4,"T",0X1,3);
	split_sreg_range(0X1D5E6,"T",0X1,3);
	split_sreg_range(0X1D60C,"T",0X1,3);
	split_sreg_range(0X1D60E,"T",0X1,3);
	split_sreg_range(0X1D63C,"T",0X1,3);
	split_sreg_range(0X1D63E,"T",0X1,3);
	split_sreg_range(0X1D676,"T",0X1,3);
	split_sreg_range(0X1D678,"T",0X1,3);
	split_sreg_range(0X1D6C8,"T",0X1,3);
	split_sreg_range(0X1D6D2,"T",0X1,3);
	split_sreg_range(0X1D6D4,"T",0X1,3);
	split_sreg_range(0X1D6E6,"T",0X1,3);
	split_sreg_range(0X1D6EC,"T",0X1,3);
	split_sreg_range(0X1D718,"T",0X1,3);
	split_sreg_range(0X1D71E,"T",0X1,3);
	split_sreg_range(0X1D740,"T",0X1,3);
	split_sreg_range(0X1D74A,"T",0X1,3);
	split_sreg_range(0X1D76E,"T",0X1,3);
	split_sreg_range(0X1D77A,"T",0X1,3);
	split_sreg_range(0X1D78C,"T",0X1,3);
	split_sreg_range(0X1D790,"T",0X1,3);
	split_sreg_range(0X1D792,"T",0X1,3);
	split_sreg_range(0X1D798,"T",0X1,3);
	split_sreg_range(0X1D79E,"T",0X1,3);
	split_sreg_range(0X1D7A4,"T",0X1,3);
	split_sreg_range(0X1D7AA,"T",0X1,3);
	split_sreg_range(0X1D7B0,"T",0X1,3);
	split_sreg_range(0X1D7C6,"T",0X1,3);
	split_sreg_range(0X1D7C8,"T",0X1,3);
	split_sreg_range(0X1D7CE,"T",0X1,3);
	split_sreg_range(0X1D7D6,"T",0X1,3);
	split_sreg_range(0X1D7EE,"T",0X1,3);
	split_sreg_range(0X1D7F2,"T",0X1,3);
	split_sreg_range(0X1D816,"T",0X1,3);
	split_sreg_range(0X1D830,"T",0X1,3);
	split_sreg_range(0X1D832,"T",0X1,3);
	split_sreg_range(0X1D83E,"T",0X1,3);
	split_sreg_range(0X1D844,"T",0X1,3);
	split_sreg_range(0X1D84A,"T",0X1,3);
	split_sreg_range(0X1D852,"T",0X1,3);
	split_sreg_range(0X1D882,"T",0X1,3);
	split_sreg_range(0X1D888,"T",0X1,3);
	split_sreg_range(0X1D898,"T",0X1,3);
	split_sreg_range(0X1D89E,"T",0X1,3);
	split_sreg_range(0X1D8A4,"T",0X1,3);
	split_sreg_range(0X1D8A6,"T",0X1,3);
	split_sreg_range(0X1D8B0,"T",0X1,3);
	split_sreg_range(0X1D8D6,"T",0X1,3);
	split_sreg_range(0X1D8DA,"T",0X1,3);
	split_sreg_range(0X1D8DE,"T",0X1,3);
	split_sreg_range(0X1D8E2,"T",0X1,3);
	split_sreg_range(0X1D8FE,"T",0X1,3);
	split_sreg_range(0X1D91A,"T",0X1,3);
	split_sreg_range(0X1D930,"T",0X1,3);
	split_sreg_range(0X1D932,"T",0X1,3);
	split_sreg_range(0X1D938,"T",0X1,3);
	split_sreg_range(0X1D952,"T",0X1,3);
	split_sreg_range(0X1D954,"T",0X1,3);
	split_sreg_range(0X1D958,"T",0X1,3);
	split_sreg_range(0X1D970,"T",0X1,3);
	split_sreg_range(0X1D9A2,"T",0X1,3);
	split_sreg_range(0X1D9B6,"T",0X1,3);
	split_sreg_range(0X1D9DA,"T",0X1,3);
	split_sreg_range(0X1D9DC,"T",0X1,3);
	split_sreg_range(0X1D9FC,"T",0X1,3);
	split_sreg_range(0X1DA12,"T",0X1,3);
	split_sreg_range(0X1DA1C,"T",0X1,3);
	split_sreg_range(0X1DA2A,"T",0X1,3);
	split_sreg_range(0X1DA40,"T",0X1,3);
	split_sreg_range(0X1DA5C,"T",0X1,3);
	split_sreg_range(0X1DA66,"T",0X1,3);
	split_sreg_range(0X1DA6E,"T",0X1,3);
	split_sreg_range(0X1DAAE,"T",0X1,3);
	split_sreg_range(0X1DAD0,"T",0X1,3);
	split_sreg_range(0X1DAEA,"T",0X1,3);
	split_sreg_range(0X1DB2E,"T",0X1,3);
	split_sreg_range(0X1DB36,"T",0X1,3);
	split_sreg_range(0X1DB3A,"T",0X1,3);
	split_sreg_range(0X1DB66,"T",0X1,3);
	split_sreg_range(0X1DB68,"T",0X1,3);
	split_sreg_range(0X1DB76,"T",0X1,3);
	split_sreg_range(0X1DB7E,"T",0X1,3);
	split_sreg_range(0X1DB96,"T",0X1,3);
	split_sreg_range(0X1DB98,"T",0X1,3);
	split_sreg_range(0X1DBAA,"T",0X1,3);
	split_sreg_range(0X1DBB0,"T",0X1,3);
	split_sreg_range(0X1DBB6,"T",0X1,3);
	split_sreg_range(0X1DBB8,"T",0X1,3);
	split_sreg_range(0X1DBC0,"T",0X1,3);
	split_sreg_range(0X1DBC8,"T",0X1,3);
	split_sreg_range(0X1DBCA,"T",0X1,3);
	split_sreg_range(0X1DBCE,"T",0X1,3);
	split_sreg_range(0X1DBD4,"T",0X1,3);
	split_sreg_range(0X1DBDA,"T",0X1,3);
	split_sreg_range(0X1DBDC,"T",0X1,3);
	split_sreg_range(0X1DBE0,"T",0X1,3);
	split_sreg_range(0X1DBEA,"T",0X1,3);
	split_sreg_range(0X1DBEE,"T",0X1,3);
	split_sreg_range(0X1DBF6,"T",0X1,3);
	split_sreg_range(0X1DBF8,"T",0X1,3);
	split_sreg_range(0X1DC34,"T",0X1,3);
	split_sreg_range(0X1DC46,"T",0X1,3);
	split_sreg_range(0X1DC4C,"T",0X1,3);
	split_sreg_range(0X1DC52,"T",0X1,3);
	split_sreg_range(0X1DC56,"T",0X1,3);
	split_sreg_range(0X1DC5C,"T",0X1,3);
	split_sreg_range(0X1DC68,"T",0X1,3);
	split_sreg_range(0X1DC6C,"T",0X1,3);
	split_sreg_range(0X1DC72,"T",0X1,3);
	split_sreg_range(0X1DC86,"T",0X1,3);
	split_sreg_range(0X1DC8A,"T",0X1,3);
	split_sreg_range(0X1DC8C,"T",0X1,3);
	split_sreg_range(0X1DCA4,"T",0X1,3);
	split_sreg_range(0X1DCB0,"T",0X1,3);
	split_sreg_range(0X1DCB2,"T",0X1,3);
	split_sreg_range(0X1DCBE,"T",0X1,3);
	split_sreg_range(0X1DCC8,"T",0X1,3);
	split_sreg_range(0X1DCD4,"T",0X1,3);
	split_sreg_range(0X1DCE4,"T",0X1,3);
	split_sreg_range(0X1DCF4,"T",0X1,3);
	split_sreg_range(0X1DD10,"T",0X1,3);
	split_sreg_range(0X1DD20,"T",0X1,3);
	split_sreg_range(0X1DD2A,"T",0X1,3);
	split_sreg_range(0X1DD36,"T",0X1,3);
	split_sreg_range(0X1DD44,"T",0X1,3);
	split_sreg_range(0X1DD60,"T",0X1,3);
	split_sreg_range(0X1DD78,"T",0X1,3);
	split_sreg_range(0X1DD98,"T",0X1,3);
	split_sreg_range(0X1DD9C,"T",0X1,3);
	split_sreg_range(0X1DDA8,"T",0X1,3);
	split_sreg_range(0X1DDAA,"T",0X1,3);
	split_sreg_range(0X1DDAC,"T",0X1,3);
	split_sreg_range(0X1DDDE,"T",0X1,3);
	split_sreg_range(0X1DDF4,"T",0X1,3);
	split_sreg_range(0X1DE02,"T",0X1,3);
	split_sreg_range(0X1DE12,"T",0X1,3);
	split_sreg_range(0X1DE20,"T",0X1,3);
	split_sreg_range(0X1DE36,"T",0X1,3);
	split_sreg_range(0X1DE4E,"T",0X1,3);
	split_sreg_range(0X1DE50,"T",0X1,3);
	split_sreg_range(0X1DE56,"T",0X1,3);
	split_sreg_range(0X1DE5C,"T",0X1,3);
	split_sreg_range(0X1DE60,"T",0X1,3);
	split_sreg_range(0X1DE64,"T",0X1,3);
	split_sreg_range(0X1DE74,"T",0X1,3);
	split_sreg_range(0X1DE80,"T",0X1,3);
	split_sreg_range(0X1DEA8,"T",0X1,3);
	split_sreg_range(0X1DEE2,"T",0X1,3);
	split_sreg_range(0X1DEE4,"T",0X1,3);
	split_sreg_range(0X1DEE6,"T",0X1,3);
	split_sreg_range(0X1DEEC,"T",0X1,3);
	split_sreg_range(0X1DF02,"T",0X1,3);
	split_sreg_range(0X1DF10,"T",0X1,3);
	split_sreg_range(0X1DF34,"T",0X1,3);
	split_sreg_range(0X1DF46,"T",0X1,3);
	split_sreg_range(0X1DF48,"T",0X1,3);
	split_sreg_range(0X1DF5C,"T",0X1,3);
	split_sreg_range(0X1DF70,"T",0X1,3);
	split_sreg_range(0X1DF84,"T",0X1,3);
	split_sreg_range(0X1DF98,"T",0X1,3);
	split_sreg_range(0X1DFB0,"T",0X1,3);
	split_sreg_range(0X1DFC4,"T",0X1,3);
	split_sreg_range(0X1DFD6,"T",0X1,3);
	split_sreg_range(0X1DFE0,"T",0X1,3);
	split_sreg_range(0X1DFFE,"T",0X1,3);
	split_sreg_range(0X1E002,"T",0X1,3);
	split_sreg_range(0X1E022,"T",0X1,3);
	split_sreg_range(0X1E02C,"T",0X1,3);
	split_sreg_range(0X1E044,"T",0X1,3);
	split_sreg_range(0X1E0B4,"T",0X1,3);
	split_sreg_range(0X1E0B8,"T",0X1,3);
	split_sreg_range(0X1E0C0,"T",0X1,3);
	split_sreg_range(0X1E0C8,"T",0X1,3);
	split_sreg_range(0X1E0CC,"T",0X1,3);
	split_sreg_range(0X1E0CE,"T",0X1,3);
	split_sreg_range(0X1E0DC,"T",0X1,3);
	split_sreg_range(0X1E0E0,"T",0X1,3);
	split_sreg_range(0X1E0E2,"T",0X1,3);
	split_sreg_range(0X1E0E4,"T",0X1,3);
	split_sreg_range(0X1E0F2,"T",0X1,3);
	split_sreg_range(0X1E0F6,"T",0X1,3);
	split_sreg_range(0X1E0F8,"T",0X1,3);
	split_sreg_range(0X1E0FA,"T",0X1,3);
	split_sreg_range(0X1E0FC,"T",0X1,3);
	split_sreg_range(0X1E0FE,"T",0X1,3);
	split_sreg_range(0X1E100,"T",0X1,3);
	split_sreg_range(0X1E102,"T",0X1,3);
	split_sreg_range(0X1E104,"T",0X1,3);
	split_sreg_range(0X1E106,"T",0X1,3);
	split_sreg_range(0X1E108,"T",0X1,3);
	split_sreg_range(0X1E10A,"T",0X1,3);
	split_sreg_range(0X1E110,"T",0X1,3);
	split_sreg_range(0X1E124,"T",0X1,3);
	split_sreg_range(0X1E128,"T",0X1,3);
	split_sreg_range(0X1E13E,"T",0X1,3);
	split_sreg_range(0X1E162,"T",0X1,3);
	split_sreg_range(0X1E176,"T",0X1,3);
	split_sreg_range(0X1E19C,"T",0X1,3);
	split_sreg_range(0X1E1A8,"T",0X1,3);
	split_sreg_range(0X1E1D0,"T",0X1,3);
	split_sreg_range(0X1E1F6,"T",0X1,3);
	split_sreg_range(0X1E200,"T",0X1,3);
	split_sreg_range(0X1E202,"T",0X1,3);
	split_sreg_range(0X1E214,"T",0X1,3);
	split_sreg_range(0X1E230,"T",0X1,3);
	split_sreg_range(0X1E236,"T",0X1,3);
	split_sreg_range(0X1E240,"T",0X1,3);
	split_sreg_range(0X1E252,"T",0X1,3);
	split_sreg_range(0X1E264,"T",0X1,3);
	split_sreg_range(0X1E294,"T",0X1,3);
	split_sreg_range(0X1E2A4,"T",0X1,3);
	split_sreg_range(0X1E2C4,"T",0X1,3);
	split_sreg_range(0X1E2EA,"T",0X1,3);
	split_sreg_range(0X1E2EE,"T",0X1,3);
	split_sreg_range(0X1E310,"T",0X1,3);
	split_sreg_range(0X1E312,"T",0X1,3);
	split_sreg_range(0X1E338,"T",0X1,3);
	split_sreg_range(0X1E33C,"T",0X1,3);
	split_sreg_range(0X1E360,"T",0X1,3);
	split_sreg_range(0X1E370,"T",0X1,3);
	split_sreg_range(0X1E378,"T",0X1,3);
	split_sreg_range(0X1E37E,"T",0X1,3);
	split_sreg_range(0X1E392,"T",0X1,3);
	split_sreg_range(0X1E39A,"T",0X1,3);
	split_sreg_range(0X1E39E,"T",0X1,3);
	split_sreg_range(0X1E3A0,"T",0X1,3);
	split_sreg_range(0X1E3C6,"T",0X1,3);
	split_sreg_range(0X1E3D6,"T",0X1,3);
	split_sreg_range(0X1E3D8,"T",0X1,3);
	split_sreg_range(0X1E3F0,"T",0X1,3);
	split_sreg_range(0X1E412,"T",0X1,3);
	split_sreg_range(0X1E414,"T",0X1,3);
	split_sreg_range(0X1E474,"T",0X1,3);
	split_sreg_range(0X1E476,"T",0X1,3);
	split_sreg_range(0X1E47A,"T",0X1,3);
	split_sreg_range(0X1E4C4,"T",0X1,3);
	split_sreg_range(0X1E4CE,"T",0X1,3);
	split_sreg_range(0X1E500,"T",0X1,3);
	split_sreg_range(0X1E50A,"T",0X1,3);
	split_sreg_range(0X1E514,"T",0X1,3);
	split_sreg_range(0X1E51E,"T",0X1,3);
	split_sreg_range(0X1E528,"T",0X1,3);
	split_sreg_range(0X1E532,"T",0X1,3);
	split_sreg_range(0X1E53C,"T",0X1,3);
	split_sreg_range(0X1E546,"T",0X1,3);
	split_sreg_range(0X1E550,"T",0X1,3);
	split_sreg_range(0X1E55A,"T",0X1,3);
	split_sreg_range(0X1E564,"T",0X1,3);
	split_sreg_range(0X1E574,"T",0X1,3);
	split_sreg_range(0X1E588,"T",0X1,3);
	split_sreg_range(0X1E592,"T",0X1,3);
	split_sreg_range(0X1E5A2,"T",0X1,3);
	split_sreg_range(0X1E5AC,"T",0X1,3);
	split_sreg_range(0X1E5B6,"T",0X1,3);
	split_sreg_range(0X1E5BA,"T",0X1,3);
	split_sreg_range(0X1E5DA,"T",0X1,3);
	split_sreg_range(0X1E5DC,"T",0X1,3);
	split_sreg_range(0X1E5E2,"T",0X1,3);
	split_sreg_range(0X1E604,"T",0X1,3);
	split_sreg_range(0X1E60A,"T",0X1,3);
	split_sreg_range(0X1E620,"T",0X1,3);
	split_sreg_range(0X1E626,"T",0X1,3);
	split_sreg_range(0X1E62A,"T",0X1,3);
	split_sreg_range(0X1E65A,"T",0X1,3);
	split_sreg_range(0X1E65E,"T",0X1,3);
	split_sreg_range(0X1E67E,"T",0X1,3);
	split_sreg_range(0X1E684,"T",0X1,3);
	split_sreg_range(0X1E68A,"T",0X1,3);
	split_sreg_range(0X1E692,"T",0X1,3);
	split_sreg_range(0X1E69A,"T",0X1,3);
	split_sreg_range(0X1E6BC,"T",0X1,3);
	split_sreg_range(0X1E6C0,"T",0X1,3);
	split_sreg_range(0X1E6DA,"T",0X1,3);
	split_sreg_range(0X1E6E0,"T",0X1,3);
	split_sreg_range(0X1E766,"T",0X1,3);
	split_sreg_range(0X1E774,"T",0X1,3);
	split_sreg_range(0X1E782,"T",0X1,3);
	split_sreg_range(0X1E784,"T",0X1,3);
	split_sreg_range(0X1E78A,"T",0X1,3);
	split_sreg_range(0X1E7B0,"T",0X1,3);
	split_sreg_range(0X1E7D8,"T",0X1,3);
	split_sreg_range(0X1E800,"T",0X1,3);
	split_sreg_range(0X1E816,"T",0X1,3);
	split_sreg_range(0X1E82C,"T",0X1,3);
	split_sreg_range(0X1E82E,"T",0X1,3);
	split_sreg_range(0X1E844,"T",0X1,3);
	split_sreg_range(0X1E852,"T",0X1,3);
	split_sreg_range(0X1E856,"T",0X1,3);
	split_sreg_range(0X1E874,"T",0X1,3);
	split_sreg_range(0X1E878,"T",0X1,3);
	split_sreg_range(0X1E87E,"T",0X1,3);
	split_sreg_range(0X1E880,"T",0X1,3);
	split_sreg_range(0X1E88E,"T",0X1,3);
	split_sreg_range(0X1E892,"T",0X1,3);
	split_sreg_range(0X1E898,"T",0X1,3);
	split_sreg_range(0X1E8AC,"T",0X1,3);
	split_sreg_range(0X1E8BA,"T",0X1,3);
	split_sreg_range(0X1E8DE,"T",0X1,3);
	split_sreg_range(0X1E900,"T",0X1,3);
	split_sreg_range(0X1E90C,"T",0X1,3);
	split_sreg_range(0X1E912,"T",0X1,3);
	split_sreg_range(0X1E91A,"T",0X1,3);
	split_sreg_range(0X1E934,"T",0X1,3);
	split_sreg_range(0X1E938,"T",0X1,3);
	split_sreg_range(0X1E93A,"T",0X1,3);
	split_sreg_range(0X1E940,"T",0X1,3);
	split_sreg_range(0X1E954,"T",0X1,3);
	split_sreg_range(0X1E956,"T",0X1,3);
	split_sreg_range(0X1E958,"T",0X1,3);
	split_sreg_range(0X1E9B4,"T",0X1,3);
	split_sreg_range(0X1E9F0,"T",0X1,3);
	split_sreg_range(0X1EA02,"T",0X1,3);
	split_sreg_range(0X1EA1A,"T",0X1,3);
	split_sreg_range(0X1EA2C,"T",0X1,3);
	split_sreg_range(0X1EA3E,"T",0X1,3);
	split_sreg_range(0X1EA50,"T",0X1,3);
	split_sreg_range(0X1EA62,"T",0X1,3);
	split_sreg_range(0X1EA76,"T",0X1,3);
	split_sreg_range(0X1EA84,"T",0X1,3);
	split_sreg_range(0X1EA8A,"T",0X1,3);
	split_sreg_range(0X1EA8E,"T",0X1,3);
	split_sreg_range(0X1EA96,"T",0X1,3);
	split_sreg_range(0X1EAAC,"T",0X1,3);
	split_sreg_range(0X1EABA,"T",0X1,3);
	split_sreg_range(0X1EAE0,"T",0X1,3);
	split_sreg_range(0X1EAF4,"T",0X1,3);
	split_sreg_range(0X1EB12,"T",0X1,3);
	split_sreg_range(0X1EB14,"T",0X1,3);
	split_sreg_range(0X1EB86,"T",0X1,3);
	split_sreg_range(0X1EB9C,"T",0X1,3);
	split_sreg_range(0X1EBAA,"T",0X1,3);
	split_sreg_range(0X1EBD0,"T",0X1,3);
	split_sreg_range(0X1EBE4,"T",0X1,3);
	split_sreg_range(0X1EC02,"T",0X1,3);
	split_sreg_range(0X1EC04,"T",0X1,3);
	split_sreg_range(0X1EC76,"T",0X1,3);
	split_sreg_range(0X1EC90,"T",0X1,3);
	split_sreg_range(0X1ECB8,"T",0X1,3);
	split_sreg_range(0X1ECE2,"T",0X1,3);
	split_sreg_range(0X1ECE6,"T",0X1,3);
	split_sreg_range(0X1ECF8,"T",0X1,3);
	split_sreg_range(0X1ED0C,"T",0X1,3);
	split_sreg_range(0X1ED20,"T",0X1,3);
	split_sreg_range(0X1ED38,"T",0X1,3);
	split_sreg_range(0X1ED4E,"T",0X1,3);
	split_sreg_range(0X1ED64,"T",0X1,3);
	split_sreg_range(0X1ED80,"T",0X1,3);
	split_sreg_range(0X1ED88,"T",0X1,3);
	split_sreg_range(0X1ED9E,"T",0X1,3);
	split_sreg_range(0X1EDC6,"T",0X1,3);
	split_sreg_range(0X1EE00,"T",0X1,3);
	split_sreg_range(0X1EE1A,"T",0X1,3);
	split_sreg_range(0X1EE3A,"T",0X1,3);
	split_sreg_range(0X1EE3E,"T",0X1,3);
	split_sreg_range(0X1EE56,"T",0X1,3);
	split_sreg_range(0X1EEA2,"T",0X1,3);
	split_sreg_range(0X1EEBA,"T",0X1,3);
	split_sreg_range(0X1EF06,"T",0X1,3);
	split_sreg_range(0X1EF22,"T",0X1,3);
	split_sreg_range(0X1EF4E,"T",0X1,3);
	split_sreg_range(0X1EF52,"T",0X1,3);
	split_sreg_range(0X1EF64,"T",0X1,3);
	split_sreg_range(0X1EF7A,"T",0X1,3);
	split_sreg_range(0X1EF90,"T",0X1,3);
	split_sreg_range(0X1EFAA,"T",0X1,3);
	split_sreg_range(0X1EFC2,"T",0X1,3);
	split_sreg_range(0X1EFDC,"T",0X1,3);
	split_sreg_range(0X1EFFA,"T",0X1,3);
	split_sreg_range(0X1F01E,"T",0X1,3);
	split_sreg_range(0X1F038,"T",0X1,3);
	split_sreg_range(0X1F05C,"T",0X1,3);
	split_sreg_range(0X1F060,"T",0X1,3);
	split_sreg_range(0X1F078,"T",0X1,3);
	split_sreg_range(0X1F0C6,"T",0X1,3);
	split_sreg_range(0X1F0DE,"T",0X1,3);
	split_sreg_range(0X1F12C,"T",0X1,3);
	split_sreg_range(0X1F144,"T",0X1,3);
	split_sreg_range(0X1F158,"T",0X1,3);
	split_sreg_range(0X1F160,"T",0X1,3);
	split_sreg_range(0X1F162,"T",0X1,3);
	split_sreg_range(0X1F17A,"T",0X1,3);
	split_sreg_range(0X1F18E,"T",0X1,3);
	split_sreg_range(0X1F196,"T",0X1,3);
	split_sreg_range(0X1F1AE,"T",0X1,3);
	split_sreg_range(0X1F1C0,"T",0X1,3);
	split_sreg_range(0X1F1C6,"T",0X1,3);
	split_sreg_range(0X1F1CA,"T",0X1,3);
	split_sreg_range(0X1F1D2,"T",0X1,3);
	split_sreg_range(0X1F1EE,"T",0X1,3);
	split_sreg_range(0X1F200,"T",0X1,3);
	split_sreg_range(0X1F214,"T",0X1,3);
	split_sreg_range(0X1F220,"T",0X1,3);
	split_sreg_range(0X1F22C,"T",0X1,3);
	split_sreg_range(0X1F246,"T",0X1,3);
	split_sreg_range(0X1F256,"T",0X1,3);
	split_sreg_range(0X1F25E,"T",0X1,3);
	split_sreg_range(0X1F276,"T",0X1,3);
	split_sreg_range(0X1F286,"T",0X1,3);
	split_sreg_range(0X1F294,"T",0X1,3);
	split_sreg_range(0X1F2A8,"T",0X1,3);
	split_sreg_range(0X1F2CA,"T",0X1,3);
	split_sreg_range(0X1F2EA,"T",0X1,3);
	split_sreg_range(0X1F2F0,"T",0X1,3);
	split_sreg_range(0X1F316,"T",0X1,3);
	split_sreg_range(0X1F320,"T",0X1,3);
	split_sreg_range(0X1F338,"T",0X1,3);
	split_sreg_range(0X1F342,"T",0X1,3);
	split_sreg_range(0X1F344,"T",0X1,3);
	split_sreg_range(0X1F38A,"T",0X1,3);
	split_sreg_range(0X1F38C,"T",0X1,3);
	split_sreg_range(0X1F394,"T",0X1,3);
	split_sreg_range(0X1F3BA,"T",0X1,3);
	split_sreg_range(0X1F3BE,"T",0X1,3);
	split_sreg_range(0X1F3CA,"T",0X1,3);
	split_sreg_range(0X1F3D0,"T",0X1,3);
	split_sreg_range(0X1F3D4,"T",0X1,3);
	split_sreg_range(0X1F3DE,"T",0X1,3);
	split_sreg_range(0X1F3EC,"T",0X1,3);
	split_sreg_range(0X1F45E,"T",0X1,3);
	split_sreg_range(0X1F468,"T",0X1,3);
	split_sreg_range(0X1F472,"T",0X1,3);
	split_sreg_range(0X1F47A,"T",0X1,3);
	split_sreg_range(0X1F4B6,"T",0X1,3);
	split_sreg_range(0X1F4C4,"T",0X1,3);
	split_sreg_range(0X1F4D8,"T",0X1,3);
	split_sreg_range(0X1F4DA,"T",0X1,3);
	split_sreg_range(0X1F4FA,"T",0X1,3);
	split_sreg_range(0X1F50A,"T",0X1,3);
	split_sreg_range(0X1F51C,"T",0X1,3);
	split_sreg_range(0X1F53C,"T",0X1,3);
	split_sreg_range(0X1F546,"T",0X1,3);
	split_sreg_range(0X1F54A,"T",0X1,3);
	split_sreg_range(0X1F54E,"T",0X1,3);
	split_sreg_range(0X1F586,"T",0X1,3);
	split_sreg_range(0X1F5A6,"T",0X1,3);
	split_sreg_range(0X1F5AE,"T",0X1,3);
	split_sreg_range(0X1F5D4,"T",0X1,3);
	split_sreg_range(0X1F5E0,"T",0X1,3);
	split_sreg_range(0X1F5F8,"T",0X1,3);
	split_sreg_range(0X1F602,"T",0X1,3);
	split_sreg_range(0X1F604,"T",0X1,3);
	split_sreg_range(0X1F64A,"T",0X1,3);
	split_sreg_range(0X1F64C,"T",0X1,3);
	split_sreg_range(0X1F654,"T",0X1,3);
	split_sreg_range(0X1F694,"T",0X1,3);
	split_sreg_range(0X1F698,"T",0X1,3);
	split_sreg_range(0X1F6A4,"T",0X1,3);
	split_sreg_range(0X1F6AA,"T",0X1,3);
	split_sreg_range(0X1F6AE,"T",0X1,3);
	split_sreg_range(0X1F6B8,"T",0X1,3);
	split_sreg_range(0X1F6C6,"T",0X1,3);
	split_sreg_range(0X1F732,"T",0X1,3);
	split_sreg_range(0X1F73C,"T",0X1,3);
	split_sreg_range(0X1F746,"T",0X1,3);
	split_sreg_range(0X1F752,"T",0X1,3);
	split_sreg_range(0X1F78E,"T",0X1,3);
	split_sreg_range(0X1F79C,"T",0X1,3);
	split_sreg_range(0X1F7B2,"T",0X1,3);
	split_sreg_range(0X1F7B8,"T",0X1,3);
	split_sreg_range(0X1F7D8,"T",0X1,3);
	split_sreg_range(0X1F7E8,"T",0X1,3);
	split_sreg_range(0X1F7FA,"T",0X1,3);
	split_sreg_range(0X1F81A,"T",0X1,3);
	split_sreg_range(0X1F824,"T",0X1,3);
	split_sreg_range(0X1F828,"T",0X1,3);
	split_sreg_range(0X1F82A,"T",0X1,3);
	split_sreg_range(0X1F850,"T",0X1,3);
	split_sreg_range(0X1F870,"T",0X1,3);
	split_sreg_range(0X1F874,"T",0X1,3);
	split_sreg_range(0X1F88C,"T",0X1,3);
	split_sreg_range(0X1F896,"T",0X1,3);
	split_sreg_range(0X1F8AE,"T",0X1,3);
	split_sreg_range(0X1F8B8,"T",0X1,3);
	split_sreg_range(0X1F8BA,"T",0X1,3);
	split_sreg_range(0X1F8F2,"T",0X1,3);
	split_sreg_range(0X1F8F4,"T",0X1,3);
	split_sreg_range(0X1F8FC,"T",0X1,3);
	split_sreg_range(0X1F922,"T",0X1,3);
	split_sreg_range(0X1F926,"T",0X1,3);
	split_sreg_range(0X1F932,"T",0X1,3);
	split_sreg_range(0X1F938,"T",0X1,3);
	split_sreg_range(0X1F93C,"T",0X1,3);
	split_sreg_range(0X1F946,"T",0X1,3);
	split_sreg_range(0X1F954,"T",0X1,3);
	split_sreg_range(0X1F9C2,"T",0X1,3);
	split_sreg_range(0X1F9CC,"T",0X1,3);
	split_sreg_range(0X1F9D6,"T",0X1,3);
	split_sreg_range(0X1F9DE,"T",0X1,3);
	split_sreg_range(0X1FA1A,"T",0X1,3);
	split_sreg_range(0X1FA28,"T",0X1,3);
	split_sreg_range(0X1FA3E,"T",0X1,3);
	split_sreg_range(0X1FA40,"T",0X1,3);
	split_sreg_range(0X1FA60,"T",0X1,3);
	split_sreg_range(0X1FA70,"T",0X1,3);
	split_sreg_range(0X1FA82,"T",0X1,3);
	split_sreg_range(0X1FAA2,"T",0X1,3);
	split_sreg_range(0X1FAAC,"T",0X1,3);
	split_sreg_range(0X1FAB0,"T",0X1,3);
	split_sreg_range(0X1FACC,"T",0X1,3);
	split_sreg_range(0X1FAF0,"T",0X1,3);
	split_sreg_range(0X1FB10,"T",0X1,3);
	split_sreg_range(0X1FB14,"T",0X1,3);
	split_sreg_range(0X1FB2C,"T",0X1,3);
	split_sreg_range(0X1FB36,"T",0X1,3);
	split_sreg_range(0X1FB4E,"T",0X1,3);
	split_sreg_range(0X1FB58,"T",0X1,3);
	split_sreg_range(0X1FB5A,"T",0X1,3);
	split_sreg_range(0X1FBA0,"T",0X1,3);
	split_sreg_range(0X1FBA2,"T",0X1,3);
	split_sreg_range(0X1FBAA,"T",0X1,3);
	split_sreg_range(0X1FBD0,"T",0X1,3);
	split_sreg_range(0X1FBD4,"T",0X1,3);
	split_sreg_range(0X1FBE0,"T",0X1,3);
	split_sreg_range(0X1FBE6,"T",0X1,3);
	split_sreg_range(0X1FBEA,"T",0X1,3);
	split_sreg_range(0X1FBF4,"T",0X1,3);
	split_sreg_range(0X1FC02,"T",0X1,3);
	split_sreg_range(0X1FC70,"T",0X1,3);
	split_sreg_range(0X1FC7A,"T",0X1,3);
	split_sreg_range(0X1FC84,"T",0X1,3);
	split_sreg_range(0X1FC90,"T",0X1,3);
	split_sreg_range(0X1FCCC,"T",0X1,3);
	split_sreg_range(0X1FCDA,"T",0X1,3);
	split_sreg_range(0X1FCF0,"T",0X1,3);
	split_sreg_range(0X1FCF6,"T",0X1,3);
	split_sreg_range(0X1FD16,"T",0X1,3);
	split_sreg_range(0X1FD26,"T",0X1,3);
	split_sreg_range(0X1FD38,"T",0X1,3);
	split_sreg_range(0X1FD58,"T",0X1,3);
	split_sreg_range(0X1FD62,"T",0X1,3);
	split_sreg_range(0X1FD66,"T",0X1,3);
	split_sreg_range(0X1FD68,"T",0X1,3);
	split_sreg_range(0X1FD8A,"T",0X1,3);
	split_sreg_range(0X1FD90,"T",0X1,3);
	split_sreg_range(0X1FD98,"T",0X1,3);
	split_sreg_range(0X1FD9E,"T",0X1,3);
	split_sreg_range(0X1FDCC,"T",0X1,3);
	split_sreg_range(0X1FDE6,"T",0X1,3);
	split_sreg_range(0X1FDEA,"T",0X1,3);
	split_sreg_range(0X1FDEE,"T",0X1,3);
	split_sreg_range(0X1FE06,"T",0X1,3);
	split_sreg_range(0X1FE18,"T",0X1,3);
	split_sreg_range(0X1FE20,"T",0X1,3);
	split_sreg_range(0X1FE24,"T",0X1,3);
	split_sreg_range(0X1FE36,"T",0X1,3);
	split_sreg_range(0X1FE3A,"T",0X1,3);
	split_sreg_range(0X1FE48,"T",0X1,3);
	split_sreg_range(0X1FE4C,"T",0X1,3);
	split_sreg_range(0X1FE78,"T",0X1,3);
	split_sreg_range(0X1FE7A,"T",0X1,3);
	split_sreg_range(0X1FE90,"T",0X1,3);
	split_sreg_range(0X1FE92,"T",0X1,3);
	split_sreg_range(0X1FEBE,"T",0X1,3);
	split_sreg_range(0X1FECC,"T",0X1,3);
	split_sreg_range(0X1FEF2,"T",0X1,3);
	split_sreg_range(0X1FEFE,"T",0X1,3);
	split_sreg_range(0X1FF06,"T",0X1,3);
	split_sreg_range(0X1FF20,"T",0X1,3);
	split_sreg_range(0X1FF44,"T",0X1,3);
	split_sreg_range(0X1FF54,"T",0X1,3);
	split_sreg_range(0X1FF70,"T",0X1,3);
	split_sreg_range(0X1FF78,"T",0X1,3);
	split_sreg_range(0X1FFA4,"T",0X1,3);
	split_sreg_range(0X1FFB4,"T",0X1,3);
	split_sreg_range(0X1FFBA,"T",0X1,3);
	split_sreg_range(0X1FFC2,"T",0X1,3);
	split_sreg_range(0X1FFD4,"T",0X1,3);
	split_sreg_range(0X1FFEC,"T",0X1,3);
	split_sreg_range(0X1FFF4,"T",0X1,3);
	split_sreg_range(0X1FFFA,"T",0X1,3);
	split_sreg_range(0X20016,"T",0X1,3);
	split_sreg_range(0X20022,"T",0X1,3);
	split_sreg_range(0X20038,"T",0X1,3);
	split_sreg_range(0X2004E,"T",0X1,3);
	split_sreg_range(0X2005C,"T",0X1,3);
	split_sreg_range(0X2006A,"T",0X1,3);
	split_sreg_range(0X2006E,"T",0X1,3);
	split_sreg_range(0X2008A,"T",0X1,3);
	split_sreg_range(0X20092,"T",0X1,3);
	split_sreg_range(0X2009C,"T",0X1,3);
	split_sreg_range(0X200B4,"T",0X1,3);
	split_sreg_range(0X200D6,"T",0X1,3);
	split_sreg_range(0X200E8,"T",0X1,3);
	split_sreg_range(0X200F8,"T",0X1,3);
	split_sreg_range(0X200FC,"T",0X1,3);
	split_sreg_range(0X20112,"T",0X1,3);
	split_sreg_range(0X20120,"T",0X1,3);
	split_sreg_range(0X20128,"T",0X1,3);
	split_sreg_range(0X20142,"T",0X1,3);
	split_sreg_range(0X20144,"T",0X1,3);
	split_sreg_range(0X2015A,"T",0X1,3);
	split_sreg_range(0X20166,"T",0X1,3);
	split_sreg_range(0X2016E,"T",0X1,3);
	split_sreg_range(0X20170,"T",0X1,3);
	split_sreg_range(0X20180,"T",0X1,3);
	split_sreg_range(0X201A0,"T",0X1,3);
	split_sreg_range(0X201A4,"T",0X1,3);
	split_sreg_range(0X201A8,"T",0X1,3);
	split_sreg_range(0X201AC,"T",0X1,3);
	split_sreg_range(0X201B2,"T",0X1,3);
	split_sreg_range(0X201B6,"T",0X1,3);
	split_sreg_range(0X201C0,"T",0X1,3);
	split_sreg_range(0X201FC,"T",0X1,3);
	split_sreg_range(0X20212,"T",0X1,3);
	split_sreg_range(0X20244,"T",0X1,3);
	split_sreg_range(0X20246,"T",0X1,3);
	split_sreg_range(0X2024C,"T",0X1,3);
	split_sreg_range(0X20250,"T",0X1,3);
	split_sreg_range(0X20260,"T",0X1,3);
	split_sreg_range(0X20266,"T",0X1,3);
	split_sreg_range(0X2026E,"T",0X1,3);
	split_sreg_range(0X2028E,"T",0X1,3);
	split_sreg_range(0X20296,"T",0X1,3);
	split_sreg_range(0X202A2,"T",0X1,3);
	split_sreg_range(0X202B6,"T",0X1,3);
	split_sreg_range(0X202BA,"T",0X1,3);
	split_sreg_range(0X202BC,"T",0X1,3);
	split_sreg_range(0X202C0,"T",0X1,3);
	split_sreg_range(0X202D4,"T",0X1,3);
	split_sreg_range(0X202E4,"T",0X1,3);
	split_sreg_range(0X202F4,"T",0X1,3);
	split_sreg_range(0X20306,"T",0X1,3);
	split_sreg_range(0X20308,"T",0X1,3);
	split_sreg_range(0X20318,"T",0X1,3);
	split_sreg_range(0X20320,"T",0X1,3);
	split_sreg_range(0X20324,"T",0X1,3);
	split_sreg_range(0X20336,"T",0X1,3);
	split_sreg_range(0X20340,"T",0X1,3);
	split_sreg_range(0X20344,"T",0X1,3);
	split_sreg_range(0X20348,"T",0X1,3);
	split_sreg_range(0X2034C,"T",0X1,3);
	split_sreg_range(0X2035A,"T",0X1,3);
	split_sreg_range(0X2035C,"T",0X1,3);
	split_sreg_range(0X20366,"T",0X1,3);
	split_sreg_range(0X20380,"T",0X1,3);
	split_sreg_range(0X20386,"T",0X1,3);
	split_sreg_range(0X20390,"T",0X1,3);
	split_sreg_range(0X20394,"T",0X1,3);
	split_sreg_range(0X203A0,"T",0X1,3);
	split_sreg_range(0X203B0,"T",0X1,3);
	split_sreg_range(0X203B4,"T",0X1,3);
	split_sreg_range(0X203BA,"T",0X1,3);
	split_sreg_range(0X203C0,"T",0X1,3);
	split_sreg_range(0X203C8,"T",0X1,3);
	split_sreg_range(0X203DE,"T",0X1,3);
	split_sreg_range(0X203E2,"T",0X1,3);
	split_sreg_range(0X203E8,"T",0X1,3);
	split_sreg_range(0X203EA,"T",0X1,3);
	split_sreg_range(0X203F2,"T",0X1,3);
	split_sreg_range(0X20400,"T",0X1,3);
	split_sreg_range(0X20442,"T",0X1,3);
	split_sreg_range(0X20444,"T",0X1,3);
	split_sreg_range(0X20454,"T",0X1,3);
	split_sreg_range(0X2045A,"T",0X1,3);
	split_sreg_range(0X20460,"T",0X1,3);
	split_sreg_range(0X20484,"T",0X1,3);
	split_sreg_range(0X20488,"T",0X1,3);
	split_sreg_range(0X204C0,"T",0X1,3);
	split_sreg_range(0X204CA,"T",0X1,3);
	split_sreg_range(0X204DE,"T",0X1,3);
	split_sreg_range(0X204EE,"T",0X1,3);
	split_sreg_range(0X20512,"T",0X1,3);
	split_sreg_range(0X2051A,"T",0X1,3);
	split_sreg_range(0X20530,"T",0X1,3);
	split_sreg_range(0X20576,"T",0X1,3);
	split_sreg_range(0X20586,"T",0X1,3);
	split_sreg_range(0X2058A,"T",0X1,3);
	split_sreg_range(0X205B4,"T",0X1,3);
	split_sreg_range(0X205CA,"T",0X1,3);
	split_sreg_range(0X205CE,"T",0X1,3);
	split_sreg_range(0X205D8,"T",0X1,3);
	split_sreg_range(0X20618,"T",0X1,3);
	split_sreg_range(0X20622,"T",0X1,3);
	split_sreg_range(0X2062E,"T",0X1,3);
	split_sreg_range(0X2063E,"T",0X1,3);
	split_sreg_range(0X20640,"T",0X1,3);
	split_sreg_range(0X20646,"T",0X1,3);
	split_sreg_range(0X20654,"T",0X1,3);
	split_sreg_range(0X2065A,"T",0X1,3);
	split_sreg_range(0X20668,"T",0X1,3);
	split_sreg_range(0X20676,"T",0X1,3);
	split_sreg_range(0X2067C,"T",0X1,3);
	split_sreg_range(0X20684,"T",0X1,3);
	split_sreg_range(0X20686,"T",0X1,3);
	split_sreg_range(0X2068E,"T",0X1,3);
	split_sreg_range(0X20696,"T",0X1,3);
	split_sreg_range(0X20698,"T",0X1,3);
	split_sreg_range(0X206A0,"T",0X1,3);
	split_sreg_range(0X206B2,"T",0X1,3);
	split_sreg_range(0X206B6,"T",0X1,3);
	split_sreg_range(0X206BA,"T",0X1,3);
	split_sreg_range(0X206BC,"T",0X1,3);
	split_sreg_range(0X206C6,"T",0X1,3);
	split_sreg_range(0X206DC,"T",0X1,3);
	split_sreg_range(0X206E6,"T",0X1,3);
	split_sreg_range(0X206F2,"T",0X1,3);
	split_sreg_range(0X20712,"T",0X1,3);
	split_sreg_range(0X20714,"T",0X1,3);
	split_sreg_range(0X2071C,"T",0X1,3);
	split_sreg_range(0X2071E,"T",0X1,3);
	split_sreg_range(0X20736,"T",0X1,3);
	split_sreg_range(0X2073A,"T",0X1,3);
	split_sreg_range(0X2074C,"T",0X1,3);
	split_sreg_range(0X2075E,"T",0X1,3);
	split_sreg_range(0X2076C,"T",0X1,3);
	split_sreg_range(0X20776,"T",0X1,3);
	split_sreg_range(0X20786,"T",0X1,3);
	split_sreg_range(0X2079C,"T",0X1,3);
	split_sreg_range(0X207A0,"T",0X1,3);
	split_sreg_range(0X207A4,"T",0X1,3);
	split_sreg_range(0X207C4,"T",0X1,3);
	split_sreg_range(0X207CE,"T",0X1,3);
	split_sreg_range(0X207D4,"T",0X1,3);
	split_sreg_range(0X207D8,"T",0X1,3);
	split_sreg_range(0X207DC,"T",0X1,3);
	split_sreg_range(0X207E6,"T",0X1,3);
	split_sreg_range(0X207FA,"T",0X1,3);
	split_sreg_range(0X2081C,"T",0X1,3);
	split_sreg_range(0X2082A,"T",0X1,3);
	split_sreg_range(0X20832,"T",0X1,3);
	split_sreg_range(0X2083E,"T",0X1,3);
	split_sreg_range(0X20840,"T",0X1,3);
	split_sreg_range(0X2084E,"T",0X1,3);
	split_sreg_range(0X20874,"T",0X1,3);
	split_sreg_range(0X2088C,"T",0X1,3);
	split_sreg_range(0X20890,"T",0X1,3);
	split_sreg_range(0X208AE,"T",0X1,3);
	split_sreg_range(0X208CC,"T",0X1,3);
	split_sreg_range(0X208CE,"T",0X1,3);
	split_sreg_range(0X208D0,"T",0X1,3);
	split_sreg_range(0X208DC,"T",0X1,3);
	split_sreg_range(0X208E8,"T",0X1,3);
	split_sreg_range(0X20900,"T",0X1,3);
	split_sreg_range(0X2091C,"T",0X1,3);
	split_sreg_range(0X20928,"T",0X1,3);
	split_sreg_range(0X2092C,"T",0X1,3);
	split_sreg_range(0X20930,"T",0X1,3);
	split_sreg_range(0X2094C,"T",0X1,3);
	split_sreg_range(0X2097A,"T",0X1,3);
	split_sreg_range(0X20986,"T",0X1,3);
	split_sreg_range(0X2098C,"T",0X1,3);
	split_sreg_range(0X2098E,"T",0X1,3);
	split_sreg_range(0X20998,"T",0X1,3);
	split_sreg_range(0X209A2,"T",0X1,3);
	split_sreg_range(0X209C8,"T",0X1,3);
	split_sreg_range(0X209D2,"T",0X1,3);
	split_sreg_range(0X209E4,"T",0X1,3);
	split_sreg_range(0X20A06,"T",0X1,3);
	split_sreg_range(0X20A0C,"T",0X1,3);
	split_sreg_range(0X20A24,"T",0X1,3);
	split_sreg_range(0X20A38,"T",0X1,3);
	split_sreg_range(0X20A3E,"T",0X1,3);
	split_sreg_range(0X20A4A,"T",0X1,3);
	split_sreg_range(0X20A52,"T",0X1,3);
	split_sreg_range(0X20A54,"T",0X1,3);
	split_sreg_range(0X20A6A,"T",0X1,3);
	split_sreg_range(0X20A70,"T",0X1,3);
	split_sreg_range(0X20A74,"T",0X1,3);
	split_sreg_range(0X20A78,"T",0X1,3);
	split_sreg_range(0X20A82,"T",0X1,3);
	split_sreg_range(0X20A8E,"T",0X1,3);
	split_sreg_range(0X20A90,"T",0X1,3);
	split_sreg_range(0X20AA2,"T",0X1,3);
	split_sreg_range(0X20AAA,"T",0X1,3);
	split_sreg_range(0X20AAC,"T",0X1,3);
	split_sreg_range(0X20AAE,"T",0X1,3);
	split_sreg_range(0X20AD0,"T",0X1,3);
	split_sreg_range(0X20AD4,"T",0X1,3);
	split_sreg_range(0X20AE8,"T",0X1,3);
	split_sreg_range(0X20AF6,"T",0X1,3);
	split_sreg_range(0X20B16,"T",0X1,3);
	split_sreg_range(0X20B1E,"T",0X1,3);
	split_sreg_range(0X20B20,"T",0X1,3);
	split_sreg_range(0X20B24,"T",0X1,3);
	split_sreg_range(0X20B3C,"T",0X1,3);
	split_sreg_range(0X20B46,"T",0X1,3);
	split_sreg_range(0X20B50,"T",0X1,3);
	split_sreg_range(0X20B52,"T",0X1,3);
	split_sreg_range(0X20B56,"T",0X1,3);
	split_sreg_range(0X20B80,"T",0X1,3);
	split_sreg_range(0X20B96,"T",0X1,3);
	split_sreg_range(0X20BAC,"T",0X1,3);
	split_sreg_range(0X20BC2,"T",0X1,3);
	split_sreg_range(0X20BD8,"T",0X1,3);
	split_sreg_range(0X20BEA,"T",0X1,3);
	split_sreg_range(0X20BFE,"T",0X1,3);
	split_sreg_range(0X20C02,"T",0X1,3);
	split_sreg_range(0X20C10,"T",0X1,3);
	split_sreg_range(0X20C24,"T",0X1,3);
	split_sreg_range(0X20C4A,"T",0X1,3);
	split_sreg_range(0X20C50,"T",0X1,3);
	split_sreg_range(0X20C76,"T",0X1,3);
	split_sreg_range(0X20CA4,"T",0X1,3);
	split_sreg_range(0X20CA6,"T",0X1,3);
	split_sreg_range(0X20CAA,"T",0X1,3);
	split_sreg_range(0X20CAE,"T",0X1,3);
	split_sreg_range(0X20CBA,"T",0X1,3);
	split_sreg_range(0X20CC4,"T",0X1,3);
	split_sreg_range(0X20CC6,"T",0X1,3);
	split_sreg_range(0X20CEE,"T",0X1,3);
	split_sreg_range(0X20D0A,"T",0X1,3);
	split_sreg_range(0X20D28,"T",0X1,3);
	split_sreg_range(0X20D3A,"T",0X1,3);
	split_sreg_range(0X20D56,"T",0X1,3);
	split_sreg_range(0X20D62,"T",0X1,3);
	split_sreg_range(0X20D70,"T",0X1,3);
	split_sreg_range(0X20D82,"T",0X1,3);
	split_sreg_range(0X20D94,"T",0X1,3);
	split_sreg_range(0X20DBC,"T",0X1,3);
	split_sreg_range(0X20DC4,"T",0X1,3);
	split_sreg_range(0X20DC6,"T",0X1,3);
	split_sreg_range(0X20DD0,"T",0X1,3);
	split_sreg_range(0X20DDA,"T",0X1,3);
	split_sreg_range(0X20DE0,"T",0X1,3);
	split_sreg_range(0X20DF0,"T",0X1,3);
	split_sreg_range(0X20E16,"T",0X1,3);
	split_sreg_range(0X20E22,"T",0X1,3);
	split_sreg_range(0X20E2A,"T",0X1,3);
	split_sreg_range(0X20E2C,"T",0X1,3);
	split_sreg_range(0X20E36,"T",0X1,3);
	split_sreg_range(0X20E58,"T",0X1,3);
	split_sreg_range(0X20E5E,"T",0X1,3);
	split_sreg_range(0X20E66,"T",0X1,3);
	split_sreg_range(0X20E6A,"T",0X1,3);
	split_sreg_range(0X20E6C,"T",0X1,3);
	split_sreg_range(0X20E7A,"T",0X1,3);
	split_sreg_range(0X20E88,"T",0X1,3);
	split_sreg_range(0X20EB4,"T",0X1,3);
	split_sreg_range(0X20ED0,"T",0X1,3);
	split_sreg_range(0X20EE8,"T",0X1,3);
	split_sreg_range(0X20F04,"T",0X1,3);
	split_sreg_range(0X20F3A,"T",0X1,3);
	split_sreg_range(0X20F5E,"T",0X1,3);
	split_sreg_range(0X20F64,"T",0X1,3);
	split_sreg_range(0X20F6C,"T",0X1,3);
	split_sreg_range(0X20F74,"T",0X1,3);
	split_sreg_range(0X20FF6,"T",0X1,3);
	split_sreg_range(0X20FFE,"T",0X1,3);
	split_sreg_range(0X21010,"T",0X1,3);
	split_sreg_range(0X21012,"T",0X1,3);
	split_sreg_range(0X21034,"T",0X1,3);
	split_sreg_range(0X21052,"T",0X1,3);
	split_sreg_range(0X2105E,"T",0X1,3);
	split_sreg_range(0X21072,"T",0X1,3);
	split_sreg_range(0X2107A,"T",0X1,3);
	split_sreg_range(0X21084,"T",0X1,3);
	split_sreg_range(0X21092,"T",0X1,3);
	split_sreg_range(0X21096,"T",0X1,3);
	split_sreg_range(0X2109A,"T",0X1,3);
	split_sreg_range(0X210A2,"T",0X1,3);
	split_sreg_range(0X210B0,"T",0X1,3);
	split_sreg_range(0X210B2,"T",0X1,3);
	split_sreg_range(0X210B6,"T",0X1,3);
	split_sreg_range(0X210BC,"T",0X1,3);
	split_sreg_range(0X210BE,"T",0X1,3);
	split_sreg_range(0X210C2,"T",0X1,3);
	split_sreg_range(0X21102,"T",0X1,3);
	split_sreg_range(0X21114,"T",0X1,3);
	split_sreg_range(0X21126,"T",0X1,3);
	split_sreg_range(0X21128,"T",0X1,3);
	split_sreg_range(0X21136,"T",0X1,3);
	split_sreg_range(0X2113A,"T",0X1,3);
	split_sreg_range(0X21146,"T",0X1,3);
	split_sreg_range(0X21154,"T",0X1,3);
	split_sreg_range(0X2115E,"T",0X1,3);
	split_sreg_range(0X21166,"T",0X1,3);
	split_sreg_range(0X21174,"T",0X1,3);
	split_sreg_range(0X2117A,"T",0X1,3);
	split_sreg_range(0X21184,"T",0X1,3);
	split_sreg_range(0X2118A,"T",0X1,3);
	split_sreg_range(0X21196,"T",0X1,3);
	split_sreg_range(0X211A2,"T",0X1,3);
	split_sreg_range(0X211B6,"T",0X1,3);
	split_sreg_range(0X211BE,"T",0X1,3);
	split_sreg_range(0X211E6,"T",0X1,3);
	split_sreg_range(0X211F0,"T",0X1,3);
	split_sreg_range(0X211F6,"T",0X1,3);
	split_sreg_range(0X21200,"T",0X1,3);
	split_sreg_range(0X2120C,"T",0X1,3);
	split_sreg_range(0X21216,"T",0X1,3);
	split_sreg_range(0X21218,"T",0X1,3);
	split_sreg_range(0X2122E,"T",0X1,3);
	split_sreg_range(0X2123C,"T",0X1,3);
	split_sreg_range(0X21240,"T",0X1,3);
	split_sreg_range(0X21258,"T",0X1,3);
	split_sreg_range(0X2127E,"T",0X1,3);
	split_sreg_range(0X2128C,"T",0X1,3);
	split_sreg_range(0X21292,"T",0X1,3);
	split_sreg_range(0X2129C,"T",0X1,3);
	split_sreg_range(0X212AC,"T",0X1,3);
	split_sreg_range(0X212AE,"T",0X1,3);
	split_sreg_range(0X212CE,"T",0X1,3);
	split_sreg_range(0X212D0,"T",0X1,3);
	split_sreg_range(0X212DE,"T",0X1,3);
	split_sreg_range(0X212E8,"T",0X1,3);
	split_sreg_range(0X212EA,"T",0X1,3);
	split_sreg_range(0X212EE,"T",0X1,3);
	split_sreg_range(0X212F2,"T",0X1,3);
	split_sreg_range(0X212FC,"T",0X1,3);
	split_sreg_range(0X21304,"T",0X1,3);
	split_sreg_range(0X2130E,"T",0X1,3);
	split_sreg_range(0X2131C,"T",0X1,3);
	split_sreg_range(0X21338,"T",0X1,3);
	split_sreg_range(0X2133A,"T",0X1,3);
	split_sreg_range(0X21344,"T",0X1,3);
	split_sreg_range(0X2135C,"T",0X1,3);
	split_sreg_range(0X2136C,"T",0X1,3);
	split_sreg_range(0X2136E,"T",0X1,3);
	split_sreg_range(0X21376,"T",0X1,3);
	split_sreg_range(0X21384,"T",0X1,3);
	split_sreg_range(0X213A0,"T",0X1,3);
	split_sreg_range(0X213B0,"T",0X1,3);
	split_sreg_range(0X213BE,"T",0X1,3);
	split_sreg_range(0X213CC,"T",0X1,3);
	split_sreg_range(0X213CE,"T",0X1,3);
	split_sreg_range(0X213FC,"T",0X1,3);
	split_sreg_range(0X21406,"T",0X1,3);
	split_sreg_range(0X21416,"T",0X1,3);
	split_sreg_range(0X21424,"T",0X1,3);
	split_sreg_range(0X2142A,"T",0X1,3);
	split_sreg_range(0X21436,"T",0X1,3);
	split_sreg_range(0X2143A,"T",0X1,3);
	split_sreg_range(0X2143E,"T",0X1,3);
	split_sreg_range(0X2144E,"T",0X1,3);
	split_sreg_range(0X21456,"T",0X1,3);
	split_sreg_range(0X21462,"T",0X1,3);
	split_sreg_range(0X21466,"T",0X1,3);
	split_sreg_range(0X2146A,"T",0X1,3);
	split_sreg_range(0X2147A,"T",0X1,3);
	split_sreg_range(0X21484,"T",0X1,3);
	split_sreg_range(0X2149C,"T",0X1,3);
	split_sreg_range(0X214B2,"T",0X1,3);
	split_sreg_range(0X214CC,"T",0X1,3);
	split_sreg_range(0X214CE,"T",0X1,3);
	split_sreg_range(0X214E2,"T",0X1,3);
	split_sreg_range(0X214E4,"T",0X1,3);
	split_sreg_range(0X214F0,"T",0X1,3);
	split_sreg_range(0X214F4,"T",0X1,3);
	split_sreg_range(0X214FE,"T",0X1,3);
	split_sreg_range(0X21504,"T",0X1,3);
	split_sreg_range(0X21506,"T",0X1,3);
	split_sreg_range(0X21520,"T",0X1,3);
	split_sreg_range(0X21524,"T",0X1,3);
	split_sreg_range(0X2154A,"T",0X1,3);
	split_sreg_range(0X21552,"T",0X1,3);
	split_sreg_range(0X2156C,"T",0X1,3);
	split_sreg_range(0X2157E,"T",0X1,3);
	split_sreg_range(0X21584,"T",0X1,3);
	split_sreg_range(0X2158A,"T",0X1,3);
	split_sreg_range(0X2159C,"T",0X1,3);
	split_sreg_range(0X215A0,"T",0X1,3);
	split_sreg_range(0X215A8,"T",0X1,3);
	split_sreg_range(0X215C8,"T",0X1,3);
	split_sreg_range(0X215D2,"T",0X1,3);
	split_sreg_range(0X215E4,"T",0X1,3);
	split_sreg_range(0X215E6,"T",0X1,3);
	split_sreg_range(0X215FE,"T",0X1,3);
	split_sreg_range(0X21610,"T",0X1,3);
	split_sreg_range(0X2162A,"T",0X1,3);
	split_sreg_range(0X2162C,"T",0X1,3);
	split_sreg_range(0X2163C,"T",0X1,3);
	split_sreg_range(0X2164E,"T",0X1,3);
	split_sreg_range(0X21664,"T",0X1,3);
	split_sreg_range(0X2166C,"T",0X1,3);
	split_sreg_range(0X21678,"T",0X1,3);
	split_sreg_range(0X2167C,"T",0X1,3);
	split_sreg_range(0X2168E,"T",0X1,3);
	split_sreg_range(0X2169A,"T",0X1,3);
	split_sreg_range(0X216AC,"T",0X1,3);
	split_sreg_range(0X216BA,"T",0X1,3);
	split_sreg_range(0X216C6,"T",0X1,3);
	split_sreg_range(0X216C8,"T",0X1,3);
	split_sreg_range(0X216CC,"T",0X1,3);
	split_sreg_range(0X216D8,"T",0X1,3);
	split_sreg_range(0X216EE,"T",0X1,3);
	split_sreg_range(0X216F6,"T",0X1,3);
	split_sreg_range(0X216FA,"T",0X1,3);
	split_sreg_range(0X2171A,"T",0X1,3);
	split_sreg_range(0X21724,"T",0X1,3);
	split_sreg_range(0X2172E,"T",0X1,3);
	split_sreg_range(0X21738,"T",0X1,3);
	split_sreg_range(0X2174E,"T",0X1,3);
	split_sreg_range(0X2175E,"T",0X1,3);
	split_sreg_range(0X21760,"T",0X1,3);
	split_sreg_range(0X21788,"T",0X1,3);
	split_sreg_range(0X217A8,"T",0X1,3);
	split_sreg_range(0X217AA,"T",0X1,3);
	split_sreg_range(0X217BE,"T",0X1,3);
	split_sreg_range(0X217C4,"T",0X1,3);
	split_sreg_range(0X217C8,"T",0X1,3);
	split_sreg_range(0X217D4,"T",0X1,3);
	split_sreg_range(0X217D8,"T",0X1,3);
	split_sreg_range(0X217DE,"T",0X1,3);
	split_sreg_range(0X217E2,"T",0X1,3);
	split_sreg_range(0X217EA,"T",0X1,3);
	split_sreg_range(0X217F8,"T",0X1,3);
	split_sreg_range(0X2183C,"T",0X1,3);
	split_sreg_range(0X2183E,"T",0X1,3);
	split_sreg_range(0X2184E,"T",0X1,3);
	split_sreg_range(0X21866,"T",0X1,3);
	split_sreg_range(0X2186A,"T",0X1,3);
	split_sreg_range(0X21876,"T",0X1,3);
	split_sreg_range(0X21894,"T",0X1,3);
	split_sreg_range(0X218A4,"T",0X1,3);
	split_sreg_range(0X218A8,"T",0X1,3);
	split_sreg_range(0X218BE,"T",0X1,3);
	split_sreg_range(0X218C2,"T",0X1,3);
	split_sreg_range(0X218D4,"T",0X1,3);
	split_sreg_range(0X218F8,"T",0X1,3);
	split_sreg_range(0X2190E,"T",0X1,3);
	split_sreg_range(0X21914,"T",0X1,3);
	split_sreg_range(0X21924,"T",0X1,3);
	split_sreg_range(0X2193E,"T",0X1,3);
	split_sreg_range(0X21942,"T",0X1,3);
	split_sreg_range(0X21948,"T",0X1,3);
	split_sreg_range(0X2194A,"T",0X1,3);
	split_sreg_range(0X2195C,"T",0X1,3);
	split_sreg_range(0X21972,"T",0X1,3);
	split_sreg_range(0X21978,"T",0X1,3);
	split_sreg_range(0X2197C,"T",0X1,3);
	split_sreg_range(0X21986,"T",0X1,3);
	split_sreg_range(0X219A4,"T",0X1,3);
	split_sreg_range(0X219E0,"T",0X1,3);
	split_sreg_range(0X21A18,"T",0X1,3);
	split_sreg_range(0X21A1E,"T",0X1,3);
	split_sreg_range(0X21A24,"T",0X1,3);
	split_sreg_range(0X21A2E,"T",0X1,3);
	split_sreg_range(0X21A4C,"T",0X1,3);
	split_sreg_range(0X21A56,"T",0X1,3);
	split_sreg_range(0X21A64,"T",0X1,3);
	split_sreg_range(0X21A86,"T",0X1,3);
	split_sreg_range(0X21A8C,"T",0X1,3);
	split_sreg_range(0X21A90,"T",0X1,3);
	split_sreg_range(0X21A96,"T",0X1,3);
	split_sreg_range(0X21AA4,"T",0X1,3);
	split_sreg_range(0X21AB8,"T",0X1,3);
	split_sreg_range(0X21AF6,"T",0X1,3);
	split_sreg_range(0X21B04,"T",0X1,3);
	split_sreg_range(0X21B14,"T",0X1,3);
	split_sreg_range(0X21B18,"T",0X1,3);
	split_sreg_range(0X21B22,"T",0X1,3);
	split_sreg_range(0X21B30,"T",0X1,3);
	split_sreg_range(0X21B40,"T",0X1,3);
	split_sreg_range(0X21B48,"T",0X1,3);
	split_sreg_range(0X21B5E,"T",0X1,3);
	split_sreg_range(0X21B7A,"T",0X1,3);
	split_sreg_range(0X21B7C,"T",0X1,3);
	split_sreg_range(0X21B90,"T",0X1,3);
	split_sreg_range(0X21B92,"T",0X1,3);
	split_sreg_range(0X21BBC,"T",0X1,3);
	split_sreg_range(0X21BC8,"T",0X1,3);
	split_sreg_range(0X21BCA,"T",0X1,3);
	split_sreg_range(0X21BEE,"T",0X1,3);
	split_sreg_range(0X21BF0,"T",0X1,3);
	split_sreg_range(0X21BF2,"T",0X1,3);
	split_sreg_range(0X21C1E,"T",0X1,3);
	split_sreg_range(0X21C24,"T",0X1,3);
	split_sreg_range(0X21C26,"T",0X1,3);
	split_sreg_range(0X21C2C,"T",0X1,3);
	split_sreg_range(0X21C2E,"T",0X1,3);
	split_sreg_range(0X21C3C,"T",0X1,3);
	split_sreg_range(0X21C4A,"T",0X1,3);
	split_sreg_range(0X21C52,"T",0X1,3);
	split_sreg_range(0X21C70,"T",0X1,3);
	split_sreg_range(0X21C90,"T",0X1,3);
	split_sreg_range(0X21CAA,"T",0X1,3);
	split_sreg_range(0X21CBC,"T",0X1,3);
	split_sreg_range(0X21CF4,"T",0X1,3);
	split_sreg_range(0X21CFE,"T",0X1,3);
	split_sreg_range(0X21D1A,"T",0X1,3);
	split_sreg_range(0X21D28,"T",0X1,3);
	split_sreg_range(0X21D2C,"T",0X1,3);
	split_sreg_range(0X21D32,"T",0X1,3);
	split_sreg_range(0X21D3C,"T",0X1,3);
	split_sreg_range(0X21D44,"T",0X1,3);
	split_sreg_range(0X21D88,"T",0X1,3);
	split_sreg_range(0X21D8E,"T",0X1,3);
	split_sreg_range(0X21D96,"T",0X1,3);
	split_sreg_range(0X21DA6,"T",0X1,3);
	split_sreg_range(0X21DAE,"T",0X1,3);
	split_sreg_range(0X21DBA,"T",0X1,3);
	split_sreg_range(0X21DD0,"T",0X1,3);
	split_sreg_range(0X21DDC,"T",0X1,3);
	split_sreg_range(0X21DF0,"T",0X1,3);
	split_sreg_range(0X21E04,"T",0X1,3);
	split_sreg_range(0X21E08,"T",0X1,3);
	split_sreg_range(0X21E50,"T",0X1,3);
	split_sreg_range(0X21E58,"T",0X1,3);
	split_sreg_range(0X21E84,"T",0X1,3);
	split_sreg_range(0X21EA0,"T",0X1,3);
	split_sreg_range(0X21EAC,"T",0X1,3);
	split_sreg_range(0X21EB2,"T",0X1,3);
	split_sreg_range(0X21EB8,"T",0X1,3);
	split_sreg_range(0X21EBA,"T",0X1,3);
	split_sreg_range(0X21EF8,"T",0X1,3);
	split_sreg_range(0X21F3E,"T",0X1,3);
	split_sreg_range(0X21F9E,"T",0X1,3);
	split_sreg_range(0X22240,"T",0X1,3);
	split_sreg_range(0X222D8,"T",0X1,3);
	split_sreg_range(0X2231C,"T",0X1,3);
	split_sreg_range(0X2232C,"T",0X1,3);
	split_sreg_range(0X22330,"T",0X1,3);
	split_sreg_range(0X22334,"T",0X1,3);
	split_sreg_range(0X2236E,"T",0X1,3);
	split_sreg_range(0X22378,"T",0X1,3);
	split_sreg_range(0X2237E,"T",0X1,3);
	split_sreg_range(0X223CC,"T",0X1,3);
	split_sreg_range(0X223F2,"T",0X1,3);
	split_sreg_range(0X22414,"T",0X1,3);
	split_sreg_range(0X2241A,"T",0X1,3);
	split_sreg_range(0X2243C,"T",0X1,3);
	split_sreg_range(0X22442,"T",0X1,3);
	split_sreg_range(0X22464,"T",0X1,3);
	split_sreg_range(0X2246A,"T",0X1,3);
	split_sreg_range(0X2248C,"T",0X1,3);
	split_sreg_range(0X22492,"T",0X1,3);
	split_sreg_range(0X2259C,"T",0X1,3);
	split_sreg_range(0X225AC,"T",0X1,3);
	split_sreg_range(0X2261C,"T",0X1,3);
	split_sreg_range(0X22692,"T",0X1,3);
	split_sreg_range(0X226D8,"T",0X1,3);
	split_sreg_range(0X226F8,"T",0X1,3);
	split_sreg_range(0X2270E,"T",0X1,3);
	split_sreg_range(0X2276C,"T",0X1,3);
	split_sreg_range(0X22780,"T",0X1,3);
	split_sreg_range(0X227A6,"T",0X1,3);
	split_sreg_range(0X227B6,"T",0X1,3);
	split_sreg_range(0X227C8,"T",0X1,3);
	split_sreg_range(0X227D8,"T",0X1,3);
	split_sreg_range(0X227FA,"T",0X1,3);
	split_sreg_range(0X22804,"T",0X1,3);
	split_sreg_range(0X2282A,"T",0X1,3);
	split_sreg_range(0X22832,"T",0X1,3);
	split_sreg_range(0X22834,"T",0X1,3);
	split_sreg_range(0X22844,"T",0X1,3);
	split_sreg_range(0X2286A,"T",0X1,3);
	split_sreg_range(0X22872,"T",0X1,3);
	split_sreg_range(0X22878,"T",0X1,3);
	split_sreg_range(0X22880,"T",0X1,3);
	split_sreg_range(0X22882,"T",0X1,3);
	split_sreg_range(0X22890,"T",0X1,3);
	split_sreg_range(0X22896,"T",0X1,3);
	split_sreg_range(0X2289C,"T",0X1,3);
	split_sreg_range(0X2289E,"T",0X1,3);
	split_sreg_range(0X228AA,"T",0X1,3);
	split_sreg_range(0X228B2,"T",0X1,3);
	split_sreg_range(0X228B6,"T",0X1,3);
	split_sreg_range(0X228CC,"T",0X1,3);
	split_sreg_range(0X228F4,"T",0X1,3);
	split_sreg_range(0X228FC,"T",0X1,3);
	split_sreg_range(0X22908,"T",0X1,3);
	split_sreg_range(0X2291C,"T",0X1,3);
	split_sreg_range(0X22920,"T",0X1,3);
	split_sreg_range(0X22926,"T",0X1,3);
	split_sreg_range(0X22934,"T",0X1,3);
	split_sreg_range(0X22938,"T",0X1,3);
	split_sreg_range(0X2293C,"T",0X1,3);
	split_sreg_range(0X22948,"T",0X1,3);
	split_sreg_range(0X22968,"T",0X1,3);
	split_sreg_range(0X2297C,"T",0X1,3);
	split_sreg_range(0X22988,"T",0X1,3);
	split_sreg_range(0X2298C,"T",0X1,3);
	split_sreg_range(0X229A2,"T",0X1,3);
	split_sreg_range(0X229A6,"T",0X1,3);
	split_sreg_range(0X229B6,"T",0X1,3);
	split_sreg_range(0X229BA,"T",0X1,3);
	split_sreg_range(0X229C8,"T",0X1,3);
	split_sreg_range(0X229F2,"T",0X1,3);
	split_sreg_range(0X229F6,"T",0X1,3);
	split_sreg_range(0X229F8,"T",0X1,3);
	split_sreg_range(0X22A08,"T",0X1,3);
	split_sreg_range(0X22A34,"T",0X1,3);
	split_sreg_range(0X22A44,"T",0X1,3);
	split_sreg_range(0X22A60,"T",0X1,3);
	split_sreg_range(0X22A6C,"T",0X1,3);
	split_sreg_range(0X22A7C,"T",0X1,3);
	split_sreg_range(0X22A8E,"T",0X1,3);
	split_sreg_range(0X22AB4,"T",0X1,3);
	split_sreg_range(0X22AB8,"T",0X1,3);
	split_sreg_range(0X22ABC,"T",0X1,3);
	split_sreg_range(0X22AC0,"T",0X1,3);
	split_sreg_range(0X22AC4,"T",0X1,3);
	split_sreg_range(0X22ADA,"T",0X1,3);
	split_sreg_range(0X22ADE,"T",0X1,3);
	split_sreg_range(0X22AFA,"T",0X1,3);
	split_sreg_range(0X22AFC,"T",0X1,3);
	split_sreg_range(0X22AFE,"T",0X1,3);
	split_sreg_range(0X22B06,"T",0X1,3);
	split_sreg_range(0X22B0A,"T",0X1,3);
	split_sreg_range(0X22B14,"T",0X1,3);
	split_sreg_range(0X22B26,"T",0X1,3);
	split_sreg_range(0X22B3A,"T",0X1,3);
	split_sreg_range(0X22B52,"T",0X1,3);
	split_sreg_range(0X22B5E,"T",0X1,3);
	split_sreg_range(0X22B60,"T",0X1,3);
	split_sreg_range(0X22B64,"T",0X1,3);
	split_sreg_range(0X22B70,"T",0X1,3);
	split_sreg_range(0X22B8A,"T",0X1,3);
	split_sreg_range(0X22B8E,"T",0X1,3);
	split_sreg_range(0X22BA6,"T",0X1,3);
	split_sreg_range(0X22BB6,"T",0X1,3);
	split_sreg_range(0X22BC4,"T",0X1,3);
	split_sreg_range(0X22BEA,"T",0X1,3);
	split_sreg_range(0X22C0A,"T",0X1,3);
	split_sreg_range(0X22C10,"T",0X1,3);
	split_sreg_range(0X22C42,"T",0X1,3);
	split_sreg_range(0X22C66,"T",0X1,3);
	split_sreg_range(0X22C68,"T",0X1,3);
	split_sreg_range(0X22C6A,"T",0X1,3);
	split_sreg_range(0X22C7C,"T",0X1,3);
	split_sreg_range(0X22CA4,"T",0X1,3);
	split_sreg_range(0X22CCE,"T",0X1,3);
	split_sreg_range(0X22CFE,"T",0X1,3);
	split_sreg_range(0X22D14,"T",0X1,3);
	split_sreg_range(0X22D1C,"T",0X1,3);
	split_sreg_range(0X22D32,"T",0X1,3);
	split_sreg_range(0X22D48,"T",0X1,3);
	split_sreg_range(0X22D52,"T",0X1,3);
	split_sreg_range(0X22DA6,"T",0X1,3);
	split_sreg_range(0X22E2A,"T",0X1,3);
	split_sreg_range(0X22E4C,"T",0X1,3);
	split_sreg_range(0X22E78,"T",0X1,3);
	split_sreg_range(0X22E98,"T",0X1,3);
	split_sreg_range(0X22EA4,"T",0X1,3);
	split_sreg_range(0X22ED8,"T",0X1,3);
	split_sreg_range(0X22EDC,"T",0X1,3);
	split_sreg_range(0X22EE0,"T",0X1,3);
	split_sreg_range(0X22EE2,"T",0X1,3);
	split_sreg_range(0X22FD4,"T",0X1,3);
	split_sreg_range(0X2302C,"T",0X1,3);
	split_sreg_range(0X23050,"T",0X1,3);
	split_sreg_range(0X230CA,"T",0X1,3);
	split_sreg_range(0X23128,"T",0X1,3);
	split_sreg_range(0X23142,"T",0X1,3);
	split_sreg_range(0X2315E,"T",0X1,3);
	split_sreg_range(0X2318E,"T",0X1,3);
	split_sreg_range(0X231AE,"T",0X1,3);
	split_sreg_range(0X231D4,"T",0X1,3);
	split_sreg_range(0X23200,"T",0X1,3);
	split_sreg_range(0X2328A,"T",0X1,3);
	split_sreg_range(0X232C0,"T",0X1,3);
	split_sreg_range(0X232D0,"T",0X1,3);
	split_sreg_range(0X232D6,"T",0X1,3);
	split_sreg_range(0X232DA,"T",0X1,3);
	split_sreg_range(0X232E6,"T",0X1,3);
	split_sreg_range(0X232F4,"T",0X1,3);
	split_sreg_range(0X23304,"T",0X1,3);
	split_sreg_range(0X2330E,"T",0X1,3);
	split_sreg_range(0X23314,"T",0X1,3);
	split_sreg_range(0X2331C,"T",0X1,3);
	split_sreg_range(0X2332C,"T",0X1,3);
	split_sreg_range(0X23382,"T",0X1,3);
	split_sreg_range(0X233A4,"T",0X1,3);
	split_sreg_range(0X233B4,"T",0X1,3);
	split_sreg_range(0X233CA,"T",0X1,3);
	split_sreg_range(0X233D4,"T",0X1,3);
	split_sreg_range(0X233D8,"T",0X1,3);
	split_sreg_range(0X23404,"T",0X1,3);
	split_sreg_range(0X23406,"T",0X1,3);
	split_sreg_range(0X2340E,"T",0X1,3);
	split_sreg_range(0X23440,"T",0X1,3);
	split_sreg_range(0X23448,"T",0X1,3);
	split_sreg_range(0X23458,"T",0X1,3);
	split_sreg_range(0X23464,"T",0X1,3);
	split_sreg_range(0X23474,"T",0X1,3);
	split_sreg_range(0X234AA,"T",0X1,3);
	split_sreg_range(0X234CC,"T",0X1,3);
	split_sreg_range(0X23522,"T",0X1,3);
	split_sreg_range(0X23538,"T",0X1,3);
	split_sreg_range(0X23540,"T",0X1,3);
	split_sreg_range(0X2355A,"T",0X1,3);
	split_sreg_range(0X23564,"T",0X1,3);
	split_sreg_range(0X23584,"T",0X1,3);
	split_sreg_range(0X23598,"T",0X1,3);
	split_sreg_range(0X235A2,"T",0X1,3);
	split_sreg_range(0X2362E,"T",0X1,3);
	split_sreg_range(0X236A2,"T",0X1,3);
	split_sreg_range(0X236B4,"T",0X1,3);
	split_sreg_range(0X237C8,"T",0X1,3);
	split_sreg_range(0X237F0,"T",0X1,3);
	split_sreg_range(0X23846,"T",0X1,3);
	split_sreg_range(0X2389C,"T",0X1,3);
	split_sreg_range(0X238B6,"T",0X1,3);
	split_sreg_range(0X238C0,"T",0X1,3);
	split_sreg_range(0X238DE,"T",0X1,3);
	split_sreg_range(0X238F0,"T",0X1,3);
	split_sreg_range(0X238FE,"T",0X1,3);
	split_sreg_range(0X23980,"T",0X1,3);
	split_sreg_range(0X23990,"T",0X1,3);
	split_sreg_range(0X23A44,"T",0X1,3);
	split_sreg_range(0X23A8C,"T",0X1,3);
	split_sreg_range(0X23A8E,"T",0X1,3);
	split_sreg_range(0X23AAC,"T",0X1,3);
	split_sreg_range(0X23ABE,"T",0X1,3);
	split_sreg_range(0X23ADC,"T",0X1,3);
	split_sreg_range(0X23AEE,"T",0X1,3);
	split_sreg_range(0X23B34,"T",0X1,3);
	split_sreg_range(0X23B86,"T",0X1,3);
	split_sreg_range(0X23B90,"T",0X1,3);
	split_sreg_range(0X23B9A,"T",0X1,3);
	split_sreg_range(0X23B9E,"T",0X1,3);
	split_sreg_range(0X23BBE,"T",0X1,3);
	split_sreg_range(0X23BCE,"T",0X1,3);
	split_sreg_range(0X23C10,"T",0X1,3);
	split_sreg_range(0X23C22,"T",0X1,3);
	split_sreg_range(0X23C2A,"T",0X1,3);
	split_sreg_range(0X23C40,"T",0X1,3);
	split_sreg_range(0X23C50,"T",0X1,3);
	split_sreg_range(0X23C64,"T",0X1,3);
	split_sreg_range(0X23C9C,"T",0X1,3);
	split_sreg_range(0X23CAC,"T",0X1,3);
	split_sreg_range(0X23CBA,"T",0X1,3);
	split_sreg_range(0X23CD0,"T",0X1,3);
	split_sreg_range(0X23CE4,"T",0X1,3);
	split_sreg_range(0X23CF2,"T",0X1,3);
	split_sreg_range(0X23D06,"T",0X1,3);
	split_sreg_range(0X23D0E,"T",0X1,3);
	split_sreg_range(0X23D34,"T",0X1,3);
	split_sreg_range(0X23D44,"T",0X1,3);
	split_sreg_range(0X23D64,"T",0X1,3);
	split_sreg_range(0X23D6C,"T",0X1,3);
	split_sreg_range(0X23D86,"T",0X1,3);
	split_sreg_range(0X23D98,"T",0X1,3);
	split_sreg_range(0X23DA4,"T",0X1,3);
	split_sreg_range(0X23DAE,"T",0X1,3);
	split_sreg_range(0X23DBA,"T",0X1,3);
	split_sreg_range(0X23DC4,"T",0X1,3);
	split_sreg_range(0X23DFA,"T",0X1,3);
	split_sreg_range(0X23E00,"T",0X1,3);
	split_sreg_range(0X23E14,"T",0X1,3);
	split_sreg_range(0X23E24,"T",0X1,3);
	split_sreg_range(0X23E30,"T",0X1,3);
	split_sreg_range(0X23E3A,"T",0X1,3);
	split_sreg_range(0X23E44,"T",0X1,3);
	split_sreg_range(0X23E6A,"T",0X1,3);
	split_sreg_range(0X23E82,"T",0X1,3);
	split_sreg_range(0X23EE2,"T",0X1,3);
	split_sreg_range(0X23EE4,"T",0X1,3);
	split_sreg_range(0X23F34,"T",0X1,3);
	split_sreg_range(0X23F4C,"T",0X1,3);
	split_sreg_range(0X23F9C,"T",0X1,3);
	split_sreg_range(0X23FC4,"T",0X1,3);
	split_sreg_range(0X23FC8,"T",0X1,3);
	split_sreg_range(0X23FDA,"T",0X1,3);
	split_sreg_range(0X24230,"T",0X1,3);
	split_sreg_range(0X242AE,"T",0X1,3);
	split_sreg_range(0X242C6,"T",0X1,3);
	split_sreg_range(0X242F2,"T",0X1,3);
	split_sreg_range(0X2434E,"T",0X1,3);
	split_sreg_range(0X24418,"T",0X1,3);
	split_sreg_range(0X244F2,"T",0X1,3);
	split_sreg_range(0X2450C,"T",0X1,3);
	split_sreg_range(0X24522,"T",0X1,3);
	split_sreg_range(0X2453A,"T",0X1,3);
	split_sreg_range(0X2453C,"T",0X1,3);
	split_sreg_range(0X24544,"T",0X1,3);
	split_sreg_range(0X24568,"T",0X1,3);
	split_sreg_range(0X24570,"T",0X1,3);
	split_sreg_range(0X2457A,"T",0X1,3);
	split_sreg_range(0X24582,"T",0X1,3);
	split_sreg_range(0X24592,"T",0X1,3);
	split_sreg_range(0X245AC,"T",0X1,3);
	split_sreg_range(0X245F0,"T",0X1,3);
	split_sreg_range(0X245F8,"T",0X1,3);
	split_sreg_range(0X24614,"T",0X1,3);
	split_sreg_range(0X24624,"T",0X1,3);
	split_sreg_range(0X24640,"T",0X1,3);
	split_sreg_range(0X24650,"T",0X1,3);
	split_sreg_range(0X24680,"T",0X1,3);
	split_sreg_range(0X24694,"T",0X1,3);
	split_sreg_range(0X2469A,"T",0X1,3);
	split_sreg_range(0X246B4,"T",0X1,3);
	split_sreg_range(0X246C4,"T",0X1,3);
	split_sreg_range(0X246D8,"T",0X1,3);
	split_sreg_range(0X24730,"T",0X1,3);
	split_sreg_range(0X24748,"T",0X1,3);
	split_sreg_range(0X24754,"T",0X1,3);
	split_sreg_range(0X24768,"T",0X1,3);
	split_sreg_range(0X24792,"T",0X1,3);
	split_sreg_range(0X247C0,"T",0X1,3);
	split_sreg_range(0X247D8,"T",0X1,3);
	split_sreg_range(0X247F0,"T",0X1,3);
	split_sreg_range(0X24804,"T",0X1,3);
	split_sreg_range(0X24814,"T",0X1,3);
	split_sreg_range(0X2482C,"T",0X1,3);
	split_sreg_range(0X24932,"T",0X1,3);
	split_sreg_range(0X2494C,"T",0X1,3);
	split_sreg_range(0X24960,"T",0X1,3);
	split_sreg_range(0X24972,"T",0X1,3);
	split_sreg_range(0X249C4,"T",0X1,3);
	split_sreg_range(0X249D6,"T",0X1,3);
	split_sreg_range(0X249E8,"T",0X1,3);
	split_sreg_range(0X249F4,"T",0X1,3);
	split_sreg_range(0X24A0E,"T",0X1,3);
	split_sreg_range(0X24A1C,"T",0X1,3);
	split_sreg_range(0X24A3E,"T",0X1,3);
	split_sreg_range(0X24A46,"T",0X1,3);
	split_sreg_range(0X24ADC,"T",0X1,3);
	split_sreg_range(0X24AFC,"T",0X1,3);
	split_sreg_range(0X24B0E,"T",0X1,3);
	split_sreg_range(0X24B12,"T",0X1,3);
	split_sreg_range(0X24B2A,"T",0X1,3);
	split_sreg_range(0X24B3E,"T",0X1,3);
	split_sreg_range(0X24B54,"T",0X1,3);
	split_sreg_range(0X24B86,"T",0X1,3);
	split_sreg_range(0X24B98,"T",0X1,3);
	split_sreg_range(0X24BA2,"T",0X1,3);
	split_sreg_range(0X24BB4,"T",0X1,3);
	split_sreg_range(0X24BDA,"T",0X1,3);
	split_sreg_range(0X24BF0,"T",0X1,3);
	split_sreg_range(0X24BF6,"T",0X1,3);
	split_sreg_range(0X24BFC,"T",0X1,3);
	split_sreg_range(0X24C0E,"T",0X1,3);
	split_sreg_range(0X24C36,"T",0X1,3);
	split_sreg_range(0X24C3C,"T",0X1,3);
	split_sreg_range(0X24C5C,"T",0X1,3);
	split_sreg_range(0X24C64,"T",0X1,3);
	split_sreg_range(0X24C84,"T",0X1,3);
	split_sreg_range(0X24C96,"T",0X1,3);
	split_sreg_range(0X24C9A,"T",0X1,3);
	split_sreg_range(0X24CB2,"T",0X1,3);
	split_sreg_range(0X24CC6,"T",0X1,3);
	split_sreg_range(0X24CDC,"T",0X1,3);
	split_sreg_range(0X24D60,"T",0X1,3);
	split_sreg_range(0X24D76,"T",0X1,3);
	split_sreg_range(0X24D9A,"T",0X1,3);
	split_sreg_range(0X24DA4,"T",0X1,3);
	split_sreg_range(0X24DD6,"T",0X1,3);
	split_sreg_range(0X24DF4,"T",0X1,3);
	split_sreg_range(0X24E0E,"T",0X1,3);
	split_sreg_range(0X24E16,"T",0X1,3);
	split_sreg_range(0X24E20,"T",0X1,3);
	split_sreg_range(0X24E30,"T",0X1,3);
	split_sreg_range(0X24E4C,"T",0X1,3);
	split_sreg_range(0X24E72,"T",0X1,3);
	split_sreg_range(0X24E78,"T",0X1,3);
	split_sreg_range(0X24E7C,"T",0X1,3);
	split_sreg_range(0X24E9C,"T",0X1,3);
	split_sreg_range(0X24ECC,"T",0X1,3);
	split_sreg_range(0X24ED8,"T",0X1,3);
	split_sreg_range(0X24EF8,"T",0X1,3);
	split_sreg_range(0X24F0A,"T",0X1,3);
	split_sreg_range(0X24F0E,"T",0X1,3);
	split_sreg_range(0X24F26,"T",0X1,3);
	split_sreg_range(0X24F3A,"T",0X1,3);
	split_sreg_range(0X24F44,"T",0X1,3);
	split_sreg_range(0X24F5C,"T",0X1,3);
	split_sreg_range(0X24F8A,"T",0X1,3);
	split_sreg_range(0X25086,"T",0X1,3);
	split_sreg_range(0X250C0,"T",0X1,3);
	split_sreg_range(0X250E2,"T",0X1,3);
	split_sreg_range(0X250F2,"T",0X1,3);
	split_sreg_range(0X2510A,"T",0X1,3);
	split_sreg_range(0X25118,"T",0X1,3);
	split_sreg_range(0X25128,"T",0X1,3);
	split_sreg_range(0X25138,"T",0X1,3);
	split_sreg_range(0X25150,"T",0X1,3);
	split_sreg_range(0X251A8,"T",0X1,3);
	split_sreg_range(0X251CE,"T",0X1,3);
	split_sreg_range(0X251F2,"T",0X1,3);
	split_sreg_range(0X251FC,"T",0X1,3);
	split_sreg_range(0X25236,"T",0X1,3);
	split_sreg_range(0X2525E,"T",0X1,3);
	split_sreg_range(0X2527E,"T",0X1,3);
	split_sreg_range(0X2528A,"T",0X1,3);
	split_sreg_range(0X25294,"T",0X1,3);
	split_sreg_range(0X2529A,"T",0X1,3);
	split_sreg_range(0X252AA,"T",0X1,3);
	split_sreg_range(0X252B0,"T",0X1,3);
	split_sreg_range(0X252CA,"T",0X1,3);
	split_sreg_range(0X252E0,"T",0X1,3);
	split_sreg_range(0X252FC,"T",0X1,3);
	split_sreg_range(0X25324,"T",0X1,3);
	split_sreg_range(0X25354,"T",0X1,3);
	split_sreg_range(0X25362,"T",0X1,3);
	split_sreg_range(0X253BC,"T",0X1,3);
	split_sreg_range(0X253D0,"T",0X1,3);
	split_sreg_range(0X253D8,"T",0X1,3);
	split_sreg_range(0X253FA,"T",0X1,3);
	split_sreg_range(0X2540C,"T",0X1,3);
	split_sreg_range(0X25418,"T",0X1,3);
	split_sreg_range(0X25424,"T",0X1,3);
	split_sreg_range(0X2543C,"T",0X1,3);
	split_sreg_range(0X254EA,"T",0X1,3);
	split_sreg_range(0X25548,"T",0X1,3);
	split_sreg_range(0X25560,"T",0X1,3);
	split_sreg_range(0X25586,"T",0X1,3);
	split_sreg_range(0X25598,"T",0X1,3);
	split_sreg_range(0X2559E,"T",0X1,3);
	split_sreg_range(0X255AA,"T",0X1,3);
	split_sreg_range(0X255C0,"T",0X1,3);
	split_sreg_range(0X255DC,"T",0X1,3);
	split_sreg_range(0X255F8,"T",0X1,3);
	split_sreg_range(0X2560E,"T",0X1,3);
	split_sreg_range(0X25622,"T",0X1,3);
	split_sreg_range(0X25630,"T",0X1,3);
	split_sreg_range(0X25638,"T",0X1,3);
	split_sreg_range(0X25666,"T",0X1,3);
	split_sreg_range(0X25668,"T",0X1,3);
	split_sreg_range(0X2568C,"T",0X1,3);
	split_sreg_range(0X25690,"T",0X1,3);
	split_sreg_range(0X256A8,"T",0X1,3);
	split_sreg_range(0X256BA,"T",0X1,3);
	split_sreg_range(0X256BE,"T",0X1,3);
	split_sreg_range(0X256CE,"T",0X1,3);
	split_sreg_range(0X256E2,"T",0X1,3);
	split_sreg_range(0X256F8,"T",0X1,3);
	split_sreg_range(0X2578C,"T",0X1,3);
	split_sreg_range(0X257A0,"T",0X1,3);
	split_sreg_range(0X257C0,"T",0X1,3);
	split_sreg_range(0X257DE,"T",0X1,3);
	split_sreg_range(0X257E6,"T",0X1,3);
	split_sreg_range(0X257F0,"T",0X1,3);
	split_sreg_range(0X257FA,"T",0X1,3);
	split_sreg_range(0X25814,"T",0X1,3);
	split_sreg_range(0X25838,"T",0X1,3);
	split_sreg_range(0X2583E,"T",0X1,3);
	split_sreg_range(0X25842,"T",0X1,3);
	split_sreg_range(0X25862,"T",0X1,3);
	split_sreg_range(0X25886,"T",0X1,3);
	split_sreg_range(0X25890,"T",0X1,3);
	split_sreg_range(0X258A4,"T",0X1,3);
	split_sreg_range(0X258B2,"T",0X1,3);
	split_sreg_range(0X258C0,"T",0X1,3);
	split_sreg_range(0X2590E,"T",0X1,3);
	split_sreg_range(0X25926,"T",0X1,3);
	split_sreg_range(0X25936,"T",0X1,3);
	split_sreg_range(0X2595C,"T",0X1,3);
	split_sreg_range(0X25962,"T",0X1,3);
	split_sreg_range(0X2596E,"T",0X1,3);
	split_sreg_range(0X2597E,"T",0X1,3);
	split_sreg_range(0X2598E,"T",0X1,3);
	split_sreg_range(0X25992,"T",0X1,3);
	split_sreg_range(0X259BC,"T",0X1,3);
	split_sreg_range(0X259C8,"T",0X1,3);
	split_sreg_range(0X259E0,"T",0X1,3);
	split_sreg_range(0X259F6,"T",0X1,3);
	split_sreg_range(0X25A34,"T",0X1,3);
	split_sreg_range(0X25A3E,"T",0X1,3);
	split_sreg_range(0X25A52,"T",0X1,3);
	split_sreg_range(0X25A86,"T",0X1,3);
	split_sreg_range(0X25A8C,"T",0X1,3);
	split_sreg_range(0X25A9E,"T",0X1,3);
	split_sreg_range(0X25AA2,"T",0X1,3);
	split_sreg_range(0X25AA6,"T",0X1,3);
	split_sreg_range(0X25AAA,"T",0X1,3);
	split_sreg_range(0X25ABE,"T",0X1,3);
	split_sreg_range(0X25AD4,"T",0X1,3);
	split_sreg_range(0X25B34,"T",0X1,3);
	split_sreg_range(0X25BA0,"T",0,3);
	split_sreg_range(0X10000000,"T",0,3);
	split_sreg_range(0X40000000,"T",0,3);
	split_sreg_range(0XA0001020,"T",0,3);
	split_sreg_range(0XE0000000,"T",0,3);
	split_sreg_range(0XA000,"DS",0X4,3);
	split_sreg_range(0X25BA0,"DS",0X4,3);
	split_sreg_range(0X10000000,"DS",0X4,3);
	split_sreg_range(0X40000000,"DS",0X4,3);
	split_sreg_range(0XA0001020,"DS",0X4,3);
	split_sreg_range(0XE0000000,"DS",0X4,3);
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
	Bytes_1();
	Bytes_2();
	Bytes_3();
	Bytes_4();
	Bytes_5();
        end_type_updating(UTP_STRUCT);
}

// End of file.
